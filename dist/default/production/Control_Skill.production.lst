

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 20 16:39:11 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44  0000                     
    45                           ; Generated 09/02/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F25K50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    81  0000                     
    82 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    83  0000                     
    84 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    85  0000                     
    86                           	psect	smallconst
    87  000800                     __psmallconst:
    88                           	callstack 0
    89  000800  00                 	db	0
    90  000801                     _dpowers:
    91                           	callstack 0
    92  000801  0001               	dw	1
    93  000803  0000               	dw	0
    94  000805  000A               	dw	10
    95  000807  0000               	dw	0
    96  000809  0064               	dw	100
    97  00080B  0000               	dw	0
    98  00080D  03E8               	dw	1000
    99  00080F  0000               	dw	0
   100  000811  2710               	dw	10000
   101  000813  0000               	dw	0
   102  000815  86A0               	dw	34464
   103  000817  0001               	dw	1
   104  000819  4240               	dw	16960
   105  00081B  000F               	dw	15
   106  00081D  9680               	dw	38528
   107  00081F  0098               	dw	152
   108  000821  E100               	dw	57600
   109  000823  05F5               	dw	1525
   110  000825  CA00               	dw	51712
   111  000827  3B9A               	dw	15258
   112  000829                     __end_of_dpowers:
   113                           	callstack 0
   114  000829                     _hexpowers:
   115                           	callstack 0
   116  000829  0001               	dw	1
   117  00082B  0000               	dw	0
   118  00082D  0010               	dw	16
   119  00082F  0000               	dw	0
   120  000831  0100               	dw	256
   121  000833  0000               	dw	0
   122  000835  1000               	dw	4096
   123  000837  0000               	dw	0
   124  000839  0000               	dw	0
   125  00083B  0001               	dw	1
   126  00083D  0000               	dw	0
   127  00083F  0010               	dw	16
   128  000841  0000               	dw	0
   129  000843  0100               	dw	256
   130  000845  0000               	dw	0
   131  000847  1000               	dw	4096
   132  000849                     __end_of_hexpowers:
   133                           	callstack 0
   134  0000                     _TXREG1	set	4013
   135  0000                     _RCREG1	set	4014
   136  0000                     _SPBRG1	set	4015
   137  0000                     _TXSTA1	set	4012
   138  000849                     STR_12:
   139  000849  30                 	db	48	;'0'
   140  00084A  31                 	db	49	;'1'
   141  00084B  32                 	db	50	;'2'
   142  00084C  33                 	db	51	;'3'
   143  00084D  34                 	db	52	;'4'
   144  00084E  35                 	db	53	;'5'
   145  00084F  36                 	db	54	;'6'
   146  000850  37                 	db	55	;'7'
   147  000851  38                 	db	56	;'8'
   148  000852  39                 	db	57	;'9'
   149  000853  61                 	db	97	;'a'
   150  000854  62                 	db	98	;'b'
   151  000855  63                 	db	99	;'c'
   152  000856  64                 	db	100	;'d'
   153  000857  65                 	db	101	;'e'
   154  000858  66                 	db	102	;'f'
   155  000859  00                 	db	0
   156  00085A                     STR_6:
   157  00085A  43                 	db	67	;'C'
   158  00085B  4F                 	db	79	;'O'
   159  00085C  44                 	db	68	;'D'
   160  00085D  49                 	db	73	;'I'
   161  00085E  47                 	db	71	;'G'
   162  00085F  4F                 	db	79	;'O'
   163  000860  20                 	db	32
   164  000861  49                 	db	73	;'I'
   165  000862  52                 	db	82	;'R'
   166  000863  20                 	db	32
   167  000864  3D                 	db	61	;'='
   168  000865  20                 	db	32
   169  000866  00                 	db	0
   170  000867                     STR_9:
   171  000867  43                 	db	67	;'C'
   172  000868  4F                 	db	79	;'O'
   173  000869  4D                 	db	77	;'M'
   174  00086A  41                 	db	65	;'A'
   175  00086B  4E                 	db	78	;'N'
   176  00086C  44                 	db	68	;'D'
   177  00086D  4F                 	db	79	;'O'
   178  00086E  31                 	db	49	;'1'
   179  00086F  00                 	db	0
   180  000870                     STR_10:
   181  000870  43                 	db	67	;'C'
   182  000871  4F                 	db	79	;'O'
   183  000872  4D                 	db	77	;'M'
   184  000873  41                 	db	65	;'A'
   185  000874  4E                 	db	78	;'N'
   186  000875  44                 	db	68	;'D'
   187  000876  4F                 	db	79	;'O'
   188  000877  32                 	db	50	;'2'
   189  000878  00                 	db	0
   190  000879                     STR_11:
   191  000879  43                 	db	67	;'C'
   192  00087A  4F                 	db	79	;'O'
   193  00087B  4D                 	db	77	;'M'
   194  00087C  41                 	db	65	;'A'
   195  00087D  4E                 	db	78	;'N'
   196  00087E  44                 	db	68	;'D'
   197  00087F  4F                 	db	79	;'O'
   198  000880  33                 	db	51	;'3'
   199  000881  00                 	db	0
   200  000882                     STR_1:
   201  000882  53                 	db	83	;'S'
   202  000883  6F                 	db	111	;'o'
   203  000884  6E                 	db	110	;'n'
   204  000885  3A                 	db	58	;':'
   205  000886  20                 	db	32
   206  000887  00                 	db	0
   207  000888                     STR_5:
   208  000888  25                 	db	37
   209  000889  6C                 	db	108	;'l'
   210  00088A  78                 	db	120	;'x'
   211  00088B  00                 	db	0
   212  00088C                     STR_2:
   213  00088C  25                 	db	37
   214  00088D  64                 	db	100	;'d'
   215  00088E  00                 	db	0
   216  00088F                     STR_4:
   217  00088F  0A                 	db	10
   218  000890  00                 	db	0
   219  000891                     STR_3:
   220  000891  0D                 	db	13
   221  000892  00                 	db	0
   222  000893  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           	psect	nvCOMRAM
   225  000052                     __pnvCOMRAM:
   226                           	callstack 0
   227  000052                     _INT1_InterruptHandler:
   228                           	callstack 0
   229  000052                     	ds	2
   230  000054                     _EUSART1_ErrorHandler:
   231                           	callstack 0
   232  000054                     	ds	2
   233  000056                     _EUSART1_OverrunErrorHandler:
   234                           	callstack 0
   235  000056                     	ds	2
   236  000058                     _EUSART1_FramingErrorHandler:
   237                           	callstack 0
   238  000058                     	ds	2
   239  00005A                     _timer0ReloadVal:
   240                           	callstack 0
   241  00005A                     	ds	1
   242  0000                     _TMR0	set	4054
   243  0000                     _T0CONbits	set	4053
   244  0000                     _RCSTA1bits	set	4011
   245  0000                     _TXSTA1bits	set	4012
   246  0000                     _LATB0	set	31824
   247  0000                     _INT1E	set	32643
   248  0000                     _LATA5	set	31821
   249  0000                     _LATA4	set	31820
   250  0000                     _LATA3	set	31819
   251  0000                     _INT1IE	set	32643
   252  0000                     _TMR0IF	set	32658
   253  0000                     _INTEDG1	set	32653
   254  0000                     _INT1IF	set	32640
   255  0000                     _ANSELA	set	3931
   256  0000                     _ANSELB	set	3932
   257  0000                     _ANSELC	set	3933
   258  0000                     _LATA	set	3977
   259  0000                     _OSCTUNE	set	3995
   260  0000                     _PIR1bits	set	3998
   261  0000                     _RCSTA1	set	4011
   262  0000                     _BAUDCON1	set	4024
   263  0000                     _RCONbits	set	4048
   264  0000                     _OSCCON2	set	4050
   265  0000                     _OSCCON	set	4051
   266  0000                     _ACTCON	set	4021
   267  0000                     _SPBRGH1	set	4016
   268  0000                     _T0CON	set	4053
   269  0000                     _TMR0L	set	4054
   270  0000                     _TMR0H	set	4055
   271  0000                     _INTCON2bits	set	4081
   272  0000                     _TRISA	set	3986
   273  0000                     _LATC	set	3979
   274  0000                     _LATB	set	3978
   275  0000                     _TRISC	set	3988
   276  0000                     _TRISB	set	3987
   277  0000                     _WPUB	set	3973
   278  0000                     _INTCONbits	set	4082
   279  0000                     _INTCON3bits	set	4080
   280                           
   281                           ; #config settings
   282                           
   283                           	psect	cinit
   284  001A06                     __pcinit:
   285                           	callstack 0
   286  001A06                     start_initialization:
   287                           	callstack 0
   288  001A06                     __initialization:
   289                           	callstack 0
   290                           
   291                           ; Clear objects allocated to BANK0 (70 bytes)
   292  001A06  EE00  F060         	lfsr	0,__pbssBANK0
   293  001A0A  0E46               	movlw	70
   294  001A0C                     clear_0:
   295  001A0C  6AEE               	clrf	postinc0,c
   296  001A0E  06E8               	decf	wreg,f,c
   297  001A10  E1FD               	bnz	clear_0
   298                           
   299                           ; Clear objects allocated to COMRAM (20 bytes)
   300  001A12  EE00  F03E         	lfsr	0,__pbssCOMRAM
   301  001A16  0E14               	movlw	20
   302  001A18                     clear_1:
   303  001A18  6AEE               	clrf	postinc0,c
   304  001A1A  06E8               	decf	wreg,f,c
   305  001A1C  E1FD               	bnz	clear_1
   306  001A1E                     end_of_initialization:
   307                           	callstack 0
   308  001A1E                     __end_of__initialization:
   309                           	callstack 0
   310  001A1E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   311  001A20  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   312  001A22  0E00               	movlw	low (__Lmediumconst shr (0+16))
   313  001A24  6EF8               	movwf	tblptru,c
   314  001A26  0100               	movlb	0
   315  001A28  EF37  F008         	goto	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMRAM
   318  00003E                     __pbssCOMRAM:
   319                           	callstack 0
   320  00003E                     _codigo_ir:
   321                           	callstack 0
   322  00003E                     	ds	4
   323  000042                     _cuenta:
   324                           	callstack 0
   325  000042                     	ds	2
   326  000044                     _timer_aux:
   327                           	callstack 0
   328  000044                     	ds	1
   329  000045                     _cont:
   330                           	callstack 0
   331  000045                     	ds	1
   332  000046                     _flag_codigo:
   333                           	callstack 0
   334  000046                     	ds	1
   335  000047                     _eusart1RxLastError:
   336                           	callstack 0
   337  000047                     	ds	1
   338  000048                     _texto:
   339                           	callstack 0
   340  000048                     	ds	10
   341                           
   342                           	psect	bssBANK0
   343  000060                     __pbssBANK0:
   344                           	callstack 0
   345  000060                     _tiempo:
   346                           	callstack 0
   347  000060                     	ds	70
   348                           
   349                           	psect	cstackCOMRAM
   350  000001                     __pcstackCOMRAM:
   351                           	callstack 0
   352  000001                     ??_INTERRUPT_InterruptManager:
   353  000001                     
   354                           ; 1 bytes @ 0x0
   355  000001                     	ds	4
   356  000005                     ?___lmul:
   357                           	callstack 0
   358  000005                     ?___lldiv:
   359                           	callstack 0
   360  000005                     ?___xxtofl:
   361                           	callstack 0
   362  000005                     EUSART1_Write@txData:
   363                           	callstack 0
   364  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   365                           	callstack 0
   366  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   367                           	callstack 0
   368  000005                     EUSART1_SetErrorHandler@interruptHandler:
   369                           	callstack 0
   370  000005                     INT1_SetInterruptHandler@InterruptHandler:
   371                           	callstack 0
   372  000005                     ___lmul@multiplier:
   373                           	callstack 0
   374  000005                     ___lldiv@dividend:
   375                           	callstack 0
   376  000005                     ___xxtofl@val:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0x4
   380  000005                     	ds	1
   381  000006                     EUSART1_Write_string@data:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x5
   385  000006                     	ds	1
   386  000007                     
   387                           ; 1 bytes @ 0x6
   388  000007                     	ds	1
   389  000008                     
   390                           ; 1 bytes @ 0x7
   391  000008                     	ds	1
   392  000009                     ??___xxtofl:
   393  000009                     ___lmul@multiplicand:
   394                           	callstack 0
   395  000009                     ___lldiv@divisor:
   396                           	callstack 0
   397                           
   398                           ; 4 bytes @ 0x8
   399  000009                     	ds	4
   400  00000D                     ___xxtofl@sign:
   401                           	callstack 0
   402  00000D                     ___lmul@product:
   403                           	callstack 0
   404  00000D                     ___lldiv@quotient:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0xC
   408  00000D                     	ds	1
   409  00000E                     ___xxtofl@exp:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0xD
   413  00000E                     	ds	1
   414  00000F                     ___xxtofl@arg:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0xE
   418  00000F                     	ds	2
   419  000011                     ?_Hash_algoritmo:
   420                           	callstack 0
   421  000011                     ___lldiv@counter:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x10
   425  000011                     	ds	1
   426  000012                     ?___llmod:
   427                           	callstack 0
   428  000012                     ___llmod@dividend:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x11
   432  000012                     	ds	1
   433  000013                     ?___flmul:
   434                           	callstack 0
   435  000013                     ___flmul@b:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x12
   439  000013                     	ds	2
   440  000015                     ??_Hash_algoritmo:
   441                           
   442                           ; 1 bytes @ 0x14
   443  000015                     	ds	1
   444  000016                     ___llmod@divisor:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x15
   448  000016                     	ds	1
   449  000017                     ___flmul@a:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x16
   453  000017                     	ds	3
   454  00001A                     ___llmod@counter:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x19
   458  00001A                     	ds	1
   459  00001B                     ??___flmul:
   460  00001B                     ?_sprintf:
   461                           	callstack 0
   462  00001B                     sprintf@sp:
   463                           	callstack 0
   464  00001B                     Hash_algoritmo@hash_acum:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0x1A
   468  00001B                     	ds	2
   469  00001D                     sprintf@f:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x1C
   473  00001D                     	ds	2
   474  00001F                     ___flmul@sign:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x1E
   478  00001F                     	ds	1
   479  000020                     ___flmul@grs:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x1F
   483  000020                     	ds	3
   484  000023                     ??_sprintf:
   485                           
   486                           ; 1 bytes @ 0x22
   487  000023                     	ds	1
   488  000024                     ___flmul@aexp:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x23
   492  000024                     	ds	1
   493  000025                     sprintf@idx:
   494                           	callstack 0
   495  000025                     ___flmul@bexp:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x24
   499  000025                     	ds	1
   500  000026                     sprintf@prec:
   501                           	callstack 0
   502  000026                     ___flmul@prod:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x25
   506  000026                     	ds	2
   507  000028                     sprintf@ap:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x27
   511  000028                     	ds	2
   512  00002A                     ___flmul@temp:
   513                           	callstack 0
   514  00002A                     sprintf@val:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x29
   518  00002A                     	ds	2
   519  00002C                     ___flge@ff1:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x2B
   523  00002C                     	ds	2
   524  00002E                     sprintf@flag:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x2D
   528  00002E                     	ds	1
   529  00002F                     sprintf@c:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x2E
   533  00002F                     	ds	1
   534  000030                     ___flge@ff2:
   535                           	callstack 0
   536                           
   537                           ; 4 bytes @ 0x2F
   538  000030                     	ds	4
   539  000034                     ??___flge:
   540                           
   541                           ; 1 bytes @ 0x33
   542  000034                     	ds	4
   543  000038                     ??_normaliza:
   544                           
   545                           ; 1 bytes @ 0x37
   546  000038                     	ds	4
   547  00003C                     ??_main:
   548                           
   549                           ; 1 bytes @ 0x3B
   550  00003C                     	ds	2
   551                           
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 234 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   571 ;;      Params:         0       0       0       0       0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0       0       0       0       0
   573 ;;      Temps:          2       0       0       0       0       0       0       0       0
   574 ;;      Totals:         2       0       0       0       0       0       0       0       0
   575 ;;Total ram usage:        2 bytes
   576 ;; Hardware stack levels required when called: 7
   577 ;; This function calls:
   578 ;;		_EUSART1_Write_string
   579 ;;		_Hash_algoritmo
   580 ;;		_SYSTEM_Initialize
   581 ;;		_normaliza
   582 ;;		_sprintf
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text0
   589  00106E                     __ptext0:
   590                           	callstack 0
   591  00106E                     _main:
   592                           	callstack 24
   593  00106E                     
   594                           ;main.c: 237: SYSTEM_Initialize();
   595  00106E  EC16  F00D         	call	_SYSTEM_Initialize	;wreg free
   596  001072                     
   597                           ;main.c: 239: ANSELA = 0b00000111;
   598  001072  0E07               	movlw	7
   599  001074  010F               	movlb	15	; () banked
   600  001076  6F5B               	movwf	91,b	;volatile
   601  001078                     
   602                           ; BSR set to: 15
   603                           ;main.c: 240: ANSELC = 0x00;
   604  001078  0E00               	movlw	0
   605  00107A  6F5D               	movwf	93,b	;volatile
   606  00107C                     
   607                           ; BSR set to: 15
   608                           ;main.c: 247: (INTCONbits.GIE = 1);
   609  00107C  8EF2               	bsf	242,7,c	;volatile
   610  00107E                     
   611                           ; BSR set to: 15
   612                           ;main.c: 253: (INTCONbits.PEIE = 1);
   613  00107E  8CF2               	bsf	242,6,c	;volatile
   614  001080                     l2231:
   615                           
   616                           ;main.c: 265: {;main.c: 267: if (flag_codigo == 1)
   617  001080  0446               	decf	_flag_codigo^0,w,c
   618  001082  A4D8               	btfss	status,2,c
   619  001084  EF46  F008         	goto	u1601
   620  001088  EF48  F008         	goto	u1600
   621  00108C                     u1601:
   622  00108C  EF28  F009         	goto	l2289
   623  001090                     u1600:
   624  001090                     
   625                           ;main.c: 268: {;main.c: 271: normaliza();
   626  001090  EC1B  F00A         	call	_normaliza	;wreg free
   627  001094                     
   628                           ;main.c: 272: codigo_ir = Hash_algoritmo();
   629  001094  EC69  F00B         	call	_Hash_algoritmo	;wreg free
   630  001098  C011  F03E         	movff	?_Hash_algoritmo,_codigo_ir
   631  00109C  C012  F03F         	movff	?_Hash_algoritmo+1,_codigo_ir+1
   632  0010A0  C013  F040         	movff	?_Hash_algoritmo+2,_codigo_ir+2
   633  0010A4  C014  F041         	movff	?_Hash_algoritmo+3,_codigo_ir+3
   634  0010A8                     
   635                           ;main.c: 273: EUSART1_Write_string("Son: ");
   636  0010A8  0E82               	movlw	low STR_1
   637  0010AA  6E06               	movwf	EUSART1_Write_string@data^0,c
   638  0010AC  0E08               	movlw	high STR_1
   639  0010AE  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   640  0010B0  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   641  0010B4                     
   642                           ;main.c: 274: sprintf(texto, "%d", cuenta);
   643  0010B4  0E48               	movlw	low _texto
   644  0010B6  6E1B               	movwf	sprintf@sp^0,c
   645  0010B8  0E00               	movlw	high _texto
   646  0010BA  6E1C               	movwf	(sprintf@sp+1)^0,c
   647  0010BC  0E8C               	movlw	low STR_2
   648  0010BE  6E1D               	movwf	sprintf@f^0,c
   649  0010C0  0E08               	movlw	high STR_2
   650  0010C2  6E1E               	movwf	(sprintf@f+1)^0,c
   651  0010C4  C042  F01F         	movff	_cuenta,?_sprintf+4
   652  0010C8  C043  F020         	movff	_cuenta+1,?_sprintf+5
   653  0010CC  EC5F  F006         	call	_sprintf	;wreg free
   654  0010D0                     
   655                           ;main.c: 275: EUSART1_Write_string(texto);
   656  0010D0  0E48               	movlw	low _texto
   657  0010D2  6E06               	movwf	EUSART1_Write_string@data^0,c
   658  0010D4  0E00               	movlw	high _texto
   659  0010D6  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   660  0010D8  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   661  0010DC                     
   662                           ;main.c: 276: EUSART1_Write_string("\r");
   663  0010DC  0E91               	movlw	low STR_3
   664  0010DE  6E06               	movwf	EUSART1_Write_string@data^0,c
   665  0010E0  0E08               	movlw	high STR_3
   666  0010E2  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   667  0010E4  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   668  0010E8                     
   669                           ;main.c: 277: EUSART1_Write_string("\n");
   670  0010E8  0E8F               	movlw	low STR_4
   671  0010EA  6E06               	movwf	EUSART1_Write_string@data^0,c
   672  0010EC  0E08               	movlw	high STR_4
   673  0010EE  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   674  0010F0  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   675  0010F4                     
   676                           ;main.c: 278: sprintf(texto, "%lx", codigo_ir);
   677  0010F4  0E48               	movlw	low _texto
   678  0010F6  6E1B               	movwf	sprintf@sp^0,c
   679  0010F8  0E00               	movlw	high _texto
   680  0010FA  6E1C               	movwf	(sprintf@sp+1)^0,c
   681  0010FC  0E88               	movlw	low STR_5
   682  0010FE  6E1D               	movwf	sprintf@f^0,c
   683  001100  0E08               	movlw	high STR_5
   684  001102  6E1E               	movwf	(sprintf@f+1)^0,c
   685  001104  C03E  F01F         	movff	_codigo_ir,?_sprintf+4
   686  001108  C03F  F020         	movff	_codigo_ir+1,?_sprintf+5
   687  00110C  C040  F021         	movff	_codigo_ir+2,?_sprintf+6
   688  001110  C041  F022         	movff	_codigo_ir+3,?_sprintf+7
   689  001114  EC5F  F006         	call	_sprintf	;wreg free
   690  001118                     
   691                           ;main.c: 279: EUSART1_Write_string("CODIGO IR = ");
   692  001118  0E5A               	movlw	low STR_6
   693  00111A  6E06               	movwf	EUSART1_Write_string@data^0,c
   694  00111C  0E08               	movlw	high STR_6
   695  00111E  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   696  001120  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   697  001124                     
   698                           ;main.c: 280: EUSART1_Write_string(texto);
   699  001124  0E48               	movlw	low _texto
   700  001126  6E06               	movwf	EUSART1_Write_string@data^0,c
   701  001128  0E00               	movlw	high _texto
   702  00112A  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   703  00112C  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   704  001130                     
   705                           ;main.c: 281: EUSART1_Write_string("\r");
   706  001130  0E91               	movlw	low STR_3
   707  001132  6E06               	movwf	EUSART1_Write_string@data^0,c
   708  001134  0E08               	movlw	high STR_3
   709  001136  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   710  001138  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   711  00113C                     
   712                           ;main.c: 282: EUSART1_Write_string("\n");
   713  00113C  0E8F               	movlw	low STR_4
   714  00113E  6E06               	movwf	EUSART1_Write_string@data^0,c
   715  001140  0E08               	movlw	high STR_4
   716  001142  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   717  001144  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   718  001148                     
   719                           ;main.c: 284: if (codigo_ir == 0x811c9dc5)
   720  001148  0EC5               	movlw	197
   721  00114A  183E               	xorwf	_codigo_ir^0,w,c
   722  00114C  E10D               	bnz	u1611
   723  00114E  0E9D               	movlw	157
   724  001150  183F               	xorwf	(_codigo_ir+1)^0,w,c
   725  001152  E10A               	bnz	u1611
   726  001154  0E1C               	movlw	28
   727  001156  1840               	xorwf	(_codigo_ir+2)^0,w,c
   728  001158  E107               	bnz	u1611
   729  00115A  0E81               	movlw	129
   730  00115C  1841               	xorwf	(_codigo_ir+3)^0,w,c
   731  00115E  A4D8               	btfss	status,2,c
   732  001160  EFB4  F008         	goto	u1611
   733  001164  EFB6  F008         	goto	u1610
   734  001168                     u1611:
   735  001168  EFC7  F008         	goto	l2263
   736  00116C                     u1610:
   737  00116C                     
   738                           ;main.c: 285: {;main.c: 286: LATA3 =~ LATA3;
   739  00116C  A689               	btfss	3977,3,c	;volatile
   740  00116E  EFBB  F008         	goto	u1621
   741  001172  EFBE  F008         	goto	u1620
   742  001176                     u1621:
   743  001176  8689               	bsf	3977,3,c	;volatile
   744  001178  EFBF  F008         	goto	u1635
   745  00117C                     u1620:
   746  00117C  9689               	bcf	3977,3,c	;volatile
   747  00117E                     u1635:
   748  00117E                     
   749                           ;main.c: 287: EUSART1_Write_string("COMANDO1");
   750  00117E  0E67               	movlw	low STR_9
   751  001180  6E06               	movwf	EUSART1_Write_string@data^0,c
   752  001182  0E08               	movlw	high STR_9
   753  001184  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   754  001186  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   755                           
   756                           ;main.c: 289: }
   757  00118A  EF0B  F009         	goto	l2275
   758  00118E                     l2263:
   759                           
   760                           ;main.c: 290: else if (codigo_ir == 0xBF681DA0)
   761  00118E  0EA0               	movlw	160
   762  001190  183E               	xorwf	_codigo_ir^0,w,c
   763  001192  E10D               	bnz	u1641
   764  001194  0E1D               	movlw	29
   765  001196  183F               	xorwf	(_codigo_ir+1)^0,w,c
   766  001198  E10A               	bnz	u1641
   767  00119A  0E68               	movlw	104
   768  00119C  1840               	xorwf	(_codigo_ir+2)^0,w,c
   769  00119E  E107               	bnz	u1641
   770  0011A0  0EBF               	movlw	191
   771  0011A2  1841               	xorwf	(_codigo_ir+3)^0,w,c
   772  0011A4  A4D8               	btfss	status,2,c
   773  0011A6  EFD7  F008         	goto	u1641
   774  0011AA  EFD9  F008         	goto	u1640
   775  0011AE                     u1641:
   776  0011AE  EFEA  F008         	goto	l2269
   777  0011B2                     u1640:
   778  0011B2                     
   779                           ;main.c: 291: {;main.c: 292: LATA4 =~ LATA4;
   780  0011B2  A889               	btfss	3977,4,c	;volatile
   781  0011B4  EFDE  F008         	goto	u1651
   782  0011B8  EFE1  F008         	goto	u1650
   783  0011BC                     u1651:
   784  0011BC  8889               	bsf	3977,4,c	;volatile
   785  0011BE  EFE2  F008         	goto	u1665
   786  0011C2                     u1650:
   787  0011C2  9889               	bcf	3977,4,c	;volatile
   788  0011C4                     u1665:
   789  0011C4                     
   790                           ;main.c: 293: EUSART1_Write_string("COMANDO2");
   791  0011C4  0E70               	movlw	low STR_10
   792  0011C6  6E06               	movwf	EUSART1_Write_string@data^0,c
   793  0011C8  0E08               	movlw	high STR_10
   794  0011CA  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   795  0011CC  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   796                           
   797                           ;main.c: 294: }
   798  0011D0  EF0B  F009         	goto	l2275
   799  0011D4                     l2269:
   800                           
   801                           ;main.c: 296: else if (codigo_ir == 0xBF681DA0)
   802  0011D4  0EA0               	movlw	160
   803  0011D6  183E               	xorwf	_codigo_ir^0,w,c
   804  0011D8  E10D               	bnz	u1671
   805  0011DA  0E1D               	movlw	29
   806  0011DC  183F               	xorwf	(_codigo_ir+1)^0,w,c
   807  0011DE  E10A               	bnz	u1671
   808  0011E0  0E68               	movlw	104
   809  0011E2  1840               	xorwf	(_codigo_ir+2)^0,w,c
   810  0011E4  E107               	bnz	u1671
   811  0011E6  0EBF               	movlw	191
   812  0011E8  1841               	xorwf	(_codigo_ir+3)^0,w,c
   813  0011EA  A4D8               	btfss	status,2,c
   814  0011EC  EFFA  F008         	goto	u1671
   815  0011F0  EFFC  F008         	goto	u1670
   816  0011F4                     u1671:
   817  0011F4  EF0B  F009         	goto	l2275
   818  0011F8                     u1670:
   819  0011F8                     
   820                           ;main.c: 297: {;main.c: 298: LATA5 =~ LATA5;
   821  0011F8  AA89               	btfss	3977,5,c	;volatile
   822  0011FA  EF01  F009         	goto	u1681
   823  0011FE  EF04  F009         	goto	u1680
   824  001202                     u1681:
   825  001202  8A89               	bsf	3977,5,c	;volatile
   826  001204  EF05  F009         	goto	u1695
   827  001208                     u1680:
   828  001208  9A89               	bcf	3977,5,c	;volatile
   829  00120A                     u1695:
   830  00120A                     
   831                           ;main.c: 299: EUSART1_Write_string("COMANDO3");
   832  00120A  0E79               	movlw	low STR_11
   833  00120C  6E06               	movwf	EUSART1_Write_string@data^0,c
   834  00120E  0E08               	movlw	high STR_11
   835  001210  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   836  001212  EC87  F00C         	call	_EUSART1_Write_string	;wreg free
   837  001216                     l2275:
   838                           
   839                           ;main.c: 300: };main.c: 301: codigo_ir = 0;
   840  001216  0E00               	movlw	0
   841  001218  6E3E               	movwf	_codigo_ir^0,c
   842  00121A  0E00               	movlw	0
   843  00121C  6E3F               	movwf	(_codigo_ir+1)^0,c
   844  00121E  0E00               	movlw	0
   845  001220  6E40               	movwf	(_codigo_ir+2)^0,c
   846  001222  0E00               	movlw	0
   847  001224  6E41               	movwf	(_codigo_ir+3)^0,c
   848  001226                     
   849                           ;main.c: 303: _delay((unsigned long)((2000)*(16000000/4000.0)));
   850  001226  0E29               	movlw	41
   851  001228  6E3D               	movwf	(??_main+1)^0,c
   852  00122A  0E96               	movlw	150
   853  00122C  6E3C               	movwf	??_main^0,c
   854  00122E  0E7F               	movlw	127
   855  001230                     u1727:
   856  001230  2EE8               	decfsz	wreg,f,c
   857  001232  D7FE               	bra	u1727
   858  001234  2E3C               	decfsz	??_main^0,f,c
   859  001236  D7FC               	bra	u1727
   860  001238  2E3D               	decfsz	(??_main+1)^0,f,c
   861  00123A  D7FA               	bra	u1727
   862  00123C  F000               	nop	
   863  00123E                     
   864                           ;main.c: 305: flag_codigo = 0;
   865  00123E  0E00               	movlw	0
   866  001240  6E46               	movwf	_flag_codigo^0,c
   867  001242                     
   868                           ;main.c: 306: cuenta = 0;
   869  001242  0E00               	movlw	0
   870  001244  6E43               	movwf	(_cuenta+1)^0,c
   871  001246  0E00               	movlw	0
   872  001248  6E42               	movwf	_cuenta^0,c
   873  00124A                     
   874                           ;main.c: 307: INTEDG1 = 0;
   875  00124A  9AF1               	bcf	4081,5,c	;volatile
   876  00124C                     
   877                           ;main.c: 308: INT1IF = 0;
   878  00124C  90F0               	bcf	4080,0,c	;volatile
   879  00124E                     
   880                           ;main.c: 309: INT1E = 1;
   881  00124E  86F0               	bsf	4080,3,c	;volatile
   882  001250                     l2289:
   883                           
   884                           ;main.c: 310: };main.c: 311: _delay((unsigned long)((80)*(16000000/4000.0)));
   885  001250  0E02               	movlw	2
   886  001252  6E3D               	movwf	(??_main+1)^0,c
   887  001254  0EA0               	movlw	160
   888  001256  6E3C               	movwf	??_main^0,c
   889  001258  0E92               	movlw	146
   890  00125A                     u1737:
   891  00125A  2EE8               	decfsz	wreg,f,c
   892  00125C  D7FE               	bra	u1737
   893  00125E  2E3C               	decfsz	??_main^0,f,c
   894  001260  D7FC               	bra	u1737
   895  001262  2E3D               	decfsz	(??_main+1)^0,f,c
   896  001264  D7FA               	bra	u1737
   897  001266  D000               	nop2	
   898  001268                     
   899                           ;main.c: 312: LATB0 =~ LATB0;
   900  001268  A08A               	btfss	3978,0,c	;volatile
   901  00126A  EF39  F009         	goto	u1701
   902  00126E  EF3C  F009         	goto	u1700
   903  001272                     u1701:
   904  001272  808A               	bsf	3978,0,c	;volatile
   905  001274  EF3D  F009         	goto	u1715
   906  001278                     u1700:
   907  001278  908A               	bcf	3978,0,c	;volatile
   908  00127A                     u1715:
   909  00127A  EF40  F008         	goto	l2231
   910  00127E  EF71  F000         	goto	start
   911  001282                     __end_of_main:
   912                           	callstack 0
   913                           
   914 ;; *************** function _sprintf *****************
   915 ;; Defined at:
   916 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  sp              2   26[COMRAM] PTR unsigned char 
   919 ;;		 -> texto(10), 
   920 ;;  f               2   28[COMRAM] PTR const unsigned char 
   921 ;;		 -> STR_5(4), STR_2(3), 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  idx             1   36[COMRAM] unsigned char 
   924 ;;  val             4   41[COMRAM] unsigned long 
   925 ;;  tmpval          4    0        struct .
   926 ;;  cp              3    0        PTR const unsigned char 
   927 ;;  ap              2   39[COMRAM] PTR void [1]
   928 ;;		 -> ?_sprintf(2), 
   929 ;;  prec            2   37[COMRAM] int 
   930 ;;  len             2    0        unsigned int 
   931 ;;  c               1   46[COMRAM] unsigned char 
   932 ;;  flag            1   45[COMRAM] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  2   26[COMRAM] int 
   935 ;; Registers used:
   936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         8       0       0       0       0       0       0       0       0
   943 ;;      Locals:        11       0       0       0       0       0       0       0       0
   944 ;;      Temps:          2       0       0       0       0       0       0       0       0
   945 ;;      Totals:        21       0       0       0       0       0       0       0       0
   946 ;;Total ram usage:       21 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 5
   949 ;; This function calls:
   950 ;;		___lldiv
   951 ;;		___llmod
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text1
   958  000CBE                     __ptext1:
   959                           	callstack 0
   960  000CBE                     _sprintf:
   961                           	callstack 25
   962  000CBE                     
   963                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
   964  000CBE  0E1F               	movlw	low (?_sprintf+4)
   965  000CC0  6E28               	movwf	sprintf@ap^0,c
   966  000CC2  0E00               	movlw	high (?_sprintf+4)
   967  000CC4  6E29               	movwf	(sprintf@ap+1)^0,c
   968                           
   969                           ;doprnt.c: 553: while((c = *f++)) {
   970  000CC6  EF1F  F008         	goto	l2179
   971  000CCA                     l2083:
   972                           
   973                           ;doprnt.c: 555: if(c != '%')
   974  000CCA  0E25               	movlw	37
   975  000CCC  182F               	xorwf	sprintf@c^0,w,c
   976  000CCE  B4D8               	btfsc	status,2,c
   977  000CD0  EF6C  F006         	goto	u1401
   978  000CD4  EF6E  F006         	goto	u1400
   979  000CD8                     u1401:
   980  000CD8  EF78  F006         	goto	l2089
   981  000CDC                     u1400:
   982  000CDC                     
   983                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   984  000CDC  C01B  FFD9         	movff	sprintf@sp,fsr2l
   985  000CE0  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
   986  000CE4  C02F  FFDF         	movff	sprintf@c,indf2
   987  000CE8  4A1B               	infsnz	sprintf@sp^0,f,c
   988  000CEA  2A1C               	incf	(sprintf@sp+1)^0,f,c
   989                           
   990                           ;doprnt.c: 559: continue;
   991  000CEC  EF1F  F008         	goto	l2179
   992  000CF0                     l2089:
   993                           
   994                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   995  000CF0  0E00               	movlw	0
   996  000CF2  6E2E               	movwf	sprintf@flag^0,c
   997  000CF4  EF82  F006         	goto	l2097
   998  000CF8                     l2091:
   999                           
  1000                           ;doprnt.c: 669: flag |= 0x10;
  1001  000CF8  882E               	bsf	sprintf@flag^0,4,c
  1002                           
  1003                           ;doprnt.c: 670: goto loop;
  1004  000CFA  EF82  F006         	goto	l2097
  1005  000CFE                     l2093:
  1006                           
  1007                           ;doprnt.c: 747: flag |= 0x80;
  1008  000CFE  8E2E               	bsf	sprintf@flag^0,7,c
  1009                           
  1010                           ;doprnt.c: 749: break;
  1011  000D00  EFA2  F006         	goto	l364
  1012  000D04                     l2097:
  1013  000D04  C01D  FFF6         	movff	sprintf@f,tblptrl
  1014  000D08  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1015  000D0C  4A1D               	infsnz	sprintf@f^0,f,c
  1016  000D0E  2A1E               	incf	(sprintf@f+1)^0,f,c
  1017  000D10                     	if	0	;tblptru may be non-zero
  1018  000D10                     	endif
  1019  000D10                     	if	0	;tblptru may be non-zero
  1020  000D10                     	endif
  1021  000D10  0008               	tblrd		*
  1022  000D12  CFF5 F02F          	movff	tablat,sprintf@c
  1023  000D16  502F               	movf	sprintf@c^0,w,c
  1024                           
  1025                           ; Switch size 1, requested type "simple"
  1026                           ; Number of cases is 5, Range of values is 0 to 120
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte           16     9 (average)
  1030                           ;	Chosen strategy is simple_byte
  1031  000D18  0A00               	xorlw	0	; case 0
  1032  000D1A  B4D8               	btfsc	status,2,c
  1033  000D1C  EF30  F008         	goto	l2181
  1034  000D20  0A64               	xorlw	100	; case 100
  1035  000D22  B4D8               	btfsc	status,2,c
  1036  000D24  EFA2  F006         	goto	l364
  1037  000D28  0A0D               	xorlw	13	; case 105
  1038  000D2A  B4D8               	btfsc	status,2,c
  1039  000D2C  EFA2  F006         	goto	l364
  1040  000D30  0A05               	xorlw	5	; case 108
  1041  000D32  B4D8               	btfsc	status,2,c
  1042  000D34  EF7C  F006         	goto	l2091
  1043  000D38  0A14               	xorlw	20	; case 120
  1044  000D3A  B4D8               	btfsc	status,2,c
  1045  000D3C  EF7F  F006         	goto	l2093
  1046  000D40  EF1F  F008         	goto	l2179
  1047  000D44                     l364:
  1048                           
  1049                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  1050  000D44  BE2E               	btfsc	sprintf@flag^0,7,c
  1051  000D46  EFA7  F006         	goto	u1411
  1052  000D4A  EFA9  F006         	goto	u1410
  1053  000D4E                     u1411:
  1054  000D4E  EFE6  F006         	goto	l367
  1055  000D52                     u1410:
  1056  000D52                     
  1057                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  1058  000D52  A82E               	btfss	sprintf@flag^0,4,c
  1059  000D54  EFAE  F006         	goto	u1421
  1060  000D58  EFB0  F006         	goto	u1420
  1061  000D5C                     u1421:
  1062  000D5C  EFC2  F006         	goto	l2105
  1063  000D60                     u1420:
  1064  000D60                     
  1065                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  1066  000D60  C028  FFD9         	movff	sprintf@ap,fsr2l
  1067  000D64  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1068  000D68  CFDE F02A          	movff	postinc2,sprintf@val
  1069  000D6C  CFDE F02B          	movff	postinc2,sprintf@val+1
  1070  000D70  CFDE F02C          	movff	postinc2,sprintf@val+2
  1071  000D74  CFDE F02D          	movff	postinc2,sprintf@val+3
  1072  000D78  0E04               	movlw	4
  1073  000D7A  2628               	addwf	sprintf@ap^0,f,c
  1074  000D7C  0E00               	movlw	0
  1075  000D7E  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1076  000D80  EFD3  F006         	goto	l2109
  1077  000D84                     l2105:
  1078                           
  1079                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  1080  000D84  C028  FFD9         	movff	sprintf@ap,fsr2l
  1081  000D88  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1082  000D8C  CFDE F02A          	movff	postinc2,sprintf@val
  1083  000D90  CFDD F02B          	movff	postdec2,sprintf@val+1
  1084  000D94  0E00               	movlw	0
  1085  000D96  BE2B               	btfsc	(sprintf@val+1)^0,7,c
  1086  000D98  0EFF               	movlw	-1
  1087  000D9A  6E2C               	movwf	(sprintf@val+2)^0,c
  1088  000D9C  6E2D               	movwf	(sprintf@val+3)^0,c
  1089  000D9E  0E02               	movlw	2
  1090  000DA0  2628               	addwf	sprintf@ap^0,f,c
  1091  000DA2  0E00               	movlw	0
  1092  000DA4  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1093  000DA6                     l2109:
  1094                           
  1095                           ;doprnt.c: 1287: if((long)val < 0) {
  1096  000DA6  BE2D               	btfsc	(sprintf@val+3)^0,7,c
  1097  000DA8  EFDA  F006         	goto	u1430
  1098  000DAC  EFD8  F006         	goto	u1431
  1099  000DB0                     u1431:
  1100  000DB0  EF69  F007         	goto	l2153
  1101  000DB4                     u1430:
  1102  000DB4                     
  1103                           ;doprnt.c: 1288: flag |= 0x03;
  1104  000DB4  0E03               	movlw	3
  1105  000DB6  122E               	iorwf	sprintf@flag^0,f,c
  1106  000DB8                     
  1107                           ;doprnt.c: 1289: val = -val;
  1108  000DB8  1E2D               	comf	(sprintf@val+3)^0,f,c
  1109  000DBA  1E2C               	comf	(sprintf@val+2)^0,f,c
  1110  000DBC  1E2B               	comf	(sprintf@val+1)^0,f,c
  1111  000DBE  6C2A               	negf	sprintf@val^0,c
  1112  000DC0  0E00               	movlw	0
  1113  000DC2  222B               	addwfc	(sprintf@val+1)^0,f,c
  1114  000DC4  222C               	addwfc	(sprintf@val+2)^0,f,c
  1115  000DC6  222D               	addwfc	(sprintf@val+3)^0,f,c
  1116  000DC8  EF69  F007         	goto	l2153
  1117  000DCC                     l367:
  1118                           
  1119                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  1120  000DCC  A82E               	btfss	sprintf@flag^0,4,c
  1121  000DCE  EFEB  F006         	goto	u1441
  1122  000DD2  EFED  F006         	goto	u1440
  1123  000DD6                     u1441:
  1124  000DD6  EFFF  F006         	goto	l2119
  1125  000DDA                     u1440:
  1126  000DDA                     
  1127                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1128  000DDA  C028  FFD9         	movff	sprintf@ap,fsr2l
  1129  000DDE  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1130  000DE2  CFDE F02A          	movff	postinc2,sprintf@val
  1131  000DE6  CFDE F02B          	movff	postinc2,sprintf@val+1
  1132  000DEA  CFDE F02C          	movff	postinc2,sprintf@val+2
  1133  000DEE  CFDE F02D          	movff	postinc2,sprintf@val+3
  1134  000DF2  0E04               	movlw	4
  1135  000DF4  2628               	addwf	sprintf@ap^0,f,c
  1136  000DF6  0E00               	movlw	0
  1137  000DF8  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1138  000DFA  EF69  F007         	goto	l2153
  1139  000DFE                     l2119:
  1140                           
  1141                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  1142  000DFE  C028  FFD9         	movff	sprintf@ap,fsr2l
  1143  000E02  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1144  000E06  CFDE F023          	movff	postinc2,??_sprintf
  1145  000E0A  CFDD F024          	movff	postdec2,??_sprintf+1
  1146  000E0E  C023  F02A         	movff	??_sprintf,sprintf@val
  1147  000E12  C024  F02B         	movff	??_sprintf+1,sprintf@val+1
  1148  000E16  6A2C               	clrf	(sprintf@val+2)^0,c
  1149  000E18  6A2D               	clrf	(sprintf@val+3)^0,c
  1150  000E1A  0E02               	movlw	2
  1151  000E1C  2628               	addwf	sprintf@ap^0,f,c
  1152  000E1E  0E00               	movlw	0
  1153  000E20  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1154  000E22  EF69  F007         	goto	l2153
  1155  000E26                     l2123:
  1156                           
  1157                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1158  000E26  0E01               	movlw	1
  1159  000E28  6E2F               	movwf	sprintf@c^0,c
  1160  000E2A                     l2129:
  1161                           
  1162                           ;doprnt.c: 1332: if(val < dpowers[c])
  1163  000E2A  502F               	movf	sprintf@c^0,w,c
  1164  000E2C  0D04               	mullw	4
  1165  000E2E  0E01               	movlw	low _dpowers
  1166  000E30  24F3               	addwf	243,w,c
  1167  000E32  6EF6               	movwf	tblptrl,c
  1168  000E34  0E08               	movlw	high _dpowers
  1169  000E36  20F4               	addwfc	244,w,c
  1170  000E38  6EF7               	movwf	tblptrh,c
  1171  000E3A                     	if	0	;There are less than 3 active tblptr bytes
  1172  000E3A                     	endif
  1173  000E3A  0009               	tblrd		*+
  1174  000E3C  50F5               	movf	tablat,w,c
  1175  000E3E  5C2A               	subwf	sprintf@val^0,w,c
  1176  000E40  0009               	tblrd		*+
  1177  000E42  50F5               	movf	tablat,w,c
  1178  000E44  582B               	subwfb	(sprintf@val+1)^0,w,c
  1179  000E46  0009               	tblrd		*+
  1180  000E48  50F5               	movf	tablat,w,c
  1181  000E4A  582C               	subwfb	(sprintf@val+2)^0,w,c
  1182  000E4C  0009               	tblrd		*+
  1183  000E4E  50F5               	movf	tablat,w,c
  1184  000E50  582D               	subwfb	(sprintf@val+3)^0,w,c
  1185  000E52  B0D8               	btfsc	status,0,c
  1186  000E54  EF2E  F007         	goto	u1451
  1187  000E58  EF30  F007         	goto	u1450
  1188  000E5C                     u1451:
  1189  000E5C  EF32  F007         	goto	l2133
  1190  000E60                     u1450:
  1191  000E60  EF75  F007         	goto	l2155
  1192  000E64                     l2133:
  1193  000E64  2A2F               	incf	sprintf@c^0,f,c
  1194  000E66  0E0A               	movlw	10
  1195  000E68  182F               	xorwf	sprintf@c^0,w,c
  1196  000E6A  A4D8               	btfss	status,2,c
  1197  000E6C  EF3A  F007         	goto	u1461
  1198  000E70  EF3C  F007         	goto	u1460
  1199  000E74                     u1461:
  1200  000E74  EF15  F007         	goto	l2129
  1201  000E78                     u1460:
  1202  000E78  EF75  F007         	goto	l2155
  1203  000E7C                     l2137:
  1204                           
  1205                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1206  000E7C  0E01               	movlw	1
  1207  000E7E  6E2F               	movwf	sprintf@c^0,c
  1208  000E80                     l2143:
  1209                           
  1210                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1211  000E80  502F               	movf	sprintf@c^0,w,c
  1212  000E82  0D04               	mullw	4
  1213  000E84  0E29               	movlw	low _hexpowers
  1214  000E86  24F3               	addwf	243,w,c
  1215  000E88  6EF6               	movwf	tblptrl,c
  1216  000E8A  0E08               	movlw	high _hexpowers
  1217  000E8C  20F4               	addwfc	244,w,c
  1218  000E8E  6EF7               	movwf	tblptrh,c
  1219  000E90                     	if	0	;There are less than 3 active tblptr bytes
  1220  000E90                     	endif
  1221  000E90  0009               	tblrd		*+
  1222  000E92  50F5               	movf	tablat,w,c
  1223  000E94  5C2A               	subwf	sprintf@val^0,w,c
  1224  000E96  0009               	tblrd		*+
  1225  000E98  50F5               	movf	tablat,w,c
  1226  000E9A  582B               	subwfb	(sprintf@val+1)^0,w,c
  1227  000E9C  0009               	tblrd		*+
  1228  000E9E  50F5               	movf	tablat,w,c
  1229  000EA0  582C               	subwfb	(sprintf@val+2)^0,w,c
  1230  000EA2  0009               	tblrd		*+
  1231  000EA4  50F5               	movf	tablat,w,c
  1232  000EA6  582D               	subwfb	(sprintf@val+3)^0,w,c
  1233  000EA8  B0D8               	btfsc	status,0,c
  1234  000EAA  EF59  F007         	goto	u1471
  1235  000EAE  EF5B  F007         	goto	u1470
  1236  000EB2                     u1471:
  1237  000EB2  EF5D  F007         	goto	l2147
  1238  000EB6                     u1470:
  1239  000EB6  EF75  F007         	goto	l2155
  1240  000EBA                     l2147:
  1241  000EBA  2A2F               	incf	sprintf@c^0,f,c
  1242  000EBC  0E08               	movlw	8
  1243  000EBE  182F               	xorwf	sprintf@c^0,w,c
  1244  000EC0  A4D8               	btfss	status,2,c
  1245  000EC2  EF65  F007         	goto	u1481
  1246  000EC6  EF67  F007         	goto	u1480
  1247  000ECA                     u1481:
  1248  000ECA  EF40  F007         	goto	l2143
  1249  000ECE                     u1480:
  1250  000ECE  EF75  F007         	goto	l2155
  1251  000ED2                     l2153:
  1252  000ED2  502E               	movf	sprintf@flag^0,w,c
  1253  000ED4  0B80               	andlw	128
  1254                           
  1255                           ; Switch size 1, requested type "simple"
  1256                           ; Number of cases is 2, Range of values is 0 to 128
  1257                           ; switch strategies available:
  1258                           ; Name         Instructions Cycles
  1259                           ; simple_byte            7     4 (average)
  1260                           ;	Chosen strategy is simple_byte
  1261  000ED6  0A00               	xorlw	0	; case 0
  1262  000ED8  B4D8               	btfsc	status,2,c
  1263  000EDA  EF13  F007         	goto	l2123
  1264  000EDE  0A80               	xorlw	128	; case 128
  1265  000EE0  B4D8               	btfsc	status,2,c
  1266  000EE2  EF3E  F007         	goto	l2137
  1267  000EE6  EF75  F007         	goto	l2155
  1268  000EEA                     l2155:
  1269                           
  1270                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1271  000EEA  C02E  F023         	movff	sprintf@flag,??_sprintf
  1272  000EEE  0E03               	movlw	3
  1273  000EF0  1623               	andwf	??_sprintf^0,f,c
  1274  000EF2  B4D8               	btfsc	status,2,c
  1275  000EF4  EF7E  F007         	goto	u1491
  1276  000EF8  EF80  F007         	goto	u1490
  1277  000EFC                     u1491:
  1278  000EFC  EF88  F007         	goto	l2161
  1279  000F00                     u1490:
  1280  000F00                     
  1281                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1282  000F00  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1283  000F04  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1284  000F08  0E2D               	movlw	45
  1285  000F0A  6EDF               	movwf	indf2,c
  1286  000F0C  4A1B               	infsnz	sprintf@sp^0,f,c
  1287  000F0E  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1288  000F10                     l2161:
  1289                           
  1290                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1291  000F10  C02F  F026         	movff	sprintf@c,sprintf@prec
  1292  000F14  6A27               	clrf	(sprintf@prec+1)^0,c
  1293                           
  1294                           ;doprnt.c: 1500: while(prec--) {
  1295  000F16  EF12  F008         	goto	l2177
  1296  000F1A                     l2163:
  1297                           
  1298                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  1299  000F1A  C026  F023         	movff	sprintf@prec,??_sprintf
  1300  000F1E  C027  F024         	movff	sprintf@prec+1,??_sprintf+1
  1301  000F22  90D8               	bcf	status,0,c
  1302  000F24  3623               	rlcf	??_sprintf^0,f,c
  1303  000F26  3624               	rlcf	(??_sprintf+1)^0,f,c
  1304  000F28  90D8               	bcf	status,0,c
  1305  000F2A  3623               	rlcf	??_sprintf^0,f,c
  1306  000F2C  3624               	rlcf	(??_sprintf+1)^0,f,c
  1307  000F2E  0E01               	movlw	low _dpowers
  1308  000F30  2423               	addwf	??_sprintf^0,w,c
  1309  000F32  6EF6               	movwf	tblptrl,c
  1310  000F34  0E08               	movlw	high _dpowers
  1311  000F36  2024               	addwfc	(??_sprintf+1)^0,w,c
  1312  000F38  6EF7               	movwf	tblptrh,c
  1313  000F3A                     	if	0	;There are less than 3 active tblptr bytes
  1314  000F3A                     	endif
  1315  000F3A  0009               	tblrd		*+
  1316  000F3C  CFF5 F009          	movff	tablat,___lldiv@divisor
  1317  000F40  0009               	tblrd		*+
  1318  000F42  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1319  000F46  0009               	tblrd		*+
  1320  000F48  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1321  000F4C  000A               	tblrd		*-
  1322  000F4E  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1323  000F52  C02A  F005         	movff	sprintf@val,___lldiv@dividend
  1324  000F56  C02B  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1325  000F5A  C02C  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1326  000F5E  C02D  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1327  000F62  ECBC  F00B         	call	___lldiv	;wreg free
  1328  000F66  C005  F012         	movff	?___lldiv,___llmod@dividend
  1329  000F6A  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  1330  000F6E  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  1331  000F72  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  1332  000F76  0E0A               	movlw	10
  1333  000F78  6E16               	movwf	___llmod@divisor^0,c
  1334  000F7A  0E00               	movlw	0
  1335  000F7C  6E17               	movwf	(___llmod@divisor+1)^0,c
  1336  000F7E  0E00               	movlw	0
  1337  000F80  6E18               	movwf	(___llmod@divisor+2)^0,c
  1338  000F82  0E00               	movlw	0
  1339  000F84  6E19               	movwf	(___llmod@divisor+3)^0,c
  1340  000F86  EC0E  F00C         	call	___llmod	;wreg free
  1341  000F8A  5012               	movf	?___llmod^0,w,c
  1342  000F8C  0F30               	addlw	48
  1343  000F8E  6E2F               	movwf	sprintf@c^0,c
  1344                           
  1345                           ;doprnt.c: 1517: break;
  1346  000F90  EF0A  F008         	goto	l2173
  1347  000F94                     l2165:
  1348                           
  1349                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  1350  000F94  C02A  F005         	movff	sprintf@val,___lldiv@dividend
  1351  000F98  C02B  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1352  000F9C  C02C  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1353  000FA0  C02D  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1354  000FA4  C026  F023         	movff	sprintf@prec,??_sprintf
  1355  000FA8  C027  F024         	movff	sprintf@prec+1,??_sprintf+1
  1356  000FAC  90D8               	bcf	status,0,c
  1357  000FAE  3623               	rlcf	??_sprintf^0,f,c
  1358  000FB0  3624               	rlcf	(??_sprintf+1)^0,f,c
  1359  000FB2  90D8               	bcf	status,0,c
  1360  000FB4  3623               	rlcf	??_sprintf^0,f,c
  1361  000FB6  3624               	rlcf	(??_sprintf+1)^0,f,c
  1362  000FB8  0E29               	movlw	low _hexpowers
  1363  000FBA  2423               	addwf	??_sprintf^0,w,c
  1364  000FBC  6EF6               	movwf	tblptrl,c
  1365  000FBE  0E08               	movlw	high _hexpowers
  1366  000FC0  2024               	addwfc	(??_sprintf+1)^0,w,c
  1367  000FC2  6EF7               	movwf	tblptrh,c
  1368  000FC4                     	if	0	;There are less than 3 active tblptr bytes
  1369  000FC4                     	endif
  1370  000FC4  0009               	tblrd		*+
  1371  000FC6  CFF5 F009          	movff	tablat,___lldiv@divisor
  1372  000FCA  0009               	tblrd		*+
  1373  000FCC  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1374  000FD0  0009               	tblrd		*+
  1375  000FD2  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1376  000FD6  000A               	tblrd		*-
  1377  000FD8  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1378  000FDC  ECBC  F00B         	call	___lldiv	;wreg free
  1379  000FE0  5005               	movf	?___lldiv^0,w,c
  1380  000FE2  0B0F               	andlw	15
  1381  000FE4  6E25               	movwf	sprintf@idx^0,c
  1382  000FE6                     
  1383                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  1384  000FE6  0E49               	movlw	low STR_12
  1385  000FE8  2425               	addwf	sprintf@idx^0,w,c
  1386  000FEA  6EF6               	movwf	tblptrl,c
  1387  000FEC  6AF7               	clrf	tblptrh,c
  1388  000FEE  0E08               	movlw	high STR_12
  1389  000FF0  22F7               	addwfc	tblptrh,f,c
  1390  000FF2                     	if	0	;There are less than 3 active tblptr bytes
  1391  000FF2                     	endif
  1392  000FF2  0008               	tblrd		*
  1393  000FF4  CFF5 F02F          	movff	tablat,sprintf@c
  1394                           
  1395                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  1396  000FF8  EF0A  F008         	goto	l2173
  1397  000FFC                     l2171:
  1398  000FFC  502E               	movf	sprintf@flag^0,w,c
  1399  000FFE  0B80               	andlw	128
  1400                           
  1401                           ; Switch size 1, requested type "simple"
  1402                           ; Number of cases is 2, Range of values is 0 to 128
  1403                           ; switch strategies available:
  1404                           ; Name         Instructions Cycles
  1405                           ; simple_byte            7     4 (average)
  1406                           ;	Chosen strategy is simple_byte
  1407  001000  0A00               	xorlw	0	; case 0
  1408  001002  B4D8               	btfsc	status,2,c
  1409  001004  EF8D  F007         	goto	l2163
  1410  001008  0A80               	xorlw	128	; case 128
  1411  00100A  B4D8               	btfsc	status,2,c
  1412  00100C  EFCA  F007         	goto	l2165
  1413  001010  EF0A  F008         	goto	l2173
  1414  001014                     l2173:
  1415                           
  1416                           ;doprnt.c: 1550: ((*sp++ = (c)));
  1417  001014  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1418  001018  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1419  00101C  C02F  FFDF         	movff	sprintf@c,indf2
  1420  001020  4A1B               	infsnz	sprintf@sp^0,f,c
  1421  001022  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1422  001024                     l2177:
  1423  001024  0626               	decf	sprintf@prec^0,f,c
  1424  001026  A0D8               	btfss	status,0,c
  1425  001028  0627               	decf	(sprintf@prec+1)^0,f,c
  1426  00102A  2826               	incf	sprintf@prec^0,w,c
  1427  00102C  E106               	bnz	u1501
  1428  00102E  2827               	incf	(sprintf@prec+1)^0,w,c
  1429  001030  A4D8               	btfss	status,2,c
  1430  001032  EF1D  F008         	goto	u1501
  1431  001036  EF1F  F008         	goto	u1500
  1432  00103A                     u1501:
  1433  00103A  EFFE  F007         	goto	l2171
  1434  00103E                     u1500:
  1435  00103E                     l2179:
  1436  00103E  C01D  FFF6         	movff	sprintf@f,tblptrl
  1437  001042  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1438  001046  4A1D               	infsnz	sprintf@f^0,f,c
  1439  001048  2A1E               	incf	(sprintf@f+1)^0,f,c
  1440  00104A                     	if	0	;tblptru may be non-zero
  1441  00104A                     	endif
  1442  00104A                     	if	0	;tblptru may be non-zero
  1443  00104A                     	endif
  1444  00104A  0008               	tblrd		*
  1445  00104C  CFF5 F02F          	movff	tablat,sprintf@c
  1446  001050  502F               	movf	sprintf@c^0,w,c
  1447  001052  A4D8               	btfss	status,2,c
  1448  001054  EF2E  F008         	goto	u1511
  1449  001058  EF30  F008         	goto	u1510
  1450  00105C                     u1511:
  1451  00105C  EF65  F006         	goto	l2083
  1452  001060                     u1510:
  1453  001060                     l2181:
  1454                           
  1455                           ;doprnt.c: 1564: *sp = 0;
  1456  001060  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1457  001064  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1458  001068  0E00               	movlw	0
  1459  00106A  6EDF               	movwf	indf2,c
  1460  00106C  0012               	return		;funcret
  1461  00106E                     __end_of_sprintf:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function ___llmod *****************
  1465 ;; Defined at:
  1466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  dividend        4   17[COMRAM] unsigned long 
  1469 ;;  divisor         4   21[COMRAM] unsigned long 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  counter         1   25[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  4   17[COMRAM] unsigned long 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         8       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1484 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:        9 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 4
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_sprintf
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text2
  1496  00181C                     __ptext2:
  1497                           	callstack 0
  1498  00181C                     ___llmod:
  1499                           	callstack 25
  1500  00181C  5016               	movf	___llmod@divisor^0,w,c
  1501  00181E  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  1502  001820  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  1503  001822  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  1504  001824  B4D8               	btfsc	status,2,c
  1505  001826  EF17  F00C         	goto	u1201
  1506  00182A  EF19  F00C         	goto	u1200
  1507  00182E                     u1201:
  1508  00182E  EF49  F00C         	goto	l804
  1509  001832                     u1200:
  1510  001832  0E01               	movlw	1
  1511  001834  6E1A               	movwf	___llmod@counter^0,c
  1512  001836  EF23  F00C         	goto	l1977
  1513  00183A                     l1975:
  1514  00183A  90D8               	bcf	status,0,c
  1515  00183C  3616               	rlcf	___llmod@divisor^0,f,c
  1516  00183E  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  1517  001840  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  1518  001842  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  1519  001844  2A1A               	incf	___llmod@counter^0,f,c
  1520  001846                     l1977:
  1521  001846  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  1522  001848  EF28  F00C         	goto	u1211
  1523  00184C  EF2A  F00C         	goto	u1210
  1524  001850                     u1211:
  1525  001850  EF1D  F00C         	goto	l1975
  1526  001854                     u1210:
  1527  001854                     l1979:
  1528  001854  5016               	movf	___llmod@divisor^0,w,c
  1529  001856  5C12               	subwf	___llmod@dividend^0,w,c
  1530  001858  5017               	movf	(___llmod@divisor+1)^0,w,c
  1531  00185A  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  1532  00185C  5018               	movf	(___llmod@divisor+2)^0,w,c
  1533  00185E  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  1534  001860  5019               	movf	(___llmod@divisor+3)^0,w,c
  1535  001862  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  1536  001864  A0D8               	btfss	status,0,c
  1537  001866  EF37  F00C         	goto	u1221
  1538  00186A  EF39  F00C         	goto	u1220
  1539  00186E                     u1221:
  1540  00186E  EF41  F00C         	goto	l1983
  1541  001872                     u1220:
  1542  001872  5016               	movf	___llmod@divisor^0,w,c
  1543  001874  5E12               	subwf	___llmod@dividend^0,f,c
  1544  001876  5017               	movf	(___llmod@divisor+1)^0,w,c
  1545  001878  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  1546  00187A  5018               	movf	(___llmod@divisor+2)^0,w,c
  1547  00187C  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  1548  00187E  5019               	movf	(___llmod@divisor+3)^0,w,c
  1549  001880  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  1550  001882                     l1983:
  1551  001882  90D8               	bcf	status,0,c
  1552  001884  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  1553  001886  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  1554  001888  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  1555  00188A  3216               	rrcf	___llmod@divisor^0,f,c
  1556  00188C  2E1A               	decfsz	___llmod@counter^0,f,c
  1557  00188E  EF2A  F00C         	goto	l1979
  1558  001892                     l804:
  1559  001892  C012  F012         	movff	___llmod@dividend,?___llmod
  1560  001896  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  1561  00189A  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  1562  00189E  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  1563  0018A2  0012               	return		;funcret
  1564  0018A4                     __end_of___llmod:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function ___lldiv *****************
  1568 ;; Defined at:
  1569 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  dividend        4    4[COMRAM] unsigned long 
  1572 ;;  divisor         4    8[COMRAM] unsigned long 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  quotient        4   12[COMRAM] unsigned long 
  1575 ;;  counter         1   16[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  4    4[COMRAM] unsigned long 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1585 ;;      Params:         8       0       0       0       0       0       0       0       0
  1586 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1588 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1589 ;;Total ram usage:       13 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 4
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_sprintf
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text3
  1600  001778                     __ptext3:
  1601                           	callstack 0
  1602  001778                     ___lldiv:
  1603                           	callstack 25
  1604  001778  0E00               	movlw	0
  1605  00177A  6E0D               	movwf	___lldiv@quotient^0,c
  1606  00177C  0E00               	movlw	0
  1607  00177E  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  1608  001780  0E00               	movlw	0
  1609  001782  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  1610  001784  0E00               	movlw	0
  1611  001786  6E10               	movwf	(___lldiv@quotient+3)^0,c
  1612  001788  5009               	movf	___lldiv@divisor^0,w,c
  1613  00178A  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  1614  00178C  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  1615  00178E  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  1616  001790  B4D8               	btfsc	status,2,c
  1617  001792  EFCD  F00B         	goto	u931
  1618  001796  EFCF  F00B         	goto	u930
  1619  00179A                     u931:
  1620  00179A  EF05  F00C         	goto	l423
  1621  00179E                     u930:
  1622  00179E  0E01               	movlw	1
  1623  0017A0  6E11               	movwf	___lldiv@counter^0,c
  1624  0017A2  EFD9  F00B         	goto	l1805
  1625  0017A6                     l1803:
  1626  0017A6  90D8               	bcf	status,0,c
  1627  0017A8  3609               	rlcf	___lldiv@divisor^0,f,c
  1628  0017AA  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  1629  0017AC  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  1630  0017AE  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  1631  0017B0  2A11               	incf	___lldiv@counter^0,f,c
  1632  0017B2                     l1805:
  1633  0017B2  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  1634  0017B4  EFDE  F00B         	goto	u941
  1635  0017B8  EFE0  F00B         	goto	u940
  1636  0017BC                     u941:
  1637  0017BC  EFD3  F00B         	goto	l1803
  1638  0017C0                     u940:
  1639  0017C0                     l1807:
  1640  0017C0  90D8               	bcf	status,0,c
  1641  0017C2  360D               	rlcf	___lldiv@quotient^0,f,c
  1642  0017C4  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  1643  0017C6  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  1644  0017C8  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  1645  0017CA  5009               	movf	___lldiv@divisor^0,w,c
  1646  0017CC  5C05               	subwf	___lldiv@dividend^0,w,c
  1647  0017CE  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1648  0017D0  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  1649  0017D2  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1650  0017D4  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  1651  0017D6  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1652  0017D8  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  1653  0017DA  A0D8               	btfss	status,0,c
  1654  0017DC  EFF2  F00B         	goto	u951
  1655  0017E0  EFF4  F00B         	goto	u950
  1656  0017E4                     u951:
  1657  0017E4  EFFD  F00B         	goto	l1815
  1658  0017E8                     u950:
  1659  0017E8  5009               	movf	___lldiv@divisor^0,w,c
  1660  0017EA  5E05               	subwf	___lldiv@dividend^0,f,c
  1661  0017EC  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1662  0017EE  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  1663  0017F0  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1664  0017F2  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  1665  0017F4  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1666  0017F6  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  1667  0017F8  800D               	bsf	___lldiv@quotient^0,0,c
  1668  0017FA                     l1815:
  1669  0017FA  90D8               	bcf	status,0,c
  1670  0017FC  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  1671  0017FE  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  1672  001800  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  1673  001802  3209               	rrcf	___lldiv@divisor^0,f,c
  1674  001804  2E11               	decfsz	___lldiv@counter^0,f,c
  1675  001806  EFE0  F00B         	goto	l1807
  1676  00180A                     l423:
  1677  00180A  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  1678  00180E  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  1679  001812  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  1680  001816  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  1681  00181A  0012               	return		;funcret
  1682  00181C                     __end_of___lldiv:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _normaliza *****************
  1686 ;; Defined at:
  1687 ;;		line 107 in file "main.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1704 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        4 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 5
  1708 ;; This function calls:
  1709 ;;		___flge
  1710 ;;		___flmul
  1711 ;;		___xxtofl
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text4
  1718  001436                     __ptext4:
  1719                           	callstack 0
  1720  001436                     _normaliza:
  1721                           	callstack 25
  1722  001436                     
  1723                           ;main.c: 112: for (cont=0;cont<cuenta-1+2;cont++)
  1724  001436  0E00               	movlw	0
  1725  001438  6E45               	movwf	_cont^0,c
  1726  00143A  EFD2  F00A         	goto	l2071
  1727  00143E                     l2059:
  1728                           
  1729                           ;main.c: 113: {;main.c: 114: if (tiempo[cont+2] <(float)tiempo[cont] * .8) tiempo[cont]=
      +                          0 ;
  1730  00143E  0E62               	movlw	low (_tiempo+2)
  1731  001440  2445               	addwf	_cont^0,w,c
  1732  001442  6ED9               	movwf	fsr2l,c
  1733  001444  6ADA               	clrf	fsr2h,c
  1734  001446  0E00               	movlw	high (_tiempo+2)
  1735  001448  22DA               	addwfc	fsr2h,f,c
  1736  00144A  50DF               	movf	indf2,w,c
  1737  00144C  6E38               	movwf	??_normaliza^0,c
  1738  00144E  5038               	movf	??_normaliza^0,w,c
  1739  001450  6E05               	movwf	___xxtofl@val^0,c
  1740  001452  6A06               	clrf	(___xxtofl@val+1)^0,c
  1741  001454  6A07               	clrf	(___xxtofl@val+2)^0,c
  1742  001456  6A08               	clrf	(___xxtofl@val+3)^0,c
  1743  001458  0E00               	movlw	0
  1744  00145A  EC41  F009         	call	___xxtofl
  1745  00145E  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1746  001462  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1747  001466  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1748  00146A  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1749  00146E  0ECD               	movlw	205
  1750  001470  6E17               	movwf	___flmul@a^0,c
  1751  001472  0ECC               	movlw	204
  1752  001474  6E18               	movwf	(___flmul@a+1)^0,c
  1753  001476  0E4C               	movlw	76
  1754  001478  6E19               	movwf	(___flmul@a+2)^0,c
  1755  00147A  0E3F               	movlw	63
  1756  00147C  6E1A               	movwf	(___flmul@a+3)^0,c
  1757  00147E  0E60               	movlw	low _tiempo
  1758  001480  2445               	addwf	_cont^0,w,c
  1759  001482  6ED9               	movwf	fsr2l,c
  1760  001484  6ADA               	clrf	fsr2h,c
  1761  001486  0E00               	movlw	high _tiempo
  1762  001488  22DA               	addwfc	fsr2h,f,c
  1763  00148A  50DF               	movf	indf2,w,c
  1764  00148C  6E39               	movwf	(??_normaliza+1)^0,c
  1765  00148E  5039               	movf	(??_normaliza+1)^0,w,c
  1766  001490  6E05               	movwf	___xxtofl@val^0,c
  1767  001492  6A06               	clrf	(___xxtofl@val+1)^0,c
  1768  001494  6A07               	clrf	(___xxtofl@val+2)^0,c
  1769  001496  6A08               	clrf	(___xxtofl@val+3)^0,c
  1770  001498  0E00               	movlw	0
  1771  00149A  EC41  F009         	call	___xxtofl
  1772  00149E  C005  F013         	movff	?___xxtofl,___flmul@b
  1773  0014A2  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1774  0014A6  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1775  0014AA  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1776  0014AE  EC4A  F004         	call	___flmul	;wreg free
  1777  0014B2  C013  F030         	movff	?___flmul,___flge@ff2
  1778  0014B6  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1779  0014BA  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1780  0014BE  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1781  0014C2  ECE7  F00A         	call	___flge	;wreg free
  1782  0014C6  B0D8               	btfsc	status,0,c
  1783  0014C8  EF68  F00A         	goto	u1361
  1784  0014CC  EF6A  F00A         	goto	u1360
  1785  0014D0                     u1361:
  1786  0014D0  EF74  F00A         	goto	l2063
  1787  0014D4                     u1360:
  1788  0014D4  0E60               	movlw	low _tiempo
  1789  0014D6  2445               	addwf	_cont^0,w,c
  1790  0014D8  6ED9               	movwf	fsr2l,c
  1791  0014DA  6ADA               	clrf	fsr2h,c
  1792  0014DC  0E00               	movlw	high _tiempo
  1793  0014DE  22DA               	addwfc	fsr2h,f,c
  1794  0014E0  0E00               	movlw	0
  1795  0014E2  6EDF               	movwf	indf2,c
  1796  0014E4  EFD1  F00A         	goto	l2069
  1797  0014E8                     l2063:
  1798                           
  1799                           ;main.c: 115: else if (tiempo[cont] <(float)tiempo[cont+2] * .8) tiempo[cont]= 2 ;
  1800  0014E8  0E60               	movlw	low _tiempo
  1801  0014EA  2445               	addwf	_cont^0,w,c
  1802  0014EC  6ED9               	movwf	fsr2l,c
  1803  0014EE  6ADA               	clrf	fsr2h,c
  1804  0014F0  0E00               	movlw	high _tiempo
  1805  0014F2  22DA               	addwfc	fsr2h,f,c
  1806  0014F4  50DF               	movf	indf2,w,c
  1807  0014F6  6E38               	movwf	??_normaliza^0,c
  1808  0014F8  5038               	movf	??_normaliza^0,w,c
  1809  0014FA  6E05               	movwf	___xxtofl@val^0,c
  1810  0014FC  6A06               	clrf	(___xxtofl@val+1)^0,c
  1811  0014FE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1812  001500  6A08               	clrf	(___xxtofl@val+3)^0,c
  1813  001502  0E00               	movlw	0
  1814  001504  EC41  F009         	call	___xxtofl
  1815  001508  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1816  00150C  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1817  001510  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1818  001514  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1819  001518  0ECD               	movlw	205
  1820  00151A  6E17               	movwf	___flmul@a^0,c
  1821  00151C  0ECC               	movlw	204
  1822  00151E  6E18               	movwf	(___flmul@a+1)^0,c
  1823  001520  0E4C               	movlw	76
  1824  001522  6E19               	movwf	(___flmul@a+2)^0,c
  1825  001524  0E3F               	movlw	63
  1826  001526  6E1A               	movwf	(___flmul@a+3)^0,c
  1827  001528  0E62               	movlw	low (_tiempo+2)
  1828  00152A  2445               	addwf	_cont^0,w,c
  1829  00152C  6ED9               	movwf	fsr2l,c
  1830  00152E  6ADA               	clrf	fsr2h,c
  1831  001530  0E00               	movlw	high (_tiempo+2)
  1832  001532  22DA               	addwfc	fsr2h,f,c
  1833  001534  50DF               	movf	indf2,w,c
  1834  001536  6E39               	movwf	(??_normaliza+1)^0,c
  1835  001538  5039               	movf	(??_normaliza+1)^0,w,c
  1836  00153A  6E05               	movwf	___xxtofl@val^0,c
  1837  00153C  6A06               	clrf	(___xxtofl@val+1)^0,c
  1838  00153E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1839  001540  6A08               	clrf	(___xxtofl@val+3)^0,c
  1840  001542  0E00               	movlw	0
  1841  001544  EC41  F009         	call	___xxtofl
  1842  001548  C005  F013         	movff	?___xxtofl,___flmul@b
  1843  00154C  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1844  001550  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1845  001554  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1846  001558  EC4A  F004         	call	___flmul	;wreg free
  1847  00155C  C013  F030         	movff	?___flmul,___flge@ff2
  1848  001560  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1849  001564  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1850  001568  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1851  00156C  ECE7  F00A         	call	___flge	;wreg free
  1852  001570  B0D8               	btfsc	status,0,c
  1853  001572  EFBD  F00A         	goto	u1371
  1854  001576  EFBF  F00A         	goto	u1370
  1855  00157A                     u1371:
  1856  00157A  EFC9  F00A         	goto	l2067
  1857  00157E                     u1370:
  1858  00157E  0E60               	movlw	low _tiempo
  1859  001580  2445               	addwf	_cont^0,w,c
  1860  001582  6ED9               	movwf	fsr2l,c
  1861  001584  6ADA               	clrf	fsr2h,c
  1862  001586  0E00               	movlw	high _tiempo
  1863  001588  22DA               	addwfc	fsr2h,f,c
  1864  00158A  0E02               	movlw	2
  1865  00158C  6EDF               	movwf	indf2,c
  1866  00158E  EFD1  F00A         	goto	l2069
  1867  001592                     l2067:
  1868                           
  1869                           ;main.c: 116: else tiempo[cont]=1 ;
  1870  001592  0E60               	movlw	low _tiempo
  1871  001594  2445               	addwf	_cont^0,w,c
  1872  001596  6ED9               	movwf	fsr2l,c
  1873  001598  6ADA               	clrf	fsr2h,c
  1874  00159A  0E00               	movlw	high _tiempo
  1875  00159C  22DA               	addwfc	fsr2h,f,c
  1876  00159E  0E01               	movlw	1
  1877  0015A0  6EDF               	movwf	indf2,c
  1878  0015A2                     l2069:
  1879  0015A2  2A45               	incf	_cont^0,f,c
  1880  0015A4                     l2071:
  1881  0015A4  0E01               	movlw	1
  1882  0015A6  2442               	addwf	_cuenta^0,w,c
  1883  0015A8  6E38               	movwf	??_normaliza^0,c
  1884  0015AA  0E00               	movlw	0
  1885  0015AC  2043               	addwfc	(_cuenta+1)^0,w,c
  1886  0015AE  6E39               	movwf	(??_normaliza+1)^0,c
  1887  0015B0  5045               	movf	_cont^0,w,c
  1888  0015B2  6E3A               	movwf	(??_normaliza+2)^0,c
  1889  0015B4  6A3B               	clrf	(??_normaliza+3)^0,c
  1890  0015B6  5038               	movf	??_normaliza^0,w,c
  1891  0015B8  5C3A               	subwf	(??_normaliza+2)^0,w,c
  1892  0015BA  5039               	movf	(??_normaliza+1)^0,w,c
  1893  0015BC  583B               	subwfb	(??_normaliza+3)^0,w,c
  1894  0015BE  A0D8               	btfss	status,0,c
  1895  0015C0  EFE4  F00A         	goto	u1381
  1896  0015C4  EFE6  F00A         	goto	u1380
  1897  0015C8                     u1381:
  1898  0015C8  EF1F  F00A         	goto	l2059
  1899  0015CC                     u1380:
  1900  0015CC  0012               	return		;funcret
  1901  0015CE                     __end_of_normaliza:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function ___xxtofl *****************
  1905 ;; Defined at:
  1906 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  sign            1    wreg     unsigned char 
  1909 ;;  val             4    4[COMRAM] long 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  sign            1   12[COMRAM] unsigned char 
  1912 ;;  arg             4   14[COMRAM] unsigned long 
  1913 ;;  exp             1   13[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  4    4[COMRAM] unsigned char 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1923 ;;      Params:         4       0       0       0       0       0       0       0       0
  1924 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1925 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1926 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1927 ;;Total ram usage:       14 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 4
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_normaliza
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text5
  1938  001282                     __ptext5:
  1939                           	callstack 0
  1940  001282                     ___xxtofl:
  1941                           	callstack 25
  1942                           
  1943                           ;incstack = 0
  1944                           ;___xxtofl@sign stored from wreg
  1945  001282  6E0D               	movwf	___xxtofl@sign^0,c
  1946  001284  500D               	movf	___xxtofl@sign^0,w,c
  1947  001286  B4D8               	btfsc	status,2,c
  1948  001288  EF48  F009         	goto	u1231
  1949  00128C  EF4A  F009         	goto	u1230
  1950  001290                     u1231:
  1951  001290  EF6C  F009         	goto	l1039
  1952  001294                     u1230:
  1953  001294  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  1954  001296  EF51  F009         	goto	u1240
  1955  00129A  EF4F  F009         	goto	u1241
  1956  00129E                     u1241:
  1957  00129E  EF6C  F009         	goto	l1039
  1958  0012A2                     u1240:
  1959  0012A2  C005  F009         	movff	___xxtofl@val,??___xxtofl
  1960  0012A6  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  1961  0012AA  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  1962  0012AE  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  1963  0012B2  1E09               	comf	??___xxtofl^0,f,c
  1964  0012B4  1E0A               	comf	(??___xxtofl+1)^0,f,c
  1965  0012B6  1E0B               	comf	(??___xxtofl+2)^0,f,c
  1966  0012B8  1E0C               	comf	(??___xxtofl+3)^0,f,c
  1967  0012BA  2A09               	incf	??___xxtofl^0,f,c
  1968  0012BC  0E00               	movlw	0
  1969  0012BE  220A               	addwfc	(??___xxtofl+1)^0,f,c
  1970  0012C0  220B               	addwfc	(??___xxtofl+2)^0,f,c
  1971  0012C2  220C               	addwfc	(??___xxtofl+3)^0,f,c
  1972  0012C4  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  1973  0012C8  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  1974  0012CC  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  1975  0012D0  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  1976  0012D4  EF74  F009         	goto	l1993
  1977  0012D8                     l1039:
  1978  0012D8  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  1979  0012DC  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1980  0012E0  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1981  0012E4  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1982  0012E8                     l1993:
  1983  0012E8  5005               	movf	___xxtofl@val^0,w,c
  1984  0012EA  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  1985  0012EC  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  1986  0012EE  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  1987  0012F0  A4D8               	btfss	status,2,c
  1988  0012F2  EF7D  F009         	goto	u1251
  1989  0012F6  EF7F  F009         	goto	u1250
  1990  0012FA                     u1251:
  1991  0012FA  EF89  F009         	goto	l1999
  1992  0012FE                     u1250:
  1993  0012FE  0E00               	movlw	0
  1994  001300  6E05               	movwf	?___xxtofl^0,c
  1995  001302  0E00               	movlw	0
  1996  001304  6E06               	movwf	(?___xxtofl+1)^0,c
  1997  001306  0E00               	movlw	0
  1998  001308  6E07               	movwf	(?___xxtofl+2)^0,c
  1999  00130A  0E00               	movlw	0
  2000  00130C  6E08               	movwf	(?___xxtofl+3)^0,c
  2001  00130E  EF1A  F00A         	goto	l1042
  2002  001312                     l1999:
  2003  001312  0E96               	movlw	150
  2004  001314  6E0E               	movwf	___xxtofl@exp^0,c
  2005  001316  EF93  F009         	goto	l2003
  2006  00131A                     l2001:
  2007  00131A  2A0E               	incf	___xxtofl@exp^0,f,c
  2008  00131C  90D8               	bcf	status,0,c
  2009  00131E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2010  001320  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2011  001322  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2012  001324  320F               	rrcf	___xxtofl@arg^0,f,c
  2013  001326                     l2003:
  2014  001326  0E00               	movlw	0
  2015  001328  140F               	andwf	___xxtofl@arg^0,w,c
  2016  00132A  6E09               	movwf	??___xxtofl^0,c
  2017  00132C  0E00               	movlw	0
  2018  00132E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2019  001330  6E0A               	movwf	(??___xxtofl+1)^0,c
  2020  001332  0E00               	movlw	0
  2021  001334  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2022  001336  6E0B               	movwf	(??___xxtofl+2)^0,c
  2023  001338  0EFE               	movlw	254
  2024  00133A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2025  00133C  6E0C               	movwf	(??___xxtofl+3)^0,c
  2026  00133E  5009               	movf	??___xxtofl^0,w,c
  2027  001340  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2028  001342  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2029  001344  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2030  001346  A4D8               	btfss	status,2,c
  2031  001348  EFA8  F009         	goto	u1261
  2032  00134C  EFAA  F009         	goto	u1260
  2033  001350                     u1261:
  2034  001350  EF8D  F009         	goto	l2001
  2035  001354                     u1260:
  2036  001354  EFB8  F009         	goto	l1046
  2037  001358                     l2005:
  2038  001358  2A0E               	incf	___xxtofl@exp^0,f,c
  2039  00135A  0E01               	movlw	1
  2040  00135C  260F               	addwf	___xxtofl@arg^0,f,c
  2041  00135E  0E00               	movlw	0
  2042  001360  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  2043  001362  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  2044  001364  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  2045  001366  90D8               	bcf	status,0,c
  2046  001368  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2047  00136A  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2048  00136C  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2049  00136E  320F               	rrcf	___xxtofl@arg^0,f,c
  2050  001370                     l1046:
  2051  001370  0E00               	movlw	0
  2052  001372  140F               	andwf	___xxtofl@arg^0,w,c
  2053  001374  6E09               	movwf	??___xxtofl^0,c
  2054  001376  0E00               	movlw	0
  2055  001378  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2056  00137A  6E0A               	movwf	(??___xxtofl+1)^0,c
  2057  00137C  0E00               	movlw	0
  2058  00137E  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2059  001380  6E0B               	movwf	(??___xxtofl+2)^0,c
  2060  001382  0EFF               	movlw	255
  2061  001384  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2062  001386  6E0C               	movwf	(??___xxtofl+3)^0,c
  2063  001388  5009               	movf	??___xxtofl^0,w,c
  2064  00138A  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2065  00138C  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2066  00138E  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2067  001390  A4D8               	btfss	status,2,c
  2068  001392  EFCD  F009         	goto	u1271
  2069  001396  EFCF  F009         	goto	u1270
  2070  00139A                     u1271:
  2071  00139A  EFAC  F009         	goto	l2005
  2072  00139E                     u1270:
  2073  00139E  EFD7  F009         	goto	l2013
  2074  0013A2                     l2011:
  2075  0013A2  060E               	decf	___xxtofl@exp^0,f,c
  2076  0013A4  90D8               	bcf	status,0,c
  2077  0013A6  360F               	rlcf	___xxtofl@arg^0,f,c
  2078  0013A8  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  2079  0013AA  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  2080  0013AC  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  2081  0013AE                     l2013:
  2082  0013AE  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  2083  0013B0  EFDC  F009         	goto	u1281
  2084  0013B4  EFDE  F009         	goto	u1280
  2085  0013B8                     u1281:
  2086  0013B8  EFE6  F009         	goto	l1053
  2087  0013BC                     u1280:
  2088  0013BC  0E02               	movlw	2
  2089  0013BE  600E               	cpfslt	___xxtofl@exp^0,c
  2090  0013C0  EFE4  F009         	goto	u1291
  2091  0013C4  EFE6  F009         	goto	u1290
  2092  0013C8                     u1291:
  2093  0013C8  EFD1  F009         	goto	l2011
  2094  0013CC                     u1290:
  2095  0013CC                     l1053:
  2096  0013CC  B00E               	btfsc	___xxtofl@exp^0,0,c
  2097  0013CE  EFEB  F009         	goto	u1301
  2098  0013D2  EFED  F009         	goto	u1300
  2099  0013D6                     u1301:
  2100  0013D6  EFEE  F009         	goto	l2019
  2101  0013DA                     u1300:
  2102  0013DA  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  2103  0013DC                     l2019:
  2104  0013DC  90D8               	bcf	status,0,c
  2105  0013DE  320E               	rrcf	___xxtofl@exp^0,f,c
  2106  0013E0  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  2107  0013E4  6A0A               	clrf	(??___xxtofl+1)^0,c
  2108  0013E6  6A0B               	clrf	(??___xxtofl+2)^0,c
  2109  0013E8  6A0C               	clrf	(??___xxtofl+3)^0,c
  2110  0013EA  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  2111  0013EE  6A0B               	clrf	(??___xxtofl+2)^0,c
  2112  0013F0  6A0A               	clrf	(??___xxtofl+1)^0,c
  2113  0013F2  6A09               	clrf	??___xxtofl^0,c
  2114  0013F4  5009               	movf	??___xxtofl^0,w,c
  2115  0013F6  120F               	iorwf	___xxtofl@arg^0,f,c
  2116  0013F8  500A               	movf	(??___xxtofl+1)^0,w,c
  2117  0013FA  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  2118  0013FC  500B               	movf	(??___xxtofl+2)^0,w,c
  2119  0013FE  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  2120  001400  500C               	movf	(??___xxtofl+3)^0,w,c
  2121  001402  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  2122  001404  500D               	movf	___xxtofl@sign^0,w,c
  2123  001406  B4D8               	btfsc	status,2,c
  2124  001408  EF08  F00A         	goto	u1311
  2125  00140C  EF0A  F00A         	goto	u1310
  2126  001410                     u1311:
  2127  001410  EF12  F00A         	goto	l2029
  2128  001414                     u1310:
  2129  001414  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2130  001416  EF11  F00A         	goto	u1320
  2131  00141A  EF0F  F00A         	goto	u1321
  2132  00141E                     u1321:
  2133  00141E  EF12  F00A         	goto	l2029
  2134  001422                     u1320:
  2135  001422  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  2136  001424                     l2029:
  2137  001424  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  2138  001428  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  2139  00142C  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  2140  001430  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  2141  001434                     l1042:
  2142  001434  0012               	return		;funcret
  2143  001436                     __end_of___xxtofl:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function ___flmul *****************
  2147 ;; Defined at:
  2148 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  b               4   18[COMRAM] unsigned char 
  2151 ;;  a               4   22[COMRAM] unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  prod            4   37[COMRAM] struct .
  2154 ;;  grs             4   31[COMRAM] unsigned long 
  2155 ;;  temp            2   41[COMRAM] struct .
  2156 ;;  bexp            1   36[COMRAM] unsigned char 
  2157 ;;  aexp            1   35[COMRAM] unsigned char 
  2158 ;;  sign            1   30[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  4   18[COMRAM] unsigned char 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, prodl, prodh
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         8       0       0       0       0       0       0       0       0
  2169 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2171 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:       25 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 4
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_normaliza
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text6
  2183  000894                     __ptext6:
  2184                           	callstack 0
  2185  000894                     ___flmul:
  2186                           	callstack 25
  2187  000894  5016               	movf	(___flmul@b+3)^0,w,c
  2188  000896  0B80               	andlw	128
  2189  000898  6E1F               	movwf	___flmul@sign^0,c
  2190  00089A  5016               	movf	(___flmul@b+3)^0,w,c
  2191  00089C  2416               	addwf	(___flmul@b+3)^0,w,c
  2192  00089E  6E25               	movwf	___flmul@bexp^0,c
  2193  0008A0  AE15               	btfss	(___flmul@b+2)^0,7,c
  2194  0008A2  EF55  F004         	goto	u961
  2195  0008A6  EF57  F004         	goto	u960
  2196  0008AA                     u961:
  2197  0008AA  EF58  F004         	goto	l1825
  2198  0008AE                     u960:
  2199  0008AE  8025               	bsf	___flmul@bexp^0,0,c
  2200  0008B0                     l1825:
  2201  0008B0  5025               	movf	___flmul@bexp^0,w,c
  2202  0008B2  B4D8               	btfsc	status,2,c
  2203  0008B4  EF5E  F004         	goto	u971
  2204  0008B8  EF60  F004         	goto	u970
  2205  0008BC                     u971:
  2206  0008BC  EF73  F004         	goto	l1833
  2207  0008C0                     u970:
  2208  0008C0  2825               	incf	___flmul@bexp^0,w,c
  2209  0008C2  A4D8               	btfss	status,2,c
  2210  0008C4  EF66  F004         	goto	u981
  2211  0008C8  EF68  F004         	goto	u980
  2212  0008CC                     u981:
  2213  0008CC  EF70  F004         	goto	l1831
  2214  0008D0                     u980:
  2215  0008D0  0E00               	movlw	0
  2216  0008D2  6E13               	movwf	___flmul@b^0,c
  2217  0008D4  0E00               	movlw	0
  2218  0008D6  6E14               	movwf	(___flmul@b+1)^0,c
  2219  0008D8  0E00               	movlw	0
  2220  0008DA  6E15               	movwf	(___flmul@b+2)^0,c
  2221  0008DC  0E00               	movlw	0
  2222  0008DE  6E16               	movwf	(___flmul@b+3)^0,c
  2223  0008E0                     l1831:
  2224  0008E0  8E15               	bsf	(___flmul@b+2)^0,7,c
  2225  0008E2  EF7B  F004         	goto	l1835
  2226  0008E6                     l1833:
  2227  0008E6  0E00               	movlw	0
  2228  0008E8  6E13               	movwf	___flmul@b^0,c
  2229  0008EA  0E00               	movlw	0
  2230  0008EC  6E14               	movwf	(___flmul@b+1)^0,c
  2231  0008EE  0E00               	movlw	0
  2232  0008F0  6E15               	movwf	(___flmul@b+2)^0,c
  2233  0008F2  0E00               	movlw	0
  2234  0008F4  6E16               	movwf	(___flmul@b+3)^0,c
  2235  0008F6                     l1835:
  2236  0008F6  501A               	movf	(___flmul@a+3)^0,w,c
  2237  0008F8  0B80               	andlw	128
  2238  0008FA  1A1F               	xorwf	___flmul@sign^0,f,c
  2239  0008FC  501A               	movf	(___flmul@a+3)^0,w,c
  2240  0008FE  241A               	addwf	(___flmul@a+3)^0,w,c
  2241  000900  6E24               	movwf	___flmul@aexp^0,c
  2242  000902  AE19               	btfss	(___flmul@a+2)^0,7,c
  2243  000904  EF86  F004         	goto	u991
  2244  000908  EF88  F004         	goto	u990
  2245  00090C                     u991:
  2246  00090C  EF89  F004         	goto	l1843
  2247  000910                     u990:
  2248  000910  8024               	bsf	___flmul@aexp^0,0,c
  2249  000912                     l1843:
  2250  000912  5024               	movf	___flmul@aexp^0,w,c
  2251  000914  B4D8               	btfsc	status,2,c
  2252  000916  EF8F  F004         	goto	u1001
  2253  00091A  EF91  F004         	goto	u1000
  2254  00091E                     u1001:
  2255  00091E  EFA4  F004         	goto	l1851
  2256  000922                     u1000:
  2257  000922  2824               	incf	___flmul@aexp^0,w,c
  2258  000924  A4D8               	btfss	status,2,c
  2259  000926  EF97  F004         	goto	u1011
  2260  00092A  EF99  F004         	goto	u1010
  2261  00092E                     u1011:
  2262  00092E  EFA1  F004         	goto	l1849
  2263  000932                     u1010:
  2264  000932  0E00               	movlw	0
  2265  000934  6E17               	movwf	___flmul@a^0,c
  2266  000936  0E00               	movlw	0
  2267  000938  6E18               	movwf	(___flmul@a+1)^0,c
  2268  00093A  0E00               	movlw	0
  2269  00093C  6E19               	movwf	(___flmul@a+2)^0,c
  2270  00093E  0E00               	movlw	0
  2271  000940  6E1A               	movwf	(___flmul@a+3)^0,c
  2272  000942                     l1849:
  2273  000942  8E19               	bsf	(___flmul@a+2)^0,7,c
  2274  000944  EFAC  F004         	goto	l998
  2275  000948                     l1851:
  2276  000948  0E00               	movlw	0
  2277  00094A  6E17               	movwf	___flmul@a^0,c
  2278  00094C  0E00               	movlw	0
  2279  00094E  6E18               	movwf	(___flmul@a+1)^0,c
  2280  000950  0E00               	movlw	0
  2281  000952  6E19               	movwf	(___flmul@a+2)^0,c
  2282  000954  0E00               	movlw	0
  2283  000956  6E1A               	movwf	(___flmul@a+3)^0,c
  2284  000958                     l998:
  2285  000958  5024               	movf	___flmul@aexp^0,w,c
  2286  00095A  B4D8               	btfsc	status,2,c
  2287  00095C  EFB2  F004         	goto	u1021
  2288  000960  EFB4  F004         	goto	u1020
  2289  000964                     u1021:
  2290  000964  EFBC  F004         	goto	l1855
  2291  000968                     u1020:
  2292  000968  5025               	movf	___flmul@bexp^0,w,c
  2293  00096A  A4D8               	btfss	status,2,c
  2294  00096C  EFBA  F004         	goto	u1031
  2295  000970  EFBC  F004         	goto	u1030
  2296  000974                     u1031:
  2297  000974  EFC6  F004         	goto	l1859
  2298  000978                     u1030:
  2299  000978                     l1855:
  2300  000978  0E00               	movlw	0
  2301  00097A  6E13               	movwf	?___flmul^0,c
  2302  00097C  0E00               	movlw	0
  2303  00097E  6E14               	movwf	(?___flmul+1)^0,c
  2304  000980  0E00               	movlw	0
  2305  000982  6E15               	movwf	(?___flmul+2)^0,c
  2306  000984  0E00               	movlw	0
  2307  000986  6E16               	movwf	(?___flmul+3)^0,c
  2308  000988  EF5E  F006         	goto	l1002
  2309  00098C                     l1859:
  2310  00098C  5019               	movf	(___flmul@a+2)^0,w,c
  2311  00098E  0213               	mulwf	___flmul@b^0,c
  2312  000990  CFF3 F02A          	movff	prodl,___flmul@temp
  2313  000994  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2314  000998  502A               	movf	___flmul@temp^0,w,c
  2315  00099A  6E20               	movwf	___flmul@grs^0,c
  2316  00099C  6A21               	clrf	(___flmul@grs+1)^0,c
  2317  00099E  6A22               	clrf	(___flmul@grs+2)^0,c
  2318  0009A0  6A23               	clrf	(___flmul@grs+3)^0,c
  2319  0009A2  502B               	movf	(___flmul@temp+1)^0,w,c
  2320  0009A4  6E26               	movwf	___flmul@prod^0,c
  2321  0009A6  6A27               	clrf	(___flmul@prod+1)^0,c
  2322  0009A8  6A28               	clrf	(___flmul@prod+2)^0,c
  2323  0009AA  6A29               	clrf	(___flmul@prod+3)^0,c
  2324  0009AC  5018               	movf	(___flmul@a+1)^0,w,c
  2325  0009AE  0214               	mulwf	(___flmul@b+1)^0,c
  2326  0009B0  CFF3 F02A          	movff	prodl,___flmul@temp
  2327  0009B4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2328  0009B8  502A               	movf	___flmul@temp^0,w,c
  2329  0009BA  2620               	addwf	___flmul@grs^0,f,c
  2330  0009BC  0E00               	movlw	0
  2331  0009BE  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2332  0009C0  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2333  0009C2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2334  0009C4  502B               	movf	(___flmul@temp+1)^0,w,c
  2335  0009C6  2626               	addwf	___flmul@prod^0,f,c
  2336  0009C8  0E00               	movlw	0
  2337  0009CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2338  0009CC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2339  0009CE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2340  0009D0  5017               	movf	___flmul@a^0,w,c
  2341  0009D2  0215               	mulwf	(___flmul@b+2)^0,c
  2342  0009D4  CFF3 F02A          	movff	prodl,___flmul@temp
  2343  0009D8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2344  0009DC  502A               	movf	___flmul@temp^0,w,c
  2345  0009DE  2620               	addwf	___flmul@grs^0,f,c
  2346  0009E0  0E00               	movlw	0
  2347  0009E2  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2348  0009E4  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2349  0009E6  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2350  0009E8  502B               	movf	(___flmul@temp+1)^0,w,c
  2351  0009EA  2626               	addwf	___flmul@prod^0,f,c
  2352  0009EC  0E00               	movlw	0
  2353  0009EE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2354  0009F0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2355  0009F2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2356  0009F4  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2357  0009F8  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2358  0009FC  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2359  000A00  6A20               	clrf	___flmul@grs^0,c
  2360  000A02  5017               	movf	___flmul@a^0,w,c
  2361  000A04  0214               	mulwf	(___flmul@b+1)^0,c
  2362  000A06  CFF3 F02A          	movff	prodl,___flmul@temp
  2363  000A0A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2364  000A0E  502A               	movf	___flmul@temp^0,w,c
  2365  000A10  2620               	addwf	___flmul@grs^0,f,c
  2366  000A12  502B               	movf	(___flmul@temp+1)^0,w,c
  2367  000A14  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2368  000A16  0E00               	movlw	0
  2369  000A18  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2370  000A1A  0E00               	movlw	0
  2371  000A1C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2372  000A1E  5018               	movf	(___flmul@a+1)^0,w,c
  2373  000A20  0213               	mulwf	___flmul@b^0,c
  2374  000A22  CFF3 F02A          	movff	prodl,___flmul@temp
  2375  000A26  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2376  000A2A  502A               	movf	___flmul@temp^0,w,c
  2377  000A2C  2620               	addwf	___flmul@grs^0,f,c
  2378  000A2E  502B               	movf	(___flmul@temp+1)^0,w,c
  2379  000A30  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2380  000A32  0E00               	movlw	0
  2381  000A34  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2382  000A36  0E00               	movlw	0
  2383  000A38  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2384  000A3A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2385  000A3E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2386  000A42  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2387  000A46  6A20               	clrf	___flmul@grs^0,c
  2388  000A48  5017               	movf	___flmul@a^0,w,c
  2389  000A4A  0213               	mulwf	___flmul@b^0,c
  2390  000A4C  CFF3 F02A          	movff	prodl,___flmul@temp
  2391  000A50  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2392  000A54  502A               	movf	___flmul@temp^0,w,c
  2393  000A56  2620               	addwf	___flmul@grs^0,f,c
  2394  000A58  502B               	movf	(___flmul@temp+1)^0,w,c
  2395  000A5A  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2396  000A5C  0E00               	movlw	0
  2397  000A5E  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2398  000A60  0E00               	movlw	0
  2399  000A62  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2400  000A64  5019               	movf	(___flmul@a+2)^0,w,c
  2401  000A66  0214               	mulwf	(___flmul@b+1)^0,c
  2402  000A68  CFF3 F02A          	movff	prodl,___flmul@temp
  2403  000A6C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2404  000A70  502A               	movf	___flmul@temp^0,w,c
  2405  000A72  2626               	addwf	___flmul@prod^0,f,c
  2406  000A74  502B               	movf	(___flmul@temp+1)^0,w,c
  2407  000A76  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2408  000A78  0E00               	movlw	0
  2409  000A7A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2410  000A7C  0E00               	movlw	0
  2411  000A7E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2412  000A80  5018               	movf	(___flmul@a+1)^0,w,c
  2413  000A82  0215               	mulwf	(___flmul@b+2)^0,c
  2414  000A84  CFF3 F02A          	movff	prodl,___flmul@temp
  2415  000A88  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2416  000A8C  502A               	movf	___flmul@temp^0,w,c
  2417  000A8E  2626               	addwf	___flmul@prod^0,f,c
  2418  000A90  502B               	movf	(___flmul@temp+1)^0,w,c
  2419  000A92  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2420  000A94  0E00               	movlw	0
  2421  000A96  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2422  000A98  0E00               	movlw	0
  2423  000A9A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2424  000A9C  5019               	movf	(___flmul@a+2)^0,w,c
  2425  000A9E  0215               	mulwf	(___flmul@b+2)^0,c
  2426  000AA0  CFF3 F02A          	movff	prodl,___flmul@temp
  2427  000AA4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2428  000AA8  502A               	movf	___flmul@temp^0,w,c
  2429  000AAA  6E1B               	movwf	??___flmul^0,c
  2430  000AAC  502B               	movf	(___flmul@temp+1)^0,w,c
  2431  000AAE  6E1C               	movwf	(??___flmul+1)^0,c
  2432  000AB0  6A1D               	clrf	(??___flmul+2)^0,c
  2433  000AB2  6A1E               	clrf	(??___flmul+3)^0,c
  2434  000AB4  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  2435  000AB8  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  2436  000ABC  C01B  F01C         	movff	??___flmul,??___flmul+1
  2437  000AC0  6A1B               	clrf	??___flmul^0,c
  2438  000AC2  501B               	movf	??___flmul^0,w,c
  2439  000AC4  2626               	addwf	___flmul@prod^0,f,c
  2440  000AC6  501C               	movf	(??___flmul+1)^0,w,c
  2441  000AC8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2442  000ACA  501D               	movf	(??___flmul+2)^0,w,c
  2443  000ACC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2444  000ACE  501E               	movf	(??___flmul+3)^0,w,c
  2445  000AD0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2446  000AD2  C020  F01B         	movff	___flmul@grs,??___flmul
  2447  000AD6  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  2448  000ADA  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  2449  000ADE  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  2450  000AE2  0E19               	movlw	25
  2451  000AE4  EF79  F005         	goto	u1040
  2452  000AE8                     u1045:
  2453  000AE8  90D8               	bcf	status,0,c
  2454  000AEA  321E               	rrcf	(??___flmul+3)^0,f,c
  2455  000AEC  321D               	rrcf	(??___flmul+2)^0,f,c
  2456  000AEE  321C               	rrcf	(??___flmul+1)^0,f,c
  2457  000AF0  321B               	rrcf	??___flmul^0,f,c
  2458  000AF2                     u1040:
  2459  000AF2  2EE8               	decfsz	wreg,f,c
  2460  000AF4  EF74  F005         	goto	u1045
  2461  000AF8  501B               	movf	??___flmul^0,w,c
  2462  000AFA  2626               	addwf	___flmul@prod^0,f,c
  2463  000AFC  501C               	movf	(??___flmul+1)^0,w,c
  2464  000AFE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2465  000B00  501D               	movf	(??___flmul+2)^0,w,c
  2466  000B02  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2467  000B04  501E               	movf	(??___flmul+3)^0,w,c
  2468  000B06  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2469  000B08  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2470  000B0C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2471  000B10  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2472  000B14  6A20               	clrf	___flmul@grs^0,c
  2473  000B16  5024               	movf	___flmul@aexp^0,w,c
  2474  000B18  C025  F01B         	movff	___flmul@bexp,??___flmul
  2475  000B1C  6A1C               	clrf	(??___flmul+1)^0,c
  2476  000B1E  261B               	addwf	??___flmul^0,f,c
  2477  000B20  0E00               	movlw	0
  2478  000B22  221C               	addwfc	(??___flmul+1)^0,f,c
  2479  000B24  0E82               	movlw	130
  2480  000B26  241B               	addwf	??___flmul^0,w,c
  2481  000B28  6E2A               	movwf	___flmul@temp^0,c
  2482  000B2A  0EFF               	movlw	255
  2483  000B2C  201C               	addwfc	(??___flmul+1)^0,w,c
  2484  000B2E  6E2B               	movwf	(___flmul@temp+1)^0,c
  2485  000B30  EFAF  F005         	goto	l1907
  2486  000B34                     l1901:
  2487  000B34  90D8               	bcf	status,0,c
  2488  000B36  3626               	rlcf	___flmul@prod^0,f,c
  2489  000B38  3627               	rlcf	(___flmul@prod+1)^0,f,c
  2490  000B3A  3628               	rlcf	(___flmul@prod+2)^0,f,c
  2491  000B3C  3629               	rlcf	(___flmul@prod+3)^0,f,c
  2492  000B3E  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2493  000B40  EFA4  F005         	goto	u1051
  2494  000B44  EFA6  F005         	goto	u1050
  2495  000B48                     u1051:
  2496  000B48  EFA7  F005         	goto	l1005
  2497  000B4C                     u1050:
  2498  000B4C  8026               	bsf	___flmul@prod^0,0,c
  2499  000B4E                     l1005:
  2500  000B4E  90D8               	bcf	status,0,c
  2501  000B50  3620               	rlcf	___flmul@grs^0,f,c
  2502  000B52  3621               	rlcf	(___flmul@grs+1)^0,f,c
  2503  000B54  3622               	rlcf	(___flmul@grs+2)^0,f,c
  2504  000B56  3623               	rlcf	(___flmul@grs+3)^0,f,c
  2505  000B58  062A               	decf	___flmul@temp^0,f,c
  2506  000B5A  A0D8               	btfss	status,0,c
  2507  000B5C  062B               	decf	(___flmul@temp+1)^0,f,c
  2508  000B5E                     l1907:
  2509  000B5E  AE28               	btfss	(___flmul@prod+2)^0,7,c
  2510  000B60  EFB4  F005         	goto	u1061
  2511  000B64  EFB6  F005         	goto	u1060
  2512  000B68                     u1061:
  2513  000B68  EF9A  F005         	goto	l1901
  2514  000B6C                     u1060:
  2515  000B6C  0E00               	movlw	0
  2516  000B6E  6E24               	movwf	___flmul@aexp^0,c
  2517  000B70  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2518  000B72  EFBD  F005         	goto	u1071
  2519  000B76  EFBF  F005         	goto	u1070
  2520  000B7A                     u1071:
  2521  000B7A  EFE3  F005         	goto	l1007
  2522  000B7E                     u1070:
  2523  000B7E  0EFF               	movlw	255
  2524  000B80  1420               	andwf	___flmul@grs^0,w,c
  2525  000B82  6E1B               	movwf	??___flmul^0,c
  2526  000B84  0EFF               	movlw	255
  2527  000B86  1421               	andwf	(___flmul@grs+1)^0,w,c
  2528  000B88  6E1C               	movwf	(??___flmul+1)^0,c
  2529  000B8A  0EFF               	movlw	255
  2530  000B8C  1422               	andwf	(___flmul@grs+2)^0,w,c
  2531  000B8E  6E1D               	movwf	(??___flmul+2)^0,c
  2532  000B90  0E7F               	movlw	127
  2533  000B92  1423               	andwf	(___flmul@grs+3)^0,w,c
  2534  000B94  6E1E               	movwf	(??___flmul+3)^0,c
  2535  000B96  501B               	movf	??___flmul^0,w,c
  2536  000B98  101C               	iorwf	(??___flmul+1)^0,w,c
  2537  000B9A  101D               	iorwf	(??___flmul+2)^0,w,c
  2538  000B9C  101E               	iorwf	(??___flmul+3)^0,w,c
  2539  000B9E  B4D8               	btfsc	status,2,c
  2540  000BA0  EFD4  F005         	goto	u1081
  2541  000BA4  EFD6  F005         	goto	u1080
  2542  000BA8                     u1081:
  2543  000BA8  EFDA  F005         	goto	l1008
  2544  000BAC                     u1080:
  2545  000BAC                     l1915:
  2546  000BAC  0E01               	movlw	1
  2547  000BAE  6E24               	movwf	___flmul@aexp^0,c
  2548  000BB0  EFE3  F005         	goto	l1007
  2549  000BB4                     l1008:
  2550  000BB4  A026               	btfss	___flmul@prod^0,0,c
  2551  000BB6  EFDF  F005         	goto	u1091
  2552  000BBA  EFE1  F005         	goto	u1090
  2553  000BBE                     u1091:
  2554  000BBE  EFE3  F005         	goto	l1007
  2555  000BC2                     u1090:
  2556  000BC2  EFD6  F005         	goto	l1915
  2557  000BC6                     l1007:
  2558  000BC6  5024               	movf	___flmul@aexp^0,w,c
  2559  000BC8  B4D8               	btfsc	status,2,c
  2560  000BCA  EFE9  F005         	goto	u1101
  2561  000BCE  EFEB  F005         	goto	u1100
  2562  000BD2                     u1101:
  2563  000BD2  EF0F  F006         	goto	l1927
  2564  000BD6                     u1100:
  2565  000BD6  0E01               	movlw	1
  2566  000BD8  2626               	addwf	___flmul@prod^0,f,c
  2567  000BDA  0E00               	movlw	0
  2568  000BDC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2569  000BDE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2570  000BE0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2571  000BE2  A029               	btfss	(___flmul@prod+3)^0,0,c
  2572  000BE4  EFF6  F005         	goto	u1111
  2573  000BE8  EFF8  F005         	goto	u1110
  2574  000BEC                     u1111:
  2575  000BEC  EF0F  F006         	goto	l1927
  2576  000BF0                     u1110:
  2577  000BF0  C026  F01B         	movff	___flmul@prod,??___flmul
  2578  000BF4  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  2579  000BF8  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  2580  000BFC  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  2581  000C00  341E               	rlcf	(??___flmul+3)^0,w,c
  2582  000C02  321E               	rrcf	(??___flmul+3)^0,f,c
  2583  000C04  321D               	rrcf	(??___flmul+2)^0,f,c
  2584  000C06  321C               	rrcf	(??___flmul+1)^0,f,c
  2585  000C08  321B               	rrcf	??___flmul^0,f,c
  2586  000C0A  C01B  F026         	movff	??___flmul,___flmul@prod
  2587  000C0E  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  2588  000C12  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  2589  000C16  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  2590  000C1A  4A2A               	infsnz	___flmul@temp^0,f,c
  2591  000C1C  2A2B               	incf	(___flmul@temp+1)^0,f,c
  2592  000C1E                     l1927:
  2593  000C1E  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2594  000C20  EF1A  F006         	goto	u1121
  2595  000C24  502B               	movf	(___flmul@temp+1)^0,w,c
  2596  000C26  E108               	bnz	u1120
  2597  000C28  282A               	incf	___flmul@temp^0,w,c
  2598  000C2A  A0D8               	btfss	status,0,c
  2599  000C2C  EF1A  F006         	goto	u1121
  2600  000C30  EF1C  F006         	goto	u1120
  2601  000C34                     u1121:
  2602  000C34  EF26  F006         	goto	l1931
  2603  000C38                     u1120:
  2604  000C38  0E00               	movlw	0
  2605  000C3A  6E26               	movwf	___flmul@prod^0,c
  2606  000C3C  0E00               	movlw	0
  2607  000C3E  6E27               	movwf	(___flmul@prod+1)^0,c
  2608  000C40  0E80               	movlw	128
  2609  000C42  6E28               	movwf	(___flmul@prod+2)^0,c
  2610  000C44  0E7F               	movlw	127
  2611  000C46  6E29               	movwf	(___flmul@prod+3)^0,c
  2612  000C48  EF54  F006         	goto	l1943
  2613  000C4C                     l1931:
  2614  000C4C  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2615  000C4E  EF33  F006         	goto	u1130
  2616  000C52  502B               	movf	(___flmul@temp+1)^0,w,c
  2617  000C54  E106               	bnz	u1131
  2618  000C56  042A               	decf	___flmul@temp^0,w,c
  2619  000C58  B0D8               	btfsc	status,0,c
  2620  000C5A  EF31  F006         	goto	u1131
  2621  000C5E  EF33  F006         	goto	u1130
  2622  000C62                     u1131:
  2623  000C62  EF3F  F006         	goto	l1015
  2624  000C66                     u1130:
  2625  000C66  0E00               	movlw	0
  2626  000C68  6E26               	movwf	___flmul@prod^0,c
  2627  000C6A  0E00               	movlw	0
  2628  000C6C  6E27               	movwf	(___flmul@prod+1)^0,c
  2629  000C6E  0E00               	movlw	0
  2630  000C70  6E28               	movwf	(___flmul@prod+2)^0,c
  2631  000C72  0E00               	movlw	0
  2632  000C74  6E29               	movwf	(___flmul@prod+3)^0,c
  2633  000C76  0E00               	movlw	0
  2634  000C78  6E1F               	movwf	___flmul@sign^0,c
  2635  000C7A  EF54  F006         	goto	l1943
  2636  000C7E                     l1015:
  2637  000C7E  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  2638  000C82  0EFF               	movlw	255
  2639  000C84  1626               	andwf	___flmul@prod^0,f,c
  2640  000C86  0EFF               	movlw	255
  2641  000C88  1627               	andwf	(___flmul@prod+1)^0,f,c
  2642  000C8A  0E7F               	movlw	127
  2643  000C8C  1628               	andwf	(___flmul@prod+2)^0,f,c
  2644  000C8E  0E00               	movlw	0
  2645  000C90  1629               	andwf	(___flmul@prod+3)^0,f,c
  2646  000C92  A025               	btfss	___flmul@bexp^0,0,c
  2647  000C94  EF4E  F006         	goto	u1141
  2648  000C98  EF50  F006         	goto	u1140
  2649  000C9C                     u1141:
  2650  000C9C  EF51  F006         	goto	l1941
  2651  000CA0                     u1140:
  2652  000CA0  8E28               	bsf	(___flmul@prod+2)^0,7,c
  2653  000CA2                     l1941:
  2654  000CA2  90D8               	bcf	status,0,c
  2655  000CA4  3025               	rrcf	___flmul@bexp^0,w,c
  2656  000CA6  6E29               	movwf	(___flmul@prod+3)^0,c
  2657  000CA8                     l1943:
  2658  000CA8  501F               	movf	___flmul@sign^0,w,c
  2659  000CAA  1229               	iorwf	(___flmul@prod+3)^0,f,c
  2660  000CAC  C026  F013         	movff	___flmul@prod,?___flmul
  2661  000CB0  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  2662  000CB4  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  2663  000CB8  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  2664  000CBC                     l1002:
  2665  000CBC  0012               	return		;funcret
  2666  000CBE                     __end_of___flmul:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function ___flge *****************
  2670 ;; Defined at:
  2671 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  ff1             4   43[COMRAM] unsigned char 
  2674 ;;  ff2             4   47[COMRAM] unsigned char 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;		None               void
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2686 ;;      Params:         8       0       0       0       0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2688 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2689 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2690 ;;Total ram usage:       12 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 4
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_normaliza
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text7
  2701  0015CE                     __ptext7:
  2702                           	callstack 0
  2703  0015CE                     ___flge:
  2704                           	callstack 25
  2705  0015CE  0E00               	movlw	0
  2706  0015D0  142C               	andwf	___flge@ff1^0,w,c
  2707  0015D2  6E34               	movwf	??___flge^0,c
  2708  0015D4  0E00               	movlw	0
  2709  0015D6  142D               	andwf	(___flge@ff1+1)^0,w,c
  2710  0015D8  6E35               	movwf	(??___flge+1)^0,c
  2711  0015DA  0E80               	movlw	128
  2712  0015DC  142E               	andwf	(___flge@ff1+2)^0,w,c
  2713  0015DE  6E36               	movwf	(??___flge+2)^0,c
  2714  0015E0  0E7F               	movlw	127
  2715  0015E2  142F               	andwf	(___flge@ff1+3)^0,w,c
  2716  0015E4  6E37               	movwf	(??___flge+3)^0,c
  2717  0015E6  5034               	movf	??___flge^0,w,c
  2718  0015E8  1035               	iorwf	(??___flge+1)^0,w,c
  2719  0015EA  1036               	iorwf	(??___flge+2)^0,w,c
  2720  0015EC  1037               	iorwf	(??___flge+3)^0,w,c
  2721  0015EE  A4D8               	btfss	status,2,c
  2722  0015F0  EFFC  F00A         	goto	u1151
  2723  0015F4  EFFE  F00A         	goto	u1150
  2724  0015F8                     u1151:
  2725  0015F8  EF06  F00B         	goto	l1953
  2726  0015FC                     u1150:
  2727  0015FC  0E00               	movlw	0
  2728  0015FE  6E2C               	movwf	___flge@ff1^0,c
  2729  001600  0E00               	movlw	0
  2730  001602  6E2D               	movwf	(___flge@ff1+1)^0,c
  2731  001604  0E00               	movlw	0
  2732  001606  6E2E               	movwf	(___flge@ff1+2)^0,c
  2733  001608  0E00               	movlw	0
  2734  00160A  6E2F               	movwf	(___flge@ff1+3)^0,c
  2735  00160C                     l1953:
  2736  00160C  0E00               	movlw	0
  2737  00160E  1430               	andwf	___flge@ff2^0,w,c
  2738  001610  6E34               	movwf	??___flge^0,c
  2739  001612  0E00               	movlw	0
  2740  001614  1431               	andwf	(___flge@ff2+1)^0,w,c
  2741  001616  6E35               	movwf	(??___flge+1)^0,c
  2742  001618  0E80               	movlw	128
  2743  00161A  1432               	andwf	(___flge@ff2+2)^0,w,c
  2744  00161C  6E36               	movwf	(??___flge+2)^0,c
  2745  00161E  0E7F               	movlw	127
  2746  001620  1433               	andwf	(___flge@ff2+3)^0,w,c
  2747  001622  6E37               	movwf	(??___flge+3)^0,c
  2748  001624  5034               	movf	??___flge^0,w,c
  2749  001626  1035               	iorwf	(??___flge+1)^0,w,c
  2750  001628  1036               	iorwf	(??___flge+2)^0,w,c
  2751  00162A  1037               	iorwf	(??___flge+3)^0,w,c
  2752  00162C  A4D8               	btfss	status,2,c
  2753  00162E  EF1B  F00B         	goto	u1161
  2754  001632  EF1D  F00B         	goto	u1160
  2755  001636                     u1161:
  2756  001636  EF25  F00B         	goto	l1957
  2757  00163A                     u1160:
  2758  00163A  0E00               	movlw	0
  2759  00163C  6E30               	movwf	___flge@ff2^0,c
  2760  00163E  0E00               	movlw	0
  2761  001640  6E31               	movwf	(___flge@ff2+1)^0,c
  2762  001642  0E00               	movlw	0
  2763  001644  6E32               	movwf	(___flge@ff2+2)^0,c
  2764  001646  0E00               	movlw	0
  2765  001648  6E33               	movwf	(___flge@ff2+3)^0,c
  2766  00164A                     l1957:
  2767  00164A  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  2768  00164C  EF2A  F00B         	goto	u1171
  2769  001650  EF2C  F00B         	goto	u1170
  2770  001654                     u1171:
  2771  001654  EF35  F00B         	goto	l1961
  2772  001658                     u1170:
  2773  001658  6C2C               	negf	___flge@ff1^0,c
  2774  00165A  1E2D               	comf	(___flge@ff1+1)^0,f,c
  2775  00165C  B0D8               	btfsc	status,0,c
  2776  00165E  2A2D               	incf	(___flge@ff1+1)^0,f,c
  2777  001660  1E2E               	comf	(___flge@ff1+2)^0,f,c
  2778  001662  B0D8               	btfsc	status,0,c
  2779  001664  2A2E               	incf	(___flge@ff1+2)^0,f,c
  2780  001666  0E80               	movlw	128
  2781  001668  562F               	subfwb	(___flge@ff1+3)^0,f,c
  2782  00166A                     l1961:
  2783  00166A  AE33               	btfss	(___flge@ff2+3)^0,7,c
  2784  00166C  EF3A  F00B         	goto	u1181
  2785  001670  EF3C  F00B         	goto	u1180
  2786  001674                     u1181:
  2787  001674  EF45  F00B         	goto	l657
  2788  001678                     u1180:
  2789  001678  6C30               	negf	___flge@ff2^0,c
  2790  00167A  1E31               	comf	(___flge@ff2+1)^0,f,c
  2791  00167C  B0D8               	btfsc	status,0,c
  2792  00167E  2A31               	incf	(___flge@ff2+1)^0,f,c
  2793  001680  1E32               	comf	(___flge@ff2+2)^0,f,c
  2794  001682  B0D8               	btfsc	status,0,c
  2795  001684  2A32               	incf	(___flge@ff2+2)^0,f,c
  2796  001686  0E80               	movlw	128
  2797  001688  5633               	subfwb	(___flge@ff2+3)^0,f,c
  2798  00168A                     l657:
  2799  00168A  0E00               	movlw	0
  2800  00168C  1A2C               	xorwf	___flge@ff1^0,f,c
  2801  00168E  0E00               	movlw	0
  2802  001690  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  2803  001692  0E00               	movlw	0
  2804  001694  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  2805  001696  0E80               	movlw	128
  2806  001698  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  2807  00169A  0E00               	movlw	0
  2808  00169C  1A30               	xorwf	___flge@ff2^0,f,c
  2809  00169E  0E00               	movlw	0
  2810  0016A0  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  2811  0016A2  0E00               	movlw	0
  2812  0016A4  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  2813  0016A6  0E80               	movlw	128
  2814  0016A8  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  2815  0016AA  5030               	movf	___flge@ff2^0,w,c
  2816  0016AC  5C2C               	subwf	___flge@ff1^0,w,c
  2817  0016AE  5031               	movf	(___flge@ff2+1)^0,w,c
  2818  0016B0  582D               	subwfb	(___flge@ff1+1)^0,w,c
  2819  0016B2  5032               	movf	(___flge@ff2+2)^0,w,c
  2820  0016B4  582E               	subwfb	(___flge@ff1+2)^0,w,c
  2821  0016B6  5033               	movf	(___flge@ff2+3)^0,w,c
  2822  0016B8  582F               	subwfb	(___flge@ff1+3)^0,w,c
  2823  0016BA  B0D8               	btfsc	status,0,c
  2824  0016BC  EF62  F00B         	goto	u1191
  2825  0016C0  EF64  F00B         	goto	u1190
  2826  0016C4                     u1191:
  2827  0016C4  EF67  F00B         	goto	l1967
  2828  0016C8                     u1190:
  2829  0016C8  90D8               	bcf	status,0,c
  2830  0016CA  EF68  F00B         	goto	l658
  2831  0016CE                     l1967:
  2832  0016CE  80D8               	bsf	status,0,c
  2833  0016D0                     l658:
  2834  0016D0  0012               	return		;funcret
  2835  0016D2                     __end_of___flge:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _SYSTEM_Initialize *****************
  2839 ;; Defined at:
  2840 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 6
  2861 ;; This function calls:
  2862 ;;		_EUSART1_Initialize
  2863 ;;		_EXT_INT_Initialize
  2864 ;;		_INTERRUPT_Initialize
  2865 ;;		_OSCILLATOR_Initialize
  2866 ;;		_PIN_MANAGER_Initialize
  2867 ;;		_TMR0_Initialize
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text8
  2874  001A2C                     __ptext8:
  2875                           	callstack 0
  2876  001A2C                     _SYSTEM_Initialize:
  2877                           	callstack 24
  2878  001A2C                     
  2879                           ;mcc.c: 53: INTERRUPT_Initialize();
  2880  001A2C  EC63  F00D         	call	_INTERRUPT_Initialize	;wreg free
  2881  001A30                     
  2882                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2883  001A30  ECD5  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2884  001A34                     
  2885                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2886  001A34  EC42  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  2887  001A38                     
  2888                           ;mcc.c: 56: EXT_INT_Initialize();
  2889  001A38  EC38  F00D         	call	_EXT_INT_Initialize	;wreg free
  2890  001A3C                     
  2891                           ;mcc.c: 57: TMR0_Initialize();
  2892  001A3C  EC2E  F00D         	call	_TMR0_Initialize	;wreg free
  2893  001A40                     
  2894                           ;mcc.c: 58: EUSART1_Initialize();
  2895  001A40  ECB6  F00C         	call	_EUSART1_Initialize	;wreg free
  2896  001A44  0012               	return		;funcret
  2897  001A46                     __end_of_SYSTEM_Initialize:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _TMR0_Initialize *****************
  2901 ;; Defined at:
  2902 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 4
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_SYSTEM_Initialize
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text9
  2931  001A5C                     __ptext9:
  2932                           	callstack 0
  2933  001A5C                     _TMR0_Initialize:
  2934                           	callstack 25
  2935  001A5C                     
  2936                           ;tmr0.c: 71: TMR0H = 0x00;
  2937  001A5C  0E00               	movlw	0
  2938  001A5E  6ED7               	movwf	215,c	;volatile
  2939                           
  2940                           ;tmr0.c: 74: TMR0L = 0x64;
  2941  001A60  0E64               	movlw	100
  2942  001A62  6ED6               	movwf	214,c	;volatile
  2943                           
  2944                           ;tmr0.c: 78: timer0ReloadVal = 100;
  2945  001A64  0E64               	movlw	100
  2946  001A66  6E5A               	movwf	_timer0ReloadVal^0,c	;volatile
  2947  001A68                     
  2948                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  2949  001A68  94F2               	bcf	242,2,c	;volatile
  2950                           
  2951                           ;tmr0.c: 84: T0CON = 0xD7;
  2952  001A6A  0ED7               	movlw	215
  2953  001A6C  6ED5               	movwf	213,c	;volatile
  2954  001A6E  0012               	return		;funcret
  2955  001A70                     __end_of_TMR0_Initialize:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _PIN_MANAGER_Initialize *****************
  2959 ;; Defined at:
  2960 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 4
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_SYSTEM_Initialize
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text10
  2989  0019AA                     __ptext10:
  2990                           	callstack 0
  2991  0019AA                     _PIN_MANAGER_Initialize:
  2992                           	callstack 25
  2993  0019AA                     
  2994                           ;pin_manager.c: 60: LATA = 0x00;
  2995  0019AA  0E00               	movlw	0
  2996  0019AC  6E89               	movwf	137,c	;volatile
  2997                           
  2998                           ;pin_manager.c: 61: LATB = 0x00;
  2999  0019AE  0E00               	movlw	0
  3000  0019B0  6E8A               	movwf	138,c	;volatile
  3001                           
  3002                           ;pin_manager.c: 62: LATC = 0x00;
  3003  0019B2  0E00               	movlw	0
  3004  0019B4  6E8B               	movwf	139,c	;volatile
  3005                           
  3006                           ;pin_manager.c: 67: TRISA = 0xC7;
  3007  0019B6  0EC7               	movlw	199
  3008  0019B8  6E92               	movwf	146,c	;volatile
  3009                           
  3010                           ;pin_manager.c: 68: TRISB = 0xFE;
  3011  0019BA  0EFE               	movlw	254
  3012  0019BC  6E93               	movwf	147,c	;volatile
  3013                           
  3014                           ;pin_manager.c: 69: TRISC = 0x87;
  3015  0019BE  0E87               	movlw	135
  3016  0019C0  6E94               	movwf	148,c	;volatile
  3017                           
  3018                           ;pin_manager.c: 74: ANSELC = 0x84;
  3019  0019C2  0E84               	movlw	132
  3020  0019C4  010F               	movlb	15	; () banked
  3021  0019C6  6F5D               	movwf	93,b	;volatile
  3022                           
  3023                           ;pin_manager.c: 75: ANSELB = 0x3C;
  3024  0019C8  0E3C               	movlw	60
  3025  0019CA  6F5C               	movwf	92,b	;volatile
  3026                           
  3027                           ;pin_manager.c: 76: ANSELA = 0x07;
  3028  0019CC  0E07               	movlw	7
  3029  0019CE  6F5B               	movwf	91,b	;volatile
  3030                           
  3031                           ;pin_manager.c: 81: WPUB = 0x00;
  3032  0019D0  0E00               	movlw	0
  3033  0019D2  6E85               	movwf	133,c	;volatile
  3034  0019D4                     
  3035                           ; BSR set to: 15
  3036                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  3037  0019D4  8EF1               	bsf	241,7,c	;volatile
  3038  0019D6                     
  3039                           ; BSR set to: 15
  3040  0019D6  0012               	return		;funcret
  3041  0019D8                     __end_of_PIN_MANAGER_Initialize:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _OSCILLATOR_Initialize *****************
  3045 ;; Defined at:
  3046 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 4
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_SYSTEM_Initialize
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text11
  3075  001A84                     __ptext11:
  3076                           	callstack 0
  3077  001A84                     _OSCILLATOR_Initialize:
  3078                           	callstack 25
  3079  001A84                     
  3080                           ;mcc.c: 64: OSCCON = 0x70;
  3081  001A84  0E70               	movlw	112
  3082  001A86  6ED3               	movwf	211,c	;volatile
  3083                           
  3084                           ;mcc.c: 66: OSCCON2 = 0x00;
  3085  001A88  0E00               	movlw	0
  3086  001A8A  6ED2               	movwf	210,c	;volatile
  3087                           
  3088                           ;mcc.c: 68: OSCTUNE = 0x80;
  3089  001A8C  0E80               	movlw	128
  3090  001A8E  6E9B               	movwf	155,c	;volatile
  3091                           
  3092                           ;mcc.c: 70: ACTCON = 0x00;
  3093  001A90  0E00               	movlw	0
  3094  001A92  6EB5               	movwf	181,c	;volatile
  3095  001A94  0012               	return		;funcret
  3096  001A96                     __end_of_OSCILLATOR_Initialize:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _INTERRUPT_Initialize *****************
  3100 ;; Defined at:
  3101 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		None
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3118 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 4
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_SYSTEM_Initialize
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text12
  3130  001AC6                     __ptext12:
  3131                           	callstack 0
  3132  001AC6                     _INTERRUPT_Initialize:
  3133                           	callstack 25
  3134  001AC6                     
  3135                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3136  001AC6  9ED0               	bcf	208,7,c	;volatile
  3137  001AC8  0012               	return		;funcret
  3138  001ACA                     __end_of_INTERRUPT_Initialize:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _EXT_INT_Initialize *****************
  3142 ;; Defined at:
  3143 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3160 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3161 ;;Total ram usage:        0 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 5
  3164 ;; This function calls:
  3165 ;;		_INT1_SetInterruptHandler
  3166 ;; This function is called by:
  3167 ;;		_SYSTEM_Initialize
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text13
  3172  001A70                     __ptext13:
  3173                           	callstack 0
  3174  001A70                     _EXT_INT_Initialize:
  3175                           	callstack 24
  3176  001A70                     
  3177                           ;ext_int.c: 64: (INTCON3bits.INT1IF = 0);
  3178  001A70  90F0               	bcf	240,0,c	;volatile
  3179                           
  3180                           ;ext_int.c: 65: (INTCON2bits.INTEDG1 = 0);
  3181  001A72  9AF1               	bcf	241,5,c	;volatile
  3182  001A74                     
  3183                           ;ext_int.c: 67: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3184  001A74  0ECA               	movlw	low _INT1_DefaultInterruptHandler
  3185  001A76  6E05               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3186  001A78  0E1A               	movlw	high _INT1_DefaultInterruptHandler
  3187  001A7A  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3188  001A7C  EC4B  F00D         	call	_INT1_SetInterruptHandler	;wreg free
  3189  001A80                     
  3190                           ;ext_int.c: 68: (INTCON3bits.INT1IE = 1);
  3191  001A80  86F0               	bsf	240,3,c	;volatile
  3192  001A82  0012               	return		;funcret
  3193  001A84                     __end_of_EXT_INT_Initialize:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _INT1_SetInterruptHandler *****************
  3197 ;; Defined at:
  3198 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  3201 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3213 ;;      Params:         2       0       0       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3216 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:        2 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 4
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_EXT_INT_Initialize
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text14
  3228  001A96                     __ptext14:
  3229                           	callstack 0
  3230  001A96                     _INT1_SetInterruptHandler:
  3231                           	callstack 24
  3232  001A96                     
  3233                           ;ext_int.c: 51: INT1_InterruptHandler = InterruptHandler;
  3234  001A96  C005  F052         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3235  001A9A  C006  F053         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3236  001A9E  0012               	return		;funcret
  3237  001AA0                     __end_of_INT1_SetInterruptHandler:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _EUSART1_Initialize *****************
  3241 ;; Defined at:
  3242 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3256 ;;      Params:         0       0       0       0       0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3259 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 5
  3263 ;; This function calls:
  3264 ;;		_EUSART1_SetErrorHandler
  3265 ;;		_EUSART1_SetFramingErrorHandler
  3266 ;;		_EUSART1_SetOverrunErrorHandler
  3267 ;; This function is called by:
  3268 ;;		_SYSTEM_Initialize
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text15
  3273  00196C                     __ptext15:
  3274                           	callstack 0
  3275  00196C                     _EUSART1_Initialize:
  3276                           	callstack 24
  3277  00196C                     
  3278                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  3279  00196C  0E08               	movlw	8
  3280  00196E  6EB8               	movwf	184,c	;volatile
  3281                           
  3282                           ;eusart1.c: 74: RCSTA1 = 0x80;
  3283  001970  0E80               	movlw	128
  3284  001972  6EAB               	movwf	171,c	;volatile
  3285                           
  3286                           ;eusart1.c: 77: TXSTA1 = 0x24;
  3287  001974  0E24               	movlw	36
  3288  001976  6EAC               	movwf	172,c	;volatile
  3289                           
  3290                           ;eusart1.c: 80: SPBRG1 = 0xA0;
  3291  001978  0EA0               	movlw	160
  3292  00197A  6EAF               	movwf	175,c	;volatile
  3293                           
  3294                           ;eusart1.c: 83: SPBRGH1 = 0x01;
  3295  00197C  0E01               	movlw	1
  3296  00197E  6EB0               	movwf	176,c	;volatile
  3297  001980                     
  3298                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3299  001980  0E00               	movlw	0
  3300  001982  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3301  001984  0E00               	movlw	0
  3302  001986  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3303  001988  EC55  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3304  00198C                     
  3305                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3306  00198C  0E00               	movlw	0
  3307  00198E  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3308  001990  0E00               	movlw	0
  3309  001992  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3310  001994  EC50  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3311  001998                     
  3312                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3313  001998  0E00               	movlw	0
  3314  00199A  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3315  00199C  0E00               	movlw	0
  3316  00199E  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3317  0019A0  EC5A  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  3318  0019A4                     
  3319                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  3320  0019A4  0E00               	movlw	0
  3321  0019A6  6E47               	movwf	_eusart1RxLastError^0,c	;volatile
  3322  0019A8  0012               	return		;funcret
  3323  0019AA                     __end_of_EUSART1_Initialize:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3327 ;; Defined at:
  3328 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3331 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3343 ;;      Params:         2       0       0       0       0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3346 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3347 ;;Total ram usage:        2 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 4
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_EUSART1_Initialize
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text16
  3358  001AA0                     __ptext16:
  3359                           	callstack 0
  3360  001AA0                     _EUSART1_SetOverrunErrorHandler:
  3361                           	callstack 24
  3362  001AA0                     
  3363                           ;eusart1.c: 179: EUSART1_OverrunErrorHandler = interruptHandler;
  3364  001AA0  C005  F056         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3365  001AA4  C006  F057         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3366  001AA8  0012               	return		;funcret
  3367  001AAA                     __end_of_EUSART1_SetOverrunErrorHandler:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3371 ;; Defined at:
  3372 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3375 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3387 ;;      Params:         2       0       0       0       0       0       0       0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3390 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3391 ;;Total ram usage:        2 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 4
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_EUSART1_Initialize
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text17
  3402  001AAA                     __ptext17:
  3403                           	callstack 0
  3404  001AAA                     _EUSART1_SetFramingErrorHandler:
  3405                           	callstack 24
  3406  001AAA                     
  3407                           ;eusart1.c: 175: EUSART1_FramingErrorHandler = interruptHandler;
  3408  001AAA  C005  F058         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3409  001AAE  C006  F059         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3410  001AB2  0012               	return		;funcret
  3411  001AB4                     __end_of_EUSART1_SetFramingErrorHandler:
  3412                           	callstack 0
  3413                           
  3414 ;; *************** function _EUSART1_SetErrorHandler *****************
  3415 ;; Defined at:
  3416 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3419 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3431 ;;      Params:         2       0       0       0       0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3434 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3435 ;;Total ram usage:        2 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 4
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_EUSART1_Initialize
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text18
  3446  001AB4                     __ptext18:
  3447                           	callstack 0
  3448  001AB4                     _EUSART1_SetErrorHandler:
  3449                           	callstack 24
  3450  001AB4                     
  3451                           ;eusart1.c: 183: EUSART1_ErrorHandler = interruptHandler;
  3452  001AB4  C005  F054         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3453  001AB8  C006  F055         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3454  001ABC  0012               	return		;funcret
  3455  001ABE                     __end_of_EUSART1_SetErrorHandler:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _Hash_algoritmo *****************
  3459 ;; Defined at:
  3460 ;;		line 128 in file "main.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  hash_acum       4   26[COMRAM] unsigned long 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  4   16[COMRAM] unsigned long 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3474 ;;      Params:         4       0       0       0       0       0       0       0       0
  3475 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3476 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3477 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3478 ;;Total ram usage:       14 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 5
  3481 ;; This function calls:
  3482 ;;		___lmul
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text19
  3489  0016D2                     __ptext19:
  3490                           	callstack 0
  3491  0016D2                     _Hash_algoritmo:
  3492                           	callstack 25
  3493  0016D2                     
  3494                           ;main.c: 130: unsigned long hash_acum = 2166136261;
  3495  0016D2  0EC5               	movlw	197
  3496  0016D4  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3497  0016D6  0E9D               	movlw	157
  3498  0016D8  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3499  0016DA  0E1C               	movlw	28
  3500  0016DC  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3501  0016DE  0E81               	movlw	129
  3502  0016E0  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3503                           
  3504                           ;main.c: 131: for (cont = 0; cont < cuenta - 1; cont++)
  3505  0016E2  0E00               	movlw	0
  3506  0016E4  6E45               	movwf	_cont^0,c
  3507  0016E6  EF99  F00B         	goto	l2079
  3508  0016EA                     l2075:
  3509                           
  3510                           ;main.c: 132: {;main.c: 133: hash_acum = (hash_acum * 16777619) ^ tiempo[cont];
  3511  0016EA  C01B  F005         	movff	Hash_algoritmo@hash_acum,___lmul@multiplier
  3512  0016EE  C01C  F006         	movff	Hash_algoritmo@hash_acum+1,___lmul@multiplier+1
  3513  0016F2  C01D  F007         	movff	Hash_algoritmo@hash_acum+2,___lmul@multiplier+2
  3514  0016F6  C01E  F008         	movff	Hash_algoritmo@hash_acum+3,___lmul@multiplier+3
  3515  0016FA  0E93               	movlw	147
  3516  0016FC  6E09               	movwf	___lmul@multiplicand^0,c
  3517  0016FE  0E01               	movlw	1
  3518  001700  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  3519  001702  0E00               	movlw	0
  3520  001704  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  3521  001706  0E01               	movlw	1
  3522  001708  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  3523  00170A  EC52  F00C         	call	___lmul	;wreg free
  3524  00170E  0E60               	movlw	low _tiempo
  3525  001710  2445               	addwf	_cont^0,w,c
  3526  001712  6ED9               	movwf	fsr2l,c
  3527  001714  6ADA               	clrf	fsr2h,c
  3528  001716  0E00               	movlw	high _tiempo
  3529  001718  22DA               	addwfc	fsr2h,f,c
  3530  00171A  50DF               	movf	indf2,w,c
  3531  00171C  6E15               	movwf	??_Hash_algoritmo^0,c
  3532  00171E  5015               	movf	??_Hash_algoritmo^0,w,c
  3533  001720  1805               	xorwf	?___lmul^0,w,c
  3534  001722  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3535  001724  5006               	movf	(?___lmul+1)^0,w,c
  3536  001726  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3537  001728  5007               	movf	(?___lmul+2)^0,w,c
  3538  00172A  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3539  00172C  5008               	movf	(?___lmul+3)^0,w,c
  3540  00172E  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3541  001730  2A45               	incf	_cont^0,f,c
  3542  001732                     l2079:
  3543  001732  0EFF               	movlw	255
  3544  001734  6E15               	movwf	??_Hash_algoritmo^0,c
  3545  001736  0EFF               	movlw	255
  3546  001738  6E16               	movwf	(??_Hash_algoritmo+1)^0,c
  3547  00173A  C042  F017         	movff	_cuenta,??_Hash_algoritmo+2
  3548  00173E  C043  F018         	movff	_cuenta+1,??_Hash_algoritmo+3
  3549  001742  5015               	movf	??_Hash_algoritmo^0,w,c
  3550  001744  2617               	addwf	(??_Hash_algoritmo+2)^0,f,c
  3551  001746  5016               	movf	(??_Hash_algoritmo+1)^0,w,c
  3552  001748  2218               	addwfc	(??_Hash_algoritmo+3)^0,f,c
  3553  00174A  5045               	movf	_cont^0,w,c
  3554  00174C  6E19               	movwf	(??_Hash_algoritmo+4)^0,c
  3555  00174E  6A1A               	clrf	(??_Hash_algoritmo+5)^0,c
  3556  001750  5017               	movf	(??_Hash_algoritmo+2)^0,w,c
  3557  001752  5C19               	subwf	(??_Hash_algoritmo+4)^0,w,c
  3558  001754  5018               	movf	(??_Hash_algoritmo+3)^0,w,c
  3559  001756  581A               	subwfb	(??_Hash_algoritmo+5)^0,w,c
  3560  001758  A0D8               	btfss	status,0,c
  3561  00175A  EFB1  F00B         	goto	u1391
  3562  00175E  EFB3  F00B         	goto	u1390
  3563  001762                     u1391:
  3564  001762  EF75  F00B         	goto	l2075
  3565  001766                     u1390:
  3566  001766                     
  3567                           ;main.c: 134: };main.c: 135: return (hash_acum);
  3568  001766  C01B  F011         	movff	Hash_algoritmo@hash_acum,?_Hash_algoritmo
  3569  00176A  C01C  F012         	movff	Hash_algoritmo@hash_acum+1,?_Hash_algoritmo+1
  3570  00176E  C01D  F013         	movff	Hash_algoritmo@hash_acum+2,?_Hash_algoritmo+2
  3571  001772  C01E  F014         	movff	Hash_algoritmo@hash_acum+3,?_Hash_algoritmo+3
  3572  001776  0012               	return		;funcret
  3573  001778                     __end_of_Hash_algoritmo:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function ___lmul *****************
  3577 ;; Defined at:
  3578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  multiplier      4    4[COMRAM] unsigned long 
  3581 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  product         4   12[COMRAM] unsigned long 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  4    4[COMRAM] unsigned long 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3593 ;;      Params:         8       0       0       0       0       0       0       0       0
  3594 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3596 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3597 ;;Total ram usage:       12 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; Hardware stack levels required when called: 4
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_Hash_algoritmo
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text20
  3608  0018A4                     __ptext20:
  3609                           	callstack 0
  3610  0018A4                     ___lmul:
  3611                           	callstack 25
  3612  0018A4  0E00               	movlw	0
  3613  0018A6  6E0D               	movwf	___lmul@product^0,c
  3614  0018A8  0E00               	movlw	0
  3615  0018AA  6E0E               	movwf	(___lmul@product+1)^0,c
  3616  0018AC  0E00               	movlw	0
  3617  0018AE  6E0F               	movwf	(___lmul@product+2)^0,c
  3618  0018B0  0E00               	movlw	0
  3619  0018B2  6E10               	movwf	(___lmul@product+3)^0,c
  3620  0018B4                     l1789:
  3621  0018B4  A005               	btfss	___lmul@multiplier^0,0,c
  3622  0018B6  EF5F  F00C         	goto	u911
  3623  0018BA  EF61  F00C         	goto	u910
  3624  0018BE                     u911:
  3625  0018BE  EF69  F00C         	goto	l1793
  3626  0018C2                     u910:
  3627  0018C2  5009               	movf	___lmul@multiplicand^0,w,c
  3628  0018C4  260D               	addwf	___lmul@product^0,f,c
  3629  0018C6  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  3630  0018C8  220E               	addwfc	(___lmul@product+1)^0,f,c
  3631  0018CA  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  3632  0018CC  220F               	addwfc	(___lmul@product+2)^0,f,c
  3633  0018CE  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  3634  0018D0  2210               	addwfc	(___lmul@product+3)^0,f,c
  3635  0018D2                     l1793:
  3636  0018D2  90D8               	bcf	status,0,c
  3637  0018D4  3609               	rlcf	___lmul@multiplicand^0,f,c
  3638  0018D6  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3639  0018D8  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3640  0018DA  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3641  0018DC  90D8               	bcf	status,0,c
  3642  0018DE  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  3643  0018E0  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  3644  0018E2  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  3645  0018E4  3205               	rrcf	___lmul@multiplier^0,f,c
  3646  0018E6  5005               	movf	___lmul@multiplier^0,w,c
  3647  0018E8  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  3648  0018EA  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  3649  0018EC  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  3650  0018EE  A4D8               	btfss	status,2,c
  3651  0018F0  EF7C  F00C         	goto	u921
  3652  0018F4  EF7E  F00C         	goto	u920
  3653  0018F8                     u921:
  3654  0018F8  EF5A  F00C         	goto	l1789
  3655  0018FC                     u920:
  3656  0018FC  C00D  F005         	movff	___lmul@product,?___lmul
  3657  001900  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  3658  001904  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  3659  001908  C010  F008         	movff	___lmul@product+3,?___lmul+3
  3660  00190C  0012               	return		;funcret
  3661  00190E                     __end_of___lmul:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _EUSART1_Write_string *****************
  3665 ;; Defined at:
  3666 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  data            2    5[COMRAM] PTR const unsigned char 
  3669 ;;		 -> STR_11(9), STR_10(9), STR_9(9), STR_8(2), 
  3670 ;;		 -> STR_7(2), STR_6(13), STR_4(2), STR_3(2), 
  3671 ;;		 -> texto(10), STR_1(6), 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3683 ;;      Params:         2       0       0       0       0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3687 ;;Total ram usage:        2 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 5
  3690 ;; This function calls:
  3691 ;;		_EUSART1_Write
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text21
  3698  00190E                     __ptext21:
  3699                           	callstack 0
  3700  00190E                     _EUSART1_Write_string:
  3701                           	callstack 25
  3702  00190E                     
  3703                           ;eusart1.c: 143: while(*data != 0)
  3704  00190E  EF9D  F00C         	goto	l2039
  3705  001912                     l2035:
  3706                           
  3707                           ;eusart1.c: 144: {;eusart1.c: 145: EUSART1_Write(*data++);
  3708  001912  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3709  001916  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3710  00191A  6AF8               	clrf	tblptru,c
  3711  00191C  0E07               	movlw	(high __ramtop+-1)
  3712  00191E  64F7               	cpfsgt	tblptrh,c
  3713  001920  D003               	bra	u1337
  3714  001922  0008               	tblrd		*
  3715  001924  50F5               	movf	tablat,w,c
  3716  001926  D005               	bra	u1330
  3717  001928                     u1337:
  3718  001928  CFF6 FFE9          	movff	tblptrl,fsr0l
  3719  00192C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3720  001930  50EF               	movf	indf0,w,c
  3721  001932                     u1330:
  3722  001932  EC23  F00D         	call	_EUSART1_Write
  3723  001936  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  3724  001938  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  3725  00193A                     l2039:
  3726  00193A  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3727  00193E  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3728  001942  6AF8               	clrf	tblptru,c
  3729  001944  0E07               	movlw	(high __ramtop+-1)
  3730  001946  64F7               	cpfsgt	tblptrh,c
  3731  001948  D003               	bra	u1347
  3732  00194A  0008               	tblrd		*
  3733  00194C  50F5               	movf	tablat,w,c
  3734  00194E  D005               	bra	u1340
  3735  001950                     u1347:
  3736  001950  CFF6 FFE9          	movff	tblptrl,fsr0l
  3737  001954  CFF7 FFEA          	movff	tblptrh,fsr0h
  3738  001958  50EF               	movf	indf0,w,c
  3739  00195A                     u1340:
  3740  00195A  0900               	iorlw	0
  3741  00195C  A4D8               	btfss	status,2,c
  3742  00195E  EFB3  F00C         	goto	u1351
  3743  001962  EFB5  F00C         	goto	u1350
  3744  001966                     u1351:
  3745  001966  EF89  F00C         	goto	l2035
  3746  00196A                     u1350:
  3747  00196A  0012               	return		;funcret
  3748  00196C                     __end_of_EUSART1_Write_string:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _EUSART1_Write *****************
  3752 ;; Defined at:
  3753 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  txData          1    wreg     unsigned char 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  txData          1    4[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0
  3768 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3770 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3771 ;;Total ram usage:        1 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 4
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_EUSART1_Write_string
  3778 ;;		_putch
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text22
  3783  001A46                     __ptext22:
  3784                           	callstack 0
  3785  001A46                     _EUSART1_Write:
  3786                           	callstack 25
  3787                           
  3788                           ;incstack = 0
  3789                           ;EUSART1_Write@txData stored from wreg
  3790  001A46  6E05               	movwf	EUSART1_Write@txData^0,c
  3791  001A48                     l67:
  3792  001A48  A89E               	btfss	158,4,c	;volatile
  3793  001A4A  EF29  F00D         	goto	u11
  3794  001A4E  EF2B  F00D         	goto	u10
  3795  001A52                     u11:
  3796  001A52  EF24  F00D         	goto	l67
  3797  001A56                     u10:
  3798  001A56                     
  3799                           ;eusart1.c: 136: };eusart1.c: 138: TXREG1 = txData;
  3800  001A56  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3801  001A5A  0012               	return		;funcret
  3802  001A5C                     __end_of_EUSART1_Write:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _INTERRUPT_InterruptManager *****************
  3806 ;; Defined at:
  3807 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3823 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3824 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3825 ;;Total ram usage:        4 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 3
  3828 ;; This function calls:
  3829 ;;		_INT1_ISR
  3830 ;; This function is called by:
  3831 ;;		Interrupt level 2
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	intcode
  3836  000008                     __pintcode:
  3837                           	callstack 0
  3838  000008                     _INTERRUPT_InterruptManager:
  3839                           	callstack 24
  3840                           
  3841                           ;incstack = 0
  3842  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3843  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3844  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3845  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3846  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3847  00001A                     
  3848                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  3849  00001A  A6F0               	btfss	240,3,c	;volatile
  3850  00001C  EF12  F000         	goto	i2u152_41
  3851  000020  EF14  F000         	goto	i2u152_40
  3852  000024                     i2u152_41:
  3853  000024  EF67  F000         	goto	i2l247
  3854  000028                     i2u152_40:
  3855  000028  A0F0               	btfss	240,0,c	;volatile
  3856  00002A  EF19  F000         	goto	i2u153_41
  3857  00002E  EF1B  F000         	goto	i2u153_40
  3858  000032                     i2u153_41:
  3859  000032  EF67  F000         	goto	i2l247
  3860  000036                     i2u153_40:
  3861  000036                     
  3862                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: if (INT1IF == 1)
  3863  000036  A0F0               	btfss	4080,0,c	;volatile
  3864  000038  EF20  F000         	goto	i2u154_41
  3865  00003C  EF22  F000         	goto	i2u154_40
  3866  000040                     i2u154_41:
  3867  000040  EF64  F000         	goto	i2l2217
  3868  000044                     i2u154_40:
  3869  000044                     
  3870                           ;interrupt_manager.c: 65: {;interrupt_manager.c: 70: if (flag_codigo == 0)
  3871  000044  5046               	movf	_flag_codigo^0,w,c
  3872  000046  A4D8               	btfss	status,2,c
  3873  000048  EF28  F000         	goto	i2u155_41
  3874  00004C  EF2A  F000         	goto	i2u155_40
  3875  000050                     i2u155_41:
  3876  000050  EF64  F000         	goto	i2l2217
  3877  000054                     i2u155_40:
  3878  000054                     
  3879                           ;interrupt_manager.c: 71: {;interrupt_manager.c: 72: if (cuenta != 0)
  3880  000054  5042               	movf	_cuenta^0,w,c
  3881  000056  1043               	iorwf	(_cuenta+1)^0,w,c
  3882  000058  B4D8               	btfsc	status,2,c
  3883  00005A  EF31  F000         	goto	i2u156_41
  3884  00005E  EF33  F000         	goto	i2u156_40
  3885  000062                     i2u156_41:
  3886  000062  EF5B  F000         	goto	i2l244
  3887  000066                     i2u156_40:
  3888  000066                     
  3889                           ;interrupt_manager.c: 73: {;interrupt_manager.c: 74: timer_aux = TMR0;
  3890  000066  CFD6 F044          	movff	4054,_timer_aux	;volatile
  3891  00006A                     
  3892                           ;interrupt_manager.c: 75: TMR0 = 0;
  3893  00006A  0E00               	movlw	0
  3894  00006C  6ED7               	movwf	215,c	;volatile
  3895  00006E  0E00               	movlw	0
  3896  000070  6ED6               	movwf	214,c	;volatile
  3897  000072                     
  3898                           ;interrupt_manager.c: 76: tiempo[cuenta - 1] = timer_aux;
  3899  000072  0E5F               	movlw	low (_tiempo+65535)
  3900  000074  2442               	addwf	_cuenta^0,w,c
  3901  000076  6ED9               	movwf	fsr2l,c
  3902  000078  0E00               	movlw	high (_tiempo+65535)
  3903  00007A  2043               	addwfc	(_cuenta+1)^0,w,c
  3904  00007C  6EDA               	movwf	fsr2h,c
  3905  00007E  C044  FFDF         	movff	_timer_aux,indf2
  3906  000082                     
  3907                           ;interrupt_manager.c: 77: cuenta++;
  3908  000082  4A42               	infsnz	_cuenta^0,f,c
  3909  000084  2A43               	incf	(_cuenta+1)^0,f,c
  3910  000086                     
  3911                           ;interrupt_manager.c: 78: INTEDG1 = !INTEDG1;
  3912  000086  AAF1               	btfss	4081,5,c	;volatile
  3913  000088  EF48  F000         	goto	i2u157_41
  3914  00008C  EF4B  F000         	goto	i2u157_40
  3915  000090                     i2u157_41:
  3916  000090  8AF1               	bsf	4081,5,c	;volatile
  3917  000092  EF4C  F000         	goto	i2u158_45
  3918  000096                     i2u157_40:
  3919  000096  9AF1               	bcf	4081,5,c	;volatile
  3920  000098                     i2u158_45:
  3921  000098                     
  3922                           ;interrupt_manager.c: 80: if (TMR0IF == 1)
  3923  000098  A4F2               	btfss	4082,2,c	;volatile
  3924  00009A  EF51  F000         	goto	i2u159_41
  3925  00009E  EF53  F000         	goto	i2u159_40
  3926  0000A2                     i2u159_41:
  3927  0000A2  EF64  F000         	goto	i2l243
  3928  0000A6                     i2u159_40:
  3929  0000A6                     
  3930                           ;interrupt_manager.c: 81: {;interrupt_manager.c: 82: cuenta--;
  3931  0000A6  0642               	decf	_cuenta^0,f,c
  3932  0000A8  A0D8               	btfss	status,0,c
  3933  0000AA  0643               	decf	(_cuenta+1)^0,f,c
  3934  0000AC                     
  3935                           ;interrupt_manager.c: 83: flag_codigo = 1;
  3936  0000AC  0E01               	movlw	1
  3937  0000AE  6E46               	movwf	_flag_codigo^0,c
  3938  0000B0                     
  3939                           ;interrupt_manager.c: 84: INT1IE = 0;
  3940  0000B0  96F0               	bcf	4080,3,c	;volatile
  3941  0000B2  EF64  F000         	goto	i2l2217
  3942  0000B6                     i2l244:
  3943                           
  3944                           ;interrupt_manager.c: 87: else;interrupt_manager.c: 88: {;interrupt_manager.c: 89: TMR0I
      +                          F = 0;
  3945  0000B6  94F2               	bcf	4082,2,c	;volatile
  3946  0000B8                     
  3947                           ;interrupt_manager.c: 90: TMR0 = 0;
  3948  0000B8  0E00               	movlw	0
  3949  0000BA  6ED7               	movwf	215,c	;volatile
  3950  0000BC  0E00               	movlw	0
  3951  0000BE  6ED6               	movwf	214,c	;volatile
  3952  0000C0                     
  3953                           ;interrupt_manager.c: 91: cuenta++;
  3954  0000C0  4A42               	infsnz	_cuenta^0,f,c
  3955  0000C2  2A43               	incf	(_cuenta+1)^0,f,c
  3956  0000C4  EF64  F000         	goto	i2l2217
  3957  0000C8                     i2l243:
  3958  0000C8                     i2l2217:
  3959                           
  3960                           ;interrupt_manager.c: 92: };interrupt_manager.c: 93: };interrupt_manager.c: 94: };interr
      +                          upt_manager.c: 95: INT1IF = 0;
  3961  0000C8  90F0               	bcf	4080,0,c	;volatile
  3962  0000CA                     
  3963                           ;interrupt_manager.c: 97: INT1_ISR();
  3964  0000CA  EC5F  F00D         	call	_INT1_ISR	;wreg free
  3965  0000CE                     i2l247:
  3966  0000CE  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3967  0000D2  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3968  0000D6  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3969  0000DA  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3970  0000DE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3971  0000E0  0011               	retfie		f
  3972  0000E2                     __end_of_INTERRUPT_InterruptManager:
  3973                           	callstack 0
  3974                           
  3975 ;; *************** function _INT1_ISR *****************
  3976 ;; Defined at:
  3977 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 2
  3998 ;; This function calls:
  3999 ;;		_INT1_CallBack
  4000 ;; This function is called by:
  4001 ;;		_INTERRUPT_InterruptManager
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text24
  4006  001ABE                     __ptext24:
  4007                           	callstack 0
  4008  001ABE                     _INT1_ISR:
  4009                           	callstack 24
  4010  001ABE                     
  4011                           ;ext_int.c: 34: (INTCON3bits.INT1IF = 0);
  4012  001ABE  90F0               	bcf	240,0,c	;volatile
  4013  001AC0                     
  4014                           ;ext_int.c: 37: INT1_CallBack();
  4015  001AC0  ECEC  F00C         	call	_INT1_CallBack	;wreg free
  4016  001AC4  0012               	return		;funcret
  4017  001AC6                     __end_of_INT1_ISR:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _INT1_CallBack *****************
  4021 ;; Defined at:
  4022 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 1
  4043 ;; This function calls:
  4044 ;;		Absolute function
  4045 ;;		_INT1_DefaultInterruptHandler
  4046 ;; This function is called by:
  4047 ;;		_INT1_ISR
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text25
  4052  0019D8                     __ptext25:
  4053                           	callstack 0
  4054  0019D8                     _INT1_CallBack:
  4055                           	callstack 24
  4056  0019D8                     
  4057                           ;ext_int.c: 44: if(INT1_InterruptHandler)
  4058  0019D8  5052               	movf	_INT1_InterruptHandler^0,w,c
  4059  0019DA  1053               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  4060  0019DC  B4D8               	btfsc	status,2,c
  4061  0019DE  EFF3  F00C         	goto	i2u89_41
  4062  0019E2  EFF5  F00C         	goto	i2u89_40
  4063  0019E6                     i2u89_41:
  4064  0019E6  EF02  F00D         	goto	i2l262
  4065  0019EA                     i2u89_40:
  4066  0019EA                     
  4067                           ;ext_int.c: 45: {;ext_int.c: 46: INT1_InterruptHandler();
  4068  0019EA  D802               	call	i2u90_48
  4069  0019EC  EF02  F00D         	goto	i2u90_49
  4070  0019F0                     i2u90_48:
  4071  0019F0  0005               	push	
  4072  0019F2  6EFA               	movwf	pclath,c
  4073  0019F4  5052               	movf	_INT1_InterruptHandler^0,w,c
  4074  0019F6  6EFD               	movwf	tosl,c
  4075  0019F8  5053               	movf	(_INT1_InterruptHandler+1)^0,w,c
  4076  0019FA  6EFE               	movwf	tosh,c
  4077  0019FC  50F8               	movf	tblptru,w,c
  4078  0019FE  6EFF               	movwf	tosu,c
  4079  001A00  50FA               	movf	pclath,w,c
  4080  001A02  0012               	return		;indir
  4081  001A04                     i2u90_49:
  4082  001A04                     i2l262:
  4083  001A04  0012               	return		;funcret
  4084  001A06                     __end_of_INT1_CallBack:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _INT1_DefaultInterruptHandler *****************
  4088 ;; Defined at:
  4089 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		None
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4106 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4107 ;;Total ram usage:        0 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_EXT_INT_Initialize
  4113 ;;		_INT1_CallBack
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text26
  4118  001ACA                     __ptext26:
  4119                           	callstack 0
  4120  001ACA                     _INT1_DefaultInterruptHandler:
  4121                           	callstack 24
  4122  001ACA  0012               	return		;funcret
  4123  001ACC                     __end_of_INT1_DefaultInterruptHandler:
  4124                           	callstack 0
  4125                           
  4126                           	psect	text27
  4127  000000                     __ptext27:
  4128                           	callstack 0
  4129  000000                     
  4130                           	psect	rparam
  4131  0000                     
  4132                           	psect	temp
  4133  00005B                     btemp:
  4134                           	callstack 0
  4135  00005B                     	ds	1
  4136  0000                     int$flags	set	btemp
  4137  0000                     wtemp8	set	btemp+1
  4138  0000                     ttemp5	set	btemp+1
  4139  0000                     ttemp6	set	btemp+4
  4140  0000                     ttemp7	set	btemp+8
  4141                           
  4142                           	psect	idloc
  4143                           
  4144                           ;Config register IDLOC0 @ 0x200000
  4145                           ;	unspecified, using default values
  4146  200000                     	org	2097152
  4147  200000  FF                 	db	255
  4148                           
  4149                           ;Config register IDLOC1 @ 0x200001
  4150                           ;	unspecified, using default values
  4151  200001                     	org	2097153
  4152  200001  FF                 	db	255
  4153                           
  4154                           ;Config register IDLOC2 @ 0x200002
  4155                           ;	unspecified, using default values
  4156  200002                     	org	2097154
  4157  200002  FF                 	db	255
  4158                           
  4159                           ;Config register IDLOC3 @ 0x200003
  4160                           ;	unspecified, using default values
  4161  200003                     	org	2097155
  4162  200003  FF                 	db	255
  4163                           
  4164                           ;Config register IDLOC4 @ 0x200004
  4165                           ;	unspecified, using default values
  4166  200004                     	org	2097156
  4167  200004  FF                 	db	255
  4168                           
  4169                           ;Config register IDLOC5 @ 0x200005
  4170                           ;	unspecified, using default values
  4171  200005                     	org	2097157
  4172  200005  FF                 	db	255
  4173                           
  4174                           ;Config register IDLOC6 @ 0x200006
  4175                           ;	unspecified, using default values
  4176  200006                     	org	2097158
  4177  200006  FF                 	db	255
  4178                           
  4179                           ;Config register IDLOC7 @ 0x200007
  4180                           ;	unspecified, using default values
  4181  200007                     	org	2097159
  4182  200007  FF                 	db	255
  4183                           
  4184                           	psect	config
  4185                           
  4186                           ;Config register CONFIG1L @ 0x300000
  4187                           ;	PLL Selection
  4188                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4189                           ;	PLL Enable Configuration bit
  4190                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  4191                           ;	CPU System Clock Postscaler
  4192                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4193                           ;	Low Speed USB mode with 48 MHz system clock
  4194                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4195  300000                     	org	3145728
  4196  300000  21                 	db	33
  4197                           
  4198                           ;Config register CONFIG1H @ 0x300001
  4199                           ;	Oscillator Selection
  4200                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  4201                           ;	Primary Oscillator Shutdown
  4202                           ;	PCLKEN = ON, Primary oscillator enabled
  4203                           ;	Fail-Safe Clock Monitor
  4204                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4205                           ;	Internal/External Oscillator Switchover
  4206                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4207  300001                     	org	3145729
  4208  300001  23                 	db	35
  4209                           
  4210                           ;Config register CONFIG2L @ 0x300002
  4211                           ;	Power-up Timer Enable
  4212                           ;	nPWRTEN = ON, Power up timer enabled
  4213                           ;	Brown-out Reset Enable
  4214                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4215                           ;	Brown-out Reset Voltage
  4216                           ;	BORV = 190, BOR set to 1.9V nominal
  4217                           ;	Low-Power Brown-out Reset
  4218                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4219  300002                     	org	3145730
  4220  300002  5E                 	db	94
  4221                           
  4222                           ;Config register CONFIG2H @ 0x300003
  4223                           ;	Watchdog Timer Enable bits
  4224                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4225                           ;	Watchdog Timer Postscaler
  4226                           ;	WDTPS = 32768, 1:32768
  4227  300003                     	org	3145731
  4228  300003  3C                 	db	60
  4229                           
  4230                           ; Padding undefined space
  4231  300004                     	org	3145732
  4232  300004  FF                 	db	255
  4233                           
  4234                           ;Config register CONFIG3H @ 0x300005
  4235                           ;	CCP2 MUX bit
  4236                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4237                           ;	PORTB A/D Enable bit
  4238                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4239                           ;	Timer3 Clock Input MUX bit
  4240                           ;	T3CMX = RC0, T3CKI function is on RC0
  4241                           ;	SDO Output MUX bit
  4242                           ;	SDOMX = RB3, SDO function is on RB3
  4243                           ;	Master Clear Reset Pin Enable
  4244                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4245  300005                     	org	3145733
  4246  300005  D1                 	db	209
  4247                           
  4248                           ;Config register CONFIG4L @ 0x300006
  4249                           ;	Stack Full/Underflow Reset
  4250                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4251                           ;	Single-Supply ICSP Enable bit
  4252                           ;	LVP = OFF, Single-Supply ICSP disabled
  4253                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4254                           ;	ICPRT = OFF, ICPORT disabled
  4255                           ;	Extended Instruction Set Enable bit
  4256                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4257                           ;	Background Debugger Enable bit
  4258                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4259  300006                     	org	3145734
  4260  300006  81                 	db	129
  4261                           
  4262                           ; Padding undefined space
  4263  300007                     	org	3145735
  4264  300007  FF                 	db	255
  4265                           
  4266                           ;Config register CONFIG5L @ 0x300008
  4267                           ;	Block 0 Code Protect
  4268                           ;	CP0 = OFF, Block 0 is not code-protected
  4269                           ;	Block 1 Code Protect
  4270                           ;	CP1 = OFF, Block 1 is not code-protected
  4271                           ;	Block 2 Code Protect
  4272                           ;	CP2 = OFF, Block 2 is not code-protected
  4273                           ;	Block 3 Code Protect
  4274                           ;	CP3 = OFF, Block 3 is not code-protected
  4275  300008                     	org	3145736
  4276  300008  0F                 	db	15
  4277                           
  4278                           ;Config register CONFIG5H @ 0x300009
  4279                           ;	Boot Block Code Protect
  4280                           ;	CPB = OFF, Boot block is not code-protected
  4281                           ;	Data EEPROM Code Protect
  4282                           ;	CPD = OFF, Data EEPROM is not code-protected
  4283  300009                     	org	3145737
  4284  300009  C0                 	db	192
  4285                           
  4286                           ;Config register CONFIG6L @ 0x30000A
  4287                           ;	Block 0 Write Protect
  4288                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4289                           ;	Block 1 Write Protect
  4290                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4291                           ;	Block 2 Write Protect
  4292                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4293                           ;	Block 3 Write Protect
  4294                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4295  30000A                     	org	3145738
  4296  30000A  0F                 	db	15
  4297                           
  4298                           ;Config register CONFIG6H @ 0x30000B
  4299                           ;	Configuration Registers Write Protect
  4300                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4301                           ;	Boot Block Write Protect
  4302                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4303                           ;	Data EEPROM Write Protect
  4304                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4305  30000B                     	org	3145739
  4306  30000B  E0                 	db	224
  4307                           
  4308                           ;Config register CONFIG7L @ 0x30000C
  4309                           ;	Block 0 Table Read Protect
  4310                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4311                           ;	Block 1 Table Read Protect
  4312                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4313                           ;	Block 2 Table Read Protect
  4314                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4315                           ;	Block 3 Table Read Protect
  4316                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4317  30000C                     	org	3145740
  4318  30000C  0F                 	db	15
  4319                           
  4320                           ;Config register CONFIG7H @ 0x30000D
  4321                           ;	Boot Block Table Read Protect
  4322                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4323  30000D                     	org	3145741
  4324  30000D  40                 	db	64
  4325                           tosu	equ	0xFFF
  4326                           tosh	equ	0xFFE
  4327                           tosl	equ	0xFFD
  4328                           stkptr	equ	0xFFC
  4329                           pclatu	equ	0xFFB
  4330                           pclath	equ	0xFFA
  4331                           pcl	equ	0xFF9
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           indf0	equ	0xFEF
  4339                           postinc0	equ	0xFEE
  4340                           postdec0	equ	0xFED
  4341                           preinc0	equ	0xFEC
  4342                           plusw0	equ	0xFEB
  4343                           fsr0h	equ	0xFEA
  4344                           fsr0l	equ	0xFE9
  4345                           wreg	equ	0xFE8
  4346                           indf1	equ	0xFE7
  4347                           postinc1	equ	0xFE6
  4348                           postdec1	equ	0xFE5
  4349                           preinc1	equ	0xFE4
  4350                           plusw1	equ	0xFE3
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           bsr	equ	0xFE0
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           preinc2	equ	0xFDC
  4358                           plusw2	equ	0xFDB
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    72
    Data        0
    BSS         90
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      90
    BANK0           160      0      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[13]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> texto(COMRAM[10]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_normaliza
    _sprintf->___llmod
    ___llmod->___lldiv
    _normaliza->___flge
    ___flmul->___xxtofl
    ___flge->___flmul
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Hash_algoritmo->___lmul
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6612
                                             59 COMRAM     2     2      0
               _EUSART1_Write_string
                     _Hash_algoritmo
                  _SYSTEM_Initialize
                          _normaliza
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    22      8    1900
                                             26 COMRAM    21    13      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _normaliza                                            4     4      0    3008
                                             55 COMRAM     4     4      0
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Hash_algoritmo                                      14    10      4     416
                                             16 COMRAM    14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     896
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _Hash_algoritmo
     ___lmul
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _normaliza
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5A       1       95.7%
BITBIGSFRlllllh     27      0       0      32        0.0%
BITBIGSFRhhlh       18      0       0      21        0.0%
BITBIGSFRhll        17      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      33        0.0%
BITBIGSFRllllhh      6      0       0      29        0.0%
BITBIGSFRllllhl      6      0       0      30        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      31        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRhlh         1      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0      34        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 20 16:39:11 2023

                                            l43 19A8                                              l70 1A5A  
                                            l67 1A48                                              l76 196A  
                                            l94 1AB2                                              l97 1AA8  
                                            u10 1A56                                              u11 1A52  
                               _timer0ReloadVal 005A                                             l100 1ABC  
                                           l140 1A94                                             l137 1A44  
                                           l323 15CC                                             l236 1AC8  
                                           l430 181A                                             l407 18FC  
                                           l271 1A82                                             l167 19D6  
                                           l423 180A                                             l408 190C  
                                           l328 1766                                             l329 1776  
                                           l265 1A9E                                             l185 1A6E  
                                           l364 0D44                                             l367 0DCC  
                                           l393 106C                                             l811 18A2  
                                           l804 1892                                             l657 168A  
                                           l658 16D0                                             l998 0958  
                                           u910 18C2                                             u911 18BE  
                                           u920 18FC                                             u921 18F8  
                                           u930 179E                                             u931 179A  
                                           u940 17C0                                             u941 17BC  
                                           u950 17E8                                             u951 17E4  
                                           u960 08AE                                             u961 08AA  
                                           u970 08C0                                             u971 08BC  
                                           u980 08D0                                             u981 08CC  
                                           u990 0910                                             u991 090C  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                    ___flmul@aexp 0024  
                                  ___flmul@bexp 0025                                    ___flmul@sign 001F  
                                  ___flmul@temp 002A                                    ___flmul@prod 0026  
                                 _INT1_CallBack 19D8                                            l1002 0CBC  
                                          l1005 0B4E                                            l1015 0C7E  
                                          l1007 0BC6                                            l1008 0BB4  
                                          l2001 131A                                            l1042 1434  
                                          l2011 13A2                                            l2003 1326  
                                          l2021 13E0                                            l1053 13CC  
                                          l2013 13AE                                            l2005 1358  
                                          l2101 0D60                                            l1046 1370  
                                          l2023 1404                                            l2015 13BC  
                                          l2007 135A                                            l1039 12D8  
                                          l2111 0DB4                                            l2103 0D78  
                                          l2033 190E                                            l2041 1A2C  
                                          l2025 1414                                            l2017 13DA  
                                          l2009 1366                                            l2121 0E1A  
                                          l2113 0DB8                                            l2105 0D84  
                                          l1171 1A48                                            l2035 1912  
                                          l2051 1A40                                            l2043 1A30  
                                          l2027 1422                                            l2019 13DC  
                                          l2123 0E26                                            l2115 0DDA  
                                          l2107 0D9E                                            l1173 1A56  
                                          l2037 1936                                            l1181 1A84  
                                          l2045 1A34                                            l2029 1424  
                                          l2061 14D4                                            l2133 0E64  
                                          l2117 0DF2                                            l2109 0DA6  
                                          l2221 106E                                            l2039 193A  
                                          l1175 1AC6                                            l1191 1A68  
                                          l2047 1A38                                            l2063 14E8  
                                          l2071 15A4                                            l2143 0E80  
                                          l2135 0E66                                            l2119 0DFE  
                                          l2231 1080                                            l2223 1072  
                                          l2073 16D2                                            l1177 19AA  
                                          l2049 1A3C                                            l2065 157E  
                                          l2057 1436                                            l2161 0F10  
                                          l2137 0E7C                                            l2129 0E2A  
                                          l2153 0ED2                                            l2081 0CBE  
                                          l2241 10D0                                            l2233 1090  
                                          l2225 1078                                            l2075 16EA  
                                          l1179 19D4                                            l2067 1592  
                                          l2059 143E                                            l2171 0FFC  
                                          l2163 0F1A                                            l2147 0EBA  
                                          l2155 0EEA                                            l2091 0CF8  
                                          l2083 0CCA                                            l2251 1124  
                                          l2243 10DC                                            l2235 1094  
                                          l2227 107C                                            l2077 1730  
                                          l1189 1A5C                                            l2069 15A2  
                                          l2165 0F94                                            l2173 1014  
                                          l2157 0F00                                            l2149 0EBC  
                                          l2181 1060                                            l2093 0CFE  
                                          l2085 0CDC                                            l2261 117E  
                                          l2253 1130                                            l2245 10E8  
                                          l2237 10A8                                            l2229 107E  
                                          l2079 1732                                            l2175 1020  
                                          l2167 0FE6                                            l2159 0F0C  
                                          l2087 0CE8                                            l2271 11F8  
                                          l2263 118E                                            l2255 113C  
                                          l2247 10F4                                            l2239 10B4  
                                          l1801 179E                                            l2177 1024  
                                          l2097 0D04                                            l2089 0CF0  
                                          l2281 1242                                            l2273 120A  
                                          l2265 11B2                                            l2257 1148  
                                          l2249 1118                                            l1811 17E8  
                                          l1803 17A6                                            l2099 0D52  
                                          l2179 103E                                            l2291 1268  
                                          l2283 124A                                            l2267 11C4  
                                          l2275 1216                                            l2259 116C  
                                          l1901 0B34                                            l1821 08A0  
                                          l1813 17F8                                            l1805 17B2  
                                          l2285 124C                                            l2277 1226  
                                          l2269 11D4                                            l1911 0B70  
                                          l1903 0B3E                                            l1831 08E0  
                                          l1823 08AE                                            l1815 17FA  
                                          l1807 17C0                                            l2287 124E  
                                          l2279 123E                                            l1761 1AA0  
                                          l1921 0BE2                                            l1913 0B7E  
                                          l1905 0B4C                                            l1841 0910  
                                          l1833 08E6                                            l1825 08B0  
                                          l1817 1804                                            l1809 17CA  
                                          l2289 1250                                            l1763 1AB4  
                                          l1771 198C                                            l1931 0C4C  
                                          l1923 0BF0                                            l1915 0BAC  
                                          l1907 0B5E                                            l1851 0948  
                                          l1843 0912                                            l1835 08F6  
                                          l1827 08C0                                            l1819 0894  
                                          l1773 1998                                            l1765 1A96  
                                          l1781 1A80                                            l1941 0CA2  
                                          l1933 0C66                                            l1925 0C1A  
                                          l1909 0B6C                                            l1861 0998  
                                          l1853 0968                                            l1845 0922  
                                          l1837 08FC                                            l1829 08D0  
                                          l1791 18C2                                            l1759 1AAA  
                                          l1775 19A4                                            l1767 196C  
                                          l1951 15FC                                            l1935 0C82  
                                          l1943 0CA8                                            l1919 0BD6  
                                          l1927 0C1E                                            l1871 09E8  
                                          l1863 09A2                                            l1855 0978  
                                          l1847 0932                                            l1839 0902  
                                          l1793 18D2                                            l1769 1980  
                                          l1777 1A70                                            l1961 166A  
                                          l1953 160C                                            l1945 0CAC  
                                          l1937 0C92                                            l1929 0C38  
                                          l1881 0A2A                                            l1873 09F4  
                                          l1865 09B8                                            l1849 0942  
                                          l1795 18DC                                            l1787 18A4  
                                          l1779 1A74                                            l1963 1678  
                                          l1955 163A                                            l1939 0CA0  
                                          l1891 0A8C                                            l1883 0A3A  
                                          l1875 0A02                                            l1867 09C4  
                                          l1859 098C                                            l1971 181C  
                                          l1789 18B4                                            l1965 16C8  
                                          l1957 164A                                            l1949 15CE  
                                          l1893 0AA8                                            l1885 0A54  
                                          l1877 0A0E                                            l1869 09DC  
                                          l1797 1778                                            l1981 1872  
                                          l1973 1832                                            l1967 16CE  
                                          l1959 1658                                            l1895 0AD2  
                                          l1887 0A64                                            l1879 0A1E  
                                          l1991 12A2                                            l1799 1788  
                                          l1983 1882                                            l1975 183A  
                                          l1897 0B08                                            l1889 0A80  
                                          l1993 12E8                                            l1985 188C  
                                          l1977 1846                                            l1899 0B16  
                                          l1995 12FE                                            l1987 1284  
                                          l1979 1854                                            l1989 1294  
                                          l1999 1312                                            STR_1 0882  
                                          STR_2 088C                                            STR_3 0891  
                                          STR_4 088F                                            STR_5 0888  
                                          STR_6 085A                                            STR_7 0891  
                                          STR_8 088F                                            STR_9 0867  
                                          u1000 0922                                            u1001 091E  
                                          u1010 0932                                            u1011 092E  
                                          u1100 0BD6                                            u1020 0968  
                                          u1101 0BD2                                            u1021 0964  
                                          u1110 0BF0                                            u1030 0978  
                                          u1111 0BEC                                            u1031 0974  
                                          u1120 0C38                                            u1040 0AF2  
                                          u1200 1832                                            u1121 0C34  
                                          u1201 182E                                            u1130 0C66  
                                          u1050 0B4C                                            u1210 1854  
                                          u1131 0C62                                            u1051 0B48  
                                          u1211 1850                                            u1140 0CA0  
                                          u1060 0B6C                                            u1300 13DA  
                                          u1220 1872                                            u1141 0C9C  
                                          u1061 0B68                                            u1045 0AE8  
                                          u1301 13D6                                            u1221 186E  
                                          u1150 15FC                                            u1070 0B7E  
                                          u1310 1414                                            u1230 1294  
                                          u1151 15F8                                            u1071 0B7A  
                                          u1311 1410                                            u1231 1290  
                                          u1160 163A                                            u1080 0BAC  
                                          u1320 1422                                            u1240 12A2  
                                          u1400 0CDC                                            u1161 1636  
                                          u1081 0BA8                                            u1321 141E  
                                          u1241 129E                                            u1401 0CD8  
                                          u1330 1932                                            u1170 1658  
                                          u1090 0BC2                                            u1250 12FE  
                                          u1410 0D52                                            u1171 1654  
                                          u1091 0BBE                                            u1251 12FA  
                                          u1411 0D4E                                            u1340 195A  
                                          u1180 1678                                            u1260 1354  
                                          u1500 103E                                            u1420 0D60  
                                          u1181 1674                                            u1261 1350  
                                          u1501 103A                                            u1421 0D5C  
                                          _LATA 000F89                                            u1350 196A  
                                          u1190 16C8                                            u1270 139E  
                                          u1510 1060                                            u1430 0DB4  
                                          _LATB 000F8A                                            u1351 1966  
                                          u1191 16C4                                            u1271 139A  
                                          u1511 105C                                            u1431 0DB0  
                                          _LATC 000F8B                                            u1280 13BC  
                                          u1360 14D4                                            u1440 0DDA  
                                          u1600 1090                                            u1337 1928  
                                          u1281 13B8                                            u1361 14D0  
                                          u1441 0DD6                                            u1601 108C  
                                          u1290 13CC                                            u1370 157E  
                                          u1450 0E60                                            u1610 116C  
                                          u1347 1950                                            u1291 13C8  
                                          u1371 157A                                            u1451 0E5C  
                                          u1611 1168                                            u1380 15CC  
                                          u1460 0E78                                            u1700 1278  
                                          u1620 117C                                            u1381 15C8  
                                          u1461 0E74                                            u1701 1272  
                                          u1621 1176                                            u1390 1766  
                                          u1470 0EB6                                            u1391 1762  
                                          u1471 0EB2                                            u1480 0ECE  
                                          u1640 11B2                                            u1481 0ECA  
                                          u1641 11AE                                            u1490 0F00  
                                          u1650 11C2                                            u1491 0EFC  
                                          u1715 127A                                            u1651 11BC  
                                          u1635 117E                                            u1670 11F8  
                                          u1727 1230                                            u1671 11F4  
                                          u1680 1208                                            u1737 125A  
                                          u1681 1202                                            u1665 11C4  
                                          u1695 120A                                            _TMR0 000FD6  
                                          _WPUB 000F85                                   _EUSART1_Write 1A46  
                                          _cont 0045                                            _main 106E  
                                          fsr0h 000FEA                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          btemp 005B                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00E2  
                                  ___param_bank 000000                         __end_of_TMR0_Initialize 1A70  
                              __end_of_INT1_ISR 1AC6                   __end_of_OSCILLATOR_Initialize 1A96  
                                         ?_main 0001                                           STR_10 0870  
                                         STR_11 0879                                           STR_12 0849  
                               __end_of___flmul 0CBE                                 __end_of___lldiv 181C  
                                         _T0CON 000FD5                    __end_of_EUSART1_Write_string 196C  
                               __end_of___llmod 18A4                                           _LATB0 007C50  
                                         _LATA3 007C4B                                           _LATA4 007C4C  
                                         _LATA5 007C4D                                           _INT1E 007F83  
                                         i2l243 00C8                                           i2l244 00B6  
                                         i2l262 1A04                                           i2l247 00CE  
                                         i2l258 1AC4                                           i2l268 1ACA  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                             ___lmul@multiplicand 0009  
                                ?_INT1_CallBack 0001                                 __end_of_dpowers 0829  
                ??_INT1_DefaultInterruptHandler 0001                                           _texto 0048  
                      _INT1_SetInterruptHandler 1A96                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         status 000FD8                                           wtemp8 005C  
                               __end_of_sprintf 106E              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 1A06                      __end_of_EUSART1_Initialize 19AA  
                                  __end_of_main 1282                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 003C                                   __activetblptr 000002  
                              ___llmod@dividend 0012                                          _ACTCON 000FB5  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          _INT1IE 007F83  
                                        _INT1IF 007F80                                          i2l2201 0082  
                                        i2l2211 00B0                                          i2l2203 0086  
                                        i2l2053 1ABE                                          i2l2213 00B8  
                                        i2l2205 0098                                          i2l2055 1AC0  
                                        i2l2215 00C0                                          i2l2207 00A6  
                                        i2l2209 00AC                                          i2l2217 00C8  
                                        i2l2219 00CA                                          i2l2191 0044  
                                        i2l2193 0054                                          i2l2185 001A  
                                        i2l2195 0066                                          i2l2187 0028  
                                        i2l2197 006A                                          i2l2189 0036  
                                        i2l2199 0072                                          i2l1783 19D8  
                                        i2l1785 19EA                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                          _TMR0IF 007F92  
                                        _TXREG1 000FAD                                __end_of___xxtofl 1436  
                                        _TXSTA1 000FAC                                          ___flge 15CE  
                                        ___lmul 18A4                                       ??___flmul 001B  
                                     ??___lldiv 000D                                       ??___llmod 001A  
                                        _cuenta 0042                        ?_EUSART1_SetErrorHandler 0005  
                              ?_TMR0_Initialize 0001                                          clear_0 1A0C  
                                        clear_1 1A18                                          isa$std 000001  
                                        _tiempo 0060                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                 ??_INT1_CallBack 0001  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0005        INT1_SetInterruptHandler@InterruptHandler 0005  
                                     ??_sprintf 0023                                      ___flge@ff1 002C  
                                    ___flge@ff2 0030                                    ___xxtofl@arg 000F  
                                  ___xxtofl@exp 000E                               _SYSTEM_Initialize 1A2C  
                                  ___xxtofl@val 0005                                      __accesstop 0060  
                       __end_of__initialization 1A1E                                       ?_INT1_ISR 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                          _EUSART1_Write_string 190E                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0007                       __end_of_SYSTEM_Initialize 1A46  
                                    __pbssBANK0 0060                                      ??_INT1_ISR 0001  
                                    __pnvCOMRAM 0052                           ?_EUSART1_Write_string 0006  
               __end_of_EUSART1_SetErrorHandler 1ABE                                         ?___flge 002C  
                                       ?___lmul 0005                                  ___lmul@product 000D  
        __end_of_EUSART1_SetFramingErrorHandler 1AB4                  _EUSART1_SetFramingErrorHandler 1AAA  
                    ??_INT1_SetInterruptHandler 0007                                         _INTEDG1 007F8D  
                                     ?___xxtofl 0005                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         i2u90_48 19F0  
                                       i2u90_49 1A04                                         _SPBRGH1 000FB0  
                                       i2u89_40 19EA                                         i2u89_41 19E6  
                                _Hash_algoritmo 16D2                                         __Hparam 0000  
                                       __Lparam 0000                                         ___flmul 0894  
                                       ___lldiv 1778                                         ___llmod 181C  
                                  __psmallconst 0800                                         __pcinit 1A06  
                                       __ramtop 0800                                         __ptext0 106E  
                                       __ptext1 0CBE                                         __ptext2 181C  
                                       __ptext3 1778                                         __ptext4 1436  
                                       __ptext5 1282                                         __ptext6 0894  
                                       __ptext7 15CE                                         __ptext8 1A2C  
                                       __ptext9 1A5C                                       _T0CONbits 000FD5  
                             __end_of_hexpowers 0849                                         _dpowers 0801  
                         _OSCILLATOR_Initialize 1A84                                      ??___xxtofl 0009  
                        __end_of_Hash_algoritmo 1778                              _EUSART1_Initialize 196C  
                      ??_PIN_MANAGER_Initialize 0005                        EUSART1_Write_string@data 0006  
                                       _sprintf 0CBE                            end_of_initialization 1A1E  
                           ?_EUSART1_Initialize 0001                          ??_EUSART1_Write_string 0008  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0056  
                             __end_of_normaliza 15CE                                 ___lldiv@divisor 0009  
                               ___lldiv@counter 0011                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                          ??_EUSART1_Initialize 0007                           _INT1_InterruptHandler 0052  
                                 ___xxtofl@sign 000D                                 ?_Hash_algoritmo 0011  
                           EUSART1_Write@txData 0005                                     ___flmul@grs 0020  
                  __end_of_INTERRUPT_Initialize 1ACA                                  __end_of___flge 16D2  
                                __end_of___lmul 190E                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 1A06                           __end_of_INT1_CallBack 1A06  
                         __end_of_EUSART1_Write 1A5C                                 ___llmod@divisor 0016  
                               ___llmod@counter 001A                                        ??___flge 0034  
                                      ??___lmul 000D                      __end_of_EXT_INT_Initialize 1A84  
                                     ___flmul@a 0017                                       ___flmul@b 0013  
                                   __pbssCOMRAM 003E                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                     sprintf@flag 002E  
                                   sprintf@prec 0026                          _PIN_MANAGER_Initialize 19AA  
                                     __pintcode 0008                                        ?___flmul 0013  
                                     _codigo_ir 003E                                        ?___lldiv 0005  
                                      ?___llmod 0012                         Hash_algoritmo@hash_acum 001B  
                  ??_INTERRUPT_InterruptManager 0001                                     __smallconst 0800  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                   _flag_codigo 0046                            _EUSART1_ErrorHandler 0054  
                       _EUSART1_SetErrorHandler 1AB4                                       _hexpowers 0829  
                                      ?_sprintf 001B                            _INTERRUPT_Initialize 1AC6  
                             ??_TMR0_Initialize 0005                                        _INT1_ISR 1ABE  
       EUSART1_SetErrorHandler@interruptHandler 0005                       ?_INT1_SetInterruptHandler 0005  
                                      i2u152_40 0028                                        i2u152_41 0024  
                                      i2u153_40 0036                                        i2u153_41 0032  
                                      i2u154_40 0044                                        i2u154_41 0040  
                                      i2u155_40 0054                                        i2u155_41 0050  
                                      i2u156_40 0066                                        i2u156_41 0062  
                                      i2u157_40 0096                                        i2u157_41 0090  
                                      i2u158_45 0098                                        i2u159_40 00A6  
                                      i2u159_41 00A2                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                       _normaliza 1436  
                                     _timer_aux 0044                                ??_Hash_algoritmo 0015  
                             ___lmul@multiplier 0005                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                           ?_INTERRUPT_Initialize 0001  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                    ?_normaliza 0001                         ??_OSCILLATOR_Initialize 0005  
                     ??_EUSART1_SetErrorHandler 0007                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@idx 0025                                      sprintf@val 002A  
                                      ___xxtofl 1282                                        __ptext10 19AA  
                                      __ptext11 1A84                                        __ptext20 18A4  
                                      __ptext12 1AC6                                        __ptext21 190E  
                                      __ptext13 1A70                                        __ptext22 1A46  
                                      __ptext14 1A96                                        __ptext15 196C  
                                      __ptext24 1ABE                                        __ptext16 1AA0  
                                      __ptext25 19D8                                        __ptext17 1AAA  
                                      __ptext26 1ACA                                        __ptext18 1AB4  
                                      __ptext27 0000                                        __ptext19 16D2  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                      int$flags 005B              __end_of_INTERRUPT_InterruptManager 00E2  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 0058  
          __end_of_INT1_DefaultInterruptHandler 1ACC                    _INT1_DefaultInterruptHandler 1ACA  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0005  
                            _EXT_INT_Initialize 1A70                                        intlevel2 0000  
                                     sprintf@ap 0028                                       sprintf@sp 001B  
                              ___lldiv@dividend 0005                         ?_PIN_MANAGER_Initialize 0001  
                           ?_EXT_INT_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1AAA  
                _EUSART1_SetOverrunErrorHandler 1AA0                                      _RCSTA1bits 000FAB  
                                   ??_normaliza 0038  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                            _eusart1RxLastError 0047                            ??_EXT_INT_Initialize 0007  
                                      sprintf@c 002F                                        sprintf@f 001D  
               fp__INT1_DefaultInterruptHandler 0000                   ?_INT1_DefaultInterruptHandler 0001  
                              ___lldiv@quotient 000D                                 _TMR0_Initialize 1A5C  
              __end_of_INT1_SetInterruptHandler 1AA0                  __end_of_PIN_MANAGER_Initialize 19D8  
