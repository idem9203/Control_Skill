

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jun 21 18:57:03 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44  0000                     
    45                           ; Generated 09/02/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F25K50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    81  0000                     
    82 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    83  0000                     
    84 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    85  0000                     
    86                           	psect	smallconst
    87  000800                     __psmallconst:
    88                           	callstack 0
    89  000800  00                 	db	0
    90  000801                     _dpowers:
    91                           	callstack 0
    92  000801  0001               	dw	1
    93  000803  0000               	dw	0
    94  000805  000A               	dw	10
    95  000807  0000               	dw	0
    96  000809  0064               	dw	100
    97  00080B  0000               	dw	0
    98  00080D  03E8               	dw	1000
    99  00080F  0000               	dw	0
   100  000811  2710               	dw	10000
   101  000813  0000               	dw	0
   102  000815  86A0               	dw	34464
   103  000817  0001               	dw	1
   104  000819  4240               	dw	16960
   105  00081B  000F               	dw	15
   106  00081D  9680               	dw	38528
   107  00081F  0098               	dw	152
   108  000821  E100               	dw	57600
   109  000823  05F5               	dw	1525
   110  000825  CA00               	dw	51712
   111  000827  3B9A               	dw	15258
   112  000829                     __end_of_dpowers:
   113                           	callstack 0
   114  000829                     _hexpowers:
   115                           	callstack 0
   116  000829  0001               	dw	1
   117  00082B  0000               	dw	0
   118  00082D  0010               	dw	16
   119  00082F  0000               	dw	0
   120  000831  0100               	dw	256
   121  000833  0000               	dw	0
   122  000835  1000               	dw	4096
   123  000837  0000               	dw	0
   124  000839  0000               	dw	0
   125  00083B  0001               	dw	1
   126  00083D  0000               	dw	0
   127  00083F  0010               	dw	16
   128  000841  0000               	dw	0
   129  000843  0100               	dw	256
   130  000845  0000               	dw	0
   131  000847  1000               	dw	4096
   132  000849                     __end_of_hexpowers:
   133                           	callstack 0
   134  0000                     _TXREG1	set	4013
   135  0000                     _RCREG1	set	4014
   136  0000                     _SPBRG1	set	4015
   137  0000                     _TXSTA1	set	4012
   138  000849                     STR_12:
   139  000849  30                 	db	48	;'0'
   140  00084A  31                 	db	49	;'1'
   141  00084B  32                 	db	50	;'2'
   142  00084C  33                 	db	51	;'3'
   143  00084D  34                 	db	52	;'4'
   144  00084E  35                 	db	53	;'5'
   145  00084F  36                 	db	54	;'6'
   146  000850  37                 	db	55	;'7'
   147  000851  38                 	db	56	;'8'
   148  000852  39                 	db	57	;'9'
   149  000853  61                 	db	97	;'a'
   150  000854  62                 	db	98	;'b'
   151  000855  63                 	db	99	;'c'
   152  000856  64                 	db	100	;'d'
   153  000857  65                 	db	101	;'e'
   154  000858  66                 	db	102	;'f'
   155  000859  00                 	db	0
   156  00085A                     STR_6:
   157  00085A  43                 	db	67	;'C'
   158  00085B  4F                 	db	79	;'O'
   159  00085C  44                 	db	68	;'D'
   160  00085D  49                 	db	73	;'I'
   161  00085E  47                 	db	71	;'G'
   162  00085F  4F                 	db	79	;'O'
   163  000860  20                 	db	32
   164  000861  49                 	db	73	;'I'
   165  000862  52                 	db	82	;'R'
   166  000863  20                 	db	32
   167  000864  3D                 	db	61	;'='
   168  000865  20                 	db	32
   169  000866  00                 	db	0
   170  000867                     STR_9:
   171  000867  43                 	db	67	;'C'
   172  000868  4F                 	db	79	;'O'
   173  000869  4D                 	db	77	;'M'
   174  00086A  41                 	db	65	;'A'
   175  00086B  4E                 	db	78	;'N'
   176  00086C  44                 	db	68	;'D'
   177  00086D  4F                 	db	79	;'O'
   178  00086E  31                 	db	49	;'1'
   179  00086F  00                 	db	0
   180  000870                     STR_10:
   181  000870  43                 	db	67	;'C'
   182  000871  4F                 	db	79	;'O'
   183  000872  4D                 	db	77	;'M'
   184  000873  41                 	db	65	;'A'
   185  000874  4E                 	db	78	;'N'
   186  000875  44                 	db	68	;'D'
   187  000876  4F                 	db	79	;'O'
   188  000877  32                 	db	50	;'2'
   189  000878  00                 	db	0
   190  000879                     STR_11:
   191  000879  43                 	db	67	;'C'
   192  00087A  4F                 	db	79	;'O'
   193  00087B  4D                 	db	77	;'M'
   194  00087C  41                 	db	65	;'A'
   195  00087D  4E                 	db	78	;'N'
   196  00087E  44                 	db	68	;'D'
   197  00087F  4F                 	db	79	;'O'
   198  000880  33                 	db	51	;'3'
   199  000881  00                 	db	0
   200  000882                     STR_1:
   201  000882  53                 	db	83	;'S'
   202  000883  6F                 	db	111	;'o'
   203  000884  6E                 	db	110	;'n'
   204  000885  3A                 	db	58	;':'
   205  000886  20                 	db	32
   206  000887  00                 	db	0
   207  000888                     STR_5:
   208  000888  25                 	db	37
   209  000889  6C                 	db	108	;'l'
   210  00088A  78                 	db	120	;'x'
   211  00088B  00                 	db	0
   212  00088C                     STR_2:
   213  00088C  25                 	db	37
   214  00088D  64                 	db	100	;'d'
   215  00088E  00                 	db	0
   216  00088F                     STR_4:
   217  00088F  0A                 	db	10
   218  000890  00                 	db	0
   219  000891                     STR_3:
   220  000891  0D                 	db	13
   221  000892  00                 	db	0
   222  000893  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           	psect	nvCOMRAM
   225  000052                     __pnvCOMRAM:
   226                           	callstack 0
   227  000052                     _INT1_InterruptHandler:
   228                           	callstack 0
   229  000052                     	ds	2
   230  000054                     _EUSART1_ErrorHandler:
   231                           	callstack 0
   232  000054                     	ds	2
   233  000056                     _EUSART1_OverrunErrorHandler:
   234                           	callstack 0
   235  000056                     	ds	2
   236  000058                     _EUSART1_FramingErrorHandler:
   237                           	callstack 0
   238  000058                     	ds	2
   239  00005A                     _timer0ReloadVal:
   240                           	callstack 0
   241  00005A                     	ds	1
   242  0000                     _TMR0	set	4054
   243  0000                     _TRISBbits	set	3987
   244  0000                     _TRISAbits	set	3986
   245  0000                     _T0CONbits	set	4053
   246  0000                     _RCSTA1bits	set	4011
   247  0000                     _TXSTA1bits	set	4012
   248  0000                     _INT1E	set	32643
   249  0000                     _LATA3	set	31819
   250  0000                     _LATB7	set	31831
   251  0000                     _LATB0	set	31824
   252  0000                     _LATA5	set	31821
   253  0000                     _INT1IE	set	32643
   254  0000                     _TMR0IF	set	32658
   255  0000                     _INTEDG1	set	32653
   256  0000                     _INT1IF	set	32640
   257  0000                     _ANSELA	set	3931
   258  0000                     _ANSELB	set	3932
   259  0000                     _ANSELC	set	3933
   260  0000                     _LATA	set	3977
   261  0000                     _OSCTUNE	set	3995
   262  0000                     _PIR1bits	set	3998
   263  0000                     _RCSTA1	set	4011
   264  0000                     _BAUDCON1	set	4024
   265  0000                     _RCONbits	set	4048
   266  0000                     _OSCCON2	set	4050
   267  0000                     _OSCCON	set	4051
   268  0000                     _ACTCON	set	4021
   269  0000                     _SPBRGH1	set	4016
   270  0000                     _T0CON	set	4053
   271  0000                     _TMR0L	set	4054
   272  0000                     _TMR0H	set	4055
   273  0000                     _INTCON2bits	set	4081
   274  0000                     _TRISA	set	3986
   275  0000                     _LATC	set	3979
   276  0000                     _LATB	set	3978
   277  0000                     _TRISC	set	3988
   278  0000                     _TRISB	set	3987
   279  0000                     _WPUB	set	3973
   280  0000                     _INTCONbits	set	4082
   281  0000                     _INTCON3bits	set	4080
   282                           
   283                           ; #config settings
   284                           
   285                           	psect	cinit
   286  001A12                     __pcinit:
   287                           	callstack 0
   288  001A12                     start_initialization:
   289                           	callstack 0
   290  001A12                     __initialization:
   291                           	callstack 0
   292                           
   293                           ; Clear objects allocated to BANK0 (70 bytes)
   294  001A12  EE00  F060         	lfsr	0,__pbssBANK0
   295  001A16  0E46               	movlw	70
   296  001A18                     clear_0:
   297  001A18  6AEE               	clrf	postinc0,c
   298  001A1A  06E8               	decf	wreg,f,c
   299  001A1C  E1FD               	bnz	clear_0
   300                           
   301                           ; Clear objects allocated to COMRAM (20 bytes)
   302  001A1E  EE00  F03E         	lfsr	0,__pbssCOMRAM
   303  001A22  0E14               	movlw	20
   304  001A24                     clear_1:
   305  001A24  6AEE               	clrf	postinc0,c
   306  001A26  06E8               	decf	wreg,f,c
   307  001A28  E1FD               	bnz	clear_1
   308  001A2A                     end_of_initialization:
   309                           	callstack 0
   310  001A2A                     __end_of__initialization:
   311                           	callstack 0
   312  001A2A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   313  001A2C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   314  001A2E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   315  001A30  6EF8               	movwf	tblptru,c
   316  001A32  0100               	movlb	0
   317  001A34  EF37  F008         	goto	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMRAM
   320  00003E                     __pbssCOMRAM:
   321                           	callstack 0
   322  00003E                     _codigo_ir:
   323                           	callstack 0
   324  00003E                     	ds	4
   325  000042                     _cuenta:
   326                           	callstack 0
   327  000042                     	ds	2
   328  000044                     _timer_aux:
   329                           	callstack 0
   330  000044                     	ds	1
   331  000045                     _cont:
   332                           	callstack 0
   333  000045                     	ds	1
   334  000046                     _flag_codigo:
   335                           	callstack 0
   336  000046                     	ds	1
   337  000047                     _eusart1RxLastError:
   338                           	callstack 0
   339  000047                     	ds	1
   340  000048                     _texto:
   341                           	callstack 0
   342  000048                     	ds	10
   343                           
   344                           	psect	bssBANK0
   345  000060                     __pbssBANK0:
   346                           	callstack 0
   347  000060                     _tiempo:
   348                           	callstack 0
   349  000060                     	ds	70
   350                           
   351                           	psect	cstackCOMRAM
   352  000001                     __pcstackCOMRAM:
   353                           	callstack 0
   354  000001                     ??_INTERRUPT_InterruptManager:
   355  000001                     
   356                           ; 1 bytes @ 0x0
   357  000001                     	ds	4
   358  000005                     ?___lmul:
   359                           	callstack 0
   360  000005                     ?___lldiv:
   361                           	callstack 0
   362  000005                     ?___xxtofl:
   363                           	callstack 0
   364  000005                     EUSART1_Write@txData:
   365                           	callstack 0
   366  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   367                           	callstack 0
   368  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   369                           	callstack 0
   370  000005                     EUSART1_SetErrorHandler@interruptHandler:
   371                           	callstack 0
   372  000005                     INT1_SetInterruptHandler@InterruptHandler:
   373                           	callstack 0
   374  000005                     ___lmul@multiplier:
   375                           	callstack 0
   376  000005                     ___lldiv@dividend:
   377                           	callstack 0
   378  000005                     ___xxtofl@val:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x4
   382  000005                     	ds	1
   383  000006                     EUSART1_Write_string@data:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x5
   387  000006                     	ds	1
   388  000007                     
   389                           ; 1 bytes @ 0x6
   390  000007                     	ds	1
   391  000008                     
   392                           ; 1 bytes @ 0x7
   393  000008                     	ds	1
   394  000009                     ??___xxtofl:
   395  000009                     ___lmul@multiplicand:
   396                           	callstack 0
   397  000009                     ___lldiv@divisor:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x8
   401  000009                     	ds	4
   402  00000D                     ___xxtofl@sign:
   403                           	callstack 0
   404  00000D                     ___lmul@product:
   405                           	callstack 0
   406  00000D                     ___lldiv@quotient:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0xC
   410  00000D                     	ds	1
   411  00000E                     ___xxtofl@exp:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xD
   415  00000E                     	ds	1
   416  00000F                     ___xxtofl@arg:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0xE
   420  00000F                     	ds	2
   421  000011                     ?_Hash_algoritmo:
   422                           	callstack 0
   423  000011                     ___lldiv@counter:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x10
   427  000011                     	ds	1
   428  000012                     ?___llmod:
   429                           	callstack 0
   430  000012                     ___llmod@dividend:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x11
   434  000012                     	ds	1
   435  000013                     ?___flmul:
   436                           	callstack 0
   437  000013                     ___flmul@b:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x12
   441  000013                     	ds	2
   442  000015                     ??_Hash_algoritmo:
   443                           
   444                           ; 1 bytes @ 0x14
   445  000015                     	ds	1
   446  000016                     ___llmod@divisor:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x15
   450  000016                     	ds	1
   451  000017                     ___flmul@a:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x16
   455  000017                     	ds	3
   456  00001A                     ___llmod@counter:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x19
   460  00001A                     	ds	1
   461  00001B                     ??___flmul:
   462  00001B                     ?_sprintf:
   463                           	callstack 0
   464  00001B                     sprintf@sp:
   465                           	callstack 0
   466  00001B                     Hash_algoritmo@hash_acum:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x1A
   470  00001B                     	ds	2
   471  00001D                     sprintf@f:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x1C
   475  00001D                     	ds	2
   476  00001F                     ___flmul@sign:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x1E
   480  00001F                     	ds	1
   481  000020                     ___flmul@grs:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0x1F
   485  000020                     	ds	3
   486  000023                     ??_sprintf:
   487                           
   488                           ; 1 bytes @ 0x22
   489  000023                     	ds	1
   490  000024                     ___flmul@aexp:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x23
   494  000024                     	ds	1
   495  000025                     sprintf@idx:
   496                           	callstack 0
   497  000025                     ___flmul@bexp:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x24
   501  000025                     	ds	1
   502  000026                     sprintf@prec:
   503                           	callstack 0
   504  000026                     ___flmul@prod:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x25
   508  000026                     	ds	2
   509  000028                     sprintf@ap:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x27
   513  000028                     	ds	2
   514  00002A                     ___flmul@temp:
   515                           	callstack 0
   516  00002A                     sprintf@val:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x29
   520  00002A                     	ds	2
   521  00002C                     ___flge@ff1:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x2B
   525  00002C                     	ds	2
   526  00002E                     sprintf@flag:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x2D
   530  00002E                     	ds	1
   531  00002F                     sprintf@c:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x2E
   535  00002F                     	ds	1
   536  000030                     ___flge@ff2:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x2F
   540  000030                     	ds	4
   541  000034                     ??___flge:
   542                           
   543                           ; 1 bytes @ 0x33
   544  000034                     	ds	4
   545  000038                     ??_normaliza:
   546                           
   547                           ; 1 bytes @ 0x37
   548  000038                     	ds	4
   549  00003C                     ??_main:
   550                           
   551                           ; 1 bytes @ 0x3B
   552  00003C                     	ds	2
   553                           
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 91 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0
   575 ;;      Temps:          2       0       0       0       0       0       0       0       0
   576 ;;      Totals:         2       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        2 bytes
   578 ;; Hardware stack levels required when called: 7
   579 ;; This function calls:
   580 ;;		_EUSART1_Write_string
   581 ;;		_Hash_algoritmo
   582 ;;		_SYSTEM_Initialize
   583 ;;		_normaliza
   584 ;;		_sprintf
   585 ;; This function is called by:
   586 ;;		Startup code after reset
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text0
   591  00106E                     __ptext0:
   592                           	callstack 0
   593  00106E                     _main:
   594                           	callstack 24
   595  00106E                     
   596                           ;main.c: 94: SYSTEM_Initialize();
   597  00106E  EC1C  F00D         	call	_SYSTEM_Initialize	;wreg free
   598  001072                     
   599                           ;main.c: 96: ANSELA = 0b00000111;
   600  001072  0E07               	movlw	7
   601  001074  010F               	movlb	15	; () banked
   602  001076  6F5B               	movwf	91,b	;volatile
   603  001078                     
   604                           ; BSR set to: 15
   605                           ;main.c: 97: ANSELC = 0x00;
   606  001078  0E00               	movlw	0
   607  00107A  6F5D               	movwf	93,b	;volatile
   608  00107C                     
   609                           ; BSR set to: 15
   610                           ;main.c: 98: TRISAbits.TRISA5 = 0;
   611  00107C  9A92               	bcf	146,5,c	;volatile
   612  00107E                     
   613                           ; BSR set to: 15
   614                           ;main.c: 99: TRISBbits.TRISB0 = 0;
   615  00107E  9093               	bcf	147,0,c	;volatile
   616  001080                     
   617                           ; BSR set to: 15
   618                           ;main.c: 100: TRISBbits.TRISB7 = 0;
   619  001080  9E93               	bcf	147,7,c	;volatile
   620  001082                     
   621                           ; BSR set to: 15
   622                           ;main.c: 102: LATA5 = 0;
   623  001082  9A89               	bcf	3977,5,c	;volatile
   624  001084                     
   625                           ; BSR set to: 15
   626                           ;main.c: 103: LATB0 = 0;
   627  001084  908A               	bcf	3978,0,c	;volatile
   628  001086                     
   629                           ; BSR set to: 15
   630                           ;main.c: 104: LATB7 = 0;
   631  001086  9E8A               	bcf	3978,7,c	;volatile
   632  001088                     
   633                           ; BSR set to: 15
   634                           ;main.c: 111: (INTCONbits.GIE = 1);
   635  001088  8EF2               	bsf	242,7,c	;volatile
   636  00108A                     
   637                           ; BSR set to: 15
   638                           ;main.c: 117: (INTCONbits.PEIE = 1);
   639  00108A  8CF2               	bsf	242,6,c	;volatile
   640  00108C                     l2259:
   641                           
   642                           ;main.c: 123: {;main.c: 125: if (flag_codigo == 1)
   643  00108C  0446               	decf	_flag_codigo^0,w,c
   644  00108E  A4D8               	btfss	status,2,c
   645  001090  EF4C  F008         	goto	u1601
   646  001094  EF4E  F008         	goto	u1600
   647  001098                     u1601:
   648  001098  EF2E  F009         	goto	l2317
   649  00109C                     u1600:
   650  00109C                     
   651                           ;main.c: 126: {;main.c: 127: normaliza();
   652  00109C  EC21  F00A         	call	_normaliza	;wreg free
   653  0010A0                     
   654                           ;main.c: 128: codigo_ir = Hash_algoritmo();
   655  0010A0  EC6F  F00B         	call	_Hash_algoritmo	;wreg free
   656  0010A4  C011  F03E         	movff	?_Hash_algoritmo,_codigo_ir
   657  0010A8  C012  F03F         	movff	?_Hash_algoritmo+1,_codigo_ir+1
   658  0010AC  C013  F040         	movff	?_Hash_algoritmo+2,_codigo_ir+2
   659  0010B0  C014  F041         	movff	?_Hash_algoritmo+3,_codigo_ir+3
   660  0010B4                     
   661                           ;main.c: 129: EUSART1_Write_string("Son: ");
   662  0010B4  0E82               	movlw	low STR_1
   663  0010B6  6E06               	movwf	EUSART1_Write_string@data^0,c
   664  0010B8  0E08               	movlw	high STR_1
   665  0010BA  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   666  0010BC  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   667  0010C0                     
   668                           ;main.c: 130: sprintf(texto, "%d", cuenta);
   669  0010C0  0E48               	movlw	low _texto
   670  0010C2  6E1B               	movwf	sprintf@sp^0,c
   671  0010C4  0E00               	movlw	high _texto
   672  0010C6  6E1C               	movwf	(sprintf@sp+1)^0,c
   673  0010C8  0E8C               	movlw	low STR_2
   674  0010CA  6E1D               	movwf	sprintf@f^0,c
   675  0010CC  0E08               	movlw	high STR_2
   676  0010CE  6E1E               	movwf	(sprintf@f+1)^0,c
   677  0010D0  C042  F01F         	movff	_cuenta,?_sprintf+4
   678  0010D4  C043  F020         	movff	_cuenta+1,?_sprintf+5
   679  0010D8  EC5F  F006         	call	_sprintf	;wreg free
   680  0010DC                     
   681                           ;main.c: 131: EUSART1_Write_string(texto);
   682  0010DC  0E48               	movlw	low _texto
   683  0010DE  6E06               	movwf	EUSART1_Write_string@data^0,c
   684  0010E0  0E00               	movlw	high _texto
   685  0010E2  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   686  0010E4  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   687  0010E8                     
   688                           ;main.c: 132: EUSART1_Write_string("\r");
   689  0010E8  0E91               	movlw	low STR_3
   690  0010EA  6E06               	movwf	EUSART1_Write_string@data^0,c
   691  0010EC  0E08               	movlw	high STR_3
   692  0010EE  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   693  0010F0  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   694  0010F4                     
   695                           ;main.c: 133: EUSART1_Write_string("\n");
   696  0010F4  0E8F               	movlw	low STR_4
   697  0010F6  6E06               	movwf	EUSART1_Write_string@data^0,c
   698  0010F8  0E08               	movlw	high STR_4
   699  0010FA  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   700  0010FC  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   701  001100                     
   702                           ;main.c: 134: sprintf(texto, "%lx", codigo_ir);
   703  001100  0E48               	movlw	low _texto
   704  001102  6E1B               	movwf	sprintf@sp^0,c
   705  001104  0E00               	movlw	high _texto
   706  001106  6E1C               	movwf	(sprintf@sp+1)^0,c
   707  001108  0E88               	movlw	low STR_5
   708  00110A  6E1D               	movwf	sprintf@f^0,c
   709  00110C  0E08               	movlw	high STR_5
   710  00110E  6E1E               	movwf	(sprintf@f+1)^0,c
   711  001110  C03E  F01F         	movff	_codigo_ir,?_sprintf+4
   712  001114  C03F  F020         	movff	_codigo_ir+1,?_sprintf+5
   713  001118  C040  F021         	movff	_codigo_ir+2,?_sprintf+6
   714  00111C  C041  F022         	movff	_codigo_ir+3,?_sprintf+7
   715  001120  EC5F  F006         	call	_sprintf	;wreg free
   716  001124                     
   717                           ;main.c: 135: EUSART1_Write_string("CODIGO IR = ");
   718  001124  0E5A               	movlw	low STR_6
   719  001126  6E06               	movwf	EUSART1_Write_string@data^0,c
   720  001128  0E08               	movlw	high STR_6
   721  00112A  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   722  00112C  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   723  001130                     
   724                           ;main.c: 136: EUSART1_Write_string(texto);
   725  001130  0E48               	movlw	low _texto
   726  001132  6E06               	movwf	EUSART1_Write_string@data^0,c
   727  001134  0E00               	movlw	high _texto
   728  001136  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   729  001138  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   730  00113C                     
   731                           ;main.c: 137: EUSART1_Write_string("\r");
   732  00113C  0E91               	movlw	low STR_3
   733  00113E  6E06               	movwf	EUSART1_Write_string@data^0,c
   734  001140  0E08               	movlw	high STR_3
   735  001142  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   736  001144  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   737  001148                     
   738                           ;main.c: 138: EUSART1_Write_string("\n");
   739  001148  0E8F               	movlw	low STR_4
   740  00114A  6E06               	movwf	EUSART1_Write_string@data^0,c
   741  00114C  0E08               	movlw	high STR_4
   742  00114E  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   743  001150  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   744  001154                     
   745                           ;main.c: 140: if (codigo_ir == 0xabca4680)
   746  001154  0E80               	movlw	128
   747  001156  183E               	xorwf	_codigo_ir^0,w,c
   748  001158  E10D               	bnz	u1611
   749  00115A  0E46               	movlw	70
   750  00115C  183F               	xorwf	(_codigo_ir+1)^0,w,c
   751  00115E  E10A               	bnz	u1611
   752  001160  0ECA               	movlw	202
   753  001162  1840               	xorwf	(_codigo_ir+2)^0,w,c
   754  001164  E107               	bnz	u1611
   755  001166  0EAB               	movlw	171
   756  001168  1841               	xorwf	(_codigo_ir+3)^0,w,c
   757  00116A  A4D8               	btfss	status,2,c
   758  00116C  EFBA  F008         	goto	u1611
   759  001170  EFBC  F008         	goto	u1610
   760  001174                     u1611:
   761  001174  EFCD  F008         	goto	l2291
   762  001178                     u1610:
   763  001178                     
   764                           ;main.c: 141: {;main.c: 142: LATA5 =~ LATA5;
   765  001178  AA89               	btfss	3977,5,c	;volatile
   766  00117A  EFC1  F008         	goto	u1621
   767  00117E  EFC4  F008         	goto	u1620
   768  001182                     u1621:
   769  001182  8A89               	bsf	3977,5,c	;volatile
   770  001184  EFC5  F008         	goto	u1635
   771  001188                     u1620:
   772  001188  9A89               	bcf	3977,5,c	;volatile
   773  00118A                     u1635:
   774  00118A                     
   775                           ;main.c: 143: EUSART1_Write_string("COMANDO1");
   776  00118A  0E67               	movlw	low STR_9
   777  00118C  6E06               	movwf	EUSART1_Write_string@data^0,c
   778  00118E  0E08               	movlw	high STR_9
   779  001190  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   780  001192  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   781                           
   782                           ;main.c: 144: }
   783  001196  EF11  F009         	goto	l2303
   784  00119A                     l2291:
   785                           
   786                           ;main.c: 145: else if (codigo_ir == 0x88574b5)
   787  00119A  0EB5               	movlw	181
   788  00119C  183E               	xorwf	_codigo_ir^0,w,c
   789  00119E  E10D               	bnz	u1641
   790  0011A0  0E74               	movlw	116
   791  0011A2  183F               	xorwf	(_codigo_ir+1)^0,w,c
   792  0011A4  E10A               	bnz	u1641
   793  0011A6  0E85               	movlw	133
   794  0011A8  1840               	xorwf	(_codigo_ir+2)^0,w,c
   795  0011AA  E107               	bnz	u1641
   796  0011AC  0E08               	movlw	8
   797  0011AE  1841               	xorwf	(_codigo_ir+3)^0,w,c
   798  0011B0  A4D8               	btfss	status,2,c
   799  0011B2  EFDD  F008         	goto	u1641
   800  0011B6  EFDF  F008         	goto	u1640
   801  0011BA                     u1641:
   802  0011BA  EFF0  F008         	goto	l2297
   803  0011BE                     u1640:
   804  0011BE                     
   805                           ;main.c: 146: {;main.c: 147: LATB0 =~ LATB0;
   806  0011BE  A08A               	btfss	3978,0,c	;volatile
   807  0011C0  EFE4  F008         	goto	u1651
   808  0011C4  EFE7  F008         	goto	u1650
   809  0011C8                     u1651:
   810  0011C8  808A               	bsf	3978,0,c	;volatile
   811  0011CA  EFE8  F008         	goto	u1665
   812  0011CE                     u1650:
   813  0011CE  908A               	bcf	3978,0,c	;volatile
   814  0011D0                     u1665:
   815  0011D0                     
   816                           ;main.c: 148: EUSART1_Write_string("COMANDO2");
   817  0011D0  0E70               	movlw	low STR_10
   818  0011D2  6E06               	movwf	EUSART1_Write_string@data^0,c
   819  0011D4  0E08               	movlw	high STR_10
   820  0011D6  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   821  0011D8  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   822                           
   823                           ;main.c: 149: }
   824  0011DC  EF11  F009         	goto	l2303
   825  0011E0                     l2297:
   826                           
   827                           ;main.c: 151: else if (codigo_ir == 0x574cb39e)
   828  0011E0  0E9E               	movlw	158
   829  0011E2  183E               	xorwf	_codigo_ir^0,w,c
   830  0011E4  E10D               	bnz	u1671
   831  0011E6  0EB3               	movlw	179
   832  0011E8  183F               	xorwf	(_codigo_ir+1)^0,w,c
   833  0011EA  E10A               	bnz	u1671
   834  0011EC  0E4C               	movlw	76
   835  0011EE  1840               	xorwf	(_codigo_ir+2)^0,w,c
   836  0011F0  E107               	bnz	u1671
   837  0011F2  0E57               	movlw	87
   838  0011F4  1841               	xorwf	(_codigo_ir+3)^0,w,c
   839  0011F6  A4D8               	btfss	status,2,c
   840  0011F8  EF00  F009         	goto	u1671
   841  0011FC  EF02  F009         	goto	u1670
   842  001200                     u1671:
   843  001200  EF11  F009         	goto	l2303
   844  001204                     u1670:
   845  001204                     
   846                           ;main.c: 152: {;main.c: 153: LATA3 =~ LATA3;
   847  001204  A689               	btfss	3977,3,c	;volatile
   848  001206  EF07  F009         	goto	u1681
   849  00120A  EF0A  F009         	goto	u1680
   850  00120E                     u1681:
   851  00120E  8689               	bsf	3977,3,c	;volatile
   852  001210  EF0B  F009         	goto	u1695
   853  001214                     u1680:
   854  001214  9689               	bcf	3977,3,c	;volatile
   855  001216                     u1695:
   856  001216                     
   857                           ;main.c: 154: EUSART1_Write_string("COMANDO3");
   858  001216  0E79               	movlw	low STR_11
   859  001218  6E06               	movwf	EUSART1_Write_string@data^0,c
   860  00121A  0E08               	movlw	high STR_11
   861  00121C  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   862  00121E  EC8D  F00C         	call	_EUSART1_Write_string	;wreg free
   863  001222                     l2303:
   864                           
   865                           ;main.c: 155: };main.c: 156: codigo_ir = 0;
   866  001222  0E00               	movlw	0
   867  001224  6E3E               	movwf	_codigo_ir^0,c
   868  001226  0E00               	movlw	0
   869  001228  6E3F               	movwf	(_codigo_ir+1)^0,c
   870  00122A  0E00               	movlw	0
   871  00122C  6E40               	movwf	(_codigo_ir+2)^0,c
   872  00122E  0E00               	movlw	0
   873  001230  6E41               	movwf	(_codigo_ir+3)^0,c
   874  001232                     
   875                           ;main.c: 158: _delay((unsigned long)((2000)*(16000000/4000.0)));
   876  001232  0E29               	movlw	41
   877  001234  6E3D               	movwf	(??_main+1)^0,c
   878  001236  0E96               	movlw	150
   879  001238  6E3C               	movwf	??_main^0,c
   880  00123A  0E7F               	movlw	127
   881  00123C                     u1727:
   882  00123C  2EE8               	decfsz	wreg,f,c
   883  00123E  D7FE               	bra	u1727
   884  001240  2E3C               	decfsz	??_main^0,f,c
   885  001242  D7FC               	bra	u1727
   886  001244  2E3D               	decfsz	(??_main+1)^0,f,c
   887  001246  D7FA               	bra	u1727
   888  001248  F000               	nop	
   889  00124A                     
   890                           ;main.c: 160: flag_codigo = 0;
   891  00124A  0E00               	movlw	0
   892  00124C  6E46               	movwf	_flag_codigo^0,c
   893  00124E                     
   894                           ;main.c: 161: cuenta = 0;
   895  00124E  0E00               	movlw	0
   896  001250  6E43               	movwf	(_cuenta+1)^0,c
   897  001252  0E00               	movlw	0
   898  001254  6E42               	movwf	_cuenta^0,c
   899  001256                     
   900                           ;main.c: 162: INTEDG1 = 0;
   901  001256  9AF1               	bcf	4081,5,c	;volatile
   902  001258                     
   903                           ;main.c: 163: INT1IF = 0;
   904  001258  90F0               	bcf	4080,0,c	;volatile
   905  00125A                     
   906                           ;main.c: 164: INT1E = 1;
   907  00125A  86F0               	bsf	4080,3,c	;volatile
   908  00125C                     l2317:
   909                           
   910                           ;main.c: 165: };main.c: 166: _delay((unsigned long)((80)*(16000000/4000.0)));
   911  00125C  0E02               	movlw	2
   912  00125E  6E3D               	movwf	(??_main+1)^0,c
   913  001260  0EA0               	movlw	160
   914  001262  6E3C               	movwf	??_main^0,c
   915  001264  0E92               	movlw	146
   916  001266                     u1737:
   917  001266  2EE8               	decfsz	wreg,f,c
   918  001268  D7FE               	bra	u1737
   919  00126A  2E3C               	decfsz	??_main^0,f,c
   920  00126C  D7FC               	bra	u1737
   921  00126E  2E3D               	decfsz	(??_main+1)^0,f,c
   922  001270  D7FA               	bra	u1737
   923  001272  D000               	nop2	
   924  001274                     
   925                           ;main.c: 167: LATB7 =~ LATB7;
   926  001274  AE8A               	btfss	3978,7,c	;volatile
   927  001276  EF3F  F009         	goto	u1701
   928  00127A  EF42  F009         	goto	u1700
   929  00127E                     u1701:
   930  00127E  8E8A               	bsf	3978,7,c	;volatile
   931  001280  EF43  F009         	goto	u1715
   932  001284                     u1700:
   933  001284  9E8A               	bcf	3978,7,c	;volatile
   934  001286                     u1715:
   935  001286  EF46  F008         	goto	l2259
   936  00128A  EF71  F000         	goto	start
   937  00128E                     __end_of_main:
   938                           	callstack 0
   939                           
   940 ;; *************** function _sprintf *****************
   941 ;; Defined at:
   942 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  sp              2   26[COMRAM] PTR unsigned char 
   945 ;;		 -> texto(10), 
   946 ;;  f               2   28[COMRAM] PTR const unsigned char 
   947 ;;		 -> STR_5(4), STR_2(3), 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  idx             1   36[COMRAM] unsigned char 
   950 ;;  val             4   41[COMRAM] unsigned long 
   951 ;;  tmpval          4    0        struct .
   952 ;;  cp              3    0        PTR const unsigned char 
   953 ;;  ap              2   39[COMRAM] PTR void [1]
   954 ;;		 -> ?_sprintf(2), 
   955 ;;  prec            2   37[COMRAM] int 
   956 ;;  len             2    0        unsigned int 
   957 ;;  c               1   46[COMRAM] unsigned char 
   958 ;;  flag            1   45[COMRAM] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  2   26[COMRAM] int 
   961 ;; Registers used:
   962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   968 ;;      Params:         8       0       0       0       0       0       0       0       0
   969 ;;      Locals:        11       0       0       0       0       0       0       0       0
   970 ;;      Temps:          2       0       0       0       0       0       0       0       0
   971 ;;      Totals:        21       0       0       0       0       0       0       0       0
   972 ;;Total ram usage:       21 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; Hardware stack levels required when called: 5
   975 ;; This function calls:
   976 ;;		___lldiv
   977 ;;		___llmod
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text1
   984  000CBE                     __ptext1:
   985                           	callstack 0
   986  000CBE                     _sprintf:
   987                           	callstack 25
   988  000CBE                     
   989                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
   990  000CBE  0E1F               	movlw	low (?_sprintf+4)
   991  000CC0  6E28               	movwf	sprintf@ap^0,c
   992  000CC2  0E00               	movlw	high (?_sprintf+4)
   993  000CC4  6E29               	movwf	(sprintf@ap+1)^0,c
   994                           
   995                           ;doprnt.c: 553: while((c = *f++)) {
   996  000CC6  EF1F  F008         	goto	l2195
   997  000CCA                     l2099:
   998                           
   999                           ;doprnt.c: 555: if(c != '%')
  1000  000CCA  0E25               	movlw	37
  1001  000CCC  182F               	xorwf	sprintf@c^0,w,c
  1002  000CCE  B4D8               	btfsc	status,2,c
  1003  000CD0  EF6C  F006         	goto	u1401
  1004  000CD4  EF6E  F006         	goto	u1400
  1005  000CD8                     u1401:
  1006  000CD8  EF78  F006         	goto	l2105
  1007  000CDC                     u1400:
  1008  000CDC                     
  1009                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1010  000CDC  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1011  000CE0  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1012  000CE4  C02F  FFDF         	movff	sprintf@c,indf2
  1013  000CE8  4A1B               	infsnz	sprintf@sp^0,f,c
  1014  000CEA  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1015                           
  1016                           ;doprnt.c: 559: continue;
  1017  000CEC  EF1F  F008         	goto	l2195
  1018  000CF0                     l2105:
  1019                           
  1020                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1021  000CF0  0E00               	movlw	0
  1022  000CF2  6E2E               	movwf	sprintf@flag^0,c
  1023  000CF4  EF82  F006         	goto	l2113
  1024  000CF8                     l2107:
  1025                           
  1026                           ;doprnt.c: 669: flag |= 0x10;
  1027  000CF8  882E               	bsf	sprintf@flag^0,4,c
  1028                           
  1029                           ;doprnt.c: 670: goto loop;
  1030  000CFA  EF82  F006         	goto	l2113
  1031  000CFE                     l2109:
  1032                           
  1033                           ;doprnt.c: 747: flag |= 0x80;
  1034  000CFE  8E2E               	bsf	sprintf@flag^0,7,c
  1035                           
  1036                           ;doprnt.c: 749: break;
  1037  000D00  EFA2  F006         	goto	l368
  1038  000D04                     l2113:
  1039  000D04  C01D  FFF6         	movff	sprintf@f,tblptrl
  1040  000D08  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1041  000D0C  4A1D               	infsnz	sprintf@f^0,f,c
  1042  000D0E  2A1E               	incf	(sprintf@f+1)^0,f,c
  1043  000D10                     	if	0	;tblptru may be non-zero
  1044  000D10                     	endif
  1045  000D10                     	if	0	;tblptru may be non-zero
  1046  000D10                     	endif
  1047  000D10  0008               	tblrd		*
  1048  000D12  CFF5 F02F          	movff	tablat,sprintf@c
  1049  000D16  502F               	movf	sprintf@c^0,w,c
  1050                           
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 5, Range of values is 0 to 120
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte           16     9 (average)
  1056                           ;	Chosen strategy is simple_byte
  1057  000D18  0A00               	xorlw	0	; case 0
  1058  000D1A  B4D8               	btfsc	status,2,c
  1059  000D1C  EF30  F008         	goto	l2197
  1060  000D20  0A64               	xorlw	100	; case 100
  1061  000D22  B4D8               	btfsc	status,2,c
  1062  000D24  EFA2  F006         	goto	l368
  1063  000D28  0A0D               	xorlw	13	; case 105
  1064  000D2A  B4D8               	btfsc	status,2,c
  1065  000D2C  EFA2  F006         	goto	l368
  1066  000D30  0A05               	xorlw	5	; case 108
  1067  000D32  B4D8               	btfsc	status,2,c
  1068  000D34  EF7C  F006         	goto	l2107
  1069  000D38  0A14               	xorlw	20	; case 120
  1070  000D3A  B4D8               	btfsc	status,2,c
  1071  000D3C  EF7F  F006         	goto	l2109
  1072  000D40  EF1F  F008         	goto	l2195
  1073  000D44                     l368:
  1074                           
  1075                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  1076  000D44  BE2E               	btfsc	sprintf@flag^0,7,c
  1077  000D46  EFA7  F006         	goto	u1411
  1078  000D4A  EFA9  F006         	goto	u1410
  1079  000D4E                     u1411:
  1080  000D4E  EFE6  F006         	goto	l371
  1081  000D52                     u1410:
  1082  000D52                     
  1083                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  1084  000D52  A82E               	btfss	sprintf@flag^0,4,c
  1085  000D54  EFAE  F006         	goto	u1421
  1086  000D58  EFB0  F006         	goto	u1420
  1087  000D5C                     u1421:
  1088  000D5C  EFC2  F006         	goto	l2121
  1089  000D60                     u1420:
  1090  000D60                     
  1091                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  1092  000D60  C028  FFD9         	movff	sprintf@ap,fsr2l
  1093  000D64  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1094  000D68  CFDE F02A          	movff	postinc2,sprintf@val
  1095  000D6C  CFDE F02B          	movff	postinc2,sprintf@val+1
  1096  000D70  CFDE F02C          	movff	postinc2,sprintf@val+2
  1097  000D74  CFDE F02D          	movff	postinc2,sprintf@val+3
  1098  000D78  0E04               	movlw	4
  1099  000D7A  2628               	addwf	sprintf@ap^0,f,c
  1100  000D7C  0E00               	movlw	0
  1101  000D7E  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1102  000D80  EFD3  F006         	goto	l2125
  1103  000D84                     l2121:
  1104                           
  1105                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  1106  000D84  C028  FFD9         	movff	sprintf@ap,fsr2l
  1107  000D88  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1108  000D8C  CFDE F02A          	movff	postinc2,sprintf@val
  1109  000D90  CFDD F02B          	movff	postdec2,sprintf@val+1
  1110  000D94  0E00               	movlw	0
  1111  000D96  BE2B               	btfsc	(sprintf@val+1)^0,7,c
  1112  000D98  0EFF               	movlw	-1
  1113  000D9A  6E2C               	movwf	(sprintf@val+2)^0,c
  1114  000D9C  6E2D               	movwf	(sprintf@val+3)^0,c
  1115  000D9E  0E02               	movlw	2
  1116  000DA0  2628               	addwf	sprintf@ap^0,f,c
  1117  000DA2  0E00               	movlw	0
  1118  000DA4  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1119  000DA6                     l2125:
  1120                           
  1121                           ;doprnt.c: 1287: if((long)val < 0) {
  1122  000DA6  BE2D               	btfsc	(sprintf@val+3)^0,7,c
  1123  000DA8  EFDA  F006         	goto	u1430
  1124  000DAC  EFD8  F006         	goto	u1431
  1125  000DB0                     u1431:
  1126  000DB0  EF69  F007         	goto	l2169
  1127  000DB4                     u1430:
  1128  000DB4                     
  1129                           ;doprnt.c: 1288: flag |= 0x03;
  1130  000DB4  0E03               	movlw	3
  1131  000DB6  122E               	iorwf	sprintf@flag^0,f,c
  1132  000DB8                     
  1133                           ;doprnt.c: 1289: val = -val;
  1134  000DB8  1E2D               	comf	(sprintf@val+3)^0,f,c
  1135  000DBA  1E2C               	comf	(sprintf@val+2)^0,f,c
  1136  000DBC  1E2B               	comf	(sprintf@val+1)^0,f,c
  1137  000DBE  6C2A               	negf	sprintf@val^0,c
  1138  000DC0  0E00               	movlw	0
  1139  000DC2  222B               	addwfc	(sprintf@val+1)^0,f,c
  1140  000DC4  222C               	addwfc	(sprintf@val+2)^0,f,c
  1141  000DC6  222D               	addwfc	(sprintf@val+3)^0,f,c
  1142  000DC8  EF69  F007         	goto	l2169
  1143  000DCC                     l371:
  1144                           
  1145                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  1146  000DCC  A82E               	btfss	sprintf@flag^0,4,c
  1147  000DCE  EFEB  F006         	goto	u1441
  1148  000DD2  EFED  F006         	goto	u1440
  1149  000DD6                     u1441:
  1150  000DD6  EFFF  F006         	goto	l2135
  1151  000DDA                     u1440:
  1152  000DDA                     
  1153                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1154  000DDA  C028  FFD9         	movff	sprintf@ap,fsr2l
  1155  000DDE  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1156  000DE2  CFDE F02A          	movff	postinc2,sprintf@val
  1157  000DE6  CFDE F02B          	movff	postinc2,sprintf@val+1
  1158  000DEA  CFDE F02C          	movff	postinc2,sprintf@val+2
  1159  000DEE  CFDE F02D          	movff	postinc2,sprintf@val+3
  1160  000DF2  0E04               	movlw	4
  1161  000DF4  2628               	addwf	sprintf@ap^0,f,c
  1162  000DF6  0E00               	movlw	0
  1163  000DF8  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1164  000DFA  EF69  F007         	goto	l2169
  1165  000DFE                     l2135:
  1166                           
  1167                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  1168  000DFE  C028  FFD9         	movff	sprintf@ap,fsr2l
  1169  000E02  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1170  000E06  CFDE F023          	movff	postinc2,??_sprintf
  1171  000E0A  CFDD F024          	movff	postdec2,??_sprintf+1
  1172  000E0E  C023  F02A         	movff	??_sprintf,sprintf@val
  1173  000E12  C024  F02B         	movff	??_sprintf+1,sprintf@val+1
  1174  000E16  6A2C               	clrf	(sprintf@val+2)^0,c
  1175  000E18  6A2D               	clrf	(sprintf@val+3)^0,c
  1176  000E1A  0E02               	movlw	2
  1177  000E1C  2628               	addwf	sprintf@ap^0,f,c
  1178  000E1E  0E00               	movlw	0
  1179  000E20  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1180  000E22  EF69  F007         	goto	l2169
  1181  000E26                     l2139:
  1182                           
  1183                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1184  000E26  0E01               	movlw	1
  1185  000E28  6E2F               	movwf	sprintf@c^0,c
  1186  000E2A                     l2145:
  1187                           
  1188                           ;doprnt.c: 1332: if(val < dpowers[c])
  1189  000E2A  502F               	movf	sprintf@c^0,w,c
  1190  000E2C  0D04               	mullw	4
  1191  000E2E  0E01               	movlw	low _dpowers
  1192  000E30  24F3               	addwf	243,w,c
  1193  000E32  6EF6               	movwf	tblptrl,c
  1194  000E34  0E08               	movlw	high _dpowers
  1195  000E36  20F4               	addwfc	244,w,c
  1196  000E38  6EF7               	movwf	tblptrh,c
  1197  000E3A                     	if	0	;There are less than 3 active tblptr bytes
  1198  000E3A                     	endif
  1199  000E3A  0009               	tblrd		*+
  1200  000E3C  50F5               	movf	tablat,w,c
  1201  000E3E  5C2A               	subwf	sprintf@val^0,w,c
  1202  000E40  0009               	tblrd		*+
  1203  000E42  50F5               	movf	tablat,w,c
  1204  000E44  582B               	subwfb	(sprintf@val+1)^0,w,c
  1205  000E46  0009               	tblrd		*+
  1206  000E48  50F5               	movf	tablat,w,c
  1207  000E4A  582C               	subwfb	(sprintf@val+2)^0,w,c
  1208  000E4C  0009               	tblrd		*+
  1209  000E4E  50F5               	movf	tablat,w,c
  1210  000E50  582D               	subwfb	(sprintf@val+3)^0,w,c
  1211  000E52  B0D8               	btfsc	status,0,c
  1212  000E54  EF2E  F007         	goto	u1451
  1213  000E58  EF30  F007         	goto	u1450
  1214  000E5C                     u1451:
  1215  000E5C  EF32  F007         	goto	l2149
  1216  000E60                     u1450:
  1217  000E60  EF75  F007         	goto	l2171
  1218  000E64                     l2149:
  1219  000E64  2A2F               	incf	sprintf@c^0,f,c
  1220  000E66  0E0A               	movlw	10
  1221  000E68  182F               	xorwf	sprintf@c^0,w,c
  1222  000E6A  A4D8               	btfss	status,2,c
  1223  000E6C  EF3A  F007         	goto	u1461
  1224  000E70  EF3C  F007         	goto	u1460
  1225  000E74                     u1461:
  1226  000E74  EF15  F007         	goto	l2145
  1227  000E78                     u1460:
  1228  000E78  EF75  F007         	goto	l2171
  1229  000E7C                     l2153:
  1230                           
  1231                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1232  000E7C  0E01               	movlw	1
  1233  000E7E  6E2F               	movwf	sprintf@c^0,c
  1234  000E80                     l2159:
  1235                           
  1236                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1237  000E80  502F               	movf	sprintf@c^0,w,c
  1238  000E82  0D04               	mullw	4
  1239  000E84  0E29               	movlw	low _hexpowers
  1240  000E86  24F3               	addwf	243,w,c
  1241  000E88  6EF6               	movwf	tblptrl,c
  1242  000E8A  0E08               	movlw	high _hexpowers
  1243  000E8C  20F4               	addwfc	244,w,c
  1244  000E8E  6EF7               	movwf	tblptrh,c
  1245  000E90                     	if	0	;There are less than 3 active tblptr bytes
  1246  000E90                     	endif
  1247  000E90  0009               	tblrd		*+
  1248  000E92  50F5               	movf	tablat,w,c
  1249  000E94  5C2A               	subwf	sprintf@val^0,w,c
  1250  000E96  0009               	tblrd		*+
  1251  000E98  50F5               	movf	tablat,w,c
  1252  000E9A  582B               	subwfb	(sprintf@val+1)^0,w,c
  1253  000E9C  0009               	tblrd		*+
  1254  000E9E  50F5               	movf	tablat,w,c
  1255  000EA0  582C               	subwfb	(sprintf@val+2)^0,w,c
  1256  000EA2  0009               	tblrd		*+
  1257  000EA4  50F5               	movf	tablat,w,c
  1258  000EA6  582D               	subwfb	(sprintf@val+3)^0,w,c
  1259  000EA8  B0D8               	btfsc	status,0,c
  1260  000EAA  EF59  F007         	goto	u1471
  1261  000EAE  EF5B  F007         	goto	u1470
  1262  000EB2                     u1471:
  1263  000EB2  EF5D  F007         	goto	l2163
  1264  000EB6                     u1470:
  1265  000EB6  EF75  F007         	goto	l2171
  1266  000EBA                     l2163:
  1267  000EBA  2A2F               	incf	sprintf@c^0,f,c
  1268  000EBC  0E08               	movlw	8
  1269  000EBE  182F               	xorwf	sprintf@c^0,w,c
  1270  000EC0  A4D8               	btfss	status,2,c
  1271  000EC2  EF65  F007         	goto	u1481
  1272  000EC6  EF67  F007         	goto	u1480
  1273  000ECA                     u1481:
  1274  000ECA  EF40  F007         	goto	l2159
  1275  000ECE                     u1480:
  1276  000ECE  EF75  F007         	goto	l2171
  1277  000ED2                     l2169:
  1278  000ED2  502E               	movf	sprintf@flag^0,w,c
  1279  000ED4  0B80               	andlw	128
  1280                           
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 2, Range of values is 0 to 128
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte            7     4 (average)
  1286                           ;	Chosen strategy is simple_byte
  1287  000ED6  0A00               	xorlw	0	; case 0
  1288  000ED8  B4D8               	btfsc	status,2,c
  1289  000EDA  EF13  F007         	goto	l2139
  1290  000EDE  0A80               	xorlw	128	; case 128
  1291  000EE0  B4D8               	btfsc	status,2,c
  1292  000EE2  EF3E  F007         	goto	l2153
  1293  000EE6  EF75  F007         	goto	l2171
  1294  000EEA                     l2171:
  1295                           
  1296                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1297  000EEA  C02E  F023         	movff	sprintf@flag,??_sprintf
  1298  000EEE  0E03               	movlw	3
  1299  000EF0  1623               	andwf	??_sprintf^0,f,c
  1300  000EF2  B4D8               	btfsc	status,2,c
  1301  000EF4  EF7E  F007         	goto	u1491
  1302  000EF8  EF80  F007         	goto	u1490
  1303  000EFC                     u1491:
  1304  000EFC  EF88  F007         	goto	l2177
  1305  000F00                     u1490:
  1306  000F00                     
  1307                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1308  000F00  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1309  000F04  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1310  000F08  0E2D               	movlw	45
  1311  000F0A  6EDF               	movwf	indf2,c
  1312  000F0C  4A1B               	infsnz	sprintf@sp^0,f,c
  1313  000F0E  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1314  000F10                     l2177:
  1315                           
  1316                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1317  000F10  C02F  F026         	movff	sprintf@c,sprintf@prec
  1318  000F14  6A27               	clrf	(sprintf@prec+1)^0,c
  1319                           
  1320                           ;doprnt.c: 1500: while(prec--) {
  1321  000F16  EF12  F008         	goto	l2193
  1322  000F1A                     l2179:
  1323                           
  1324                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  1325  000F1A  C026  F023         	movff	sprintf@prec,??_sprintf
  1326  000F1E  C027  F024         	movff	sprintf@prec+1,??_sprintf+1
  1327  000F22  90D8               	bcf	status,0,c
  1328  000F24  3623               	rlcf	??_sprintf^0,f,c
  1329  000F26  3624               	rlcf	(??_sprintf+1)^0,f,c
  1330  000F28  90D8               	bcf	status,0,c
  1331  000F2A  3623               	rlcf	??_sprintf^0,f,c
  1332  000F2C  3624               	rlcf	(??_sprintf+1)^0,f,c
  1333  000F2E  0E01               	movlw	low _dpowers
  1334  000F30  2423               	addwf	??_sprintf^0,w,c
  1335  000F32  6EF6               	movwf	tblptrl,c
  1336  000F34  0E08               	movlw	high _dpowers
  1337  000F36  2024               	addwfc	(??_sprintf+1)^0,w,c
  1338  000F38  6EF7               	movwf	tblptrh,c
  1339  000F3A                     	if	0	;There are less than 3 active tblptr bytes
  1340  000F3A                     	endif
  1341  000F3A  0009               	tblrd		*+
  1342  000F3C  CFF5 F009          	movff	tablat,___lldiv@divisor
  1343  000F40  0009               	tblrd		*+
  1344  000F42  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1345  000F46  0009               	tblrd		*+
  1346  000F48  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1347  000F4C  000A               	tblrd		*-
  1348  000F4E  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1349  000F52  C02A  F005         	movff	sprintf@val,___lldiv@dividend
  1350  000F56  C02B  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1351  000F5A  C02C  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1352  000F5E  C02D  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1353  000F62  ECC2  F00B         	call	___lldiv	;wreg free
  1354  000F66  C005  F012         	movff	?___lldiv,___llmod@dividend
  1355  000F6A  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  1356  000F6E  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  1357  000F72  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  1358  000F76  0E0A               	movlw	10
  1359  000F78  6E16               	movwf	___llmod@divisor^0,c
  1360  000F7A  0E00               	movlw	0
  1361  000F7C  6E17               	movwf	(___llmod@divisor+1)^0,c
  1362  000F7E  0E00               	movlw	0
  1363  000F80  6E18               	movwf	(___llmod@divisor+2)^0,c
  1364  000F82  0E00               	movlw	0
  1365  000F84  6E19               	movwf	(___llmod@divisor+3)^0,c
  1366  000F86  EC14  F00C         	call	___llmod	;wreg free
  1367  000F8A  5012               	movf	?___llmod^0,w,c
  1368  000F8C  0F30               	addlw	48
  1369  000F8E  6E2F               	movwf	sprintf@c^0,c
  1370                           
  1371                           ;doprnt.c: 1517: break;
  1372  000F90  EF0A  F008         	goto	l2189
  1373  000F94                     l2181:
  1374                           
  1375                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  1376  000F94  C02A  F005         	movff	sprintf@val,___lldiv@dividend
  1377  000F98  C02B  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1378  000F9C  C02C  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1379  000FA0  C02D  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1380  000FA4  C026  F023         	movff	sprintf@prec,??_sprintf
  1381  000FA8  C027  F024         	movff	sprintf@prec+1,??_sprintf+1
  1382  000FAC  90D8               	bcf	status,0,c
  1383  000FAE  3623               	rlcf	??_sprintf^0,f,c
  1384  000FB0  3624               	rlcf	(??_sprintf+1)^0,f,c
  1385  000FB2  90D8               	bcf	status,0,c
  1386  000FB4  3623               	rlcf	??_sprintf^0,f,c
  1387  000FB6  3624               	rlcf	(??_sprintf+1)^0,f,c
  1388  000FB8  0E29               	movlw	low _hexpowers
  1389  000FBA  2423               	addwf	??_sprintf^0,w,c
  1390  000FBC  6EF6               	movwf	tblptrl,c
  1391  000FBE  0E08               	movlw	high _hexpowers
  1392  000FC0  2024               	addwfc	(??_sprintf+1)^0,w,c
  1393  000FC2  6EF7               	movwf	tblptrh,c
  1394  000FC4                     	if	0	;There are less than 3 active tblptr bytes
  1395  000FC4                     	endif
  1396  000FC4  0009               	tblrd		*+
  1397  000FC6  CFF5 F009          	movff	tablat,___lldiv@divisor
  1398  000FCA  0009               	tblrd		*+
  1399  000FCC  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1400  000FD0  0009               	tblrd		*+
  1401  000FD2  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1402  000FD6  000A               	tblrd		*-
  1403  000FD8  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1404  000FDC  ECC2  F00B         	call	___lldiv	;wreg free
  1405  000FE0  5005               	movf	?___lldiv^0,w,c
  1406  000FE2  0B0F               	andlw	15
  1407  000FE4  6E25               	movwf	sprintf@idx^0,c
  1408  000FE6                     
  1409                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  1410  000FE6  0E49               	movlw	low STR_12
  1411  000FE8  2425               	addwf	sprintf@idx^0,w,c
  1412  000FEA  6EF6               	movwf	tblptrl,c
  1413  000FEC  6AF7               	clrf	tblptrh,c
  1414  000FEE  0E08               	movlw	high STR_12
  1415  000FF0  22F7               	addwfc	tblptrh,f,c
  1416  000FF2                     	if	0	;There are less than 3 active tblptr bytes
  1417  000FF2                     	endif
  1418  000FF2  0008               	tblrd		*
  1419  000FF4  CFF5 F02F          	movff	tablat,sprintf@c
  1420                           
  1421                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  1422  000FF8  EF0A  F008         	goto	l2189
  1423  000FFC                     l2187:
  1424  000FFC  502E               	movf	sprintf@flag^0,w,c
  1425  000FFE  0B80               	andlw	128
  1426                           
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 2, Range of values is 0 to 128
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte            7     4 (average)
  1432                           ;	Chosen strategy is simple_byte
  1433  001000  0A00               	xorlw	0	; case 0
  1434  001002  B4D8               	btfsc	status,2,c
  1435  001004  EF8D  F007         	goto	l2179
  1436  001008  0A80               	xorlw	128	; case 128
  1437  00100A  B4D8               	btfsc	status,2,c
  1438  00100C  EFCA  F007         	goto	l2181
  1439  001010  EF0A  F008         	goto	l2189
  1440  001014                     l2189:
  1441                           
  1442                           ;doprnt.c: 1550: ((*sp++ = (c)));
  1443  001014  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1444  001018  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1445  00101C  C02F  FFDF         	movff	sprintf@c,indf2
  1446  001020  4A1B               	infsnz	sprintf@sp^0,f,c
  1447  001022  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1448  001024                     l2193:
  1449  001024  0626               	decf	sprintf@prec^0,f,c
  1450  001026  A0D8               	btfss	status,0,c
  1451  001028  0627               	decf	(sprintf@prec+1)^0,f,c
  1452  00102A  2826               	incf	sprintf@prec^0,w,c
  1453  00102C  E106               	bnz	u1501
  1454  00102E  2827               	incf	(sprintf@prec+1)^0,w,c
  1455  001030  A4D8               	btfss	status,2,c
  1456  001032  EF1D  F008         	goto	u1501
  1457  001036  EF1F  F008         	goto	u1500
  1458  00103A                     u1501:
  1459  00103A  EFFE  F007         	goto	l2187
  1460  00103E                     u1500:
  1461  00103E                     l2195:
  1462  00103E  C01D  FFF6         	movff	sprintf@f,tblptrl
  1463  001042  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1464  001046  4A1D               	infsnz	sprintf@f^0,f,c
  1465  001048  2A1E               	incf	(sprintf@f+1)^0,f,c
  1466  00104A                     	if	0	;tblptru may be non-zero
  1467  00104A                     	endif
  1468  00104A                     	if	0	;tblptru may be non-zero
  1469  00104A                     	endif
  1470  00104A  0008               	tblrd		*
  1471  00104C  CFF5 F02F          	movff	tablat,sprintf@c
  1472  001050  502F               	movf	sprintf@c^0,w,c
  1473  001052  A4D8               	btfss	status,2,c
  1474  001054  EF2E  F008         	goto	u1511
  1475  001058  EF30  F008         	goto	u1510
  1476  00105C                     u1511:
  1477  00105C  EF65  F006         	goto	l2099
  1478  001060                     u1510:
  1479  001060                     l2197:
  1480                           
  1481                           ;doprnt.c: 1564: *sp = 0;
  1482  001060  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1483  001064  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1484  001068  0E00               	movlw	0
  1485  00106A  6EDF               	movwf	indf2,c
  1486  00106C  0012               	return		;funcret
  1487  00106E                     __end_of_sprintf:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function ___llmod *****************
  1491 ;; Defined at:
  1492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  dividend        4   17[COMRAM] unsigned long 
  1495 ;;  divisor         4   21[COMRAM] unsigned long 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  counter         1   25[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  4   17[COMRAM] unsigned long 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1507 ;;      Params:         8       0       0       0       0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1510 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1511 ;;Total ram usage:        9 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 4
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_sprintf
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text2
  1522  001828                     __ptext2:
  1523                           	callstack 0
  1524  001828                     ___llmod:
  1525                           	callstack 25
  1526  001828  5016               	movf	___llmod@divisor^0,w,c
  1527  00182A  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  1528  00182C  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  1529  00182E  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  1530  001830  B4D8               	btfsc	status,2,c
  1531  001832  EF1D  F00C         	goto	u1201
  1532  001836  EF1F  F00C         	goto	u1200
  1533  00183A                     u1201:
  1534  00183A  EF4F  F00C         	goto	l808
  1535  00183E                     u1200:
  1536  00183E  0E01               	movlw	1
  1537  001840  6E1A               	movwf	___llmod@counter^0,c
  1538  001842  EF29  F00C         	goto	l1993
  1539  001846                     l1991:
  1540  001846  90D8               	bcf	status,0,c
  1541  001848  3616               	rlcf	___llmod@divisor^0,f,c
  1542  00184A  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  1543  00184C  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  1544  00184E  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  1545  001850  2A1A               	incf	___llmod@counter^0,f,c
  1546  001852                     l1993:
  1547  001852  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  1548  001854  EF2E  F00C         	goto	u1211
  1549  001858  EF30  F00C         	goto	u1210
  1550  00185C                     u1211:
  1551  00185C  EF23  F00C         	goto	l1991
  1552  001860                     u1210:
  1553  001860                     l1995:
  1554  001860  5016               	movf	___llmod@divisor^0,w,c
  1555  001862  5C12               	subwf	___llmod@dividend^0,w,c
  1556  001864  5017               	movf	(___llmod@divisor+1)^0,w,c
  1557  001866  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  1558  001868  5018               	movf	(___llmod@divisor+2)^0,w,c
  1559  00186A  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  1560  00186C  5019               	movf	(___llmod@divisor+3)^0,w,c
  1561  00186E  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  1562  001870  A0D8               	btfss	status,0,c
  1563  001872  EF3D  F00C         	goto	u1221
  1564  001876  EF3F  F00C         	goto	u1220
  1565  00187A                     u1221:
  1566  00187A  EF47  F00C         	goto	l1999
  1567  00187E                     u1220:
  1568  00187E  5016               	movf	___llmod@divisor^0,w,c
  1569  001880  5E12               	subwf	___llmod@dividend^0,f,c
  1570  001882  5017               	movf	(___llmod@divisor+1)^0,w,c
  1571  001884  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  1572  001886  5018               	movf	(___llmod@divisor+2)^0,w,c
  1573  001888  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  1574  00188A  5019               	movf	(___llmod@divisor+3)^0,w,c
  1575  00188C  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  1576  00188E                     l1999:
  1577  00188E  90D8               	bcf	status,0,c
  1578  001890  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  1579  001892  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  1580  001894  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  1581  001896  3216               	rrcf	___llmod@divisor^0,f,c
  1582  001898  2E1A               	decfsz	___llmod@counter^0,f,c
  1583  00189A  EF30  F00C         	goto	l1995
  1584  00189E                     l808:
  1585  00189E  C012  F012         	movff	___llmod@dividend,?___llmod
  1586  0018A2  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  1587  0018A6  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  1588  0018AA  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  1589  0018AE  0012               	return		;funcret
  1590  0018B0                     __end_of___llmod:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function ___lldiv *****************
  1594 ;; Defined at:
  1595 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  dividend        4    4[COMRAM] unsigned long 
  1598 ;;  divisor         4    8[COMRAM] unsigned long 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  quotient        4   12[COMRAM] unsigned long 
  1601 ;;  counter         1   16[COMRAM] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  4    4[COMRAM] unsigned long 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1611 ;;      Params:         8       0       0       0       0       0       0       0       0
  1612 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1614 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1615 ;;Total ram usage:       13 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 4
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_sprintf
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text3
  1626  001784                     __ptext3:
  1627                           	callstack 0
  1628  001784                     ___lldiv:
  1629                           	callstack 25
  1630  001784  0E00               	movlw	0
  1631  001786  6E0D               	movwf	___lldiv@quotient^0,c
  1632  001788  0E00               	movlw	0
  1633  00178A  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  1634  00178C  0E00               	movlw	0
  1635  00178E  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  1636  001790  0E00               	movlw	0
  1637  001792  6E10               	movwf	(___lldiv@quotient+3)^0,c
  1638  001794  5009               	movf	___lldiv@divisor^0,w,c
  1639  001796  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  1640  001798  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  1641  00179A  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  1642  00179C  B4D8               	btfsc	status,2,c
  1643  00179E  EFD3  F00B         	goto	u931
  1644  0017A2  EFD5  F00B         	goto	u930
  1645  0017A6                     u931:
  1646  0017A6  EF0B  F00C         	goto	l427
  1647  0017AA                     u930:
  1648  0017AA  0E01               	movlw	1
  1649  0017AC  6E11               	movwf	___lldiv@counter^0,c
  1650  0017AE  EFDF  F00B         	goto	l1821
  1651  0017B2                     l1819:
  1652  0017B2  90D8               	bcf	status,0,c
  1653  0017B4  3609               	rlcf	___lldiv@divisor^0,f,c
  1654  0017B6  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  1655  0017B8  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  1656  0017BA  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  1657  0017BC  2A11               	incf	___lldiv@counter^0,f,c
  1658  0017BE                     l1821:
  1659  0017BE  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  1660  0017C0  EFE4  F00B         	goto	u941
  1661  0017C4  EFE6  F00B         	goto	u940
  1662  0017C8                     u941:
  1663  0017C8  EFD9  F00B         	goto	l1819
  1664  0017CC                     u940:
  1665  0017CC                     l1823:
  1666  0017CC  90D8               	bcf	status,0,c
  1667  0017CE  360D               	rlcf	___lldiv@quotient^0,f,c
  1668  0017D0  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  1669  0017D2  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  1670  0017D4  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  1671  0017D6  5009               	movf	___lldiv@divisor^0,w,c
  1672  0017D8  5C05               	subwf	___lldiv@dividend^0,w,c
  1673  0017DA  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1674  0017DC  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  1675  0017DE  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1676  0017E0  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  1677  0017E2  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1678  0017E4  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  1679  0017E6  A0D8               	btfss	status,0,c
  1680  0017E8  EFF8  F00B         	goto	u951
  1681  0017EC  EFFA  F00B         	goto	u950
  1682  0017F0                     u951:
  1683  0017F0  EF03  F00C         	goto	l1831
  1684  0017F4                     u950:
  1685  0017F4  5009               	movf	___lldiv@divisor^0,w,c
  1686  0017F6  5E05               	subwf	___lldiv@dividend^0,f,c
  1687  0017F8  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1688  0017FA  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  1689  0017FC  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1690  0017FE  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  1691  001800  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1692  001802  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  1693  001804  800D               	bsf	___lldiv@quotient^0,0,c
  1694  001806                     l1831:
  1695  001806  90D8               	bcf	status,0,c
  1696  001808  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  1697  00180A  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  1698  00180C  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  1699  00180E  3209               	rrcf	___lldiv@divisor^0,f,c
  1700  001810  2E11               	decfsz	___lldiv@counter^0,f,c
  1701  001812  EFE6  F00B         	goto	l1823
  1702  001816                     l427:
  1703  001816  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  1704  00181A  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  1705  00181E  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  1706  001822  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  1707  001826  0012               	return		;funcret
  1708  001828                     __end_of___lldiv:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _normaliza *****************
  1712 ;; Defined at:
  1713 ;;		line 65 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1729 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1730 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1731 ;;Total ram usage:        4 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 5
  1734 ;; This function calls:
  1735 ;;		___flge
  1736 ;;		___flmul
  1737 ;;		___xxtofl
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text4
  1744  001442                     __ptext4:
  1745                           	callstack 0
  1746  001442                     _normaliza:
  1747                           	callstack 25
  1748  001442                     
  1749                           ;main.c: 67: for (cont=0;cont<cuenta-1+2;cont++)
  1750  001442  0E00               	movlw	0
  1751  001444  6E45               	movwf	_cont^0,c
  1752  001446  EFD8  F00A         	goto	l2087
  1753  00144A                     l2075:
  1754                           
  1755                           ;main.c: 68: {;main.c: 69: if (tiempo[cont+2] <(float)tiempo[cont] * .8) tiempo[cont]=0 
      +                          ;
  1756  00144A  0E62               	movlw	low (_tiempo+2)
  1757  00144C  2445               	addwf	_cont^0,w,c
  1758  00144E  6ED9               	movwf	fsr2l,c
  1759  001450  6ADA               	clrf	fsr2h,c
  1760  001452  0E00               	movlw	high (_tiempo+2)
  1761  001454  22DA               	addwfc	fsr2h,f,c
  1762  001456  50DF               	movf	indf2,w,c
  1763  001458  6E38               	movwf	??_normaliza^0,c
  1764  00145A  5038               	movf	??_normaliza^0,w,c
  1765  00145C  6E05               	movwf	___xxtofl@val^0,c
  1766  00145E  6A06               	clrf	(___xxtofl@val+1)^0,c
  1767  001460  6A07               	clrf	(___xxtofl@val+2)^0,c
  1768  001462  6A08               	clrf	(___xxtofl@val+3)^0,c
  1769  001464  0E00               	movlw	0
  1770  001466  EC47  F009         	call	___xxtofl
  1771  00146A  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1772  00146E  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1773  001472  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1774  001476  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1775  00147A  0ECD               	movlw	205
  1776  00147C  6E17               	movwf	___flmul@a^0,c
  1777  00147E  0ECC               	movlw	204
  1778  001480  6E18               	movwf	(___flmul@a+1)^0,c
  1779  001482  0E4C               	movlw	76
  1780  001484  6E19               	movwf	(___flmul@a+2)^0,c
  1781  001486  0E3F               	movlw	63
  1782  001488  6E1A               	movwf	(___flmul@a+3)^0,c
  1783  00148A  0E60               	movlw	low _tiempo
  1784  00148C  2445               	addwf	_cont^0,w,c
  1785  00148E  6ED9               	movwf	fsr2l,c
  1786  001490  6ADA               	clrf	fsr2h,c
  1787  001492  0E00               	movlw	high _tiempo
  1788  001494  22DA               	addwfc	fsr2h,f,c
  1789  001496  50DF               	movf	indf2,w,c
  1790  001498  6E39               	movwf	(??_normaliza+1)^0,c
  1791  00149A  5039               	movf	(??_normaliza+1)^0,w,c
  1792  00149C  6E05               	movwf	___xxtofl@val^0,c
  1793  00149E  6A06               	clrf	(___xxtofl@val+1)^0,c
  1794  0014A0  6A07               	clrf	(___xxtofl@val+2)^0,c
  1795  0014A2  6A08               	clrf	(___xxtofl@val+3)^0,c
  1796  0014A4  0E00               	movlw	0
  1797  0014A6  EC47  F009         	call	___xxtofl
  1798  0014AA  C005  F013         	movff	?___xxtofl,___flmul@b
  1799  0014AE  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1800  0014B2  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1801  0014B6  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1802  0014BA  EC4A  F004         	call	___flmul	;wreg free
  1803  0014BE  C013  F030         	movff	?___flmul,___flge@ff2
  1804  0014C2  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1805  0014C6  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1806  0014CA  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1807  0014CE  ECED  F00A         	call	___flge	;wreg free
  1808  0014D2  B0D8               	btfsc	status,0,c
  1809  0014D4  EF6E  F00A         	goto	u1361
  1810  0014D8  EF70  F00A         	goto	u1360
  1811  0014DC                     u1361:
  1812  0014DC  EF7A  F00A         	goto	l2079
  1813  0014E0                     u1360:
  1814  0014E0  0E60               	movlw	low _tiempo
  1815  0014E2  2445               	addwf	_cont^0,w,c
  1816  0014E4  6ED9               	movwf	fsr2l,c
  1817  0014E6  6ADA               	clrf	fsr2h,c
  1818  0014E8  0E00               	movlw	high _tiempo
  1819  0014EA  22DA               	addwfc	fsr2h,f,c
  1820  0014EC  0E00               	movlw	0
  1821  0014EE  6EDF               	movwf	indf2,c
  1822  0014F0  EFD7  F00A         	goto	l2085
  1823  0014F4                     l2079:
  1824                           
  1825                           ;main.c: 70: else if (tiempo[cont] <(float)tiempo[cont+2] * .8) tiempo[cont]= 2 ;
  1826  0014F4  0E60               	movlw	low _tiempo
  1827  0014F6  2445               	addwf	_cont^0,w,c
  1828  0014F8  6ED9               	movwf	fsr2l,c
  1829  0014FA  6ADA               	clrf	fsr2h,c
  1830  0014FC  0E00               	movlw	high _tiempo
  1831  0014FE  22DA               	addwfc	fsr2h,f,c
  1832  001500  50DF               	movf	indf2,w,c
  1833  001502  6E38               	movwf	??_normaliza^0,c
  1834  001504  5038               	movf	??_normaliza^0,w,c
  1835  001506  6E05               	movwf	___xxtofl@val^0,c
  1836  001508  6A06               	clrf	(___xxtofl@val+1)^0,c
  1837  00150A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1838  00150C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1839  00150E  0E00               	movlw	0
  1840  001510  EC47  F009         	call	___xxtofl
  1841  001514  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1842  001518  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1843  00151C  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1844  001520  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1845  001524  0ECD               	movlw	205
  1846  001526  6E17               	movwf	___flmul@a^0,c
  1847  001528  0ECC               	movlw	204
  1848  00152A  6E18               	movwf	(___flmul@a+1)^0,c
  1849  00152C  0E4C               	movlw	76
  1850  00152E  6E19               	movwf	(___flmul@a+2)^0,c
  1851  001530  0E3F               	movlw	63
  1852  001532  6E1A               	movwf	(___flmul@a+3)^0,c
  1853  001534  0E62               	movlw	low (_tiempo+2)
  1854  001536  2445               	addwf	_cont^0,w,c
  1855  001538  6ED9               	movwf	fsr2l,c
  1856  00153A  6ADA               	clrf	fsr2h,c
  1857  00153C  0E00               	movlw	high (_tiempo+2)
  1858  00153E  22DA               	addwfc	fsr2h,f,c
  1859  001540  50DF               	movf	indf2,w,c
  1860  001542  6E39               	movwf	(??_normaliza+1)^0,c
  1861  001544  5039               	movf	(??_normaliza+1)^0,w,c
  1862  001546  6E05               	movwf	___xxtofl@val^0,c
  1863  001548  6A06               	clrf	(___xxtofl@val+1)^0,c
  1864  00154A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1865  00154C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1866  00154E  0E00               	movlw	0
  1867  001550  EC47  F009         	call	___xxtofl
  1868  001554  C005  F013         	movff	?___xxtofl,___flmul@b
  1869  001558  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1870  00155C  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1871  001560  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1872  001564  EC4A  F004         	call	___flmul	;wreg free
  1873  001568  C013  F030         	movff	?___flmul,___flge@ff2
  1874  00156C  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1875  001570  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1876  001574  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1877  001578  ECED  F00A         	call	___flge	;wreg free
  1878  00157C  B0D8               	btfsc	status,0,c
  1879  00157E  EFC3  F00A         	goto	u1371
  1880  001582  EFC5  F00A         	goto	u1370
  1881  001586                     u1371:
  1882  001586  EFCF  F00A         	goto	l2083
  1883  00158A                     u1370:
  1884  00158A  0E60               	movlw	low _tiempo
  1885  00158C  2445               	addwf	_cont^0,w,c
  1886  00158E  6ED9               	movwf	fsr2l,c
  1887  001590  6ADA               	clrf	fsr2h,c
  1888  001592  0E00               	movlw	high _tiempo
  1889  001594  22DA               	addwfc	fsr2h,f,c
  1890  001596  0E02               	movlw	2
  1891  001598  6EDF               	movwf	indf2,c
  1892  00159A  EFD7  F00A         	goto	l2085
  1893  00159E                     l2083:
  1894                           
  1895                           ;main.c: 71: else tiempo[cont]=1 ;
  1896  00159E  0E60               	movlw	low _tiempo
  1897  0015A0  2445               	addwf	_cont^0,w,c
  1898  0015A2  6ED9               	movwf	fsr2l,c
  1899  0015A4  6ADA               	clrf	fsr2h,c
  1900  0015A6  0E00               	movlw	high _tiempo
  1901  0015A8  22DA               	addwfc	fsr2h,f,c
  1902  0015AA  0E01               	movlw	1
  1903  0015AC  6EDF               	movwf	indf2,c
  1904  0015AE                     l2085:
  1905  0015AE  2A45               	incf	_cont^0,f,c
  1906  0015B0                     l2087:
  1907  0015B0  0E01               	movlw	1
  1908  0015B2  2442               	addwf	_cuenta^0,w,c
  1909  0015B4  6E38               	movwf	??_normaliza^0,c
  1910  0015B6  0E00               	movlw	0
  1911  0015B8  2043               	addwfc	(_cuenta+1)^0,w,c
  1912  0015BA  6E39               	movwf	(??_normaliza+1)^0,c
  1913  0015BC  5045               	movf	_cont^0,w,c
  1914  0015BE  6E3A               	movwf	(??_normaliza+2)^0,c
  1915  0015C0  6A3B               	clrf	(??_normaliza+3)^0,c
  1916  0015C2  5038               	movf	??_normaliza^0,w,c
  1917  0015C4  5C3A               	subwf	(??_normaliza+2)^0,w,c
  1918  0015C6  5039               	movf	(??_normaliza+1)^0,w,c
  1919  0015C8  583B               	subwfb	(??_normaliza+3)^0,w,c
  1920  0015CA  A0D8               	btfss	status,0,c
  1921  0015CC  EFEA  F00A         	goto	u1381
  1922  0015D0  EFEC  F00A         	goto	u1380
  1923  0015D4                     u1381:
  1924  0015D4  EF25  F00A         	goto	l2075
  1925  0015D8                     u1380:
  1926  0015D8  0012               	return		;funcret
  1927  0015DA                     __end_of_normaliza:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function ___xxtofl *****************
  1931 ;; Defined at:
  1932 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  sign            1    wreg     unsigned char 
  1935 ;;  val             4    4[COMRAM] long 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  sign            1   12[COMRAM] unsigned char 
  1938 ;;  arg             4   14[COMRAM] unsigned long 
  1939 ;;  exp             1   13[COMRAM] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  4    4[COMRAM] unsigned char 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1949 ;;      Params:         4       0       0       0       0       0       0       0       0
  1950 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1951 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1952 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1953 ;;Total ram usage:       14 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 4
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_normaliza
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text5
  1964  00128E                     __ptext5:
  1965                           	callstack 0
  1966  00128E                     ___xxtofl:
  1967                           	callstack 25
  1968                           
  1969                           ;incstack = 0
  1970                           ;___xxtofl@sign stored from wreg
  1971  00128E  6E0D               	movwf	___xxtofl@sign^0,c
  1972  001290  500D               	movf	___xxtofl@sign^0,w,c
  1973  001292  B4D8               	btfsc	status,2,c
  1974  001294  EF4E  F009         	goto	u1231
  1975  001298  EF50  F009         	goto	u1230
  1976  00129C                     u1231:
  1977  00129C  EF72  F009         	goto	l1043
  1978  0012A0                     u1230:
  1979  0012A0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  1980  0012A2  EF57  F009         	goto	u1240
  1981  0012A6  EF55  F009         	goto	u1241
  1982  0012AA                     u1241:
  1983  0012AA  EF72  F009         	goto	l1043
  1984  0012AE                     u1240:
  1985  0012AE  C005  F009         	movff	___xxtofl@val,??___xxtofl
  1986  0012B2  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  1987  0012B6  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  1988  0012BA  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  1989  0012BE  1E09               	comf	??___xxtofl^0,f,c
  1990  0012C0  1E0A               	comf	(??___xxtofl+1)^0,f,c
  1991  0012C2  1E0B               	comf	(??___xxtofl+2)^0,f,c
  1992  0012C4  1E0C               	comf	(??___xxtofl+3)^0,f,c
  1993  0012C6  2A09               	incf	??___xxtofl^0,f,c
  1994  0012C8  0E00               	movlw	0
  1995  0012CA  220A               	addwfc	(??___xxtofl+1)^0,f,c
  1996  0012CC  220B               	addwfc	(??___xxtofl+2)^0,f,c
  1997  0012CE  220C               	addwfc	(??___xxtofl+3)^0,f,c
  1998  0012D0  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  1999  0012D4  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  2000  0012D8  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  2001  0012DC  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  2002  0012E0  EF7A  F009         	goto	l2009
  2003  0012E4                     l1043:
  2004  0012E4  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  2005  0012E8  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2006  0012EC  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2007  0012F0  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2008  0012F4                     l2009:
  2009  0012F4  5005               	movf	___xxtofl@val^0,w,c
  2010  0012F6  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  2011  0012F8  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  2012  0012FA  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  2013  0012FC  A4D8               	btfss	status,2,c
  2014  0012FE  EF83  F009         	goto	u1251
  2015  001302  EF85  F009         	goto	u1250
  2016  001306                     u1251:
  2017  001306  EF8F  F009         	goto	l2015
  2018  00130A                     u1250:
  2019  00130A  0E00               	movlw	0
  2020  00130C  6E05               	movwf	?___xxtofl^0,c
  2021  00130E  0E00               	movlw	0
  2022  001310  6E06               	movwf	(?___xxtofl+1)^0,c
  2023  001312  0E00               	movlw	0
  2024  001314  6E07               	movwf	(?___xxtofl+2)^0,c
  2025  001316  0E00               	movlw	0
  2026  001318  6E08               	movwf	(?___xxtofl+3)^0,c
  2027  00131A  EF20  F00A         	goto	l1046
  2028  00131E                     l2015:
  2029  00131E  0E96               	movlw	150
  2030  001320  6E0E               	movwf	___xxtofl@exp^0,c
  2031  001322  EF99  F009         	goto	l2019
  2032  001326                     l2017:
  2033  001326  2A0E               	incf	___xxtofl@exp^0,f,c
  2034  001328  90D8               	bcf	status,0,c
  2035  00132A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2036  00132C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2037  00132E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2038  001330  320F               	rrcf	___xxtofl@arg^0,f,c
  2039  001332                     l2019:
  2040  001332  0E00               	movlw	0
  2041  001334  140F               	andwf	___xxtofl@arg^0,w,c
  2042  001336  6E09               	movwf	??___xxtofl^0,c
  2043  001338  0E00               	movlw	0
  2044  00133A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2045  00133C  6E0A               	movwf	(??___xxtofl+1)^0,c
  2046  00133E  0E00               	movlw	0
  2047  001340  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2048  001342  6E0B               	movwf	(??___xxtofl+2)^0,c
  2049  001344  0EFE               	movlw	254
  2050  001346  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2051  001348  6E0C               	movwf	(??___xxtofl+3)^0,c
  2052  00134A  5009               	movf	??___xxtofl^0,w,c
  2053  00134C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2054  00134E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2055  001350  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2056  001352  A4D8               	btfss	status,2,c
  2057  001354  EFAE  F009         	goto	u1261
  2058  001358  EFB0  F009         	goto	u1260
  2059  00135C                     u1261:
  2060  00135C  EF93  F009         	goto	l2017
  2061  001360                     u1260:
  2062  001360  EFBE  F009         	goto	l1050
  2063  001364                     l2021:
  2064  001364  2A0E               	incf	___xxtofl@exp^0,f,c
  2065  001366  0E01               	movlw	1
  2066  001368  260F               	addwf	___xxtofl@arg^0,f,c
  2067  00136A  0E00               	movlw	0
  2068  00136C  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  2069  00136E  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  2070  001370  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  2071  001372  90D8               	bcf	status,0,c
  2072  001374  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2073  001376  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2074  001378  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2075  00137A  320F               	rrcf	___xxtofl@arg^0,f,c
  2076  00137C                     l1050:
  2077  00137C  0E00               	movlw	0
  2078  00137E  140F               	andwf	___xxtofl@arg^0,w,c
  2079  001380  6E09               	movwf	??___xxtofl^0,c
  2080  001382  0E00               	movlw	0
  2081  001384  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2082  001386  6E0A               	movwf	(??___xxtofl+1)^0,c
  2083  001388  0E00               	movlw	0
  2084  00138A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2085  00138C  6E0B               	movwf	(??___xxtofl+2)^0,c
  2086  00138E  0EFF               	movlw	255
  2087  001390  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2088  001392  6E0C               	movwf	(??___xxtofl+3)^0,c
  2089  001394  5009               	movf	??___xxtofl^0,w,c
  2090  001396  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2091  001398  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2092  00139A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2093  00139C  A4D8               	btfss	status,2,c
  2094  00139E  EFD3  F009         	goto	u1271
  2095  0013A2  EFD5  F009         	goto	u1270
  2096  0013A6                     u1271:
  2097  0013A6  EFB2  F009         	goto	l2021
  2098  0013AA                     u1270:
  2099  0013AA  EFDD  F009         	goto	l2029
  2100  0013AE                     l2027:
  2101  0013AE  060E               	decf	___xxtofl@exp^0,f,c
  2102  0013B0  90D8               	bcf	status,0,c
  2103  0013B2  360F               	rlcf	___xxtofl@arg^0,f,c
  2104  0013B4  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  2105  0013B6  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  2106  0013B8  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  2107  0013BA                     l2029:
  2108  0013BA  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  2109  0013BC  EFE2  F009         	goto	u1281
  2110  0013C0  EFE4  F009         	goto	u1280
  2111  0013C4                     u1281:
  2112  0013C4  EFEC  F009         	goto	l1057
  2113  0013C8                     u1280:
  2114  0013C8  0E02               	movlw	2
  2115  0013CA  600E               	cpfslt	___xxtofl@exp^0,c
  2116  0013CC  EFEA  F009         	goto	u1291
  2117  0013D0  EFEC  F009         	goto	u1290
  2118  0013D4                     u1291:
  2119  0013D4  EFD7  F009         	goto	l2027
  2120  0013D8                     u1290:
  2121  0013D8                     l1057:
  2122  0013D8  B00E               	btfsc	___xxtofl@exp^0,0,c
  2123  0013DA  EFF1  F009         	goto	u1301
  2124  0013DE  EFF3  F009         	goto	u1300
  2125  0013E2                     u1301:
  2126  0013E2  EFF4  F009         	goto	l2035
  2127  0013E6                     u1300:
  2128  0013E6  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  2129  0013E8                     l2035:
  2130  0013E8  90D8               	bcf	status,0,c
  2131  0013EA  320E               	rrcf	___xxtofl@exp^0,f,c
  2132  0013EC  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  2133  0013F0  6A0A               	clrf	(??___xxtofl+1)^0,c
  2134  0013F2  6A0B               	clrf	(??___xxtofl+2)^0,c
  2135  0013F4  6A0C               	clrf	(??___xxtofl+3)^0,c
  2136  0013F6  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  2137  0013FA  6A0B               	clrf	(??___xxtofl+2)^0,c
  2138  0013FC  6A0A               	clrf	(??___xxtofl+1)^0,c
  2139  0013FE  6A09               	clrf	??___xxtofl^0,c
  2140  001400  5009               	movf	??___xxtofl^0,w,c
  2141  001402  120F               	iorwf	___xxtofl@arg^0,f,c
  2142  001404  500A               	movf	(??___xxtofl+1)^0,w,c
  2143  001406  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  2144  001408  500B               	movf	(??___xxtofl+2)^0,w,c
  2145  00140A  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  2146  00140C  500C               	movf	(??___xxtofl+3)^0,w,c
  2147  00140E  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  2148  001410  500D               	movf	___xxtofl@sign^0,w,c
  2149  001412  B4D8               	btfsc	status,2,c
  2150  001414  EF0E  F00A         	goto	u1311
  2151  001418  EF10  F00A         	goto	u1310
  2152  00141C                     u1311:
  2153  00141C  EF18  F00A         	goto	l2045
  2154  001420                     u1310:
  2155  001420  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2156  001422  EF17  F00A         	goto	u1320
  2157  001426  EF15  F00A         	goto	u1321
  2158  00142A                     u1321:
  2159  00142A  EF18  F00A         	goto	l2045
  2160  00142E                     u1320:
  2161  00142E  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  2162  001430                     l2045:
  2163  001430  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  2164  001434  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  2165  001438  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  2166  00143C  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  2167  001440                     l1046:
  2168  001440  0012               	return		;funcret
  2169  001442                     __end_of___xxtofl:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function ___flmul *****************
  2173 ;; Defined at:
  2174 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  b               4   18[COMRAM] unsigned char 
  2177 ;;  a               4   22[COMRAM] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  prod            4   37[COMRAM] struct .
  2180 ;;  grs             4   31[COMRAM] unsigned long 
  2181 ;;  temp            2   41[COMRAM] struct .
  2182 ;;  bexp            1   36[COMRAM] unsigned char 
  2183 ;;  aexp            1   35[COMRAM] unsigned char 
  2184 ;;  sign            1   30[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  4   18[COMRAM] unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, prodl, prodh
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2194 ;;      Params:         8       0       0       0       0       0       0       0       0
  2195 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2196 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2197 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:       25 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 4
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_normaliza
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text6
  2209  000894                     __ptext6:
  2210                           	callstack 0
  2211  000894                     ___flmul:
  2212                           	callstack 25
  2213  000894  5016               	movf	(___flmul@b+3)^0,w,c
  2214  000896  0B80               	andlw	128
  2215  000898  6E1F               	movwf	___flmul@sign^0,c
  2216  00089A  5016               	movf	(___flmul@b+3)^0,w,c
  2217  00089C  2416               	addwf	(___flmul@b+3)^0,w,c
  2218  00089E  6E25               	movwf	___flmul@bexp^0,c
  2219  0008A0  AE15               	btfss	(___flmul@b+2)^0,7,c
  2220  0008A2  EF55  F004         	goto	u961
  2221  0008A6  EF57  F004         	goto	u960
  2222  0008AA                     u961:
  2223  0008AA  EF58  F004         	goto	l1841
  2224  0008AE                     u960:
  2225  0008AE  8025               	bsf	___flmul@bexp^0,0,c
  2226  0008B0                     l1841:
  2227  0008B0  5025               	movf	___flmul@bexp^0,w,c
  2228  0008B2  B4D8               	btfsc	status,2,c
  2229  0008B4  EF5E  F004         	goto	u971
  2230  0008B8  EF60  F004         	goto	u970
  2231  0008BC                     u971:
  2232  0008BC  EF73  F004         	goto	l1849
  2233  0008C0                     u970:
  2234  0008C0  2825               	incf	___flmul@bexp^0,w,c
  2235  0008C2  A4D8               	btfss	status,2,c
  2236  0008C4  EF66  F004         	goto	u981
  2237  0008C8  EF68  F004         	goto	u980
  2238  0008CC                     u981:
  2239  0008CC  EF70  F004         	goto	l1847
  2240  0008D0                     u980:
  2241  0008D0  0E00               	movlw	0
  2242  0008D2  6E13               	movwf	___flmul@b^0,c
  2243  0008D4  0E00               	movlw	0
  2244  0008D6  6E14               	movwf	(___flmul@b+1)^0,c
  2245  0008D8  0E00               	movlw	0
  2246  0008DA  6E15               	movwf	(___flmul@b+2)^0,c
  2247  0008DC  0E00               	movlw	0
  2248  0008DE  6E16               	movwf	(___flmul@b+3)^0,c
  2249  0008E0                     l1847:
  2250  0008E0  8E15               	bsf	(___flmul@b+2)^0,7,c
  2251  0008E2  EF7B  F004         	goto	l1851
  2252  0008E6                     l1849:
  2253  0008E6  0E00               	movlw	0
  2254  0008E8  6E13               	movwf	___flmul@b^0,c
  2255  0008EA  0E00               	movlw	0
  2256  0008EC  6E14               	movwf	(___flmul@b+1)^0,c
  2257  0008EE  0E00               	movlw	0
  2258  0008F0  6E15               	movwf	(___flmul@b+2)^0,c
  2259  0008F2  0E00               	movlw	0
  2260  0008F4  6E16               	movwf	(___flmul@b+3)^0,c
  2261  0008F6                     l1851:
  2262  0008F6  501A               	movf	(___flmul@a+3)^0,w,c
  2263  0008F8  0B80               	andlw	128
  2264  0008FA  1A1F               	xorwf	___flmul@sign^0,f,c
  2265  0008FC  501A               	movf	(___flmul@a+3)^0,w,c
  2266  0008FE  241A               	addwf	(___flmul@a+3)^0,w,c
  2267  000900  6E24               	movwf	___flmul@aexp^0,c
  2268  000902  AE19               	btfss	(___flmul@a+2)^0,7,c
  2269  000904  EF86  F004         	goto	u991
  2270  000908  EF88  F004         	goto	u990
  2271  00090C                     u991:
  2272  00090C  EF89  F004         	goto	l1859
  2273  000910                     u990:
  2274  000910  8024               	bsf	___flmul@aexp^0,0,c
  2275  000912                     l1859:
  2276  000912  5024               	movf	___flmul@aexp^0,w,c
  2277  000914  B4D8               	btfsc	status,2,c
  2278  000916  EF8F  F004         	goto	u1001
  2279  00091A  EF91  F004         	goto	u1000
  2280  00091E                     u1001:
  2281  00091E  EFA4  F004         	goto	l1867
  2282  000922                     u1000:
  2283  000922  2824               	incf	___flmul@aexp^0,w,c
  2284  000924  A4D8               	btfss	status,2,c
  2285  000926  EF97  F004         	goto	u1011
  2286  00092A  EF99  F004         	goto	u1010
  2287  00092E                     u1011:
  2288  00092E  EFA1  F004         	goto	l1865
  2289  000932                     u1010:
  2290  000932  0E00               	movlw	0
  2291  000934  6E17               	movwf	___flmul@a^0,c
  2292  000936  0E00               	movlw	0
  2293  000938  6E18               	movwf	(___flmul@a+1)^0,c
  2294  00093A  0E00               	movlw	0
  2295  00093C  6E19               	movwf	(___flmul@a+2)^0,c
  2296  00093E  0E00               	movlw	0
  2297  000940  6E1A               	movwf	(___flmul@a+3)^0,c
  2298  000942                     l1865:
  2299  000942  8E19               	bsf	(___flmul@a+2)^0,7,c
  2300  000944  EFAC  F004         	goto	l1002
  2301  000948                     l1867:
  2302  000948  0E00               	movlw	0
  2303  00094A  6E17               	movwf	___flmul@a^0,c
  2304  00094C  0E00               	movlw	0
  2305  00094E  6E18               	movwf	(___flmul@a+1)^0,c
  2306  000950  0E00               	movlw	0
  2307  000952  6E19               	movwf	(___flmul@a+2)^0,c
  2308  000954  0E00               	movlw	0
  2309  000956  6E1A               	movwf	(___flmul@a+3)^0,c
  2310  000958                     l1002:
  2311  000958  5024               	movf	___flmul@aexp^0,w,c
  2312  00095A  B4D8               	btfsc	status,2,c
  2313  00095C  EFB2  F004         	goto	u1021
  2314  000960  EFB4  F004         	goto	u1020
  2315  000964                     u1021:
  2316  000964  EFBC  F004         	goto	l1871
  2317  000968                     u1020:
  2318  000968  5025               	movf	___flmul@bexp^0,w,c
  2319  00096A  A4D8               	btfss	status,2,c
  2320  00096C  EFBA  F004         	goto	u1031
  2321  000970  EFBC  F004         	goto	u1030
  2322  000974                     u1031:
  2323  000974  EFC6  F004         	goto	l1875
  2324  000978                     u1030:
  2325  000978                     l1871:
  2326  000978  0E00               	movlw	0
  2327  00097A  6E13               	movwf	?___flmul^0,c
  2328  00097C  0E00               	movlw	0
  2329  00097E  6E14               	movwf	(?___flmul+1)^0,c
  2330  000980  0E00               	movlw	0
  2331  000982  6E15               	movwf	(?___flmul+2)^0,c
  2332  000984  0E00               	movlw	0
  2333  000986  6E16               	movwf	(?___flmul+3)^0,c
  2334  000988  EF5E  F006         	goto	l1006
  2335  00098C                     l1875:
  2336  00098C  5019               	movf	(___flmul@a+2)^0,w,c
  2337  00098E  0213               	mulwf	___flmul@b^0,c
  2338  000990  CFF3 F02A          	movff	prodl,___flmul@temp
  2339  000994  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2340  000998  502A               	movf	___flmul@temp^0,w,c
  2341  00099A  6E20               	movwf	___flmul@grs^0,c
  2342  00099C  6A21               	clrf	(___flmul@grs+1)^0,c
  2343  00099E  6A22               	clrf	(___flmul@grs+2)^0,c
  2344  0009A0  6A23               	clrf	(___flmul@grs+3)^0,c
  2345  0009A2  502B               	movf	(___flmul@temp+1)^0,w,c
  2346  0009A4  6E26               	movwf	___flmul@prod^0,c
  2347  0009A6  6A27               	clrf	(___flmul@prod+1)^0,c
  2348  0009A8  6A28               	clrf	(___flmul@prod+2)^0,c
  2349  0009AA  6A29               	clrf	(___flmul@prod+3)^0,c
  2350  0009AC  5018               	movf	(___flmul@a+1)^0,w,c
  2351  0009AE  0214               	mulwf	(___flmul@b+1)^0,c
  2352  0009B0  CFF3 F02A          	movff	prodl,___flmul@temp
  2353  0009B4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2354  0009B8  502A               	movf	___flmul@temp^0,w,c
  2355  0009BA  2620               	addwf	___flmul@grs^0,f,c
  2356  0009BC  0E00               	movlw	0
  2357  0009BE  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2358  0009C0  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2359  0009C2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2360  0009C4  502B               	movf	(___flmul@temp+1)^0,w,c
  2361  0009C6  2626               	addwf	___flmul@prod^0,f,c
  2362  0009C8  0E00               	movlw	0
  2363  0009CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2364  0009CC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2365  0009CE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2366  0009D0  5017               	movf	___flmul@a^0,w,c
  2367  0009D2  0215               	mulwf	(___flmul@b+2)^0,c
  2368  0009D4  CFF3 F02A          	movff	prodl,___flmul@temp
  2369  0009D8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2370  0009DC  502A               	movf	___flmul@temp^0,w,c
  2371  0009DE  2620               	addwf	___flmul@grs^0,f,c
  2372  0009E0  0E00               	movlw	0
  2373  0009E2  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2374  0009E4  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2375  0009E6  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2376  0009E8  502B               	movf	(___flmul@temp+1)^0,w,c
  2377  0009EA  2626               	addwf	___flmul@prod^0,f,c
  2378  0009EC  0E00               	movlw	0
  2379  0009EE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2380  0009F0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2381  0009F2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2382  0009F4  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2383  0009F8  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2384  0009FC  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2385  000A00  6A20               	clrf	___flmul@grs^0,c
  2386  000A02  5017               	movf	___flmul@a^0,w,c
  2387  000A04  0214               	mulwf	(___flmul@b+1)^0,c
  2388  000A06  CFF3 F02A          	movff	prodl,___flmul@temp
  2389  000A0A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2390  000A0E  502A               	movf	___flmul@temp^0,w,c
  2391  000A10  2620               	addwf	___flmul@grs^0,f,c
  2392  000A12  502B               	movf	(___flmul@temp+1)^0,w,c
  2393  000A14  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2394  000A16  0E00               	movlw	0
  2395  000A18  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2396  000A1A  0E00               	movlw	0
  2397  000A1C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2398  000A1E  5018               	movf	(___flmul@a+1)^0,w,c
  2399  000A20  0213               	mulwf	___flmul@b^0,c
  2400  000A22  CFF3 F02A          	movff	prodl,___flmul@temp
  2401  000A26  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2402  000A2A  502A               	movf	___flmul@temp^0,w,c
  2403  000A2C  2620               	addwf	___flmul@grs^0,f,c
  2404  000A2E  502B               	movf	(___flmul@temp+1)^0,w,c
  2405  000A30  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2406  000A32  0E00               	movlw	0
  2407  000A34  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2408  000A36  0E00               	movlw	0
  2409  000A38  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2410  000A3A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2411  000A3E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2412  000A42  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2413  000A46  6A20               	clrf	___flmul@grs^0,c
  2414  000A48  5017               	movf	___flmul@a^0,w,c
  2415  000A4A  0213               	mulwf	___flmul@b^0,c
  2416  000A4C  CFF3 F02A          	movff	prodl,___flmul@temp
  2417  000A50  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2418  000A54  502A               	movf	___flmul@temp^0,w,c
  2419  000A56  2620               	addwf	___flmul@grs^0,f,c
  2420  000A58  502B               	movf	(___flmul@temp+1)^0,w,c
  2421  000A5A  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2422  000A5C  0E00               	movlw	0
  2423  000A5E  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2424  000A60  0E00               	movlw	0
  2425  000A62  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2426  000A64  5019               	movf	(___flmul@a+2)^0,w,c
  2427  000A66  0214               	mulwf	(___flmul@b+1)^0,c
  2428  000A68  CFF3 F02A          	movff	prodl,___flmul@temp
  2429  000A6C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2430  000A70  502A               	movf	___flmul@temp^0,w,c
  2431  000A72  2626               	addwf	___flmul@prod^0,f,c
  2432  000A74  502B               	movf	(___flmul@temp+1)^0,w,c
  2433  000A76  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2434  000A78  0E00               	movlw	0
  2435  000A7A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2436  000A7C  0E00               	movlw	0
  2437  000A7E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2438  000A80  5018               	movf	(___flmul@a+1)^0,w,c
  2439  000A82  0215               	mulwf	(___flmul@b+2)^0,c
  2440  000A84  CFF3 F02A          	movff	prodl,___flmul@temp
  2441  000A88  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2442  000A8C  502A               	movf	___flmul@temp^0,w,c
  2443  000A8E  2626               	addwf	___flmul@prod^0,f,c
  2444  000A90  502B               	movf	(___flmul@temp+1)^0,w,c
  2445  000A92  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2446  000A94  0E00               	movlw	0
  2447  000A96  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2448  000A98  0E00               	movlw	0
  2449  000A9A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2450  000A9C  5019               	movf	(___flmul@a+2)^0,w,c
  2451  000A9E  0215               	mulwf	(___flmul@b+2)^0,c
  2452  000AA0  CFF3 F02A          	movff	prodl,___flmul@temp
  2453  000AA4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2454  000AA8  502A               	movf	___flmul@temp^0,w,c
  2455  000AAA  6E1B               	movwf	??___flmul^0,c
  2456  000AAC  502B               	movf	(___flmul@temp+1)^0,w,c
  2457  000AAE  6E1C               	movwf	(??___flmul+1)^0,c
  2458  000AB0  6A1D               	clrf	(??___flmul+2)^0,c
  2459  000AB2  6A1E               	clrf	(??___flmul+3)^0,c
  2460  000AB4  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  2461  000AB8  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  2462  000ABC  C01B  F01C         	movff	??___flmul,??___flmul+1
  2463  000AC0  6A1B               	clrf	??___flmul^0,c
  2464  000AC2  501B               	movf	??___flmul^0,w,c
  2465  000AC4  2626               	addwf	___flmul@prod^0,f,c
  2466  000AC6  501C               	movf	(??___flmul+1)^0,w,c
  2467  000AC8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2468  000ACA  501D               	movf	(??___flmul+2)^0,w,c
  2469  000ACC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2470  000ACE  501E               	movf	(??___flmul+3)^0,w,c
  2471  000AD0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2472  000AD2  C020  F01B         	movff	___flmul@grs,??___flmul
  2473  000AD6  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  2474  000ADA  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  2475  000ADE  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  2476  000AE2  0E19               	movlw	25
  2477  000AE4  EF79  F005         	goto	u1040
  2478  000AE8                     u1045:
  2479  000AE8  90D8               	bcf	status,0,c
  2480  000AEA  321E               	rrcf	(??___flmul+3)^0,f,c
  2481  000AEC  321D               	rrcf	(??___flmul+2)^0,f,c
  2482  000AEE  321C               	rrcf	(??___flmul+1)^0,f,c
  2483  000AF0  321B               	rrcf	??___flmul^0,f,c
  2484  000AF2                     u1040:
  2485  000AF2  2EE8               	decfsz	wreg,f,c
  2486  000AF4  EF74  F005         	goto	u1045
  2487  000AF8  501B               	movf	??___flmul^0,w,c
  2488  000AFA  2626               	addwf	___flmul@prod^0,f,c
  2489  000AFC  501C               	movf	(??___flmul+1)^0,w,c
  2490  000AFE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2491  000B00  501D               	movf	(??___flmul+2)^0,w,c
  2492  000B02  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2493  000B04  501E               	movf	(??___flmul+3)^0,w,c
  2494  000B06  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2495  000B08  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2496  000B0C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2497  000B10  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2498  000B14  6A20               	clrf	___flmul@grs^0,c
  2499  000B16  5024               	movf	___flmul@aexp^0,w,c
  2500  000B18  C025  F01B         	movff	___flmul@bexp,??___flmul
  2501  000B1C  6A1C               	clrf	(??___flmul+1)^0,c
  2502  000B1E  261B               	addwf	??___flmul^0,f,c
  2503  000B20  0E00               	movlw	0
  2504  000B22  221C               	addwfc	(??___flmul+1)^0,f,c
  2505  000B24  0E82               	movlw	130
  2506  000B26  241B               	addwf	??___flmul^0,w,c
  2507  000B28  6E2A               	movwf	___flmul@temp^0,c
  2508  000B2A  0EFF               	movlw	255
  2509  000B2C  201C               	addwfc	(??___flmul+1)^0,w,c
  2510  000B2E  6E2B               	movwf	(___flmul@temp+1)^0,c
  2511  000B30  EFAF  F005         	goto	l1923
  2512  000B34                     l1917:
  2513  000B34  90D8               	bcf	status,0,c
  2514  000B36  3626               	rlcf	___flmul@prod^0,f,c
  2515  000B38  3627               	rlcf	(___flmul@prod+1)^0,f,c
  2516  000B3A  3628               	rlcf	(___flmul@prod+2)^0,f,c
  2517  000B3C  3629               	rlcf	(___flmul@prod+3)^0,f,c
  2518  000B3E  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2519  000B40  EFA4  F005         	goto	u1051
  2520  000B44  EFA6  F005         	goto	u1050
  2521  000B48                     u1051:
  2522  000B48  EFA7  F005         	goto	l1009
  2523  000B4C                     u1050:
  2524  000B4C  8026               	bsf	___flmul@prod^0,0,c
  2525  000B4E                     l1009:
  2526  000B4E  90D8               	bcf	status,0,c
  2527  000B50  3620               	rlcf	___flmul@grs^0,f,c
  2528  000B52  3621               	rlcf	(___flmul@grs+1)^0,f,c
  2529  000B54  3622               	rlcf	(___flmul@grs+2)^0,f,c
  2530  000B56  3623               	rlcf	(___flmul@grs+3)^0,f,c
  2531  000B58  062A               	decf	___flmul@temp^0,f,c
  2532  000B5A  A0D8               	btfss	status,0,c
  2533  000B5C  062B               	decf	(___flmul@temp+1)^0,f,c
  2534  000B5E                     l1923:
  2535  000B5E  AE28               	btfss	(___flmul@prod+2)^0,7,c
  2536  000B60  EFB4  F005         	goto	u1061
  2537  000B64  EFB6  F005         	goto	u1060
  2538  000B68                     u1061:
  2539  000B68  EF9A  F005         	goto	l1917
  2540  000B6C                     u1060:
  2541  000B6C  0E00               	movlw	0
  2542  000B6E  6E24               	movwf	___flmul@aexp^0,c
  2543  000B70  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2544  000B72  EFBD  F005         	goto	u1071
  2545  000B76  EFBF  F005         	goto	u1070
  2546  000B7A                     u1071:
  2547  000B7A  EFE3  F005         	goto	l1011
  2548  000B7E                     u1070:
  2549  000B7E  0EFF               	movlw	255
  2550  000B80  1420               	andwf	___flmul@grs^0,w,c
  2551  000B82  6E1B               	movwf	??___flmul^0,c
  2552  000B84  0EFF               	movlw	255
  2553  000B86  1421               	andwf	(___flmul@grs+1)^0,w,c
  2554  000B88  6E1C               	movwf	(??___flmul+1)^0,c
  2555  000B8A  0EFF               	movlw	255
  2556  000B8C  1422               	andwf	(___flmul@grs+2)^0,w,c
  2557  000B8E  6E1D               	movwf	(??___flmul+2)^0,c
  2558  000B90  0E7F               	movlw	127
  2559  000B92  1423               	andwf	(___flmul@grs+3)^0,w,c
  2560  000B94  6E1E               	movwf	(??___flmul+3)^0,c
  2561  000B96  501B               	movf	??___flmul^0,w,c
  2562  000B98  101C               	iorwf	(??___flmul+1)^0,w,c
  2563  000B9A  101D               	iorwf	(??___flmul+2)^0,w,c
  2564  000B9C  101E               	iorwf	(??___flmul+3)^0,w,c
  2565  000B9E  B4D8               	btfsc	status,2,c
  2566  000BA0  EFD4  F005         	goto	u1081
  2567  000BA4  EFD6  F005         	goto	u1080
  2568  000BA8                     u1081:
  2569  000BA8  EFDA  F005         	goto	l1012
  2570  000BAC                     u1080:
  2571  000BAC                     l1931:
  2572  000BAC  0E01               	movlw	1
  2573  000BAE  6E24               	movwf	___flmul@aexp^0,c
  2574  000BB0  EFE3  F005         	goto	l1011
  2575  000BB4                     l1012:
  2576  000BB4  A026               	btfss	___flmul@prod^0,0,c
  2577  000BB6  EFDF  F005         	goto	u1091
  2578  000BBA  EFE1  F005         	goto	u1090
  2579  000BBE                     u1091:
  2580  000BBE  EFE3  F005         	goto	l1011
  2581  000BC2                     u1090:
  2582  000BC2  EFD6  F005         	goto	l1931
  2583  000BC6                     l1011:
  2584  000BC6  5024               	movf	___flmul@aexp^0,w,c
  2585  000BC8  B4D8               	btfsc	status,2,c
  2586  000BCA  EFE9  F005         	goto	u1101
  2587  000BCE  EFEB  F005         	goto	u1100
  2588  000BD2                     u1101:
  2589  000BD2  EF0F  F006         	goto	l1943
  2590  000BD6                     u1100:
  2591  000BD6  0E01               	movlw	1
  2592  000BD8  2626               	addwf	___flmul@prod^0,f,c
  2593  000BDA  0E00               	movlw	0
  2594  000BDC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2595  000BDE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2596  000BE0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2597  000BE2  A029               	btfss	(___flmul@prod+3)^0,0,c
  2598  000BE4  EFF6  F005         	goto	u1111
  2599  000BE8  EFF8  F005         	goto	u1110
  2600  000BEC                     u1111:
  2601  000BEC  EF0F  F006         	goto	l1943
  2602  000BF0                     u1110:
  2603  000BF0  C026  F01B         	movff	___flmul@prod,??___flmul
  2604  000BF4  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  2605  000BF8  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  2606  000BFC  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  2607  000C00  341E               	rlcf	(??___flmul+3)^0,w,c
  2608  000C02  321E               	rrcf	(??___flmul+3)^0,f,c
  2609  000C04  321D               	rrcf	(??___flmul+2)^0,f,c
  2610  000C06  321C               	rrcf	(??___flmul+1)^0,f,c
  2611  000C08  321B               	rrcf	??___flmul^0,f,c
  2612  000C0A  C01B  F026         	movff	??___flmul,___flmul@prod
  2613  000C0E  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  2614  000C12  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  2615  000C16  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  2616  000C1A  4A2A               	infsnz	___flmul@temp^0,f,c
  2617  000C1C  2A2B               	incf	(___flmul@temp+1)^0,f,c
  2618  000C1E                     l1943:
  2619  000C1E  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2620  000C20  EF1A  F006         	goto	u1121
  2621  000C24  502B               	movf	(___flmul@temp+1)^0,w,c
  2622  000C26  E108               	bnz	u1120
  2623  000C28  282A               	incf	___flmul@temp^0,w,c
  2624  000C2A  A0D8               	btfss	status,0,c
  2625  000C2C  EF1A  F006         	goto	u1121
  2626  000C30  EF1C  F006         	goto	u1120
  2627  000C34                     u1121:
  2628  000C34  EF26  F006         	goto	l1947
  2629  000C38                     u1120:
  2630  000C38  0E00               	movlw	0
  2631  000C3A  6E26               	movwf	___flmul@prod^0,c
  2632  000C3C  0E00               	movlw	0
  2633  000C3E  6E27               	movwf	(___flmul@prod+1)^0,c
  2634  000C40  0E80               	movlw	128
  2635  000C42  6E28               	movwf	(___flmul@prod+2)^0,c
  2636  000C44  0E7F               	movlw	127
  2637  000C46  6E29               	movwf	(___flmul@prod+3)^0,c
  2638  000C48  EF54  F006         	goto	l1959
  2639  000C4C                     l1947:
  2640  000C4C  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2641  000C4E  EF33  F006         	goto	u1130
  2642  000C52  502B               	movf	(___flmul@temp+1)^0,w,c
  2643  000C54  E106               	bnz	u1131
  2644  000C56  042A               	decf	___flmul@temp^0,w,c
  2645  000C58  B0D8               	btfsc	status,0,c
  2646  000C5A  EF31  F006         	goto	u1131
  2647  000C5E  EF33  F006         	goto	u1130
  2648  000C62                     u1131:
  2649  000C62  EF3F  F006         	goto	l1019
  2650  000C66                     u1130:
  2651  000C66  0E00               	movlw	0
  2652  000C68  6E26               	movwf	___flmul@prod^0,c
  2653  000C6A  0E00               	movlw	0
  2654  000C6C  6E27               	movwf	(___flmul@prod+1)^0,c
  2655  000C6E  0E00               	movlw	0
  2656  000C70  6E28               	movwf	(___flmul@prod+2)^0,c
  2657  000C72  0E00               	movlw	0
  2658  000C74  6E29               	movwf	(___flmul@prod+3)^0,c
  2659  000C76  0E00               	movlw	0
  2660  000C78  6E1F               	movwf	___flmul@sign^0,c
  2661  000C7A  EF54  F006         	goto	l1959
  2662  000C7E                     l1019:
  2663  000C7E  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  2664  000C82  0EFF               	movlw	255
  2665  000C84  1626               	andwf	___flmul@prod^0,f,c
  2666  000C86  0EFF               	movlw	255
  2667  000C88  1627               	andwf	(___flmul@prod+1)^0,f,c
  2668  000C8A  0E7F               	movlw	127
  2669  000C8C  1628               	andwf	(___flmul@prod+2)^0,f,c
  2670  000C8E  0E00               	movlw	0
  2671  000C90  1629               	andwf	(___flmul@prod+3)^0,f,c
  2672  000C92  A025               	btfss	___flmul@bexp^0,0,c
  2673  000C94  EF4E  F006         	goto	u1141
  2674  000C98  EF50  F006         	goto	u1140
  2675  000C9C                     u1141:
  2676  000C9C  EF51  F006         	goto	l1957
  2677  000CA0                     u1140:
  2678  000CA0  8E28               	bsf	(___flmul@prod+2)^0,7,c
  2679  000CA2                     l1957:
  2680  000CA2  90D8               	bcf	status,0,c
  2681  000CA4  3025               	rrcf	___flmul@bexp^0,w,c
  2682  000CA6  6E29               	movwf	(___flmul@prod+3)^0,c
  2683  000CA8                     l1959:
  2684  000CA8  501F               	movf	___flmul@sign^0,w,c
  2685  000CAA  1229               	iorwf	(___flmul@prod+3)^0,f,c
  2686  000CAC  C026  F013         	movff	___flmul@prod,?___flmul
  2687  000CB0  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  2688  000CB4  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  2689  000CB8  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  2690  000CBC                     l1006:
  2691  000CBC  0012               	return		;funcret
  2692  000CBE                     __end_of___flmul:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function ___flge *****************
  2696 ;; Defined at:
  2697 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  ff1             4   43[COMRAM] unsigned char 
  2700 ;;  ff2             4   47[COMRAM] unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;		None               void
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2712 ;;      Params:         8       0       0       0       0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2714 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2715 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2716 ;;Total ram usage:       12 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 4
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_normaliza
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text7
  2727  0015DA                     __ptext7:
  2728                           	callstack 0
  2729  0015DA                     ___flge:
  2730                           	callstack 25
  2731  0015DA  0E00               	movlw	0
  2732  0015DC  142C               	andwf	___flge@ff1^0,w,c
  2733  0015DE  6E34               	movwf	??___flge^0,c
  2734  0015E0  0E00               	movlw	0
  2735  0015E2  142D               	andwf	(___flge@ff1+1)^0,w,c
  2736  0015E4  6E35               	movwf	(??___flge+1)^0,c
  2737  0015E6  0E80               	movlw	128
  2738  0015E8  142E               	andwf	(___flge@ff1+2)^0,w,c
  2739  0015EA  6E36               	movwf	(??___flge+2)^0,c
  2740  0015EC  0E7F               	movlw	127
  2741  0015EE  142F               	andwf	(___flge@ff1+3)^0,w,c
  2742  0015F0  6E37               	movwf	(??___flge+3)^0,c
  2743  0015F2  5034               	movf	??___flge^0,w,c
  2744  0015F4  1035               	iorwf	(??___flge+1)^0,w,c
  2745  0015F6  1036               	iorwf	(??___flge+2)^0,w,c
  2746  0015F8  1037               	iorwf	(??___flge+3)^0,w,c
  2747  0015FA  A4D8               	btfss	status,2,c
  2748  0015FC  EF02  F00B         	goto	u1151
  2749  001600  EF04  F00B         	goto	u1150
  2750  001604                     u1151:
  2751  001604  EF0C  F00B         	goto	l1969
  2752  001608                     u1150:
  2753  001608  0E00               	movlw	0
  2754  00160A  6E2C               	movwf	___flge@ff1^0,c
  2755  00160C  0E00               	movlw	0
  2756  00160E  6E2D               	movwf	(___flge@ff1+1)^0,c
  2757  001610  0E00               	movlw	0
  2758  001612  6E2E               	movwf	(___flge@ff1+2)^0,c
  2759  001614  0E00               	movlw	0
  2760  001616  6E2F               	movwf	(___flge@ff1+3)^0,c
  2761  001618                     l1969:
  2762  001618  0E00               	movlw	0
  2763  00161A  1430               	andwf	___flge@ff2^0,w,c
  2764  00161C  6E34               	movwf	??___flge^0,c
  2765  00161E  0E00               	movlw	0
  2766  001620  1431               	andwf	(___flge@ff2+1)^0,w,c
  2767  001622  6E35               	movwf	(??___flge+1)^0,c
  2768  001624  0E80               	movlw	128
  2769  001626  1432               	andwf	(___flge@ff2+2)^0,w,c
  2770  001628  6E36               	movwf	(??___flge+2)^0,c
  2771  00162A  0E7F               	movlw	127
  2772  00162C  1433               	andwf	(___flge@ff2+3)^0,w,c
  2773  00162E  6E37               	movwf	(??___flge+3)^0,c
  2774  001630  5034               	movf	??___flge^0,w,c
  2775  001632  1035               	iorwf	(??___flge+1)^0,w,c
  2776  001634  1036               	iorwf	(??___flge+2)^0,w,c
  2777  001636  1037               	iorwf	(??___flge+3)^0,w,c
  2778  001638  A4D8               	btfss	status,2,c
  2779  00163A  EF21  F00B         	goto	u1161
  2780  00163E  EF23  F00B         	goto	u1160
  2781  001642                     u1161:
  2782  001642  EF2B  F00B         	goto	l1973
  2783  001646                     u1160:
  2784  001646  0E00               	movlw	0
  2785  001648  6E30               	movwf	___flge@ff2^0,c
  2786  00164A  0E00               	movlw	0
  2787  00164C  6E31               	movwf	(___flge@ff2+1)^0,c
  2788  00164E  0E00               	movlw	0
  2789  001650  6E32               	movwf	(___flge@ff2+2)^0,c
  2790  001652  0E00               	movlw	0
  2791  001654  6E33               	movwf	(___flge@ff2+3)^0,c
  2792  001656                     l1973:
  2793  001656  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  2794  001658  EF30  F00B         	goto	u1171
  2795  00165C  EF32  F00B         	goto	u1170
  2796  001660                     u1171:
  2797  001660  EF3B  F00B         	goto	l1977
  2798  001664                     u1170:
  2799  001664  6C2C               	negf	___flge@ff1^0,c
  2800  001666  1E2D               	comf	(___flge@ff1+1)^0,f,c
  2801  001668  B0D8               	btfsc	status,0,c
  2802  00166A  2A2D               	incf	(___flge@ff1+1)^0,f,c
  2803  00166C  1E2E               	comf	(___flge@ff1+2)^0,f,c
  2804  00166E  B0D8               	btfsc	status,0,c
  2805  001670  2A2E               	incf	(___flge@ff1+2)^0,f,c
  2806  001672  0E80               	movlw	128
  2807  001674  562F               	subfwb	(___flge@ff1+3)^0,f,c
  2808  001676                     l1977:
  2809  001676  AE33               	btfss	(___flge@ff2+3)^0,7,c
  2810  001678  EF40  F00B         	goto	u1181
  2811  00167C  EF42  F00B         	goto	u1180
  2812  001680                     u1181:
  2813  001680  EF4B  F00B         	goto	l661
  2814  001684                     u1180:
  2815  001684  6C30               	negf	___flge@ff2^0,c
  2816  001686  1E31               	comf	(___flge@ff2+1)^0,f,c
  2817  001688  B0D8               	btfsc	status,0,c
  2818  00168A  2A31               	incf	(___flge@ff2+1)^0,f,c
  2819  00168C  1E32               	comf	(___flge@ff2+2)^0,f,c
  2820  00168E  B0D8               	btfsc	status,0,c
  2821  001690  2A32               	incf	(___flge@ff2+2)^0,f,c
  2822  001692  0E80               	movlw	128
  2823  001694  5633               	subfwb	(___flge@ff2+3)^0,f,c
  2824  001696                     l661:
  2825  001696  0E00               	movlw	0
  2826  001698  1A2C               	xorwf	___flge@ff1^0,f,c
  2827  00169A  0E00               	movlw	0
  2828  00169C  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  2829  00169E  0E00               	movlw	0
  2830  0016A0  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  2831  0016A2  0E80               	movlw	128
  2832  0016A4  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  2833  0016A6  0E00               	movlw	0
  2834  0016A8  1A30               	xorwf	___flge@ff2^0,f,c
  2835  0016AA  0E00               	movlw	0
  2836  0016AC  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  2837  0016AE  0E00               	movlw	0
  2838  0016B0  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  2839  0016B2  0E80               	movlw	128
  2840  0016B4  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  2841  0016B6  5030               	movf	___flge@ff2^0,w,c
  2842  0016B8  5C2C               	subwf	___flge@ff1^0,w,c
  2843  0016BA  5031               	movf	(___flge@ff2+1)^0,w,c
  2844  0016BC  582D               	subwfb	(___flge@ff1+1)^0,w,c
  2845  0016BE  5032               	movf	(___flge@ff2+2)^0,w,c
  2846  0016C0  582E               	subwfb	(___flge@ff1+2)^0,w,c
  2847  0016C2  5033               	movf	(___flge@ff2+3)^0,w,c
  2848  0016C4  582F               	subwfb	(___flge@ff1+3)^0,w,c
  2849  0016C6  B0D8               	btfsc	status,0,c
  2850  0016C8  EF68  F00B         	goto	u1191
  2851  0016CC  EF6A  F00B         	goto	u1190
  2852  0016D0                     u1191:
  2853  0016D0  EF6D  F00B         	goto	l1983
  2854  0016D4                     u1190:
  2855  0016D4  90D8               	bcf	status,0,c
  2856  0016D6  EF6E  F00B         	goto	l662
  2857  0016DA                     l1983:
  2858  0016DA  80D8               	bsf	status,0,c
  2859  0016DC                     l662:
  2860  0016DC  0012               	return		;funcret
  2861  0016DE                     __end_of___flge:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _SYSTEM_Initialize *****************
  2865 ;; Defined at:
  2866 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 6
  2887 ;; This function calls:
  2888 ;;		_EUSART1_Initialize
  2889 ;;		_EXT_INT_Initialize
  2890 ;;		_INTERRUPT_Initialize
  2891 ;;		_OSCILLATOR_Initialize
  2892 ;;		_PIN_MANAGER_Initialize
  2893 ;;		_TMR0_Initialize
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text8
  2900  001A38                     __ptext8:
  2901                           	callstack 0
  2902  001A38                     _SYSTEM_Initialize:
  2903                           	callstack 24
  2904  001A38                     
  2905                           ;mcc.c: 53: INTERRUPT_Initialize();
  2906  001A38  EC69  F00D         	call	_INTERRUPT_Initialize	;wreg free
  2907  001A3C                     
  2908                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2909  001A3C  ECDB  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2910  001A40                     
  2911                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2912  001A40  EC48  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  2913  001A44                     
  2914                           ;mcc.c: 56: EXT_INT_Initialize();
  2915  001A44  EC3E  F00D         	call	_EXT_INT_Initialize	;wreg free
  2916  001A48                     
  2917                           ;mcc.c: 57: TMR0_Initialize();
  2918  001A48  EC34  F00D         	call	_TMR0_Initialize	;wreg free
  2919  001A4C                     
  2920                           ;mcc.c: 58: EUSART1_Initialize();
  2921  001A4C  ECBC  F00C         	call	_EUSART1_Initialize	;wreg free
  2922  001A50  0012               	return		;funcret
  2923  001A52                     __end_of_SYSTEM_Initialize:
  2924                           	callstack 0
  2925                           
  2926 ;; *************** function _TMR0_Initialize *****************
  2927 ;; Defined at:
  2928 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2945 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 4
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_SYSTEM_Initialize
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text9
  2957  001A68                     __ptext9:
  2958                           	callstack 0
  2959  001A68                     _TMR0_Initialize:
  2960                           	callstack 25
  2961  001A68                     
  2962                           ;tmr0.c: 71: TMR0H = 0x00;
  2963  001A68  0E00               	movlw	0
  2964  001A6A  6ED7               	movwf	215,c	;volatile
  2965                           
  2966                           ;tmr0.c: 74: TMR0L = 0x64;
  2967  001A6C  0E64               	movlw	100
  2968  001A6E  6ED6               	movwf	214,c	;volatile
  2969                           
  2970                           ;tmr0.c: 78: timer0ReloadVal = 100;
  2971  001A70  0E64               	movlw	100
  2972  001A72  6E5A               	movwf	_timer0ReloadVal^0,c	;volatile
  2973  001A74                     
  2974                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  2975  001A74  94F2               	bcf	242,2,c	;volatile
  2976                           
  2977                           ;tmr0.c: 84: T0CON = 0xD7;
  2978  001A76  0ED7               	movlw	215
  2979  001A78  6ED5               	movwf	213,c	;volatile
  2980  001A7A  0012               	return		;funcret
  2981  001A7C                     __end_of_TMR0_Initialize:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _PIN_MANAGER_Initialize *****************
  2985 ;; Defined at:
  2986 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 4
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_SYSTEM_Initialize
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text10
  3015  0019B6                     __ptext10:
  3016                           	callstack 0
  3017  0019B6                     _PIN_MANAGER_Initialize:
  3018                           	callstack 25
  3019  0019B6                     
  3020                           ;pin_manager.c: 60: LATA = 0x00;
  3021  0019B6  0E00               	movlw	0
  3022  0019B8  6E89               	movwf	137,c	;volatile
  3023                           
  3024                           ;pin_manager.c: 61: LATB = 0x00;
  3025  0019BA  0E00               	movlw	0
  3026  0019BC  6E8A               	movwf	138,c	;volatile
  3027                           
  3028                           ;pin_manager.c: 62: LATC = 0x00;
  3029  0019BE  0E00               	movlw	0
  3030  0019C0  6E8B               	movwf	139,c	;volatile
  3031                           
  3032                           ;pin_manager.c: 67: TRISA = 0xC7;
  3033  0019C2  0EC7               	movlw	199
  3034  0019C4  6E92               	movwf	146,c	;volatile
  3035                           
  3036                           ;pin_manager.c: 68: TRISB = 0xFE;
  3037  0019C6  0EFE               	movlw	254
  3038  0019C8  6E93               	movwf	147,c	;volatile
  3039                           
  3040                           ;pin_manager.c: 69: TRISC = 0x87;
  3041  0019CA  0E87               	movlw	135
  3042  0019CC  6E94               	movwf	148,c	;volatile
  3043                           
  3044                           ;pin_manager.c: 74: ANSELC = 0x84;
  3045  0019CE  0E84               	movlw	132
  3046  0019D0  010F               	movlb	15	; () banked
  3047  0019D2  6F5D               	movwf	93,b	;volatile
  3048                           
  3049                           ;pin_manager.c: 75: ANSELB = 0x3C;
  3050  0019D4  0E3C               	movlw	60
  3051  0019D6  6F5C               	movwf	92,b	;volatile
  3052                           
  3053                           ;pin_manager.c: 76: ANSELA = 0x07;
  3054  0019D8  0E07               	movlw	7
  3055  0019DA  6F5B               	movwf	91,b	;volatile
  3056                           
  3057                           ;pin_manager.c: 81: WPUB = 0x00;
  3058  0019DC  0E00               	movlw	0
  3059  0019DE  6E85               	movwf	133,c	;volatile
  3060  0019E0                     
  3061                           ; BSR set to: 15
  3062                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  3063  0019E0  8EF1               	bsf	241,7,c	;volatile
  3064  0019E2                     
  3065                           ; BSR set to: 15
  3066  0019E2  0012               	return		;funcret
  3067  0019E4                     __end_of_PIN_MANAGER_Initialize:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _OSCILLATOR_Initialize *****************
  3071 ;; Defined at:
  3072 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 4
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_SYSTEM_Initialize
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text11
  3101  001A90                     __ptext11:
  3102                           	callstack 0
  3103  001A90                     _OSCILLATOR_Initialize:
  3104                           	callstack 25
  3105  001A90                     
  3106                           ;mcc.c: 64: OSCCON = 0x70;
  3107  001A90  0E70               	movlw	112
  3108  001A92  6ED3               	movwf	211,c	;volatile
  3109                           
  3110                           ;mcc.c: 66: OSCCON2 = 0x00;
  3111  001A94  0E00               	movlw	0
  3112  001A96  6ED2               	movwf	210,c	;volatile
  3113                           
  3114                           ;mcc.c: 68: OSCTUNE = 0x80;
  3115  001A98  0E80               	movlw	128
  3116  001A9A  6E9B               	movwf	155,c	;volatile
  3117                           
  3118                           ;mcc.c: 70: ACTCON = 0x00;
  3119  001A9C  0E00               	movlw	0
  3120  001A9E  6EB5               	movwf	181,c	;volatile
  3121  001AA0  0012               	return		;funcret
  3122  001AA2                     __end_of_OSCILLATOR_Initialize:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _INTERRUPT_Initialize *****************
  3126 ;; Defined at:
  3127 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		None
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 4
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_SYSTEM_Initialize
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text12
  3156  001AD2                     __ptext12:
  3157                           	callstack 0
  3158  001AD2                     _INTERRUPT_Initialize:
  3159                           	callstack 25
  3160  001AD2                     
  3161                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3162  001AD2  9ED0               	bcf	208,7,c	;volatile
  3163  001AD4  0012               	return		;funcret
  3164  001AD6                     __end_of_INTERRUPT_Initialize:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _EXT_INT_Initialize *****************
  3168 ;; Defined at:
  3169 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3186 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 5
  3190 ;; This function calls:
  3191 ;;		_INT1_SetInterruptHandler
  3192 ;; This function is called by:
  3193 ;;		_SYSTEM_Initialize
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text13
  3198  001A7C                     __ptext13:
  3199                           	callstack 0
  3200  001A7C                     _EXT_INT_Initialize:
  3201                           	callstack 24
  3202  001A7C                     
  3203                           ;ext_int.c: 64: (INTCON3bits.INT1IF = 0);
  3204  001A7C  90F0               	bcf	240,0,c	;volatile
  3205                           
  3206                           ;ext_int.c: 65: (INTCON2bits.INTEDG1 = 0);
  3207  001A7E  9AF1               	bcf	241,5,c	;volatile
  3208  001A80                     
  3209                           ;ext_int.c: 67: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3210  001A80  0ED6               	movlw	low _INT1_DefaultInterruptHandler
  3211  001A82  6E05               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3212  001A84  0E1A               	movlw	high _INT1_DefaultInterruptHandler
  3213  001A86  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3214  001A88  EC51  F00D         	call	_INT1_SetInterruptHandler	;wreg free
  3215  001A8C                     
  3216                           ;ext_int.c: 68: (INTCON3bits.INT1IE = 1);
  3217  001A8C  86F0               	bsf	240,3,c	;volatile
  3218  001A8E  0012               	return		;funcret
  3219  001A90                     __end_of_EXT_INT_Initialize:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _INT1_SetInterruptHandler *****************
  3223 ;; Defined at:
  3224 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  3227 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3239 ;;      Params:         2       0       0       0       0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3242 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3243 ;;Total ram usage:        2 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 4
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_EXT_INT_Initialize
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text14
  3254  001AA2                     __ptext14:
  3255                           	callstack 0
  3256  001AA2                     _INT1_SetInterruptHandler:
  3257                           	callstack 24
  3258  001AA2                     
  3259                           ;ext_int.c: 51: INT1_InterruptHandler = InterruptHandler;
  3260  001AA2  C005  F052         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3261  001AA6  C006  F053         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3262  001AAA  0012               	return		;funcret
  3263  001AAC                     __end_of_INT1_SetInterruptHandler:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _EUSART1_Initialize *****************
  3267 ;; Defined at:
  3268 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 5
  3289 ;; This function calls:
  3290 ;;		_EUSART1_SetErrorHandler
  3291 ;;		_EUSART1_SetFramingErrorHandler
  3292 ;;		_EUSART1_SetOverrunErrorHandler
  3293 ;; This function is called by:
  3294 ;;		_SYSTEM_Initialize
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text15
  3299  001978                     __ptext15:
  3300                           	callstack 0
  3301  001978                     _EUSART1_Initialize:
  3302                           	callstack 24
  3303  001978                     
  3304                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  3305  001978  0E08               	movlw	8
  3306  00197A  6EB8               	movwf	184,c	;volatile
  3307                           
  3308                           ;eusart1.c: 74: RCSTA1 = 0x80;
  3309  00197C  0E80               	movlw	128
  3310  00197E  6EAB               	movwf	171,c	;volatile
  3311                           
  3312                           ;eusart1.c: 77: TXSTA1 = 0x24;
  3313  001980  0E24               	movlw	36
  3314  001982  6EAC               	movwf	172,c	;volatile
  3315                           
  3316                           ;eusart1.c: 80: SPBRG1 = 0xA0;
  3317  001984  0EA0               	movlw	160
  3318  001986  6EAF               	movwf	175,c	;volatile
  3319                           
  3320                           ;eusart1.c: 83: SPBRGH1 = 0x01;
  3321  001988  0E01               	movlw	1
  3322  00198A  6EB0               	movwf	176,c	;volatile
  3323  00198C                     
  3324                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3325  00198C  0E00               	movlw	0
  3326  00198E  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3327  001990  0E00               	movlw	0
  3328  001992  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3329  001994  EC5B  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3330  001998                     
  3331                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3332  001998  0E00               	movlw	0
  3333  00199A  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3334  00199C  0E00               	movlw	0
  3335  00199E  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3336  0019A0  EC56  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3337  0019A4                     
  3338                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3339  0019A4  0E00               	movlw	0
  3340  0019A6  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3341  0019A8  0E00               	movlw	0
  3342  0019AA  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3343  0019AC  EC60  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  3344  0019B0                     
  3345                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  3346  0019B0  0E00               	movlw	0
  3347  0019B2  6E47               	movwf	_eusart1RxLastError^0,c	;volatile
  3348  0019B4  0012               	return		;funcret
  3349  0019B6                     __end_of_EUSART1_Initialize:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3353 ;; Defined at:
  3354 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3357 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3369 ;;      Params:         2       0       0       0       0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3372 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 4
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_EUSART1_Initialize
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text16
  3384  001AAC                     __ptext16:
  3385                           	callstack 0
  3386  001AAC                     _EUSART1_SetOverrunErrorHandler:
  3387                           	callstack 24
  3388  001AAC                     
  3389                           ;eusart1.c: 179: EUSART1_OverrunErrorHandler = interruptHandler;
  3390  001AAC  C005  F056         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3391  001AB0  C006  F057         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3392  001AB4  0012               	return		;funcret
  3393  001AB6                     __end_of_EUSART1_SetOverrunErrorHandler:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3397 ;; Defined at:
  3398 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3401 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3413 ;;      Params:         2       0       0       0       0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3416 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 4
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_EUSART1_Initialize
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text17
  3428  001AB6                     __ptext17:
  3429                           	callstack 0
  3430  001AB6                     _EUSART1_SetFramingErrorHandler:
  3431                           	callstack 24
  3432  001AB6                     
  3433                           ;eusart1.c: 175: EUSART1_FramingErrorHandler = interruptHandler;
  3434  001AB6  C005  F058         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3435  001ABA  C006  F059         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3436  001ABE  0012               	return		;funcret
  3437  001AC0                     __end_of_EUSART1_SetFramingErrorHandler:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _EUSART1_SetErrorHandler *****************
  3441 ;; Defined at:
  3442 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3445 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3457 ;;      Params:         2       0       0       0       0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3460 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 4
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_EUSART1_Initialize
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text18
  3472  001AC0                     __ptext18:
  3473                           	callstack 0
  3474  001AC0                     _EUSART1_SetErrorHandler:
  3475                           	callstack 24
  3476  001AC0                     
  3477                           ;eusart1.c: 183: EUSART1_ErrorHandler = interruptHandler;
  3478  001AC0  C005  F054         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3479  001AC4  C006  F055         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3480  001AC8  0012               	return		;funcret
  3481  001ACA                     __end_of_EUSART1_SetErrorHandler:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _Hash_algoritmo *****************
  3485 ;; Defined at:
  3486 ;;		line 75 in file "main.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  hash_acum       4   26[COMRAM] unsigned long 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  4   16[COMRAM] unsigned long 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3500 ;;      Params:         4       0       0       0       0       0       0       0       0
  3501 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3502 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3503 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3504 ;;Total ram usage:       14 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 5
  3507 ;; This function calls:
  3508 ;;		___lmul
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text19
  3515  0016DE                     __ptext19:
  3516                           	callstack 0
  3517  0016DE                     _Hash_algoritmo:
  3518                           	callstack 25
  3519  0016DE                     
  3520                           ;main.c: 77: unsigned long hash_acum = 2166136261;
  3521  0016DE  0EC5               	movlw	197
  3522  0016E0  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3523  0016E2  0E9D               	movlw	157
  3524  0016E4  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3525  0016E6  0E1C               	movlw	28
  3526  0016E8  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3527  0016EA  0E81               	movlw	129
  3528  0016EC  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3529                           
  3530                           ;main.c: 78: for (cont = 0; cont < cuenta - 1; cont++)
  3531  0016EE  0E00               	movlw	0
  3532  0016F0  6E45               	movwf	_cont^0,c
  3533  0016F2  EF9F  F00B         	goto	l2095
  3534  0016F6                     l2091:
  3535                           
  3536                           ;main.c: 79: {;main.c: 80: hash_acum = (hash_acum * 16777619) ^ tiempo[cont];
  3537  0016F6  C01B  F005         	movff	Hash_algoritmo@hash_acum,___lmul@multiplier
  3538  0016FA  C01C  F006         	movff	Hash_algoritmo@hash_acum+1,___lmul@multiplier+1
  3539  0016FE  C01D  F007         	movff	Hash_algoritmo@hash_acum+2,___lmul@multiplier+2
  3540  001702  C01E  F008         	movff	Hash_algoritmo@hash_acum+3,___lmul@multiplier+3
  3541  001706  0E93               	movlw	147
  3542  001708  6E09               	movwf	___lmul@multiplicand^0,c
  3543  00170A  0E01               	movlw	1
  3544  00170C  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  3545  00170E  0E00               	movlw	0
  3546  001710  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  3547  001712  0E01               	movlw	1
  3548  001714  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  3549  001716  EC58  F00C         	call	___lmul	;wreg free
  3550  00171A  0E60               	movlw	low _tiempo
  3551  00171C  2445               	addwf	_cont^0,w,c
  3552  00171E  6ED9               	movwf	fsr2l,c
  3553  001720  6ADA               	clrf	fsr2h,c
  3554  001722  0E00               	movlw	high _tiempo
  3555  001724  22DA               	addwfc	fsr2h,f,c
  3556  001726  50DF               	movf	indf2,w,c
  3557  001728  6E15               	movwf	??_Hash_algoritmo^0,c
  3558  00172A  5015               	movf	??_Hash_algoritmo^0,w,c
  3559  00172C  1805               	xorwf	?___lmul^0,w,c
  3560  00172E  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3561  001730  5006               	movf	(?___lmul+1)^0,w,c
  3562  001732  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3563  001734  5007               	movf	(?___lmul+2)^0,w,c
  3564  001736  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3565  001738  5008               	movf	(?___lmul+3)^0,w,c
  3566  00173A  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3567  00173C  2A45               	incf	_cont^0,f,c
  3568  00173E                     l2095:
  3569  00173E  0EFF               	movlw	255
  3570  001740  6E15               	movwf	??_Hash_algoritmo^0,c
  3571  001742  0EFF               	movlw	255
  3572  001744  6E16               	movwf	(??_Hash_algoritmo+1)^0,c
  3573  001746  C042  F017         	movff	_cuenta,??_Hash_algoritmo+2
  3574  00174A  C043  F018         	movff	_cuenta+1,??_Hash_algoritmo+3
  3575  00174E  5015               	movf	??_Hash_algoritmo^0,w,c
  3576  001750  2617               	addwf	(??_Hash_algoritmo+2)^0,f,c
  3577  001752  5016               	movf	(??_Hash_algoritmo+1)^0,w,c
  3578  001754  2218               	addwfc	(??_Hash_algoritmo+3)^0,f,c
  3579  001756  5045               	movf	_cont^0,w,c
  3580  001758  6E19               	movwf	(??_Hash_algoritmo+4)^0,c
  3581  00175A  6A1A               	clrf	(??_Hash_algoritmo+5)^0,c
  3582  00175C  5017               	movf	(??_Hash_algoritmo+2)^0,w,c
  3583  00175E  5C19               	subwf	(??_Hash_algoritmo+4)^0,w,c
  3584  001760  5018               	movf	(??_Hash_algoritmo+3)^0,w,c
  3585  001762  581A               	subwfb	(??_Hash_algoritmo+5)^0,w,c
  3586  001764  A0D8               	btfss	status,0,c
  3587  001766  EFB7  F00B         	goto	u1391
  3588  00176A  EFB9  F00B         	goto	u1390
  3589  00176E                     u1391:
  3590  00176E  EF7B  F00B         	goto	l2091
  3591  001772                     u1390:
  3592  001772                     
  3593                           ;main.c: 81: };main.c: 82: return (hash_acum);
  3594  001772  C01B  F011         	movff	Hash_algoritmo@hash_acum,?_Hash_algoritmo
  3595  001776  C01C  F012         	movff	Hash_algoritmo@hash_acum+1,?_Hash_algoritmo+1
  3596  00177A  C01D  F013         	movff	Hash_algoritmo@hash_acum+2,?_Hash_algoritmo+2
  3597  00177E  C01E  F014         	movff	Hash_algoritmo@hash_acum+3,?_Hash_algoritmo+3
  3598  001782  0012               	return		;funcret
  3599  001784                     __end_of_Hash_algoritmo:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function ___lmul *****************
  3603 ;; Defined at:
  3604 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  multiplier      4    4[COMRAM] unsigned long 
  3607 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  product         4   12[COMRAM] unsigned long 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  4    4[COMRAM] unsigned long 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3619 ;;      Params:         8       0       0       0       0       0       0       0       0
  3620 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3622 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3623 ;;Total ram usage:       12 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 4
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_Hash_algoritmo
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text20
  3634  0018B0                     __ptext20:
  3635                           	callstack 0
  3636  0018B0                     ___lmul:
  3637                           	callstack 25
  3638  0018B0  0E00               	movlw	0
  3639  0018B2  6E0D               	movwf	___lmul@product^0,c
  3640  0018B4  0E00               	movlw	0
  3641  0018B6  6E0E               	movwf	(___lmul@product+1)^0,c
  3642  0018B8  0E00               	movlw	0
  3643  0018BA  6E0F               	movwf	(___lmul@product+2)^0,c
  3644  0018BC  0E00               	movlw	0
  3645  0018BE  6E10               	movwf	(___lmul@product+3)^0,c
  3646  0018C0                     l1805:
  3647  0018C0  A005               	btfss	___lmul@multiplier^0,0,c
  3648  0018C2  EF65  F00C         	goto	u911
  3649  0018C6  EF67  F00C         	goto	u910
  3650  0018CA                     u911:
  3651  0018CA  EF6F  F00C         	goto	l1809
  3652  0018CE                     u910:
  3653  0018CE  5009               	movf	___lmul@multiplicand^0,w,c
  3654  0018D0  260D               	addwf	___lmul@product^0,f,c
  3655  0018D2  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  3656  0018D4  220E               	addwfc	(___lmul@product+1)^0,f,c
  3657  0018D6  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  3658  0018D8  220F               	addwfc	(___lmul@product+2)^0,f,c
  3659  0018DA  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  3660  0018DC  2210               	addwfc	(___lmul@product+3)^0,f,c
  3661  0018DE                     l1809:
  3662  0018DE  90D8               	bcf	status,0,c
  3663  0018E0  3609               	rlcf	___lmul@multiplicand^0,f,c
  3664  0018E2  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3665  0018E4  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3666  0018E6  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3667  0018E8  90D8               	bcf	status,0,c
  3668  0018EA  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  3669  0018EC  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  3670  0018EE  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  3671  0018F0  3205               	rrcf	___lmul@multiplier^0,f,c
  3672  0018F2  5005               	movf	___lmul@multiplier^0,w,c
  3673  0018F4  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  3674  0018F6  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  3675  0018F8  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  3676  0018FA  A4D8               	btfss	status,2,c
  3677  0018FC  EF82  F00C         	goto	u921
  3678  001900  EF84  F00C         	goto	u920
  3679  001904                     u921:
  3680  001904  EF60  F00C         	goto	l1805
  3681  001908                     u920:
  3682  001908  C00D  F005         	movff	___lmul@product,?___lmul
  3683  00190C  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  3684  001910  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  3685  001914  C010  F008         	movff	___lmul@product+3,?___lmul+3
  3686  001918  0012               	return		;funcret
  3687  00191A                     __end_of___lmul:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function _EUSART1_Write_string *****************
  3691 ;; Defined at:
  3692 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  data            2    5[COMRAM] PTR const unsigned char 
  3695 ;;		 -> STR_11(9), STR_10(9), STR_9(9), STR_8(2), 
  3696 ;;		 -> STR_7(2), STR_6(13), STR_4(2), STR_3(2), 
  3697 ;;		 -> texto(10), STR_1(6), 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3709 ;;      Params:         2       0       0       0       0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 5
  3716 ;; This function calls:
  3717 ;;		_EUSART1_Write
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text21
  3724  00191A                     __ptext21:
  3725                           	callstack 0
  3726  00191A                     _EUSART1_Write_string:
  3727                           	callstack 25
  3728  00191A                     
  3729                           ;eusart1.c: 143: while(*data != 0)
  3730  00191A  EFA3  F00C         	goto	l2055
  3731  00191E                     l2051:
  3732                           
  3733                           ;eusart1.c: 144: {;eusart1.c: 145: EUSART1_Write(*data++);
  3734  00191E  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3735  001922  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3736  001926  6AF8               	clrf	tblptru,c
  3737  001928  0E07               	movlw	(high __ramtop+-1)
  3738  00192A  64F7               	cpfsgt	tblptrh,c
  3739  00192C  D003               	bra	u1337
  3740  00192E  0008               	tblrd		*
  3741  001930  50F5               	movf	tablat,w,c
  3742  001932  D005               	bra	u1330
  3743  001934                     u1337:
  3744  001934  CFF6 FFE9          	movff	tblptrl,fsr0l
  3745  001938  CFF7 FFEA          	movff	tblptrh,fsr0h
  3746  00193C  50EF               	movf	indf0,w,c
  3747  00193E                     u1330:
  3748  00193E  EC29  F00D         	call	_EUSART1_Write
  3749  001942  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  3750  001944  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  3751  001946                     l2055:
  3752  001946  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3753  00194A  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3754  00194E  6AF8               	clrf	tblptru,c
  3755  001950  0E07               	movlw	(high __ramtop+-1)
  3756  001952  64F7               	cpfsgt	tblptrh,c
  3757  001954  D003               	bra	u1347
  3758  001956  0008               	tblrd		*
  3759  001958  50F5               	movf	tablat,w,c
  3760  00195A  D005               	bra	u1340
  3761  00195C                     u1347:
  3762  00195C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3763  001960  CFF7 FFEA          	movff	tblptrh,fsr0h
  3764  001964  50EF               	movf	indf0,w,c
  3765  001966                     u1340:
  3766  001966  0900               	iorlw	0
  3767  001968  A4D8               	btfss	status,2,c
  3768  00196A  EFB9  F00C         	goto	u1351
  3769  00196E  EFBB  F00C         	goto	u1350
  3770  001972                     u1351:
  3771  001972  EF8F  F00C         	goto	l2051
  3772  001976                     u1350:
  3773  001976  0012               	return		;funcret
  3774  001978                     __end_of_EUSART1_Write_string:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _EUSART1_Write *****************
  3778 ;; Defined at:
  3779 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  txData          1    wreg     unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  txData          1    4[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0
  3794 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3796 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3797 ;;Total ram usage:        1 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 4
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_EUSART1_Write_string
  3804 ;;		_putch
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text22
  3809  001A52                     __ptext22:
  3810                           	callstack 0
  3811  001A52                     _EUSART1_Write:
  3812                           	callstack 25
  3813                           
  3814                           ;incstack = 0
  3815                           ;EUSART1_Write@txData stored from wreg
  3816  001A52  6E05               	movwf	EUSART1_Write@txData^0,c
  3817  001A54                     l67:
  3818  001A54  A89E               	btfss	158,4,c	;volatile
  3819  001A56  EF2F  F00D         	goto	u11
  3820  001A5A  EF31  F00D         	goto	u10
  3821  001A5E                     u11:
  3822  001A5E  EF2A  F00D         	goto	l67
  3823  001A62                     u10:
  3824  001A62                     
  3825                           ;eusart1.c: 136: };eusart1.c: 138: TXREG1 = txData;
  3826  001A62  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3827  001A66  0012               	return		;funcret
  3828  001A68                     __end_of_EUSART1_Write:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _INTERRUPT_InterruptManager *****************
  3832 ;; Defined at:
  3833 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3849 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3850 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3851 ;;Total ram usage:        4 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 3
  3854 ;; This function calls:
  3855 ;;		_INT1_ISR
  3856 ;; This function is called by:
  3857 ;;		Interrupt level 2
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	intcode
  3862  000008                     __pintcode:
  3863                           	callstack 0
  3864  000008                     _INTERRUPT_InterruptManager:
  3865                           	callstack 24
  3866                           
  3867                           ;incstack = 0
  3868  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3869  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3870  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3871  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3872  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3873  00001A                     
  3874                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  3875  00001A  A6F0               	btfss	240,3,c	;volatile
  3876  00001C  EF12  F000         	goto	i2u152_41
  3877  000020  EF14  F000         	goto	i2u152_40
  3878  000024                     i2u152_41:
  3879  000024  EF67  F000         	goto	i2l247
  3880  000028                     i2u152_40:
  3881  000028  A0F0               	btfss	240,0,c	;volatile
  3882  00002A  EF19  F000         	goto	i2u153_41
  3883  00002E  EF1B  F000         	goto	i2u153_40
  3884  000032                     i2u153_41:
  3885  000032  EF67  F000         	goto	i2l247
  3886  000036                     i2u153_40:
  3887  000036                     
  3888                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: if (INT1IF == 1)
  3889  000036  A0F0               	btfss	4080,0,c	;volatile
  3890  000038  EF20  F000         	goto	i2u154_41
  3891  00003C  EF22  F000         	goto	i2u154_40
  3892  000040                     i2u154_41:
  3893  000040  EF64  F000         	goto	i2l2233
  3894  000044                     i2u154_40:
  3895  000044                     
  3896                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 66: if (flag_codigo == 0)
  3897  000044  5046               	movf	_flag_codigo^0,w,c
  3898  000046  A4D8               	btfss	status,2,c
  3899  000048  EF28  F000         	goto	i2u155_41
  3900  00004C  EF2A  F000         	goto	i2u155_40
  3901  000050                     i2u155_41:
  3902  000050  EF64  F000         	goto	i2l2233
  3903  000054                     i2u155_40:
  3904  000054                     
  3905                           ;interrupt_manager.c: 67: {;interrupt_manager.c: 68: if (cuenta != 0)
  3906  000054  5042               	movf	_cuenta^0,w,c
  3907  000056  1043               	iorwf	(_cuenta+1)^0,w,c
  3908  000058  B4D8               	btfsc	status,2,c
  3909  00005A  EF31  F000         	goto	i2u156_41
  3910  00005E  EF33  F000         	goto	i2u156_40
  3911  000062                     i2u156_41:
  3912  000062  EF5B  F000         	goto	i2l244
  3913  000066                     i2u156_40:
  3914  000066                     
  3915                           ;interrupt_manager.c: 69: {;interrupt_manager.c: 70: timer_aux = TMR0;
  3916  000066  CFD6 F044          	movff	4054,_timer_aux	;volatile
  3917  00006A                     
  3918                           ;interrupt_manager.c: 71: TMR0 = 0;
  3919  00006A  0E00               	movlw	0
  3920  00006C  6ED7               	movwf	215,c	;volatile
  3921  00006E  0E00               	movlw	0
  3922  000070  6ED6               	movwf	214,c	;volatile
  3923  000072                     
  3924                           ;interrupt_manager.c: 72: tiempo[cuenta - 1] = timer_aux;
  3925  000072  0E5F               	movlw	low (_tiempo+65535)
  3926  000074  2442               	addwf	_cuenta^0,w,c
  3927  000076  6ED9               	movwf	fsr2l,c
  3928  000078  0E00               	movlw	high (_tiempo+65535)
  3929  00007A  2043               	addwfc	(_cuenta+1)^0,w,c
  3930  00007C  6EDA               	movwf	fsr2h,c
  3931  00007E  C044  FFDF         	movff	_timer_aux,indf2
  3932  000082                     
  3933                           ;interrupt_manager.c: 73: cuenta++;
  3934  000082  4A42               	infsnz	_cuenta^0,f,c
  3935  000084  2A43               	incf	(_cuenta+1)^0,f,c
  3936  000086                     
  3937                           ;interrupt_manager.c: 74: INTEDG1 = !INTEDG1;
  3938  000086  AAF1               	btfss	4081,5,c	;volatile
  3939  000088  EF48  F000         	goto	i2u157_41
  3940  00008C  EF4B  F000         	goto	i2u157_40
  3941  000090                     i2u157_41:
  3942  000090  8AF1               	bsf	4081,5,c	;volatile
  3943  000092  EF4C  F000         	goto	i2u158_45
  3944  000096                     i2u157_40:
  3945  000096  9AF1               	bcf	4081,5,c	;volatile
  3946  000098                     i2u158_45:
  3947  000098                     
  3948                           ;interrupt_manager.c: 76: if (TMR0IF == 1)
  3949  000098  A4F2               	btfss	4082,2,c	;volatile
  3950  00009A  EF51  F000         	goto	i2u159_41
  3951  00009E  EF53  F000         	goto	i2u159_40
  3952  0000A2                     i2u159_41:
  3953  0000A2  EF64  F000         	goto	i2l243
  3954  0000A6                     i2u159_40:
  3955  0000A6                     
  3956                           ;interrupt_manager.c: 77: {;interrupt_manager.c: 78: cuenta--;
  3957  0000A6  0642               	decf	_cuenta^0,f,c
  3958  0000A8  A0D8               	btfss	status,0,c
  3959  0000AA  0643               	decf	(_cuenta+1)^0,f,c
  3960  0000AC                     
  3961                           ;interrupt_manager.c: 79: flag_codigo = 1;
  3962  0000AC  0E01               	movlw	1
  3963  0000AE  6E46               	movwf	_flag_codigo^0,c
  3964  0000B0                     
  3965                           ;interrupt_manager.c: 80: INT1IE = 0;
  3966  0000B0  96F0               	bcf	4080,3,c	;volatile
  3967  0000B2  EF64  F000         	goto	i2l2233
  3968  0000B6                     i2l244:
  3969                           
  3970                           ;interrupt_manager.c: 83: else;interrupt_manager.c: 84: {;interrupt_manager.c: 85: TMR0I
      +                          F = 0;
  3971  0000B6  94F2               	bcf	4082,2,c	;volatile
  3972  0000B8                     
  3973                           ;interrupt_manager.c: 86: TMR0 = 0;
  3974  0000B8  0E00               	movlw	0
  3975  0000BA  6ED7               	movwf	215,c	;volatile
  3976  0000BC  0E00               	movlw	0
  3977  0000BE  6ED6               	movwf	214,c	;volatile
  3978  0000C0                     
  3979                           ;interrupt_manager.c: 87: cuenta++;
  3980  0000C0  4A42               	infsnz	_cuenta^0,f,c
  3981  0000C2  2A43               	incf	(_cuenta+1)^0,f,c
  3982  0000C4  EF64  F000         	goto	i2l2233
  3983  0000C8                     i2l243:
  3984  0000C8                     i2l2233:
  3985                           
  3986                           ;interrupt_manager.c: 88: };interrupt_manager.c: 89: };interrupt_manager.c: 90: };interr
      +                          upt_manager.c: 91: INT1IF = 0;
  3987  0000C8  90F0               	bcf	4080,0,c	;volatile
  3988  0000CA                     
  3989                           ;interrupt_manager.c: 93: INT1_ISR();
  3990  0000CA  EC65  F00D         	call	_INT1_ISR	;wreg free
  3991  0000CE                     i2l247:
  3992  0000CE  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3993  0000D2  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3994  0000D6  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3995  0000DA  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3996  0000DE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3997  0000E0  0011               	retfie		f
  3998  0000E2                     __end_of_INTERRUPT_InterruptManager:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _INT1_ISR *****************
  4002 ;; Defined at:
  4003 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4017 ;;      Params:         0       0       0       0       0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4021 ;;Total ram usage:        0 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 2
  4024 ;; This function calls:
  4025 ;;		_INT1_CallBack
  4026 ;; This function is called by:
  4027 ;;		_INTERRUPT_InterruptManager
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text24
  4032  001ACA                     __ptext24:
  4033                           	callstack 0
  4034  001ACA                     _INT1_ISR:
  4035                           	callstack 24
  4036  001ACA                     
  4037                           ;ext_int.c: 34: (INTCON3bits.INT1IF = 0);
  4038  001ACA  90F0               	bcf	240,0,c	;volatile
  4039  001ACC                     
  4040                           ;ext_int.c: 37: INT1_CallBack();
  4041  001ACC  ECF2  F00C         	call	_INT1_CallBack	;wreg free
  4042  001AD0  0012               	return		;funcret
  4043  001AD2                     __end_of_INT1_ISR:
  4044                           	callstack 0
  4045                           
  4046 ;; *************** function _INT1_CallBack *****************
  4047 ;; Defined at:
  4048 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0
  4063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4065 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:        0 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 1
  4069 ;; This function calls:
  4070 ;;		Absolute function
  4071 ;;		_INT1_DefaultInterruptHandler
  4072 ;; This function is called by:
  4073 ;;		_INT1_ISR
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text25
  4078  0019E4                     __ptext25:
  4079                           	callstack 0
  4080  0019E4                     _INT1_CallBack:
  4081                           	callstack 24
  4082  0019E4                     
  4083                           ;ext_int.c: 44: if(INT1_InterruptHandler)
  4084  0019E4  5052               	movf	_INT1_InterruptHandler^0,w,c
  4085  0019E6  1053               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  4086  0019E8  B4D8               	btfsc	status,2,c
  4087  0019EA  EFF9  F00C         	goto	i2u89_41
  4088  0019EE  EFFB  F00C         	goto	i2u89_40
  4089  0019F2                     i2u89_41:
  4090  0019F2  EF08  F00D         	goto	i2l262
  4091  0019F6                     i2u89_40:
  4092  0019F6                     
  4093                           ;ext_int.c: 45: {;ext_int.c: 46: INT1_InterruptHandler();
  4094  0019F6  D802               	call	i2u90_48
  4095  0019F8  EF08  F00D         	goto	i2u90_49
  4096  0019FC                     i2u90_48:
  4097  0019FC  0005               	push	
  4098  0019FE  6EFA               	movwf	pclath,c
  4099  001A00  5052               	movf	_INT1_InterruptHandler^0,w,c
  4100  001A02  6EFD               	movwf	tosl,c
  4101  001A04  5053               	movf	(_INT1_InterruptHandler+1)^0,w,c
  4102  001A06  6EFE               	movwf	tosh,c
  4103  001A08  50F8               	movf	tblptru,w,c
  4104  001A0A  6EFF               	movwf	tosu,c
  4105  001A0C  50FA               	movf	pclath,w,c
  4106  001A0E  0012               	return		;indir
  4107  001A10                     i2u90_49:
  4108  001A10                     i2l262:
  4109  001A10  0012               	return		;funcret
  4110  001A12                     __end_of_INT1_CallBack:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _INT1_DefaultInterruptHandler *****************
  4114 ;; Defined at:
  4115 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		None
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_EXT_INT_Initialize
  4139 ;;		_INT1_CallBack
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text26
  4144  001AD6                     __ptext26:
  4145                           	callstack 0
  4146  001AD6                     _INT1_DefaultInterruptHandler:
  4147                           	callstack 24
  4148  001AD6  0012               	return		;funcret
  4149  001AD8                     __end_of_INT1_DefaultInterruptHandler:
  4150                           	callstack 0
  4151                           
  4152                           	psect	text27
  4153  000000                     __ptext27:
  4154                           	callstack 0
  4155  000000                     
  4156                           	psect	rparam
  4157  0000                     
  4158                           	psect	temp
  4159  00005B                     btemp:
  4160                           	callstack 0
  4161  00005B                     	ds	1
  4162  0000                     int$flags	set	btemp
  4163  0000                     wtemp8	set	btemp+1
  4164  0000                     ttemp5	set	btemp+1
  4165  0000                     ttemp6	set	btemp+4
  4166  0000                     ttemp7	set	btemp+8
  4167                           
  4168                           	psect	idloc
  4169                           
  4170                           ;Config register IDLOC0 @ 0x200000
  4171                           ;	unspecified, using default values
  4172  200000                     	org	2097152
  4173  200000  FF                 	db	255
  4174                           
  4175                           ;Config register IDLOC1 @ 0x200001
  4176                           ;	unspecified, using default values
  4177  200001                     	org	2097153
  4178  200001  FF                 	db	255
  4179                           
  4180                           ;Config register IDLOC2 @ 0x200002
  4181                           ;	unspecified, using default values
  4182  200002                     	org	2097154
  4183  200002  FF                 	db	255
  4184                           
  4185                           ;Config register IDLOC3 @ 0x200003
  4186                           ;	unspecified, using default values
  4187  200003                     	org	2097155
  4188  200003  FF                 	db	255
  4189                           
  4190                           ;Config register IDLOC4 @ 0x200004
  4191                           ;	unspecified, using default values
  4192  200004                     	org	2097156
  4193  200004  FF                 	db	255
  4194                           
  4195                           ;Config register IDLOC5 @ 0x200005
  4196                           ;	unspecified, using default values
  4197  200005                     	org	2097157
  4198  200005  FF                 	db	255
  4199                           
  4200                           ;Config register IDLOC6 @ 0x200006
  4201                           ;	unspecified, using default values
  4202  200006                     	org	2097158
  4203  200006  FF                 	db	255
  4204                           
  4205                           ;Config register IDLOC7 @ 0x200007
  4206                           ;	unspecified, using default values
  4207  200007                     	org	2097159
  4208  200007  FF                 	db	255
  4209                           
  4210                           	psect	config
  4211                           
  4212                           ;Config register CONFIG1L @ 0x300000
  4213                           ;	PLL Selection
  4214                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4215                           ;	PLL Enable Configuration bit
  4216                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  4217                           ;	CPU System Clock Postscaler
  4218                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4219                           ;	Low Speed USB mode with 48 MHz system clock
  4220                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4221  300000                     	org	3145728
  4222  300000  21                 	db	33
  4223                           
  4224                           ;Config register CONFIG1H @ 0x300001
  4225                           ;	Oscillator Selection
  4226                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  4227                           ;	Primary Oscillator Shutdown
  4228                           ;	PCLKEN = ON, Primary oscillator enabled
  4229                           ;	Fail-Safe Clock Monitor
  4230                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4231                           ;	Internal/External Oscillator Switchover
  4232                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4233  300001                     	org	3145729
  4234  300001  23                 	db	35
  4235                           
  4236                           ;Config register CONFIG2L @ 0x300002
  4237                           ;	Power-up Timer Enable
  4238                           ;	nPWRTEN = ON, Power up timer enabled
  4239                           ;	Brown-out Reset Enable
  4240                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4241                           ;	Brown-out Reset Voltage
  4242                           ;	BORV = 190, BOR set to 1.9V nominal
  4243                           ;	Low-Power Brown-out Reset
  4244                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4245  300002                     	org	3145730
  4246  300002  5E                 	db	94
  4247                           
  4248                           ;Config register CONFIG2H @ 0x300003
  4249                           ;	Watchdog Timer Enable bits
  4250                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4251                           ;	Watchdog Timer Postscaler
  4252                           ;	WDTPS = 32768, 1:32768
  4253  300003                     	org	3145731
  4254  300003  3C                 	db	60
  4255                           
  4256                           ; Padding undefined space
  4257  300004                     	org	3145732
  4258  300004  FF                 	db	255
  4259                           
  4260                           ;Config register CONFIG3H @ 0x300005
  4261                           ;	CCP2 MUX bit
  4262                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4263                           ;	PORTB A/D Enable bit
  4264                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4265                           ;	Timer3 Clock Input MUX bit
  4266                           ;	T3CMX = RC0, T3CKI function is on RC0
  4267                           ;	SDO Output MUX bit
  4268                           ;	SDOMX = RB3, SDO function is on RB3
  4269                           ;	Master Clear Reset Pin Enable
  4270                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4271  300005                     	org	3145733
  4272  300005  D1                 	db	209
  4273                           
  4274                           ;Config register CONFIG4L @ 0x300006
  4275                           ;	Stack Full/Underflow Reset
  4276                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4277                           ;	Single-Supply ICSP Enable bit
  4278                           ;	LVP = OFF, Single-Supply ICSP disabled
  4279                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4280                           ;	ICPRT = OFF, ICPORT disabled
  4281                           ;	Extended Instruction Set Enable bit
  4282                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4283                           ;	Background Debugger Enable bit
  4284                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4285  300006                     	org	3145734
  4286  300006  81                 	db	129
  4287                           
  4288                           ; Padding undefined space
  4289  300007                     	org	3145735
  4290  300007  FF                 	db	255
  4291                           
  4292                           ;Config register CONFIG5L @ 0x300008
  4293                           ;	Block 0 Code Protect
  4294                           ;	CP0 = OFF, Block 0 is not code-protected
  4295                           ;	Block 1 Code Protect
  4296                           ;	CP1 = OFF, Block 1 is not code-protected
  4297                           ;	Block 2 Code Protect
  4298                           ;	CP2 = OFF, Block 2 is not code-protected
  4299                           ;	Block 3 Code Protect
  4300                           ;	CP3 = OFF, Block 3 is not code-protected
  4301  300008                     	org	3145736
  4302  300008  0F                 	db	15
  4303                           
  4304                           ;Config register CONFIG5H @ 0x300009
  4305                           ;	Boot Block Code Protect
  4306                           ;	CPB = OFF, Boot block is not code-protected
  4307                           ;	Data EEPROM Code Protect
  4308                           ;	CPD = OFF, Data EEPROM is not code-protected
  4309  300009                     	org	3145737
  4310  300009  C0                 	db	192
  4311                           
  4312                           ;Config register CONFIG6L @ 0x30000A
  4313                           ;	Block 0 Write Protect
  4314                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4315                           ;	Block 1 Write Protect
  4316                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4317                           ;	Block 2 Write Protect
  4318                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4319                           ;	Block 3 Write Protect
  4320                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4321  30000A                     	org	3145738
  4322  30000A  0F                 	db	15
  4323                           
  4324                           ;Config register CONFIG6H @ 0x30000B
  4325                           ;	Configuration Registers Write Protect
  4326                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4327                           ;	Boot Block Write Protect
  4328                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4329                           ;	Data EEPROM Write Protect
  4330                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4331  30000B                     	org	3145739
  4332  30000B  E0                 	db	224
  4333                           
  4334                           ;Config register CONFIG7L @ 0x30000C
  4335                           ;	Block 0 Table Read Protect
  4336                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4337                           ;	Block 1 Table Read Protect
  4338                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4339                           ;	Block 2 Table Read Protect
  4340                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4341                           ;	Block 3 Table Read Protect
  4342                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4343  30000C                     	org	3145740
  4344  30000C  0F                 	db	15
  4345                           
  4346                           ;Config register CONFIG7H @ 0x30000D
  4347                           ;	Boot Block Table Read Protect
  4348                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4349  30000D                     	org	3145741
  4350  30000D  40                 	db	64
  4351                           tosu	equ	0xFFF
  4352                           tosh	equ	0xFFE
  4353                           tosl	equ	0xFFD
  4354                           stkptr	equ	0xFFC
  4355                           pclatu	equ	0xFFB
  4356                           pclath	equ	0xFFA
  4357                           pcl	equ	0xFF9
  4358                           tblptru	equ	0xFF8
  4359                           tblptrh	equ	0xFF7
  4360                           tblptrl	equ	0xFF6
  4361                           tablat	equ	0xFF5
  4362                           prodh	equ	0xFF4
  4363                           prodl	equ	0xFF3
  4364                           indf0	equ	0xFEF
  4365                           postinc0	equ	0xFEE
  4366                           postdec0	equ	0xFED
  4367                           preinc0	equ	0xFEC
  4368                           plusw0	equ	0xFEB
  4369                           fsr0h	equ	0xFEA
  4370                           fsr0l	equ	0xFE9
  4371                           wreg	equ	0xFE8
  4372                           indf1	equ	0xFE7
  4373                           postinc1	equ	0xFE6
  4374                           postdec1	equ	0xFE5
  4375                           preinc1	equ	0xFE4
  4376                           plusw1	equ	0xFE3
  4377                           fsr1h	equ	0xFE2
  4378                           fsr1l	equ	0xFE1
  4379                           bsr	equ	0xFE0
  4380                           indf2	equ	0xFDF
  4381                           postinc2	equ	0xFDE
  4382                           postdec2	equ	0xFDD
  4383                           preinc2	equ	0xFDC
  4384                           plusw2	equ	0xFDB
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    72
    Data        0
    BSS         90
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      90
    BANK0           160      0      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[13]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> texto(COMRAM[10]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_normaliza
    _sprintf->___llmod
    ___llmod->___lldiv
    _normaliza->___flge
    ___flmul->___xxtofl
    ___flge->___flmul
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Hash_algoritmo->___lmul
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6612
                                             59 COMRAM     2     2      0
               _EUSART1_Write_string
                     _Hash_algoritmo
                  _SYSTEM_Initialize
                          _normaliza
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    22      8    1900
                                             26 COMRAM    21    13      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _normaliza                                            4     4      0    3008
                                             55 COMRAM     4     4      0
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Hash_algoritmo                                      14    10      4     416
                                             16 COMRAM    14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     896
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _Hash_algoritmo
     ___lmul
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _normaliza
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5A       1       95.7%
BITBIGSFRlllllh     27      0       0      32        0.0%
BITBIGSFRhhlh       18      0       0      21        0.0%
BITBIGSFRhll        17      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      33        0.0%
BITBIGSFRllllhh      6      0       0      29        0.0%
BITBIGSFRllllhl      6      0       0      30        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      31        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRhlh         1      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0      34        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jun 21 18:57:03 2023

                                            l43 19B4                                              l70 1A66  
                                            l67 1A54                                              l76 1976  
                                            l94 1ABE                                              l97 1AB4  
                                            u10 1A62                                              u11 1A5E  
                               _timer0ReloadVal 005A                                             l100 1AC8  
                                           l140 1AA0                                             l137 1A50  
                                           l411 1908                                             l412 1918  
                                           l332 1772                                             l236 1AD4  
                                           l333 1782                                             l271 1A8E  
                                           l167 19E2                                             l327 15D8  
                                           l265 1AAA                                             l185 1A7A  
                                           l434 1826                                             l427 1816  
                                           l371 0DCC                                             l368 0D44  
                                           l661 1696                                             l397 106C  
                                           l662 16DC                                             l815 18AE  
                                           l808 189E                                             u910 18CE  
                                           u911 18CA                                             u920 1908  
                                           u921 1904                                             u930 17AA  
                                           u931 17A6                                             u940 17CC  
                                           u941 17C8                                             u950 17F4  
                                           u951 17F0                                             u960 08AE  
                                           u961 08AA                                             u970 08C0  
                                           u971 08BC                                             u980 08D0  
                                           u981 08CC                                             u990 0910  
                                           u991 090C                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 0024                                    ___flmul@bexp 0025  
                                  ___flmul@sign 001F                                    ___flmul@temp 002A  
                                  ___flmul@prod 0026                                   _INT1_CallBack 19E4  
                                          l1002 0958                                            l1011 0BC6  
                                          l1012 0BB4                                            l1006 0CBC  
                                          l1009 0B4E                                            l2001 1898  
                                          l1050 137C                                            l1019 0C7E  
                                          l2011 130A                                            l1043 12E4  
                                          l2003 1290                                            l2021 1364  
                                          l2005 12A0                                            l2101 0CDC  
                                          l1046 1440                                            l2031 13C8  
                                          l2023 1366                                            l2015 131E  
                                          l2007 12AE                                            l2103 0CE8  
                                          l2041 1420                                            l2033 13E6  
                                          l1057 13D8                                            l2025 1372  
                                          l2017 1326                                            l2009 12F4  
                                          l2121 0D84                                            l2113 0D04  
                                          l2105 0CF0                                            l2051 191E  
                                          l2043 142E                                            l2035 13E8  
                                          l2027 13AE                                            l2019 1332  
                                          l2131 0DDA                                            l2123 0D9E  
                                          l2115 0D52                                            l2107 0CF8  
                                          l2053 1942                                            l1181 19B6  
                                          l2061 1A40                                            l2045 1430  
                                          l2037 13EC                                            l2029 13BA  
                                          l2133 0DF2                                            l2125 0DA6  
                                          l2117 0D60                                            l2109 0CFE  
                                          l2301 1216                                            l1175 1A54  
                                          l2055 1946                                            l1183 19E0  
                                          l2063 1A44                                            l2039 1410  
                                          l2151 0E66                                            l2135 0DFE  
                                          l2127 0DB4                                            l2119 0D78  
                                          l2311 1256                                            l2303 1222  
                                          l1177 1A62                                            l2049 191A  
                                          l1185 1A90                                            l1193 1A68  
                                          l2065 1A48                                            l2057 1A38  
                                          l2081 158A                                            l2073 1442  
                                          l2153 0E7C                                            l2145 0E2A  
                                          l2137 0E1A                                            l2129 0DB8  
                                          l2313 1258                                            l2305 1232  
                                          l2241 1078                                            l2091 16F6  
                                          l1179 1AD2                                            l1195 1A74  
                                          l2067 1A4C                                            l2059 1A3C  
                                          l2083 159E                                            l2075 144A  
                                          l2163 0EBA                                            l2171 0EEA  
                                          l2139 0E26                                            l2315 125A  
                                          l2307 124A                                            l2251 1084  
                                          l2243 107C                                            l2093 173C  
                                          l2085 15AE                                            l2077 14E0  
                                          l2181 0F94                                            l2173 0F00  
                                          l2165 0EBC                                            l2149 0E64  
                                          l2309 124E                                            l2261 109C  
                                          l2317 125C                                            l2253 1086  
                                          l2245 107E                                            l2237 106E  
                                          l2095 173E                                            l2079 14F4  
                                          l2087 15B0                                            l2191 1020  
                                          l2183 0FE6                                            l2175 0F0C  
                                          l2159 0E80                                            l2319 1274  
                                          l2271 10E8                                            l2263 10A0  
                                          l2255 1088                                            l2247 1080  
                                          l2239 1072                                            l2089 16DE  
                                          l2193 1024                                            l2177 0F10  
                                          l2169 0ED2                                            l2097 0CBE  
                                          l2281 113C                                            l2273 10F4  
                                          l2265 10B4                                            l2257 108A  
                                          l2249 1082                                            l1811 18E8  
                                          l1803 18B0                                            l2187 0FFC  
                                          l2179 0F1A                                            l2099 0CCA  
                                          l2195 103E                                            l2291 119A  
                                          l2283 1148                                            l2275 1100  
                                          l2267 10C0                                            l2259 108C  
                                          l1805 18C0                                            l1901 0A54  
                                          l1821 17BE                                            l1813 1784  
                                          l2189 1014                                            l2197 1060  
                                          l2293 11BE                                            l2285 1154  
                                          l2277 1124                                            l2269 10DC  
                                          l1807 18CE                                            l1911 0AD2  
                                          l1903 0A64                                            l1831 1806  
                                          l1823 17CC                                            l1815 1794  
                                          l2295 11D0                                            l2287 1178  
                                          l2279 1130                                            l1809 18DE  
                                          l1921 0B4C                                            l1913 0B08  
                                          l1905 0A80                                            l1841 08B0  
                                          l1833 1810                                            l1825 17D6  
                                          l1817 17AA                                            l2297 11E0  
                                          l2289 118A                                            l1931 0BAC  
                                          l1923 0B5E                                            l1915 0B16  
                                          l1907 0A8C                                            l1851 08F6  
                                          l1843 08C0                                            l1835 0894  
                                          l1827 17F4                                            l1819 17B2  
                                          l2299 1204                                            l1781 1AA2  
                                          l1941 0C1A                                            l1925 0B6C  
                                          l1917 0B34                                            l1909 0AA8  
                                          l1861 0922                                            l1853 08FC  
                                          l1845 08D0                                            l1837 08A0  
                                          l1829 1804                                            l1775 1AB6  
                                          l1791 19B0                                            l1783 1978  
                                          l1951 0C82                                            l1935 0BD6  
                                          l1943 0C1E                                            l1927 0B70  
                                          l1919 0B3E                                            l1871 0978  
                                          l1863 0932                                            l1855 0902  
                                          l1847 08E0                                            l1839 08AE  
                                          l1777 1AAC                                            l1785 198C  
                                          l1793 1A7C                                            l1961 0CAC  
                                          l1953 0C92                                            l1945 0C38  
                                          l1937 0BE2                                            l1929 0B7E  
                                          l1881 09B8                                            l1865 0942  
                                          l1857 0910                                            l1849 08E6  
                                          l1779 1AC0                                            l1787 1998  
                                          l1795 1A80                                            l1971 1646  
                                          l1955 0CA0                                            l1947 0C4C  
                                          l1939 0BF0                                            l1891 0A02  
                                          l1883 09C4                                            l1875 098C  
                                          l1867 0948                                            l1859 0912  
                                          l1789 19A4                                            l1797 1A8C  
                                          l1981 16D4                                            l1973 1656  
                                          l1965 15DA                                            l1957 0CA2  
                                          l1949 0C66                                            l1893 0A0E  
                                          l1885 09DC                                            l1877 0998  
                                          l1869 0968                                            l1983 16DA  
                                          l1975 1664                                            l1967 1608  
                                          l1959 0CA8                                            l1895 0A1E  
                                          l1887 09E8                                            l1879 09A2  
                                          l1991 1846                                            l1977 1676  
                                          l1969 1618                                            l1897 0A2A  
                                          l1889 09F4                                            l1993 1852  
                                          l1979 1684                                            l1899 0A3A  
                                          l1995 1860                                            l1987 1828  
                                          l1997 187E                                            l1989 183E  
                                          l1999 188E                                            STR_1 0882  
                                          STR_2 088C                                            STR_3 0891  
                                          STR_4 088F                                            STR_5 0888  
                                          STR_6 085A                                            STR_7 0891  
                                          STR_8 088F                                            STR_9 0867  
                                          u1000 0922                                            u1001 091E  
                                          u1010 0932                                            u1011 092E  
                                          u1100 0BD6                                            u1020 0968  
                                          u1101 0BD2                                            u1021 0964  
                                          u1110 0BF0                                            u1030 0978  
                                          u1111 0BEC                                            u1031 0974  
                                          u1120 0C38                                            u1040 0AF2  
                                          u1200 183E                                            u1121 0C34  
                                          u1201 183A                                            u1130 0C66  
                                          u1050 0B4C                                            u1210 1860  
                                          u1131 0C62                                            u1051 0B48  
                                          u1211 185C                                            u1140 0CA0  
                                          u1060 0B6C                                            u1300 13E6  
                                          u1220 187E                                            u1141 0C9C  
                                          u1061 0B68                                            u1045 0AE8  
                                          u1301 13E2                                            u1221 187A  
                                          u1150 1608                                            u1070 0B7E  
                                          u1310 1420                                            u1230 12A0  
                                          u1151 1604                                            u1071 0B7A  
                                          u1311 141C                                            u1231 129C  
                                          u1160 1646                                            u1080 0BAC  
                                          u1320 142E                                            u1240 12AE  
                                          u1400 0CDC                                            u1161 1642  
                                          u1081 0BA8                                            u1321 142A  
                                          u1241 12AA                                            u1401 0CD8  
                                          u1330 193E                                            u1170 1664  
                                          u1090 0BC2                                            u1250 130A  
                                          u1410 0D52                                            u1171 1660  
                                          u1091 0BBE                                            u1251 1306  
                                          u1411 0D4E                                            u1340 1966  
                                          u1180 1684                                            u1260 1360  
                                          u1500 103E                                            u1420 0D60  
                                          u1181 1680                                            u1261 135C  
                                          u1501 103A                                            u1421 0D5C  
                                          _LATA 000F89                                            u1350 1976  
                                          u1190 16D4                                            u1270 13AA  
                                          u1510 1060                                            u1430 0DB4  
                                          _LATB 000F8A                                            u1351 1972  
                                          u1191 16D0                                            u1271 13A6  
                                          u1511 105C                                            u1431 0DB0  
                                          _LATC 000F8B                                            u1280 13C8  
                                          u1360 14E0                                            u1440 0DDA  
                                          u1600 109C                                            u1337 1934  
                                          u1281 13C4                                            u1361 14DC  
                                          u1441 0DD6                                            u1601 1098  
                                          u1290 13D8                                            u1370 158A  
                                          u1450 0E60                                            u1610 1178  
                                          u1347 195C                                            u1291 13D4  
                                          u1371 1586                                            u1451 0E5C  
                                          u1611 1174                                            u1380 15D8  
                                          u1460 0E78                                            u1700 1284  
                                          u1620 1188                                            u1381 15D4  
                                          u1461 0E74                                            u1701 127E  
                                          u1621 1182                                            u1390 1772  
                                          u1470 0EB6                                            u1391 176E  
                                          u1471 0EB2                                            u1480 0ECE  
                                          u1640 11BE                                            u1481 0ECA  
                                          u1641 11BA                                            u1490 0F00  
                                          u1650 11CE                                            u1491 0EFC  
                                          u1715 1286                                            u1651 11C8  
                                          u1635 118A                                            u1670 1204  
                                          u1727 123C                                            u1671 1200  
                                          u1680 1214                                            u1737 1266  
                                          u1681 120E                                            u1665 11D0  
                                          u1695 1216                                            _TMR0 000FD6  
                                          _WPUB 000F85                                   _EUSART1_Write 1A52  
                                          _cont 0045                                            _main 106E  
                                          fsr0h 000FEA                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          btemp 005B                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00E2  
                                  ___param_bank 000000                         __end_of_TMR0_Initialize 1A7C  
                              __end_of_INT1_ISR 1AD2                   __end_of_OSCILLATOR_Initialize 1AA2  
                                         ?_main 0001                                           STR_10 0870  
                                         STR_11 0879                                           STR_12 0849  
                               __end_of___flmul 0CBE                                 __end_of___lldiv 1828  
                                         _T0CON 000FD5                    __end_of_EUSART1_Write_string 1978  
                               __end_of___llmod 18B0                                           _LATB0 007C50  
                                         _LATA3 007C4B                                           _LATA5 007C4D  
                                         _LATB7 007C57                                           _INT1E 007F83  
                                         i2l243 00C8                                           i2l244 00B6  
                                         i2l262 1A10                                           i2l247 00CE  
                                         i2l258 1AD0                                           i2l268 1AD6  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                             ___lmul@multiplicand 0009  
                                ?_INT1_CallBack 0001                                 __end_of_dpowers 0829  
                ??_INT1_DefaultInterruptHandler 0001                                           _texto 0048  
                      _INT1_SetInterruptHandler 1AA2                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         status 000FD8                                           wtemp8 005C  
                               __end_of_sprintf 106E              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 1A12                      __end_of_EUSART1_Initialize 19B6  
                                  __end_of_main 128E                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 003C                                   __activetblptr 000002  
                              ___llmod@dividend 0012                                          _ACTCON 000FB5  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          _INT1IE 007F83  
                                        _INT1IF 007F80                                          i2l2201 001A  
                                        i2l2211 0066                                          i2l2203 0028  
                                        i2l2221 0098                                          i2l2213 006A  
                                        i2l2205 0036                                          i2l2071 1ACC  
                                        i2l2231 00C0                                          i2l2223 00A6  
                                        i2l2215 0072                                          i2l2207 0044  
                                        i2l2225 00AC                                          i2l2217 0082  
                                        i2l2209 0054                                          i2l2233 00C8  
                                        i2l2235 00CA                                          i2l2227 00B0  
                                        i2l2219 0086                                          i2l2069 1ACA  
                                        i2l2229 00B8                                          i2l1801 19F6  
                                        i2l1799 19E4                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                          _TMR0IF 007F92  
                                        _TXREG1 000FAD                                __end_of___xxtofl 1442  
                                        _TXSTA1 000FAC                                          ___flge 15DA  
                                        ___lmul 18B0                                       ??___flmul 001B  
                                     ??___lldiv 000D                                       ??___llmod 001A  
                                        _cuenta 0042                        ?_EUSART1_SetErrorHandler 0005  
                              ?_TMR0_Initialize 0001                                          clear_0 1A18  
                                        clear_1 1A24                                          isa$std 000001  
                                        _tiempo 0060                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                 ??_INT1_CallBack 0001  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0005        INT1_SetInterruptHandler@InterruptHandler 0005  
                                     ??_sprintf 0023                                      ___flge@ff1 002C  
                                    ___flge@ff2 0030                                    ___xxtofl@arg 000F  
                                  ___xxtofl@exp 000E                               _SYSTEM_Initialize 1A38  
                                  ___xxtofl@val 0005                                      __accesstop 0060  
                       __end_of__initialization 1A2A                                       ?_INT1_ISR 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                          _EUSART1_Write_string 191A                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0007                       __end_of_SYSTEM_Initialize 1A52  
                                    __pbssBANK0 0060                                      ??_INT1_ISR 0001  
                                    __pnvCOMRAM 0052                           ?_EUSART1_Write_string 0006  
               __end_of_EUSART1_SetErrorHandler 1ACA                                         ?___flge 002C  
                                       ?___lmul 0005                                  ___lmul@product 000D  
        __end_of_EUSART1_SetFramingErrorHandler 1AC0                  _EUSART1_SetFramingErrorHandler 1AB6  
                    ??_INT1_SetInterruptHandler 0007                                         _INTEDG1 007F8D  
                                     ?___xxtofl 0005                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         i2u90_48 19FC  
                                       i2u90_49 1A10                                         _SPBRGH1 000FB0  
                                       i2u89_40 19F6                                         i2u89_41 19F2  
                                _Hash_algoritmo 16DE                                         __Hparam 0000  
                                       __Lparam 0000                                         ___flmul 0894  
                                       ___lldiv 1784                                         ___llmod 1828  
                                  __psmallconst 0800                                         __pcinit 1A12  
                                       __ramtop 0800                                         __ptext0 106E  
                                       __ptext1 0CBE                                         __ptext2 1828  
                                       __ptext3 1784                                         __ptext4 1442  
                                       __ptext5 128E                                         __ptext6 0894  
                                       __ptext7 15DA                                         __ptext8 1A38  
                                       __ptext9 1A68                                       _T0CONbits 000FD5  
                             __end_of_hexpowers 0849                                         _dpowers 0801  
                         _OSCILLATOR_Initialize 1A90                                      ??___xxtofl 0009  
                        __end_of_Hash_algoritmo 1784                              _EUSART1_Initialize 1978  
                      ??_PIN_MANAGER_Initialize 0005                        EUSART1_Write_string@data 0006  
                                       _sprintf 0CBE                            end_of_initialization 1A2A  
                           ?_EUSART1_Initialize 0001                          ??_EUSART1_Write_string 0008  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0056  
                             __end_of_normaliza 15DA                                 ___lldiv@divisor 0009  
                               ___lldiv@counter 0011                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                          ??_EUSART1_Initialize 0007                           _INT1_InterruptHandler 0052  
                                 ___xxtofl@sign 000D                                 ?_Hash_algoritmo 0011  
                                     _TRISAbits 000F92                                       _TRISBbits 000F93  
                           EUSART1_Write@txData 0005                                     ___flmul@grs 0020  
                  __end_of_INTERRUPT_Initialize 1AD6                                  __end_of___flge 16DE  
                                __end_of___lmul 191A                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 1A12                           __end_of_INT1_CallBack 1A12  
                         __end_of_EUSART1_Write 1A68                                 ___llmod@divisor 0016  
                               ___llmod@counter 001A                                        ??___flge 0034  
                                      ??___lmul 000D                      __end_of_EXT_INT_Initialize 1A90  
                                     ___flmul@a 0017                                       ___flmul@b 0013  
                                   __pbssCOMRAM 003E                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                     sprintf@flag 002E  
                                   sprintf@prec 0026                          _PIN_MANAGER_Initialize 19B6  
                                     __pintcode 0008                                        ?___flmul 0013  
                                     _codigo_ir 003E                                        ?___lldiv 0005  
                                      ?___llmod 0012                         Hash_algoritmo@hash_acum 001B  
                  ??_INTERRUPT_InterruptManager 0001                                     __smallconst 0800  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                   _flag_codigo 0046                            _EUSART1_ErrorHandler 0054  
                       _EUSART1_SetErrorHandler 1AC0                                       _hexpowers 0829  
                                      ?_sprintf 001B                            _INTERRUPT_Initialize 1AD2  
                             ??_TMR0_Initialize 0005                                        _INT1_ISR 1ACA  
       EUSART1_SetErrorHandler@interruptHandler 0005                       ?_INT1_SetInterruptHandler 0005  
                                      i2u152_40 0028                                        i2u152_41 0024  
                                      i2u153_40 0036                                        i2u153_41 0032  
                                      i2u154_40 0044                                        i2u154_41 0040  
                                      i2u155_40 0054                                        i2u155_41 0050  
                                      i2u156_40 0066                                        i2u156_41 0062  
                                      i2u157_40 0096                                        i2u157_41 0090  
                                      i2u158_45 0098                                        i2u159_40 00A6  
                                      i2u159_41 00A2                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                       _normaliza 1442  
                                     _timer_aux 0044                                ??_Hash_algoritmo 0015  
                             ___lmul@multiplier 0005                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                           ?_INTERRUPT_Initialize 0001  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                    ?_normaliza 0001                         ??_OSCILLATOR_Initialize 0005  
                     ??_EUSART1_SetErrorHandler 0007                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@idx 0025                                      sprintf@val 002A  
                                      ___xxtofl 128E                                        __ptext10 19B6  
                                      __ptext11 1A90                                        __ptext20 18B0  
                                      __ptext12 1AD2                                        __ptext21 191A  
                                      __ptext13 1A7C                                        __ptext22 1A52  
                                      __ptext14 1AA2                                        __ptext15 1978  
                                      __ptext24 1ACA                                        __ptext16 1AAC  
                                      __ptext25 19E4                                        __ptext17 1AB6  
                                      __ptext26 1AD6                                        __ptext18 1AC0  
                                      __ptext27 0000                                        __ptext19 16DE  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                      int$flags 005B              __end_of_INTERRUPT_InterruptManager 00E2  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 0058  
          __end_of_INT1_DefaultInterruptHandler 1AD8                    _INT1_DefaultInterruptHandler 1AD6  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0005  
                            _EXT_INT_Initialize 1A7C                                        intlevel2 0000  
                                     sprintf@ap 0028                                       sprintf@sp 001B  
                              ___lldiv@dividend 0005                         ?_PIN_MANAGER_Initialize 0001  
                           ?_EXT_INT_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1AB6  
                _EUSART1_SetOverrunErrorHandler 1AAC                                      _RCSTA1bits 000FAB  
                                   ??_normaliza 0038  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                            _eusart1RxLastError 0047                            ??_EXT_INT_Initialize 0007  
                                      sprintf@c 002F                                        sprintf@f 001D  
               fp__INT1_DefaultInterruptHandler 0000                   ?_INT1_DefaultInterruptHandler 0001  
                              ___lldiv@quotient 000D                                 _TMR0_Initialize 1A68  
              __end_of_INT1_SetInterruptHandler 1AAC                  __end_of_PIN_MANAGER_Initialize 19E4  
