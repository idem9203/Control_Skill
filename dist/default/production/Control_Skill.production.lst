

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 20 12:53:24 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Generated 09/02/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F25K50 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    84  0000                     
    85 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    86  0000                     
    87 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    88  0000                     
    89                           	psect	smallconst
    90  000800                     __psmallconst:
    91                           	callstack 0
    92  000800  00                 	db	0
    93  000801                     _hexpowers:
    94                           	callstack 0
    95  000801  0001               	dw	1
    96  000803  0000               	dw	0
    97  000805  0010               	dw	16
    98  000807  0000               	dw	0
    99  000809  0100               	dw	256
   100  00080B  0000               	dw	0
   101  00080D  1000               	dw	4096
   102  00080F  0000               	dw	0
   103  000811  0000               	dw	0
   104  000813  0001               	dw	1
   105  000815  0000               	dw	0
   106  000817  0010               	dw	16
   107  000819  0000               	dw	0
   108  00081B  0100               	dw	256
   109  00081D  0000               	dw	0
   110  00081F  1000               	dw	4096
   111  000821                     __end_of_hexpowers:
   112                           	callstack 0
   113  0000                     _TMR0L	set	4054
   114  0000                     _TMR0H	set	4055
   115  0000                     _TXREG1	set	4013
   116  0000                     _RCREG1	set	4014
   117  0000                     _SPBRG1	set	4015
   118  0000                     _TXSTA1	set	4012
   119  0000                     _TMR0	set	4054
   120  0000                     _TRISBbits	set	3987
   121  0000                     _T0CON	set	4053
   122  0000                     _RCSTA1bits	set	4011
   123  0000                     _TXSTA1bits	set	4012
   124  0000                     _LATB0	set	31824
   125  0000                     _LATA5	set	31821
   126  0000                     _LATA4	set	31820
   127  0000                     _LATA3	set	31819
   128  0000                     _INT1E	set	32643
   129  0000                     _TMR0IF	set	32658
   130  0000                     _INTEDG1	set	32653
   131  0000                     _INT1IF	set	32640
   132  0000                     _PLLRDY	set	32407
   133  0000                     _ANSELA	set	3931
   134  0000                     _ANSELB	set	3932
   135  0000                     _ANSELC	set	3933
   136  0000                     _LATA	set	3977
   137  0000                     _OSCTUNE	set	3995
   138  0000                     _PIR1bits	set	3998
   139  0000                     _RCSTA1	set	4011
   140  0000                     _BAUDCON1	set	4024
   141  0000                     _RCONbits	set	4048
   142  0000                     _OSCCON2	set	4050
   143  0000                     _OSCCON	set	4051
   144  0000                     _ACTCON	set	4021
   145  0000                     _SPBRGH1	set	4016
   146  0000                     _T0CONbits	set	4053
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _TRISA	set	3986
   149  0000                     _LATC	set	3979
   150  0000                     _LATB	set	3978
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISB	set	3987
   153  0000                     _WPUB	set	3973
   154  0000                     _INTCONbits	set	4082
   155  0000                     _INTCON3bits	set	4080
   156  000821                     STR_12:
   157  000821  30                 	db	48	;'0'
   158  000822  31                 	db	49	;'1'
   159  000823  32                 	db	50	;'2'
   160  000824  33                 	db	51	;'3'
   161  000825  34                 	db	52	;'4'
   162  000826  35                 	db	53	;'5'
   163  000827  36                 	db	54	;'6'
   164  000828  37                 	db	55	;'7'
   165  000829  38                 	db	56	;'8'
   166  00082A  39                 	db	57	;'9'
   167  00082B  61                 	db	97	;'a'
   168  00082C  62                 	db	98	;'b'
   169  00082D  63                 	db	99	;'c'
   170  00082E  64                 	db	100	;'d'
   171  00082F  65                 	db	101	;'e'
   172  000830  66                 	db	102	;'f'
   173  000831  00                 	db	0
   174  000832                     STR_5:
   175  000832  43                 	db	67	;'C'
   176  000833  4F                 	db	79	;'O'
   177  000834  44                 	db	68	;'D'
   178  000835  49                 	db	73	;'I'
   179  000836  47                 	db	71	;'G'
   180  000837  4F                 	db	79	;'O'
   181  000838  20                 	db	32
   182  000839  49                 	db	73	;'I'
   183  00083A  52                 	db	82	;'R'
   184  00083B  20                 	db	32
   185  00083C  3D                 	db	61	;'='
   186  00083D  20                 	db	32
   187  00083E  00                 	db	0
   188  00083F                     STR_8:
   189  00083F  43                 	db	67	;'C'
   190  000840  4F                 	db	79	;'O'
   191  000841  4D                 	db	77	;'M'
   192  000842  41                 	db	65	;'A'
   193  000843  4E                 	db	78	;'N'
   194  000844  44                 	db	68	;'D'
   195  000845  4F                 	db	79	;'O'
   196  000846  31                 	db	49	;'1'
   197  000847  00                 	db	0
   198  000848                     STR_9:
   199  000848  43                 	db	67	;'C'
   200  000849  4F                 	db	79	;'O'
   201  00084A  4D                 	db	77	;'M'
   202  00084B  41                 	db	65	;'A'
   203  00084C  4E                 	db	78	;'N'
   204  00084D  44                 	db	68	;'D'
   205  00084E  4F                 	db	79	;'O'
   206  00084F  32                 	db	50	;'2'
   207  000850  00                 	db	0
   208  000851                     STR_10:
   209  000851  43                 	db	67	;'C'
   210  000852  4F                 	db	79	;'O'
   211  000853  4D                 	db	77	;'M'
   212  000854  41                 	db	65	;'A'
   213  000855  4E                 	db	78	;'N'
   214  000856  44                 	db	68	;'D'
   215  000857  4F                 	db	79	;'O'
   216  000858  33                 	db	51	;'3'
   217  000859  00                 	db	0
   218  00085A                     STR_1:
   219  00085A  53                 	db	83	;'S'
   220  00085B  6F                 	db	111	;'o'
   221  00085C  6E                 	db	110	;'n'
   222  00085D  3A                 	db	58	;':'
   223  00085E  20                 	db	32
   224  00085F  00                 	db	0
   225  000860                     STR_4:
   226  000860  25                 	db	37
   227  000861  6C                 	db	108	;'l'
   228  000862  78                 	db	120	;'x'
   229  000863  00                 	db	0
   230  000864                     STR_3:
   231  000864  0A                 	db	10
   232  000865  00                 	db	0
   233  000866                     STR_2:
   234  000866  0D                 	db	13
   235  000867  00                 	db	0
   236  000868  00                 	db	0	; dummy byte at the end
   237  0000                     
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241  001862                     __pcinit:
   242                           	callstack 0
   243  001862                     start_initialization:
   244                           	callstack 0
   245  001862                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Clear objects allocated to BANK0 (70 bytes)
   249  001862  EE00  F060         	lfsr	0,__pbssBANK0
   250  001866  0E46               	movlw	70
   251  001868                     clear_0:
   252  001868  6AEE               	clrf	postinc0,c
   253  00186A  06E8               	decf	wreg,f,c
   254  00186C  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to COMRAM (32 bytes)
   257  00186E  EE00  F03B         	lfsr	0,__pbssCOMRAM
   258  001872  0E20               	movlw	32
   259  001874                     clear_1:
   260  001874  6AEE               	clrf	postinc0,c
   261  001876  06E8               	decf	wreg,f,c
   262  001878  E1FD               	bnz	clear_1
   263  00187A                     end_of_initialization:
   264                           	callstack 0
   265  00187A                     __end_of__initialization:
   266                           	callstack 0
   267  00187A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  00187C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  00187E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   270  001880  6EF8               	movwf	tblptru,c
   271  001882  0100               	movlb	0
   272  001884  EF4A  F006         	goto	_main	;jump to C main() function
   273                           
   274                           	psect	bssCOMRAM
   275  00003B                     __pbssCOMRAM:
   276                           	callstack 0
   277  00003B                     _codigo_ir:
   278                           	callstack 0
   279  00003B                     	ds	4
   280  00003F                     _INT1_InterruptHandler:
   281                           	callstack 0
   282  00003F                     	ds	2
   283  000041                     _timer0ReloadVal:
   284                           	callstack 0
   285  000041                     	ds	2
   286  000043                     _TMR0_InterruptHandler:
   287                           	callstack 0
   288  000043                     	ds	2
   289  000045                     _cuenta:
   290                           	callstack 0
   291  000045                     	ds	2
   292  000047                     _EUSART1_ErrorHandler:
   293                           	callstack 0
   294  000047                     	ds	2
   295  000049                     _EUSART1_OverrunErrorHandler:
   296                           	callstack 0
   297  000049                     	ds	2
   298  00004B                     _EUSART1_FramingErrorHandler:
   299                           	callstack 0
   300  00004B                     	ds	2
   301  00004D                     _timer_aux:
   302                           	callstack 0
   303  00004D                     	ds	1
   304  00004E                     _cont:
   305                           	callstack 0
   306  00004E                     	ds	1
   307  00004F                     _flag_codigo:
   308                           	callstack 0
   309  00004F                     	ds	1
   310  000050                     _eusart1RxLastError:
   311                           	callstack 0
   312  000050                     	ds	1
   313  000051                     _texto:
   314                           	callstack 0
   315  000051                     	ds	10
   316                           
   317                           	psect	bssBANK0
   318  000060                     __pbssBANK0:
   319                           	callstack 0
   320  000060                     _tiempo:
   321                           	callstack 0
   322  000060                     	ds	70
   323                           
   324                           	psect	cstackBANK0
   325  0000A6                     __pcstackBANK0:
   326                           	callstack 0
   327  0000A6                     ??_normaliza:
   328                           
   329                           ; 1 bytes @ 0x0
   330  0000A6                     	ds	4
   331                           
   332                           	psect	cstackCOMRAM
   333  000001                     __pcstackCOMRAM:
   334                           	callstack 0
   335  000001                     ??_INTERRUPT_InterruptManager:
   336  000001                     
   337                           ; 1 bytes @ 0x0
   338  000001                     	ds	4
   339  000005                     ?___lmul:
   340                           	callstack 0
   341  000005                     ?___lldiv:
   342                           	callstack 0
   343  000005                     ?___xxtofl:
   344                           	callstack 0
   345  000005                     EUSART1_Write@txData:
   346                           	callstack 0
   347  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   348                           	callstack 0
   349  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   350                           	callstack 0
   351  000005                     EUSART1_SetErrorHandler@interruptHandler:
   352                           	callstack 0
   353  000005                     TMR0_SetInterruptHandler@InterruptHandler:
   354                           	callstack 0
   355  000005                     INT1_SetInterruptHandler@InterruptHandler:
   356                           	callstack 0
   357  000005                     memcpy@d1:
   358                           	callstack 0
   359  000005                     ___lmul@multiplier:
   360                           	callstack 0
   361  000005                     ___lldiv@dividend:
   362                           	callstack 0
   363  000005                     ___xxtofl@val:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x4
   367  000005                     	ds	1
   368  000006                     putch@txData:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x5
   372  000006                     	ds	1
   373  000007                     ??_TMR0_Initialize:
   374  000007                     memcpy@s1:
   375                           	callstack 0
   376                           
   377                           ; 3 bytes @ 0x6
   378  000007                     	ds	2
   379  000009                     ??___xxtofl:
   380  000009                     ___lmul@multiplicand:
   381                           	callstack 0
   382  000009                     ___lldiv@divisor:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x8
   386  000009                     	ds	1
   387  00000A                     memcpy@n:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x9
   391  00000A                     	ds	2
   392  00000C                     memcpy@s:
   393                           	callstack 0
   394                           
   395                           ; 3 bytes @ 0xB
   396  00000C                     	ds	1
   397  00000D                     ___xxtofl@sign:
   398                           	callstack 0
   399  00000D                     ___lmul@product:
   400                           	callstack 0
   401  00000D                     ___lldiv@quotient:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0xC
   405  00000D                     	ds	1
   406  00000E                     ___xxtofl@exp:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0xD
   410  00000E                     	ds	1
   411  00000F                     memcpy@d:
   412                           	callstack 0
   413  00000F                     ___xxtofl@arg:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0xE
   417  00000F                     	ds	2
   418  000011                     ?_Hash_algoritmo:
   419                           	callstack 0
   420  000011                     ___lldiv@counter:
   421                           	callstack 0
   422  000011                     memcpy@tmp:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x10
   426  000011                     	ds	1
   427  000012                     ?_sprintf:
   428                           	callstack 0
   429  000012                     sprintf@sp:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x11
   433  000012                     	ds	1
   434  000013                     ?___flmul:
   435                           	callstack 0
   436  000013                     ___flmul@b:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x12
   440  000013                     	ds	1
   441  000014                     sprintf@f:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x13
   445  000014                     	ds	1
   446  000015                     ??_Hash_algoritmo:
   447                           
   448                           ; 1 bytes @ 0x14
   449  000015                     	ds	2
   450  000017                     ___flmul@a:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x16
   454  000017                     	ds	3
   455  00001A                     ??_sprintf:
   456                           
   457                           ; 1 bytes @ 0x19
   458  00001A                     	ds	1
   459  00001B                     ??___flmul:
   460  00001B                     Hash_algoritmo@hash_acum:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x1A
   464  00001B                     	ds	1
   465  00001C                     sprintf@idx:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x1B
   469  00001C                     	ds	1
   470  00001D                     sprintf@flag:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x1C
   474  00001D                     	ds	1
   475  00001E                     sprintf@prec:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x1D
   479  00001E                     	ds	1
   480  00001F                     ___flmul@sign:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x1E
   484  00001F                     	ds	1
   485  000020                     sprintf@val:
   486                           	callstack 0
   487  000020                     ___flmul@grs:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x1F
   491  000020                     	ds	4
   492  000024                     ___flmul@aexp:
   493                           	callstack 0
   494  000024                     sprintf@ap:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x23
   498  000024                     	ds	1
   499  000025                     ___flmul@bexp:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x24
   503  000025                     	ds	1
   504  000026                     sprintf@c:
   505                           	callstack 0
   506  000026                     ___flmul@prod:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x25
   510  000026                     	ds	4
   511  00002A                     ___flmul@temp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x29
   515  00002A                     	ds	2
   516  00002C                     ___flge@ff1:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x2B
   520  00002C                     	ds	4
   521  000030                     ___flge@ff2:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x2F
   525  000030                     	ds	4
   526  000034                     ??___flge:
   527                           
   528                           ; 1 bytes @ 0x33
   529  000034                     	ds	4
   530  000038                     ??_main:
   531                           
   532                           ; 1 bytes @ 0x37
   533  000038                     	ds	3
   534                           
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 198 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   554 ;;      Params:         0       0       0       0       0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0       0       0       0       0
   556 ;;      Temps:          3       0       0       0       0       0       0       0       0
   557 ;;      Totals:         3       0       0       0       0       0       0       0       0
   558 ;;Total ram usage:        3 bytes
   559 ;; Hardware stack levels required when called: 7
   560 ;; This function calls:
   561 ;;		_EUSART1_Write
   562 ;;		_Hash_algoritmo
   563 ;;		_SYSTEM_Initialize
   564 ;;		_memcpy
   565 ;;		_normaliza
   566 ;;		_putch
   567 ;;		_sprintf
   568 ;; This function is called by:
   569 ;;		Startup code after reset
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text0
   574  000C94                     __ptext0:
   575                           	callstack 0
   576  000C94                     _main:
   577                           	callstack 24
   578  000C94                     
   579                           ;main.c: 201: SYSTEM_Initialize();
   580  000C94  EC54  F00C         	call	_SYSTEM_Initialize	;wreg free
   581  000C98                     
   582                           ;main.c: 203: ANSELA = 0b00000111;
   583  000C98  0E07               	movlw	7
   584  000C9A  010F               	movlb	15	; () banked
   585  000C9C  6F5B               	movwf	91,b	;volatile
   586  000C9E                     
   587                           ; BSR set to: 15
   588                           ;main.c: 204: ANSELB = 0b01000000;
   589  000C9E  0E40               	movlw	64
   590  000CA0  6F5C               	movwf	92,b	;volatile
   591  000CA2                     
   592                           ; BSR set to: 15
   593                           ;main.c: 205: ANSELC = 0x00;
   594  000CA2  0E00               	movlw	0
   595  000CA4  6F5D               	movwf	93,b	;volatile
   596  000CA6                     
   597                           ; BSR set to: 15
   598                           ;main.c: 206: TRISBbits.TRISB1 = 1;
   599  000CA6  8293               	bsf	147,1,c	;volatile
   600  000CA8                     
   601                           ; BSR set to: 15
   602                           ;main.c: 213: (INTCONbits.GIE = 1);
   603  000CA8  8EF2               	bsf	242,7,c	;volatile
   604  000CAA                     
   605                           ; BSR set to: 15
   606                           ;main.c: 219: (INTCONbits.PEIE = 1);
   607  000CAA  8CF2               	bsf	242,6,c	;volatile
   608  000CAC                     l2285:
   609                           
   610                           ;main.c: 229: {;main.c: 231: if (flag_codigo == 1)
   611  000CAC  044F               	decf	_flag_codigo^0,w,c
   612  000CAE  A4D8               	btfss	status,2,c
   613  000CB0  EF5C  F006         	goto	u1601
   614  000CB4  EF5E  F006         	goto	u1600
   615  000CB8                     u1601:
   616  000CB8  EF23  F007         	goto	l2341
   617  000CBC                     u1600:
   618  000CBC                     
   619                           ;main.c: 232: {;main.c: 235: normaliza();
   620  000CBC  EC06  F009         	call	_normaliza	;wreg free
   621  000CC0                     
   622                           ;main.c: 236: codigo_ir = Hash_algoritmo();
   623  000CC0  ECB9  F00A         	call	_Hash_algoritmo	;wreg free
   624  000CC4  C011  F03B         	movff	?_Hash_algoritmo,_codigo_ir
   625  000CC8  C012  F03C         	movff	?_Hash_algoritmo+1,_codigo_ir+1
   626  000CCC  C013  F03D         	movff	?_Hash_algoritmo+2,_codigo_ir+2
   627  000CD0  C014  F03E         	movff	?_Hash_algoritmo+3,_codigo_ir+3
   628  000CD4                     
   629                           ;main.c: 237: EUSART1_Write("Son: ");
   630  000CD4  0E5A               	movlw	STR_1& (0+255)
   631  000CD6  EC61  F00C         	call	_EUSART1_Write
   632  000CDA                     
   633                           ;main.c: 238: memcpy(texto, cuenta, sizeof(cuenta));
   634  000CDA  0E51               	movlw	low _texto
   635  000CDC  6E05               	movwf	memcpy@d1^0,c
   636  000CDE  0E00               	movlw	high _texto
   637  000CE0  6E06               	movwf	(memcpy@d1+1)^0,c
   638  000CE2  C045  F038         	movff	_cuenta,??_main
   639  000CE6  C046  F039         	movff	_cuenta+1,??_main+1
   640  000CEA  6A3A               	clrf	(??_main+2)^0,c
   641  000CEC  C038  F007         	movff	??_main,memcpy@s1
   642  000CF0  C039  F008         	movff	??_main+1,memcpy@s1+1
   643  000CF4  C03A  F009         	movff	??_main+2,memcpy@s1+2
   644  000CF8  0E00               	movlw	0
   645  000CFA  6E0B               	movwf	(memcpy@n+1)^0,c
   646  000CFC  0E02               	movlw	2
   647  000CFE  6E0A               	movwf	memcpy@n^0,c
   648  000D00  EC93  F00B         	call	_memcpy	;wreg free
   649  000D04                     
   650                           ;main.c: 239: EUSART1_Write(texto);
   651  000D04  0E51               	movlw	_texto& (0+255)
   652  000D06  EC61  F00C         	call	_EUSART1_Write
   653  000D0A                     
   654                           ;main.c: 240: EUSART1_Write("\r");
   655  000D0A  0E66               	movlw	STR_2& (0+255)
   656  000D0C  EC61  F00C         	call	_EUSART1_Write
   657  000D10                     
   658                           ;main.c: 241: EUSART1_Write("\n");
   659  000D10  0E64               	movlw	STR_3& (0+255)
   660  000D12  EC61  F00C         	call	_EUSART1_Write
   661                           
   662                           ;main.c: 242: sprintf(texto, "%lx", codigo_ir);
   663  000D16  0E51               	movlw	low _texto
   664  000D18  6E12               	movwf	sprintf@sp^0,c
   665  000D1A  0E00               	movlw	high _texto
   666  000D1C  6E13               	movwf	(sprintf@sp+1)^0,c
   667  000D1E  0E60               	movlw	low STR_4
   668  000D20  6E14               	movwf	sprintf@f^0,c
   669  000D22  0E08               	movlw	high STR_4
   670  000D24  6E15               	movwf	(sprintf@f+1)^0,c
   671  000D26  C03B  F016         	movff	_codigo_ir,?_sprintf+4
   672  000D2A  C03C  F017         	movff	_codigo_ir+1,?_sprintf+5
   673  000D2E  C03D  F018         	movff	_codigo_ir+2,?_sprintf+6
   674  000D32  C03E  F019         	movff	_codigo_ir+3,?_sprintf+7
   675  000D36  EC3E  F007         	call	_sprintf	;wreg free
   676  000D3A                     
   677                           ;main.c: 243: EUSART1_Write("CODIGO IR = ");
   678  000D3A  0E32               	movlw	STR_5& (0+255)
   679  000D3C  EC61  F00C         	call	_EUSART1_Write
   680  000D40                     
   681                           ;main.c: 244: EUSART1_Write(texto);
   682  000D40  0E51               	movlw	_texto& (0+255)
   683  000D42  EC61  F00C         	call	_EUSART1_Write
   684  000D46                     
   685                           ;main.c: 245: EUSART1_Write("\r");
   686  000D46  0E66               	movlw	STR_2& (0+255)
   687  000D48  EC61  F00C         	call	_EUSART1_Write
   688  000D4C                     
   689                           ;main.c: 246: EUSART1_Write("\n");
   690  000D4C  0E64               	movlw	STR_3& (0+255)
   691  000D4E  EC61  F00C         	call	_EUSART1_Write
   692  000D52                     
   693                           ;main.c: 248: if (codigo_ir == 0xBF681DA0)
   694  000D52  0EA0               	movlw	160
   695  000D54  183B               	xorwf	_codigo_ir^0,w,c
   696  000D56  E10D               	bnz	u1611
   697  000D58  0E1D               	movlw	29
   698  000D5A  183C               	xorwf	(_codigo_ir+1)^0,w,c
   699  000D5C  E10A               	bnz	u1611
   700  000D5E  0E68               	movlw	104
   701  000D60  183D               	xorwf	(_codigo_ir+2)^0,w,c
   702  000D62  E107               	bnz	u1611
   703  000D64  0EBF               	movlw	191
   704  000D66  183E               	xorwf	(_codigo_ir+3)^0,w,c
   705  000D68  A4D8               	btfss	status,2,c
   706  000D6A  EFB9  F006         	goto	u1611
   707  000D6E  EFBB  F006         	goto	u1610
   708  000D72                     u1611:
   709  000D72  EFC9  F006         	goto	l2315
   710  000D76                     u1610:
   711  000D76                     
   712                           ;main.c: 249: {;main.c: 250: LATA3 =~ LATA3;
   713  000D76  A689               	btfss	3977,3,c	;volatile
   714  000D78  EFC0  F006         	goto	u1621
   715  000D7C  EFC3  F006         	goto	u1620
   716  000D80                     u1621:
   717  000D80  8689               	bsf	3977,3,c	;volatile
   718  000D82  EFC4  F006         	goto	u1635
   719  000D86                     u1620:
   720  000D86  9689               	bcf	3977,3,c	;volatile
   721  000D88                     u1635:
   722  000D88                     
   723                           ;main.c: 251: EUSART1_Write("COMANDO1");
   724  000D88  0E3F               	movlw	STR_8& (0+255)
   725  000D8A  EC61  F00C         	call	_EUSART1_Write
   726                           
   727                           ;main.c: 253: }
   728  000D8E  EF07  F007         	goto	l2327
   729  000D92                     l2315:
   730                           
   731                           ;main.c: 254: else if (codigo_ir == 0xBF681DA0)
   732  000D92  0EA0               	movlw	160
   733  000D94  183B               	xorwf	_codigo_ir^0,w,c
   734  000D96  E10D               	bnz	u1641
   735  000D98  0E1D               	movlw	29
   736  000D9A  183C               	xorwf	(_codigo_ir+1)^0,w,c
   737  000D9C  E10A               	bnz	u1641
   738  000D9E  0E68               	movlw	104
   739  000DA0  183D               	xorwf	(_codigo_ir+2)^0,w,c
   740  000DA2  E107               	bnz	u1641
   741  000DA4  0EBF               	movlw	191
   742  000DA6  183E               	xorwf	(_codigo_ir+3)^0,w,c
   743  000DA8  A4D8               	btfss	status,2,c
   744  000DAA  EFD9  F006         	goto	u1641
   745  000DAE  EFDB  F006         	goto	u1640
   746  000DB2                     u1641:
   747  000DB2  EFE9  F006         	goto	l2321
   748  000DB6                     u1640:
   749  000DB6                     
   750                           ;main.c: 255: {;main.c: 256: LATA4 =~ LATA4;
   751  000DB6  A889               	btfss	3977,4,c	;volatile
   752  000DB8  EFE0  F006         	goto	u1651
   753  000DBC  EFE3  F006         	goto	u1650
   754  000DC0                     u1651:
   755  000DC0  8889               	bsf	3977,4,c	;volatile
   756  000DC2  EFE4  F006         	goto	u1665
   757  000DC6                     u1650:
   758  000DC6  9889               	bcf	3977,4,c	;volatile
   759  000DC8                     u1665:
   760  000DC8                     
   761                           ;main.c: 257: EUSART1_Write("COMANDO2");
   762  000DC8  0E48               	movlw	STR_9& (0+255)
   763  000DCA  EC61  F00C         	call	_EUSART1_Write
   764                           
   765                           ;main.c: 258: }
   766  000DCE  EF07  F007         	goto	l2327
   767  000DD2                     l2321:
   768                           
   769                           ;main.c: 260: else if (codigo_ir == 0xBF681DA0)
   770  000DD2  0EA0               	movlw	160
   771  000DD4  183B               	xorwf	_codigo_ir^0,w,c
   772  000DD6  E10D               	bnz	u1671
   773  000DD8  0E1D               	movlw	29
   774  000DDA  183C               	xorwf	(_codigo_ir+1)^0,w,c
   775  000DDC  E10A               	bnz	u1671
   776  000DDE  0E68               	movlw	104
   777  000DE0  183D               	xorwf	(_codigo_ir+2)^0,w,c
   778  000DE2  E107               	bnz	u1671
   779  000DE4  0EBF               	movlw	191
   780  000DE6  183E               	xorwf	(_codigo_ir+3)^0,w,c
   781  000DE8  A4D8               	btfss	status,2,c
   782  000DEA  EFF9  F006         	goto	u1671
   783  000DEE  EFFB  F006         	goto	u1670
   784  000DF2                     u1671:
   785  000DF2  EF07  F007         	goto	l2327
   786  000DF6                     u1670:
   787  000DF6                     
   788                           ;main.c: 261: {;main.c: 262: LATA5 =~ LATA5;
   789  000DF6  AA89               	btfss	3977,5,c	;volatile
   790  000DF8  EF00  F007         	goto	u1681
   791  000DFC  EF03  F007         	goto	u1680
   792  000E00                     u1681:
   793  000E00  8A89               	bsf	3977,5,c	;volatile
   794  000E02  EF04  F007         	goto	u1695
   795  000E06                     u1680:
   796  000E06  9A89               	bcf	3977,5,c	;volatile
   797  000E08                     u1695:
   798  000E08                     
   799                           ;main.c: 263: EUSART1_Write("COMANDO3");
   800  000E08  0E51               	movlw	STR_10& (0+255)
   801  000E0A  EC61  F00C         	call	_EUSART1_Write
   802  000E0E                     l2327:
   803                           
   804                           ;main.c: 264: };main.c: 265: codigo_ir = 0;
   805  000E0E  0E00               	movlw	0
   806  000E10  6E3B               	movwf	_codigo_ir^0,c
   807  000E12  0E00               	movlw	0
   808  000E14  6E3C               	movwf	(_codigo_ir+1)^0,c
   809  000E16  0E00               	movlw	0
   810  000E18  6E3D               	movwf	(_codigo_ir+2)^0,c
   811  000E1A  0E00               	movlw	0
   812  000E1C  6E3E               	movwf	(_codigo_ir+3)^0,c
   813  000E1E                     
   814                           ;main.c: 267: _delay((unsigned long)((2000)*(48000000/4000.0)));
   815  000E1E  0E7A               	movlw	122
   816  000E20  6E39               	movwf	(??_main+1)^0,c
   817  000E22  0EC1               	movlw	193
   818  000E24  6E38               	movwf	??_main^0,c
   819  000E26  0E82               	movlw	130
   820  000E28                     u1727:
   821  000E28  2EE8               	decfsz	wreg,f,c
   822  000E2A  D7FE               	bra	u1727
   823  000E2C  2E38               	decfsz	??_main^0,f,c
   824  000E2E  D7FC               	bra	u1727
   825  000E30  2E39               	decfsz	(??_main+1)^0,f,c
   826  000E32  D7FA               	bra	u1727
   827  000E34                     
   828                           ;main.c: 269: flag_codigo = 0;
   829  000E34  0E00               	movlw	0
   830  000E36  6E4F               	movwf	_flag_codigo^0,c
   831  000E38                     
   832                           ;main.c: 270: cuenta = 0;
   833  000E38  0E00               	movlw	0
   834  000E3A  6E46               	movwf	(_cuenta+1)^0,c
   835  000E3C  0E00               	movlw	0
   836  000E3E  6E45               	movwf	_cuenta^0,c
   837  000E40                     
   838                           ;main.c: 271: INTEDG1 = 0;
   839  000E40  9AF1               	bcf	4081,5,c	;volatile
   840  000E42                     
   841                           ;main.c: 272: INT1IF = 0;
   842  000E42  90F0               	bcf	4080,0,c	;volatile
   843  000E44                     
   844                           ;main.c: 273: INT1E = 1;
   845  000E44  86F0               	bsf	4080,3,c	;volatile
   846  000E46                     l2341:
   847                           
   848                           ;main.c: 274: };main.c: 275: _delay((unsigned long)((80)*(48000000/4000.0)));
   849  000E46  0E05               	movlw	5
   850  000E48  6E39               	movwf	(??_main+1)^0,c
   851  000E4A  0EDF               	movlw	223
   852  000E4C  6E38               	movwf	??_main^0,c
   853  000E4E  0EBC               	movlw	188
   854  000E50                     u1737:
   855  000E50  2EE8               	decfsz	wreg,f,c
   856  000E52  D7FE               	bra	u1737
   857  000E54  2E38               	decfsz	??_main^0,f,c
   858  000E56  D7FC               	bra	u1737
   859  000E58  2E39               	decfsz	(??_main+1)^0,f,c
   860  000E5A  D7FA               	bra	u1737
   861  000E5C                     
   862                           ;main.c: 276: LATB0 =~ LATB0;
   863  000E5C  A08A               	btfss	3978,0,c	;volatile
   864  000E5E  EF33  F007         	goto	u1701
   865  000E62  EF36  F007         	goto	u1700
   866  000E66                     u1701:
   867  000E66  808A               	bsf	3978,0,c	;volatile
   868  000E68  EF37  F007         	goto	u1715
   869  000E6C                     u1700:
   870  000E6C  908A               	bcf	3978,0,c	;volatile
   871  000E6E                     u1715:
   872  000E6E                     
   873                           ;main.c: 277: putch("Son: ");
   874  000E6E  0E5A               	movlw	STR_1& (0+255)
   875  000E70  EC76  F00C         	call	_putch
   876  000E74  EF56  F006         	goto	l2285
   877  000E78  EF37  F000         	goto	start
   878  000E7C                     __end_of_main:
   879                           	callstack 0
   880                           
   881 ;; *************** function _sprintf *****************
   882 ;; Defined at:
   883 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  sp              2   17[COMRAM] PTR unsigned char 
   886 ;;		 -> texto(10), 
   887 ;;  f               2   19[COMRAM] PTR const unsigned char 
   888 ;;		 -> STR_4(4), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  idx             1   27[COMRAM] unsigned char 
   891 ;;  val             4   31[COMRAM] unsigned long 
   892 ;;  tmpval          4    0        struct .
   893 ;;  cp              3    0        PTR const unsigned char 
   894 ;;  ap              2   35[COMRAM] PTR void [1]
   895 ;;		 -> ?_sprintf(2), 
   896 ;;  prec            2   29[COMRAM] int 
   897 ;;  len             2    0        unsigned int 
   898 ;;  c               1   37[COMRAM] unsigned char 
   899 ;;  flag            1   28[COMRAM] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2   17[COMRAM] int 
   902 ;; Registers used:
   903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         8       0       0       0       0       0       0       0       0
   910 ;;      Locals:        11       0       0       0       0       0       0       0       0
   911 ;;      Temps:          2       0       0       0       0       0       0       0       0
   912 ;;      Totals:        21       0       0       0       0       0       0       0       0
   913 ;;Total ram usage:       21 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 5
   916 ;; This function calls:
   917 ;;		___lldiv
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text1
   924  000E7C                     __ptext1:
   925                           	callstack 0
   926  000E7C                     _sprintf:
   927                           	callstack 25
   928  000E7C                     
   929                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
   930  000E7C  0E16               	movlw	low (?_sprintf+4)
   931  000E7E  6E24               	movwf	sprintf@ap^0,c
   932  000E80  0E00               	movlw	high (?_sprintf+4)
   933  000E82  6E25               	movwf	(sprintf@ap+1)^0,c
   934                           
   935                           ;doprnt.c: 553: while((c = *f++)) {
   936  000E84  EF14  F008         	goto	l2161
   937  000E88                     l2115:
   938                           
   939                           ;doprnt.c: 555: if(c != '%')
   940  000E88  0E25               	movlw	37
   941  000E8A  1826               	xorwf	sprintf@c^0,w,c
   942  000E8C  B4D8               	btfsc	status,2,c
   943  000E8E  EF4B  F007         	goto	u1351
   944  000E92  EF4D  F007         	goto	u1350
   945  000E96                     u1351:
   946  000E96  EF57  F007         	goto	l2121
   947  000E9A                     u1350:
   948  000E9A                     
   949                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   950  000E9A  C012  FFD9         	movff	sprintf@sp,fsr2l
   951  000E9E  C013  FFDA         	movff	sprintf@sp+1,fsr2h
   952  000EA2  C026  FFDF         	movff	sprintf@c,indf2
   953  000EA6  4A12               	infsnz	sprintf@sp^0,f,c
   954  000EA8  2A13               	incf	(sprintf@sp+1)^0,f,c
   955                           
   956                           ;doprnt.c: 559: continue;
   957  000EAA  EF14  F008         	goto	l2161
   958  000EAE                     l2121:
   959                           
   960                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   961  000EAE  0E00               	movlw	0
   962  000EB0  6E1D               	movwf	sprintf@flag^0,c
   963  000EB2  EF5C  F007         	goto	l2127
   964  000EB6                     l2123:
   965                           
   966                           ;doprnt.c: 669: flag |= 0x10;
   967  000EB6  881D               	bsf	sprintf@flag^0,4,c
   968  000EB8                     l2127:
   969  000EB8  C014  FFF6         	movff	sprintf@f,tblptrl
   970  000EBC  C015  FFF7         	movff	sprintf@f+1,tblptrh
   971  000EC0  4A14               	infsnz	sprintf@f^0,f,c
   972  000EC2  2A15               	incf	(sprintf@f+1)^0,f,c
   973  000EC4                     	if	0	;tblptru may be non-zero
   974  000EC4                     	endif
   975  000EC4                     	if	0	;tblptru may be non-zero
   976  000EC4                     	endif
   977  000EC4  0008               	tblrd		*
   978  000EC6  CFF5 F026          	movff	tablat,sprintf@c
   979  000ECA  5026               	movf	sprintf@c^0,w,c
   980                           
   981                           ; Switch size 1, requested type "simple"
   982                           ; Number of cases is 3, Range of values is 0 to 120
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte           10     6 (average)
   986                           ;	Chosen strategy is simple_byte
   987  000ECC  0A00               	xorlw	0	; case 0
   988  000ECE  B4D8               	btfsc	status,2,c
   989  000ED0  EF25  F008         	goto	l2163
   990  000ED4  0A6C               	xorlw	108	; case 108
   991  000ED6  B4D8               	btfsc	status,2,c
   992  000ED8  EF5B  F007         	goto	l2123
   993  000EDC  0A14               	xorlw	20	; case 120
   994  000EDE  B4D8               	btfsc	status,2,c
   995  000EE0  EF74  F007         	goto	l400
   996  000EE4  EF14  F008         	goto	l2161
   997  000EE8                     l400:
   998                           
   999                           ;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  1000  000EE8  A81D               	btfss	sprintf@flag^0,4,c
  1001  000EEA  EF79  F007         	goto	u1361
  1002  000EEE  EF7B  F007         	goto	u1360
  1003  000EF2                     u1361:
  1004  000EF2  EF8D  F007         	goto	l2133
  1005  000EF6                     u1360:
  1006  000EF6                     
  1007                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1008  000EF6  C024  FFD9         	movff	sprintf@ap,fsr2l
  1009  000EFA  C025  FFDA         	movff	sprintf@ap+1,fsr2h
  1010  000EFE  CFDE F020          	movff	postinc2,sprintf@val
  1011  000F02  CFDE F021          	movff	postinc2,sprintf@val+1
  1012  000F06  CFDE F022          	movff	postinc2,sprintf@val+2
  1013  000F0A  CFDE F023          	movff	postinc2,sprintf@val+3
  1014  000F0E  0E04               	movlw	4
  1015  000F10  2624               	addwf	sprintf@ap^0,f,c
  1016  000F12  0E00               	movlw	0
  1017  000F14  2225               	addwfc	(sprintf@ap+1)^0,f,c
  1018  000F16  EF9F  F007         	goto	l2137
  1019  000F1A                     l2133:
  1020                           
  1021                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  1022  000F1A  C024  FFD9         	movff	sprintf@ap,fsr2l
  1023  000F1E  C025  FFDA         	movff	sprintf@ap+1,fsr2h
  1024  000F22  CFDE F01A          	movff	postinc2,??_sprintf
  1025  000F26  CFDD F01B          	movff	postdec2,??_sprintf+1
  1026  000F2A  C01A  F020         	movff	??_sprintf,sprintf@val
  1027  000F2E  C01B  F021         	movff	??_sprintf+1,sprintf@val+1
  1028  000F32  6A22               	clrf	(sprintf@val+2)^0,c
  1029  000F34  6A23               	clrf	(sprintf@val+3)^0,c
  1030  000F36  0E02               	movlw	2
  1031  000F38  2624               	addwf	sprintf@ap^0,f,c
  1032  000F3A  0E00               	movlw	0
  1033  000F3C  2225               	addwfc	(sprintf@ap+1)^0,f,c
  1034  000F3E                     l2137:
  1035                           
  1036                           ;doprnt.c: 1313: };doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0]
      +                           ; c++)
  1037  000F3E  0E01               	movlw	1
  1038  000F40  6E26               	movwf	sprintf@c^0,c
  1039  000F42                     l2143:
  1040                           
  1041                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1042  000F42  5026               	movf	sprintf@c^0,w,c
  1043  000F44  0D04               	mullw	4
  1044  000F46  0E01               	movlw	low _hexpowers
  1045  000F48  24F3               	addwf	243,w,c
  1046  000F4A  6EF6               	movwf	tblptrl,c
  1047  000F4C  0E08               	movlw	high _hexpowers
  1048  000F4E  20F4               	addwfc	244,w,c
  1049  000F50  6EF7               	movwf	tblptrh,c
  1050  000F52                     	if	0	;There are less than 3 active tblptr bytes
  1051  000F52                     	endif
  1052  000F52  0009               	tblrd		*+
  1053  000F54  50F5               	movf	tablat,w,c
  1054  000F56  5C20               	subwf	sprintf@val^0,w,c
  1055  000F58  0009               	tblrd		*+
  1056  000F5A  50F5               	movf	tablat,w,c
  1057  000F5C  5821               	subwfb	(sprintf@val+1)^0,w,c
  1058  000F5E  0009               	tblrd		*+
  1059  000F60  50F5               	movf	tablat,w,c
  1060  000F62  5822               	subwfb	(sprintf@val+2)^0,w,c
  1061  000F64  0009               	tblrd		*+
  1062  000F66  50F5               	movf	tablat,w,c
  1063  000F68  5823               	subwfb	(sprintf@val+3)^0,w,c
  1064  000F6A  B0D8               	btfsc	status,0,c
  1065  000F6C  EFBA  F007         	goto	u1371
  1066  000F70  EFBC  F007         	goto	u1370
  1067  000F74                     u1371:
  1068  000F74  EFBE  F007         	goto	l2147
  1069  000F78                     u1370:
  1070  000F78  EFC8  F007         	goto	l405
  1071  000F7C                     l2147:
  1072  000F7C  2A26               	incf	sprintf@c^0,f,c
  1073  000F7E  0E08               	movlw	8
  1074  000F80  1826               	xorwf	sprintf@c^0,w,c
  1075  000F82  A4D8               	btfss	status,2,c
  1076  000F84  EFC6  F007         	goto	u1381
  1077  000F88  EFC8  F007         	goto	u1380
  1078  000F8C                     u1381:
  1079  000F8C  EFA1  F007         	goto	l2143
  1080  000F90                     u1380:
  1081  000F90                     l405:
  1082                           
  1083                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1084  000F90  C026  F01E         	movff	sprintf@c,sprintf@prec
  1085  000F94  6A1F               	clrf	(sprintf@prec+1)^0,c
  1086                           
  1087                           ;doprnt.c: 1500: while(prec--) {
  1088  000F96  EF07  F008         	goto	l2159
  1089  000F9A                     l2151:
  1090                           
  1091                           ;doprnt.c: 1504: {;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpower
      +                          s[(unsigned int)prec]) & 0xF;
  1092  000F9A  C020  F005         	movff	sprintf@val,___lldiv@dividend
  1093  000F9E  C021  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1094  000FA2  C022  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1095  000FA6  C023  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1096  000FAA  C01E  F01A         	movff	sprintf@prec,??_sprintf
  1097  000FAE  C01F  F01B         	movff	sprintf@prec+1,??_sprintf+1
  1098  000FB2  90D8               	bcf	status,0,c
  1099  000FB4  361A               	rlcf	??_sprintf^0,f,c
  1100  000FB6  361B               	rlcf	(??_sprintf+1)^0,f,c
  1101  000FB8  90D8               	bcf	status,0,c
  1102  000FBA  361A               	rlcf	??_sprintf^0,f,c
  1103  000FBC  361B               	rlcf	(??_sprintf+1)^0,f,c
  1104  000FBE  0E01               	movlw	low _hexpowers
  1105  000FC0  241A               	addwf	??_sprintf^0,w,c
  1106  000FC2  6EF6               	movwf	tblptrl,c
  1107  000FC4  0E08               	movlw	high _hexpowers
  1108  000FC6  201B               	addwfc	(??_sprintf+1)^0,w,c
  1109  000FC8  6EF7               	movwf	tblptrh,c
  1110  000FCA                     	if	0	;There are less than 3 active tblptr bytes
  1111  000FCA                     	endif
  1112  000FCA  0009               	tblrd		*+
  1113  000FCC  CFF5 F009          	movff	tablat,___lldiv@divisor
  1114  000FD0  0009               	tblrd		*+
  1115  000FD2  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1116  000FD6  0009               	tblrd		*+
  1117  000FD8  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1118  000FDC  000A               	tblrd		*-
  1119  000FDE  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1120  000FE2  EC0C  F00B         	call	___lldiv	;wreg free
  1121  000FE6  5005               	movf	?___lldiv^0,w,c
  1122  000FE8  0B0F               	andlw	15
  1123  000FEA  6E1C               	movwf	sprintf@idx^0,c
  1124  000FEC                     
  1125                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  1126  000FEC  0E21               	movlw	low STR_12
  1127  000FEE  241C               	addwf	sprintf@idx^0,w,c
  1128  000FF0  6EF6               	movwf	tblptrl,c
  1129  000FF2  6AF7               	clrf	tblptrh,c
  1130  000FF4  0E08               	movlw	high STR_12
  1131  000FF6  22F7               	addwfc	tblptrh,f,c
  1132  000FF8                     	if	0	;There are less than 3 active tblptr bytes
  1133  000FF8                     	endif
  1134  000FF8  0008               	tblrd		*
  1135  000FFA  CFF5 F026          	movff	tablat,sprintf@c
  1136  000FFE                     
  1137                           ;doprnt.c: 1534: };doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1138  000FFE  C012  FFD9         	movff	sprintf@sp,fsr2l
  1139  001002  C013  FFDA         	movff	sprintf@sp+1,fsr2h
  1140  001006  C026  FFDF         	movff	sprintf@c,indf2
  1141  00100A  4A12               	infsnz	sprintf@sp^0,f,c
  1142  00100C  2A13               	incf	(sprintf@sp+1)^0,f,c
  1143  00100E                     l2159:
  1144  00100E  061E               	decf	sprintf@prec^0,f,c
  1145  001010  A0D8               	btfss	status,0,c
  1146  001012  061F               	decf	(sprintf@prec+1)^0,f,c
  1147  001014  281E               	incf	sprintf@prec^0,w,c
  1148  001016  E106               	bnz	u1391
  1149  001018  281F               	incf	(sprintf@prec+1)^0,w,c
  1150  00101A  A4D8               	btfss	status,2,c
  1151  00101C  EF12  F008         	goto	u1391
  1152  001020  EF14  F008         	goto	u1390
  1153  001024                     u1391:
  1154  001024  EFCD  F007         	goto	l2151
  1155  001028                     u1390:
  1156  001028                     l2161:
  1157  001028  C014  FFF6         	movff	sprintf@f,tblptrl
  1158  00102C  C015  FFF7         	movff	sprintf@f+1,tblptrh
  1159  001030  4A14               	infsnz	sprintf@f^0,f,c
  1160  001032  2A15               	incf	(sprintf@f+1)^0,f,c
  1161  001034                     	if	0	;tblptru may be non-zero
  1162  001034                     	endif
  1163  001034                     	if	0	;tblptru may be non-zero
  1164  001034                     	endif
  1165  001034  0008               	tblrd		*
  1166  001036  CFF5 F026          	movff	tablat,sprintf@c
  1167  00103A  5026               	movf	sprintf@c^0,w,c
  1168  00103C  A4D8               	btfss	status,2,c
  1169  00103E  EF23  F008         	goto	u1401
  1170  001042  EF25  F008         	goto	u1400
  1171  001046                     u1401:
  1172  001046  EF44  F007         	goto	l2115
  1173  00104A                     u1400:
  1174  00104A                     l2163:
  1175                           
  1176                           ;doprnt.c: 1564: *sp = 0;
  1177  00104A  C012  FFD9         	movff	sprintf@sp,fsr2l
  1178  00104E  C013  FFDA         	movff	sprintf@sp+1,fsr2h
  1179  001052  0E00               	movlw	0
  1180  001054  6EDF               	movwf	indf2,c
  1181  001056  0012               	return		;funcret
  1182  001058                     __end_of_sprintf:
  1183                           	callstack 0
  1184                           
  1185 ;; *************** function ___lldiv *****************
  1186 ;; Defined at:
  1187 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  dividend        4    4[COMRAM] unsigned long 
  1190 ;;  divisor         4    8[COMRAM] unsigned long 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  quotient        4   12[COMRAM] unsigned long 
  1193 ;;  counter         1   16[COMRAM] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  4    4[COMRAM] unsigned long 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1203 ;;      Params:         8       0       0       0       0       0       0       0       0
  1204 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1206 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1207 ;;Total ram usage:       13 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 4
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_sprintf
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text2
  1218  001618                     __ptext2:
  1219                           	callstack 0
  1220  001618                     ___lldiv:
  1221                           	callstack 25
  1222  001618  0E00               	movlw	0
  1223  00161A  6E0D               	movwf	___lldiv@quotient^0,c
  1224  00161C  0E00               	movlw	0
  1225  00161E  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  1226  001620  0E00               	movlw	0
  1227  001622  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  1228  001624  0E00               	movlw	0
  1229  001626  6E10               	movwf	(___lldiv@quotient+3)^0,c
  1230  001628  5009               	movf	___lldiv@divisor^0,w,c
  1231  00162A  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  1232  00162C  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  1233  00162E  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  1234  001630  B4D8               	btfsc	status,2,c
  1235  001632  EF1D  F00B         	goto	u931
  1236  001636  EF1F  F00B         	goto	u930
  1237  00163A                     u931:
  1238  00163A  EF55  F00B         	goto	l441
  1239  00163E                     u930:
  1240  00163E  0E01               	movlw	1
  1241  001640  6E11               	movwf	___lldiv@counter^0,c
  1242  001642  EF29  F00B         	goto	l1849
  1243  001646                     l1847:
  1244  001646  90D8               	bcf	status,0,c
  1245  001648  3609               	rlcf	___lldiv@divisor^0,f,c
  1246  00164A  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  1247  00164C  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  1248  00164E  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  1249  001650  2A11               	incf	___lldiv@counter^0,f,c
  1250  001652                     l1849:
  1251  001652  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  1252  001654  EF2E  F00B         	goto	u941
  1253  001658  EF30  F00B         	goto	u940
  1254  00165C                     u941:
  1255  00165C  EF23  F00B         	goto	l1847
  1256  001660                     u940:
  1257  001660                     l1851:
  1258  001660  90D8               	bcf	status,0,c
  1259  001662  360D               	rlcf	___lldiv@quotient^0,f,c
  1260  001664  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  1261  001666  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  1262  001668  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  1263  00166A  5009               	movf	___lldiv@divisor^0,w,c
  1264  00166C  5C05               	subwf	___lldiv@dividend^0,w,c
  1265  00166E  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1266  001670  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  1267  001672  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1268  001674  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  1269  001676  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1270  001678  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  1271  00167A  A0D8               	btfss	status,0,c
  1272  00167C  EF42  F00B         	goto	u951
  1273  001680  EF44  F00B         	goto	u950
  1274  001684                     u951:
  1275  001684  EF4D  F00B         	goto	l1859
  1276  001688                     u950:
  1277  001688  5009               	movf	___lldiv@divisor^0,w,c
  1278  00168A  5E05               	subwf	___lldiv@dividend^0,f,c
  1279  00168C  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1280  00168E  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  1281  001690  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1282  001692  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  1283  001694  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1284  001696  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  1285  001698  800D               	bsf	___lldiv@quotient^0,0,c
  1286  00169A                     l1859:
  1287  00169A  90D8               	bcf	status,0,c
  1288  00169C  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  1289  00169E  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  1290  0016A0  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  1291  0016A2  3209               	rrcf	___lldiv@divisor^0,f,c
  1292  0016A4  2E11               	decfsz	___lldiv@counter^0,f,c
  1293  0016A6  EF30  F00B         	goto	l1851
  1294  0016AA                     l441:
  1295  0016AA  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  1296  0016AE  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  1297  0016B2  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  1298  0016B6  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  1299  0016BA  0012               	return		;funcret
  1300  0016BC                     __end_of___lldiv:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _putch *****************
  1304 ;; Defined at:
  1305 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  txData          1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  txData          1    5[COMRAM] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1322 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 5
  1326 ;; This function calls:
  1327 ;;		_EUSART1_Write
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text3
  1334  0018EC                     __ptext3:
  1335                           	callstack 0
  1336  0018EC                     _putch:
  1337                           	callstack 25
  1338                           
  1339                           ;incstack = 0
  1340                           ;putch@txData stored from wreg
  1341  0018EC  6E06               	movwf	putch@txData^0,c
  1342  0018EE                     
  1343                           ;eusart1.c: 148: EUSART1_Write(txData);
  1344  0018EE  5006               	movf	putch@txData^0,w,c
  1345  0018F0  EC61  F00C         	call	_EUSART1_Write
  1346  0018F4  0012               	return		;funcret
  1347  0018F6                     __end_of_putch:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _EUSART1_Write *****************
  1351 ;; Defined at:
  1352 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  txData          1    wreg     unsigned char 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  txData          1    4[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1369 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1370 ;;Total ram usage:        1 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 4
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_putch
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text4
  1382  0018C2                     __ptext4:
  1383                           	callstack 0
  1384  0018C2                     _EUSART1_Write:
  1385                           	callstack 25
  1386                           
  1387                           ;incstack = 0
  1388                           ;EUSART1_Write@txData stored from wreg
  1389  0018C2  6E05               	movwf	EUSART1_Write@txData^0,c
  1390  0018C4                     l67:
  1391  0018C4  A89E               	btfss	158,4,c	;volatile
  1392  0018C6  EF67  F00C         	goto	u11
  1393  0018CA  EF69  F00C         	goto	u10
  1394  0018CE                     u11:
  1395  0018CE  EF62  F00C         	goto	l67
  1396  0018D2                     u10:
  1397  0018D2                     
  1398                           ;eusart1.c: 136: };eusart1.c: 138: TXREG1 = txData;
  1399  0018D2  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1400  0018D6  0012               	return		;funcret
  1401  0018D8                     __end_of_EUSART1_Write:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _normaliza *****************
  1405 ;; Defined at:
  1406 ;;		line 108 in file "main.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1422 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1423 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1424 ;;Total ram usage:        4 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 5
  1427 ;; This function calls:
  1428 ;;		___flge
  1429 ;;		___flmul
  1430 ;;		___xxtofl
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text5
  1437  00120C                     __ptext5:
  1438                           	callstack 0
  1439  00120C                     _normaliza:
  1440                           	callstack 25
  1441  00120C                     
  1442                           ;main.c: 113: for (cont=0;cont<cuenta-1+2;cont++)
  1443  00120C  0E00               	movlw	0
  1444  00120E  6E4E               	movwf	_cont^0,c
  1445  001210  EFC0  F009         	goto	l2269
  1446  001214                     l2257:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 114: {;main.c: 115: if (tiempo[cont+2] <(float)tiempo[cont] * .8) tiempo[cont]=
      +                          0 ;
  1450  001214  0E62               	movlw	low (_tiempo+2)
  1451  001216  244E               	addwf	_cont^0,w,c
  1452  001218  6ED9               	movwf	fsr2l,c
  1453  00121A  6ADA               	clrf	fsr2h,c
  1454  00121C  0E00               	movlw	high (_tiempo+2)
  1455  00121E  22DA               	addwfc	fsr2h,f,c
  1456  001220  50DF               	movf	indf2,w,c
  1457  001222  6FA6               	movwf	??_normaliza& (0+255),b
  1458  001224  51A6               	movf	??_normaliza& (0+255),w,b
  1459  001226  6E05               	movwf	___xxtofl@val^0,c
  1460  001228  6A06               	clrf	(___xxtofl@val+1)^0,c
  1461  00122A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1462  00122C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1463  00122E  0E00               	movlw	0
  1464  001230  EC2C  F008         	call	___xxtofl
  1465  001234  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1466  001238  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1467  00123C  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1468  001240  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1469  001244  0ECD               	movlw	205
  1470  001246  6E17               	movwf	___flmul@a^0,c
  1471  001248  0ECC               	movlw	204
  1472  00124A  6E18               	movwf	(___flmul@a+1)^0,c
  1473  00124C  0E4C               	movlw	76
  1474  00124E  6E19               	movwf	(___flmul@a+2)^0,c
  1475  001250  0E3F               	movlw	63
  1476  001252  6E1A               	movwf	(___flmul@a+3)^0,c
  1477  001254  0E60               	movlw	low _tiempo
  1478  001256  244E               	addwf	_cont^0,w,c
  1479  001258  6ED9               	movwf	fsr2l,c
  1480  00125A  6ADA               	clrf	fsr2h,c
  1481  00125C  0E00               	movlw	high _tiempo
  1482  00125E  22DA               	addwfc	fsr2h,f,c
  1483  001260  50DF               	movf	indf2,w,c
  1484  001262  0100               	movlb	0	; () banked
  1485  001264  6FA7               	movwf	(??_normaliza+1)& (0+255),b
  1486  001266  51A7               	movf	(??_normaliza+1)& (0+255),w,b
  1487  001268  6E05               	movwf	___xxtofl@val^0,c
  1488  00126A  6A06               	clrf	(___xxtofl@val+1)^0,c
  1489  00126C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1490  00126E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1491  001270  0E00               	movlw	0
  1492  001272  EC2C  F008         	call	___xxtofl
  1493  001276  C005  F013         	movff	?___xxtofl,___flmul@b
  1494  00127A  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1495  00127E  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1496  001282  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1497  001286  EC35  F004         	call	___flmul	;wreg free
  1498  00128A  C013  F030         	movff	?___flmul,___flge@ff2
  1499  00128E  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1500  001292  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1501  001296  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1502  00129A  ECD6  F009         	call	___flge	;wreg free
  1503  00129E  B0D8               	btfsc	status,0,c
  1504  0012A0  EF54  F009         	goto	u1571
  1505  0012A4  EF56  F009         	goto	u1570
  1506  0012A8                     u1571:
  1507  0012A8  EF60  F009         	goto	l2261
  1508  0012AC                     u1570:
  1509  0012AC  0E60               	movlw	low _tiempo
  1510  0012AE  244E               	addwf	_cont^0,w,c
  1511  0012B0  6ED9               	movwf	fsr2l,c
  1512  0012B2  6ADA               	clrf	fsr2h,c
  1513  0012B4  0E00               	movlw	high _tiempo
  1514  0012B6  22DA               	addwfc	fsr2h,f,c
  1515  0012B8  0E00               	movlw	0
  1516  0012BA  6EDF               	movwf	indf2,c
  1517  0012BC  EFBF  F009         	goto	l2267
  1518  0012C0                     l2261:
  1519                           
  1520                           ;main.c: 116: else if (tiempo[cont] <(float)tiempo[cont+2] * .8) tiempo[cont]= 2 ;
  1521  0012C0  0E60               	movlw	low _tiempo
  1522  0012C2  244E               	addwf	_cont^0,w,c
  1523  0012C4  6ED9               	movwf	fsr2l,c
  1524  0012C6  6ADA               	clrf	fsr2h,c
  1525  0012C8  0E00               	movlw	high _tiempo
  1526  0012CA  22DA               	addwfc	fsr2h,f,c
  1527  0012CC  50DF               	movf	indf2,w,c
  1528  0012CE  0100               	movlb	0	; () banked
  1529  0012D0  6FA6               	movwf	??_normaliza& (0+255),b
  1530  0012D2  51A6               	movf	??_normaliza& (0+255),w,b
  1531  0012D4  6E05               	movwf	___xxtofl@val^0,c
  1532  0012D6  6A06               	clrf	(___xxtofl@val+1)^0,c
  1533  0012D8  6A07               	clrf	(___xxtofl@val+2)^0,c
  1534  0012DA  6A08               	clrf	(___xxtofl@val+3)^0,c
  1535  0012DC  0E00               	movlw	0
  1536  0012DE  EC2C  F008         	call	___xxtofl
  1537  0012E2  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1538  0012E6  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1539  0012EA  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1540  0012EE  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1541  0012F2  0ECD               	movlw	205
  1542  0012F4  6E17               	movwf	___flmul@a^0,c
  1543  0012F6  0ECC               	movlw	204
  1544  0012F8  6E18               	movwf	(___flmul@a+1)^0,c
  1545  0012FA  0E4C               	movlw	76
  1546  0012FC  6E19               	movwf	(___flmul@a+2)^0,c
  1547  0012FE  0E3F               	movlw	63
  1548  001300  6E1A               	movwf	(___flmul@a+3)^0,c
  1549  001302  0E62               	movlw	low (_tiempo+2)
  1550  001304  244E               	addwf	_cont^0,w,c
  1551  001306  6ED9               	movwf	fsr2l,c
  1552  001308  6ADA               	clrf	fsr2h,c
  1553  00130A  0E00               	movlw	high (_tiempo+2)
  1554  00130C  22DA               	addwfc	fsr2h,f,c
  1555  00130E  50DF               	movf	indf2,w,c
  1556  001310  0100               	movlb	0	; () banked
  1557  001312  6FA7               	movwf	(??_normaliza+1)& (0+255),b
  1558  001314  51A7               	movf	(??_normaliza+1)& (0+255),w,b
  1559  001316  6E05               	movwf	___xxtofl@val^0,c
  1560  001318  6A06               	clrf	(___xxtofl@val+1)^0,c
  1561  00131A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1562  00131C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1563  00131E  0E00               	movlw	0
  1564  001320  EC2C  F008         	call	___xxtofl
  1565  001324  C005  F013         	movff	?___xxtofl,___flmul@b
  1566  001328  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1567  00132C  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1568  001330  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1569  001334  EC35  F004         	call	___flmul	;wreg free
  1570  001338  C013  F030         	movff	?___flmul,___flge@ff2
  1571  00133C  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1572  001340  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1573  001344  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1574  001348  ECD6  F009         	call	___flge	;wreg free
  1575  00134C  B0D8               	btfsc	status,0,c
  1576  00134E  EFAB  F009         	goto	u1581
  1577  001352  EFAD  F009         	goto	u1580
  1578  001356                     u1581:
  1579  001356  EFB7  F009         	goto	l2265
  1580  00135A                     u1580:
  1581  00135A  0E60               	movlw	low _tiempo
  1582  00135C  244E               	addwf	_cont^0,w,c
  1583  00135E  6ED9               	movwf	fsr2l,c
  1584  001360  6ADA               	clrf	fsr2h,c
  1585  001362  0E00               	movlw	high _tiempo
  1586  001364  22DA               	addwfc	fsr2h,f,c
  1587  001366  0E02               	movlw	2
  1588  001368  6EDF               	movwf	indf2,c
  1589  00136A  EFBF  F009         	goto	l2267
  1590  00136E                     l2265:
  1591                           
  1592                           ;main.c: 117: else tiempo[cont]=1 ;
  1593  00136E  0E60               	movlw	low _tiempo
  1594  001370  244E               	addwf	_cont^0,w,c
  1595  001372  6ED9               	movwf	fsr2l,c
  1596  001374  6ADA               	clrf	fsr2h,c
  1597  001376  0E00               	movlw	high _tiempo
  1598  001378  22DA               	addwfc	fsr2h,f,c
  1599  00137A  0E01               	movlw	1
  1600  00137C  6EDF               	movwf	indf2,c
  1601  00137E                     l2267:
  1602  00137E  2A4E               	incf	_cont^0,f,c
  1603  001380                     l2269:
  1604  001380  0E01               	movlw	1
  1605  001382  2445               	addwf	_cuenta^0,w,c
  1606  001384  0100               	movlb	0	; () banked
  1607  001386  6FA6               	movwf	??_normaliza& (0+255),b
  1608  001388  0E00               	movlw	0
  1609  00138A  2046               	addwfc	(_cuenta+1)^0,w,c
  1610  00138C  6FA7               	movwf	(??_normaliza+1)& (0+255),b
  1611  00138E  504E               	movf	_cont^0,w,c
  1612  001390  6FA8               	movwf	(??_normaliza+2)& (0+255),b
  1613  001392  6BA9               	clrf	(??_normaliza+3)& (0+255),b
  1614  001394  51A6               	movf	??_normaliza& (0+255),w,b
  1615  001396  5DA8               	subwf	(??_normaliza+2)& (0+255),w,b
  1616  001398  51A7               	movf	(??_normaliza+1)& (0+255),w,b
  1617  00139A  59A9               	subwfb	(??_normaliza+3)& (0+255),w,b
  1618  00139C  A0D8               	btfss	status,0,c
  1619  00139E  EFD3  F009         	goto	u1591
  1620  0013A2  EFD5  F009         	goto	u1590
  1621  0013A6                     u1591:
  1622  0013A6  EF0A  F009         	goto	l2257
  1623  0013AA                     u1590:
  1624  0013AA                     
  1625                           ; BSR set to: 0
  1626  0013AA  0012               	return		;funcret
  1627  0013AC                     __end_of_normaliza:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function ___xxtofl *****************
  1631 ;; Defined at:
  1632 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  sign            1    wreg     unsigned char 
  1635 ;;  val             4    4[COMRAM] long 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  sign            1   12[COMRAM] unsigned char 
  1638 ;;  arg             4   14[COMRAM] unsigned long 
  1639 ;;  exp             1   13[COMRAM] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  4    4[COMRAM] unsigned char 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1649 ;;      Params:         4       0       0       0       0       0       0       0       0
  1650 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1651 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1652 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1653 ;;Total ram usage:       14 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 4
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_normaliza
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text6
  1664  001058                     __ptext6:
  1665                           	callstack 0
  1666  001058                     ___xxtofl:
  1667                           	callstack 25
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;incstack = 0
  1671                           ;___xxtofl@sign stored from wreg
  1672  001058  6E0D               	movwf	___xxtofl@sign^0,c
  1673  00105A  500D               	movf	___xxtofl@sign^0,w,c
  1674  00105C  B4D8               	btfsc	status,2,c
  1675  00105E  EF33  F008         	goto	u1201
  1676  001062  EF35  F008         	goto	u1200
  1677  001066                     u1201:
  1678  001066  EF57  F008         	goto	l1057
  1679  00106A                     u1200:
  1680  00106A  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  1681  00106C  EF3C  F008         	goto	u1210
  1682  001070  EF3A  F008         	goto	u1211
  1683  001074                     u1211:
  1684  001074  EF57  F008         	goto	l1057
  1685  001078                     u1210:
  1686  001078  C005  F009         	movff	___xxtofl@val,??___xxtofl
  1687  00107C  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  1688  001080  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  1689  001084  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  1690  001088  1E09               	comf	??___xxtofl^0,f,c
  1691  00108A  1E0A               	comf	(??___xxtofl+1)^0,f,c
  1692  00108C  1E0B               	comf	(??___xxtofl+2)^0,f,c
  1693  00108E  1E0C               	comf	(??___xxtofl+3)^0,f,c
  1694  001090  2A09               	incf	??___xxtofl^0,f,c
  1695  001092  0E00               	movlw	0
  1696  001094  220A               	addwfc	(??___xxtofl+1)^0,f,c
  1697  001096  220B               	addwfc	(??___xxtofl+2)^0,f,c
  1698  001098  220C               	addwfc	(??___xxtofl+3)^0,f,c
  1699  00109A  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  1700  00109E  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  1701  0010A2  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  1702  0010A6  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  1703  0010AA  EF5F  F008         	goto	l2021
  1704  0010AE                     l1057:
  1705  0010AE  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  1706  0010B2  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1707  0010B6  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1708  0010BA  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1709  0010BE                     l2021:
  1710  0010BE  5005               	movf	___xxtofl@val^0,w,c
  1711  0010C0  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  1712  0010C2  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  1713  0010C4  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  1714  0010C6  A4D8               	btfss	status,2,c
  1715  0010C8  EF68  F008         	goto	u1221
  1716  0010CC  EF6A  F008         	goto	u1220
  1717  0010D0                     u1221:
  1718  0010D0  EF74  F008         	goto	l2027
  1719  0010D4                     u1220:
  1720  0010D4  0E00               	movlw	0
  1721  0010D6  6E05               	movwf	?___xxtofl^0,c
  1722  0010D8  0E00               	movlw	0
  1723  0010DA  6E06               	movwf	(?___xxtofl+1)^0,c
  1724  0010DC  0E00               	movlw	0
  1725  0010DE  6E07               	movwf	(?___xxtofl+2)^0,c
  1726  0010E0  0E00               	movlw	0
  1727  0010E2  6E08               	movwf	(?___xxtofl+3)^0,c
  1728  0010E4  EF05  F009         	goto	l1060
  1729  0010E8                     l2027:
  1730  0010E8  0E96               	movlw	150
  1731  0010EA  6E0E               	movwf	___xxtofl@exp^0,c
  1732  0010EC  EF7E  F008         	goto	l2031
  1733  0010F0                     l2029:
  1734  0010F0  2A0E               	incf	___xxtofl@exp^0,f,c
  1735  0010F2  90D8               	bcf	status,0,c
  1736  0010F4  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  1737  0010F6  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  1738  0010F8  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  1739  0010FA  320F               	rrcf	___xxtofl@arg^0,f,c
  1740  0010FC                     l2031:
  1741  0010FC  0E00               	movlw	0
  1742  0010FE  140F               	andwf	___xxtofl@arg^0,w,c
  1743  001100  6E09               	movwf	??___xxtofl^0,c
  1744  001102  0E00               	movlw	0
  1745  001104  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  1746  001106  6E0A               	movwf	(??___xxtofl+1)^0,c
  1747  001108  0E00               	movlw	0
  1748  00110A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  1749  00110C  6E0B               	movwf	(??___xxtofl+2)^0,c
  1750  00110E  0EFE               	movlw	254
  1751  001110  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  1752  001112  6E0C               	movwf	(??___xxtofl+3)^0,c
  1753  001114  5009               	movf	??___xxtofl^0,w,c
  1754  001116  100A               	iorwf	(??___xxtofl+1)^0,w,c
  1755  001118  100B               	iorwf	(??___xxtofl+2)^0,w,c
  1756  00111A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  1757  00111C  A4D8               	btfss	status,2,c
  1758  00111E  EF93  F008         	goto	u1231
  1759  001122  EF95  F008         	goto	u1230
  1760  001126                     u1231:
  1761  001126  EF78  F008         	goto	l2029
  1762  00112A                     u1230:
  1763  00112A  EFA3  F008         	goto	l1064
  1764  00112E                     l2033:
  1765  00112E  2A0E               	incf	___xxtofl@exp^0,f,c
  1766  001130  0E01               	movlw	1
  1767  001132  260F               	addwf	___xxtofl@arg^0,f,c
  1768  001134  0E00               	movlw	0
  1769  001136  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  1770  001138  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  1771  00113A  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  1772  00113C  90D8               	bcf	status,0,c
  1773  00113E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  1774  001140  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  1775  001142  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  1776  001144  320F               	rrcf	___xxtofl@arg^0,f,c
  1777  001146                     l1064:
  1778  001146  0E00               	movlw	0
  1779  001148  140F               	andwf	___xxtofl@arg^0,w,c
  1780  00114A  6E09               	movwf	??___xxtofl^0,c
  1781  00114C  0E00               	movlw	0
  1782  00114E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  1783  001150  6E0A               	movwf	(??___xxtofl+1)^0,c
  1784  001152  0E00               	movlw	0
  1785  001154  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  1786  001156  6E0B               	movwf	(??___xxtofl+2)^0,c
  1787  001158  0EFF               	movlw	255
  1788  00115A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  1789  00115C  6E0C               	movwf	(??___xxtofl+3)^0,c
  1790  00115E  5009               	movf	??___xxtofl^0,w,c
  1791  001160  100A               	iorwf	(??___xxtofl+1)^0,w,c
  1792  001162  100B               	iorwf	(??___xxtofl+2)^0,w,c
  1793  001164  100C               	iorwf	(??___xxtofl+3)^0,w,c
  1794  001166  A4D8               	btfss	status,2,c
  1795  001168  EFB8  F008         	goto	u1241
  1796  00116C  EFBA  F008         	goto	u1240
  1797  001170                     u1241:
  1798  001170  EF97  F008         	goto	l2033
  1799  001174                     u1240:
  1800  001174  EFC2  F008         	goto	l2041
  1801  001178                     l2039:
  1802  001178  060E               	decf	___xxtofl@exp^0,f,c
  1803  00117A  90D8               	bcf	status,0,c
  1804  00117C  360F               	rlcf	___xxtofl@arg^0,f,c
  1805  00117E  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  1806  001180  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  1807  001182  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  1808  001184                     l2041:
  1809  001184  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  1810  001186  EFC7  F008         	goto	u1251
  1811  00118A  EFC9  F008         	goto	u1250
  1812  00118E                     u1251:
  1813  00118E  EFD1  F008         	goto	l1071
  1814  001192                     u1250:
  1815  001192  0E02               	movlw	2
  1816  001194  600E               	cpfslt	___xxtofl@exp^0,c
  1817  001196  EFCF  F008         	goto	u1261
  1818  00119A  EFD1  F008         	goto	u1260
  1819  00119E                     u1261:
  1820  00119E  EFBC  F008         	goto	l2039
  1821  0011A2                     u1260:
  1822  0011A2                     l1071:
  1823  0011A2  B00E               	btfsc	___xxtofl@exp^0,0,c
  1824  0011A4  EFD6  F008         	goto	u1271
  1825  0011A8  EFD8  F008         	goto	u1270
  1826  0011AC                     u1271:
  1827  0011AC  EFD9  F008         	goto	l2047
  1828  0011B0                     u1270:
  1829  0011B0  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  1830  0011B2                     l2047:
  1831  0011B2  90D8               	bcf	status,0,c
  1832  0011B4  320E               	rrcf	___xxtofl@exp^0,f,c
  1833  0011B6  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  1834  0011BA  6A0A               	clrf	(??___xxtofl+1)^0,c
  1835  0011BC  6A0B               	clrf	(??___xxtofl+2)^0,c
  1836  0011BE  6A0C               	clrf	(??___xxtofl+3)^0,c
  1837  0011C0  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  1838  0011C4  6A0B               	clrf	(??___xxtofl+2)^0,c
  1839  0011C6  6A0A               	clrf	(??___xxtofl+1)^0,c
  1840  0011C8  6A09               	clrf	??___xxtofl^0,c
  1841  0011CA  5009               	movf	??___xxtofl^0,w,c
  1842  0011CC  120F               	iorwf	___xxtofl@arg^0,f,c
  1843  0011CE  500A               	movf	(??___xxtofl+1)^0,w,c
  1844  0011D0  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  1845  0011D2  500B               	movf	(??___xxtofl+2)^0,w,c
  1846  0011D4  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  1847  0011D6  500C               	movf	(??___xxtofl+3)^0,w,c
  1848  0011D8  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  1849  0011DA  500D               	movf	___xxtofl@sign^0,w,c
  1850  0011DC  B4D8               	btfsc	status,2,c
  1851  0011DE  EFF3  F008         	goto	u1281
  1852  0011E2  EFF5  F008         	goto	u1280
  1853  0011E6                     u1281:
  1854  0011E6  EFFD  F008         	goto	l2057
  1855  0011EA                     u1280:
  1856  0011EA  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  1857  0011EC  EFFC  F008         	goto	u1290
  1858  0011F0  EFFA  F008         	goto	u1291
  1859  0011F4                     u1291:
  1860  0011F4  EFFD  F008         	goto	l2057
  1861  0011F8                     u1290:
  1862  0011F8  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  1863  0011FA                     l2057:
  1864  0011FA  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  1865  0011FE  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  1866  001202  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  1867  001206  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  1868  00120A                     l1060:
  1869  00120A  0012               	return		;funcret
  1870  00120C                     __end_of___xxtofl:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function ___flmul *****************
  1874 ;; Defined at:
  1875 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  b               4   18[COMRAM] unsigned char 
  1878 ;;  a               4   22[COMRAM] unsigned char 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  prod            4   37[COMRAM] struct .
  1881 ;;  grs             4   31[COMRAM] unsigned long 
  1882 ;;  temp            2   41[COMRAM] struct .
  1883 ;;  bexp            1   36[COMRAM] unsigned char 
  1884 ;;  aexp            1   35[COMRAM] unsigned char 
  1885 ;;  sign            1   30[COMRAM] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  4   18[COMRAM] unsigned char 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, prodl, prodh
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1895 ;;      Params:         8       0       0       0       0       0       0       0       0
  1896 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1897 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1898 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1899 ;;Total ram usage:       25 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 4
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_normaliza
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text7
  1910  00086A                     __ptext7:
  1911                           	callstack 0
  1912  00086A                     ___flmul:
  1913                           	callstack 25
  1914  00086A  5016               	movf	(___flmul@b+3)^0,w,c
  1915  00086C  0B80               	andlw	128
  1916  00086E  6E1F               	movwf	___flmul@sign^0,c
  1917  000870  5016               	movf	(___flmul@b+3)^0,w,c
  1918  000872  2416               	addwf	(___flmul@b+3)^0,w,c
  1919  000874  6E25               	movwf	___flmul@bexp^0,c
  1920  000876  AE15               	btfss	(___flmul@b+2)^0,7,c
  1921  000878  EF40  F004         	goto	u961
  1922  00087C  EF42  F004         	goto	u960
  1923  000880                     u961:
  1924  000880  EF43  F004         	goto	l1869
  1925  000884                     u960:
  1926  000884  8025               	bsf	___flmul@bexp^0,0,c
  1927  000886                     l1869:
  1928  000886  5025               	movf	___flmul@bexp^0,w,c
  1929  000888  B4D8               	btfsc	status,2,c
  1930  00088A  EF49  F004         	goto	u971
  1931  00088E  EF4B  F004         	goto	u970
  1932  000892                     u971:
  1933  000892  EF5E  F004         	goto	l1877
  1934  000896                     u970:
  1935  000896  2825               	incf	___flmul@bexp^0,w,c
  1936  000898  A4D8               	btfss	status,2,c
  1937  00089A  EF51  F004         	goto	u981
  1938  00089E  EF53  F004         	goto	u980
  1939  0008A2                     u981:
  1940  0008A2  EF5B  F004         	goto	l1875
  1941  0008A6                     u980:
  1942  0008A6  0E00               	movlw	0
  1943  0008A8  6E13               	movwf	___flmul@b^0,c
  1944  0008AA  0E00               	movlw	0
  1945  0008AC  6E14               	movwf	(___flmul@b+1)^0,c
  1946  0008AE  0E00               	movlw	0
  1947  0008B0  6E15               	movwf	(___flmul@b+2)^0,c
  1948  0008B2  0E00               	movlw	0
  1949  0008B4  6E16               	movwf	(___flmul@b+3)^0,c
  1950  0008B6                     l1875:
  1951  0008B6  8E15               	bsf	(___flmul@b+2)^0,7,c
  1952  0008B8  EF66  F004         	goto	l1879
  1953  0008BC                     l1877:
  1954  0008BC  0E00               	movlw	0
  1955  0008BE  6E13               	movwf	___flmul@b^0,c
  1956  0008C0  0E00               	movlw	0
  1957  0008C2  6E14               	movwf	(___flmul@b+1)^0,c
  1958  0008C4  0E00               	movlw	0
  1959  0008C6  6E15               	movwf	(___flmul@b+2)^0,c
  1960  0008C8  0E00               	movlw	0
  1961  0008CA  6E16               	movwf	(___flmul@b+3)^0,c
  1962  0008CC                     l1879:
  1963  0008CC  501A               	movf	(___flmul@a+3)^0,w,c
  1964  0008CE  0B80               	andlw	128
  1965  0008D0  1A1F               	xorwf	___flmul@sign^0,f,c
  1966  0008D2  501A               	movf	(___flmul@a+3)^0,w,c
  1967  0008D4  241A               	addwf	(___flmul@a+3)^0,w,c
  1968  0008D6  6E24               	movwf	___flmul@aexp^0,c
  1969  0008D8  AE19               	btfss	(___flmul@a+2)^0,7,c
  1970  0008DA  EF71  F004         	goto	u991
  1971  0008DE  EF73  F004         	goto	u990
  1972  0008E2                     u991:
  1973  0008E2  EF74  F004         	goto	l1887
  1974  0008E6                     u990:
  1975  0008E6  8024               	bsf	___flmul@aexp^0,0,c
  1976  0008E8                     l1887:
  1977  0008E8  5024               	movf	___flmul@aexp^0,w,c
  1978  0008EA  B4D8               	btfsc	status,2,c
  1979  0008EC  EF7A  F004         	goto	u1001
  1980  0008F0  EF7C  F004         	goto	u1000
  1981  0008F4                     u1001:
  1982  0008F4  EF8F  F004         	goto	l1895
  1983  0008F8                     u1000:
  1984  0008F8  2824               	incf	___flmul@aexp^0,w,c
  1985  0008FA  A4D8               	btfss	status,2,c
  1986  0008FC  EF82  F004         	goto	u1011
  1987  000900  EF84  F004         	goto	u1010
  1988  000904                     u1011:
  1989  000904  EF8C  F004         	goto	l1893
  1990  000908                     u1010:
  1991  000908  0E00               	movlw	0
  1992  00090A  6E17               	movwf	___flmul@a^0,c
  1993  00090C  0E00               	movlw	0
  1994  00090E  6E18               	movwf	(___flmul@a+1)^0,c
  1995  000910  0E00               	movlw	0
  1996  000912  6E19               	movwf	(___flmul@a+2)^0,c
  1997  000914  0E00               	movlw	0
  1998  000916  6E1A               	movwf	(___flmul@a+3)^0,c
  1999  000918                     l1893:
  2000  000918  8E19               	bsf	(___flmul@a+2)^0,7,c
  2001  00091A  EF97  F004         	goto	l1016
  2002  00091E                     l1895:
  2003  00091E  0E00               	movlw	0
  2004  000920  6E17               	movwf	___flmul@a^0,c
  2005  000922  0E00               	movlw	0
  2006  000924  6E18               	movwf	(___flmul@a+1)^0,c
  2007  000926  0E00               	movlw	0
  2008  000928  6E19               	movwf	(___flmul@a+2)^0,c
  2009  00092A  0E00               	movlw	0
  2010  00092C  6E1A               	movwf	(___flmul@a+3)^0,c
  2011  00092E                     l1016:
  2012  00092E  5024               	movf	___flmul@aexp^0,w,c
  2013  000930  B4D8               	btfsc	status,2,c
  2014  000932  EF9D  F004         	goto	u1021
  2015  000936  EF9F  F004         	goto	u1020
  2016  00093A                     u1021:
  2017  00093A  EFA7  F004         	goto	l1899
  2018  00093E                     u1020:
  2019  00093E  5025               	movf	___flmul@bexp^0,w,c
  2020  000940  A4D8               	btfss	status,2,c
  2021  000942  EFA5  F004         	goto	u1031
  2022  000946  EFA7  F004         	goto	u1030
  2023  00094A                     u1031:
  2024  00094A  EFB1  F004         	goto	l1903
  2025  00094E                     u1030:
  2026  00094E                     l1899:
  2027  00094E  0E00               	movlw	0
  2028  000950  6E13               	movwf	?___flmul^0,c
  2029  000952  0E00               	movlw	0
  2030  000954  6E14               	movwf	(?___flmul+1)^0,c
  2031  000956  0E00               	movlw	0
  2032  000958  6E15               	movwf	(?___flmul+2)^0,c
  2033  00095A  0E00               	movlw	0
  2034  00095C  6E16               	movwf	(?___flmul+3)^0,c
  2035  00095E  EF49  F006         	goto	l1020
  2036  000962                     l1903:
  2037  000962  5019               	movf	(___flmul@a+2)^0,w,c
  2038  000964  0213               	mulwf	___flmul@b^0,c
  2039  000966  CFF3 F02A          	movff	prodl,___flmul@temp
  2040  00096A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2041  00096E  502A               	movf	___flmul@temp^0,w,c
  2042  000970  6E20               	movwf	___flmul@grs^0,c
  2043  000972  6A21               	clrf	(___flmul@grs+1)^0,c
  2044  000974  6A22               	clrf	(___flmul@grs+2)^0,c
  2045  000976  6A23               	clrf	(___flmul@grs+3)^0,c
  2046  000978  502B               	movf	(___flmul@temp+1)^0,w,c
  2047  00097A  6E26               	movwf	___flmul@prod^0,c
  2048  00097C  6A27               	clrf	(___flmul@prod+1)^0,c
  2049  00097E  6A28               	clrf	(___flmul@prod+2)^0,c
  2050  000980  6A29               	clrf	(___flmul@prod+3)^0,c
  2051  000982  5018               	movf	(___flmul@a+1)^0,w,c
  2052  000984  0214               	mulwf	(___flmul@b+1)^0,c
  2053  000986  CFF3 F02A          	movff	prodl,___flmul@temp
  2054  00098A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2055  00098E  502A               	movf	___flmul@temp^0,w,c
  2056  000990  2620               	addwf	___flmul@grs^0,f,c
  2057  000992  0E00               	movlw	0
  2058  000994  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2059  000996  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2060  000998  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2061  00099A  502B               	movf	(___flmul@temp+1)^0,w,c
  2062  00099C  2626               	addwf	___flmul@prod^0,f,c
  2063  00099E  0E00               	movlw	0
  2064  0009A0  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2065  0009A2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2066  0009A4  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2067  0009A6  5017               	movf	___flmul@a^0,w,c
  2068  0009A8  0215               	mulwf	(___flmul@b+2)^0,c
  2069  0009AA  CFF3 F02A          	movff	prodl,___flmul@temp
  2070  0009AE  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2071  0009B2  502A               	movf	___flmul@temp^0,w,c
  2072  0009B4  2620               	addwf	___flmul@grs^0,f,c
  2073  0009B6  0E00               	movlw	0
  2074  0009B8  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2075  0009BA  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2076  0009BC  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2077  0009BE  502B               	movf	(___flmul@temp+1)^0,w,c
  2078  0009C0  2626               	addwf	___flmul@prod^0,f,c
  2079  0009C2  0E00               	movlw	0
  2080  0009C4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2081  0009C6  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2082  0009C8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2083  0009CA  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2084  0009CE  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2085  0009D2  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2086  0009D6  6A20               	clrf	___flmul@grs^0,c
  2087  0009D8  5017               	movf	___flmul@a^0,w,c
  2088  0009DA  0214               	mulwf	(___flmul@b+1)^0,c
  2089  0009DC  CFF3 F02A          	movff	prodl,___flmul@temp
  2090  0009E0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2091  0009E4  502A               	movf	___flmul@temp^0,w,c
  2092  0009E6  2620               	addwf	___flmul@grs^0,f,c
  2093  0009E8  502B               	movf	(___flmul@temp+1)^0,w,c
  2094  0009EA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2095  0009EC  0E00               	movlw	0
  2096  0009EE  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2097  0009F0  0E00               	movlw	0
  2098  0009F2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2099  0009F4  5018               	movf	(___flmul@a+1)^0,w,c
  2100  0009F6  0213               	mulwf	___flmul@b^0,c
  2101  0009F8  CFF3 F02A          	movff	prodl,___flmul@temp
  2102  0009FC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2103  000A00  502A               	movf	___flmul@temp^0,w,c
  2104  000A02  2620               	addwf	___flmul@grs^0,f,c
  2105  000A04  502B               	movf	(___flmul@temp+1)^0,w,c
  2106  000A06  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2107  000A08  0E00               	movlw	0
  2108  000A0A  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2109  000A0C  0E00               	movlw	0
  2110  000A0E  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2111  000A10  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2112  000A14  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2113  000A18  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2114  000A1C  6A20               	clrf	___flmul@grs^0,c
  2115  000A1E  5017               	movf	___flmul@a^0,w,c
  2116  000A20  0213               	mulwf	___flmul@b^0,c
  2117  000A22  CFF3 F02A          	movff	prodl,___flmul@temp
  2118  000A26  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2119  000A2A  502A               	movf	___flmul@temp^0,w,c
  2120  000A2C  2620               	addwf	___flmul@grs^0,f,c
  2121  000A2E  502B               	movf	(___flmul@temp+1)^0,w,c
  2122  000A30  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2123  000A32  0E00               	movlw	0
  2124  000A34  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2125  000A36  0E00               	movlw	0
  2126  000A38  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2127  000A3A  5019               	movf	(___flmul@a+2)^0,w,c
  2128  000A3C  0214               	mulwf	(___flmul@b+1)^0,c
  2129  000A3E  CFF3 F02A          	movff	prodl,___flmul@temp
  2130  000A42  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2131  000A46  502A               	movf	___flmul@temp^0,w,c
  2132  000A48  2626               	addwf	___flmul@prod^0,f,c
  2133  000A4A  502B               	movf	(___flmul@temp+1)^0,w,c
  2134  000A4C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2135  000A4E  0E00               	movlw	0
  2136  000A50  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2137  000A52  0E00               	movlw	0
  2138  000A54  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2139  000A56  5018               	movf	(___flmul@a+1)^0,w,c
  2140  000A58  0215               	mulwf	(___flmul@b+2)^0,c
  2141  000A5A  CFF3 F02A          	movff	prodl,___flmul@temp
  2142  000A5E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2143  000A62  502A               	movf	___flmul@temp^0,w,c
  2144  000A64  2626               	addwf	___flmul@prod^0,f,c
  2145  000A66  502B               	movf	(___flmul@temp+1)^0,w,c
  2146  000A68  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2147  000A6A  0E00               	movlw	0
  2148  000A6C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2149  000A6E  0E00               	movlw	0
  2150  000A70  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2151  000A72  5019               	movf	(___flmul@a+2)^0,w,c
  2152  000A74  0215               	mulwf	(___flmul@b+2)^0,c
  2153  000A76  CFF3 F02A          	movff	prodl,___flmul@temp
  2154  000A7A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2155  000A7E  502A               	movf	___flmul@temp^0,w,c
  2156  000A80  6E1B               	movwf	??___flmul^0,c
  2157  000A82  502B               	movf	(___flmul@temp+1)^0,w,c
  2158  000A84  6E1C               	movwf	(??___flmul+1)^0,c
  2159  000A86  6A1D               	clrf	(??___flmul+2)^0,c
  2160  000A88  6A1E               	clrf	(??___flmul+3)^0,c
  2161  000A8A  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  2162  000A8E  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  2163  000A92  C01B  F01C         	movff	??___flmul,??___flmul+1
  2164  000A96  6A1B               	clrf	??___flmul^0,c
  2165  000A98  501B               	movf	??___flmul^0,w,c
  2166  000A9A  2626               	addwf	___flmul@prod^0,f,c
  2167  000A9C  501C               	movf	(??___flmul+1)^0,w,c
  2168  000A9E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2169  000AA0  501D               	movf	(??___flmul+2)^0,w,c
  2170  000AA2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2171  000AA4  501E               	movf	(??___flmul+3)^0,w,c
  2172  000AA6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2173  000AA8  C020  F01B         	movff	___flmul@grs,??___flmul
  2174  000AAC  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  2175  000AB0  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  2176  000AB4  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  2177  000AB8  0E19               	movlw	25
  2178  000ABA  EF64  F005         	goto	u1040
  2179  000ABE                     u1045:
  2180  000ABE  90D8               	bcf	status,0,c
  2181  000AC0  321E               	rrcf	(??___flmul+3)^0,f,c
  2182  000AC2  321D               	rrcf	(??___flmul+2)^0,f,c
  2183  000AC4  321C               	rrcf	(??___flmul+1)^0,f,c
  2184  000AC6  321B               	rrcf	??___flmul^0,f,c
  2185  000AC8                     u1040:
  2186  000AC8  2EE8               	decfsz	wreg,f,c
  2187  000ACA  EF5F  F005         	goto	u1045
  2188  000ACE  501B               	movf	??___flmul^0,w,c
  2189  000AD0  2626               	addwf	___flmul@prod^0,f,c
  2190  000AD2  501C               	movf	(??___flmul+1)^0,w,c
  2191  000AD4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2192  000AD6  501D               	movf	(??___flmul+2)^0,w,c
  2193  000AD8  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2194  000ADA  501E               	movf	(??___flmul+3)^0,w,c
  2195  000ADC  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2196  000ADE  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2197  000AE2  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2198  000AE6  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2199  000AEA  6A20               	clrf	___flmul@grs^0,c
  2200  000AEC  5024               	movf	___flmul@aexp^0,w,c
  2201  000AEE  C025  F01B         	movff	___flmul@bexp,??___flmul
  2202  000AF2  6A1C               	clrf	(??___flmul+1)^0,c
  2203  000AF4  261B               	addwf	??___flmul^0,f,c
  2204  000AF6  0E00               	movlw	0
  2205  000AF8  221C               	addwfc	(??___flmul+1)^0,f,c
  2206  000AFA  0E82               	movlw	130
  2207  000AFC  241B               	addwf	??___flmul^0,w,c
  2208  000AFE  6E2A               	movwf	___flmul@temp^0,c
  2209  000B00  0EFF               	movlw	255
  2210  000B02  201C               	addwfc	(??___flmul+1)^0,w,c
  2211  000B04  6E2B               	movwf	(___flmul@temp+1)^0,c
  2212  000B06  EF9A  F005         	goto	l1951
  2213  000B0A                     l1945:
  2214  000B0A  90D8               	bcf	status,0,c
  2215  000B0C  3626               	rlcf	___flmul@prod^0,f,c
  2216  000B0E  3627               	rlcf	(___flmul@prod+1)^0,f,c
  2217  000B10  3628               	rlcf	(___flmul@prod+2)^0,f,c
  2218  000B12  3629               	rlcf	(___flmul@prod+3)^0,f,c
  2219  000B14  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2220  000B16  EF8F  F005         	goto	u1051
  2221  000B1A  EF91  F005         	goto	u1050
  2222  000B1E                     u1051:
  2223  000B1E  EF92  F005         	goto	l1023
  2224  000B22                     u1050:
  2225  000B22  8026               	bsf	___flmul@prod^0,0,c
  2226  000B24                     l1023:
  2227  000B24  90D8               	bcf	status,0,c
  2228  000B26  3620               	rlcf	___flmul@grs^0,f,c
  2229  000B28  3621               	rlcf	(___flmul@grs+1)^0,f,c
  2230  000B2A  3622               	rlcf	(___flmul@grs+2)^0,f,c
  2231  000B2C  3623               	rlcf	(___flmul@grs+3)^0,f,c
  2232  000B2E  062A               	decf	___flmul@temp^0,f,c
  2233  000B30  A0D8               	btfss	status,0,c
  2234  000B32  062B               	decf	(___flmul@temp+1)^0,f,c
  2235  000B34                     l1951:
  2236  000B34  AE28               	btfss	(___flmul@prod+2)^0,7,c
  2237  000B36  EF9F  F005         	goto	u1061
  2238  000B3A  EFA1  F005         	goto	u1060
  2239  000B3E                     u1061:
  2240  000B3E  EF85  F005         	goto	l1945
  2241  000B42                     u1060:
  2242  000B42  0E00               	movlw	0
  2243  000B44  6E24               	movwf	___flmul@aexp^0,c
  2244  000B46  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2245  000B48  EFA8  F005         	goto	u1071
  2246  000B4C  EFAA  F005         	goto	u1070
  2247  000B50                     u1071:
  2248  000B50  EFCE  F005         	goto	l1025
  2249  000B54                     u1070:
  2250  000B54  0EFF               	movlw	255
  2251  000B56  1420               	andwf	___flmul@grs^0,w,c
  2252  000B58  6E1B               	movwf	??___flmul^0,c
  2253  000B5A  0EFF               	movlw	255
  2254  000B5C  1421               	andwf	(___flmul@grs+1)^0,w,c
  2255  000B5E  6E1C               	movwf	(??___flmul+1)^0,c
  2256  000B60  0EFF               	movlw	255
  2257  000B62  1422               	andwf	(___flmul@grs+2)^0,w,c
  2258  000B64  6E1D               	movwf	(??___flmul+2)^0,c
  2259  000B66  0E7F               	movlw	127
  2260  000B68  1423               	andwf	(___flmul@grs+3)^0,w,c
  2261  000B6A  6E1E               	movwf	(??___flmul+3)^0,c
  2262  000B6C  501B               	movf	??___flmul^0,w,c
  2263  000B6E  101C               	iorwf	(??___flmul+1)^0,w,c
  2264  000B70  101D               	iorwf	(??___flmul+2)^0,w,c
  2265  000B72  101E               	iorwf	(??___flmul+3)^0,w,c
  2266  000B74  B4D8               	btfsc	status,2,c
  2267  000B76  EFBF  F005         	goto	u1081
  2268  000B7A  EFC1  F005         	goto	u1080
  2269  000B7E                     u1081:
  2270  000B7E  EFC5  F005         	goto	l1026
  2271  000B82                     u1080:
  2272  000B82                     l1959:
  2273  000B82  0E01               	movlw	1
  2274  000B84  6E24               	movwf	___flmul@aexp^0,c
  2275  000B86  EFCE  F005         	goto	l1025
  2276  000B8A                     l1026:
  2277  000B8A  A026               	btfss	___flmul@prod^0,0,c
  2278  000B8C  EFCA  F005         	goto	u1091
  2279  000B90  EFCC  F005         	goto	u1090
  2280  000B94                     u1091:
  2281  000B94  EFCE  F005         	goto	l1025
  2282  000B98                     u1090:
  2283  000B98  EFC1  F005         	goto	l1959
  2284  000B9C                     l1025:
  2285  000B9C  5024               	movf	___flmul@aexp^0,w,c
  2286  000B9E  B4D8               	btfsc	status,2,c
  2287  000BA0  EFD4  F005         	goto	u1101
  2288  000BA4  EFD6  F005         	goto	u1100
  2289  000BA8                     u1101:
  2290  000BA8  EFFA  F005         	goto	l1971
  2291  000BAC                     u1100:
  2292  000BAC  0E01               	movlw	1
  2293  000BAE  2626               	addwf	___flmul@prod^0,f,c
  2294  000BB0  0E00               	movlw	0
  2295  000BB2  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2296  000BB4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2297  000BB6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2298  000BB8  A029               	btfss	(___flmul@prod+3)^0,0,c
  2299  000BBA  EFE1  F005         	goto	u1111
  2300  000BBE  EFE3  F005         	goto	u1110
  2301  000BC2                     u1111:
  2302  000BC2  EFFA  F005         	goto	l1971
  2303  000BC6                     u1110:
  2304  000BC6  C026  F01B         	movff	___flmul@prod,??___flmul
  2305  000BCA  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  2306  000BCE  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  2307  000BD2  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  2308  000BD6  341E               	rlcf	(??___flmul+3)^0,w,c
  2309  000BD8  321E               	rrcf	(??___flmul+3)^0,f,c
  2310  000BDA  321D               	rrcf	(??___flmul+2)^0,f,c
  2311  000BDC  321C               	rrcf	(??___flmul+1)^0,f,c
  2312  000BDE  321B               	rrcf	??___flmul^0,f,c
  2313  000BE0  C01B  F026         	movff	??___flmul,___flmul@prod
  2314  000BE4  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  2315  000BE8  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  2316  000BEC  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  2317  000BF0  4A2A               	infsnz	___flmul@temp^0,f,c
  2318  000BF2  2A2B               	incf	(___flmul@temp+1)^0,f,c
  2319  000BF4                     l1971:
  2320  000BF4  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2321  000BF6  EF05  F006         	goto	u1121
  2322  000BFA  502B               	movf	(___flmul@temp+1)^0,w,c
  2323  000BFC  E108               	bnz	u1120
  2324  000BFE  282A               	incf	___flmul@temp^0,w,c
  2325  000C00  A0D8               	btfss	status,0,c
  2326  000C02  EF05  F006         	goto	u1121
  2327  000C06  EF07  F006         	goto	u1120
  2328  000C0A                     u1121:
  2329  000C0A  EF11  F006         	goto	l1975
  2330  000C0E                     u1120:
  2331  000C0E  0E00               	movlw	0
  2332  000C10  6E26               	movwf	___flmul@prod^0,c
  2333  000C12  0E00               	movlw	0
  2334  000C14  6E27               	movwf	(___flmul@prod+1)^0,c
  2335  000C16  0E80               	movlw	128
  2336  000C18  6E28               	movwf	(___flmul@prod+2)^0,c
  2337  000C1A  0E7F               	movlw	127
  2338  000C1C  6E29               	movwf	(___flmul@prod+3)^0,c
  2339  000C1E  EF3F  F006         	goto	l1987
  2340  000C22                     l1975:
  2341  000C22  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2342  000C24  EF1E  F006         	goto	u1130
  2343  000C28  502B               	movf	(___flmul@temp+1)^0,w,c
  2344  000C2A  E106               	bnz	u1131
  2345  000C2C  042A               	decf	___flmul@temp^0,w,c
  2346  000C2E  B0D8               	btfsc	status,0,c
  2347  000C30  EF1C  F006         	goto	u1131
  2348  000C34  EF1E  F006         	goto	u1130
  2349  000C38                     u1131:
  2350  000C38  EF2A  F006         	goto	l1033
  2351  000C3C                     u1130:
  2352  000C3C  0E00               	movlw	0
  2353  000C3E  6E26               	movwf	___flmul@prod^0,c
  2354  000C40  0E00               	movlw	0
  2355  000C42  6E27               	movwf	(___flmul@prod+1)^0,c
  2356  000C44  0E00               	movlw	0
  2357  000C46  6E28               	movwf	(___flmul@prod+2)^0,c
  2358  000C48  0E00               	movlw	0
  2359  000C4A  6E29               	movwf	(___flmul@prod+3)^0,c
  2360  000C4C  0E00               	movlw	0
  2361  000C4E  6E1F               	movwf	___flmul@sign^0,c
  2362  000C50  EF3F  F006         	goto	l1987
  2363  000C54                     l1033:
  2364  000C54  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  2365  000C58  0EFF               	movlw	255
  2366  000C5A  1626               	andwf	___flmul@prod^0,f,c
  2367  000C5C  0EFF               	movlw	255
  2368  000C5E  1627               	andwf	(___flmul@prod+1)^0,f,c
  2369  000C60  0E7F               	movlw	127
  2370  000C62  1628               	andwf	(___flmul@prod+2)^0,f,c
  2371  000C64  0E00               	movlw	0
  2372  000C66  1629               	andwf	(___flmul@prod+3)^0,f,c
  2373  000C68  A025               	btfss	___flmul@bexp^0,0,c
  2374  000C6A  EF39  F006         	goto	u1141
  2375  000C6E  EF3B  F006         	goto	u1140
  2376  000C72                     u1141:
  2377  000C72  EF3C  F006         	goto	l1985
  2378  000C76                     u1140:
  2379  000C76  8E28               	bsf	(___flmul@prod+2)^0,7,c
  2380  000C78                     l1985:
  2381  000C78  90D8               	bcf	status,0,c
  2382  000C7A  3025               	rrcf	___flmul@bexp^0,w,c
  2383  000C7C  6E29               	movwf	(___flmul@prod+3)^0,c
  2384  000C7E                     l1987:
  2385  000C7E  501F               	movf	___flmul@sign^0,w,c
  2386  000C80  1229               	iorwf	(___flmul@prod+3)^0,f,c
  2387  000C82  C026  F013         	movff	___flmul@prod,?___flmul
  2388  000C86  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  2389  000C8A  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  2390  000C8E  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  2391  000C92                     l1020:
  2392  000C92  0012               	return		;funcret
  2393  000C94                     __end_of___flmul:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function ___flge *****************
  2397 ;; Defined at:
  2398 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  ff1             4   43[COMRAM] unsigned char 
  2401 ;;  ff2             4   47[COMRAM] unsigned char 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;		None               void
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         8       0       0       0       0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2415 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2416 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2417 ;;Total ram usage:       12 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 4
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_normaliza
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text8
  2428  0013AC                     __ptext8:
  2429                           	callstack 0
  2430  0013AC                     ___flge:
  2431                           	callstack 25
  2432  0013AC  0E00               	movlw	0
  2433  0013AE  142C               	andwf	___flge@ff1^0,w,c
  2434  0013B0  6E34               	movwf	??___flge^0,c
  2435  0013B2  0E00               	movlw	0
  2436  0013B4  142D               	andwf	(___flge@ff1+1)^0,w,c
  2437  0013B6  6E35               	movwf	(??___flge+1)^0,c
  2438  0013B8  0E80               	movlw	128
  2439  0013BA  142E               	andwf	(___flge@ff1+2)^0,w,c
  2440  0013BC  6E36               	movwf	(??___flge+2)^0,c
  2441  0013BE  0E7F               	movlw	127
  2442  0013C0  142F               	andwf	(___flge@ff1+3)^0,w,c
  2443  0013C2  6E37               	movwf	(??___flge+3)^0,c
  2444  0013C4  5034               	movf	??___flge^0,w,c
  2445  0013C6  1035               	iorwf	(??___flge+1)^0,w,c
  2446  0013C8  1036               	iorwf	(??___flge+2)^0,w,c
  2447  0013CA  1037               	iorwf	(??___flge+3)^0,w,c
  2448  0013CC  A4D8               	btfss	status,2,c
  2449  0013CE  EFEB  F009         	goto	u1151
  2450  0013D2  EFED  F009         	goto	u1150
  2451  0013D6                     u1151:
  2452  0013D6  EFF5  F009         	goto	l1997
  2453  0013DA                     u1150:
  2454  0013DA  0E00               	movlw	0
  2455  0013DC  6E2C               	movwf	___flge@ff1^0,c
  2456  0013DE  0E00               	movlw	0
  2457  0013E0  6E2D               	movwf	(___flge@ff1+1)^0,c
  2458  0013E2  0E00               	movlw	0
  2459  0013E4  6E2E               	movwf	(___flge@ff1+2)^0,c
  2460  0013E6  0E00               	movlw	0
  2461  0013E8  6E2F               	movwf	(___flge@ff1+3)^0,c
  2462  0013EA                     l1997:
  2463  0013EA  0E00               	movlw	0
  2464  0013EC  1430               	andwf	___flge@ff2^0,w,c
  2465  0013EE  6E34               	movwf	??___flge^0,c
  2466  0013F0  0E00               	movlw	0
  2467  0013F2  1431               	andwf	(___flge@ff2+1)^0,w,c
  2468  0013F4  6E35               	movwf	(??___flge+1)^0,c
  2469  0013F6  0E80               	movlw	128
  2470  0013F8  1432               	andwf	(___flge@ff2+2)^0,w,c
  2471  0013FA  6E36               	movwf	(??___flge+2)^0,c
  2472  0013FC  0E7F               	movlw	127
  2473  0013FE  1433               	andwf	(___flge@ff2+3)^0,w,c
  2474  001400  6E37               	movwf	(??___flge+3)^0,c
  2475  001402  5034               	movf	??___flge^0,w,c
  2476  001404  1035               	iorwf	(??___flge+1)^0,w,c
  2477  001406  1036               	iorwf	(??___flge+2)^0,w,c
  2478  001408  1037               	iorwf	(??___flge+3)^0,w,c
  2479  00140A  A4D8               	btfss	status,2,c
  2480  00140C  EF0A  F00A         	goto	u1161
  2481  001410  EF0C  F00A         	goto	u1160
  2482  001414                     u1161:
  2483  001414  EF14  F00A         	goto	l2001
  2484  001418                     u1160:
  2485  001418  0E00               	movlw	0
  2486  00141A  6E30               	movwf	___flge@ff2^0,c
  2487  00141C  0E00               	movlw	0
  2488  00141E  6E31               	movwf	(___flge@ff2+1)^0,c
  2489  001420  0E00               	movlw	0
  2490  001422  6E32               	movwf	(___flge@ff2+2)^0,c
  2491  001424  0E00               	movlw	0
  2492  001426  6E33               	movwf	(___flge@ff2+3)^0,c
  2493  001428                     l2001:
  2494  001428  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  2495  00142A  EF19  F00A         	goto	u1171
  2496  00142E  EF1B  F00A         	goto	u1170
  2497  001432                     u1171:
  2498  001432  EF24  F00A         	goto	l2005
  2499  001436                     u1170:
  2500  001436  6C2C               	negf	___flge@ff1^0,c
  2501  001438  1E2D               	comf	(___flge@ff1+1)^0,f,c
  2502  00143A  B0D8               	btfsc	status,0,c
  2503  00143C  2A2D               	incf	(___flge@ff1+1)^0,f,c
  2504  00143E  1E2E               	comf	(___flge@ff1+2)^0,f,c
  2505  001440  B0D8               	btfsc	status,0,c
  2506  001442  2A2E               	incf	(___flge@ff1+2)^0,f,c
  2507  001444  0E80               	movlw	128
  2508  001446  562F               	subfwb	(___flge@ff1+3)^0,f,c
  2509  001448                     l2005:
  2510  001448  AE33               	btfss	(___flge@ff2+3)^0,7,c
  2511  00144A  EF29  F00A         	goto	u1181
  2512  00144E  EF2B  F00A         	goto	u1180
  2513  001452                     u1181:
  2514  001452  EF34  F00A         	goto	l675
  2515  001456                     u1180:
  2516  001456  6C30               	negf	___flge@ff2^0,c
  2517  001458  1E31               	comf	(___flge@ff2+1)^0,f,c
  2518  00145A  B0D8               	btfsc	status,0,c
  2519  00145C  2A31               	incf	(___flge@ff2+1)^0,f,c
  2520  00145E  1E32               	comf	(___flge@ff2+2)^0,f,c
  2521  001460  B0D8               	btfsc	status,0,c
  2522  001462  2A32               	incf	(___flge@ff2+2)^0,f,c
  2523  001464  0E80               	movlw	128
  2524  001466  5633               	subfwb	(___flge@ff2+3)^0,f,c
  2525  001468                     l675:
  2526  001468  0E00               	movlw	0
  2527  00146A  1A2C               	xorwf	___flge@ff1^0,f,c
  2528  00146C  0E00               	movlw	0
  2529  00146E  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  2530  001470  0E00               	movlw	0
  2531  001472  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  2532  001474  0E80               	movlw	128
  2533  001476  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  2534  001478  0E00               	movlw	0
  2535  00147A  1A30               	xorwf	___flge@ff2^0,f,c
  2536  00147C  0E00               	movlw	0
  2537  00147E  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  2538  001480  0E00               	movlw	0
  2539  001482  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  2540  001484  0E80               	movlw	128
  2541  001486  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  2542  001488  5030               	movf	___flge@ff2^0,w,c
  2543  00148A  5C2C               	subwf	___flge@ff1^0,w,c
  2544  00148C  5031               	movf	(___flge@ff2+1)^0,w,c
  2545  00148E  582D               	subwfb	(___flge@ff1+1)^0,w,c
  2546  001490  5032               	movf	(___flge@ff2+2)^0,w,c
  2547  001492  582E               	subwfb	(___flge@ff1+2)^0,w,c
  2548  001494  5033               	movf	(___flge@ff2+3)^0,w,c
  2549  001496  582F               	subwfb	(___flge@ff1+3)^0,w,c
  2550  001498  B0D8               	btfsc	status,0,c
  2551  00149A  EF51  F00A         	goto	u1191
  2552  00149E  EF53  F00A         	goto	u1190
  2553  0014A2                     u1191:
  2554  0014A2  EF56  F00A         	goto	l2011
  2555  0014A6                     u1190:
  2556  0014A6  90D8               	bcf	status,0,c
  2557  0014A8  EF57  F00A         	goto	l676
  2558  0014AC                     l2011:
  2559  0014AC  80D8               	bsf	status,0,c
  2560  0014AE                     l676:
  2561  0014AE  0012               	return		;funcret
  2562  0014B0                     __end_of___flge:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _memcpy *****************
  2566 ;; Defined at:
  2567 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memcpy.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  d1              2    4[COMRAM] PTR void 
  2570 ;;		 -> texto(10), 
  2571 ;;  s1              3    6[COMRAM] PTR const void 
  2572 ;;		 -> ROM(32767), 
  2573 ;;  n               2    9[COMRAM] unsigned int 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  s               3   11[COMRAM] PTR const unsigned char 
  2576 ;;		 -> ROM(32767), 
  2577 ;;  d               2   14[COMRAM] PTR unsigned char 
  2578 ;;		 -> texto(10), 
  2579 ;;  tmp             1   16[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2    4[COMRAM] PTR void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         7       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2592 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:       13 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 4
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text9
  2604  001726                     __ptext9:
  2605                           	callstack 0
  2606  001726                     _memcpy:
  2607                           	callstack 26
  2608  001726  C007  F00C         	movff	memcpy@s1,memcpy@s
  2609  00172A  C008  F00D         	movff	memcpy@s1+1,memcpy@s+1
  2610  00172E  C009  F00E         	movff	memcpy@s1+2,memcpy@s+2
  2611  001732  C005  F00F         	movff	memcpy@d1,memcpy@d
  2612  001736  C006  F010         	movff	memcpy@d1+1,memcpy@d+1
  2613  00173A  EFB6  F00B         	goto	l2111
  2614  00173E                     l2103:
  2615  00173E  C00C  FFF6         	movff	memcpy@s,tblptrl
  2616  001742  C00D  FFF7         	movff	memcpy@s+1,tblptrh
  2617  001746  C00E  FFF8         	movff	memcpy@s+2,tblptru
  2618  00174A  0008               	tblrd		*
  2619  00174C  CFF5 F011          	movff	tablat,memcpy@tmp
  2620  001750  0E01               	movlw	1
  2621  001752  260C               	addwf	memcpy@s^0,f,c
  2622  001754  0E00               	movlw	0
  2623  001756  220D               	addwfc	(memcpy@s+1)^0,f,c
  2624  001758  0E00               	movlw	0
  2625  00175A  220E               	addwfc	(memcpy@s+2)^0,f,c
  2626  00175C  C00F  FFD9         	movff	memcpy@d,fsr2l
  2627  001760  C010  FFDA         	movff	memcpy@d+1,fsr2h
  2628  001764  C011  FFDF         	movff	memcpy@tmp,indf2
  2629  001768  4A0F               	infsnz	memcpy@d^0,f,c
  2630  00176A  2A10               	incf	(memcpy@d+1)^0,f,c
  2631  00176C                     l2111:
  2632  00176C  060A               	decf	memcpy@n^0,f,c
  2633  00176E  A0D8               	btfss	status,0,c
  2634  001770  060B               	decf	(memcpy@n+1)^0,f,c
  2635  001772  280A               	incf	memcpy@n^0,w,c
  2636  001774  E106               	bnz	u1341
  2637  001776  280B               	incf	(memcpy@n+1)^0,w,c
  2638  001778  A4D8               	btfss	status,2,c
  2639  00177A  EFC1  F00B         	goto	u1341
  2640  00177E  EFC3  F00B         	goto	u1340
  2641  001782                     u1341:
  2642  001782  EF9F  F00B         	goto	l2103
  2643  001786                     u1340:
  2644  001786  0012               	return		;funcret
  2645  001788                     __end_of_memcpy:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _SYSTEM_Initialize *****************
  2649 ;; Defined at:
  2650 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 6
  2671 ;; This function calls:
  2672 ;;		_EUSART1_Initialize
  2673 ;;		_EXT_INT_Initialize
  2674 ;;		_INTERRUPT_Initialize
  2675 ;;		_OSCILLATOR_Initialize
  2676 ;;		_PIN_MANAGER_Initialize
  2677 ;;		_TMR0_Initialize
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text10
  2684  0018A8                     __ptext10:
  2685                           	callstack 0
  2686  0018A8                     _SYSTEM_Initialize:
  2687                           	callstack 24
  2688  0018A8                     
  2689                           ;mcc.c: 53: INTERRUPT_Initialize();
  2690  0018A8  EC98  F00C         	call	_INTERRUPT_Initialize	;wreg free
  2691  0018AC                     
  2692                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2693  0018AC  EC1A  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2694  0018B0                     
  2695                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2696  0018B0  EC44  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  2697  0018B4                     
  2698                           ;mcc.c: 56: EXT_INT_Initialize();
  2699  0018B4  EC6C  F00C         	call	_EXT_INT_Initialize	;wreg free
  2700  0018B8                     
  2701                           ;mcc.c: 57: TMR0_Initialize();
  2702  0018B8  ECFF  F00B         	call	_TMR0_Initialize	;wreg free
  2703  0018BC                     
  2704                           ;mcc.c: 58: EUSART1_Initialize();
  2705  0018BC  ECC4  F00B         	call	_EUSART1_Initialize	;wreg free
  2706  0018C0  0012               	return		;funcret
  2707  0018C2                     __end_of_SYSTEM_Initialize:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _TMR0_Initialize *****************
  2711 ;; Defined at:
  2712 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        2 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 5
  2733 ;; This function calls:
  2734 ;;		_TMR0_SetInterruptHandler
  2735 ;; This function is called by:
  2736 ;;		_SYSTEM_Initialize
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text11
  2741  0017FE                     __ptext11:
  2742                           	callstack 0
  2743  0017FE                     _TMR0_Initialize:
  2744                           	callstack 24
  2745  0017FE                     
  2746                           ;tmr0.c: 72: T0CONbits.T08BIT = 0;
  2747  0017FE  9CD5               	bcf	213,6,c	;volatile
  2748  001800                     
  2749                           ;tmr0.c: 75: TMR0H = 0x15;
  2750  001800  0E15               	movlw	21
  2751  001802  6ED7               	movwf	215,c	;volatile
  2752                           
  2753                           ;tmr0.c: 78: TMR0L = 0x9F;
  2754  001804  0E9F               	movlw	159
  2755  001806  6ED6               	movwf	214,c	;volatile
  2756  001808                     
  2757                           ;tmr0.c: 82: timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  2758  001808  50D6               	movf	214,w,c	;volatile
  2759  00180A  CFD7 F007          	movff	4055,??_TMR0_Initialize	;volatile
  2760  00180E  6A08               	clrf	(??_TMR0_Initialize+1)^0,c
  2761  001810  C007  F008         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2762  001814  6A07               	clrf	??_TMR0_Initialize^0,c
  2763  001816  1007               	iorwf	??_TMR0_Initialize^0,w,c
  2764  001818  6E41               	movwf	_timer0ReloadVal^0,c	;volatile
  2765  00181A  5008               	movf	(??_TMR0_Initialize+1)^0,w,c
  2766  00181C  6E42               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  2767  00181E                     
  2768                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
  2769  00181E  94F2               	bcf	242,2,c	;volatile
  2770  001820                     
  2771                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
  2772  001820  8AF2               	bsf	242,5,c	;volatile
  2773  001822                     
  2774                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2775  001822  0E34               	movlw	low _TMR0_DefaultInterruptHandler
  2776  001824  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2777  001826  0E19               	movlw	high _TMR0_DefaultInterruptHandler
  2778  001828  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2779  00182A  EC7B  F00C         	call	_TMR0_SetInterruptHandler	;wreg free
  2780  00182E                     
  2781                           ;tmr0.c: 94: T0CON = 0x90;
  2782  00182E  0E90               	movlw	144
  2783  001830  6ED5               	movwf	213,c	;volatile
  2784  001832  0012               	return		;funcret
  2785  001834                     __end_of_TMR0_Initialize:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _TMR0_SetInterruptHandler *****************
  2789 ;; Defined at:
  2790 ;;		line 157 in file "mcc_generated_files/tmr0.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  2793 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2805 ;;      Params:         2       0       0       0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2808 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2809 ;;Total ram usage:        2 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 4
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_TMR0_Initialize
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text12
  2820  0018F6                     __ptext12:
  2821                           	callstack 0
  2822  0018F6                     _TMR0_SetInterruptHandler:
  2823                           	callstack 24
  2824  0018F6                     
  2825                           ;tmr0.c: 158: TMR0_InterruptHandler = InterruptHandler;
  2826  0018F6  C005  F043         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2827  0018FA  C006  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2828  0018FE  0012               	return		;funcret
  2829  001900                     __end_of_TMR0_SetInterruptHandler:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _PIN_MANAGER_Initialize *****************
  2833 ;; Defined at:
  2834 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2851 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 4
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_SYSTEM_Initialize
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text13
  2863  001834                     __ptext13:
  2864                           	callstack 0
  2865  001834                     _PIN_MANAGER_Initialize:
  2866                           	callstack 25
  2867  001834                     
  2868                           ;pin_manager.c: 60: LATA = 0x00;
  2869  001834  0E00               	movlw	0
  2870  001836  6E89               	movwf	137,c	;volatile
  2871                           
  2872                           ;pin_manager.c: 61: LATB = 0x00;
  2873  001838  0E00               	movlw	0
  2874  00183A  6E8A               	movwf	138,c	;volatile
  2875                           
  2876                           ;pin_manager.c: 62: LATC = 0x00;
  2877  00183C  0E00               	movlw	0
  2878  00183E  6E8B               	movwf	139,c	;volatile
  2879                           
  2880                           ;pin_manager.c: 67: TRISA = 0xC7;
  2881  001840  0EC7               	movlw	199
  2882  001842  6E92               	movwf	146,c	;volatile
  2883                           
  2884                           ;pin_manager.c: 68: TRISB = 0xFE;
  2885  001844  0EFE               	movlw	254
  2886  001846  6E93               	movwf	147,c	;volatile
  2887                           
  2888                           ;pin_manager.c: 69: TRISC = 0x87;
  2889  001848  0E87               	movlw	135
  2890  00184A  6E94               	movwf	148,c	;volatile
  2891                           
  2892                           ;pin_manager.c: 74: ANSELC = 0x04;
  2893  00184C  0E04               	movlw	4
  2894  00184E  010F               	movlb	15	; () banked
  2895  001850  6F5D               	movwf	93,b	;volatile
  2896                           
  2897                           ;pin_manager.c: 75: ANSELB = 0x3C;
  2898  001852  0E3C               	movlw	60
  2899  001854  6F5C               	movwf	92,b	;volatile
  2900                           
  2901                           ;pin_manager.c: 76: ANSELA = 0x07;
  2902  001856  0E07               	movlw	7
  2903  001858  6F5B               	movwf	91,b	;volatile
  2904                           
  2905                           ;pin_manager.c: 81: WPUB = 0x00;
  2906  00185A  0E00               	movlw	0
  2907  00185C  6E85               	movwf	133,c	;volatile
  2908  00185E                     
  2909                           ; BSR set to: 15
  2910                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  2911  00185E  8EF1               	bsf	241,7,c	;volatile
  2912  001860                     
  2913                           ; BSR set to: 15
  2914  001860  0012               	return		;funcret
  2915  001862                     __end_of_PIN_MANAGER_Initialize:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _OSCILLATOR_Initialize *****************
  2919 ;; Defined at:
  2920 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 4
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_SYSTEM_Initialize
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text14
  2949  001888                     __ptext14:
  2950                           	callstack 0
  2951  001888                     _OSCILLATOR_Initialize:
  2952                           	callstack 25
  2953  001888                     
  2954                           ;mcc.c: 64: OSCCON = 0x70;
  2955  001888  0E70               	movlw	112
  2956  00188A  6ED3               	movwf	211,c	;volatile
  2957                           
  2958                           ;mcc.c: 66: OSCCON2 = 0x00;
  2959  00188C  0E00               	movlw	0
  2960  00188E  6ED2               	movwf	210,c	;volatile
  2961                           
  2962                           ;mcc.c: 68: OSCTUNE = 0x80;
  2963  001890  0E80               	movlw	128
  2964  001892  6E9B               	movwf	155,c	;volatile
  2965                           
  2966                           ;mcc.c: 70: ACTCON = 0x00;
  2967  001894  0E00               	movlw	0
  2968  001896  6EB5               	movwf	181,c	;volatile
  2969  001898                     l136:
  2970  001898  AED2               	btfss	4050,7,c	;volatile
  2971  00189A  EF51  F00C         	goto	u21
  2972  00189E  EF53  F00C         	goto	u20
  2973  0018A2                     u21:
  2974  0018A2  EF4C  F00C         	goto	l136
  2975  0018A6                     u20:
  2976  0018A6  0012               	return		;funcret
  2977  0018A8                     __end_of_OSCILLATOR_Initialize:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _INTERRUPT_Initialize *****************
  2981 ;; Defined at:
  2982 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		None
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 4
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_SYSTEM_Initialize
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text15
  3011  001930                     __ptext15:
  3012                           	callstack 0
  3013  001930                     _INTERRUPT_Initialize:
  3014                           	callstack 25
  3015  001930                     
  3016                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3017  001930  9ED0               	bcf	208,7,c	;volatile
  3018  001932  0012               	return		;funcret
  3019  001934                     __end_of_INTERRUPT_Initialize:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _EXT_INT_Initialize *****************
  3023 ;; Defined at:
  3024 ;;		line 91 in file "mcc_generated_files/ext_int.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3038 ;;      Params:         0       0       0       0       0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 5
  3045 ;; This function calls:
  3046 ;;		_INT1_SetInterruptHandler
  3047 ;; This function is called by:
  3048 ;;		_SYSTEM_Initialize
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text16
  3053  0018D8                     __ptext16:
  3054                           	callstack 0
  3055  0018D8                     _EXT_INT_Initialize:
  3056                           	callstack 24
  3057  0018D8                     
  3058                           ;ext_int.c: 96: (INTCON3bits.INT1IF = 0);
  3059  0018D8  90F0               	bcf	240,0,c	;volatile
  3060                           
  3061                           ;ext_int.c: 97: (INTCON2bits.INTEDG1 = 1);
  3062  0018DA  8AF1               	bsf	241,5,c	;volatile
  3063  0018DC                     
  3064                           ;ext_int.c: 99: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3065  0018DC  0E36               	movlw	low _INT1_DefaultInterruptHandler
  3066  0018DE  6E05               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3067  0018E0  0E19               	movlw	high _INT1_DefaultInterruptHandler
  3068  0018E2  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3069  0018E4  EC80  F00C         	call	_INT1_SetInterruptHandler	;wreg free
  3070  0018E8                     
  3071                           ;ext_int.c: 100: (INTCON3bits.INT1IE = 1);
  3072  0018E8  86F0               	bsf	240,3,c	;volatile
  3073  0018EA  0012               	return		;funcret
  3074  0018EC                     __end_of_EXT_INT_Initialize:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _INT1_SetInterruptHandler *****************
  3078 ;; Defined at:
  3079 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  3082 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         2       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        2 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 4
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_EXT_INT_Initialize
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text17
  3109  001900                     __ptext17:
  3110                           	callstack 0
  3111  001900                     _INT1_SetInterruptHandler:
  3112                           	callstack 24
  3113  001900                     
  3114                           ;ext_int.c: 83: INT1_InterruptHandler = InterruptHandler;
  3115  001900  C005  F03F         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3116  001904  C006  F040         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3117  001908  0012               	return		;funcret
  3118  00190A                     __end_of_INT1_SetInterruptHandler:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _EUSART1_Initialize *****************
  3122 ;; Defined at:
  3123 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3137 ;;      Params:         0       0       0       0       0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 5
  3144 ;; This function calls:
  3145 ;;		_EUSART1_SetErrorHandler
  3146 ;;		_EUSART1_SetFramingErrorHandler
  3147 ;;		_EUSART1_SetOverrunErrorHandler
  3148 ;; This function is called by:
  3149 ;;		_SYSTEM_Initialize
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text18
  3154  001788                     __ptext18:
  3155                           	callstack 0
  3156  001788                     _EUSART1_Initialize:
  3157                           	callstack 24
  3158  001788                     
  3159                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  3160  001788  0E08               	movlw	8
  3161  00178A  6EB8               	movwf	184,c	;volatile
  3162                           
  3163                           ;eusart1.c: 74: RCSTA1 = 0x90;
  3164  00178C  0E90               	movlw	144
  3165  00178E  6EAB               	movwf	171,c	;volatile
  3166                           
  3167                           ;eusart1.c: 77: TXSTA1 = 0x24;
  3168  001790  0E24               	movlw	36
  3169  001792  6EAC               	movwf	172,c	;volatile
  3170                           
  3171                           ;eusart1.c: 80: SPBRG1 = 0xE1;
  3172  001794  0EE1               	movlw	225
  3173  001796  6EAF               	movwf	175,c	;volatile
  3174                           
  3175                           ;eusart1.c: 83: SPBRGH1 = 0x04;
  3176  001798  0E04               	movlw	4
  3177  00179A  6EB0               	movwf	176,c	;volatile
  3178  00179C                     
  3179                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3180  00179C  0E00               	movlw	0
  3181  00179E  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3182  0017A0  0E00               	movlw	0
  3183  0017A2  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3184  0017A4  EC8A  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3185  0017A8                     
  3186                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3187  0017A8  0E00               	movlw	0
  3188  0017AA  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3189  0017AC  0E00               	movlw	0
  3190  0017AE  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3191  0017B0  EC85  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3192  0017B4                     
  3193                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3194  0017B4  0E00               	movlw	0
  3195  0017B6  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3196  0017B8  0E00               	movlw	0
  3197  0017BA  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3198  0017BC  EC8F  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  3199  0017C0                     
  3200                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  3201  0017C0  0E00               	movlw	0
  3202  0017C2  6E50               	movwf	_eusart1RxLastError^0,c	;volatile
  3203  0017C4  0012               	return		;funcret
  3204  0017C6                     __end_of_EUSART1_Initialize:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3208 ;; Defined at:
  3209 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3212 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3224 ;;      Params:         2       0       0       0       0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3227 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3228 ;;Total ram usage:        2 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 4
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_EUSART1_Initialize
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text19
  3239  00190A                     __ptext19:
  3240                           	callstack 0
  3241  00190A                     _EUSART1_SetOverrunErrorHandler:
  3242                           	callstack 24
  3243  00190A                     
  3244                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  3245  00190A  C005  F049         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3246  00190E  C006  F04A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3247  001912  0012               	return		;funcret
  3248  001914                     __end_of_EUSART1_SetOverrunErrorHandler:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3252 ;; Defined at:
  3253 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3256 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3268 ;;      Params:         2       0       0       0       0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3271 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3272 ;;Total ram usage:        2 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 4
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_EUSART1_Initialize
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text20
  3283  001914                     __ptext20:
  3284                           	callstack 0
  3285  001914                     _EUSART1_SetFramingErrorHandler:
  3286                           	callstack 24
  3287  001914                     
  3288                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  3289  001914  C005  F04B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3290  001918  C006  F04C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3291  00191C  0012               	return		;funcret
  3292  00191E                     __end_of_EUSART1_SetFramingErrorHandler:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _EUSART1_SetErrorHandler *****************
  3296 ;; Defined at:
  3297 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3300 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3312 ;;      Params:         2       0       0       0       0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3315 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3316 ;;Total ram usage:        2 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 4
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_EUSART1_Initialize
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text21
  3327  00191E                     __ptext21:
  3328                           	callstack 0
  3329  00191E                     _EUSART1_SetErrorHandler:
  3330                           	callstack 24
  3331  00191E                     
  3332                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  3333  00191E  C005  F047         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3334  001922  C006  F048         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3335  001926  0012               	return		;funcret
  3336  001928                     __end_of_EUSART1_SetErrorHandler:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _Hash_algoritmo *****************
  3340 ;; Defined at:
  3341 ;;		line 129 in file "main.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  hash_acum       4   26[COMRAM] unsigned long 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  4   16[COMRAM] unsigned long 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3355 ;;      Params:         4       0       0       0       0       0       0       0       0
  3356 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3357 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3358 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3359 ;;Total ram usage:       14 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 5
  3362 ;; This function calls:
  3363 ;;		___lmul
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text22
  3370  001572                     __ptext22:
  3371                           	callstack 0
  3372  001572                     _Hash_algoritmo:
  3373                           	callstack 25
  3374  001572                     
  3375                           ;main.c: 131: unsigned long hash_acum = 2166136261;
  3376  001572  0EC5               	movlw	197
  3377  001574  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3378  001576  0E9D               	movlw	157
  3379  001578  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3380  00157A  0E1C               	movlw	28
  3381  00157C  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3382  00157E  0E81               	movlw	129
  3383  001580  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3384                           
  3385                           ;main.c: 132: for (cont = 0; cont < cuenta - 1; cont++)
  3386  001582  0E00               	movlw	0
  3387  001584  6E4E               	movwf	_cont^0,c
  3388  001586  EFE9  F00A         	goto	l2099
  3389  00158A                     l2095:
  3390                           
  3391                           ;main.c: 133: {;main.c: 134: hash_acum = (hash_acum * 16777619) ^ tiempo[cont];
  3392  00158A  C01B  F005         	movff	Hash_algoritmo@hash_acum,___lmul@multiplier
  3393  00158E  C01C  F006         	movff	Hash_algoritmo@hash_acum+1,___lmul@multiplier+1
  3394  001592  C01D  F007         	movff	Hash_algoritmo@hash_acum+2,___lmul@multiplier+2
  3395  001596  C01E  F008         	movff	Hash_algoritmo@hash_acum+3,___lmul@multiplier+3
  3396  00159A  0E93               	movlw	147
  3397  00159C  6E09               	movwf	___lmul@multiplicand^0,c
  3398  00159E  0E01               	movlw	1
  3399  0015A0  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  3400  0015A2  0E00               	movlw	0
  3401  0015A4  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  3402  0015A6  0E01               	movlw	1
  3403  0015A8  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  3404  0015AA  EC5E  F00B         	call	___lmul	;wreg free
  3405  0015AE  0E60               	movlw	low _tiempo
  3406  0015B0  244E               	addwf	_cont^0,w,c
  3407  0015B2  6ED9               	movwf	fsr2l,c
  3408  0015B4  6ADA               	clrf	fsr2h,c
  3409  0015B6  0E00               	movlw	high _tiempo
  3410  0015B8  22DA               	addwfc	fsr2h,f,c
  3411  0015BA  50DF               	movf	indf2,w,c
  3412  0015BC  6E15               	movwf	??_Hash_algoritmo^0,c
  3413  0015BE  5015               	movf	??_Hash_algoritmo^0,w,c
  3414  0015C0  1805               	xorwf	?___lmul^0,w,c
  3415  0015C2  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3416  0015C4  5006               	movf	(?___lmul+1)^0,w,c
  3417  0015C6  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3418  0015C8  5007               	movf	(?___lmul+2)^0,w,c
  3419  0015CA  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3420  0015CC  5008               	movf	(?___lmul+3)^0,w,c
  3421  0015CE  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3422  0015D0  2A4E               	incf	_cont^0,f,c
  3423  0015D2                     l2099:
  3424  0015D2  0EFF               	movlw	255
  3425  0015D4  6E15               	movwf	??_Hash_algoritmo^0,c
  3426  0015D6  0EFF               	movlw	255
  3427  0015D8  6E16               	movwf	(??_Hash_algoritmo+1)^0,c
  3428  0015DA  C045  F017         	movff	_cuenta,??_Hash_algoritmo+2
  3429  0015DE  C046  F018         	movff	_cuenta+1,??_Hash_algoritmo+3
  3430  0015E2  5015               	movf	??_Hash_algoritmo^0,w,c
  3431  0015E4  2617               	addwf	(??_Hash_algoritmo+2)^0,f,c
  3432  0015E6  5016               	movf	(??_Hash_algoritmo+1)^0,w,c
  3433  0015E8  2218               	addwfc	(??_Hash_algoritmo+3)^0,f,c
  3434  0015EA  504E               	movf	_cont^0,w,c
  3435  0015EC  6E19               	movwf	(??_Hash_algoritmo+4)^0,c
  3436  0015EE  6A1A               	clrf	(??_Hash_algoritmo+5)^0,c
  3437  0015F0  5017               	movf	(??_Hash_algoritmo+2)^0,w,c
  3438  0015F2  5C19               	subwf	(??_Hash_algoritmo+4)^0,w,c
  3439  0015F4  5018               	movf	(??_Hash_algoritmo+3)^0,w,c
  3440  0015F6  581A               	subwfb	(??_Hash_algoritmo+5)^0,w,c
  3441  0015F8  A0D8               	btfss	status,0,c
  3442  0015FA  EF01  F00B         	goto	u1331
  3443  0015FE  EF03  F00B         	goto	u1330
  3444  001602                     u1331:
  3445  001602  EFC5  F00A         	goto	l2095
  3446  001606                     u1330:
  3447  001606                     
  3448                           ;main.c: 135: };main.c: 136: return (hash_acum);
  3449  001606  C01B  F011         	movff	Hash_algoritmo@hash_acum,?_Hash_algoritmo
  3450  00160A  C01C  F012         	movff	Hash_algoritmo@hash_acum+1,?_Hash_algoritmo+1
  3451  00160E  C01D  F013         	movff	Hash_algoritmo@hash_acum+2,?_Hash_algoritmo+2
  3452  001612  C01E  F014         	movff	Hash_algoritmo@hash_acum+3,?_Hash_algoritmo+3
  3453  001616  0012               	return		;funcret
  3454  001618                     __end_of_Hash_algoritmo:
  3455                           	callstack 0
  3456                           
  3457 ;; *************** function ___lmul *****************
  3458 ;; Defined at:
  3459 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  multiplier      4    4[COMRAM] unsigned long 
  3462 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  product         4   12[COMRAM] unsigned long 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  4    4[COMRAM] unsigned long 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3474 ;;      Params:         8       0       0       0       0       0       0       0       0
  3475 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3477 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3478 ;;Total ram usage:       12 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 4
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_Hash_algoritmo
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text23
  3489  0016BC                     __ptext23:
  3490                           	callstack 0
  3491  0016BC                     ___lmul:
  3492                           	callstack 25
  3493  0016BC  0E00               	movlw	0
  3494  0016BE  6E0D               	movwf	___lmul@product^0,c
  3495  0016C0  0E00               	movlw	0
  3496  0016C2  6E0E               	movwf	(___lmul@product+1)^0,c
  3497  0016C4  0E00               	movlw	0
  3498  0016C6  6E0F               	movwf	(___lmul@product+2)^0,c
  3499  0016C8  0E00               	movlw	0
  3500  0016CA  6E10               	movwf	(___lmul@product+3)^0,c
  3501  0016CC                     l1833:
  3502  0016CC  A005               	btfss	___lmul@multiplier^0,0,c
  3503  0016CE  EF6B  F00B         	goto	u911
  3504  0016D2  EF6D  F00B         	goto	u910
  3505  0016D6                     u911:
  3506  0016D6  EF75  F00B         	goto	l1837
  3507  0016DA                     u910:
  3508  0016DA  5009               	movf	___lmul@multiplicand^0,w,c
  3509  0016DC  260D               	addwf	___lmul@product^0,f,c
  3510  0016DE  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  3511  0016E0  220E               	addwfc	(___lmul@product+1)^0,f,c
  3512  0016E2  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  3513  0016E4  220F               	addwfc	(___lmul@product+2)^0,f,c
  3514  0016E6  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  3515  0016E8  2210               	addwfc	(___lmul@product+3)^0,f,c
  3516  0016EA                     l1837:
  3517  0016EA  90D8               	bcf	status,0,c
  3518  0016EC  3609               	rlcf	___lmul@multiplicand^0,f,c
  3519  0016EE  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3520  0016F0  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3521  0016F2  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3522  0016F4  90D8               	bcf	status,0,c
  3523  0016F6  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  3524  0016F8  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  3525  0016FA  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  3526  0016FC  3205               	rrcf	___lmul@multiplier^0,f,c
  3527  0016FE  5005               	movf	___lmul@multiplier^0,w,c
  3528  001700  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  3529  001702  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  3530  001704  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  3531  001706  A4D8               	btfss	status,2,c
  3532  001708  EF88  F00B         	goto	u921
  3533  00170C  EF8A  F00B         	goto	u920
  3534  001710                     u921:
  3535  001710  EF66  F00B         	goto	l1833
  3536  001714                     u920:
  3537  001714  C00D  F005         	movff	___lmul@product,?___lmul
  3538  001718  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  3539  00171C  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  3540  001720  C010  F008         	movff	___lmul@product+3,?___lmul+3
  3541  001724  0012               	return		;funcret
  3542  001726                     __end_of___lmul:
  3543                           	callstack 0
  3544                           
  3545 ;; *************** function _INTERRUPT_InterruptManager *****************
  3546 ;; Defined at:
  3547 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3563 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3564 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3565 ;;Total ram usage:        4 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 3
  3568 ;; This function calls:
  3569 ;;		_INT1_ISR
  3570 ;;		_TMR0_ISR
  3571 ;; This function is called by:
  3572 ;;		Interrupt level 2
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	intcode
  3577  000008                     __pintcode:
  3578                           	callstack 0
  3579  000008                     _INTERRUPT_InterruptManager:
  3580                           	callstack 24
  3581                           
  3582                           ;incstack = 0
  3583  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3584  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3585  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3586  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3587  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3588  00001A                     
  3589                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3590  00001A  AAF2               	btfss	242,5,c	;volatile
  3591  00001C  EF12  F000         	goto	i2u141_41
  3592  000020  EF14  F000         	goto	i2u141_40
  3593  000024                     i2u141_41:
  3594  000024  EF1D  F000         	goto	i2l2173
  3595  000028                     i2u141_40:
  3596  000028  A4F2               	btfss	242,2,c	;volatile
  3597  00002A  EF19  F000         	goto	i2u142_41
  3598  00002E  EF1B  F000         	goto	i2u142_40
  3599  000032                     i2u142_41:
  3600  000032  EF1D  F000         	goto	i2l2173
  3601  000036                     i2u142_40:
  3602  000036                     
  3603                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  3604  000036  ECE3  F00B         	call	_TMR0_ISR	;wreg free
  3605  00003A                     i2l2173:
  3606                           
  3607                           ;interrupt_manager.c: 64: };interrupt_manager.c: 65: if(INTCON3bits.INT1IE == 1 && INTCO
      +                          N3bits.INT1IF == 1)
  3608  00003A  A6F0               	btfss	240,3,c	;volatile
  3609  00003C  EF22  F000         	goto	i2u143_41
  3610  000040  EF24  F000         	goto	i2u143_40
  3611  000044                     i2u143_41:
  3612  000044  EF2D  F000         	goto	i2l249
  3613  000048                     i2u143_40:
  3614  000048  A0F0               	btfss	240,0,c	;volatile
  3615  00004A  EF29  F000         	goto	i2u144_41
  3616  00004E  EF2B  F000         	goto	i2u144_40
  3617  000052                     i2u144_41:
  3618  000052  EF2D  F000         	goto	i2l249
  3619  000056                     i2u144_40:
  3620  000056                     
  3621                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: INT1_ISR();
  3622  000056  EC94  F00C         	call	_INT1_ISR	;wreg free
  3623  00005A                     i2l249:
  3624  00005A  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3625  00005E  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3626  000062  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3627  000066  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3628  00006A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3629  00006C  0011               	retfie		f
  3630  00006E                     __end_of_INTERRUPT_InterruptManager:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _TMR0_ISR *****************
  3634 ;; Defined at:
  3635 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 1
  3656 ;; This function calls:
  3657 ;;		Absolute function
  3658 ;;		_TMR0_DefaultInterruptHandler
  3659 ;; This function is called by:
  3660 ;;		_INTERRUPT_InterruptManager
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text25
  3665  0017C6                     __ptext25:
  3666                           	callstack 0
  3667  0017C6                     _TMR0_ISR:
  3668                           	callstack 25
  3669  0017C6                     
  3670                           ;tmr0.c: 140: INTCONbits.TMR0IF = 0;
  3671  0017C6  94F2               	bcf	242,2,c	;volatile
  3672  0017C8                     
  3673                           ;tmr0.c: 144: TMR0H = timer0ReloadVal >> 8;
  3674  0017C8  5042               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  3675  0017CA  6ED7               	movwf	215,c	;volatile
  3676  0017CC                     
  3677                           ;tmr0.c: 145: TMR0L = (uint8_t) timer0ReloadVal;
  3678  0017CC  C041  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  3679  0017D0                     
  3680                           ;tmr0.c: 147: if(TMR0_InterruptHandler)
  3681  0017D0  5043               	movf	_TMR0_InterruptHandler^0,w,c
  3682  0017D2  1044               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  3683  0017D4  B4D8               	btfsc	status,2,c
  3684  0017D6  EFEF  F00B         	goto	i2u52_41
  3685  0017DA  EFF1  F00B         	goto	i2u52_40
  3686  0017DE                     i2u52_41:
  3687  0017DE  EFFE  F00B         	goto	i2l209
  3688  0017E2                     i2u52_40:
  3689  0017E2                     
  3690                           ;tmr0.c: 148: {;tmr0.c: 149: TMR0_InterruptHandler();
  3691  0017E2  D802               	call	i2u53_48
  3692  0017E4  EFFE  F00B         	goto	i2u53_49
  3693  0017E8                     i2u53_48:
  3694  0017E8  0005               	push	
  3695  0017EA  6EFA               	movwf	pclath,c
  3696  0017EC  5043               	movf	_TMR0_InterruptHandler^0,w,c
  3697  0017EE  6EFD               	movwf	tosl,c
  3698  0017F0  5044               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  3699  0017F2  6EFE               	movwf	tosh,c
  3700  0017F4  50F8               	movf	tblptru,w,c
  3701  0017F6  6EFF               	movwf	tosu,c
  3702  0017F8  50FA               	movf	pclath,w,c
  3703  0017FA  0012               	return		;indir
  3704  0017FC                     i2u53_49:
  3705  0017FC                     i2l209:
  3706  0017FC  0012               	return		;funcret
  3707  0017FE                     __end_of_TMR0_ISR:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3711 ;; Defined at:
  3712 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;		None
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;		None
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		None
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3726 ;;      Params:         0       0       0       0       0       0       0       0       0
  3727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3729 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3730 ;;Total ram usage:        0 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_TMR0_Initialize
  3736 ;;		_TMR0_ISR
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text26
  3741  001934                     __ptext26:
  3742                           	callstack 0
  3743  001934                     _TMR0_DefaultInterruptHandler:
  3744                           	callstack 25
  3745  001934  0012               	return		;funcret
  3746  001936                     __end_of_TMR0_DefaultInterruptHandler:
  3747                           	callstack 0
  3748                           
  3749 ;; *************** function _INT1_ISR *****************
  3750 ;; Defined at:
  3751 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 2
  3772 ;; This function calls:
  3773 ;;		_INT1_CallBack
  3774 ;; This function is called by:
  3775 ;;		_INTERRUPT_InterruptManager
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text27
  3780  001928                     __ptext27:
  3781                           	callstack 0
  3782  001928                     _INT1_ISR:
  3783                           	callstack 24
  3784  001928                     
  3785                           ;ext_int.c: 34: (INTCON3bits.INT1IF = 0);
  3786  001928  90F0               	bcf	240,0,c	;volatile
  3787  00192A                     
  3788                           ;ext_int.c: 37: INT1_CallBack();
  3789  00192A  EC58  F00A         	call	_INT1_CallBack	;wreg free
  3790  00192E  0012               	return		;funcret
  3791  001930                     __end_of_INT1_ISR:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _INT1_CallBack *****************
  3795 ;; Defined at:
  3796 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 1
  3817 ;; This function calls:
  3818 ;;		Absolute function
  3819 ;;		_INT1_DefaultInterruptHandler
  3820 ;; This function is called by:
  3821 ;;		_INT1_ISR
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text28
  3826  0014B0                     __ptext28:
  3827                           	callstack 0
  3828  0014B0                     _INT1_CallBack:
  3829                           	callstack 24
  3830  0014B0                     
  3831                           ;ext_int.c: 44: if (INT1IF == 1)
  3832  0014B0  A0F0               	btfss	4080,0,c	;volatile
  3833  0014B2  EF5D  F00A         	goto	i2u83_41
  3834  0014B6  EF5F  F00A         	goto	i2u83_40
  3835  0014BA                     i2u83_41:
  3836  0014BA  EFA1  F00A         	goto	i2l1825
  3837  0014BE                     i2u83_40:
  3838  0014BE                     
  3839                           ;ext_int.c: 45: {;ext_int.c: 49: if (flag_codigo == 0)
  3840  0014BE  504F               	movf	_flag_codigo^0,w,c
  3841  0014C0  A4D8               	btfss	status,2,c
  3842  0014C2  EF65  F00A         	goto	i2u84_41
  3843  0014C6  EF67  F00A         	goto	i2u84_40
  3844  0014CA                     i2u84_41:
  3845  0014CA  EFA1  F00A         	goto	i2l1825
  3846  0014CE                     i2u84_40:
  3847  0014CE                     
  3848                           ;ext_int.c: 50: {;ext_int.c: 51: if (cuenta != 0)
  3849  0014CE  5045               	movf	_cuenta^0,w,c
  3850  0014D0  1046               	iorwf	(_cuenta+1)^0,w,c
  3851  0014D2  B4D8               	btfsc	status,2,c
  3852  0014D4  EF6E  F00A         	goto	i2u85_41
  3853  0014D8  EF70  F00A         	goto	i2u85_40
  3854  0014DC                     i2u85_41:
  3855  0014DC  EF98  F00A         	goto	i2l289
  3856  0014E0                     i2u85_40:
  3857  0014E0                     
  3858                           ;ext_int.c: 52: {;ext_int.c: 53: timer_aux = TMR0;
  3859  0014E0  CFD6 F04D          	movff	4054,_timer_aux	;volatile
  3860  0014E4                     
  3861                           ;ext_int.c: 54: TMR0 = 0;
  3862  0014E4  0E00               	movlw	0
  3863  0014E6  6ED7               	movwf	215,c	;volatile
  3864  0014E8  0E00               	movlw	0
  3865  0014EA  6ED6               	movwf	214,c	;volatile
  3866  0014EC                     
  3867                           ;ext_int.c: 55: tiempo[cuenta - 1] = timer_aux;
  3868  0014EC  0E5F               	movlw	low (_tiempo+65535)
  3869  0014EE  2445               	addwf	_cuenta^0,w,c
  3870  0014F0  6ED9               	movwf	fsr2l,c
  3871  0014F2  0E00               	movlw	high (_tiempo+65535)
  3872  0014F4  2046               	addwfc	(_cuenta+1)^0,w,c
  3873  0014F6  6EDA               	movwf	fsr2h,c
  3874  0014F8  C04D  FFDF         	movff	_timer_aux,indf2
  3875  0014FC                     
  3876                           ;ext_int.c: 56: cuenta++;
  3877  0014FC  4A45               	infsnz	_cuenta^0,f,c
  3878  0014FE  2A46               	incf	(_cuenta+1)^0,f,c
  3879  001500                     
  3880                           ;ext_int.c: 57: INTEDG1 = !INTEDG1;
  3881  001500  AAF1               	btfss	4081,5,c	;volatile
  3882  001502  EF85  F00A         	goto	i2u86_41
  3883  001506  EF88  F00A         	goto	i2u86_40
  3884  00150A                     i2u86_41:
  3885  00150A  8AF1               	bsf	4081,5,c	;volatile
  3886  00150C  EF89  F00A         	goto	i2u87_45
  3887  001510                     i2u86_40:
  3888  001510  9AF1               	bcf	4081,5,c	;volatile
  3889  001512                     i2u87_45:
  3890  001512                     
  3891                           ;ext_int.c: 59: if (TMR0IF == 1)
  3892  001512  A4F2               	btfss	4082,2,c	;volatile
  3893  001514  EF8E  F00A         	goto	i2u88_41
  3894  001518  EF90  F00A         	goto	i2u88_40
  3895  00151C                     i2u88_41:
  3896  00151C  EFA1  F00A         	goto	i2l288
  3897  001520                     i2u88_40:
  3898  001520                     
  3899                           ;ext_int.c: 60: {;ext_int.c: 61: cuenta--;
  3900  001520  0645               	decf	_cuenta^0,f,c
  3901  001522  A0D8               	btfss	status,0,c
  3902  001524  0646               	decf	(_cuenta+1)^0,f,c
  3903  001526                     
  3904                           ;ext_int.c: 62: flag_codigo = 1;
  3905  001526  0E01               	movlw	1
  3906  001528  6E4F               	movwf	_flag_codigo^0,c
  3907  00152A                     
  3908                           ;ext_int.c: 63: INT1E = 0;
  3909  00152A  96F0               	bcf	4080,3,c	;volatile
  3910  00152C  EFA1  F00A         	goto	i2l1825
  3911  001530                     i2l289:
  3912                           
  3913                           ;ext_int.c: 66: else;ext_int.c: 67: {;ext_int.c: 68: TMR0IF = 0;
  3914  001530  94F2               	bcf	4082,2,c	;volatile
  3915  001532                     
  3916                           ;ext_int.c: 69: TMR0 = 0;
  3917  001532  0E00               	movlw	0
  3918  001534  6ED7               	movwf	215,c	;volatile
  3919  001536  0E00               	movlw	0
  3920  001538  6ED6               	movwf	214,c	;volatile
  3921  00153A                     
  3922                           ;ext_int.c: 70: cuenta++;
  3923  00153A  4A45               	infsnz	_cuenta^0,f,c
  3924  00153C  2A46               	incf	(_cuenta+1)^0,f,c
  3925  00153E  EFA1  F00A         	goto	i2l1825
  3926  001542                     i2l288:
  3927  001542                     i2l1825:
  3928                           
  3929                           ;ext_int.c: 71: };ext_int.c: 72: };ext_int.c: 73: };ext_int.c: 74: INT1IF = 0;
  3930  001542  90F0               	bcf	4080,0,c	;volatile
  3931  001544                     
  3932                           ;ext_int.c: 76: if(INT1_InterruptHandler)
  3933  001544  503F               	movf	_INT1_InterruptHandler^0,w,c
  3934  001546  1040               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  3935  001548  B4D8               	btfsc	status,2,c
  3936  00154A  EFA9  F00A         	goto	i2u89_41
  3937  00154E  EFAB  F00A         	goto	i2u89_40
  3938  001552                     i2u89_41:
  3939  001552  EFB8  F00A         	goto	i2l293
  3940  001556                     i2u89_40:
  3941  001556                     
  3942                           ;ext_int.c: 77: {;ext_int.c: 78: INT1_InterruptHandler();
  3943  001556  D802               	call	i2u90_48
  3944  001558  EFB8  F00A         	goto	i2u90_49
  3945  00155C                     i2u90_48:
  3946  00155C  0005               	push	
  3947  00155E  6EFA               	movwf	pclath,c
  3948  001560  503F               	movf	_INT1_InterruptHandler^0,w,c
  3949  001562  6EFD               	movwf	tosl,c
  3950  001564  5040               	movf	(_INT1_InterruptHandler+1)^0,w,c
  3951  001566  6EFE               	movwf	tosh,c
  3952  001568  50F8               	movf	tblptru,w,c
  3953  00156A  6EFF               	movwf	tosu,c
  3954  00156C  50FA               	movf	pclath,w,c
  3955  00156E  0012               	return		;indir
  3956  001570                     i2u90_49:
  3957  001570                     i2l293:
  3958  001570  0012               	return		;funcret
  3959  001572                     __end_of_INT1_CallBack:
  3960                           	callstack 0
  3961                           
  3962 ;; *************** function _INT1_DefaultInterruptHandler *****************
  3963 ;; Defined at:
  3964 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		None
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_EXT_INT_Initialize
  3988 ;;		_INT1_CallBack
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text29
  3993  001936                     __ptext29:
  3994                           	callstack 0
  3995  001936                     _INT1_DefaultInterruptHandler:
  3996                           	callstack 24
  3997  001936  0012               	return		;funcret
  3998  001938                     __end_of_INT1_DefaultInterruptHandler:
  3999                           	callstack 0
  4000                           
  4001                           	psect	text30
  4002  000000                     __ptext30:
  4003                           	callstack 0
  4004  000000                     
  4005                           	psect	rparam
  4006  0000                     
  4007                           	psect	temp
  4008  00005B                     btemp:
  4009                           	callstack 0
  4010  00005B                     	ds	1
  4011  0000                     int$flags	set	btemp
  4012  0000                     wtemp8	set	btemp+1
  4013  0000                     ttemp5	set	btemp+1
  4014  0000                     ttemp6	set	btemp+4
  4015  0000                     ttemp7	set	btemp+8
  4016                           
  4017                           	psect	idloc
  4018                           
  4019                           ;Config register IDLOC0 @ 0x200000
  4020                           ;	unspecified, using default values
  4021  200000                     	org	2097152
  4022  200000  FF                 	db	255
  4023                           
  4024                           ;Config register IDLOC1 @ 0x200001
  4025                           ;	unspecified, using default values
  4026  200001                     	org	2097153
  4027  200001  FF                 	db	255
  4028                           
  4029                           ;Config register IDLOC2 @ 0x200002
  4030                           ;	unspecified, using default values
  4031  200002                     	org	2097154
  4032  200002  FF                 	db	255
  4033                           
  4034                           ;Config register IDLOC3 @ 0x200003
  4035                           ;	unspecified, using default values
  4036  200003                     	org	2097155
  4037  200003  FF                 	db	255
  4038                           
  4039                           ;Config register IDLOC4 @ 0x200004
  4040                           ;	unspecified, using default values
  4041  200004                     	org	2097156
  4042  200004  FF                 	db	255
  4043                           
  4044                           ;Config register IDLOC5 @ 0x200005
  4045                           ;	unspecified, using default values
  4046  200005                     	org	2097157
  4047  200005  FF                 	db	255
  4048                           
  4049                           ;Config register IDLOC6 @ 0x200006
  4050                           ;	unspecified, using default values
  4051  200006                     	org	2097158
  4052  200006  FF                 	db	255
  4053                           
  4054                           ;Config register IDLOC7 @ 0x200007
  4055                           ;	unspecified, using default values
  4056  200007                     	org	2097159
  4057  200007  FF                 	db	255
  4058                           
  4059                           	psect	config
  4060                           
  4061                           ;Config register CONFIG1L @ 0x300000
  4062                           ;	PLL Selection
  4063                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4064                           ;	PLL Enable Configuration bit
  4065                           ;	CFGPLLEN = ON, PLL Enabled
  4066                           ;	CPU System Clock Postscaler
  4067                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4068                           ;	Low Speed USB mode with 48 MHz system clock
  4069                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4070  300000                     	org	3145728
  4071  300000  23                 	db	35
  4072                           
  4073                           ;Config register CONFIG1H @ 0x300001
  4074                           ;	Oscillator Selection
  4075                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  4076                           ;	Primary Oscillator Shutdown
  4077                           ;	PCLKEN = ON, Primary oscillator enabled
  4078                           ;	Fail-Safe Clock Monitor
  4079                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4080                           ;	Internal/External Oscillator Switchover
  4081                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4082  300001                     	org	3145729
  4083  300001  22                 	db	34
  4084                           
  4085                           ;Config register CONFIG2L @ 0x300002
  4086                           ;	Power-up Timer Enable
  4087                           ;	nPWRTEN = ON, Power up timer enabled
  4088                           ;	Brown-out Reset Enable
  4089                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4090                           ;	Brown-out Reset Voltage
  4091                           ;	BORV = 190, BOR set to 1.9V nominal
  4092                           ;	Low-Power Brown-out Reset
  4093                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4094  300002                     	org	3145730
  4095  300002  5E                 	db	94
  4096                           
  4097                           ;Config register CONFIG2H @ 0x300003
  4098                           ;	Watchdog Timer Enable bits
  4099                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4100                           ;	Watchdog Timer Postscaler
  4101                           ;	WDTPS = 32768, 1:32768
  4102  300003                     	org	3145731
  4103  300003  3C                 	db	60
  4104                           
  4105                           ; Padding undefined space
  4106  300004                     	org	3145732
  4107  300004  FF                 	db	255
  4108                           
  4109                           ;Config register CONFIG3H @ 0x300005
  4110                           ;	CCP2 MUX bit
  4111                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4112                           ;	PORTB A/D Enable bit
  4113                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4114                           ;	Timer3 Clock Input MUX bit
  4115                           ;	T3CMX = RC0, T3CKI function is on RC0
  4116                           ;	SDO Output MUX bit
  4117                           ;	SDOMX = RB3, SDO function is on RB3
  4118                           ;	Master Clear Reset Pin Enable
  4119                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4120  300005                     	org	3145733
  4121  300005  D1                 	db	209
  4122                           
  4123                           ;Config register CONFIG4L @ 0x300006
  4124                           ;	Stack Full/Underflow Reset
  4125                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4126                           ;	Single-Supply ICSP Enable bit
  4127                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4128                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4129                           ;	ICPRT = OFF, ICPORT disabled
  4130                           ;	Extended Instruction Set Enable bit
  4131                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4132                           ;	Background Debugger Enable bit
  4133                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4134  300006                     	org	3145734
  4135  300006  85                 	db	133
  4136                           
  4137                           ; Padding undefined space
  4138  300007                     	org	3145735
  4139  300007  FF                 	db	255
  4140                           
  4141                           ;Config register CONFIG5L @ 0x300008
  4142                           ;	Block 0 Code Protect
  4143                           ;	CP0 = OFF, Block 0 is not code-protected
  4144                           ;	Block 1 Code Protect
  4145                           ;	CP1 = OFF, Block 1 is not code-protected
  4146                           ;	Block 2 Code Protect
  4147                           ;	CP2 = OFF, Block 2 is not code-protected
  4148                           ;	Block 3 Code Protect
  4149                           ;	CP3 = OFF, Block 3 is not code-protected
  4150  300008                     	org	3145736
  4151  300008  0F                 	db	15
  4152                           
  4153                           ;Config register CONFIG5H @ 0x300009
  4154                           ;	Boot Block Code Protect
  4155                           ;	CPB = OFF, Boot block is not code-protected
  4156                           ;	Data EEPROM Code Protect
  4157                           ;	CPD = OFF, Data EEPROM is not code-protected
  4158  300009                     	org	3145737
  4159  300009  C0                 	db	192
  4160                           
  4161                           ;Config register CONFIG6L @ 0x30000A
  4162                           ;	Block 0 Write Protect
  4163                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4164                           ;	Block 1 Write Protect
  4165                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4166                           ;	Block 2 Write Protect
  4167                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4168                           ;	Block 3 Write Protect
  4169                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4170  30000A                     	org	3145738
  4171  30000A  0F                 	db	15
  4172                           
  4173                           ;Config register CONFIG6H @ 0x30000B
  4174                           ;	Configuration Registers Write Protect
  4175                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4176                           ;	Boot Block Write Protect
  4177                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4178                           ;	Data EEPROM Write Protect
  4179                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4180  30000B                     	org	3145739
  4181  30000B  E0                 	db	224
  4182                           
  4183                           ;Config register CONFIG7L @ 0x30000C
  4184                           ;	Block 0 Table Read Protect
  4185                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4186                           ;	Block 1 Table Read Protect
  4187                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4188                           ;	Block 2 Table Read Protect
  4189                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4190                           ;	Block 3 Table Read Protect
  4191                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4192  30000C                     	org	3145740
  4193  30000C  0F                 	db	15
  4194                           
  4195                           ;Config register CONFIG7H @ 0x30000D
  4196                           ;	Boot Block Table Read Protect
  4197                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4198  30000D                     	org	3145741
  4199  30000D  40                 	db	64
  4200                           tosu	equ	0xFFF
  4201                           tosh	equ	0xFFE
  4202                           tosl	equ	0xFFD
  4203                           stkptr	equ	0xFFC
  4204                           pclatu	equ	0xFFB
  4205                           pclath	equ	0xFFA
  4206                           pcl	equ	0xFF9
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           indf0	equ	0xFEF
  4214                           postinc0	equ	0xFEE
  4215                           postdec0	equ	0xFED
  4216                           preinc0	equ	0xFEC
  4217                           plusw0	equ	0xFEB
  4218                           fsr0h	equ	0xFEA
  4219                           fsr0l	equ	0xFE9
  4220                           wreg	equ	0xFE8
  4221                           indf1	equ	0xFE7
  4222                           postinc1	equ	0xFE6
  4223                           postdec1	equ	0xFE5
  4224                           preinc1	equ	0xFE4
  4225                           plusw1	equ	0xFE3
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           bsr	equ	0xFE0
  4229                           indf2	equ	0xFDF
  4230                           postinc2	equ	0xFDE
  4231                           postdec2	equ	0xFDD
  4232                           preinc2	equ	0xFDC
  4233                           plusw2	equ	0xFDB
  4234                           fsr2h	equ	0xFDA
  4235                           fsr2l	equ	0xFD9
  4236                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    32
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      90
    BANK0           160      4      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    memcpy@s1	PTR const void  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->___lldiv
    _putch->_EUSART1_Write
    _normaliza->___flge
    ___flmul->___xxtofl
    ___flge->___flmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Hash_algoritmo->___lmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_normaliza

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5252
                                             55 COMRAM     3     3      0
                      _EUSART1_Write
                     _Hash_algoritmo
                  _SYSTEM_Initialize
                             _memcpy
                          _normaliza
                              _putch
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    22      8     922
                                             17 COMRAM    21    13      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      30
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _normaliza                                            4     4      0    3008
                                              0 BANK0      4     4      0
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              13     6      7     371
                                              4 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              6 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Hash_algoritmo                                      14    10      4     416
                                             16 COMRAM    14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _Hash_algoritmo
     ___lmul
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _memcpy
   _normaliza
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _putch
     _EUSART1_Write
   _sprintf
     ___lldiv

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      4A       5       46.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      5A       1       95.7%
BITBIGSFRlllllh     27      0       0      32        0.0%
BITBIGSFRhhlhh      18      0       0      21        0.0%
BITBIGSFRhll        17      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      33        0.0%
BITBIGSFRllllhh      6      0       0      29        0.0%
BITBIGSFRllllhl      6      0       0      30        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      31        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRhlh         1      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      34        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 20 12:53:24 2023

                                            l43 17C4                                              l70 18D6  
                                            l91 1912                                              l67 18C4  
                                            l76 18F4                                              l94 1926  
                                            l88 191C                                              u10 18D2  
                                            u11 18CE                                              u20 18A6  
                                            u21 18A2                                 _timer0ReloadVal 0041  
                                           l212 18FE                                             l133 18C0  
                                           l302 18EA                                             l136 1898  
                                           l400 0EE8                                             l242 1932  
                                           l139 18A6                                             l411 1056  
                                           l405 0F90                                             l166 1860  
                                           l190 1832                                             l425 1714  
                                           l441 16AA                                             l426 1724  
                                           l362 13AA                                             l367 1606  
                                           l368 1616                                             l296 1908  
                                           l448 16BA                                             l675 1468  
                                           l676 14AE                                             u910 16DA  
                                           u911 16D6                                             u920 1714  
                                           u921 1710                                             u930 163E  
                                           u931 163A                                             u940 1660  
                                           u941 165C                                             u950 1688  
                                           u951 1684                                             u960 0884  
                                           u961 0880                                             u970 0896  
                                           u971 0892                                             u980 08A6  
                                           u981 08A2                                             u990 08E6  
                                           u991 08E2                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 0024                                    ___flmul@bexp 0025  
                                  ___flmul@sign 001F                                    ___flmul@temp 002A  
                                  ___flmul@prod 0026                                   _INT1_CallBack 14B0  
                                          l1020 0C92                                            l1023 0B24  
                                          l1016 092E                                            l1201 1930  
                                          l2001 1428                                            l1033 0C54  
                                          l1025 0B9C                                            l1026 0B8A  
                                          l1203 1834                                            l2011 14AC  
                                          l2003 1436                                            l1060 120A  
                                          l1205 185E                                            l2101 1726  
                                          l2005 1448                                            l2021 10BE  
                                          l1207 1888                                            l2103 173E  
                                          l2111 176C                                            l2007 1456  
                                          l1071 11A2                                            l2031 10FC  
                                          l2023 10D4                                            l2015 105A  
                                          l1064 1146                                            l2105 1750  
                                          l2009 14A6                                            l2041 1184  
                                          l2033 112E                                            l2017 106A  
                                          l1057 10AE                                            l2121 0EAE  
                                          l2113 0E7C                                            l2107 175C  
                                          l2051 11DA                                            l2043 1192  
                                          l2035 1130                                            l2027 10E8  
                                          l2019 1078                                            l2131 0F0E  
                                          l2123 0EB6                                            l2115 0E88  
                                          l2061 18A8                                            l2109 1768  
                                          l2053 11EA                                            l2045 11B0  
                                          l2037 113C                                            l2029 10F0  
                                          l2133 0F1A                                            l2117 0E9A  
                                          l2301 0D3A                                            l2071 18BC  
                                          l2063 18AC                                            l1079 1786  
                                          l2055 11F8                                            l2047 11B2  
                                          l2039 1178                                            l2151 0F9A  
                                          l2143 0F42                                            l2135 0F36  
                                          l2127 0EB8                                            l2119 0EA6  
                                          l2311 0D76                                            l2303 0D40  
                                          l2065 18B0                                            l2057 11FA  
                                          l2049 11B6                                            l1505 18EE  
                                          l2153 0FEC                                            l2137 0F3E  
                                          l2129 0EF6                                            l2161 1028  
                                          l2321 0DD2                                            l2313 0D88  
                                          l2305 0D46                                            l2067 18B4  
                                          l2155 0FFE                                            l2147 0F7C  
                                          l2163 104A                                            l2331 0E34  
                                          l2323 0DF6                                            l2315 0D92  
                                          l2307 0D4C                                            l2093 1572  
                                          l2069 18B8                                            l2261 12C0  
                                          l1197 18C4                                            l2157 100A  
                                          l2149 0F7E                                            l2333 0E38  
                                          l2325 0E08                                            l2317 0DB6  
                                          l2309 0D52                                            l2341 0E46  
                                          l2095 158A                                            l2263 135A  
                                          l2255 120C                                            l1199 18D2  
                                          l2159 100E                                            l2343 0E5C  
                                          l2335 0E40                                            l2319 0DC8  
                                          l2327 0E0E                                            l2271 0C94  
                                          l2097 15D0                                            l2265 136E  
                                          l2257 1214                                            l2345 0E6E  
                                          l2337 0E42                                            l2329 0E1E  
                                          l2281 0CA8                                            l2273 0C98  
                                          l2099 15D2                                            l2267 137E  
                                          l2259 12AC                                            l2339 0E44  
                                          l2291 0CD4                                            l2283 0CAA  
                                          l2275 0C9E                                            l2269 1380  
                                          l2293 0CDA                                            l2285 0CAC  
                                          l2277 0CA2                                            l1831 16BC  
                                          l1911 099A                                            l1903 0962  
                                          l2295 0D04                                            l2287 0CBC  
                                          l2279 0CA6                                            l1833 16CC  
                                          l1761 191E                                            l1921 09E4  
                                          l1913 09B2                                            l1905 096E  
                                          l1841 1618                                            l2297 0D0A  
                                          l2289 0CC0                                            l1835 16DA  
                                          l1771 17A8                                            l1763 18F6  
                                          l1931 0A3A                                            l1923 09F4  
                                          l1915 09BE                                            l1907 0978  
                                          l1851 1660                                            l1843 1628  
                                          l2299 0D10                                            l1837 16EA  
                                          l1757 1914                                            l1773 17B4  
                                          l1765 1900                                            l1781 18E8  
                                          l1941 0ADE                                            l1933 0A56  
                                          l1925 0A00                                            l1917 09CA  
                                          l1909 098E                                            l1861 16A4  
                                          l1853 166A                                            l1845 163E  
                                          l1839 16F4                                            l1759 190A  
                                          l1775 17C0                                            l1767 1788  
                                          l1791 1820                                            l1783 17FE  
                                          l1951 0B34                                            l1943 0AEC  
                                          l1935 0A62                                            l1927 0A10  
                                          l1919 09D8                                            l1871 0896  
                                          l1863 086A                                            l1855 1688  
                                          l1847 1646                                            l1769 179C  
                                          l1777 18D8                                            l1793 1822  
                                          l1785 1800                                            l1953 0B42  
                                          l1945 0B0A                                            l1937 0A7E  
                                          l1929 0A2A                                            l1881 08D2  
                                          l1873 08A6                                            l1865 0876  
                                          l1857 1698                                            l1849 1652  
                                          l1779 18DC                                            l1795 182E  
                                          l1787 1808                                            l1963 0BAC  
                                          l1971 0BF4                                            l1955 0B46  
                                          l1947 0B14                                            l1939 0AA8  
                                          l1891 0908                                            l1883 08D8  
                                          l1875 08B6                                            l1867 0884  
                                          l1859 169A                                            l1789 181E  
                                          l1981 0C68                                            l1973 0C0E  
                                          l1965 0BB8                                            l1957 0B54  
                                          l1949 0B22                                            l1893 0918  
                                          l1885 08E6                                            l1877 08BC  
                                          l1869 0886                                            l1983 0C76  
                                          l1975 0C22                                            l1967 0BC6  
                                          l1959 0B82                                            l1895 091E  
                                          l1887 08E8                                            l1879 08CC  
                                          l1993 13AC                                            l1985 0C78  
                                          l1977 0C3C                                            l1969 0BF0  
                                          l1897 093E                                            l1889 08F8  
                                          l1995 13DA                                            l1979 0C58  
                                          l1987 0C7E                                            l1899 094E  
                                          l1997 13EA                                            l1989 0C82  
                                          l1999 1418                                            STR_1 085A  
                                          STR_2 0866                                            STR_3 0864  
                                          STR_4 0860                                            STR_5 0832  
                                          STR_6 0866                                            STR_7 0864  
                                          STR_8 083F                                            STR_9 0848  
                                          u1000 08F8                                            u1001 08F4  
                                          u1010 0908                                            u1011 0904  
                                          u1100 0BAC                                            u1020 093E  
                                          u1101 0BA8                                            u1021 093A  
                                          u1110 0BC6                                            u1030 094E  
                                          u1111 0BC2                                            u1031 094A  
                                          u1120 0C0E                                            u1040 0AC8  
                                          u1200 106A                                            u1121 0C0A  
                                          u1201 1066                                            u1130 0C3C  
                                          u1050 0B22                                            u1210 1078  
                                          u1131 0C38                                            u1051 0B1E  
                                          u1211 1074                                            u1140 0C76  
                                          u1060 0B42                                            u1220 10D4  
                                          u1141 0C72                                            u1061 0B3E  
                                          u1045 0ABE                                            u1221 10D0  
                                          u1150 13DA                                            u1070 0B54  
                                          u1230 112A                                            u1151 13D6  
                                          u1071 0B50                                            u1231 1126  
                                          u1160 1418                                            u1080 0B82  
                                          u1240 1174                                            u1400 104A  
                                          u1161 1414                                            u1081 0B7E  
                                          u1241 1170                                            u1401 1046  
                                          u1330 1606                                            u1170 1436  
                                          u1090 0B98                                            u1250 1192  
                                          u1331 1602                                            u1171 1432  
                                          u1091 0B94                                            u1251 118E  
                                          u1340 1786                                            u1180 1456  
                                          u1260 11A2                                            u1341 1782  
                                          u1181 1452                                            u1261 119E  
                                          _LATA 000F89                                            u1190 14A6  
                                          u1270 11B0                                            u1350 0E9A  
                                          _LATB 000F8A                                            u1191 14A2  
                                          u1271 11AC                                            u1351 0E96  
                                          _LATC 000F8B                                            u1280 11EA  
                                          u1360 0EF6                                            u1600 0CBC  
                                          u1281 11E6                                            u1361 0EF2  
                                          u1601 0CB8                                            u1290 11F8  
                                          u1370 0F78                                            u1610 0D76  
                                          u1291 11F4                                            u1371 0F74  
                                          u1611 0D72                                            u1380 0F90  
                                          u1700 0E6C                                            u1620 0D86  
                                          u1381 0F8C                                            u1701 0E66  
                                          u1621 0D80                                            u1390 1028  
                                          u1391 1024                                            u1640 0DB6  
                                          u1641 0DB2                                            u1570 12AC  
                                          u1650 0DC6                                            u1571 12A8  
                                          u1715 0E6E                                            u1651 0DC0  
                                          u1635 0D88                                            u1580 135A  
                                          u1581 1356                                            u1590 13AA  
                                          u1670 0DF6                                            u1591 13A6  
                                          u1727 0E28                                            u1671 0DF2  
                                          u1680 0E06                                            u1737 0E50  
                                          u1681 0E00                                            u1665 0DC8  
                                          u1695 0E08                                            _TMR0 000FD6  
                                          _WPUB 000F85                                   _EUSART1_Write 18C2  
                                          _cont 004E                                            _main 0C94  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr2l 000FD9                                            btemp 005B  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 006E                                    ___param_bank 000000  
                       __end_of_TMR0_Initialize 1834                                __end_of_INT1_ISR 1930  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 18A8  
                                         ?_main 0001                                           STR_10 0851  
                                         STR_11 085A                                           STR_12 0821  
                               __end_of___flmul 0C94                                 __end_of___lldiv 16BC  
                                         _T0CON 000FD5                                           _LATB0 007C50  
                                         _LATA3 007C4B                                           _LATA4 007C4C  
                                         _LATA5 007C4D                                           _INT1E 007F83  
                                         i2l215 1934                                           i2l209 17FC  
                                         i2l249 005A                                           i2l284 192E  
                                         i2l293 1570                                           i2l288 1542  
                                         i2l289 1530                                           i2l299 1936  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                             ___lmul@multiplicand 0009  
                     ?_TMR0_SetInterruptHandler 0005                                __end_of_TMR0_ISR 17FE  
                                ?_INT1_CallBack 0001                  ??_INT1_DefaultInterruptHandler 0001  
                                         _texto 0051                                           _putch 18EC  
                      _INT1_SetInterruptHandler 1900                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         status 000FD8                                           wtemp8 005C  
                               __end_of_sprintf 1058              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 1862                      __end_of_EUSART1_Initialize 17C6  
                                  __end_of_main 0E7C                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 0038                                   __activetblptr 000002  
                                        _ACTCON 000FB5                                          _ANSELA 000F5B  
                                        ?_putch 0001                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          _INT1IF 007F80  
                                        i2l2073 1928                                          i2l1521 17C8  
                                        i2l2075 192A                                          i2l1523 17CC  
                                        i2l2171 0036                                          i2l1525 17D0  
                                        i2l2173 003A                                          i2l1527 17E2  
                                        i2l1519 17C6                                          i2l2175 0048  
                                        i2l2167 001A                                          i2l1801 14CE  
                                        i2l2177 0056                                          i2l2169 0028  
                                        i2l1811 1500                                          i2l1803 14E0  
                                        i2l1821 1532                                          i2l1813 1512  
                                        i2l1805 14E4                                          i2l1823 153A  
                                        i2l1815 1520                                          i2l1807 14EC  
                                        i2l1817 1526                                          i2l1809 14FC  
                                        i2l1825 1542                                          i2l1827 1544  
                                        i2l1819 152A                                          i2l1829 1556  
                                        i2l1797 14B0                                          i2l1799 14BE  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TMR0IF 007F92  
                                        _TXREG1 000FAD                                __end_of___xxtofl 120C  
                                        _TXSTA1 000FAC                                          ___flge 13AC  
                                        ___lmul 16BC                                       ??___flmul 001B  
                                     ??___lldiv 000D                                          _cuenta 0045  
                      ?_EUSART1_SetErrorHandler 0005                                          _memcpy 1726  
                              ?_TMR0_Initialize 0001                                          clear_0 1868  
                                        clear_1 1874                                          isa$std 000001  
                                        _tiempo 0060                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                 ??_INT1_CallBack 0001  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0005        INT1_SetInterruptHandler@InterruptHandler 0005  
      TMR0_SetInterruptHandler@InterruptHandler 0005                                       ??_sprintf 001A  
                                    ___flge@ff1 002C                                      ___flge@ff2 0030  
                                  ___xxtofl@arg 000F                                    ___xxtofl@exp 000E  
                             _SYSTEM_Initialize 18A8                                    ___xxtofl@val 0005  
                                    __accesstop 0060                         __end_of__initialization 187A  
                                     ?_INT1_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0009                                       ?_TMR0_ISR 0001  
                                 __end_of_putch 18F6                       __end_of_SYSTEM_Initialize 18C2  
                                       ??_putch 0006                                      __pbssBANK0 0060  
                                    ??_INT1_ISR 0001                 __end_of_EUSART1_SetErrorHandler 1928  
                                       ?___flge 002C                __end_of_TMR0_SetInterruptHandler 1900  
                                       ?___lmul 0005                                      ??_TMR0_ISR 0001  
                                       ?_memcpy 0005                                  ___lmul@product 000D  
        __end_of_EUSART1_SetFramingErrorHandler 191E                  _EUSART1_SetFramingErrorHandler 1914  
                    ??_INT1_SetInterruptHandler 0007                                         _INTEDG1 007F8D  
                                     ?___xxtofl 0005                                         _OSCCON2 000FD2  
                                       i2u52_40 17E2                                         i2u52_41 17DE  
                                       i2u53_48 17E8                                         i2u53_49 17FC  
                                       _OSCTUNE 000F9B                                         i2u90_48 155C  
                                       i2u83_40 14BE                                         i2u90_49 1570  
                                       i2u83_41 14BA                                         _SPBRGH1 000FB0  
                                       i2u84_40 14CE                                         i2u84_41 14CA  
                                       i2u85_40 14E0                                         i2u85_41 14DC  
                                       i2u86_40 1510                                         i2u86_41 150A  
                                       i2u87_45 1512                                         i2u88_40 1520  
                                       i2u88_41 151C                                         i2u89_40 1556  
                                       i2u89_41 1552                                  _Hash_algoritmo 1572  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___flmul 086A                                         ___lldiv 1618  
                                  __psmallconst 0800                                         __pcinit 1862  
                                       __ramtop 0800                                         __ptext0 0C94  
                                       __ptext1 0E7C                                         __ptext2 1618  
                                       __ptext3 18EC                                         __ptext4 18C2  
                                       __ptext5 120C                                         __ptext6 1058  
                                       __ptext7 086A                                         __ptext8 13AC  
                                       __ptext9 1726                                       _T0CONbits 000FD5  
                             __end_of_hexpowers 0821                           _OSCILLATOR_Initialize 1888  
                                    ??___xxtofl 0009                          __end_of_Hash_algoritmo 1618  
                            _EUSART1_Initialize 1788                        ??_PIN_MANAGER_Initialize 0005  
                                       _sprintf 0E7C                            end_of_initialization 187A  
                           ?_EUSART1_Initialize 0001                                         memcpy@d 000F  
                                       memcpy@n 000A                                         memcpy@s 000C  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0049  
                             __end_of_normaliza 13AC                                 ___lldiv@divisor 0009  
                               ___lldiv@counter 0011                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                          ??_EUSART1_Initialize 0007                        _TMR0_SetInterruptHandler 18F6  
                         _INT1_InterruptHandler 003F                                   ___xxtofl@sign 000D  
                               ?_Hash_algoritmo 0011                                       _TRISBbits 000F93  
                           EUSART1_Write@txData 0005                                     ___flmul@grs 0020  
                  __end_of_INTERRUPT_Initialize 1934                                  __end_of___flge 14B0  
                                __end_of___lmul 1726                                  __end_of_memcpy 1788  
                        ?_OSCILLATOR_Initialize 0001                             start_initialization 1862  
                         __end_of_INT1_CallBack 1572                                     putch@txData 0006  
                         __end_of_EUSART1_Write 18D8                                        ??___flge 0034  
                                      ??___lmul 000D                                        ??_memcpy 000C  
                    __end_of_EXT_INT_Initialize 18EC                                       ___flmul@a 0017  
                                     ___flmul@b 0013                                     __pbssCOMRAM 003B  
                                 __pcstackBANK0 00A6                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                     sprintf@flag 001D  
                                   sprintf@prec 001E                           _TMR0_InterruptHandler 0043  
                        _PIN_MANAGER_Initialize 1834                                       __pintcode 0008  
                                      ?___flmul 0013                                       _codigo_ir 003B  
                                      ?___lldiv 0005                         Hash_algoritmo@hash_acum 001B  
                  ??_INTERRUPT_InterruptManager 0001                                     __smallconst 0800  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                   _flag_codigo 004F                            _EUSART1_ErrorHandler 0047  
                       _EUSART1_SetErrorHandler 191E                                       _hexpowers 0801  
                                      ?_sprintf 0012                            _INTERRUPT_Initialize 1930  
                             ??_TMR0_Initialize 0007                                        _INT1_ISR 1928  
       EUSART1_SetErrorHandler@interruptHandler 0005                       ?_INT1_SetInterruptHandler 0005  
                                      i2u141_40 0028                                        i2u141_41 0024  
                                      i2u142_40 0036                                        i2u142_41 0032  
                                      i2u143_40 0048                                        i2u143_41 0044  
                                      i2u144_40 0056                                        i2u144_41 0052  
                    ??_TMR0_SetInterruptHandler 0007                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                       _normaliza 120C  
                                      _TMR0_ISR 17C6                                       _timer_aux 004D  
                              ??_Hash_algoritmo 0015                               ___lmul@multiplier 0005  
                                   _INTCON2bits 000FF1                                     _INTCON3bits 000FF0  
                         ?_INTERRUPT_Initialize 0001                                        __Hrparam 0000  
                                     memcpy@tmp 0011                                        __Lrparam 0000  
                                    ?_normaliza 0001                         ??_OSCILLATOR_Initialize 0005  
                     ??_EUSART1_SetErrorHandler 0007                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@idx 001C                                      sprintf@val 0020  
                                      ___xxtofl 1058                                        __ptext10 18A8  
                                      __ptext11 17FE                                        __ptext20 1914  
                                      __ptext12 18F6                                        __ptext21 191E  
                                      __ptext13 1834                                        __ptext30 0000  
                                      __ptext22 1572                                        __ptext14 1888  
                                      __ptext23 16BC                                        __ptext15 1930  
                                      __ptext16 18D8                                        __ptext25 17C6  
                                      __ptext17 1900                                        __ptext26 1934  
                                      __ptext18 1788                                        __ptext27 1928  
                                      __ptext19 190A                                        __ptext28 14B0  
                                      __ptext29 1936            __end_of_TMR0_DefaultInterruptHandler 1936  
                  _TMR0_DefaultInterruptHandler 1934  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      isa$xinst 000000                                        int$flags 005B  
            __end_of_INTERRUPT_InterruptManager 006E                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 004B            __end_of_INT1_DefaultInterruptHandler 1938  
                  _INT1_DefaultInterruptHandler 1936                                      _INTCONbits 000FF2  
                                      memcpy@d1 0005                                        memcpy@s1 0007  
                        ??_INTERRUPT_Initialize 0005                              _EXT_INT_Initialize 18D8  
                                      intlevel2 0000                                       sprintf@ap 0024  
                                     sprintf@sp 0012                                ___lldiv@dividend 0005  
                       ?_PIN_MANAGER_Initialize 0001                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1914                  _EUSART1_SetOverrunErrorHandler 190A  
                                    _RCSTA1bits 000FAB                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                     ??_normaliza 00A6  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                              _eusart1RxLastError 0050  
                          ??_EXT_INT_Initialize 0007                                        sprintf@c 0026  
                                      sprintf@f 0014                 fp__INT1_DefaultInterruptHandler 0000  
                 ?_INT1_DefaultInterruptHandler 0001                                ___lldiv@quotient 000D  
                               _TMR0_Initialize 17FE                __end_of_INT1_SetInterruptHandler 190A  
                __end_of_PIN_MANAGER_Initialize 1862  
