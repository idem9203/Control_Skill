

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 29 01:16:16 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Generated 22/03/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F25K50 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	mediumconst
    74  007EDC                     __pmediumconst:
    75                           	callstack 0
    76  007EDC  00                 	db	0
    77  007EDD                     _dpowers:
    78                           	callstack 0
    79  007EDD  0001               	dw	1
    80  007EDF  0000               	dw	0
    81  007EE1  000A               	dw	10
    82  007EE3  0000               	dw	0
    83  007EE5  0064               	dw	100
    84  007EE7  0000               	dw	0
    85  007EE9  03E8               	dw	1000
    86  007EEB  0000               	dw	0
    87  007EED  2710               	dw	10000
    88  007EEF  0000               	dw	0
    89  007EF1  86A0               	dw	34464
    90  007EF3  0001               	dw	1
    91  007EF5  4240               	dw	16960
    92  007EF7  000F               	dw	15
    93  007EF9  9680               	dw	38528
    94  007EFB  0098               	dw	152
    95  007EFD  E100               	dw	57600
    96  007EFF  05F5               	dw	1525
    97  007F01  CA00               	dw	51712
    98  007F03  3B9A               	dw	15258
    99  007F05                     __end_of_dpowers:
   100                           	callstack 0
   101  007F05                     _hexpowers:
   102                           	callstack 0
   103  007F05  0001               	dw	1
   104  007F07  0000               	dw	0
   105  007F09  0010               	dw	16
   106  007F0B  0000               	dw	0
   107  007F0D  0100               	dw	256
   108  007F0F  0000               	dw	0
   109  007F11  1000               	dw	4096
   110  007F13  0000               	dw	0
   111  007F15  0000               	dw	0
   112  007F17  0001               	dw	1
   113  007F19  0000               	dw	0
   114  007F1B  0010               	dw	16
   115  007F1D  0000               	dw	0
   116  007F1F  0100               	dw	256
   117  007F21  0000               	dw	0
   118  007F23  1000               	dw	4096
   119  007F25                     __end_of_hexpowers:
   120                           	callstack 0
   121  0000                     _RCREG1	set	4014
   122  0000                     _TXREG1	set	4013
   123  0000                     _SPBRG1	set	4015
   124  0000                     _TXSTA1	set	4012
   125  0000                     _TRISBbits	set	3987
   126  0000                     _TRISAbits	set	3986
   127  0000                     _RCSTA1bits	set	4011
   128  0000                     _TXSTA1bits	set	4012
   129  0000                     _LATB7	set	31831
   130  0000                     _LATB0	set	31824
   131  0000                     _LATA5	set	31821
   132  0000                     _PLLRDY	set	32407
   133  0000                     _ANSELA	set	3931
   134  0000                     _ANSELB	set	3932
   135  0000                     _ANSELC	set	3933
   136  0000                     _LATA	set	3977
   137  0000                     _OSCTUNE	set	3995
   138  0000                     _PIE1bits	set	3997
   139  0000                     _PIR1bits	set	3998
   140  0000                     _RCSTA1	set	4011
   141  0000                     _BAUDCON1	set	4024
   142  0000                     _RCONbits	set	4048
   143  0000                     _OSCCON2	set	4050
   144  0000                     _OSCCON	set	4051
   145  0000                     _ACTCON	set	4021
   146  0000                     _SPBRGH1	set	4016
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _TRISA	set	3986
   149  0000                     _LATC	set	3979
   150  0000                     _LATB	set	3978
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISB	set	3987
   153  0000                     _WPUB	set	3973
   154  0000                     _INTCONbits	set	4082
   155  007F25  41                 	db	65	;'A'
   156  007F26  54                 	db	84	;'T'
   157  007F27  2B                 	db	43
   158  007F28  43                 	db	67	;'C'
   159  007F29  57                 	db	87	;'W'
   160  007F2A  53                 	db	83	;'S'
   161  007F2B  41                 	db	65	;'A'
   162  007F2C  50                 	db	80	;'P'
   163  007F2D  3D                 	db	61	;'='
   164  007F2E  22                 	db	34
   165  007F2F  45                 	db	69	;'E'
   166  007F30  53                 	db	83	;'S'
   167  007F31  50                 	db	80	;'P'
   168  007F32  38                 	db	56	;'8'
   169  007F33  32                 	db	50	;'2'
   170  007F34  36                 	db	54	;'6'
   171  007F35  36                 	db	54	;'6'
   172  007F36  5F                 	db	95	;'_'
   173  007F37  49                 	db	73	;'I'
   174  007F38  44                 	db	68	;'D'
   175  007F39  45                 	db	69	;'E'
   176  007F3A  4D                 	db	77	;'M'
   177  007F3B  22                 	db	34
   178  007F3C  2C                 	db	44
   179  007F3D  22                 	db	34
   180  007F3E  6E                 	db	110	;'n'
   181  007F3F  6F                 	db	111	;'o'
   182  007F40  63                 	db	99	;'c'
   183  007F41  6F                 	db	111	;'o'
   184  007F42  6E                 	db	110	;'n'
   185  007F43  65                 	db	101	;'e'
   186  007F44  63                 	db	99	;'c'
   187  007F45  74                 	db	116	;'t'
   188  007F46  61                 	db	97	;'a'
   189  007F47  72                 	db	114	;'r'
   190  007F48  22                 	db	34
   191  007F49  2C                 	db	44
   192  007F4A  35                 	db	53	;'5'
   193  007F4B  2C                 	db	44
   194  007F4C  33                 	db	51	;'3'
   195  007F4D  0D                 	db	13
   196  007F4E  0A                 	db	10
   197  007F4F  00                 	db	0
   198  007F50                     STR_15:
   199  007F50  41                 	db	65	;'A'
   200  007F51  54                 	db	84	;'T'
   201  007F52  2B                 	db	43
   202  007F53  43                 	db	67	;'C'
   203  007F54  49                 	db	73	;'I'
   204  007F55  50                 	db	80	;'P'
   205  007F56  41                 	db	65	;'A'
   206  007F57  50                 	db	80	;'P'
   207  007F58  3D                 	db	61	;'='
   208  007F59  22                 	db	34
   209  007F5A  31                 	db	49	;'1'
   210  007F5B  39                 	db	57	;'9'
   211  007F5C  32                 	db	50	;'2'
   212  007F5D  2E                 	db	46
   213  007F5E  31                 	db	49	;'1'
   214  007F5F  36                 	db	54	;'6'
   215  007F60  38                 	db	56	;'8'
   216  007F61  2E                 	db	46
   217  007F62  31                 	db	49	;'1'
   218  007F63  2E                 	db	46
   219  007F64  32                 	db	50	;'2'
   220  007F65  35                 	db	53	;'5'
   221  007F66  33                 	db	51	;'3'
   222  007F67  22                 	db	34
   223  007F68  0D                 	db	13
   224  007F69  0A                 	db	10
   225  007F6A  00                 	db	0
   226  007F6B  41                 	db	65	;'A'
   227  007F6C  54                 	db	84	;'T'
   228  007F6D  2B                 	db	43
   229  007F6E  43                 	db	67	;'C'
   230  007F6F  49                 	db	73	;'I'
   231  007F70  50                 	db	80	;'P'
   232  007F71  53                 	db	83	;'S'
   233  007F72  45                 	db	69	;'E'
   234  007F73  52                 	db	82	;'R'
   235  007F74  56                 	db	86	;'V'
   236  007F75  45                 	db	69	;'E'
   237  007F76  52                 	db	82	;'R'
   238  007F77  3D                 	db	61	;'='
   239  007F78  31                 	db	49	;'1'
   240  007F79  2C                 	db	44
   241  007F7A  32                 	db	50	;'2'
   242  007F7B  30                 	db	48	;'0'
   243  007F7C  30                 	db	48	;'0'
   244  007F7D  0D                 	db	13
   245  007F7E  0A                 	db	10
   246  007F7F  00                 	db	0
   247  007F80                     STR_19:
   248  007F80  30                 	db	48	;'0'
   249  007F81  31                 	db	49	;'1'
   250  007F82  32                 	db	50	;'2'
   251  007F83  33                 	db	51	;'3'
   252  007F84  34                 	db	52	;'4'
   253  007F85  35                 	db	53	;'5'
   254  007F86  36                 	db	54	;'6'
   255  007F87  37                 	db	55	;'7'
   256  007F88  38                 	db	56	;'8'
   257  007F89  39                 	db	57	;'9'
   258  007F8A  61                 	db	97	;'a'
   259  007F8B  62                 	db	98	;'b'
   260  007F8C  63                 	db	99	;'c'
   261  007F8D  64                 	db	100	;'d'
   262  007F8E  65                 	db	101	;'e'
   263  007F8F  66                 	db	102	;'f'
   264  007F90  00                 	db	0
   265  007F91  41                 	db	65	;'A'
   266  007F92  54                 	db	84	;'T'
   267  007F93  2B                 	db	43
   268  007F94  43                 	db	67	;'C'
   269  007F95  49                 	db	73	;'I'
   270  007F96  50                 	db	80	;'P'
   271  007F97  53                 	db	83	;'S'
   272  007F98  45                 	db	69	;'E'
   273  007F99  52                 	db	82	;'R'
   274  007F9A  56                 	db	86	;'V'
   275  007F9B  45                 	db	69	;'E'
   276  007F9C  52                 	db	82	;'R'
   277  007F9D  3D                 	db	61	;'='
   278  007F9E  30                 	db	48	;'0'
   279  007F9F  0D                 	db	13
   280  007FA0  0A                 	db	10
   281  007FA1  00                 	db	0
   282  007FA2  41                 	db	65	;'A'
   283  007FA3  54                 	db	84	;'T'
   284  007FA4  2B                 	db	43
   285  007FA5  43                 	db	67	;'C'
   286  007FA6  49                 	db	73	;'I'
   287  007FA7  50                 	db	80	;'P'
   288  007FA8  4D                 	db	77	;'M'
   289  007FA9  4F                 	db	79	;'O'
   290  007FAA  44                 	db	68	;'D'
   291  007FAB  45                 	db	69	;'E'
   292  007FAC  3D                 	db	61	;'='
   293  007FAD  30                 	db	48	;'0'
   294  007FAE  0D                 	db	13
   295  007FAF  0A                 	db	10
   296  007FB0  00                 	db	0
   297  007FB1  41                 	db	65	;'A'
   298  007FB2  54                 	db	84	;'T'
   299  007FB3  2B                 	db	43
   300  007FB4  43                 	db	67	;'C'
   301  007FB5  49                 	db	73	;'I'
   302  007FB6  50                 	db	80	;'P'
   303  007FB7  53                 	db	83	;'S'
   304  007FB8  54                 	db	84	;'T'
   305  007FB9  4F                 	db	79	;'O'
   306  007FBA  3D                 	db	61	;'='
   307  007FBB  30                 	db	48	;'0'
   308  007FBC  0D                 	db	13
   309  007FBD  0A                 	db	10
   310  007FBE  00                 	db	0
   311  007FBF                     STR_12:
   312  007FBF  41                 	db	65	;'A'
   313  007FC0  54                 	db	84	;'T'
   314  007FC1  2B                 	db	43
   315  007FC2  43                 	db	67	;'C'
   316  007FC3  49                 	db	73	;'I'
   317  007FC4  50                 	db	80	;'P'
   318  007FC5  4D                 	db	77	;'M'
   319  007FC6  55                 	db	85	;'U'
   320  007FC7  58                 	db	88	;'X'
   321  007FC8  3D                 	db	61	;'='
   322  007FC9  30                 	db	48	;'0'
   323  007FCA  0D                 	db	13
   324  007FCB  0A                 	db	10
   325  007FCC  00                 	db	0
   326  007FCD  41                 	db	65	;'A'
   327  007FCE  54                 	db	84	;'T'
   328  007FCF  2B                 	db	43
   329  007FD0  43                 	db	67	;'C'
   330  007FD1  57                 	db	87	;'W'
   331  007FD2  4D                 	db	77	;'M'
   332  007FD3  4F                 	db	79	;'O'
   333  007FD4  44                 	db	68	;'D'
   334  007FD5  45                 	db	69	;'E'
   335  007FD6  3D                 	db	61	;'='
   336  007FD7  32                 	db	50	;'2'
   337  007FD8  0D                 	db	13
   338  007FD9  0A                 	db	10
   339  007FDA  00                 	db	0
   340  007FDB                     STR_6:
   341  007FDB  43                 	db	67	;'C'
   342  007FDC  4F                 	db	79	;'O'
   343  007FDD  44                 	db	68	;'D'
   344  007FDE  49                 	db	73	;'I'
   345  007FDF  47                 	db	71	;'G'
   346  007FE0  4F                 	db	79	;'O'
   347  007FE1  20                 	db	32
   348  007FE2  49                 	db	73	;'I'
   349  007FE3  52                 	db	82	;'R'
   350  007FE4  20                 	db	32
   351  007FE5  3D                 	db	61	;'='
   352  007FE6  20                 	db	32
   353  007FE7  00                 	db	0
   354  007FE8  41                 	db	65	;'A'
   355  007FE9  54                 	db	84	;'T'
   356  007FEA  45                 	db	69	;'E'
   357  007FEB  30                 	db	48	;'0'
   358  007FEC  0D                 	db	13
   359  007FED  0A                 	db	10
   360  007FEE  00                 	db	0
   361  007FEF                     STR_1:
   362  007FEF  53                 	db	83	;'S'
   363  007FF0  6F                 	db	111	;'o'
   364  007FF1  6E                 	db	110	;'n'
   365  007FF2  3A                 	db	58	;':'
   366  007FF3  20                 	db	32
   367  007FF4  00                 	db	0
   368  007FF5                     STR_5:
   369  007FF5  25                 	db	37
   370  007FF6  6C                 	db	108	;'l'
   371  007FF7  78                 	db	120	;'x'
   372  007FF8  00                 	db	0
   373  007FF9                     STR_2:
   374  007FF9  25                 	db	37
   375  007FFA  64                 	db	100	;'d'
   376  007FFB  00                 	db	0
   377  007FFC                     STR_3:
   378  007FFC  0D                 	db	13
   379  007FFD  00                 	db	0
   380  007FFE  00                 	db	0	; dummy byte at the end
   381  0000                     
   382                           ; #config settings
   383                           
   384                           	psect	cinit
   385  000800                     __pcinit:
   386                           	callstack 0
   387  000800                     start_initialization:
   388                           	callstack 0
   389  000800                     __initialization:
   390                           	callstack 0
   391                           
   392                           ; Clear objects allocated to BANK0 (100 bytes)
   393  000800  EE00  F060         	lfsr	0,__pbssBANK0
   394  000804  0E64               	movlw	100
   395  000806                     clear_0:
   396  000806  6AEE               	clrf	postinc0,c
   397  000808  06E8               	decf	wreg,f,c
   398  00080A  E1FD               	bnz	clear_0
   399                           
   400                           ; Clear objects allocated to COMRAM (32 bytes)
   401  00080C  EE00  F030         	lfsr	0,__pbssCOMRAM
   402  000810  0E20               	movlw	32
   403  000812                     clear_1:
   404  000812  6AEE               	clrf	postinc0,c
   405  000814  06E8               	decf	wreg,f,c
   406  000816  E1FD               	bnz	clear_1
   407  000818                     end_of_initialization:
   408                           	callstack 0
   409  000818                     __end_of__initialization:
   410                           	callstack 0
   411  000818  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   412  00081A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   413  00081C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   414  00081E  6EF8               	movwf	tblptru,c
   415  000820  0100               	movlb	0
   416  000822  EF13  F002         	goto	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMRAM
   419  000030                     __pbssCOMRAM:
   420                           	callstack 0
   421  000030                     _eusart1RxStatusBuffer:
   422                           	callstack 0
   423  000030                     	ds	8
   424  000038                     _eusart1RxBuffer:
   425                           	callstack 0
   426  000038                     	ds	8
   427  000040                     _codigo_ir:
   428                           	callstack 0
   429  000040                     	ds	2
   430  000042                     _cuenta:
   431                           	callstack 0
   432  000042                     	ds	2
   433  000044                     _EUSART1_ErrorHandler:
   434                           	callstack 0
   435  000044                     	ds	2
   436  000046                     _EUSART1_OverrunErrorHandler:
   437                           	callstack 0
   438  000046                     	ds	2
   439  000048                     _EUSART1_FramingErrorHandler:
   440                           	callstack 0
   441  000048                     	ds	2
   442  00004A                     _EUSART1_RxDefaultInterruptHandler:
   443                           	callstack 0
   444  00004A                     	ds	2
   445  00004C                     _eusart1RxLastError:
   446                           	callstack 0
   447  00004C                     	ds	1
   448  00004D                     _eusart1RxCount:
   449                           	callstack 0
   450  00004D                     	ds	1
   451  00004E                     _eusart1RxTail:
   452                           	callstack 0
   453  00004E                     	ds	1
   454  00004F                     _eusart1RxHead:
   455                           	callstack 0
   456  00004F                     	ds	1
   457                           
   458                           	psect	bssBANK0
   459  000060                     __pbssBANK0:
   460                           	callstack 0
   461  000060                     _texto:
   462                           	callstack 0
   463  000060                     	ds	100
   464                           
   465                           	psect	cstackCOMRAM
   466  000001                     __pcstackCOMRAM:
   467                           	callstack 0
   468  000001                     ??_INTERRUPT_InterruptManager:
   469                           
   470                           ; 1 bytes @ 0x0
   471  000001                     	ds	4
   472  000005                     ?___lldiv:
   473                           	callstack 0
   474  000005                     EUSART1_Write@txData:
   475                           	callstack 0
   476  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   477                           	callstack 0
   478  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   479                           	callstack 0
   480  000005                     EUSART1_SetErrorHandler@interruptHandler:
   481                           	callstack 0
   482  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   483                           	callstack 0
   484  000005                     ___lldiv@dividend:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0x4
   488  000005                     	ds	1
   489  000006                     EUSART1_Write_string@data:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x5
   493  000006                     	ds	1
   494  000007                     
   495                           ; 1 bytes @ 0x6
   496  000007                     	ds	1
   497  000008                     
   498                           ; 1 bytes @ 0x7
   499  000008                     	ds	1
   500  000009                     ___lldiv@divisor:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x8
   504  000009                     	ds	4
   505  00000D                     ___lldiv@quotient:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0xC
   509  00000D                     	ds	4
   510  000011                     ___lldiv@counter:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x10
   514  000011                     	ds	1
   515  000012                     ?___llmod:
   516                           	callstack 0
   517  000012                     ___llmod@dividend:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x11
   521  000012                     	ds	4
   522  000016                     ___llmod@divisor:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x15
   526  000016                     	ds	4
   527  00001A                     ___llmod@counter:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x19
   531  00001A                     	ds	1
   532  00001B                     ?_sprintf:
   533                           	callstack 0
   534  00001B                     sprintf@sp:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x1A
   538  00001B                     	ds	2
   539  00001D                     sprintf@f:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x1C
   543  00001D                     	ds	4
   544  000021                     ??_sprintf:
   545                           
   546                           ; 1 bytes @ 0x20
   547  000021                     	ds	2
   548  000023                     sprintf@idx:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x22
   552  000023                     	ds	1
   553  000024                     sprintf@prec:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x23
   557  000024                     	ds	2
   558  000026                     sprintf@ap:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x25
   562  000026                     	ds	2
   563  000028                     sprintf@val:
   564                           	callstack 0
   565                           
   566                           ; 4 bytes @ 0x27
   567  000028                     	ds	4
   568  00002C                     sprintf@flag:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x2B
   572  00002C                     	ds	1
   573  00002D                     sprintf@c:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x2C
   577  00002D                     	ds	1
   578  00002E                     ??_main:
   579                           
   580                           ; 1 bytes @ 0x2D
   581  00002E                     	ds	2
   582                           
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 71 in file "main.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         0       0       0       0       0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0       0       0
   604 ;;      Temps:          2       0       0       0       0       0       0       0       0
   605 ;;      Totals:         2       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        2 bytes
   607 ;; Hardware stack levels required when called: 7
   608 ;; This function calls:
   609 ;;		_EUSART1_Write_string
   610 ;;		_SYSTEM_Initialize
   611 ;;		_sprintf
   612 ;; This function is called by:
   613 ;;		Startup code after reset
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text0
   618  000426                     __ptext0:
   619                           	callstack 0
   620  000426                     _main:
   621                           	callstack 24
   622  000426                     
   623                           ;main.c: 74: SYSTEM_Initialize();
   624  000426  EC2E  F004         	call	_SYSTEM_Initialize	;wreg free
   625  00042A                     
   626                           ;main.c: 76: ANSELA = 0b00000111;
   627  00042A  0E07               	movlw	7
   628  00042C  010F               	movlb	15	; () banked
   629  00042E  6F5B               	movwf	91,b	;volatile
   630  000430                     
   631                           ; BSR set to: 15
   632                           ;main.c: 77: ANSELC = 0x00;
   633  000430  0E00               	movlw	0
   634  000432  6F5D               	movwf	93,b	;volatile
   635  000434                     
   636                           ; BSR set to: 15
   637                           ;main.c: 78: TRISAbits.TRISA5 = 0;
   638  000434  9A92               	bcf	146,5,c	;volatile
   639  000436                     
   640                           ; BSR set to: 15
   641                           ;main.c: 79: TRISBbits.TRISB0 = 0;
   642  000436  9093               	bcf	147,0,c	;volatile
   643  000438                     
   644                           ; BSR set to: 15
   645                           ;main.c: 80: TRISBbits.TRISB7 = 0;
   646  000438  9E93               	bcf	147,7,c	;volatile
   647  00043A                     
   648                           ; BSR set to: 15
   649                           ;main.c: 82: LATA5 = 0;
   650  00043A  9A89               	bcf	3977,5,c	;volatile
   651  00043C                     
   652                           ; BSR set to: 15
   653                           ;main.c: 83: LATB0 = 0;
   654  00043C  908A               	bcf	3978,0,c	;volatile
   655  00043E                     
   656                           ; BSR set to: 15
   657                           ;main.c: 84: LATB7 = 0;
   658  00043E  9E8A               	bcf	3978,7,c	;volatile
   659  000440                     l1609:
   660                           
   661                           ;main.c: 105: {;main.c: 107: EUSART1_Write_string("Son: ");
   662  000440  0EEF               	movlw	low STR_1
   663  000442  6E06               	movwf	EUSART1_Write_string@data^0,c
   664  000444  0E7F               	movlw	high STR_1
   665  000446  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   666  000448  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   667  00044C                     
   668                           ;main.c: 108: sprintf(texto, "%d", cuenta);
   669  00044C  0E60               	movlw	low _texto
   670  00044E  6E1B               	movwf	sprintf@sp^0,c
   671  000450  0E00               	movlw	high _texto
   672  000452  6E1C               	movwf	(sprintf@sp+1)^0,c
   673  000454  0EF9               	movlw	low STR_2
   674  000456  6E1D               	movwf	sprintf@f^0,c
   675  000458  0E7F               	movlw	high STR_2
   676  00045A  6E1E               	movwf	(sprintf@f+1)^0,c
   677  00045C  0E00               	movlw	0
   678  00045E  6E20               	movwf	(?_sprintf+5)^0,c
   679  000460  0E00               	movlw	0
   680  000462  6E1F               	movwf	(?_sprintf+4)^0,c
   681  000464  EC3B  F000         	call	_sprintf	;wreg free
   682  000468                     
   683                           ;main.c: 109: EUSART1_Write_string(texto);
   684  000468  0E60               	movlw	low _texto
   685  00046A  6E06               	movwf	EUSART1_Write_string@data^0,c
   686  00046C  0E00               	movlw	high _texto
   687  00046E  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   688  000470  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   689  000474                     
   690                           ;main.c: 110: EUSART1_Write_string("\r");
   691  000474  0EFC               	movlw	low STR_3
   692  000476  6E06               	movwf	EUSART1_Write_string@data^0,c
   693  000478  0E7F               	movlw	high STR_3
   694  00047A  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   695  00047C  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   696  000480                     
   697                           ;main.c: 111: EUSART1_Write_string("\n");
   698  000480  0E69               	movlw	low (STR_15+25)
   699  000482  6E06               	movwf	EUSART1_Write_string@data^0,c
   700  000484  0E7F               	movlw	high (STR_15+25)
   701  000486  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   702  000488  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   703  00048C                     
   704                           ;main.c: 112: sprintf(texto, "%lx", codigo_ir);
   705  00048C  0E60               	movlw	low _texto
   706  00048E  6E1B               	movwf	sprintf@sp^0,c
   707  000490  0E00               	movlw	high _texto
   708  000492  6E1C               	movwf	(sprintf@sp+1)^0,c
   709  000494  0EF5               	movlw	low STR_5
   710  000496  6E1D               	movwf	sprintf@f^0,c
   711  000498  0E7F               	movlw	high STR_5
   712  00049A  6E1E               	movwf	(sprintf@f+1)^0,c
   713  00049C  0E00               	movlw	0
   714  00049E  6E20               	movwf	(?_sprintf+5)^0,c
   715  0004A0  0E00               	movlw	0
   716  0004A2  6E1F               	movwf	(?_sprintf+4)^0,c
   717  0004A4  EC3B  F000         	call	_sprintf	;wreg free
   718  0004A8                     
   719                           ;main.c: 113: EUSART1_Write_string("CODIGO IR = ");
   720  0004A8  0EDB               	movlw	low STR_6
   721  0004AA  6E06               	movwf	EUSART1_Write_string@data^0,c
   722  0004AC  0E7F               	movlw	high STR_6
   723  0004AE  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   724  0004B0  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   725  0004B4                     
   726                           ;main.c: 114: EUSART1_Write_string(texto);
   727  0004B4  0E60               	movlw	low _texto
   728  0004B6  6E06               	movwf	EUSART1_Write_string@data^0,c
   729  0004B8  0E00               	movlw	high _texto
   730  0004BA  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   731  0004BC  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   732  0004C0                     
   733                           ;main.c: 115: EUSART1_Write_string("\r");
   734  0004C0  0EFC               	movlw	low STR_3
   735  0004C2  6E06               	movwf	EUSART1_Write_string@data^0,c
   736  0004C4  0E7F               	movlw	high STR_3
   737  0004C6  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   738  0004C8  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   739  0004CC                     
   740                           ;main.c: 116: EUSART1_Write_string("\n");
   741  0004CC  0E69               	movlw	low (STR_15+25)
   742  0004CE  6E06               	movwf	EUSART1_Write_string@data^0,c
   743  0004D0  0E7F               	movlw	high (STR_15+25)
   744  0004D2  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   745  0004D4  EC78  F003         	call	_EUSART1_Write_string	;wreg free
   746  0004D8                     
   747                           ;main.c: 118: _delay((unsigned long)((80)*(48000000/4000.0)));
   748  0004D8  0E05               	movlw	5
   749  0004DA  6E2F               	movwf	(??_main+1)^0,c
   750  0004DC  0EDF               	movlw	223
   751  0004DE  6E2E               	movwf	??_main^0,c
   752  0004E0  0EBC               	movlw	188
   753  0004E2                     u647:
   754  0004E2  2EE8               	decfsz	wreg,f,c
   755  0004E4  D7FE               	bra	u647
   756  0004E6  2E2E               	decfsz	??_main^0,f,c
   757  0004E8  D7FC               	bra	u647
   758  0004EA  2E2F               	decfsz	(??_main+1)^0,f,c
   759  0004EC  D7FA               	bra	u647
   760  0004EE                     
   761                           ;main.c: 119: LATB7 =~ LATB7;
   762  0004EE  AE8A               	btfss	3978,7,c	;volatile
   763  0004F0  EF7C  F002         	goto	u621
   764  0004F4  EF7F  F002         	goto	u620
   765  0004F8                     u621:
   766  0004F8  8E8A               	bsf	3978,7,c	;volatile
   767  0004FA  EF80  F002         	goto	u635
   768  0004FE                     u620:
   769  0004FE  9E8A               	bcf	3978,7,c	;volatile
   770  000500                     u635:
   771  000500  EF20  F002         	goto	l1609
   772  000504  EF39  F000         	goto	start
   773  000508                     __end_of_main:
   774                           	callstack 0
   775                           
   776 ;; *************** function _sprintf *****************
   777 ;; Defined at:
   778 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  sp              2   26[COMRAM] PTR unsigned char 
   781 ;;		 -> texto(100), 
   782 ;;  f               2   28[COMRAM] PTR const unsigned char 
   783 ;;		 -> STR_5(4), STR_2(3), 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  idx             1   34[COMRAM] unsigned char 
   786 ;;  val             4   39[COMRAM] unsigned long 
   787 ;;  tmpval          4    0        struct .
   788 ;;  cp              3    0        PTR const unsigned char 
   789 ;;  ap              2   37[COMRAM] PTR void [1]
   790 ;;		 -> ?_sprintf(2), 
   791 ;;  prec            2   35[COMRAM] int 
   792 ;;  len             2    0        unsigned int 
   793 ;;  c               1   44[COMRAM] unsigned char 
   794 ;;  flag            1   43[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  2   26[COMRAM] int 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         6       0       0       0       0       0       0       0       0
   805 ;;      Locals:        11       0       0       0       0       0       0       0       0
   806 ;;      Temps:          2       0       0       0       0       0       0       0       0
   807 ;;      Totals:        19       0       0       0       0       0       0       0       0
   808 ;;Total ram usage:       19 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 5
   811 ;; This function calls:
   812 ;;		___lldiv
   813 ;;		___llmod
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text1
   820  000076                     __ptext1:
   821                           	callstack 0
   822  000076                     _sprintf:
   823                           	callstack 25
   824  000076                     
   825                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
   826  000076  0E1F               	movlw	low (?_sprintf+4)
   827  000078  6E26               	movwf	sprintf@ap^0,c
   828  00007A  0E00               	movlw	high (?_sprintf+4)
   829  00007C  6E27               	movwf	(sprintf@ap+1)^0,c
   830                           
   831                           ;doprnt.c: 553: while((c = *f++)) {
   832  00007E  EFFB  F001         	goto	l1585
   833  000082                     l1489:
   834                           
   835                           ;doprnt.c: 555: if(c != '%')
   836  000082  0E25               	movlw	37
   837  000084  182D               	xorwf	sprintf@c^0,w,c
   838  000086  B4D8               	btfsc	status,2,c
   839  000088  EF48  F000         	goto	u501
   840  00008C  EF4A  F000         	goto	u500
   841  000090                     u501:
   842  000090  EF54  F000         	goto	l1495
   843  000094                     u500:
   844  000094                     
   845                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   846  000094  C01B  FFD9         	movff	sprintf@sp,fsr2l
   847  000098  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
   848  00009C  C02D  FFDF         	movff	sprintf@c,indf2
   849  0000A0  4A1B               	infsnz	sprintf@sp^0,f,c
   850  0000A2  2A1C               	incf	(sprintf@sp+1)^0,f,c
   851                           
   852                           ;doprnt.c: 559: continue;
   853  0000A4  EFFB  F001         	goto	l1585
   854  0000A8                     l1495:
   855                           
   856                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   857  0000A8  0E00               	movlw	0
   858  0000AA  6E2C               	movwf	sprintf@flag^0,c
   859  0000AC  EF5E  F000         	goto	l1503
   860  0000B0                     l1497:
   861                           
   862                           ;doprnt.c: 669: flag |= 0x10;
   863  0000B0  882C               	bsf	sprintf@flag^0,4,c
   864                           
   865                           ;doprnt.c: 670: goto loop;
   866  0000B2  EF5E  F000         	goto	l1503
   867  0000B6                     l1499:
   868                           
   869                           ;doprnt.c: 747: flag |= 0x80;
   870  0000B6  8E2C               	bsf	sprintf@flag^0,7,c
   871                           
   872                           ;doprnt.c: 749: break;
   873  0000B8  EF7E  F000         	goto	l272
   874  0000BC                     l1503:
   875  0000BC  C01D  FFF6         	movff	sprintf@f,tblptrl
   876  0000C0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
   877  0000C4  4A1D               	infsnz	sprintf@f^0,f,c
   878  0000C6  2A1E               	incf	(sprintf@f+1)^0,f,c
   879  0000C8                     	if	0	;tblptru may be non-zero
   880  0000C8                     	endif
   881  0000C8                     	if	0	;tblptru may be non-zero
   882  0000C8                     	endif
   883  0000C8  0008               	tblrd		*
   884  0000CA  CFF5 F02D          	movff	tablat,sprintf@c
   885  0000CE  502D               	movf	sprintf@c^0,w,c
   886                           
   887                           ; Switch size 1, requested type "simple"
   888                           ; Number of cases is 5, Range of values is 0 to 120
   889                           ; switch strategies available:
   890                           ; Name         Instructions Cycles
   891                           ; simple_byte           16     9 (average)
   892                           ;	Chosen strategy is simple_byte
   893  0000D0  0A00               	xorlw	0	; case 0
   894  0000D2  B4D8               	btfsc	status,2,c
   895  0000D4  EF0C  F002         	goto	l1587
   896  0000D8  0A64               	xorlw	100	; case 100
   897  0000DA  B4D8               	btfsc	status,2,c
   898  0000DC  EF7E  F000         	goto	l272
   899  0000E0  0A0D               	xorlw	13	; case 105
   900  0000E2  B4D8               	btfsc	status,2,c
   901  0000E4  EF7E  F000         	goto	l272
   902  0000E8  0A05               	xorlw	5	; case 108
   903  0000EA  B4D8               	btfsc	status,2,c
   904  0000EC  EF58  F000         	goto	l1497
   905  0000F0  0A14               	xorlw	20	; case 120
   906  0000F2  B4D8               	btfsc	status,2,c
   907  0000F4  EF5B  F000         	goto	l1499
   908  0000F8  EFFB  F001         	goto	l1585
   909  0000FC                     l272:
   910                           
   911                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
   912  0000FC  BE2C               	btfsc	sprintf@flag^0,7,c
   913  0000FE  EF83  F000         	goto	u511
   914  000102  EF85  F000         	goto	u510
   915  000106                     u511:
   916  000106  EFC2  F000         	goto	l275
   917  00010A                     u510:
   918  00010A                     
   919                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
   920  00010A  A82C               	btfss	sprintf@flag^0,4,c
   921  00010C  EF8A  F000         	goto	u521
   922  000110  EF8C  F000         	goto	u520
   923  000114                     u521:
   924  000114  EF9E  F000         	goto	l1511
   925  000118                     u520:
   926  000118                     
   927                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
   928  000118  C026  FFD9         	movff	sprintf@ap,fsr2l
   929  00011C  C027  FFDA         	movff	sprintf@ap+1,fsr2h
   930  000120  CFDE F028          	movff	postinc2,sprintf@val
   931  000124  CFDE F029          	movff	postinc2,sprintf@val+1
   932  000128  CFDE F02A          	movff	postinc2,sprintf@val+2
   933  00012C  CFDE F02B          	movff	postinc2,sprintf@val+3
   934  000130  0E04               	movlw	4
   935  000132  2626               	addwf	sprintf@ap^0,f,c
   936  000134  0E00               	movlw	0
   937  000136  2227               	addwfc	(sprintf@ap+1)^0,f,c
   938  000138  EFAF  F000         	goto	l1515
   939  00013C                     l1511:
   940                           
   941                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
   942  00013C  C026  FFD9         	movff	sprintf@ap,fsr2l
   943  000140  C027  FFDA         	movff	sprintf@ap+1,fsr2h
   944  000144  CFDE F028          	movff	postinc2,sprintf@val
   945  000148  CFDD F029          	movff	postdec2,sprintf@val+1
   946  00014C  0E00               	movlw	0
   947  00014E  BE29               	btfsc	(sprintf@val+1)^0,7,c
   948  000150  0EFF               	movlw	-1
   949  000152  6E2A               	movwf	(sprintf@val+2)^0,c
   950  000154  6E2B               	movwf	(sprintf@val+3)^0,c
   951  000156  0E02               	movlw	2
   952  000158  2626               	addwf	sprintf@ap^0,f,c
   953  00015A  0E00               	movlw	0
   954  00015C  2227               	addwfc	(sprintf@ap+1)^0,f,c
   955  00015E                     l1515:
   956                           
   957                           ;doprnt.c: 1287: if((long)val < 0) {
   958  00015E  BE2B               	btfsc	(sprintf@val+3)^0,7,c
   959  000160  EFB6  F000         	goto	u530
   960  000164  EFB4  F000         	goto	u531
   961  000168                     u531:
   962  000168  EF45  F001         	goto	l1559
   963  00016C                     u530:
   964  00016C                     
   965                           ;doprnt.c: 1288: flag |= 0x03;
   966  00016C  0E03               	movlw	3
   967  00016E  122C               	iorwf	sprintf@flag^0,f,c
   968  000170                     
   969                           ;doprnt.c: 1289: val = -val;
   970  000170  1E2B               	comf	(sprintf@val+3)^0,f,c
   971  000172  1E2A               	comf	(sprintf@val+2)^0,f,c
   972  000174  1E29               	comf	(sprintf@val+1)^0,f,c
   973  000176  6C28               	negf	sprintf@val^0,c
   974  000178  0E00               	movlw	0
   975  00017A  2229               	addwfc	(sprintf@val+1)^0,f,c
   976  00017C  222A               	addwfc	(sprintf@val+2)^0,f,c
   977  00017E  222B               	addwfc	(sprintf@val+3)^0,f,c
   978  000180  EF45  F001         	goto	l1559
   979  000184                     l275:
   980                           
   981                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
   982  000184  A82C               	btfss	sprintf@flag^0,4,c
   983  000186  EFC7  F000         	goto	u541
   984  00018A  EFC9  F000         	goto	u540
   985  00018E                     u541:
   986  00018E  EFDB  F000         	goto	l1525
   987  000192                     u540:
   988  000192                     
   989                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
   990  000192  C026  FFD9         	movff	sprintf@ap,fsr2l
   991  000196  C027  FFDA         	movff	sprintf@ap+1,fsr2h
   992  00019A  CFDE F028          	movff	postinc2,sprintf@val
   993  00019E  CFDE F029          	movff	postinc2,sprintf@val+1
   994  0001A2  CFDE F02A          	movff	postinc2,sprintf@val+2
   995  0001A6  CFDE F02B          	movff	postinc2,sprintf@val+3
   996  0001AA  0E04               	movlw	4
   997  0001AC  2626               	addwf	sprintf@ap^0,f,c
   998  0001AE  0E00               	movlw	0
   999  0001B0  2227               	addwfc	(sprintf@ap+1)^0,f,c
  1000  0001B2  EF45  F001         	goto	l1559
  1001  0001B6                     l1525:
  1002                           
  1003                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  1004  0001B6  C026  FFD9         	movff	sprintf@ap,fsr2l
  1005  0001BA  C027  FFDA         	movff	sprintf@ap+1,fsr2h
  1006  0001BE  CFDE F021          	movff	postinc2,??_sprintf
  1007  0001C2  CFDD F022          	movff	postdec2,??_sprintf+1
  1008  0001C6  C021  F028         	movff	??_sprintf,sprintf@val
  1009  0001CA  C022  F029         	movff	??_sprintf+1,sprintf@val+1
  1010  0001CE  6A2A               	clrf	(sprintf@val+2)^0,c
  1011  0001D0  6A2B               	clrf	(sprintf@val+3)^0,c
  1012  0001D2  0E02               	movlw	2
  1013  0001D4  2626               	addwf	sprintf@ap^0,f,c
  1014  0001D6  0E00               	movlw	0
  1015  0001D8  2227               	addwfc	(sprintf@ap+1)^0,f,c
  1016  0001DA  EF45  F001         	goto	l1559
  1017  0001DE                     l1529:
  1018                           
  1019                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1020  0001DE  0E01               	movlw	1
  1021  0001E0  6E2D               	movwf	sprintf@c^0,c
  1022  0001E2                     l1535:
  1023                           
  1024                           ;doprnt.c: 1332: if(val < dpowers[c])
  1025  0001E2  502D               	movf	sprintf@c^0,w,c
  1026  0001E4  0D04               	mullw	4
  1027  0001E6  0EDD               	movlw	low _dpowers
  1028  0001E8  24F3               	addwf	243,w,c
  1029  0001EA  6EF6               	movwf	tblptrl,c
  1030  0001EC  0E7E               	movlw	high _dpowers
  1031  0001EE  20F4               	addwfc	244,w,c
  1032  0001F0  6EF7               	movwf	tblptrh,c
  1033  0001F2                     	if	0	;There are less than 3 active tblptr bytes
  1034  0001F2                     	endif
  1035  0001F2  0009               	tblrd		*+
  1036  0001F4  50F5               	movf	tablat,w,c
  1037  0001F6  5C28               	subwf	sprintf@val^0,w,c
  1038  0001F8  0009               	tblrd		*+
  1039  0001FA  50F5               	movf	tablat,w,c
  1040  0001FC  5829               	subwfb	(sprintf@val+1)^0,w,c
  1041  0001FE  0009               	tblrd		*+
  1042  000200  50F5               	movf	tablat,w,c
  1043  000202  582A               	subwfb	(sprintf@val+2)^0,w,c
  1044  000204  0009               	tblrd		*+
  1045  000206  50F5               	movf	tablat,w,c
  1046  000208  582B               	subwfb	(sprintf@val+3)^0,w,c
  1047  00020A  B0D8               	btfsc	status,0,c
  1048  00020C  EF0A  F001         	goto	u551
  1049  000210  EF0C  F001         	goto	u550
  1050  000214                     u551:
  1051  000214  EF0E  F001         	goto	l1539
  1052  000218                     u550:
  1053  000218  EF51  F001         	goto	l1561
  1054  00021C                     l1539:
  1055  00021C  2A2D               	incf	sprintf@c^0,f,c
  1056  00021E  0E0A               	movlw	10
  1057  000220  182D               	xorwf	sprintf@c^0,w,c
  1058  000222  A4D8               	btfss	status,2,c
  1059  000224  EF16  F001         	goto	u561
  1060  000228  EF18  F001         	goto	u560
  1061  00022C                     u561:
  1062  00022C  EFF1  F000         	goto	l1535
  1063  000230                     u560:
  1064  000230  EF51  F001         	goto	l1561
  1065  000234                     l1543:
  1066                           
  1067                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1068  000234  0E01               	movlw	1
  1069  000236  6E2D               	movwf	sprintf@c^0,c
  1070  000238                     l1549:
  1071                           
  1072                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1073  000238  502D               	movf	sprintf@c^0,w,c
  1074  00023A  0D04               	mullw	4
  1075  00023C  0E05               	movlw	low _hexpowers
  1076  00023E  24F3               	addwf	243,w,c
  1077  000240  6EF6               	movwf	tblptrl,c
  1078  000242  0E7F               	movlw	high _hexpowers
  1079  000244  20F4               	addwfc	244,w,c
  1080  000246  6EF7               	movwf	tblptrh,c
  1081  000248                     	if	0	;There are less than 3 active tblptr bytes
  1082  000248                     	endif
  1083  000248  0009               	tblrd		*+
  1084  00024A  50F5               	movf	tablat,w,c
  1085  00024C  5C28               	subwf	sprintf@val^0,w,c
  1086  00024E  0009               	tblrd		*+
  1087  000250  50F5               	movf	tablat,w,c
  1088  000252  5829               	subwfb	(sprintf@val+1)^0,w,c
  1089  000254  0009               	tblrd		*+
  1090  000256  50F5               	movf	tablat,w,c
  1091  000258  582A               	subwfb	(sprintf@val+2)^0,w,c
  1092  00025A  0009               	tblrd		*+
  1093  00025C  50F5               	movf	tablat,w,c
  1094  00025E  582B               	subwfb	(sprintf@val+3)^0,w,c
  1095  000260  B0D8               	btfsc	status,0,c
  1096  000262  EF35  F001         	goto	u571
  1097  000266  EF37  F001         	goto	u570
  1098  00026A                     u571:
  1099  00026A  EF39  F001         	goto	l1553
  1100  00026E                     u570:
  1101  00026E  EF51  F001         	goto	l1561
  1102  000272                     l1553:
  1103  000272  2A2D               	incf	sprintf@c^0,f,c
  1104  000274  0E08               	movlw	8
  1105  000276  182D               	xorwf	sprintf@c^0,w,c
  1106  000278  A4D8               	btfss	status,2,c
  1107  00027A  EF41  F001         	goto	u581
  1108  00027E  EF43  F001         	goto	u580
  1109  000282                     u581:
  1110  000282  EF1C  F001         	goto	l1549
  1111  000286                     u580:
  1112  000286  EF51  F001         	goto	l1561
  1113  00028A                     l1559:
  1114  00028A  502C               	movf	sprintf@flag^0,w,c
  1115  00028C  0B80               	andlw	128
  1116                           
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 2, Range of values is 0 to 128
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte            7     4 (average)
  1122                           ;	Chosen strategy is simple_byte
  1123  00028E  0A00               	xorlw	0	; case 0
  1124  000290  B4D8               	btfsc	status,2,c
  1125  000292  EFEF  F000         	goto	l1529
  1126  000296  0A80               	xorlw	128	; case 128
  1127  000298  B4D8               	btfsc	status,2,c
  1128  00029A  EF1A  F001         	goto	l1543
  1129  00029E  EF51  F001         	goto	l1561
  1130  0002A2                     l1561:
  1131                           
  1132                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1133  0002A2  C02C  F021         	movff	sprintf@flag,??_sprintf
  1134  0002A6  0E03               	movlw	3
  1135  0002A8  1621               	andwf	??_sprintf^0,f,c
  1136  0002AA  B4D8               	btfsc	status,2,c
  1137  0002AC  EF5A  F001         	goto	u591
  1138  0002B0  EF5C  F001         	goto	u590
  1139  0002B4                     u591:
  1140  0002B4  EF64  F001         	goto	l1567
  1141  0002B8                     u590:
  1142  0002B8                     
  1143                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1144  0002B8  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1145  0002BC  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1146  0002C0  0E2D               	movlw	45
  1147  0002C2  6EDF               	movwf	indf2,c
  1148  0002C4  4A1B               	infsnz	sprintf@sp^0,f,c
  1149  0002C6  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1150  0002C8                     l1567:
  1151                           
  1152                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1153  0002C8  C02D  F024         	movff	sprintf@c,sprintf@prec
  1154  0002CC  6A25               	clrf	(sprintf@prec+1)^0,c
  1155                           
  1156                           ;doprnt.c: 1500: while(prec--) {
  1157  0002CE  EFEE  F001         	goto	l1583
  1158  0002D2                     l1569:
  1159                           
  1160                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  1161  0002D2  C024  F021         	movff	sprintf@prec,??_sprintf
  1162  0002D6  C025  F022         	movff	sprintf@prec+1,??_sprintf+1
  1163  0002DA  90D8               	bcf	status,0,c
  1164  0002DC  3621               	rlcf	??_sprintf^0,f,c
  1165  0002DE  3622               	rlcf	(??_sprintf+1)^0,f,c
  1166  0002E0  90D8               	bcf	status,0,c
  1167  0002E2  3621               	rlcf	??_sprintf^0,f,c
  1168  0002E4  3622               	rlcf	(??_sprintf+1)^0,f,c
  1169  0002E6  0EDD               	movlw	low _dpowers
  1170  0002E8  2421               	addwf	??_sprintf^0,w,c
  1171  0002EA  6EF6               	movwf	tblptrl,c
  1172  0002EC  0E7E               	movlw	high _dpowers
  1173  0002EE  2022               	addwfc	(??_sprintf+1)^0,w,c
  1174  0002F0  6EF7               	movwf	tblptrh,c
  1175  0002F2                     	if	0	;There are less than 3 active tblptr bytes
  1176  0002F2                     	endif
  1177  0002F2  0009               	tblrd		*+
  1178  0002F4  CFF5 F009          	movff	tablat,___lldiv@divisor
  1179  0002F8  0009               	tblrd		*+
  1180  0002FA  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1181  0002FE  0009               	tblrd		*+
  1182  000300  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1183  000304  000A               	tblrd		*-
  1184  000306  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1185  00030A  C028  F005         	movff	sprintf@val,___lldiv@dividend
  1186  00030E  C029  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1187  000312  C02A  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1188  000316  C02B  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1189  00031A  ECE2  F002         	call	___lldiv	;wreg free
  1190  00031E  C005  F012         	movff	?___lldiv,___llmod@dividend
  1191  000322  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  1192  000326  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  1193  00032A  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  1194  00032E  0E0A               	movlw	10
  1195  000330  6E16               	movwf	___llmod@divisor^0,c
  1196  000332  0E00               	movlw	0
  1197  000334  6E17               	movwf	(___llmod@divisor+1)^0,c
  1198  000336  0E00               	movlw	0
  1199  000338  6E18               	movwf	(___llmod@divisor+2)^0,c
  1200  00033A  0E00               	movlw	0
  1201  00033C  6E19               	movwf	(___llmod@divisor+3)^0,c
  1202  00033E  EC34  F003         	call	___llmod	;wreg free
  1203  000342  5012               	movf	?___llmod^0,w,c
  1204  000344  0F30               	addlw	48
  1205  000346  6E2D               	movwf	sprintf@c^0,c
  1206                           
  1207                           ;doprnt.c: 1517: break;
  1208  000348  EFE6  F001         	goto	l1579
  1209  00034C                     l1571:
  1210                           
  1211                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  1212  00034C  C028  F005         	movff	sprintf@val,___lldiv@dividend
  1213  000350  C029  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1214  000354  C02A  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1215  000358  C02B  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1216  00035C  C024  F021         	movff	sprintf@prec,??_sprintf
  1217  000360  C025  F022         	movff	sprintf@prec+1,??_sprintf+1
  1218  000364  90D8               	bcf	status,0,c
  1219  000366  3621               	rlcf	??_sprintf^0,f,c
  1220  000368  3622               	rlcf	(??_sprintf+1)^0,f,c
  1221  00036A  90D8               	bcf	status,0,c
  1222  00036C  3621               	rlcf	??_sprintf^0,f,c
  1223  00036E  3622               	rlcf	(??_sprintf+1)^0,f,c
  1224  000370  0E05               	movlw	low _hexpowers
  1225  000372  2421               	addwf	??_sprintf^0,w,c
  1226  000374  6EF6               	movwf	tblptrl,c
  1227  000376  0E7F               	movlw	high _hexpowers
  1228  000378  2022               	addwfc	(??_sprintf+1)^0,w,c
  1229  00037A  6EF7               	movwf	tblptrh,c
  1230  00037C                     	if	0	;There are less than 3 active tblptr bytes
  1231  00037C                     	endif
  1232  00037C  0009               	tblrd		*+
  1233  00037E  CFF5 F009          	movff	tablat,___lldiv@divisor
  1234  000382  0009               	tblrd		*+
  1235  000384  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1236  000388  0009               	tblrd		*+
  1237  00038A  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1238  00038E  000A               	tblrd		*-
  1239  000390  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1240  000394  ECE2  F002         	call	___lldiv	;wreg free
  1241  000398  5005               	movf	?___lldiv^0,w,c
  1242  00039A  0B0F               	andlw	15
  1243  00039C  6E23               	movwf	sprintf@idx^0,c
  1244  00039E                     
  1245                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  1246  00039E  0E80               	movlw	low STR_19
  1247  0003A0  2423               	addwf	sprintf@idx^0,w,c
  1248  0003A2  6EF6               	movwf	tblptrl,c
  1249  0003A4  6AF7               	clrf	tblptrh,c
  1250  0003A6  0E7F               	movlw	high STR_19
  1251  0003A8  22F7               	addwfc	tblptrh,f,c
  1252  0003AA                     	if	0	;There are less than 3 active tblptr bytes
  1253  0003AA                     	endif
  1254  0003AA  0008               	tblrd		*
  1255  0003AC  CFF5 F02D          	movff	tablat,sprintf@c
  1256                           
  1257                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  1258  0003B0  EFE6  F001         	goto	l1579
  1259  0003B4                     l1577:
  1260  0003B4  502C               	movf	sprintf@flag^0,w,c
  1261  0003B6  0B80               	andlw	128
  1262                           
  1263                           ; Switch size 1, requested type "simple"
  1264                           ; Number of cases is 2, Range of values is 0 to 128
  1265                           ; switch strategies available:
  1266                           ; Name         Instructions Cycles
  1267                           ; simple_byte            7     4 (average)
  1268                           ;	Chosen strategy is simple_byte
  1269  0003B8  0A00               	xorlw	0	; case 0
  1270  0003BA  B4D8               	btfsc	status,2,c
  1271  0003BC  EF69  F001         	goto	l1569
  1272  0003C0  0A80               	xorlw	128	; case 128
  1273  0003C2  B4D8               	btfsc	status,2,c
  1274  0003C4  EFA6  F001         	goto	l1571
  1275  0003C8  EFE6  F001         	goto	l1579
  1276  0003CC                     l1579:
  1277                           
  1278                           ;doprnt.c: 1550: ((*sp++ = (c)));
  1279  0003CC  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1280  0003D0  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1281  0003D4  C02D  FFDF         	movff	sprintf@c,indf2
  1282  0003D8  4A1B               	infsnz	sprintf@sp^0,f,c
  1283  0003DA  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1284  0003DC                     l1583:
  1285  0003DC  0624               	decf	sprintf@prec^0,f,c
  1286  0003DE  A0D8               	btfss	status,0,c
  1287  0003E0  0625               	decf	(sprintf@prec+1)^0,f,c
  1288  0003E2  2824               	incf	sprintf@prec^0,w,c
  1289  0003E4  E106               	bnz	u601
  1290  0003E6  2825               	incf	(sprintf@prec+1)^0,w,c
  1291  0003E8  A4D8               	btfss	status,2,c
  1292  0003EA  EFF9  F001         	goto	u601
  1293  0003EE  EFFB  F001         	goto	u600
  1294  0003F2                     u601:
  1295  0003F2  EFDA  F001         	goto	l1577
  1296  0003F6                     u600:
  1297  0003F6                     l1585:
  1298  0003F6  C01D  FFF6         	movff	sprintf@f,tblptrl
  1299  0003FA  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1300  0003FE  4A1D               	infsnz	sprintf@f^0,f,c
  1301  000400  2A1E               	incf	(sprintf@f+1)^0,f,c
  1302  000402                     	if	0	;tblptru may be non-zero
  1303  000402                     	endif
  1304  000402                     	if	0	;tblptru may be non-zero
  1305  000402                     	endif
  1306  000402  0008               	tblrd		*
  1307  000404  CFF5 F02D          	movff	tablat,sprintf@c
  1308  000408  502D               	movf	sprintf@c^0,w,c
  1309  00040A  A4D8               	btfss	status,2,c
  1310  00040C  EF0A  F002         	goto	u611
  1311  000410  EF0C  F002         	goto	u610
  1312  000414                     u611:
  1313  000414  EF41  F000         	goto	l1489
  1314  000418                     u610:
  1315  000418                     l1587:
  1316                           
  1317                           ;doprnt.c: 1564: *sp = 0;
  1318  000418  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1319  00041C  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1320  000420  0E00               	movlw	0
  1321  000422  6EDF               	movwf	indf2,c
  1322  000424  0012               	return		;funcret
  1323  000426                     __end_of_sprintf:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function ___llmod *****************
  1327 ;; Defined at:
  1328 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  dividend        4   17[COMRAM] unsigned long 
  1331 ;;  divisor         4   21[COMRAM] unsigned long 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  counter         1   25[COMRAM] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  4   17[COMRAM] unsigned long 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:         8       0       0       0       0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1346 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1347 ;;Total ram usage:        9 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 4
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_sprintf
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text2
  1358  000668                     __ptext2:
  1359                           	callstack 0
  1360  000668                     ___llmod:
  1361                           	callstack 25
  1362  000668  5016               	movf	___llmod@divisor^0,w,c
  1363  00066A  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  1364  00066C  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  1365  00066E  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  1366  000670  B4D8               	btfsc	status,2,c
  1367  000672  EF3D  F003         	goto	u441
  1368  000676  EF3F  F003         	goto	u440
  1369  00067A                     u441:
  1370  00067A  EF6F  F003         	goto	l712
  1371  00067E                     u440:
  1372  00067E  0E01               	movlw	1
  1373  000680  6E1A               	movwf	___llmod@counter^0,c
  1374  000682  EF49  F003         	goto	l1461
  1375  000686                     l1459:
  1376  000686  90D8               	bcf	status,0,c
  1377  000688  3616               	rlcf	___llmod@divisor^0,f,c
  1378  00068A  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  1379  00068C  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  1380  00068E  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  1381  000690  2A1A               	incf	___llmod@counter^0,f,c
  1382  000692                     l1461:
  1383  000692  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  1384  000694  EF4E  F003         	goto	u451
  1385  000698  EF50  F003         	goto	u450
  1386  00069C                     u451:
  1387  00069C  EF43  F003         	goto	l1459
  1388  0006A0                     u450:
  1389  0006A0                     l1463:
  1390  0006A0  5016               	movf	___llmod@divisor^0,w,c
  1391  0006A2  5C12               	subwf	___llmod@dividend^0,w,c
  1392  0006A4  5017               	movf	(___llmod@divisor+1)^0,w,c
  1393  0006A6  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  1394  0006A8  5018               	movf	(___llmod@divisor+2)^0,w,c
  1395  0006AA  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  1396  0006AC  5019               	movf	(___llmod@divisor+3)^0,w,c
  1397  0006AE  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  1398  0006B0  A0D8               	btfss	status,0,c
  1399  0006B2  EF5D  F003         	goto	u461
  1400  0006B6  EF5F  F003         	goto	u460
  1401  0006BA                     u461:
  1402  0006BA  EF67  F003         	goto	l1467
  1403  0006BE                     u460:
  1404  0006BE  5016               	movf	___llmod@divisor^0,w,c
  1405  0006C0  5E12               	subwf	___llmod@dividend^0,f,c
  1406  0006C2  5017               	movf	(___llmod@divisor+1)^0,w,c
  1407  0006C4  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  1408  0006C6  5018               	movf	(___llmod@divisor+2)^0,w,c
  1409  0006C8  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  1410  0006CA  5019               	movf	(___llmod@divisor+3)^0,w,c
  1411  0006CC  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  1412  0006CE                     l1467:
  1413  0006CE  90D8               	bcf	status,0,c
  1414  0006D0  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  1415  0006D2  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  1416  0006D4  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  1417  0006D6  3216               	rrcf	___llmod@divisor^0,f,c
  1418  0006D8  2E1A               	decfsz	___llmod@counter^0,f,c
  1419  0006DA  EF50  F003         	goto	l1463
  1420  0006DE                     l712:
  1421  0006DE  C012  F012         	movff	___llmod@dividend,?___llmod
  1422  0006E2  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  1423  0006E6  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  1424  0006EA  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  1425  0006EE  0012               	return		;funcret
  1426  0006F0                     __end_of___llmod:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function ___lldiv *****************
  1430 ;; Defined at:
  1431 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  dividend        4    4[COMRAM] unsigned long 
  1434 ;;  divisor         4    8[COMRAM] unsigned long 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  quotient        4   12[COMRAM] unsigned long 
  1437 ;;  counter         1   16[COMRAM] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  4    4[COMRAM] unsigned long 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1447 ;;      Params:         8       0       0       0       0       0       0       0       0
  1448 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1450 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1451 ;;Total ram usage:       13 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 4
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_sprintf
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text3
  1462  0005C4                     __ptext3:
  1463                           	callstack 0
  1464  0005C4                     ___lldiv:
  1465                           	callstack 25
  1466  0005C4  0E00               	movlw	0
  1467  0005C6  6E0D               	movwf	___lldiv@quotient^0,c
  1468  0005C8  0E00               	movlw	0
  1469  0005CA  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  1470  0005CC  0E00               	movlw	0
  1471  0005CE  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  1472  0005D0  0E00               	movlw	0
  1473  0005D2  6E10               	movwf	(___lldiv@quotient+3)^0,c
  1474  0005D4  5009               	movf	___lldiv@divisor^0,w,c
  1475  0005D6  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  1476  0005D8  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  1477  0005DA  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  1478  0005DC  B4D8               	btfsc	status,2,c
  1479  0005DE  EFF3  F002         	goto	u411
  1480  0005E2  EFF5  F002         	goto	u410
  1481  0005E6                     u411:
  1482  0005E6  EF2B  F003         	goto	l331
  1483  0005EA                     u410:
  1484  0005EA  0E01               	movlw	1
  1485  0005EC  6E11               	movwf	___lldiv@counter^0,c
  1486  0005EE  EFFF  F002         	goto	l1441
  1487  0005F2                     l1439:
  1488  0005F2  90D8               	bcf	status,0,c
  1489  0005F4  3609               	rlcf	___lldiv@divisor^0,f,c
  1490  0005F6  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  1491  0005F8  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  1492  0005FA  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  1493  0005FC  2A11               	incf	___lldiv@counter^0,f,c
  1494  0005FE                     l1441:
  1495  0005FE  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  1496  000600  EF04  F003         	goto	u421
  1497  000604  EF06  F003         	goto	u420
  1498  000608                     u421:
  1499  000608  EFF9  F002         	goto	l1439
  1500  00060C                     u420:
  1501  00060C                     l1443:
  1502  00060C  90D8               	bcf	status,0,c
  1503  00060E  360D               	rlcf	___lldiv@quotient^0,f,c
  1504  000610  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  1505  000612  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  1506  000614  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  1507  000616  5009               	movf	___lldiv@divisor^0,w,c
  1508  000618  5C05               	subwf	___lldiv@dividend^0,w,c
  1509  00061A  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1510  00061C  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  1511  00061E  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1512  000620  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  1513  000622  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1514  000624  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  1515  000626  A0D8               	btfss	status,0,c
  1516  000628  EF18  F003         	goto	u431
  1517  00062C  EF1A  F003         	goto	u430
  1518  000630                     u431:
  1519  000630  EF23  F003         	goto	l1451
  1520  000634                     u430:
  1521  000634  5009               	movf	___lldiv@divisor^0,w,c
  1522  000636  5E05               	subwf	___lldiv@dividend^0,f,c
  1523  000638  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1524  00063A  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  1525  00063C  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1526  00063E  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  1527  000640  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1528  000642  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  1529  000644  800D               	bsf	___lldiv@quotient^0,0,c
  1530  000646                     l1451:
  1531  000646  90D8               	bcf	status,0,c
  1532  000648  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  1533  00064A  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  1534  00064C  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  1535  00064E  3209               	rrcf	___lldiv@divisor^0,f,c
  1536  000650  2E11               	decfsz	___lldiv@counter^0,f,c
  1537  000652  EF06  F003         	goto	l1443
  1538  000656                     l331:
  1539  000656  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  1540  00065A  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  1541  00065E  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  1542  000662  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  1543  000666  0012               	return		;funcret
  1544  000668                     __end_of___lldiv:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _SYSTEM_Initialize *****************
  1548 ;; Defined at:
  1549 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1563 ;;      Params:         0       0       0       0       0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 6
  1570 ;; This function calls:
  1571 ;;		_EUSART1_Initialize
  1572 ;;		_INTERRUPT_Initialize
  1573 ;;		_OSCILLATOR_Initialize
  1574 ;;		_PIN_MANAGER_Initialize
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text4
  1581  00085C                     __ptext4:
  1582                           	callstack 0
  1583  00085C                     _SYSTEM_Initialize:
  1584                           	callstack 24
  1585  00085C                     
  1586                           ;mcc.c: 53: INTERRUPT_Initialize();
  1587  00085C  EC51  F004         	call	_INTERRUPT_Initialize	;wreg free
  1588  000860                     
  1589                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1590  000860  ECD4  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1591  000864                     
  1592                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1593  000864  EC13  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1594  000868                     
  1595                           ;mcc.c: 56: EUSART1_Initialize();
  1596  000868  ECA7  F003         	call	_EUSART1_Initialize	;wreg free
  1597  00086C  0012               	return		;funcret
  1598  00086E                     __end_of_SYSTEM_Initialize:
  1599                           	callstack 0
  1600                           
  1601 ;; *************** function _PIN_MANAGER_Initialize *****************
  1602 ;; Defined at:
  1603 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1617 ;;      Params:         0       0       0       0       0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1620 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1621 ;;Total ram usage:        0 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 4
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_SYSTEM_Initialize
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text5
  1632  0007A8                     __ptext5:
  1633                           	callstack 0
  1634  0007A8                     _PIN_MANAGER_Initialize:
  1635                           	callstack 25
  1636  0007A8                     
  1637                           ;pin_manager.c: 60: LATA = 0x00;
  1638  0007A8  0E00               	movlw	0
  1639  0007AA  6E89               	movwf	137,c	;volatile
  1640                           
  1641                           ;pin_manager.c: 61: LATB = 0x00;
  1642  0007AC  0E00               	movlw	0
  1643  0007AE  6E8A               	movwf	138,c	;volatile
  1644                           
  1645                           ;pin_manager.c: 62: LATC = 0x00;
  1646  0007B0  0E00               	movlw	0
  1647  0007B2  6E8B               	movwf	139,c	;volatile
  1648                           
  1649                           ;pin_manager.c: 67: TRISA = 0xC7;
  1650  0007B4  0EC7               	movlw	199
  1651  0007B6  6E92               	movwf	146,c	;volatile
  1652                           
  1653                           ;pin_manager.c: 68: TRISB = 0xFE;
  1654  0007B8  0EFE               	movlw	254
  1655  0007BA  6E93               	movwf	147,c	;volatile
  1656                           
  1657                           ;pin_manager.c: 69: TRISC = 0x87;
  1658  0007BC  0E87               	movlw	135
  1659  0007BE  6E94               	movwf	148,c	;volatile
  1660                           
  1661                           ;pin_manager.c: 74: ANSELC = 0x04;
  1662  0007C0  0E04               	movlw	4
  1663  0007C2  010F               	movlb	15	; () banked
  1664  0007C4  6F5D               	movwf	93,b	;volatile
  1665                           
  1666                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1667  0007C6  0E3E               	movlw	62
  1668  0007C8  6F5C               	movwf	92,b	;volatile
  1669                           
  1670                           ;pin_manager.c: 76: ANSELA = 0x07;
  1671  0007CA  0E07               	movlw	7
  1672  0007CC  6F5B               	movwf	91,b	;volatile
  1673                           
  1674                           ;pin_manager.c: 81: WPUB = 0x00;
  1675  0007CE  0E00               	movlw	0
  1676  0007D0  6E85               	movwf	133,c	;volatile
  1677  0007D2                     
  1678                           ; BSR set to: 15
  1679                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  1680  0007D2  8EF1               	bsf	241,7,c	;volatile
  1681  0007D4                     
  1682                           ; BSR set to: 15
  1683  0007D4  0012               	return		;funcret
  1684  0007D6                     __end_of_PIN_MANAGER_Initialize:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _OSCILLATOR_Initialize *****************
  1688 ;; Defined at:
  1689 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1703 ;;      Params:         0       0       0       0       0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 4
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_SYSTEM_Initialize
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text6
  1718  000826                     __ptext6:
  1719                           	callstack 0
  1720  000826                     _OSCILLATOR_Initialize:
  1721                           	callstack 25
  1722  000826                     
  1723                           ;mcc.c: 62: OSCCON = 0x70;
  1724  000826  0E70               	movlw	112
  1725  000828  6ED3               	movwf	211,c	;volatile
  1726                           
  1727                           ;mcc.c: 64: OSCCON2 = 0x00;
  1728  00082A  0E00               	movlw	0
  1729  00082C  6ED2               	movwf	210,c	;volatile
  1730                           
  1731                           ;mcc.c: 66: OSCTUNE = 0x80;
  1732  00082E  0E80               	movlw	128
  1733  000830  6E9B               	movwf	155,c	;volatile
  1734                           
  1735                           ;mcc.c: 68: ACTCON = 0x00;
  1736  000832  0E00               	movlw	0
  1737  000834  6EB5               	movwf	181,c	;volatile
  1738  000836                     l158:
  1739  000836  AED2               	btfss	4050,7,c	;volatile
  1740  000838  EF20  F004         	goto	u31
  1741  00083C  EF22  F004         	goto	u30
  1742  000840                     u31:
  1743  000840  EF1B  F004         	goto	l158
  1744  000844                     u30:
  1745  000844  0012               	return		;funcret
  1746  000846                     __end_of_OSCILLATOR_Initialize:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _INTERRUPT_Initialize *****************
  1750 ;; Defined at:
  1751 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		None
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1768 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:        0 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 4
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_SYSTEM_Initialize
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text7
  1780  0008A2                     __ptext7:
  1781                           	callstack 0
  1782  0008A2                     _INTERRUPT_Initialize:
  1783                           	callstack 25
  1784  0008A2                     
  1785                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1786  0008A2  9ED0               	bcf	208,7,c	;volatile
  1787  0008A4  0012               	return		;funcret
  1788  0008A6                     __end_of_INTERRUPT_Initialize:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function _EUSART1_Initialize *****************
  1792 ;; Defined at:
  1793 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 5
  1814 ;; This function calls:
  1815 ;;		_EUSART1_SetErrorHandler
  1816 ;;		_EUSART1_SetFramingErrorHandler
  1817 ;;		_EUSART1_SetOverrunErrorHandler
  1818 ;;		_EUSART1_SetRxInterruptHandler
  1819 ;; This function is called by:
  1820 ;;		_SYSTEM_Initialize
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text8
  1825  00074E                     __ptext8:
  1826                           	callstack 0
  1827  00074E                     _EUSART1_Initialize:
  1828                           	callstack 24
  1829  00074E                     
  1830                           ;eusart1.c: 86: PIE1bits.RC1IE = 0;
  1831  00074E  9A9D               	bcf	157,5,c	;volatile
  1832  000750                     
  1833                           ;eusart1.c: 87: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  1834  000750  0E08               	movlw	low _EUSART1_Receive_ISR
  1835  000752  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1836  000754  0E05               	movlw	high _EUSART1_Receive_ISR
  1837  000756  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1838  000758  EC37  F004         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1839  00075C                     
  1840                           ;eusart1.c: 91: BAUDCON1 = 0x08;
  1841  00075C  0E08               	movlw	8
  1842  00075E  6EB8               	movwf	184,c	;volatile
  1843  000760                     
  1844                           ;eusart1.c: 94: RCSTA1 = 0x90;
  1845  000760  0E90               	movlw	144
  1846  000762  6EAB               	movwf	171,c	;volatile
  1847  000764                     
  1848                           ;eusart1.c: 97: TXSTA1 = 0x24;
  1849  000764  0E24               	movlw	36
  1850  000766  6EAC               	movwf	172,c	;volatile
  1851  000768                     
  1852                           ;eusart1.c: 100: SPBRG1 = 0x67;
  1853  000768  0E67               	movlw	103
  1854  00076A  6EAF               	movwf	175,c	;volatile
  1855  00076C                     
  1856                           ;eusart1.c: 103: SPBRGH1 = 0x00;
  1857  00076C  0E00               	movlw	0
  1858  00076E  6EB0               	movwf	176,c	;volatile
  1859  000770                     
  1860                           ;eusart1.c: 106: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1861  000770  0EA6               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1862  000772  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1863  000774  0E08               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1864  000776  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1865  000778  EC41  F004         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1866  00077C                     
  1867                           ;eusart1.c: 107: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1868  00077C  0E96               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1869  00077E  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1870  000780  0E08               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1871  000782  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1872  000784  EC3C  F004         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1873  000788                     
  1874                           ;eusart1.c: 108: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1875  000788  0E9C               	movlw	low _EUSART1_DefaultErrorHandler
  1876  00078A  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1877  00078C  0E08               	movlw	high _EUSART1_DefaultErrorHandler
  1878  00078E  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1879  000790  EC46  F004         	call	_EUSART1_SetErrorHandler	;wreg free
  1880                           
  1881                           ;eusart1.c: 110: eusart1RxLastError.status = 0;
  1882  000794  0E00               	movlw	0
  1883  000796  6E4C               	movwf	_eusart1RxLastError^0,c	;volatile
  1884                           
  1885                           ;eusart1.c: 113: eusart1RxHead = 0;
  1886  000798  0E00               	movlw	0
  1887  00079A  6E4F               	movwf	_eusart1RxHead^0,c	;volatile
  1888                           
  1889                           ;eusart1.c: 114: eusart1RxTail = 0;
  1890  00079C  0E00               	movlw	0
  1891  00079E  6E4E               	movwf	_eusart1RxTail^0,c	;volatile
  1892                           
  1893                           ;eusart1.c: 115: eusart1RxCount = 0;
  1894  0007A0  0E00               	movlw	0
  1895  0007A2  6E4D               	movwf	_eusart1RxCount^0,c	;volatile
  1896  0007A4                     
  1897                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  1898  0007A4  8A9D               	bsf	157,5,c	;volatile
  1899  0007A6  0012               	return		;funcret
  1900  0007A8                     __end_of_EUSART1_Initialize:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1904 ;; Defined at:
  1905 ;;		line 251 in file "mcc_generated_files/eusart1.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1908 ;;		 -> EUSART1_Receive_ISR(1), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1920 ;;      Params:         2       0       0       0       0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1923 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 4
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_EUSART1_Initialize
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text9
  1935  00086E                     __ptext9:
  1936                           	callstack 0
  1937  00086E                     _EUSART1_SetRxInterruptHandler:
  1938                           	callstack 24
  1939  00086E                     
  1940                           ;eusart1.c: 252: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  1941  00086E  C005  F04A         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  1942  000872  C006  F04B         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  1943  000876  0012               	return		;funcret
  1944  000878                     __end_of_EUSART1_SetRxInterruptHandler:
  1945                           	callstack 0
  1946                           
  1947 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1948 ;; Defined at:
  1949 ;;		line 242 in file "mcc_generated_files/eusart1.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1952 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1964 ;;      Params:         2       0       0       0       0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1967 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1968 ;;Total ram usage:        2 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 4
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_EUSART1_Initialize
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text10
  1979  000878                     __ptext10:
  1980                           	callstack 0
  1981  000878                     _EUSART1_SetOverrunErrorHandler:
  1982                           	callstack 24
  1983  000878                     
  1984                           ;eusart1.c: 243: EUSART1_OverrunErrorHandler = interruptHandler;
  1985  000878  C005  F046         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1986  00087C  C006  F047         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1987  000880  0012               	return		;funcret
  1988  000882                     __end_of_EUSART1_SetOverrunErrorHandler:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1992 ;; Defined at:
  1993 ;;		line 238 in file "mcc_generated_files/eusart1.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1996 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2008 ;;      Params:         2       0       0       0       0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2011 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 4
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_EUSART1_Initialize
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text11
  2023  000882                     __ptext11:
  2024                           	callstack 0
  2025  000882                     _EUSART1_SetFramingErrorHandler:
  2026                           	callstack 24
  2027  000882                     
  2028                           ;eusart1.c: 239: EUSART1_FramingErrorHandler = interruptHandler;
  2029  000882  C005  F048         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2030  000886  C006  F049         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2031  00088A  0012               	return		;funcret
  2032  00088C                     __end_of_EUSART1_SetFramingErrorHandler:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _EUSART1_SetErrorHandler *****************
  2036 ;; Defined at:
  2037 ;;		line 246 in file "mcc_generated_files/eusart1.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2040 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2052 ;;      Params:         2       0       0       0       0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2055 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2056 ;;Total ram usage:        2 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 4
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_EUSART1_Initialize
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text12
  2067  00088C                     __ptext12:
  2068                           	callstack 0
  2069  00088C                     _EUSART1_SetErrorHandler:
  2070                           	callstack 24
  2071  00088C                     
  2072                           ;eusart1.c: 247: EUSART1_ErrorHandler = interruptHandler;
  2073  00088C  C005  F044         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2074  000890  C006  F045         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2075  000894  0012               	return		;funcret
  2076  000896                     __end_of_EUSART1_SetErrorHandler:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _EUSART1_Write_string *****************
  2080 ;; Defined at:
  2081 ;;		line 171 in file "mcc_generated_files/eusart1.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  data            2    5[COMRAM] PTR const unsigned char 
  2084 ;;		 -> STR_18(14), STR_17(21), STR_16(14), STR_15(27), 
  2085 ;;		 -> STR_14(43), STR_13(15), STR_12(14), STR_11(17), 
  2086 ;;		 -> STR_10(14), STR_9(7), STR_8(2), STR_7(2), 
  2087 ;;		 -> STR_6(13), STR_4(2), STR_3(2), texto(100), 
  2088 ;;		 -> STR_1(6), 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2100 ;;      Params:         2       0       0       0       0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2103 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2104 ;;Total ram usage:        2 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 5
  2107 ;; This function calls:
  2108 ;;		_EUSART1_Write
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;;		_esp8266_router_init
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text13
  2116  0006F0                     __ptext13:
  2117                           	callstack 0
  2118  0006F0                     _EUSART1_Write_string:
  2119                           	callstack 25
  2120  0006F0                     
  2121                           ;eusart1.c: 173: while(*data != 0)
  2122  0006F0  EF8E  F003         	goto	l1477
  2123  0006F4                     l1473:
  2124                           
  2125                           ;eusart1.c: 174: {;eusart1.c: 175: EUSART1_Write(*data++);
  2126  0006F4  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  2127  0006F8  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  2128  0006FC  6AF8               	clrf	tblptru,c
  2129  0006FE  0E07               	movlw	(high __ramtop+-1)
  2130  000700  64F7               	cpfsgt	tblptrh,c
  2131  000702  D003               	bra	u477
  2132  000704  0008               	tblrd		*
  2133  000706  50F5               	movf	tablat,w,c
  2134  000708  D005               	bra	u470
  2135  00070A                     u477:
  2136  00070A  CFF6 FFD9          	movff	tblptrl,fsr2l
  2137  00070E  CFF7 FFDA          	movff	tblptrh,fsr2h
  2138  000712  50DF               	movf	indf2,w,c
  2139  000714                     u470:
  2140  000714  EC23  F004         	call	_EUSART1_Write
  2141  000718  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  2142  00071A  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  2143  00071C                     l1477:
  2144  00071C  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  2145  000720  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  2146  000724  6AF8               	clrf	tblptru,c
  2147  000726  0E07               	movlw	(high __ramtop+-1)
  2148  000728  64F7               	cpfsgt	tblptrh,c
  2149  00072A  D003               	bra	u487
  2150  00072C  0008               	tblrd		*
  2151  00072E  50F5               	movf	tablat,w,c
  2152  000730  D005               	bra	u480
  2153  000732                     u487:
  2154  000732  CFF6 FFD9          	movff	tblptrl,fsr2l
  2155  000736  CFF7 FFDA          	movff	tblptrh,fsr2h
  2156  00073A  50DF               	movf	indf2,w,c
  2157  00073C                     u480:
  2158  00073C  0900               	iorlw	0
  2159  00073E  A4D8               	btfss	status,2,c
  2160  000740  EFA4  F003         	goto	u491
  2161  000744  EFA6  F003         	goto	u490
  2162  000748                     u491:
  2163  000748  EF7A  F003         	goto	l1473
  2164  00074C                     u490:
  2165  00074C  0012               	return		;funcret
  2166  00074E                     __end_of_EUSART1_Write_string:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function _EUSART1_Write *****************
  2170 ;; Defined at:
  2171 ;;		line 162 in file "mcc_generated_files/eusart1.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  txData          1    wreg     unsigned char 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  txData          1    4[COMRAM] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0
  2186 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2188 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2189 ;;Total ram usage:        1 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 4
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_EUSART1_Write_string
  2196 ;;		_putch
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text14
  2201  000846                     __ptext14:
  2202                           	callstack 0
  2203  000846                     _EUSART1_Write:
  2204                           	callstack 25
  2205                           
  2206                           ;incstack = 0
  2207                           ;EUSART1_Write@txData stored from wreg
  2208  000846  6E05               	movwf	EUSART1_Write@txData^0,c
  2209  000848                     l87:
  2210  000848  A89E               	btfss	158,4,c	;volatile
  2211  00084A  EF29  F004         	goto	u21
  2212  00084E  EF2B  F004         	goto	u20
  2213  000852                     u21:
  2214  000852  EF24  F004         	goto	l87
  2215  000856                     u20:
  2216  000856                     
  2217                           ;eusart1.c: 166: };eusart1.c: 168: TXREG1 = txData;
  2218  000856  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2219  00085A  0012               	return		;funcret
  2220  00085C                     __end_of_EUSART1_Write:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _INTERRUPT_InterruptManager *****************
  2224 ;; Defined at:
  2225 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2239 ;;      Params:         0       0       0       0       0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2241 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2242 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2243 ;;Total ram usage:        4 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; Hardware stack levels required when called: 3
  2246 ;; This function calls:
  2247 ;;		Absolute function
  2248 ;;		_EUSART1_Receive_ISR
  2249 ;; This function is called by:
  2250 ;;		Interrupt level 2
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	intcode
  2255  000008                     __pintcode:
  2256                           	callstack 0
  2257  000008                     _INTERRUPT_InterruptManager:
  2258                           	callstack 24
  2259                           
  2260                           ;incstack = 0
  2261  000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2262  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  2263  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2264  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2265  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2266  00001A                     
  2267                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
  2268  00001A  ACF2               	btfss	242,6,c	;volatile
  2269  00001C  EF12  F000         	goto	i2u37_41
  2270  000020  EF14  F000         	goto	i2u37_40
  2271  000024                     i2u37_41:
  2272  000024  EF2F  F000         	goto	i2l244
  2273  000028                     i2u37_40:
  2274  000028                     
  2275                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: if(PIE1bits.RC1IE == 1 && PIR1bits.
      +                          RC1IF == 1)
  2276  000028  AA9D               	btfss	157,5,c	;volatile
  2277  00002A  EF19  F000         	goto	i2u38_41
  2278  00002E  EF1B  F000         	goto	i2u38_40
  2279  000032                     i2u38_41:
  2280  000032  EF2F  F000         	goto	i2l244
  2281  000036                     i2u38_40:
  2282  000036  AA9E               	btfss	158,5,c	;volatile
  2283  000038  EF20  F000         	goto	i2u39_41
  2284  00003C  EF22  F000         	goto	i2u39_40
  2285  000040                     i2u39_41:
  2286  000040  EF2F  F000         	goto	i2l244
  2287  000044                     i2u39_40:
  2288  000044                     
  2289                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 65: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  2290  000044  D802               	call	i2u40_48
  2291  000046  EF2F  F000         	goto	i2u40_49
  2292  00004A                     i2u40_48:
  2293  00004A  0005               	push	
  2294  00004C  6EFA               	movwf	pclath,c
  2295  00004E  504A               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  2296  000050  6EFD               	movwf	tosl,c
  2297  000052  504B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  2298  000054  6EFE               	movwf	tosh,c
  2299  000056  50F8               	movf	tblptru,w,c
  2300  000058  6EFF               	movwf	tosu,c
  2301  00005A  50FA               	movf	pclath,w,c
  2302  00005C  0012               	return		;indir
  2303  00005E                     i2u40_49:
  2304  00005E                     i2l244:
  2305  00005E  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2306  000062  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2307  000066  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2308  00006A  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2309  00006E  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2310  000070  0011               	retfie		f
  2311  000072                     __end_of_INTERRUPT_InterruptManager:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _EUSART1_Receive_ISR *****************
  2315 ;; Defined at:
  2316 ;;		line 190 in file "mcc_generated_files/eusart1.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2330 ;;      Params:         0       0       0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 2
  2337 ;; This function calls:
  2338 ;;		Absolute function
  2339 ;;		_EUSART1_DefaultErrorHandler
  2340 ;;		_EUSART1_DefaultFramingErrorHandler
  2341 ;;		_EUSART1_DefaultOverrunErrorHandler
  2342 ;;		_EUSART1_RxDataHandler
  2343 ;; This function is called by:
  2344 ;;		_EUSART1_Initialize
  2345 ;;		_INTERRUPT_InterruptManager
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text16
  2350  000508                     __ptext16:
  2351                           	callstack 0
  2352  000508                     _EUSART1_Receive_ISR:
  2353                           	callstack 24
  2354  000508                     
  2355                           ;eusart1.c: 193: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  2356  000508  0E30               	movlw	low _eusart1RxStatusBuffer
  2357  00050A  244F               	addwf	_eusart1RxHead^0,w,c	;volatile
  2358  00050C  6ED9               	movwf	fsr2l,c
  2359  00050E  6ADA               	clrf	fsr2h,c
  2360  000510  0E00               	movlw	high _eusart1RxStatusBuffer
  2361  000512  22DA               	addwfc	fsr2h,f,c
  2362  000514  0E00               	movlw	0
  2363  000516  6EDF               	movwf	indf2,c
  2364  000518                     
  2365                           ;eusart1.c: 195: if(RCSTA1bits.FERR){
  2366  000518  A4AB               	btfss	171,2,c	;volatile
  2367  00051A  EF91  F002         	goto	i2u15_41
  2368  00051E  EF93  F002         	goto	i2u15_40
  2369  000522                     i2u15_41:
  2370  000522  EFA7  F002         	goto	i2l1181
  2371  000526                     i2u15_40:
  2372  000526                     
  2373                           ;eusart1.c: 196: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  2374  000526  0E30               	movlw	low _eusart1RxStatusBuffer
  2375  000528  244F               	addwf	_eusart1RxHead^0,w,c	;volatile
  2376  00052A  6ED9               	movwf	fsr2l,c
  2377  00052C  6ADA               	clrf	fsr2h,c
  2378  00052E  0E00               	movlw	high _eusart1RxStatusBuffer
  2379  000530  22DA               	addwfc	fsr2h,f,c
  2380  000532  82DF               	bsf	indf2,1,c
  2381  000534                     
  2382                           ;eusart1.c: 197: EUSART1_FramingErrorHandler();
  2383  000534  D802               	call	i2u16_48
  2384  000536  EFA7  F002         	goto	i2u16_49
  2385  00053A                     i2u16_48:
  2386  00053A  0005               	push	
  2387  00053C  6EFA               	movwf	pclath,c
  2388  00053E  5048               	movf	_EUSART1_FramingErrorHandler^0,w,c
  2389  000540  6EFD               	movwf	tosl,c
  2390  000542  5049               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  2391  000544  6EFE               	movwf	tosh,c
  2392  000546  50F8               	movf	tblptru,w,c
  2393  000548  6EFF               	movwf	tosu,c
  2394  00054A  50FA               	movf	pclath,w,c
  2395  00054C  0012               	return		;indir
  2396  00054E                     i2u16_49:
  2397  00054E                     i2l1181:
  2398                           
  2399                           ;eusart1.c: 198: };eusart1.c: 200: if(RCSTA1bits.OERR){
  2400  00054E  A2AB               	btfss	171,1,c	;volatile
  2401  000550  EFAC  F002         	goto	i2u17_41
  2402  000554  EFAE  F002         	goto	i2u17_40
  2403  000558                     i2u17_41:
  2404  000558  EFC2  F002         	goto	i2l1187
  2405  00055C                     i2u17_40:
  2406  00055C                     
  2407                           ;eusart1.c: 201: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  2408  00055C  0E30               	movlw	low _eusart1RxStatusBuffer
  2409  00055E  244F               	addwf	_eusart1RxHead^0,w,c	;volatile
  2410  000560  6ED9               	movwf	fsr2l,c
  2411  000562  6ADA               	clrf	fsr2h,c
  2412  000564  0E00               	movlw	high _eusart1RxStatusBuffer
  2413  000566  22DA               	addwfc	fsr2h,f,c
  2414  000568  84DF               	bsf	indf2,2,c
  2415  00056A                     
  2416                           ;eusart1.c: 202: EUSART1_OverrunErrorHandler();
  2417  00056A  D802               	call	i2u18_48
  2418  00056C  EFC2  F002         	goto	i2u18_49
  2419  000570                     i2u18_48:
  2420  000570  0005               	push	
  2421  000572  6EFA               	movwf	pclath,c
  2422  000574  5046               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  2423  000576  6EFD               	movwf	tosl,c
  2424  000578  5047               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  2425  00057A  6EFE               	movwf	tosh,c
  2426  00057C  50F8               	movf	tblptru,w,c
  2427  00057E  6EFF               	movwf	tosu,c
  2428  000580  50FA               	movf	pclath,w,c
  2429  000582  0012               	return		;indir
  2430  000584                     i2u18_49:
  2431  000584                     i2l1187:
  2432                           
  2433                           ;eusart1.c: 203: };eusart1.c: 205: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  2434  000584  0E30               	movlw	low _eusart1RxStatusBuffer
  2435  000586  244F               	addwf	_eusart1RxHead^0,w,c	;volatile
  2436  000588  6ED9               	movwf	fsr2l,c
  2437  00058A  6ADA               	clrf	fsr2h,c
  2438  00058C  0E00               	movlw	high _eusart1RxStatusBuffer
  2439  00058E  22DA               	addwfc	fsr2h,f,c
  2440  000590  50DF               	movf	indf2,w,c
  2441  000592  B4D8               	btfsc	status,2,c
  2442  000594  EFCE  F002         	goto	i2u19_41
  2443  000598  EFD0  F002         	goto	i2u19_40
  2444  00059C                     i2u19_41:
  2445  00059C  EFDF  F002         	goto	i2l1191
  2446  0005A0                     i2u19_40:
  2447  0005A0                     
  2448                           ;eusart1.c: 206: EUSART1_ErrorHandler();
  2449  0005A0  D802               	call	i2u20_48
  2450  0005A2  EFDD  F002         	goto	i2u20_49
  2451  0005A6                     i2u20_48:
  2452  0005A6  0005               	push	
  2453  0005A8  6EFA               	movwf	pclath,c
  2454  0005AA  5044               	movf	_EUSART1_ErrorHandler^0,w,c
  2455  0005AC  6EFD               	movwf	tosl,c
  2456  0005AE  5045               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  2457  0005B0  6EFE               	movwf	tosh,c
  2458  0005B2  50F8               	movf	tblptru,w,c
  2459  0005B4  6EFF               	movwf	tosu,c
  2460  0005B6  50FA               	movf	pclath,w,c
  2461  0005B8  0012               	return		;indir
  2462  0005BA                     i2u20_49:
  2463                           
  2464                           ;eusart1.c: 207: } else {
  2465  0005BA  EFE1  F002         	goto	i2l109
  2466  0005BE                     i2l1191:
  2467                           
  2468                           ;eusart1.c: 208: EUSART1_RxDataHandler();
  2469  0005BE  ECEB  F003         	call	_EUSART1_RxDataHandler	;wreg free
  2470  0005C2                     i2l109:
  2471  0005C2  0012               	return		;funcret
  2472  0005C4                     __end_of_EUSART1_Receive_ISR:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  2476 ;; Defined at:
  2477 ;;		line 226 in file "mcc_generated_files/eusart1.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		None
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_EUSART1_Initialize
  2501 ;;		_EUSART1_Receive_ISR
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text17
  2506  000896                     __ptext17:
  2507                           	callstack 0
  2508  000896                     _EUSART1_DefaultOverrunErrorHandler:
  2509                           	callstack 25
  2510  000896                     
  2511                           ;eusart1.c: 229: RCSTA1bits.CREN = 0;
  2512  000896  98AB               	bcf	171,4,c	;volatile
  2513                           
  2514                           ;eusart1.c: 230: RCSTA1bits.CREN = 1;
  2515  000898  88AB               	bsf	171,4,c	;volatile
  2516  00089A  0012               	return		;funcret
  2517  00089C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  2521 ;; Defined at:
  2522 ;;		line 224 in file "mcc_generated_files/eusart1.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		None
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_EUSART1_Initialize
  2546 ;;		_EUSART1_Receive_ISR
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text18
  2551  0008A6                     __ptext18:
  2552                           	callstack 0
  2553  0008A6                     _EUSART1_DefaultFramingErrorHandler:
  2554                           	callstack 25
  2555  0008A6  0012               	return		;funcret
  2556  0008A8                     __end_of_EUSART1_DefaultFramingErrorHandler:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  2560 ;; Defined at:
  2561 ;;		line 234 in file "mcc_generated_files/eusart1.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 1
  2582 ;; This function calls:
  2583 ;;		_EUSART1_RxDataHandler
  2584 ;; This function is called by:
  2585 ;;		_EUSART1_Initialize
  2586 ;;		_EUSART1_Receive_ISR
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text19
  2591  00089C                     __ptext19:
  2592                           	callstack 0
  2593  00089C                     _EUSART1_DefaultErrorHandler:
  2594                           	callstack 24
  2595  00089C                     
  2596                           ;eusart1.c: 235: EUSART1_RxDataHandler();
  2597  00089C  ECEB  F003         	call	_EUSART1_RxDataHandler	;wreg free
  2598  0008A0  0012               	return		;funcret
  2599  0008A2                     __end_of_EUSART1_DefaultErrorHandler:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _EUSART1_RxDataHandler *****************
  2603 ;; Defined at:
  2604 ;;		line 214 in file "mcc_generated_files/eusart1.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_EUSART1_Receive_ISR
  2628 ;;		_EUSART1_DefaultErrorHandler
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text20
  2633  0007D6                     __ptext20:
  2634                           	callstack 0
  2635  0007D6                     _EUSART1_RxDataHandler:
  2636                           	callstack 25
  2637  0007D6                     
  2638                           ;eusart1.c: 216: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2639  0007D6  0E38               	movlw	low _eusart1RxBuffer
  2640  0007D8  244F               	addwf	_eusart1RxHead^0,w,c	;volatile
  2641  0007DA  6ED9               	movwf	fsr2l,c
  2642  0007DC  6ADA               	clrf	fsr2h,c
  2643  0007DE  0E00               	movlw	high _eusart1RxBuffer
  2644  0007E0  22DA               	addwfc	fsr2h,f,c
  2645  0007E2  CFAE FFDF          	movff	4014,indf2	;volatile
  2646  0007E6  2A4F               	incf	_eusart1RxHead^0,f,c	;volatile
  2647  0007E8                     
  2648                           ;eusart1.c: 217: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2649  0007E8  0E07               	movlw	7
  2650  0007EA  644F               	cpfsgt	_eusart1RxHead^0,c	;volatile
  2651  0007EC  EFFA  F003         	goto	i2u1_41
  2652  0007F0  EFFC  F003         	goto	i2u1_40
  2653  0007F4                     i2u1_41:
  2654  0007F4  EFFE  F003         	goto	i2l1065
  2655  0007F8                     i2u1_40:
  2656  0007F8                     
  2657                           ;eusart1.c: 218: {;eusart1.c: 219: eusart1RxHead = 0;
  2658  0007F8  0E00               	movlw	0
  2659  0007FA  6E4F               	movwf	_eusart1RxHead^0,c	;volatile
  2660  0007FC                     i2l1065:
  2661                           
  2662                           ;eusart1.c: 220: };eusart1.c: 221: eusart1RxCount++;
  2663  0007FC  2A4D               	incf	_eusart1RxCount^0,f,c	;volatile
  2664  0007FE  0012               	return		;funcret
  2665  000800                     __end_of_EUSART1_RxDataHandler:
  2666                           	callstack 0
  2667                           
  2668                           	psect	text21
  2669  000000                     __ptext21:
  2670                           	callstack 0
  2671  000000                     
  2672                           	psect	rparam
  2673  0000                     
  2674                           	psect	temp
  2675  000050                     btemp:
  2676                           	callstack 0
  2677  000050                     	ds	1
  2678  0000                     int$flags	set	btemp
  2679  0000                     wtemp8	set	btemp+1
  2680  0000                     ttemp5	set	btemp+1
  2681  0000                     ttemp6	set	btemp+4
  2682  0000                     ttemp7	set	btemp+8
  2683                           
  2684                           	psect	idloc
  2685                           
  2686                           ;Config register IDLOC0 @ 0x200000
  2687                           ;	unspecified, using default values
  2688  200000                     	org	2097152
  2689  200000  FF                 	db	255
  2690                           
  2691                           ;Config register IDLOC1 @ 0x200001
  2692                           ;	unspecified, using default values
  2693  200001                     	org	2097153
  2694  200001  FF                 	db	255
  2695                           
  2696                           ;Config register IDLOC2 @ 0x200002
  2697                           ;	unspecified, using default values
  2698  200002                     	org	2097154
  2699  200002  FF                 	db	255
  2700                           
  2701                           ;Config register IDLOC3 @ 0x200003
  2702                           ;	unspecified, using default values
  2703  200003                     	org	2097155
  2704  200003  FF                 	db	255
  2705                           
  2706                           ;Config register IDLOC4 @ 0x200004
  2707                           ;	unspecified, using default values
  2708  200004                     	org	2097156
  2709  200004  FF                 	db	255
  2710                           
  2711                           ;Config register IDLOC5 @ 0x200005
  2712                           ;	unspecified, using default values
  2713  200005                     	org	2097157
  2714  200005  FF                 	db	255
  2715                           
  2716                           ;Config register IDLOC6 @ 0x200006
  2717                           ;	unspecified, using default values
  2718  200006                     	org	2097158
  2719  200006  FF                 	db	255
  2720                           
  2721                           ;Config register IDLOC7 @ 0x200007
  2722                           ;	unspecified, using default values
  2723  200007                     	org	2097159
  2724  200007  FF                 	db	255
  2725                           
  2726                           	psect	config
  2727                           
  2728                           ;Config register CONFIG1L @ 0x300000
  2729                           ;	PLL Selection
  2730                           ;	PLLSEL = PLL3X, 3x clock multiplier
  2731                           ;	PLL Enable Configuration bit
  2732                           ;	CFGPLLEN = ON, PLL Enabled
  2733                           ;	CPU System Clock Postscaler
  2734                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  2735                           ;	Low Speed USB mode with 48 MHz system clock
  2736                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  2737  300000                     	org	3145728
  2738  300000  23                 	db	35
  2739                           
  2740                           ;Config register CONFIG1H @ 0x300001
  2741                           ;	Oscillator Selection
  2742                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  2743                           ;	Primary Oscillator Shutdown
  2744                           ;	PCLKEN = ON, Primary oscillator enabled
  2745                           ;	Fail-Safe Clock Monitor
  2746                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2747                           ;	Internal/External Oscillator Switchover
  2748                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2749  300001                     	org	3145729
  2750  300001  23                 	db	35
  2751                           
  2752                           ;Config register CONFIG2L @ 0x300002
  2753                           ;	Power-up Timer Enable
  2754                           ;	nPWRTEN = ON, Power up timer enabled
  2755                           ;	Brown-out Reset Enable
  2756                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2757                           ;	Brown-out Reset Voltage
  2758                           ;	BORV = 190, BOR set to 1.9V nominal
  2759                           ;	Low-Power Brown-out Reset
  2760                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2761  300002                     	org	3145730
  2762  300002  5E                 	db	94
  2763                           
  2764                           ;Config register CONFIG2H @ 0x300003
  2765                           ;	Watchdog Timer Enable bits
  2766                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2767                           ;	Watchdog Timer Postscaler
  2768                           ;	WDTPS = 32768, 1:32768
  2769  300003                     	org	3145731
  2770  300003  3C                 	db	60
  2771                           
  2772                           ; Padding undefined space
  2773  300004                     	org	3145732
  2774  300004  FF                 	db	255
  2775                           
  2776                           ;Config register CONFIG3H @ 0x300005
  2777                           ;	CCP2 MUX bit
  2778                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2779                           ;	PORTB A/D Enable bit
  2780                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  2781                           ;	Timer3 Clock Input MUX bit
  2782                           ;	T3CMX = RC0, T3CKI function is on RC0
  2783                           ;	SDO Output MUX bit
  2784                           ;	SDOMX = RB3, SDO function is on RB3
  2785                           ;	Master Clear Reset Pin Enable
  2786                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2787  300005                     	org	3145733
  2788  300005  D1                 	db	209
  2789                           
  2790                           ;Config register CONFIG4L @ 0x300006
  2791                           ;	Stack Full/Underflow Reset
  2792                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2793                           ;	Single-Supply ICSP Enable bit
  2794                           ;	LVP = OFF, Single-Supply ICSP disabled
  2795                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2796                           ;	ICPRT = OFF, ICPORT disabled
  2797                           ;	Extended Instruction Set Enable bit
  2798                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2799                           ;	Background Debugger Enable bit
  2800                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2801  300006                     	org	3145734
  2802  300006  81                 	db	129
  2803                           
  2804                           ; Padding undefined space
  2805  300007                     	org	3145735
  2806  300007  FF                 	db	255
  2807                           
  2808                           ;Config register CONFIG5L @ 0x300008
  2809                           ;	Block 0 Code Protect
  2810                           ;	CP0 = OFF, Block 0 is not code-protected
  2811                           ;	Block 1 Code Protect
  2812                           ;	CP1 = OFF, Block 1 is not code-protected
  2813                           ;	Block 2 Code Protect
  2814                           ;	CP2 = OFF, Block 2 is not code-protected
  2815                           ;	Block 3 Code Protect
  2816                           ;	CP3 = OFF, Block 3 is not code-protected
  2817  300008                     	org	3145736
  2818  300008  0F                 	db	15
  2819                           
  2820                           ;Config register CONFIG5H @ 0x300009
  2821                           ;	Boot Block Code Protect
  2822                           ;	CPB = OFF, Boot block is not code-protected
  2823                           ;	Data EEPROM Code Protect
  2824                           ;	CPD = OFF, Data EEPROM is not code-protected
  2825  300009                     	org	3145737
  2826  300009  C0                 	db	192
  2827                           
  2828                           ;Config register CONFIG6L @ 0x30000A
  2829                           ;	Block 0 Write Protect
  2830                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2831                           ;	Block 1 Write Protect
  2832                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2833                           ;	Block 2 Write Protect
  2834                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2835                           ;	Block 3 Write Protect
  2836                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2837  30000A                     	org	3145738
  2838  30000A  0F                 	db	15
  2839                           
  2840                           ;Config register CONFIG6H @ 0x30000B
  2841                           ;	Configuration Registers Write Protect
  2842                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2843                           ;	Boot Block Write Protect
  2844                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2845                           ;	Data EEPROM Write Protect
  2846                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2847  30000B                     	org	3145739
  2848  30000B  E0                 	db	224
  2849                           
  2850                           ;Config register CONFIG7L @ 0x30000C
  2851                           ;	Block 0 Table Read Protect
  2852                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2853                           ;	Block 1 Table Read Protect
  2854                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2855                           ;	Block 2 Table Read Protect
  2856                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2857                           ;	Block 3 Table Read Protect
  2858                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2859  30000C                     	org	3145740
  2860  30000C  0F                 	db	15
  2861                           
  2862                           ;Config register CONFIG7H @ 0x30000D
  2863                           ;	Boot Block Table Read Protect
  2864                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2865  30000D                     	org	3145741
  2866  30000D  40                 	db	64
  2867                           tosu	equ	0xFFF
  2868                           tosh	equ	0xFFE
  2869                           tosl	equ	0xFFD
  2870                           stkptr	equ	0xFFC
  2871                           pclatu	equ	0xFFB
  2872                           pclath	equ	0xFFA
  2873                           pcl	equ	0xFF9
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           prodh	equ	0xFF4
  2879                           prodl	equ	0xFF3
  2880                           indf0	equ	0xFEF
  2881                           postinc0	equ	0xFEE
  2882                           postdec0	equ	0xFED
  2883                           preinc0	equ	0xFEC
  2884                           plusw0	equ	0xFEB
  2885                           fsr0h	equ	0xFEA
  2886                           fsr0l	equ	0xFE9
  2887                           wreg	equ	0xFE8
  2888                           indf1	equ	0xFE7
  2889                           postinc1	equ	0xFE6
  2890                           postdec1	equ	0xFE5
  2891                           preinc1	equ	0xFE4
  2892                           plusw1	equ	0xFE3
  2893                           fsr1h	equ	0xFE2
  2894                           fsr1l	equ	0xFE1
  2895                           bsr	equ	0xFE0
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           preinc2	equ	0xFDC
  2900                           plusw2	equ	0xFDB
  2901                           fsr2h	equ	0xFDA
  2902                           fsr2l	equ	0xFD9
  2903                           status	equ	0xFD8

Data Sizes:
    Strings     217
    Constant    72
    Data        0
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      79
    BANK0           160      0     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> texto(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_18(CODE[14]), STR_17(CODE[21]), STR_16(CODE[14]), STR_15(CODE[27]), 
		 -> STR_14(CODE[43]), STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[7]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[13]), STR_4(CODE[2]), STR_3(CODE[2]), texto(BANK0[100]), 
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3720
                                             45 COMRAM     2     2      0
               _EUSART1_Write_string
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    1900
                                             26 COMRAM    19    13      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     392
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2    1428
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      4F       1       84.0%
BITBIGSFRlllhl      27      0       0      31        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhll       17      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhll         C      0       0      26        0.0%
BITBIGSFRllll        8      0       0      32        0.0%
BITBIGSFRllhh        6      0       0      28        0.0%
BITBIGSFRllhl        6      0       0      29        0.0%
BITBIGSFRhlhhl       4      0       0      25        0.0%
BITBIGSFRlllhh       3      0       0      30        0.0%
BITBIGSFRhlhhh       2      0       0      24        0.0%
BITBIGSFRhhlh        1      0       0      22        0.0%
BITBIGSFRlh          1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3      33        0.0%
DATA                 0      0      B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 29 01:16:16 2023

                                            l63 07A6                                              l90 085A  
                                            l87 0848                                              l96 074C  
                                            u20 0856                                              u21 0852  
                                            u30 0844                                              u31 0840  
                                           l131 0894                                             l125 088A  
                                           l301 0424                                             l134 0876  
                                           l128 0880                                             l161 0844  
                                           l155 086C                                             l331 0656  
                                           l237 08A4                                             l158 0836  
                                           l272 00FC                                             l186 07D4  
                                           l338 0666                                             l275 0184  
                                           l712 06DE                                             l719 06EE  
                                           u410 05EA                                             u411 05E6  
                                           u420 060C                                             u500 0094  
                                           u421 0608                                             u501 0090  
                                           u430 0634                                             u510 010A  
                                           u431 0630                                             u511 0106  
                                           u440 067E                                             u600 03F6  
                                           u520 0118                                             u441 067A  
                                           u601 03F2                                             u521 0114  
                                           u450 06A0                                             u610 0418  
                                           u530 016C                                             u451 069C  
                                           u611 0414                                             u531 0168  
                                           u460 06BE                                             u540 0192  
                                           u620 04FE                                             u461 06BA  
                                           u541 018E                                             u621 04F8  
                                           u470 0714                                             u550 0218  
                                           u551 0214                                             u480 073C  
                                           u560 0230                                             u561 022C  
                                           u490 074C                                             u570 026E  
                                           u491 0748                                             u571 026A  
                                           u635 0500                                             u580 0286  
                                           u477 070A                                             u581 0282  
                                           u590 02B8                                             u487 0732  
                                           u591 02B4                                             u647 04E2  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1101 07D2  
                                          l1103 0826                                            l1091 0856  
                                          l1403 086E                                            l1411 074E  
                                          l1405 0882                                            l1421 0768  
                                          l1413 0750                                            l1407 0878  
                                          l1431 07A4                                            l1423 076C  
                                          l1415 075C                                            l1511 013C  
                                          l1503 00BC                                            l1089 0848  
                                          l1409 088C                                            l1425 0770  
                                          l1417 0760                                            l1097 08A2  
                                          l1441 05FE                                            l1433 05C4  
                                          l1521 0192                                            l1513 0156  
                                          l1505 010A                                            l1601 0438  
                                          l1427 077C                                            l1419 0764  
                                          l1099 07A8                                            l1451 0646  
                                          l1443 060C                                            l1435 05D4  
                                          l1523 01AA                                            l1515 015E  
                                          l1507 0118                                            l1611 044C  
                                          l1603 043A                                            l1429 0788  
                                          l1453 0650                                            l1445 0616  
                                          l1437 05EA                                            l1461 0692  
                                          l1541 021E                                            l1525 01B6  
                                          l1517 016C                                            l1509 0130  
                                          l1621 04A8                                            l1613 0468  
                                          l1605 043C                                            l1471 06F0  
                                          l1447 0634                                            l1439 05F2  
                                          l1463 06A0                                            l1455 0668  
                                          l1543 0234                                            l1535 01E2  
                                          l1527 01D2                                            l1519 0170  
                                          l1631 04EE                                            l1623 04B4  
                                          l1615 0474                                            l1607 043E  
                                          l1473 06F4                                            l1481 0860  
                                          l1449 0644                                            l1465 06BE  
                                          l1457 067E                                            l1553 0272  
                                          l1561 02A2                                            l1529 01DE  
                                          l1625 04C0                                            l1617 0480  
                                          l1609 0440                                            l1475 0718  
                                          l1483 0864                                            l1467 06CE  
                                          l1459 0686                                            l1571 034C  
                                          l1563 02B8                                            l1555 0274  
                                          l1539 021C                                            l1491 0094  
                                          l1627 04CC                                            l1619 048C  
                                          l1477 071C                                            l1485 0868  
                                          l1469 06D8                                            l1581 03D8  
                                          l1573 039E                                            l1565 02C4  
                                          l1549 0238                                            l1493 00A0  
                                          l1629 04D8                                            l1479 085C  
                                          l1583 03DC                                            l1567 02C8  
                                          l1559 028A                                            l1495 00A8  
                                          l1487 0076                                            l1591 0426  
                                          l1577 03B4                                            l1569 02D2  
                                          l1497 00B0                                            l1489 0082  
                                          l1585 03F6                                            l1593 042A  
                                          l1579 03CC                                            l1587 0418  
                                          l1499 00B6                                            l1595 0430  
                                          l1597 0434                                            l1599 0436  
                                          STR_1 7FEF                                            STR_2 7FF9  
                                          STR_3 7FFC                                            STR_4 7F69  
                                          STR_5 7FF5                                            STR_6 7FDB  
                                          STR_7 7FFC                                            STR_8 7F69  
                                          STR_9 7FE8                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _WPUB 000F85                                   _EUSART1_Write 0846  
                                          _main 0426                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          btemp 0050                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0072  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                 __end_of_OSCILLATOR_Initialize 0846                           _eusart1RxStatusBuffer 0030  
                                         ?_main 0001                                           STR_10 7FCD  
                                         STR_11 7F91                                           STR_12 7FBF  
                                         STR_13 7FA2                                           STR_14 7F25  
                                         STR_15 7F50                                           STR_17 7F6B  
                                         STR_18 7FB1                                           STR_19 7F80  
                               __end_of___lldiv 0668                    __end_of_EUSART1_Write_string 074E  
                               __end_of___llmod 06F0                                           _LATB0 007C50  
                                         _LATA5 007C4D                                           _LATB7 007C57  
                                         i2l113 07FE                                           i2l122 08A0  
                                         i2l116 08A6                                           i2l109 05C2  
                                         i2l119 089A                                           i2l244 005E  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                 __end_of_dpowers 7F05  
                                         _texto 0060                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                           ttemp5 0051  
                                         ttemp6 0054                                           ttemp7 0058  
                                         status 000FD8                                           wtemp8 0051  
                               __end_of_sprintf 0426           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 08A8            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 08A6  
                               __initialization 0800                      __end_of_EUSART1_Initialize 07A8  
                                  __end_of_main 0508                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 002E                                   __activetblptr 000002  
                              ___llmod@dividend 0012                                          _ACTCON 000FB5  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          i2l1061 07E8  
                                        i2l1063 07F8                                          i2l1065 07FC  
                                        i2l1057 07D6                                          i2l1059 07E6  
                                        i2l1093 0896                                          i2l1181 054E  
                                        i2l1173 0508                                          i2l1095 089C  
                                        i2l1191 05BE                                          i2l1183 055C  
                                        i2l1175 0518                                          i2l1185 056A  
                                        i2l1177 0526                                          i2l1187 0584  
                                        i2l1179 0534                                          i2l1371 0036  
                                        i2l1189 05A0                                          i2l1373 0044  
                                        i2l1367 001A                                          i2l1369 0028  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          i2u1_40 07F8  
                                        i2u1_41 07F4                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                       ??___lldiv 000D  
                                     ??___llmod 001A                                          _cuenta 0042  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 0806  
                                        clear_1 0812                                          isa$std 000001  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                  __mediumconst 7EDC                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0005                                       ??_sprintf 0021  
                               _eusart1RxBuffer 0038                               _SYSTEM_Initialize 085C  
                                    __accesstop 0060                         __end_of__initialization 0818  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                          _EUSART1_Write_string 06F0                   __end_of_EUSART1_RxDataHandler 0800  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0007  
                   __end_of_EUSART1_Receive_ISR 05C4                       __end_of_SYSTEM_Initialize 086E  
                                 _eusart1RxHead 004F                                   _eusart1RxTail 004E  
                                    __pbssBANK0 0060                 ??_EUSART1_SetRxInterruptHandler 0007  
                         ?_EUSART1_Write_string 0006                 __end_of_EUSART1_SetErrorHandler 0896  
        __end_of_EUSART1_SetFramingErrorHandler 088C                  _EUSART1_SetFramingErrorHandler 0882  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                                       i2u20_48 05A6                                         i2u20_49 05BA  
                                       i2u15_40 0526                                         i2u15_41 0522  
                                       i2u17_40 055C                                         i2u16_48 053A  
                                       i2u40_48 004A                                         i2u17_41 0558  
                                       i2u16_49 054E                                         i2u40_49 005E  
                                       i2u19_40 05A0                                         i2u18_48 0570  
                                       i2u19_41 059C                                         i2u18_49 0584  
                                       i2u37_40 0028                                         i2u37_41 0024  
                                       i2u38_40 0036                                         i2u38_41 0032  
                                       _OSCTUNE 000F9B                                         i2u39_40 0044  
                                       i2u39_41 0040                                         _SPBRGH1 000FB0  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___lldiv 05C4                                         ___llmod 0668  
                                       __pcinit 0800                                         __ramtop 0800  
                                       __ptext0 0426                                         __ptext1 0076  
                                       __ptext2 0668                                         __ptext3 05C4  
                                       __ptext4 085C                                         __ptext5 07A8  
                                       __ptext6 0826                                         __ptext7 08A2  
                                       __ptext8 074E                                         __ptext9 086E  
                             __end_of_hexpowers 7F25                                         _dpowers 7EDD  
                         _OSCILLATOR_Initialize 0826                              _EUSART1_Initialize 074E  
                      ??_PIN_MANAGER_Initialize 0005                        EUSART1_Write_string@data 0006  
                 ??_EUSART1_DefaultErrorHandler 0001                                         _sprintf 0076  
                          end_of_initialization 0818                             ?_EUSART1_Initialize 0001  
                        ??_EUSART1_Write_string 0008                                   __Lmediumconst 7EDC  
                   _EUSART1_OverrunErrorHandler 0046                                 ___lldiv@divisor 0009  
         __end_of_EUSART1_SetRxInterruptHandler 0878                   _EUSART1_SetRxInterruptHandler 086E  
                               ___lldiv@counter 0011                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                          ??_EUSART1_Initialize 0007                                       _TRISAbits 000F92  
                                     _TRISBbits 000F93                             EUSART1_Write@txData 0005  
                  __end_of_INTERRUPT_Initialize 08A6                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 0800   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
                         __end_of_EUSART1_Write 085C                          fp__EUSART1_Receive_ISR 0000  
                               ___llmod@divisor 0016                                 ___llmod@counter 001A  
                         _EUSART1_RxDataHandler 07D6                  ?_EUSART1_SetRxInterruptHandler 0005  
                                _eusart1RxCount 004D                                     __pbssCOMRAM 0030  
             _EUSART1_RxDefaultInterruptHandler 004A                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                     sprintf@flag 002C  
                                   sprintf@prec 0024                          _PIN_MANAGER_Initialize 07A8  
                                     __pintcode 0008                                   __pmediumconst 7EDC  
                                     _codigo_ir 0040                                        ?___lldiv 0005  
                                      ?___llmod 0012                    ??_INTERRUPT_InterruptManager 0001  
                                      _BAUDCON1 000FB8           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 089C            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 0896  
                          _EUSART1_ErrorHandler 0044                         _EUSART1_SetErrorHandler 088C  
                                     _hexpowers 7F05                                        ?_sprintf 001B  
                          _INTERRUPT_Initialize 08A2         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _PIE1bits 000F9D                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                                      __Hrparam 0000                                        __Lrparam 0000  
                       ??_OSCILLATOR_Initialize 0005                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 08A2                     _EUSART1_DefaultErrorHandler 089C  
                                    sprintf@idx 0023                                      sprintf@val 0028  
                                      __ptext10 0878                                        __ptext11 0882  
                                      __ptext20 07D6                                        __ptext12 088C  
                                      __ptext21 0000                                        __ptext13 06F0  
                                      __ptext14 0846                                        __ptext16 0508  
                                      __ptext17 0896                                        __ptext18 08A6  
                                      __ptext19 089C  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      isa$xinst 000000                                        int$flags 0050  
            __end_of_INTERRUPT_InterruptManager 0072                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 0048                             _EUSART1_Receive_ISR 0508  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0005  
                                      intlevel2 0000                                       sprintf@ap 0026  
                                     sprintf@sp 001B                            ?_EUSART1_Receive_ISR 0001  
                              ___lldiv@dividend 0005                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 0882                  _EUSART1_SetOverrunErrorHandler 0878  
                                    _RCSTA1bits 000FAB  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                            _eusart1RxLastError 004C                                        sprintf@c 002D  
                                      sprintf@f 001D                                ___lldiv@quotient 000D  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 07D6  
                       ??_EUSART1_RxDataHandler 0001  
