

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 03 05:19:52 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Generated 22/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F25K50 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    82  0000                     
    83 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    84  0000                     
    85 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    86  0000                     
    87                           	psect	smallconst
    88  000800                     __psmallconst:
    89                           	callstack 0
    90  000800  00                 	db	0
    91  000801                     _dpowers:
    92                           	callstack 0
    93  000801  0001               	dw	1
    94  000803  000A               	dw	10
    95  000805  0064               	dw	100
    96  000807  03E8               	dw	1000
    97  000809  2710               	dw	10000
    98  00080B                     __end_of_dpowers:
    99                           	callstack 0
   100  0000                     _TXREG1	set	4013
   101  0000                     _RCREG1	set	4014
   102  0000                     _SPBRG1	set	4015
   103  0000                     _TXSTA1	set	4012
   104  0000                     _RCREG	set	4014
   105  0000                     _RCSTA1bits	set	4011
   106  0000                     _TXSTA1bits	set	4012
   107  0000                     _RCIE	set	31981
   108  0000                     _CREN	set	32092
   109  0000                     _GIE	set	32663
   110  0000                     _LATB7	set	31831
   111  0000                     _LATB0	set	31824
   112  0000                     _LATA5	set	31821
   113  0000                     _RCIF	set	31989
   114  0000                     _PLLRDY	set	32407
   115  0000                     _ANSELA	set	3931
   116  0000                     _ANSELB	set	3932
   117  0000                     _ANSELC	set	3933
   118  0000                     _LATA	set	3977
   119  0000                     _OSCTUNE	set	3995
   120  0000                     _PIR1bits	set	3998
   121  0000                     _RCSTA1	set	4011
   122  0000                     _BAUDCON1	set	4024
   123  0000                     _OSCCON2	set	4050
   124  0000                     _OSCCON	set	4051
   125  0000                     _ACTCON	set	4021
   126  0000                     _SPBRGH1	set	4016
   127  0000                     _INTCON2bits	set	4081
   128  0000                     _PIE1bits	set	3997
   129  0000                     _TRISA	set	3986
   130  0000                     _LATC	set	3979
   131  0000                     _LATB	set	3978
   132  0000                     _TRISC	set	3988
   133  0000                     _TRISB	set	3987
   134  0000                     _WPUB	set	3973
   135  0000                     _INTCONbits	set	4082
   136  00080B                     STR_7:
   137  00080B  41                 	db	65	;'A'
   138  00080C  54                 	db	84	;'T'
   139  00080D  2B                 	db	43
   140  00080E  43                 	db	67	;'C'
   141  00080F  57                 	db	87	;'W'
   142  000810  4A                 	db	74	;'J'
   143  000811  41                 	db	65	;'A'
   144  000812  50                 	db	80	;'P'
   145  000813  3D                 	db	61	;'='
   146  000814  22                 	db	34
   147  000815  54                 	db	84	;'T'
   148  000816  49                 	db	73	;'I'
   149  000817  47                 	db	71	;'G'
   150  000818  4F                 	db	79	;'O'
   151  000819  2D                 	db	45
   152  00081A  34                 	db	52	;'4'
   153  00081B  45                 	db	69	;'E'
   154  00081C  41                 	db	65	;'A'
   155  00081D  30                 	db	48	;'0'
   156  00081E  22                 	db	34
   157  00081F  2C                 	db	44
   158  000820  22                 	db	34
   159  000821  32                 	db	50	;'2'
   160  000822  4E                 	db	78	;'N'
   161  000823  42                 	db	66	;'B'
   162  000824  31                 	db	49	;'1'
   163  000825  31                 	db	49	;'1'
   164  000826  32                 	db	50	;'2'
   165  000827  31                 	db	49	;'1'
   166  000828  30                 	db	48	;'0'
   167  000829  30                 	db	48	;'0'
   168  00082A  34                 	db	52	;'4'
   169  00082B  34                 	db	52	;'4'
   170  00082C  38                 	db	56	;'8'
   171  00082D  22                 	db	34
   172  00082E  00                 	db	0
   173  00082F                     STR_23:
   174  00082F  41                 	db	65	;'A'
   175  000830  54                 	db	84	;'T'
   176  000831  2B                 	db	43
   177  000832  43                 	db	67	;'C'
   178  000833  49                 	db	73	;'I'
   179  000834  50                 	db	80	;'P'
   180  000835  53                 	db	83	;'S'
   181  000836  54                 	db	84	;'T'
   182  000837  41                 	db	65	;'A'
   183  000838  52                 	db	82	;'R'
   184  000839  54                 	db	84	;'T'
   185  00083A  3D                 	db	61	;'='
   186  00083B  34                 	db	52	;'4'
   187  00083C  2C                 	db	44
   188  00083D  22                 	db	34
   189  00083E  54                 	db	84	;'T'
   190  00083F  43                 	db	67	;'C'
   191  000840  50                 	db	80	;'P'
   192  000841  22                 	db	34
   193  000842  2C                 	db	44
   194  000843  22                 	db	34
   195  000844  25                 	db	37
   196  000845  73                 	db	115	;'s'
   197  000846  22                 	db	34
   198  000847  2C                 	db	44
   199  000848  35                 	db	53	;'5'
   200  000849  30                 	db	48	;'0'
   201  00084A  32                 	db	50	;'2'
   202  00084B  00                 	db	0
   203  00084C                     STR_21:
   204  00084C  41                 	db	65	;'A'
   205  00084D  54                 	db	84	;'T'
   206  00084E  2B                 	db	43
   207  00084F  43                 	db	67	;'C'
   208  000850  49                 	db	73	;'I'
   209  000851  50                 	db	80	;'P'
   210  000852  53                 	db	83	;'S'
   211  000853  45                 	db	69	;'E'
   212  000854  4E                 	db	78	;'N'
   213  000855  44                 	db	68	;'D'
   214  000856  3D                 	db	61	;'='
   215  000857  34                 	db	52	;'4'
   216  000858  2C                 	db	44
   217  000859  25                 	db	37
   218  00085A  64                 	db	100	;'d'
   219  00085B  0D                 	db	13
   220  00085C  0A                 	db	10
   221  00085D  00                 	db	0
   222  00085E                     STR_24:
   223  00085E  41                 	db	65	;'A'
   224  00085F  54                 	db	84	;'T'
   225  000860  2B                 	db	43
   226  000861  43                 	db	67	;'C'
   227  000862  49                 	db	73	;'I'
   228  000863  50                 	db	80	;'P'
   229  000864  4D                 	db	77	;'M'
   230  000865  55                 	db	85	;'U'
   231  000866  58                 	db	88	;'X'
   232  000867  3D                 	db	61	;'='
   233  000868  31                 	db	49	;'1'
   234  000869  0D                 	db	13
   235  00086A  0A                 	db	10
   236  00086B  00                 	db	0
   237  00086C                     STR_16:
   238  00086C  31                 	db	49	;'1'
   239  00086D  39                 	db	57	;'9'
   240  00086E  32                 	db	50	;'2'
   241  00086F  2E                 	db	46
   242  000870  31                 	db	49	;'1'
   243  000871  36                 	db	54	;'6'
   244  000872  38                 	db	56	;'8'
   245  000873  2E                 	db	46
   246  000874  31                 	db	49	;'1'
   247  000875  2E                 	db	46
   248  000876  31                 	db	49	;'1'
   249  000877  34                 	db	52	;'4'
   250  000878  00                 	db	0
   251  000879  41                 	db	65	;'A'
   252  00087A  54                 	db	84	;'T'
   253  00087B  2B                 	db	43
   254  00087C  43                 	db	67	;'C'
   255  00087D  49                 	db	73	;'I'
   256  00087E  50                 	db	80	;'P'
   257  00087F  53                 	db	83	;'S'
   258  000880  45                 	db	69	;'E'
   259  000881  4E                 	db	78	;'N'
   260  000882  44                 	db	68	;'D'
   261  000883  3D                 	db	61	;'='
   262  000884  00                 	db	0
   263  000885                     STR_4:
   264  000885  41                 	db	65	;'A'
   265  000886  54                 	db	84	;'T'
   266  000887  2B                 	db	43
   267  000888  43                 	db	67	;'C'
   268  000889  57                 	db	87	;'W'
   269  00088A  4D                 	db	77	;'M'
   270  00088B  4F                 	db	79	;'O'
   271  00088C  44                 	db	68	;'D'
   272  00088D  45                 	db	69	;'E'
   273  00088E  3D                 	db	61	;'='
   274  00088F  31                 	db	49	;'1'
   275  000890  00                 	db	0
   276  000891                     STR_10:
   277  000891  41                 	db	65	;'A'
   278  000892  54                 	db	84	;'T'
   279  000893  2B                 	db	43
   280  000894  43                 	db	67	;'C'
   281  000895  49                 	db	73	;'I'
   282  000896  50                 	db	80	;'P'
   283  000897  4D                 	db	77	;'M'
   284  000898  55                 	db	85	;'U'
   285  000899  58                 	db	88	;'X'
   286  00089A  3D                 	db	61	;'='
   287  00089B  31                 	db	49	;'1'
   288  00089C  00                 	db	0
   289  00089D                     STR_6:
   290  00089D  6E                 	db	110	;'n'
   291  00089E  6F                 	db	111	;'o'
   292  00089F  20                 	db	32
   293  0008A0  63                 	db	99	;'c'
   294  0008A1  68                 	db	104	;'h'
   295  0008A2  61                 	db	97	;'a'
   296  0008A3  6E                 	db	110	;'n'
   297  0008A4  67                 	db	103	;'g'
   298  0008A5  65                 	db	101	;'e'
   299  0008A6  00                 	db	0
   300  0008A7                     STR_13:
   301  0008A7  41                 	db	65	;'A'
   302  0008A8  54                 	db	84	;'T'
   303  0008A9  2B                 	db	43
   304  0008AA  43                 	db	67	;'C'
   305  0008AB  49                 	db	73	;'I'
   306  0008AC  46                 	db	70	;'F'
   307  0008AD  53                 	db	83	;'S'
   308  0008AE  52                 	db	82	;'R'
   309  0008AF  00                 	db	0
   310  0008B0                     STR_28:
   311  0008B0  43                 	db	67	;'C'
   312  0008B1  4F                 	db	79	;'O'
   313  0008B2  4E                 	db	78	;'N'
   314  0008B3  4E                 	db	78	;'N'
   315  0008B4  45                 	db	69	;'E'
   316  0008B5  43                 	db	67	;'C'
   317  0008B6  54                 	db	84	;'T'
   318  0008B7  00                 	db	0
   319  0008B8                     STR_34:
   320  0008B8  28                 	db	40
   321  0008B9  6E                 	db	110	;'n'
   322  0008BA  75                 	db	117	;'u'
   323  0008BB  6C                 	db	108	;'l'
   324  0008BC  6C                 	db	108	;'l'
   325  0008BD  29                 	db	41
   326  0008BE  00                 	db	0
   327  0008BF                     STR_33:
   328  0008BF  4C                 	db	76	;'L'
   329  0008C0  69                 	db	105	;'i'
   330  0008C1  6E                 	db	110	;'n'
   331  0008C2  6B                 	db	107	;'k'
   332  0008C3  65                 	db	101	;'e'
   333  0008C4  64                 	db	100	;'d'
   334  0008C5  00                 	db	0
   335  0008C6                     STR_3:
   336  0008C6  45                 	db	69	;'E'
   337  0008C7  52                 	db	82	;'R'
   338  0008C8  52                 	db	82	;'R'
   339  0008C9  4F                 	db	79	;'O'
   340  0008CA  52                 	db	82	;'R'
   341  0008CB  00                 	db	0
   342  0008CC                     STR_1:
   343  0008CC  41                 	db	65	;'A'
   344  0008CD  54                 	db	84	;'T'
   345  0008CE  45                 	db	69	;'E'
   346  0008CF  30                 	db	48	;'0'
   347  0008D0  00                 	db	0
   348  0008D1  25                 	db	37
   349  0008D2  31                 	db	49	;'1'
   350  0008D3  75                 	db	117	;'u'
   351  0008D4  00                 	db	0
   352  0008D5                     STR_2:
   353  0008D5  4F                 	db	79	;'O'
   354  0008D6  4B                 	db	75	;'K'
   355  0008D7  00                 	db	0
   356  0008D8  00                 	db	0	; dummy byte at the end
   357  0000                     
   358                           ; #config settings
   359                           
   360                           	psect	cinit
   361  00180C                     __pcinit:
   362                           	callstack 0
   363  00180C                     start_initialization:
   364                           	callstack 0
   365  00180C                     __initialization:
   366                           	callstack 0
   367                           
   368                           ; Clear objects allocated to BANK0 (144 bytes)
   369  00180C  EE00  F060         	lfsr	0,__pbssBANK0
   370  001810  0E90               	movlw	144
   371  001812                     clear_0:
   372  001812  6AEE               	clrf	postinc0,c
   373  001814  06E8               	decf	wreg,f,c
   374  001816  E1FD               	bnz	clear_0
   375                           
   376                           ; Clear objects allocated to COMRAM (40 bytes)
   377  001818  EE00  F032         	lfsr	0,__pbssCOMRAM
   378  00181C  0E28               	movlw	40
   379  00181E                     clear_1:
   380  00181E  6AEE               	clrf	postinc0,c
   381  001820  06E8               	decf	wreg,f,c
   382  001822  E1FD               	bnz	clear_1
   383  001824                     end_of_initialization:
   384                           	callstack 0
   385  001824                     __end_of__initialization:
   386                           	callstack 0
   387  001824  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   388  001826  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   389  001828  0E00               	movlw	low (__Lmediumconst shr (0+16))
   390  00182A  6EF8               	movwf	tblptru,c
   391  00182C  0100               	movlb	0
   392  00182E  EF2D  F008         	goto	_main	;jump to C main() function
   393                           
   394                           	psect	bssCOMRAM
   395  000032                     __pbssCOMRAM:
   396                           	callstack 0
   397  000032                     _val2:
   398                           	callstack 0
   399  000032                     	ds	4
   400  000036                     _val1:
   401                           	callstack 0
   402  000036                     	ds	4
   403  00003A                     _rec_son:
   404                           	callstack 0
   405  00003A                     	ds	2
   406  00003C                     _buff_punte:
   407                           	callstack 0
   408  00003C                     	ds	2
   409  00003E                     _rec_punte:
   410                           	callstack 0
   411  00003E                     	ds	2
   412  000040                     _led2:
   413                           	callstack 0
   414  000040                     	ds	2
   415  000042                     _led1:
   416                           	callstack 0
   417  000042                     	ds	2
   418  000044                     _tamano:
   419                           	callstack 0
   420  000044                     	ds	2
   421  000046                     _lectu2:
   422                           	callstack 0
   423  000046                     	ds	2
   424  000048                     _lectu1:
   425                           	callstack 0
   426  000048                     	ds	2
   427  00004A                     _codigo:
   428                           	callstack 0
   429  00004A                     	ds	2
   430  00004C                     _digital_out:
   431                           	callstack 0
   432  00004C                     	ds	2
   433  00004E                     _EUSART1_ErrorHandler:
   434                           	callstack 0
   435  00004E                     	ds	2
   436  000050                     _EUSART1_OverrunErrorHandler:
   437                           	callstack 0
   438  000050                     	ds	2
   439  000052                     _EUSART1_FramingErrorHandler:
   440                           	callstack 0
   441  000052                     	ds	2
   442  000054                     _flag_modbus:
   443                           	callstack 0
   444  000054                     	ds	1
   445  000055                     _rec_socket:
   446                           	callstack 0
   447  000055                     	ds	1
   448  000056                     _dato_rx:
   449                           	callstack 0
   450  000056                     	ds	1
   451  000057                     _trama_cont:
   452                           	callstack 0
   453  000057                     	ds	1
   454  000058                     _estado_rec:
   455                           	callstack 0
   456  000058                     	ds	1
   457  000059                     _eusart1RxLastError:
   458                           	callstack 0
   459  000059                     	ds	1
   460                           
   461                           	psect	bssBANK0
   462  000060                     __pbssBANK0:
   463                           	callstack 0
   464  000060                     _buff_tx:
   465                           	callstack 0
   466  000060                     	ds	10
   467  00006A                     _rec_largo:
   468                           	callstack 0
   469  00006A                     	ds	4
   470  00006E                     _modbus_tx:
   471                           	callstack 0
   472  00006E                     	ds	50
   473  0000A0                     _modbus_rx:
   474                           	callstack 0
   475  0000A0                     	ds	50
   476  0000D2                     _captu1:
   477                           	callstack 0
   478  0000D2                     	ds	30
   479                           
   480                           	psect	cstackBANK0
   481  0000F0                     __pcstackBANK0:
   482                           	callstack 0
   483  0000F0                     modbus_write_holding@dir_mod:
   484                           	callstack 0
   485  0000F0                     modbus_write_coilsdigital@dir_mod:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x0
   489  0000F0                     	ds	2
   490  0000F2                     modbus_write_holding@dat_mod:
   491                           	callstack 0
   492  0000F2                     modbus_write_coilsdigital@dat_dig:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496  0000F2                     	ds	2
   497                           
   498                           	psect	cstackCOMRAM
   499  000001                     __pcstackCOMRAM:
   500                           	callstack 0
   501  000001                     ??_esp82666_interrupcion_1:
   502  000001                     
   503                           ; 1 bytes @ 0x0
   504  000001                     	ds	2
   505  000003                     ??_INTERRUPT_InterruptManager:
   506                           
   507                           ; 1 bytes @ 0x2
   508  000003                     	ds	2
   509  000005                     ??_isdigit:
   510  000005                     ?_strlen:
   511                           	callstack 0
   512  000005                     ?_strchr:
   513                           	callstack 0
   514  000005                     ?___wmul:
   515                           	callstack 0
   516  000005                     ?___lwdiv:
   517                           	callstack 0
   518  000005                     EUSART1_Write@txData:
   519                           	callstack 0
   520  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   521                           	callstack 0
   522  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   523                           	callstack 0
   524  000005                     EUSART1_SetErrorHandler@interruptHandler:
   525                           	callstack 0
   526  000005                     ___wmul@multiplier:
   527                           	callstack 0
   528  000005                     ___lwdiv@dividend:
   529                           	callstack 0
   530  000005                     memset@p1:
   531                           	callstack 0
   532  000005                     strlen@s:
   533                           	callstack 0
   534  000005                     strchr@ptr:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x4
   538  000005                     	ds	1
   539  000006                     _isdigit$1296:
   540                           	callstack 0
   541  000006                     EUSART1_Write_string@data:
   542                           	callstack 0
   543  000006                     Uart1_write_text_const@info:
   544                           	callstack 0
   545                           
   546                           ; 3 bytes @ 0x5
   547  000006                     	ds	1
   548  000007                     isdigit@c:
   549                           	callstack 0
   550  000007                     ___wmul@multiplicand:
   551                           	callstack 0
   552  000007                     ___lwdiv@divisor:
   553                           	callstack 0
   554  000007                     memset@c:
   555                           	callstack 0
   556  000007                     strlen@cp:
   557                           	callstack 0
   558  000007                     strchr@chr:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x6
   562  000007                     	ds	1
   563  000008                     
   564                           ; 1 bytes @ 0x7
   565  000008                     	ds	1
   566  000009                     ?_strncmp:
   567                           	callstack 0
   568  000009                     ___wmul@product:
   569                           	callstack 0
   570  000009                     ___lwdiv@quotient:
   571                           	callstack 0
   572  000009                     memset@n:
   573                           	callstack 0
   574  000009                     strncmp@s1:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x8
   578  000009                     	ds	2
   579  00000B                     ___lwdiv@counter:
   580                           	callstack 0
   581  00000B                     memset@p:
   582                           	callstack 0
   583  00000B                     strncmp@s2:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xA
   587  00000B                     	ds	1
   588  00000C                     ?___lwmod:
   589                           	callstack 0
   590  00000C                     ___lwmod@dividend:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0xB
   594  00000C                     	ds	1
   595  00000D                     strncmp@len:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0xC
   599  00000D                     	ds	1
   600  00000E                     ___lwmod@divisor:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0xD
   604  00000E                     	ds	1
   605  00000F                     ??_strncmp:
   606                           
   607                           ; 1 bytes @ 0xE
   608  00000F                     	ds	1
   609  000010                     ?_strstr:
   610                           	callstack 0
   611  000010                     ___lwmod@counter:
   612                           	callstack 0
   613  000010                     strstr@s1:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0xF
   617  000010                     	ds	1
   618  000011                     ?_sprintf:
   619                           	callstack 0
   620  000011                     sprintf@sp:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x10
   624  000011                     	ds	1
   625  000012                     strstr@s2:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x11
   629  000012                     	ds	1
   630  000013                     sprintf@f:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x12
   634  000013                     	ds	1
   635  000014                     tiempo@milis:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x13
   639  000014                     	ds	2
   640  000016                     tiempo@cap:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x15
   644  000016                     	ds	1
   645  000017                     ??_sprintf:
   646                           
   647                           ; 1 bytes @ 0x16
   648  000017                     	ds	1
   649  000018                     tiempo@cap1:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x17
   653  000018                     	ds	2
   654  00001A                     ??_tiempo:
   655                           
   656                           ; 1 bytes @ 0x19
   657  00001A                     	ds	1
   658  00001B                     sprintf@prec:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x1A
   662  00001B                     	ds	1
   663  00001C                     tiempo@cont1:
   664                           	callstack 0
   665  00001C                     sprintf@cp:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x1B
   669  00001C                     	ds	2
   670  00001E                     manda_AT_COMANDO@coman:
   671                           	callstack 0
   672  00001E                     sprintf@ap:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x1D
   676  00001E                     	ds	2
   677  000020                     sprintf@flag:
   678                           	callstack 0
   679  000020                     manda_AT_COMANDO@cap:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x1F
   683  000020                     	ds	1
   684  000021                     sprintf@len:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x20
   688  000021                     	ds	1
   689  000022                     manda_AT_COMANDO@cap1:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x21
   693  000022                     	ds	1
   694  000023                     sprintf@val:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x22
   698  000023                     	ds	1
   699  000024                     manda_AT_COMANDO@retardo:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x23
   703  000024                     	ds	1
   704  000025                     sprintf@width:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x24
   708  000025                     	ds	1
   709  000026                     
   710                           ; 1 bytes @ 0x25
   711  000026                     	ds	1
   712  000027                     sprintf@c:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x26
   716  000027                     	ds	1
   717  000028                     manda_esp8266_bytes@info2:
   718                           	callstack 0
   719  000028                     conecta@ip_dir:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x27
   723  000028                     	ds	2
   724  00002A                     ??_conecta:
   725  00002A                     manda_esp8266_bytes@largo:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x29
   729  00002A                     	ds	2
   730  00002C                     ??_manda_esp8266_bytes:
   731  00002C                     conecta@tempo:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x2B
   735  00002C                     	ds	2
   736  00002E                     manda_esp8266_bytes@byte:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x2D
   740  00002E                     	ds	1
   741  00002F                     manda_esp8266_bytes@cuenta:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x2E
   745  00002F                     	ds	1
   746  000030                     ??_main:
   747                           
   748                           ; 1 bytes @ 0x2F
   749  000030                     	ds	2
   750                           
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   753 ;;
   754 ;; *************** function _main *****************
   755 ;; Defined at:
   756 ;;		line 137 in file "main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         0       0       0       0       0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0       0       0       0       0
   772 ;;      Temps:          2       0       0       0       0       0       0       0       0
   773 ;;      Totals:         2       0       0       0       0       0       0       0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels required when called: 7
   776 ;; This function calls:
   777 ;;		_SYSTEM_Initialize
   778 ;;		_conecta
   779 ;;		_manda_AT_COMANDO
   780 ;;		_modbus_write_coilsdigital
   781 ;;		_modbus_write_holding
   782 ;; This function is called by:
   783 ;;		Startup code after reset
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text0
   788  00105A                     __ptext0:
   789                           	callstack 0
   790  00105A                     _main:
   791                           	callstack 24
   792  00105A                     
   793                           ;main.c: 140: SYSTEM_Initialize();
   794  00105A  EC47  F00C         	call	_SYSTEM_Initialize	;wreg free
   795  00105E                     
   796                           ;main.c: 151: LATA5 = 1;
   797  00105E  8A89               	bsf	3977,5,c	;volatile
   798  001060                     
   799                           ;main.c: 152: LATA5 = 0;
   800  001060  9A89               	bcf	3977,5,c	;volatile
   801  001062                     
   802                           ;main.c: 153: LATB0 = 0;
   803  001062  908A               	bcf	3978,0,c	;volatile
   804  001064                     
   805                           ;main.c: 154: LATB7 = 0;
   806  001064  9E8A               	bcf	3978,7,c	;volatile
   807  001066                     
   808                           ;main.c: 181: PIR1bits.RC1IF = 0;
   809  001066  9A9E               	bcf	158,5,c	;volatile
   810  001068                     
   811                           ;main.c: 182: PIE1bits.RC1IE = 1;
   812  001068  8A9D               	bsf	157,5,c	;volatile
   813  00106A                     
   814                           ;main.c: 183: GIE = 1;
   815  00106A  8EF2               	bsf	4082,7,c	;volatile
   816  00106C                     
   817                           ;main.c: 188: manda_AT_COMANDO("ATE0","OK", "ERROR", 500);
   818  00106C  0ECC               	movlw	low STR_1
   819  00106E  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
   820  001070  0E08               	movlw	high STR_1
   821  001072  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
   822  001074  0ED5               	movlw	low STR_2
   823  001076  6E20               	movwf	manda_AT_COMANDO@cap^0,c
   824  001078  0E08               	movlw	high STR_2
   825  00107A  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
   826  00107C  0EC6               	movlw	low STR_3
   827  00107E  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
   828  001080  0E08               	movlw	high STR_3
   829  001082  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
   830  001084  0E01               	movlw	1
   831  001086  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
   832  001088  0EF4               	movlw	244
   833  00108A  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
   834  00108C  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
   835  001090                     
   836                           ;main.c: 189: manda_AT_COMANDO("AT+CWMODE=1","OK", "no change", 1000);
   837  001090  0E85               	movlw	low STR_4
   838  001092  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
   839  001094  0E08               	movlw	high STR_4
   840  001096  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
   841  001098  0ED5               	movlw	low STR_2
   842  00109A  6E20               	movwf	manda_AT_COMANDO@cap^0,c
   843  00109C  0E08               	movlw	high STR_2
   844  00109E  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
   845  0010A0  0E9D               	movlw	low STR_6
   846  0010A2  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
   847  0010A4  0E08               	movlw	high STR_6
   848  0010A6  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
   849  0010A8  0E03               	movlw	3
   850  0010AA  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
   851  0010AC  0EE8               	movlw	232
   852  0010AE  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
   853  0010B0  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
   854  0010B4                     
   855                           ;main.c: 191: manda_AT_COMANDO("AT+CWJAP=\"TIGO-4EA0\",\"2NB112100448\"","OK","OK",10000
      +                          );
   856  0010B4  0E0B               	movlw	low STR_7
   857  0010B6  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
   858  0010B8  0E08               	movlw	high STR_7
   859  0010BA  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
   860  0010BC  0ED5               	movlw	low STR_2
   861  0010BE  6E20               	movwf	manda_AT_COMANDO@cap^0,c
   862  0010C0  0E08               	movlw	high STR_2
   863  0010C2  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
   864  0010C4  0ED5               	movlw	low STR_2
   865  0010C6  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
   866  0010C8  0E08               	movlw	high STR_2
   867  0010CA  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
   868  0010CC  0E27               	movlw	39
   869  0010CE  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
   870  0010D0  0E10               	movlw	16
   871  0010D2  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
   872  0010D4  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
   873  0010D8                     
   874                           ;main.c: 193: manda_AT_COMANDO("AT+CIPMUX=1","OK","OK",3000);
   875  0010D8  0E91               	movlw	low STR_10
   876  0010DA  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
   877  0010DC  0E08               	movlw	high STR_10
   878  0010DE  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
   879  0010E0  0ED5               	movlw	low STR_2
   880  0010E2  6E20               	movwf	manda_AT_COMANDO@cap^0,c
   881  0010E4  0E08               	movlw	high STR_2
   882  0010E6  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
   883  0010E8  0ED5               	movlw	low STR_2
   884  0010EA  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
   885  0010EC  0E08               	movlw	high STR_2
   886  0010EE  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
   887  0010F0  0E0B               	movlw	11
   888  0010F2  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
   889  0010F4  0EB8               	movlw	184
   890  0010F6  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
   891  0010F8  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
   892  0010FC                     
   893                           ;main.c: 194: manda_AT_COMANDO("AT+CIFSR","OK","OK",5000);
   894  0010FC  0EA7               	movlw	low STR_13
   895  0010FE  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
   896  001100  0E08               	movlw	high STR_13
   897  001102  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
   898  001104  0ED5               	movlw	low STR_2
   899  001106  6E20               	movwf	manda_AT_COMANDO@cap^0,c
   900  001108  0E08               	movlw	high STR_2
   901  00110A  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
   902  00110C  0ED5               	movlw	low STR_2
   903  00110E  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
   904  001110  0E08               	movlw	high STR_2
   905  001112  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
   906  001114  0E13               	movlw	19
   907  001116  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
   908  001118  0E88               	movlw	136
   909  00111A  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
   910  00111C  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
   911  001120                     
   912                           ;main.c: 195: _delay((unsigned long)((2000)*(48000000/4000.0)));
   913  001120  0E7A               	movlw	122
   914  001122  6E31               	movwf	(??_main+1)^0,c
   915  001124  0EC1               	movlw	193
   916  001126  6E30               	movwf	??_main^0,c
   917  001128  0E82               	movlw	130
   918  00112A                     u1427:
   919  00112A  2EE8               	decfsz	wreg,f,c
   920  00112C  D7FE               	bra	u1427
   921  00112E  2E30               	decfsz	??_main^0,f,c
   922  001130  D7FC               	bra	u1427
   923  001132  2E31               	decfsz	(??_main+1)^0,f,c
   924  001134  D7FA               	bra	u1427
   925  001136                     
   926                           ;main.c: 197: conecta("192.168.1.14");
   927  001136  0E6C               	movlw	low STR_16
   928  001138  6E28               	movwf	conecta@ip_dir^0,c
   929  00113A  0E08               	movlw	high STR_16
   930  00113C  6E29               	movwf	(conecta@ip_dir+1)^0,c
   931  00113E  EC86  F007         	call	_conecta	;wreg free
   932  001142                     l2636:
   933                           
   934                           ;main.c: 201: {;main.c: 226: modbus_write_coilsdigital(0,digital_out);
   935  001142  0E00               	movlw	0
   936  001144  0100               	movlb	0	; () banked
   937  001146  6FF1               	movwf	(modbus_write_coilsdigital@dir_mod+1)& (0+255),b
   938  001148  0E00               	movlw	0
   939  00114A  6FF0               	movwf	modbus_write_coilsdigital@dir_mod& (0+255),b
   940  00114C  0E00               	movlw	0
   941  00114E  6FF3               	movwf	(modbus_write_coilsdigital@dat_dig+1)& (0+255),b
   942  001150  0E00               	movlw	0
   943  001152  6FF2               	movwf	modbus_write_coilsdigital@dat_dig& (0+255),b
   944  001154  ECC5  F00A         	call	_modbus_write_coilsdigital	;wreg free
   945  001158                     
   946                           ;main.c: 229: modbus_write_holding(0,100);
   947  001158  0E00               	movlw	0
   948  00115A  0100               	movlb	0	; () banked
   949  00115C  6FF1               	movwf	(modbus_write_holding@dir_mod+1)& (0+255),b
   950  00115E  0E00               	movlw	0
   951  001160  6FF0               	movwf	modbus_write_holding@dir_mod& (0+255),b
   952  001162  0E00               	movlw	0
   953  001164  6FF3               	movwf	(modbus_write_holding@dat_mod+1)& (0+255),b
   954  001166  0E64               	movlw	100
   955  001168  6FF2               	movwf	modbus_write_holding@dat_mod& (0+255),b
   956  00116A  EC16  F00B         	call	_modbus_write_holding	;wreg free
   957  00116E                     
   958                           ;main.c: 230: modbus_write_holding(1,50);
   959  00116E  0E00               	movlw	0
   960  001170  0100               	movlb	0	; () banked
   961  001172  6FF1               	movwf	(modbus_write_holding@dir_mod+1)& (0+255),b
   962  001174  0E01               	movlw	1
   963  001176  6FF0               	movwf	modbus_write_holding@dir_mod& (0+255),b
   964  001178  0E00               	movlw	0
   965  00117A  6FF3               	movwf	(modbus_write_holding@dat_mod+1)& (0+255),b
   966  00117C  0E32               	movlw	50
   967  00117E  6FF2               	movwf	modbus_write_holding@dat_mod& (0+255),b
   968  001180  EC16  F00B         	call	_modbus_write_holding	;wreg free
   969  001184  EFA1  F008         	goto	l2636
   970  001188  EF18  F000         	goto	start
   971  00118C                     __end_of_main:
   972                           	callstack 0
   973                           
   974 ;; *************** function _modbus_write_holding *****************
   975 ;; Defined at:
   976 ;;		line 19 in file "Librerias/Modbus_TCP.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  dir_mod         2    0[BANK0 ] unsigned int 
   979 ;;  dat_mod         2    2[BANK0 ] unsigned int 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   991 ;;      Params:         0       4       0       0       0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0
   994 ;;      Totals:         0       4       0       0       0       0       0       0       0
   995 ;;Total ram usage:        4 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 5
   998 ;; This function calls:
   999 ;;		_manda_esp8266_bytes
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text1
  1006  00162C                     __ptext1:
  1007                           	callstack 0
  1008  00162C                     _modbus_write_holding:
  1009                           	callstack 25
  1010  00162C                     
  1011                           ;Modbus_TCP.c: 21: PIE1bits.RC1IE = 0;
  1012  00162C  9A9D               	bcf	157,5,c	;volatile
  1013  00162E                     
  1014                           ;Modbus_TCP.c: 22: modbus_tx[0] = 0;
  1015  00162E  0E00               	movlw	0
  1016  001630  0100               	movlb	0	; () banked
  1017  001632  6F6E               	movwf	_modbus_tx& (0+255),b
  1018                           
  1019                           ;Modbus_TCP.c: 23: modbus_tx[1] = 0;
  1020  001634  0E00               	movlw	0
  1021  001636  6F6F               	movwf	(_modbus_tx+1)& (0+255),b
  1022                           
  1023                           ;Modbus_TCP.c: 24: modbus_tx[2] = 0;
  1024  001638  0E00               	movlw	0
  1025  00163A  6F70               	movwf	(_modbus_tx+2)& (0+255),b
  1026                           
  1027                           ;Modbus_TCP.c: 25: modbus_tx[3] = 00;
  1028  00163C  0E00               	movlw	0
  1029  00163E  6F71               	movwf	(_modbus_tx+3)& (0+255),b
  1030                           
  1031                           ;Modbus_TCP.c: 26: modbus_tx[4] = 00;;
  1032  001640  0E00               	movlw	0
  1033  001642  6F72               	movwf	(_modbus_tx+4)& (0+255),b
  1034                           
  1035                           ;Modbus_TCP.c: 28: modbus_tx[5] = 6;
  1036  001644  0E06               	movlw	6
  1037  001646  6F73               	movwf	(_modbus_tx+5)& (0+255),b
  1038                           
  1039                           ;Modbus_TCP.c: 29: modbus_tx[6] = 1;
  1040  001648  0E01               	movlw	1
  1041  00164A  6F74               	movwf	(_modbus_tx+6)& (0+255),b
  1042                           
  1043                           ;Modbus_TCP.c: 30: modbus_tx[7] = 6;
  1044  00164C  0E06               	movlw	6
  1045  00164E  6F75               	movwf	(_modbus_tx+7)& (0+255),b
  1046  001650                     
  1047                           ; BSR set to: 0
  1048                           ;Modbus_TCP.c: 32: modbus_tx[8] = ((char *)&dir_mod)[1];
  1049  001650  C0F1  F076         	movff	modbus_write_holding@dir_mod+1,_modbus_tx+8
  1050  001654                     
  1051                           ; BSR set to: 0
  1052                           ;Modbus_TCP.c: 33: modbus_tx[9] = ((char *)&dir_mod)[0];
  1053  001654  C0F0  F077         	movff	modbus_write_holding@dir_mod,_modbus_tx+9
  1054  001658                     
  1055                           ; BSR set to: 0
  1056                           ;Modbus_TCP.c: 35: modbus_tx[10] = ((char *)&dat_mod)[1];
  1057  001658  C0F3  F078         	movff	modbus_write_holding@dat_mod+1,_modbus_tx+10
  1058  00165C                     
  1059                           ; BSR set to: 0
  1060                           ;Modbus_TCP.c: 36: modbus_tx[11] = ((char *)&dat_mod)[0];
  1061  00165C  C0F2  F079         	movff	modbus_write_holding@dat_mod,_modbus_tx+11
  1062  001660                     
  1063                           ; BSR set to: 0
  1064                           ;Modbus_TCP.c: 38: manda_esp8266_bytes(modbus_tx,12);
  1065  001660  0E6E               	movlw	low _modbus_tx
  1066  001662  6E28               	movwf	manda_esp8266_bytes@info2^0,c
  1067  001664  0E00               	movlw	high _modbus_tx
  1068  001666  6E29               	movwf	(manda_esp8266_bytes@info2+1)^0,c
  1069  001668  0E00               	movlw	0
  1070  00166A  6E2B               	movwf	(manda_esp8266_bytes@largo+1)^0,c
  1071  00166C  0E0C               	movlw	12
  1072  00166E  6E2A               	movwf	manda_esp8266_bytes@largo^0,c
  1073  001670  ECE1  F009         	call	_manda_esp8266_bytes	;wreg free
  1074  001674  0012               	return		;funcret
  1075  001676                     __end_of_modbus_write_holding:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _modbus_write_coilsdigital *****************
  1079 ;; Defined at:
  1080 ;;		line 74 in file "Librerias/Modbus_TCP.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  dir_mod         2    0[BANK0 ] unsigned int 
  1083 ;;  dat_dig         2    2[BANK0 ] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1095 ;;      Params:         0       4       0       0       0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1098 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1099 ;;Total ram usage:        4 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 5
  1102 ;; This function calls:
  1103 ;;		_manda_esp8266_bytes
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text2
  1110  00158A                     __ptext2:
  1111                           	callstack 0
  1112  00158A                     _modbus_write_coilsdigital:
  1113                           	callstack 25
  1114  00158A                     
  1115                           ;Modbus_TCP.c: 76: PIE1bits.RC1IE = 0;
  1116  00158A  9A9D               	bcf	157,5,c	;volatile
  1117  00158C                     
  1118                           ;Modbus_TCP.c: 77: modbus_tx[0] = 0;
  1119  00158C  0E00               	movlw	0
  1120  00158E  0100               	movlb	0	; () banked
  1121  001590  6F6E               	movwf	_modbus_tx& (0+255),b
  1122                           
  1123                           ;Modbus_TCP.c: 78: modbus_tx[1] = 0;
  1124  001592  0E00               	movlw	0
  1125  001594  6F6F               	movwf	(_modbus_tx+1)& (0+255),b
  1126                           
  1127                           ;Modbus_TCP.c: 79: modbus_tx[2] = 0;
  1128  001596  0E00               	movlw	0
  1129  001598  6F70               	movwf	(_modbus_tx+2)& (0+255),b
  1130                           
  1131                           ;Modbus_TCP.c: 80: modbus_tx[3] = 00;
  1132  00159A  0E00               	movlw	0
  1133  00159C  6F71               	movwf	(_modbus_tx+3)& (0+255),b
  1134                           
  1135                           ;Modbus_TCP.c: 81: modbus_tx[4] = 00;;
  1136  00159E  0E00               	movlw	0
  1137  0015A0  6F72               	movwf	(_modbus_tx+4)& (0+255),b
  1138                           
  1139                           ;Modbus_TCP.c: 83: modbus_tx[5] = 9;
  1140  0015A2  0E09               	movlw	9
  1141  0015A4  6F73               	movwf	(_modbus_tx+5)& (0+255),b
  1142                           
  1143                           ;Modbus_TCP.c: 84: modbus_tx[6] = 1;
  1144  0015A6  0E01               	movlw	1
  1145  0015A8  6F74               	movwf	(_modbus_tx+6)& (0+255),b
  1146                           
  1147                           ;Modbus_TCP.c: 85: modbus_tx[7] = 0x0f;
  1148  0015AA  0E0F               	movlw	15
  1149  0015AC  6F75               	movwf	(_modbus_tx+7)& (0+255),b
  1150  0015AE                     
  1151                           ; BSR set to: 0
  1152                           ;Modbus_TCP.c: 87: modbus_tx[8] = ((char *)&dir_mod)[1];
  1153  0015AE  C0F1  F076         	movff	modbus_write_coilsdigital@dir_mod+1,_modbus_tx+8
  1154  0015B2                     
  1155                           ; BSR set to: 0
  1156                           ;Modbus_TCP.c: 88: modbus_tx[9] = ((char *)&dir_mod)[0];
  1157  0015B2  C0F0  F077         	movff	modbus_write_coilsdigital@dir_mod,_modbus_tx+9
  1158                           
  1159                           ;Modbus_TCP.c: 90: modbus_tx[10] = 00;
  1160  0015B6  0E00               	movlw	0
  1161  0015B8  6F78               	movwf	(_modbus_tx+10)& (0+255),b
  1162                           
  1163                           ;Modbus_TCP.c: 91: modbus_tx[11] = 0x0f;
  1164  0015BA  0E0F               	movlw	15
  1165  0015BC  6F79               	movwf	(_modbus_tx+11)& (0+255),b
  1166                           
  1167                           ;Modbus_TCP.c: 92: modbus_tx[12] = 02;
  1168  0015BE  0E02               	movlw	2
  1169  0015C0  6F7A               	movwf	(_modbus_tx+12)& (0+255),b
  1170  0015C2                     
  1171                           ; BSR set to: 0
  1172                           ;Modbus_TCP.c: 93: modbus_tx[13] = ((char *)&dat_dig)[0];
  1173  0015C2  C0F2  F07B         	movff	modbus_write_coilsdigital@dat_dig,_modbus_tx+13
  1174  0015C6                     
  1175                           ; BSR set to: 0
  1176                           ;Modbus_TCP.c: 94: modbus_tx[14] = ((char *)&dat_dig)[1];
  1177  0015C6  C0F3  F07C         	movff	modbus_write_coilsdigital@dat_dig+1,_modbus_tx+14
  1178  0015CA                     
  1179                           ; BSR set to: 0
  1180                           ;Modbus_TCP.c: 96: manda_esp8266_bytes(modbus_tx,15);
  1181  0015CA  0E6E               	movlw	low _modbus_tx
  1182  0015CC  6E28               	movwf	manda_esp8266_bytes@info2^0,c
  1183  0015CE  0E00               	movlw	high _modbus_tx
  1184  0015D0  6E29               	movwf	(manda_esp8266_bytes@info2+1)^0,c
  1185  0015D2  0E00               	movlw	0
  1186  0015D4  6E2B               	movwf	(manda_esp8266_bytes@largo+1)^0,c
  1187  0015D6  0E0F               	movlw	15
  1188  0015D8  6E2A               	movwf	manda_esp8266_bytes@largo^0,c
  1189  0015DA  ECE1  F009         	call	_manda_esp8266_bytes	;wreg free
  1190  0015DE  0012               	return		;funcret
  1191  0015E0                     __end_of_modbus_write_coilsdigital:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _manda_esp8266_bytes *****************
  1195 ;; Defined at:
  1196 ;;		line 282 in file "Librerias/esp8266.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  info2           2   39[COMRAM] PTR unsigned char 
  1199 ;;		 -> modbus_tx(50), 
  1200 ;;  largo           2   41[COMRAM] unsigned int 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  byte            1   45[COMRAM] unsigned char 
  1203 ;;  cuenta          1   46[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         4       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1215 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1217 ;;Total ram usage:        8 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 4
  1220 ;; This function calls:
  1221 ;;		_EUSART1_Write
  1222 ;;		_EUSART1_Write_string
  1223 ;;		_sprintf
  1224 ;; This function is called by:
  1225 ;;		_modbus_write_holding
  1226 ;;		_modbus_write_coilsdigital
  1227 ;;		_modbus_write_holding_varios
  1228 ;;		_modbus_read_analog
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233  0013C2                     __ptext3:
  1234                           	callstack 0
  1235  0013C2                     _manda_esp8266_bytes:
  1236                           	callstack 25
  1237  0013C2                     
  1238                           ;esp8266.c: 284: unsigned char cuenta;;esp8266.c: 286: sprintf(captu1,"AT+CIPSEND=4,%d\r
      +                          \n",largo);
  1239  0013C2  0ED2               	movlw	low _captu1
  1240  0013C4  6E11               	movwf	sprintf@sp^0,c
  1241  0013C6  0E00               	movlw	high _captu1
  1242  0013C8  6E12               	movwf	(sprintf@sp+1)^0,c
  1243  0013CA  0E4C               	movlw	low STR_21
  1244  0013CC  6E13               	movwf	sprintf@f^0,c
  1245  0013CE  0E08               	movlw	high STR_21
  1246  0013D0  6E14               	movwf	(sprintf@f+1)^0,c
  1247  0013D2  C02A  F015         	movff	manda_esp8266_bytes@largo,?_sprintf+4
  1248  0013D6  C02B  F016         	movff	manda_esp8266_bytes@largo+1,?_sprintf+5
  1249  0013DA  EC6D  F004         	call	_sprintf	;wreg free
  1250  0013DE                     
  1251                           ;esp8266.c: 287: EUSART1_Write_string(captu1);
  1252  0013DE  0ED2               	movlw	low _captu1
  1253  0013E0  6E06               	movwf	EUSART1_Write_string@data^0,c
  1254  0013E2  0E00               	movlw	high _captu1
  1255  0013E4  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
  1256  0013E6  EC96  F00A         	call	_EUSART1_Write_string	;wreg free
  1257  0013EA                     
  1258                           ;esp8266.c: 288: _delay((unsigned long)((50)*(48000000/4000.0)));
  1259  0013EA  0E04               	movlw	4
  1260  0013EC  6E2D               	movwf	(??_manda_esp8266_bytes+1)^0,c
  1261  0013EE  0E0C               	movlw	12
  1262  0013F0  6E2C               	movwf	??_manda_esp8266_bytes^0,c
  1263  0013F2  0E34               	movlw	52
  1264  0013F4                     u1437:
  1265  0013F4  2EE8               	decfsz	wreg,f,c
  1266  0013F6  D7FE               	bra	u1437
  1267  0013F8  2E2C               	decfsz	??_manda_esp8266_bytes^0,f,c
  1268  0013FA  D7FC               	bra	u1437
  1269  0013FC  2E2D               	decfsz	(??_manda_esp8266_bytes+1)^0,f,c
  1270  0013FE  D7FA               	bra	u1437
  1271  001400                     
  1272                           ;esp8266.c: 289: for (cuenta = 0; cuenta < largo; cuenta++)
  1273  001400  0E00               	movlw	0
  1274  001402  6E2F               	movwf	manda_esp8266_bytes@cuenta^0,c
  1275  001404  EF10  F00A         	goto	l2288
  1276  001408                     l2280:
  1277                           
  1278                           ;esp8266.c: 290: {;esp8266.c: 291: unsigned char byte = *info2++;
  1279  001408  C028  FFD9         	movff	manda_esp8266_bytes@info2,fsr2l
  1280  00140C  C029  FFDA         	movff	manda_esp8266_bytes@info2+1,fsr2h
  1281  001410  50DF               	movf	indf2,w,c
  1282  001412  6E2E               	movwf	manda_esp8266_bytes@byte^0,c
  1283  001414  4A28               	infsnz	manda_esp8266_bytes@info2^0,f,c
  1284  001416  2A29               	incf	(manda_esp8266_bytes@info2+1)^0,f,c
  1285  001418                     
  1286                           ;esp8266.c: 292: EUSART1_Write(byte);
  1287  001418  502E               	movf	manda_esp8266_bytes@byte^0,w,c
  1288  00141A  EC3C  F00C         	call	_EUSART1_Write
  1289  00141E  2A2F               	incf	manda_esp8266_bytes@cuenta^0,f,c
  1290  001420                     l2288:
  1291  001420  502F               	movf	manda_esp8266_bytes@cuenta^0,w,c
  1292  001422  6E2C               	movwf	??_manda_esp8266_bytes^0,c
  1293  001424  6A2D               	clrf	(??_manda_esp8266_bytes+1)^0,c
  1294  001426  502A               	movf	manda_esp8266_bytes@largo^0,w,c
  1295  001428  5C2C               	subwf	??_manda_esp8266_bytes^0,w,c
  1296  00142A  502B               	movf	(manda_esp8266_bytes@largo+1)^0,w,c
  1297  00142C  582D               	subwfb	(??_manda_esp8266_bytes+1)^0,w,c
  1298  00142E  A0D8               	btfss	status,0,c
  1299  001430  EF1C  F00A         	goto	u1221
  1300  001434  EF1E  F00A         	goto	u1220
  1301  001438                     u1221:
  1302  001438  EF04  F00A         	goto	l2280
  1303  00143C                     u1220:
  1304  00143C                     
  1305                           ;esp8266.c: 293: };esp8266.c: 294: _delay((unsigned long)((50)*(48000000/4000.0)));
  1306  00143C  0E04               	movlw	4
  1307  00143E  6E2D               	movwf	(??_manda_esp8266_bytes+1)^0,c
  1308  001440  0E0C               	movlw	12
  1309  001442  6E2C               	movwf	??_manda_esp8266_bytes^0,c
  1310  001444  0E34               	movlw	52
  1311  001446                     u1447:
  1312  001446  2EE8               	decfsz	wreg,f,c
  1313  001448  D7FE               	bra	u1447
  1314  00144A  2E2C               	decfsz	??_manda_esp8266_bytes^0,f,c
  1315  00144C  D7FC               	bra	u1447
  1316  00144E  2E2D               	decfsz	(??_manda_esp8266_bytes+1)^0,f,c
  1317  001450  D7FA               	bra	u1447
  1318  001452  0012               	return		;funcret
  1319  001454                     __end_of_manda_esp8266_bytes:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _conecta *****************
  1323 ;; Defined at:
  1324 ;;		line 301 in file "Librerias/esp8266.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  ip_dir          2   39[COMRAM] PTR unsigned char 
  1327 ;;		 -> STR_16(13), 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  tempo           1   43[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      unsigned char 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         2       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        5 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; Hardware stack levels required when called: 6
  1346 ;; This function calls:
  1347 ;;		_manda_AT_COMANDO
  1348 ;;		_memset
  1349 ;;		_sprintf
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text4
  1356  000F0C                     __ptext4:
  1357                           	callstack 0
  1358  000F0C                     _conecta:
  1359                           	callstack 24
  1360  000F0C                     
  1361                           ;esp8266.c: 303: unsigned char tempo;;esp8266.c: 304: memset(modbus_tx,0,50);
  1362  000F0C  0E6E               	movlw	low _modbus_tx
  1363  000F0E  6E05               	movwf	memset@p1^0,c
  1364  000F10  0E00               	movlw	high _modbus_tx
  1365  000F12  6E06               	movwf	(memset@p1+1)^0,c
  1366  000F14  0E00               	movlw	0
  1367  000F16  6E08               	movwf	(memset@c+1)^0,c
  1368  000F18  0E00               	movlw	0
  1369  000F1A  6E07               	movwf	memset@c^0,c
  1370  000F1C  0E00               	movlw	0
  1371  000F1E  6E0A               	movwf	(memset@n+1)^0,c
  1372  000F20  0E32               	movlw	50
  1373  000F22  6E09               	movwf	memset@n^0,c
  1374  000F24  ECBA  F00B         	call	_memset	;wreg free
  1375  000F28                     
  1376                           ;esp8266.c: 305: sprintf(modbus_tx,"AT+CIPSTART=4,\"TCP\",\"%s\",502",ip_dir);
  1377  000F28  0E6E               	movlw	low _modbus_tx
  1378  000F2A  6E11               	movwf	sprintf@sp^0,c
  1379  000F2C  0E00               	movlw	high _modbus_tx
  1380  000F2E  6E12               	movwf	(sprintf@sp+1)^0,c
  1381  000F30  0E2F               	movlw	low STR_23
  1382  000F32  6E13               	movwf	sprintf@f^0,c
  1383  000F34  0E08               	movlw	high STR_23
  1384  000F36  6E14               	movwf	(sprintf@f+1)^0,c
  1385  000F38  C028  F015         	movff	conecta@ip_dir,?_sprintf+4
  1386  000F3C  C029  F016         	movff	conecta@ip_dir+1,?_sprintf+5
  1387  000F40  EC6D  F004         	call	_sprintf	;wreg free
  1388  000F44                     
  1389                           ;esp8266.c: 307: manda_AT_COMANDO("AT+CIPMUX=1\r\n","OK","OK",500);
  1390  000F44  0E5E               	movlw	low STR_24
  1391  000F46  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
  1392  000F48  0E08               	movlw	high STR_24
  1393  000F4A  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
  1394  000F4C  0ED5               	movlw	low STR_2
  1395  000F4E  6E20               	movwf	manda_AT_COMANDO@cap^0,c
  1396  000F50  0E08               	movlw	high STR_2
  1397  000F52  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
  1398  000F54  0ED5               	movlw	low STR_2
  1399  000F56  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
  1400  000F58  0E08               	movlw	high STR_2
  1401  000F5A  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
  1402  000F5C  0E01               	movlw	1
  1403  000F5E  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
  1404  000F60  0EF4               	movlw	244
  1405  000F62  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
  1406  000F64  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
  1407  000F68                     
  1408                           ;esp8266.c: 308: _delay((unsigned long)((300)*(48000000/4000.0)));
  1409  000F68  0E13               	movlw	19
  1410  000F6A  6E2B               	movwf	(??_conecta+1)^0,c
  1411  000F6C  0E44               	movlw	68
  1412  000F6E  6E2A               	movwf	??_conecta^0,c
  1413  000F70  0E44               	movlw	68
  1414  000F72                     u1457:
  1415  000F72  2EE8               	decfsz	wreg,f,c
  1416  000F74  D7FE               	bra	u1457
  1417  000F76  2E2A               	decfsz	??_conecta^0,f,c
  1418  000F78  D7FC               	bra	u1457
  1419  000F7A  2E2B               	decfsz	(??_conecta+1)^0,f,c
  1420  000F7C  D7FA               	bra	u1457
  1421  000F7E  D000               	nop2	
  1422  000F80                     
  1423                           ;esp8266.c: 309: tempo=manda_AT_COMANDO(modbus_tx, "OK", "CONNECT", 10000);
  1424  000F80  0E6E               	movlw	low _modbus_tx
  1425  000F82  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
  1426  000F84  0E00               	movlw	high _modbus_tx
  1427  000F86  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
  1428  000F88  0ED5               	movlw	low STR_2
  1429  000F8A  6E20               	movwf	manda_AT_COMANDO@cap^0,c
  1430  000F8C  0E08               	movlw	high STR_2
  1431  000F8E  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
  1432  000F90  0EB0               	movlw	low STR_28
  1433  000F92  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
  1434  000F94  0E08               	movlw	high STR_28
  1435  000F96  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
  1436  000F98  0E27               	movlw	39
  1437  000F9A  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
  1438  000F9C  0E10               	movlw	16
  1439  000F9E  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
  1440  000FA0  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
  1441  000FA4  6E2C               	movwf	conecta@tempo^0,c
  1442  000FA6                     
  1443                           ;esp8266.c: 310: _delay((unsigned long)((2000)*(48000000/4000.0)));
  1444  000FA6  0E7A               	movlw	122
  1445  000FA8  6E2B               	movwf	(??_conecta+1)^0,c
  1446  000FAA  0EC1               	movlw	193
  1447  000FAC  6E2A               	movwf	??_conecta^0,c
  1448  000FAE  0E82               	movlw	130
  1449  000FB0                     u1467:
  1450  000FB0  2EE8               	decfsz	wreg,f,c
  1451  000FB2  D7FE               	bra	u1467
  1452  000FB4  2E2A               	decfsz	??_conecta^0,f,c
  1453  000FB6  D7FC               	bra	u1467
  1454  000FB8  2E2B               	decfsz	(??_conecta+1)^0,f,c
  1455  000FBA  D7FA               	bra	u1467
  1456  000FBC                     
  1457                           ;esp8266.c: 311: if ((tempo==1) ||(tempo==2)) return(1);
  1458  000FBC  042C               	decf	conecta@tempo^0,w,c
  1459  000FBE  B4D8               	btfsc	status,2,c
  1460  000FC0  EFE4  F007         	goto	u1361
  1461  000FC4  EFE6  F007         	goto	u1360
  1462  000FC8                     u1361:
  1463  000FC8  EF2C  F008         	goto	l372
  1464  000FCC                     u1360:
  1465  000FCC  0E02               	movlw	2
  1466  000FCE  182C               	xorwf	conecta@tempo^0,w,c
  1467  000FD0  A4D8               	btfss	status,2,c
  1468  000FD2  EFED  F007         	goto	u1371
  1469  000FD6  EFEF  F007         	goto	u1370
  1470  000FDA                     u1371:
  1471  000FDA  EFF1  F007         	goto	l2386
  1472  000FDE                     u1370:
  1473  000FDE  EF2C  F008         	goto	l372
  1474  000FE2                     l2386:
  1475                           
  1476                           ;esp8266.c: 312: manda_AT_COMANDO("AT+CIPMUX=1\r\n","OK","OK",500);
  1477  000FE2  0E5E               	movlw	low STR_24
  1478  000FE4  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
  1479  000FE6  0E08               	movlw	high STR_24
  1480  000FE8  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
  1481  000FEA  0ED5               	movlw	low STR_2
  1482  000FEC  6E20               	movwf	manda_AT_COMANDO@cap^0,c
  1483  000FEE  0E08               	movlw	high STR_2
  1484  000FF0  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
  1485  000FF2  0ED5               	movlw	low STR_2
  1486  000FF4  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
  1487  000FF6  0E08               	movlw	high STR_2
  1488  000FF8  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
  1489  000FFA  0E01               	movlw	1
  1490  000FFC  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
  1491  000FFE  0EF4               	movlw	244
  1492  001000  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
  1493  001002  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
  1494  001006                     
  1495                           ;esp8266.c: 313: _delay((unsigned long)((300)*(48000000/4000.0)));
  1496  001006  0E13               	movlw	19
  1497  001008  6E2B               	movwf	(??_conecta+1)^0,c
  1498  00100A  0E44               	movlw	68
  1499  00100C  6E2A               	movwf	??_conecta^0,c
  1500  00100E  0E44               	movlw	68
  1501  001010                     u1477:
  1502  001010  2EE8               	decfsz	wreg,f,c
  1503  001012  D7FE               	bra	u1477
  1504  001014  2E2A               	decfsz	??_conecta^0,f,c
  1505  001016  D7FC               	bra	u1477
  1506  001018  2E2B               	decfsz	(??_conecta+1)^0,f,c
  1507  00101A  D7FA               	bra	u1477
  1508  00101C  D000               	nop2	
  1509  00101E  0E6E               	movlw	low _modbus_tx
  1510  001020  6E1E               	movwf	manda_AT_COMANDO@coman^0,c
  1511  001022  0E00               	movlw	high _modbus_tx
  1512  001024  6E1F               	movwf	(manda_AT_COMANDO@coman+1)^0,c
  1513  001026  0ED5               	movlw	low STR_2
  1514  001028  6E20               	movwf	manda_AT_COMANDO@cap^0,c
  1515  00102A  0E08               	movlw	high STR_2
  1516  00102C  6E21               	movwf	(manda_AT_COMANDO@cap+1)^0,c
  1517  00102E  0EBF               	movlw	low STR_33
  1518  001030  6E22               	movwf	manda_AT_COMANDO@cap1^0,c
  1519  001032  0E08               	movlw	high STR_33
  1520  001034  6E23               	movwf	(manda_AT_COMANDO@cap1+1)^0,c
  1521  001036  0E27               	movlw	39
  1522  001038  6E25               	movwf	(manda_AT_COMANDO@retardo+1)^0,c
  1523  00103A  0E10               	movlw	16
  1524  00103C  6E24               	movwf	manda_AT_COMANDO@retardo^0,c
  1525  00103E  EC5E  F00B         	call	_manda_AT_COMANDO	;wreg free
  1526                           
  1527                           ;esp8266.c: 315: _delay((unsigned long)((2000)*(48000000/4000.0)));
  1528  001042  0E7A               	movlw	122
  1529  001044  6E2B               	movwf	(??_conecta+1)^0,c
  1530  001046  0EC1               	movlw	193
  1531  001048  6E2A               	movwf	??_conecta^0,c
  1532  00104A  0E82               	movlw	130
  1533  00104C                     u1487:
  1534  00104C  2EE8               	decfsz	wreg,f,c
  1535  00104E  D7FE               	bra	u1487
  1536  001050  2E2A               	decfsz	??_conecta^0,f,c
  1537  001052  D7FC               	bra	u1487
  1538  001054  2E2B               	decfsz	(??_conecta+1)^0,f,c
  1539  001056  D7FA               	bra	u1487
  1540  001058                     l372:
  1541  001058  0012               	return		;funcret
  1542  00105A                     __end_of_conecta:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _sprintf *****************
  1546 ;; Defined at:
  1547 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  sp              2   16[COMRAM] PTR unsigned char 
  1550 ;;		 -> captu1(30), modbus_tx(50), 
  1551 ;;  f               2   18[COMRAM] PTR const unsigned char 
  1552 ;;		 -> STR_23(29), STR_22(18), STR_21(18), STR_19(4), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  tmpval          4    0        struct .
  1555 ;;  width           2   36[COMRAM] int 
  1556 ;;  val             2   34[COMRAM] unsigned int 
  1557 ;;  len             2   32[COMRAM] unsigned int 
  1558 ;;  ap              2   29[COMRAM] PTR void [1]
  1559 ;;		 -> ?_sprintf(2), 
  1560 ;;  cp              2   27[COMRAM] PTR const unsigned char 
  1561 ;;		 -> STR_34(7), ?_sprintf(2), STR_16(13), 
  1562 ;;  c               1   38[COMRAM] unsigned char 
  1563 ;;  flag            1   31[COMRAM] unsigned char 
  1564 ;;  prec            1   26[COMRAM] char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2   16[COMRAM] int 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         6       0       0       0       0       0       0       0       0
  1575 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1577 ;;      Totals:        23       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:       23 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 3
  1581 ;; This function calls:
  1582 ;;		___lwdiv
  1583 ;;		___lwmod
  1584 ;;		___wmul
  1585 ;;		_isdigit
  1586 ;; This function is called by:
  1587 ;;		_manda_esp8266_bytes
  1588 ;;		_conecta
  1589 ;;		_manda_esp8266_const
  1590 ;;		_manda_esp8266
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text5
  1595  0008DA                     __ptext5:
  1596                           	callstack 0
  1597  0008DA                     _sprintf:
  1598                           	callstack 25
  1599  0008DA                     
  1600                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  1601  0008DA  0E15               	movlw	low (?_sprintf+4)
  1602  0008DC  6E1E               	movwf	sprintf@ap^0,c
  1603  0008DE  0E00               	movlw	high (?_sprintf+4)
  1604  0008E0  6E1F               	movwf	(sprintf@ap+1)^0,c
  1605                           
  1606                           ;doprnt.c: 553: while((c = *f++)) {
  1607  0008E2  EF76  F006         	goto	l2248
  1608  0008E6                     l2124:
  1609                           
  1610                           ;doprnt.c: 555: if(c != '%')
  1611  0008E6  0E25               	movlw	37
  1612  0008E8  1827               	xorwf	sprintf@c^0,w,c
  1613  0008EA  B4D8               	btfsc	status,2,c
  1614  0008EC  EF7A  F004         	goto	u1001
  1615  0008F0  EF7C  F004         	goto	u1000
  1616  0008F4                     u1001:
  1617  0008F4  EF86  F004         	goto	l2130
  1618  0008F8                     u1000:
  1619  0008F8                     
  1620                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1621  0008F8  C011  FFD9         	movff	sprintf@sp,fsr2l
  1622  0008FC  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  1623  000900  C027  FFDF         	movff	sprintf@c,indf2
  1624  000904  4A11               	infsnz	sprintf@sp^0,f,c
  1625  000906  2A12               	incf	(sprintf@sp+1)^0,f,c
  1626                           
  1627                           ;doprnt.c: 559: continue;
  1628  000908  EF76  F006         	goto	l2248
  1629  00090C                     l2130:
  1630                           
  1631                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1632  00090C  0E00               	movlw	0
  1633  00090E  6E26               	movwf	(sprintf@width+1)^0,c
  1634  000910  0E00               	movlw	0
  1635  000912  6E25               	movwf	sprintf@width^0,c
  1636                           
  1637                           ;doprnt.c: 565: flag = 0;
  1638  000914  0E00               	movlw	0
  1639  000916  6E20               	movwf	sprintf@flag^0,c
  1640  000918                     
  1641                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1642  000918  C013  FFF6         	movff	sprintf@f,tblptrl
  1643  00091C  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1644  000920                     	if	0	;tblptru may be non-zero
  1645  000920                     	endif
  1646  000920                     	if	0	;tblptru may be non-zero
  1647  000920                     	endif
  1648  000920  0008               	tblrd		*
  1649  000922  50F5               	movf	tablat,w,c
  1650  000924  ECD6  F00B         	call	_isdigit
  1651  000928  A0D8               	btfss	status,0,c
  1652  00092A  EF99  F004         	goto	u1011
  1653  00092E  EF9B  F004         	goto	u1010
  1654  000932                     u1011:
  1655  000932  EF6C  F005         	goto	l2182
  1656  000936                     u1010:
  1657  000936                     
  1658                           ;doprnt.c: 615: width = 0;
  1659  000936  0E00               	movlw	0
  1660  000938  6E26               	movwf	(sprintf@width+1)^0,c
  1661  00093A  0E00               	movlw	0
  1662  00093C  6E25               	movwf	sprintf@width^0,c
  1663  00093E                     l2136:
  1664                           
  1665                           ;doprnt.c: 617: width *= 10;
  1666  00093E  C025  F005         	movff	sprintf@width,___wmul@multiplier
  1667  000942  C026  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  1668  000946  0E00               	movlw	0
  1669  000948  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1670  00094A  0E0A               	movlw	10
  1671  00094C  6E07               	movwf	___wmul@multiplicand^0,c
  1672  00094E  EC19  F00C         	call	___wmul	;wreg free
  1673  000952  C005  F025         	movff	?___wmul,sprintf@width
  1674  000956  C006  F026         	movff	?___wmul+1,sprintf@width+1
  1675  00095A                     
  1676                           ;doprnt.c: 618: width += *f++ - '0';
  1677  00095A  0ED0               	movlw	208
  1678  00095C  6E17               	movwf	??_sprintf^0,c
  1679  00095E  0EFF               	movlw	255
  1680  000960  6E18               	movwf	(??_sprintf+1)^0,c
  1681  000962  C013  FFF6         	movff	sprintf@f,tblptrl
  1682  000966  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1683  00096A                     	if	0	;tblptru may be non-zero
  1684  00096A                     	endif
  1685  00096A                     	if	0	;tblptru may be non-zero
  1686  00096A                     	endif
  1687  00096A  0008               	tblrd		*
  1688  00096C  50F5               	movf	tablat,w,c
  1689  00096E  6E19               	movwf	(??_sprintf+2)^0,c
  1690  000970  6A1A               	clrf	(??_sprintf+3)^0,c
  1691  000972  5017               	movf	??_sprintf^0,w,c
  1692  000974  2619               	addwf	(??_sprintf+2)^0,f,c
  1693  000976  5018               	movf	(??_sprintf+1)^0,w,c
  1694  000978  221A               	addwfc	(??_sprintf+3)^0,f,c
  1695  00097A  5019               	movf	(??_sprintf+2)^0,w,c
  1696  00097C  2625               	addwf	sprintf@width^0,f,c
  1697  00097E  501A               	movf	(??_sprintf+3)^0,w,c
  1698  000980  2226               	addwfc	(sprintf@width+1)^0,f,c
  1699  000982  4A13               	infsnz	sprintf@f^0,f,c
  1700  000984  2A14               	incf	(sprintf@f+1)^0,f,c
  1701  000986                     
  1702                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1703  000986  C013  FFF6         	movff	sprintf@f,tblptrl
  1704  00098A  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1705  00098E                     	if	0	;tblptru may be non-zero
  1706  00098E                     	endif
  1707  00098E                     	if	0	;tblptru may be non-zero
  1708  00098E                     	endif
  1709  00098E  0008               	tblrd		*
  1710  000990  50F5               	movf	tablat,w,c
  1711  000992  ECD6  F00B         	call	_isdigit
  1712  000996  B0D8               	btfsc	status,0,c
  1713  000998  EFD0  F004         	goto	u1021
  1714  00099C  EFD2  F004         	goto	u1020
  1715  0009A0                     u1021:
  1716  0009A0  EF9F  F004         	goto	l2136
  1717  0009A4                     u1020:
  1718  0009A4  EF6C  F005         	goto	l2182
  1719  0009A8                     l2144:
  1720                           
  1721                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  1722  0009A8  C01E  FFD9         	movff	sprintf@ap,fsr2l
  1723  0009AC  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  1724  0009B0  CFDE F01C          	movff	postinc2,sprintf@cp
  1725  0009B4  CFDD F01D          	movff	postdec2,sprintf@cp+1
  1726  0009B8  0E02               	movlw	2
  1727  0009BA  261E               	addwf	sprintf@ap^0,f,c
  1728  0009BC  0E00               	movlw	0
  1729  0009BE  221F               	addwfc	(sprintf@ap+1)^0,f,c
  1730  0009C0                     
  1731                           ;doprnt.c: 766: if(!cp)
  1732  0009C0  501C               	movf	sprintf@cp^0,w,c
  1733  0009C2  101D               	iorwf	(sprintf@cp+1)^0,w,c
  1734  0009C4  A4D8               	btfss	status,2,c
  1735  0009C6  EFE7  F004         	goto	u1031
  1736  0009CA  EFE9  F004         	goto	u1030
  1737  0009CE                     u1031:
  1738  0009CE  EFED  F004         	goto	l2152
  1739  0009D2                     u1030:
  1740  0009D2                     
  1741                           ;doprnt.c: 767: cp = "(null)";
  1742  0009D2  0EB8               	movlw	low STR_34
  1743  0009D4  6E1C               	movwf	sprintf@cp^0,c
  1744  0009D6  0E08               	movlw	high STR_34
  1745  0009D8  6E1D               	movwf	(sprintf@cp+1)^0,c
  1746  0009DA                     l2152:
  1747                           
  1748                           ;doprnt.c: 771: len = 0;
  1749  0009DA  0E00               	movlw	0
  1750  0009DC  6E22               	movwf	(sprintf@len+1)^0,c
  1751  0009DE  0E00               	movlw	0
  1752  0009E0  6E21               	movwf	sprintf@len^0,c
  1753                           
  1754                           ;doprnt.c: 772: while(cp[len])
  1755  0009E2  EFF5  F004         	goto	l2156
  1756  0009E6                     l2154:
  1757                           
  1758                           ;doprnt.c: 773: len++;
  1759  0009E6  4A21               	infsnz	sprintf@len^0,f,c
  1760  0009E8  2A22               	incf	(sprintf@len+1)^0,f,c
  1761  0009EA                     l2156:
  1762  0009EA  5021               	movf	sprintf@len^0,w,c
  1763  0009EC  241C               	addwf	sprintf@cp^0,w,c
  1764  0009EE  6E17               	movwf	??_sprintf^0,c
  1765  0009F0  5022               	movf	(sprintf@len+1)^0,w,c
  1766  0009F2  201D               	addwfc	(sprintf@cp+1)^0,w,c
  1767  0009F4  6E18               	movwf	(??_sprintf+1)^0,c
  1768  0009F6  C017  FFF6         	movff	??_sprintf,tblptrl
  1769  0009FA  C018  FFF7         	movff	??_sprintf+1,tblptrh
  1770  0009FE  6AF8               	clrf	tblptru,c
  1771  000A00  0E07               	movlw	(high __ramtop+-1)
  1772  000A02  64F7               	cpfsgt	tblptrh,c
  1773  000A04  D003               	bra	u1047
  1774  000A06  0008               	tblrd		*
  1775  000A08  50F5               	movf	tablat,w,c
  1776  000A0A  D005               	bra	u1040
  1777  000A0C                     u1047:
  1778  000A0C  CFF6 FFE1          	movff	tblptrl,fsr1l
  1779  000A10  CFF7 FFE2          	movff	tblptrh,fsr1h
  1780  000A14  50E7               	movf	indf1,w,c
  1781  000A16                     u1040:
  1782  000A16  0900               	iorlw	0
  1783  000A18  A4D8               	btfss	status,2,c
  1784  000A1A  EF11  F005         	goto	u1051
  1785  000A1E  EF13  F005         	goto	u1050
  1786  000A22                     u1051:
  1787  000A22  EFF3  F004         	goto	l2154
  1788  000A26                     u1050:
  1789  000A26                     
  1790                           ;doprnt.c: 783: if(((unsigned)width) > len)
  1791  000A26  5025               	movf	sprintf@width^0,w,c
  1792  000A28  5C21               	subwf	sprintf@len^0,w,c
  1793  000A2A  5026               	movf	(sprintf@width+1)^0,w,c
  1794  000A2C  5822               	subwfb	(sprintf@len+1)^0,w,c
  1795  000A2E  B0D8               	btfsc	status,0,c
  1796  000A30  EF1C  F005         	goto	u1061
  1797  000A34  EF1E  F005         	goto	u1060
  1798  000A38                     u1061:
  1799  000A38  EF24  F005         	goto	l2162
  1800  000A3C                     u1060:
  1801  000A3C                     
  1802                           ;doprnt.c: 784: width -= len;
  1803  000A3C  5021               	movf	sprintf@len^0,w,c
  1804  000A3E  5E25               	subwf	sprintf@width^0,f,c
  1805  000A40  5022               	movf	(sprintf@len+1)^0,w,c
  1806  000A42  5A26               	subwfb	(sprintf@width+1)^0,f,c
  1807  000A44  EF32  F005         	goto	l2168
  1808  000A48                     l2162:
  1809                           
  1810                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  1811  000A48  0E00               	movlw	0
  1812  000A4A  6E26               	movwf	(sprintf@width+1)^0,c
  1813  000A4C  0E00               	movlw	0
  1814  000A4E  6E25               	movwf	sprintf@width^0,c
  1815  000A50  EF32  F005         	goto	l2168
  1816  000A54                     l2164:
  1817                           
  1818                           ;doprnt.c: 791: ((*sp++ = (' ')));
  1819  000A54  C011  FFD9         	movff	sprintf@sp,fsr2l
  1820  000A58  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  1821  000A5C  0E20               	movlw	32
  1822  000A5E  6EDF               	movwf	indf2,c
  1823  000A60  4A11               	infsnz	sprintf@sp^0,f,c
  1824  000A62  2A12               	incf	(sprintf@sp+1)^0,f,c
  1825  000A64                     l2168:
  1826  000A64  0625               	decf	sprintf@width^0,f,c
  1827  000A66  A0D8               	btfss	status,0,c
  1828  000A68  0626               	decf	(sprintf@width+1)^0,f,c
  1829  000A6A  2825               	incf	sprintf@width^0,w,c
  1830  000A6C  E106               	bnz	u1071
  1831  000A6E  2826               	incf	(sprintf@width+1)^0,w,c
  1832  000A70  A4D8               	btfss	status,2,c
  1833  000A72  EF3D  F005         	goto	u1071
  1834  000A76  EF3F  F005         	goto	u1070
  1835  000A7A                     u1071:
  1836  000A7A  EF2A  F005         	goto	l2164
  1837  000A7E                     u1070:
  1838  000A7E  EF5A  F005         	goto	l2176
  1839  000A82                     l2170:
  1840                           
  1841                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  1842  000A82  C01C  FFF6         	movff	sprintf@cp,tblptrl
  1843  000A86  C01D  FFF7         	movff	sprintf@cp+1,tblptrh
  1844  000A8A  6AF8               	clrf	tblptru,c
  1845  000A8C  C011  FFD9         	movff	sprintf@sp,fsr2l
  1846  000A90  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  1847  000A94  0E07               	movlw	(high __ramtop+-1)
  1848  000A96  64F7               	cpfsgt	tblptrh,c
  1849  000A98  D003               	bra	u1087
  1850  000A9A  0008               	tblrd		*
  1851  000A9C  50F5               	movf	tablat,w,c
  1852  000A9E  D005               	bra	u1080
  1853  000AA0                     u1087:
  1854  000AA0  CFF6 FFE1          	movff	tblptrl,fsr1l
  1855  000AA4  CFF7 FFE2          	movff	tblptrh,fsr1h
  1856  000AA8  50E7               	movf	indf1,w,c
  1857  000AAA                     u1080:
  1858  000AAA  6EDF               	movwf	indf2,c
  1859  000AAC  4A1C               	infsnz	sprintf@cp^0,f,c
  1860  000AAE  2A1D               	incf	(sprintf@cp+1)^0,f,c
  1861  000AB0  4A11               	infsnz	sprintf@sp^0,f,c
  1862  000AB2  2A12               	incf	(sprintf@sp+1)^0,f,c
  1863  000AB4                     l2176:
  1864  000AB4  0621               	decf	sprintf@len^0,f,c
  1865  000AB6  A0D8               	btfss	status,0,c
  1866  000AB8  0622               	decf	(sprintf@len+1)^0,f,c
  1867  000ABA  2821               	incf	sprintf@len^0,w,c
  1868  000ABC  E106               	bnz	u1091
  1869  000ABE  2822               	incf	(sprintf@len+1)^0,w,c
  1870  000AC0  A4D8               	btfss	status,2,c
  1871  000AC2  EF65  F005         	goto	u1091
  1872  000AC6  EF67  F005         	goto	u1090
  1873  000ACA                     u1091:
  1874  000ACA  EF41  F005         	goto	l2170
  1875  000ACE                     u1090:
  1876  000ACE  EF76  F006         	goto	l2248
  1877  000AD2                     l2178:
  1878                           
  1879                           ;doprnt.c: 844: flag |= 0x40;
  1880  000AD2  8C20               	bsf	sprintf@flag^0,6,c
  1881                           
  1882                           ;doprnt.c: 845: break;
  1883  000AD4  EF8C  F005         	goto	l398
  1884  000AD8                     l2182:
  1885  000AD8  C013  FFF6         	movff	sprintf@f,tblptrl
  1886  000ADC  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1887  000AE0  4A13               	infsnz	sprintf@f^0,f,c
  1888  000AE2  2A14               	incf	(sprintf@f+1)^0,f,c
  1889  000AE4                     	if	0	;tblptru may be non-zero
  1890  000AE4                     	endif
  1891  000AE4                     	if	0	;tblptru may be non-zero
  1892  000AE4                     	endif
  1893  000AE4  0008               	tblrd		*
  1894  000AE6  CFF5 F027          	movff	tablat,sprintf@c
  1895  000AEA  5027               	movf	sprintf@c^0,w,c
  1896                           
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 5, Range of values is 0 to 117
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte           16     9 (average)
  1902                           ;	Chosen strategy is simple_byte
  1903  000AEC  0A00               	xorlw	0	; case 0
  1904  000AEE  B4D8               	btfsc	status,2,c
  1905  000AF0  EF87  F006         	goto	l2250
  1906  000AF4  0A64               	xorlw	100	; case 100
  1907  000AF6  B4D8               	btfsc	status,2,c
  1908  000AF8  EF8C  F005         	goto	l398
  1909  000AFC  0A0D               	xorlw	13	; case 105
  1910  000AFE  B4D8               	btfsc	status,2,c
  1911  000B00  EF8C  F005         	goto	l398
  1912  000B04  0A1A               	xorlw	26	; case 115
  1913  000B06  B4D8               	btfsc	status,2,c
  1914  000B08  EFD4  F004         	goto	l2144
  1915  000B0C  0A06               	xorlw	6	; case 117
  1916  000B0E  B4D8               	btfsc	status,2,c
  1917  000B10  EF69  F005         	goto	l2178
  1918  000B14  EF76  F006         	goto	l2248
  1919  000B18                     l398:
  1920                           
  1921                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  1922  000B18  BC20               	btfsc	sprintf@flag^0,6,c
  1923  000B1A  EF91  F005         	goto	u1101
  1924  000B1E  EF93  F005         	goto	u1100
  1925  000B22                     u1101:
  1926  000B22  EFAE  F005         	goto	l2194
  1927  000B26                     u1100:
  1928  000B26                     
  1929                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1930  000B26  C01E  FFD9         	movff	sprintf@ap,fsr2l
  1931  000B2A  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  1932  000B2E  CFDE F023          	movff	postinc2,sprintf@val
  1933  000B32  CFDD F024          	movff	postdec2,sprintf@val+1
  1934  000B36  0E02               	movlw	2
  1935  000B38  261E               	addwf	sprintf@ap^0,f,c
  1936  000B3A  0E00               	movlw	0
  1937  000B3C  221F               	addwfc	(sprintf@ap+1)^0,f,c
  1938  000B3E                     
  1939                           ;doprnt.c: 1287: if((int)val < 0) {
  1940  000B3E  BE24               	btfsc	(sprintf@val+1)^0,7,c
  1941  000B40  EFA6  F005         	goto	u1110
  1942  000B44  EFA4  F005         	goto	u1111
  1943  000B48                     u1111:
  1944  000B48  EFBA  F005         	goto	l2198
  1945  000B4C                     u1110:
  1946  000B4C                     
  1947                           ;doprnt.c: 1288: flag |= 0x03;
  1948  000B4C  0E03               	movlw	3
  1949  000B4E  1220               	iorwf	sprintf@flag^0,f,c
  1950  000B50                     
  1951                           ;doprnt.c: 1289: val = -val;
  1952  000B50  6C23               	negf	sprintf@val^0,c
  1953  000B52  1E24               	comf	(sprintf@val+1)^0,f,c
  1954  000B54  B0D8               	btfsc	status,0,c
  1955  000B56  2A24               	incf	(sprintf@val+1)^0,f,c
  1956  000B58  EFBA  F005         	goto	l2198
  1957  000B5C                     l2194:
  1958                           
  1959                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  1960  000B5C  C01E  FFD9         	movff	sprintf@ap,fsr2l
  1961  000B60  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  1962  000B64  CFDE F023          	movff	postinc2,sprintf@val
  1963  000B68  CFDD F024          	movff	postdec2,sprintf@val+1
  1964  000B6C  0E02               	movlw	2
  1965  000B6E  261E               	addwf	sprintf@ap^0,f,c
  1966  000B70  0E00               	movlw	0
  1967  000B72  221F               	addwfc	(sprintf@ap+1)^0,f,c
  1968  000B74                     l2198:
  1969                           
  1970                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  1971  000B74  0E01               	movlw	1
  1972  000B76  6E27               	movwf	sprintf@c^0,c
  1973  000B78                     l2204:
  1974                           
  1975                           ;doprnt.c: 1332: if(val < dpowers[c])
  1976  000B78  5027               	movf	sprintf@c^0,w,c
  1977  000B7A  0D02               	mullw	2
  1978  000B7C  0E01               	movlw	low _dpowers
  1979  000B7E  24F3               	addwf	243,w,c
  1980  000B80  6EF6               	movwf	tblptrl,c
  1981  000B82  0E08               	movlw	high _dpowers
  1982  000B84  20F4               	addwfc	244,w,c
  1983  000B86  6EF7               	movwf	tblptrh,c
  1984  000B88                     	if	0	;There are less than 3 active tblptr bytes
  1985  000B88                     	endif
  1986  000B88  0009               	tblrd		*+
  1987  000B8A  50F5               	movf	tablat,w,c
  1988  000B8C  5C23               	subwf	sprintf@val^0,w,c
  1989  000B8E  0009               	tblrd		*+
  1990  000B90  50F5               	movf	tablat,w,c
  1991  000B92  5824               	subwfb	(sprintf@val+1)^0,w,c
  1992  000B94  B0D8               	btfsc	status,0,c
  1993  000B96  EFCF  F005         	goto	u1121
  1994  000B9A  EFD1  F005         	goto	u1120
  1995  000B9E                     u1121:
  1996  000B9E  EFD3  F005         	goto	l2208
  1997  000BA2                     u1120:
  1998  000BA2  EFDD  F005         	goto	l2212
  1999  000BA6                     l2208:
  2000  000BA6  2A27               	incf	sprintf@c^0,f,c
  2001  000BA8  0E05               	movlw	5
  2002  000BAA  1827               	xorwf	sprintf@c^0,w,c
  2003  000BAC  A4D8               	btfss	status,2,c
  2004  000BAE  EFDB  F005         	goto	u1131
  2005  000BB2  EFDD  F005         	goto	u1130
  2006  000BB6                     u1131:
  2007  000BB6  EFBC  F005         	goto	l2204
  2008  000BBA                     u1130:
  2009  000BBA                     l2212:
  2010                           
  2011                           ;doprnt.c: 1371: if(width && flag & 0x03)
  2012  000BBA  5025               	movf	sprintf@width^0,w,c
  2013  000BBC  1026               	iorwf	(sprintf@width+1)^0,w,c
  2014  000BBE  B4D8               	btfsc	status,2,c
  2015  000BC0  EFE4  F005         	goto	u1141
  2016  000BC4  EFE6  F005         	goto	u1140
  2017  000BC8                     u1141:
  2018  000BC8  EFF4  F005         	goto	l2218
  2019  000BCC                     u1140:
  2020  000BCC  C020  F017         	movff	sprintf@flag,??_sprintf
  2021  000BD0  0E03               	movlw	3
  2022  000BD2  1617               	andwf	??_sprintf^0,f,c
  2023  000BD4  B4D8               	btfsc	status,2,c
  2024  000BD6  EFEF  F005         	goto	u1151
  2025  000BDA  EFF1  F005         	goto	u1150
  2026  000BDE                     u1151:
  2027  000BDE  EFF4  F005         	goto	l2218
  2028  000BE2                     u1150:
  2029  000BE2                     
  2030                           ;doprnt.c: 1372: width--;
  2031  000BE2  0625               	decf	sprintf@width^0,f,c
  2032  000BE4  A0D8               	btfss	status,0,c
  2033  000BE6  0626               	decf	(sprintf@width+1)^0,f,c
  2034  000BE8                     l2218:
  2035                           
  2036                           ;doprnt.c: 1407: if(width > c)
  2037  000BE8  5027               	movf	sprintf@c^0,w,c
  2038  000BEA  6E17               	movwf	??_sprintf^0,c
  2039  000BEC  6A18               	clrf	(??_sprintf+1)^0,c
  2040  000BEE  5025               	movf	sprintf@width^0,w,c
  2041  000BF0  5C17               	subwf	??_sprintf^0,w,c
  2042  000BF2  5018               	movf	(??_sprintf+1)^0,w,c
  2043  000BF4  0A80               	xorlw	128
  2044  000BF6  6E19               	movwf	(??_sprintf+2)^0,c
  2045  000BF8  5026               	movf	(sprintf@width+1)^0,w,c
  2046  000BFA  0A80               	xorlw	128
  2047  000BFC  5819               	subwfb	(??_sprintf+2)^0,w,c
  2048  000BFE  B0D8               	btfsc	status,0,c
  2049  000C00  EF04  F006         	goto	u1161
  2050  000C04  EF06  F006         	goto	u1160
  2051  000C08                     u1161:
  2052  000C08  EF0C  F006         	goto	l2222
  2053  000C0C                     u1160:
  2054  000C0C                     
  2055                           ;doprnt.c: 1408: width -= c;
  2056  000C0C  5027               	movf	sprintf@c^0,w,c
  2057  000C0E  5E25               	subwf	sprintf@width^0,f,c
  2058  000C10  0E00               	movlw	0
  2059  000C12  5A26               	subwfb	(sprintf@width+1)^0,f,c
  2060  000C14  EF10  F006         	goto	l2224
  2061  000C18                     l2222:
  2062                           
  2063                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  2064  000C18  0E00               	movlw	0
  2065  000C1A  6E26               	movwf	(sprintf@width+1)^0,c
  2066  000C1C  0E00               	movlw	0
  2067  000C1E  6E25               	movwf	sprintf@width^0,c
  2068  000C20                     l2224:
  2069                           
  2070                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2071  000C20  5025               	movf	sprintf@width^0,w,c
  2072  000C22  1026               	iorwf	(sprintf@width+1)^0,w,c
  2073  000C24  B4D8               	btfsc	status,2,c
  2074  000C26  EF17  F006         	goto	u1171
  2075  000C2A  EF19  F006         	goto	u1170
  2076  000C2E                     u1171:
  2077  000C2E  EF2D  F006         	goto	l2232
  2078  000C32                     u1170:
  2079  000C32                     l2226:
  2080                           
  2081                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  2082  000C32  C011  FFD9         	movff	sprintf@sp,fsr2l
  2083  000C36  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2084  000C3A  0E20               	movlw	32
  2085  000C3C  6EDF               	movwf	indf2,c
  2086  000C3E  4A11               	infsnz	sprintf@sp^0,f,c
  2087  000C40  2A12               	incf	(sprintf@sp+1)^0,f,c
  2088  000C42                     
  2089                           ;doprnt.c: 1457: while(--width);
  2090  000C42  0625               	decf	sprintf@width^0,f,c
  2091  000C44  A0D8               	btfss	status,0,c
  2092  000C46  0626               	decf	(sprintf@width+1)^0,f,c
  2093  000C48  5025               	movf	sprintf@width^0,w,c
  2094  000C4A  1026               	iorwf	(sprintf@width+1)^0,w,c
  2095  000C4C  A4D8               	btfss	status,2,c
  2096  000C4E  EF2B  F006         	goto	u1181
  2097  000C52  EF2D  F006         	goto	u1180
  2098  000C56                     u1181:
  2099  000C56  EF19  F006         	goto	l2226
  2100  000C5A                     u1180:
  2101  000C5A                     l2232:
  2102                           
  2103                           ;doprnt.c: 1464: if(flag & 0x03)
  2104  000C5A  C020  F017         	movff	sprintf@flag,??_sprintf
  2105  000C5E  0E03               	movlw	3
  2106  000C60  1617               	andwf	??_sprintf^0,f,c
  2107  000C62  B4D8               	btfsc	status,2,c
  2108  000C64  EF36  F006         	goto	u1191
  2109  000C68  EF38  F006         	goto	u1190
  2110  000C6C                     u1191:
  2111  000C6C  EF40  F006         	goto	l2238
  2112  000C70                     u1190:
  2113  000C70                     
  2114                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2115  000C70  C011  FFD9         	movff	sprintf@sp,fsr2l
  2116  000C74  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2117  000C78  0E2D               	movlw	45
  2118  000C7A  6EDF               	movwf	indf2,c
  2119  000C7C  4A11               	infsnz	sprintf@sp^0,f,c
  2120  000C7E  2A12               	incf	(sprintf@sp+1)^0,f,c
  2121  000C80                     l2238:
  2122                           
  2123                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2124  000C80  C027  F01B         	movff	sprintf@c,sprintf@prec
  2125                           
  2126                           ;doprnt.c: 1500: while(prec--) {
  2127  000C84  EF6D  F006         	goto	l2246
  2128  000C88                     l2240:
  2129                           
  2130                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2131  000C88  501B               	movf	sprintf@prec^0,w,c
  2132  000C8A  0D02               	mullw	2
  2133  000C8C  0E01               	movlw	low _dpowers
  2134  000C8E  24F3               	addwf	243,w,c
  2135  000C90  6EF6               	movwf	tblptrl,c
  2136  000C92  0E08               	movlw	high _dpowers
  2137  000C94  20F4               	addwfc	244,w,c
  2138  000C96  6EF7               	movwf	tblptrh,c
  2139  000C98                     	if	0	;There are less than 3 active tblptr bytes
  2140  000C98                     	endif
  2141  000C98  0009               	tblrd		*+
  2142  000C9A  CFF5 F007          	movff	tablat,___lwdiv@divisor
  2143  000C9E  000A               	tblrd		*-
  2144  000CA0  CFF5 F008          	movff	tablat,___lwdiv@divisor+1
  2145  000CA4  C023  F005         	movff	sprintf@val,___lwdiv@dividend
  2146  000CA8  C024  F006         	movff	sprintf@val+1,___lwdiv@dividend+1
  2147  000CAC  EC2A  F00A         	call	___lwdiv	;wreg free
  2148  000CB0  C005  F00C         	movff	?___lwdiv,___lwmod@dividend
  2149  000CB4  C006  F00D         	movff	?___lwdiv+1,___lwmod@dividend+1
  2150  000CB8  0E00               	movlw	0
  2151  000CBA  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  2152  000CBC  0E0A               	movlw	10
  2153  000CBE  6E0E               	movwf	___lwmod@divisor^0,c
  2154  000CC0  EC64  F00A         	call	___lwmod	;wreg free
  2155  000CC4  500C               	movf	?___lwmod^0,w,c
  2156  000CC6  0F30               	addlw	48
  2157  000CC8  6E27               	movwf	sprintf@c^0,c
  2158  000CCA                     
  2159                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2160  000CCA  C011  FFD9         	movff	sprintf@sp,fsr2l
  2161  000CCE  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2162  000CD2  C027  FFDF         	movff	sprintf@c,indf2
  2163  000CD6  4A11               	infsnz	sprintf@sp^0,f,c
  2164  000CD8  2A12               	incf	(sprintf@sp+1)^0,f,c
  2165  000CDA                     l2246:
  2166  000CDA  061B               	decf	sprintf@prec^0,f,c
  2167  000CDC  281B               	incf	sprintf@prec^0,w,c
  2168  000CDE  A4D8               	btfss	status,2,c
  2169  000CE0  EF74  F006         	goto	u1201
  2170  000CE4  EF76  F006         	goto	u1200
  2171  000CE8                     u1201:
  2172  000CE8  EF44  F006         	goto	l2240
  2173  000CEC                     u1200:
  2174  000CEC                     l2248:
  2175  000CEC  C013  FFF6         	movff	sprintf@f,tblptrl
  2176  000CF0  C014  FFF7         	movff	sprintf@f+1,tblptrh
  2177  000CF4  4A13               	infsnz	sprintf@f^0,f,c
  2178  000CF6  2A14               	incf	(sprintf@f+1)^0,f,c
  2179  000CF8                     	if	0	;tblptru may be non-zero
  2180  000CF8                     	endif
  2181  000CF8                     	if	0	;tblptru may be non-zero
  2182  000CF8                     	endif
  2183  000CF8  0008               	tblrd		*
  2184  000CFA  CFF5 F027          	movff	tablat,sprintf@c
  2185  000CFE  5027               	movf	sprintf@c^0,w,c
  2186  000D00  A4D8               	btfss	status,2,c
  2187  000D02  EF85  F006         	goto	u1211
  2188  000D06  EF87  F006         	goto	u1210
  2189  000D0A                     u1211:
  2190  000D0A  EF73  F004         	goto	l2124
  2191  000D0E                     u1210:
  2192  000D0E                     l2250:
  2193                           
  2194                           ;doprnt.c: 1564: *sp = 0;
  2195  000D0E  C011  FFD9         	movff	sprintf@sp,fsr2l
  2196  000D12  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2197  000D16  0E00               	movlw	0
  2198  000D18  6EDF               	movwf	indf2,c
  2199  000D1A  0012               	return		;funcret
  2200  000D1C                     __end_of_sprintf:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _isdigit *****************
  2204 ;; Defined at:
  2205 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  c               1    wreg     unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  c               1    6[COMRAM] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;		None               void
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2219 ;;      Params:         0       0       0       0       0       0       0       0       0
  2220 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2221 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2222 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2223 ;;Total ram usage:        3 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 2
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_sprintf
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text6
  2234  0017AC                     __ptext6:
  2235                           	callstack 0
  2236  0017AC                     _isdigit:
  2237                           	callstack 25
  2238                           
  2239                           ;incstack = 0
  2240                           ;isdigit@c stored from wreg
  2241  0017AC  6E07               	movwf	isdigit@c^0,c
  2242  0017AE  0E00               	movlw	0
  2243  0017B0  6E06               	movwf	_isdigit$1296^0,c
  2244  0017B2  0E3A               	movlw	58
  2245  0017B4  6007               	cpfslt	isdigit@c^0,c
  2246  0017B6  EFDF  F00B         	goto	u851
  2247  0017BA  EFE1  F00B         	goto	u850
  2248  0017BE                     u851:
  2249  0017BE  EFEB  F00B         	goto	l2008
  2250  0017C2                     u850:
  2251  0017C2  0E2F               	movlw	47
  2252  0017C4  6407               	cpfsgt	isdigit@c^0,c
  2253  0017C6  EFE7  F00B         	goto	u861
  2254  0017CA  EFE9  F00B         	goto	u860
  2255  0017CE                     u861:
  2256  0017CE  EFEB  F00B         	goto	l2008
  2257  0017D2                     u860:
  2258  0017D2  0E01               	movlw	1
  2259  0017D4  6E06               	movwf	_isdigit$1296^0,c
  2260  0017D6                     l2008:
  2261  0017D6  C006  F005         	movff	_isdigit$1296,??_isdigit
  2262  0017DA  3005               	rrcf	??_isdigit^0,w,c
  2263  0017DC  0012               	return		;funcret
  2264  0017DE                     __end_of_isdigit:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function ___wmul *****************
  2268 ;; Defined at:
  2269 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  multiplier      2    4[COMRAM] unsigned int 
  2272 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  product         2    8[COMRAM] unsigned int 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2    4[COMRAM] unsigned int 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0, prodl, prodh
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2284 ;;      Params:         4       0       0       0       0       0       0       0       0
  2285 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2287 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2288 ;;Total ram usage:        6 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 2
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_sprintf
  2295 ;;		_atoi_
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text7
  2300  001832                     __ptext7:
  2301                           	callstack 0
  2302  001832                     ___wmul:
  2303                           	callstack 25
  2304  001832  5005               	movf	___wmul@multiplier^0,w,c
  2305  001834  0207               	mulwf	___wmul@multiplicand^0,c
  2306  001836  CFF3 F009          	movff	prodl,___wmul@product
  2307  00183A  CFF4 F00A          	movff	prodh,___wmul@product+1
  2308  00183E  5005               	movf	___wmul@multiplier^0,w,c
  2309  001840  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2310  001842  50F3               	movf	243,w,c
  2311  001844  260A               	addwf	(___wmul@product+1)^0,f,c
  2312  001846  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2313  001848  0207               	mulwf	___wmul@multiplicand^0,c
  2314  00184A  50F3               	movf	243,w,c
  2315  00184C  260A               	addwf	(___wmul@product+1)^0,f,c
  2316  00184E  C009  F005         	movff	___wmul@product,?___wmul
  2317  001852  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2318  001856  0012               	return		;funcret
  2319  001858                     __end_of___wmul:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function ___lwmod *****************
  2323 ;; Defined at:
  2324 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  dividend        2   11[COMRAM] unsigned int 
  2327 ;;  divisor         2   13[COMRAM] unsigned int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  counter         1   15[COMRAM] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  2   11[COMRAM] unsigned int 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2339 ;;      Params:         4       0       0       0       0       0       0       0       0
  2340 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2342 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        5 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 2
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_sprintf
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text8
  2354  0014C8                     __ptext8:
  2355                           	callstack 0
  2356  0014C8                     ___lwmod:
  2357                           	callstack 25
  2358  0014C8  500E               	movf	___lwmod@divisor^0,w,c
  2359  0014CA  100F               	iorwf	(___lwmod@divisor+1)^0,w,c
  2360  0014CC  B4D8               	btfsc	status,2,c
  2361  0014CE  EF6B  F00A         	goto	u901
  2362  0014D2  EF6D  F00A         	goto	u900
  2363  0014D6                     u901:
  2364  0014D6  EF91  F00A         	goto	l923
  2365  0014DA                     u900:
  2366  0014DA  0E01               	movlw	1
  2367  0014DC  6E10               	movwf	___lwmod@counter^0,c
  2368  0014DE  EF75  F00A         	goto	l2046
  2369  0014E2                     l2044:
  2370  0014E2  90D8               	bcf	status,0,c
  2371  0014E4  360E               	rlcf	___lwmod@divisor^0,f,c
  2372  0014E6  360F               	rlcf	(___lwmod@divisor+1)^0,f,c
  2373  0014E8  2A10               	incf	___lwmod@counter^0,f,c
  2374  0014EA                     l2046:
  2375  0014EA  AE0F               	btfss	(___lwmod@divisor+1)^0,7,c
  2376  0014EC  EF7A  F00A         	goto	u911
  2377  0014F0  EF7C  F00A         	goto	u910
  2378  0014F4                     u911:
  2379  0014F4  EF71  F00A         	goto	l2044
  2380  0014F8                     u910:
  2381  0014F8                     l2048:
  2382  0014F8  500E               	movf	___lwmod@divisor^0,w,c
  2383  0014FA  5C0C               	subwf	___lwmod@dividend^0,w,c
  2384  0014FC  500F               	movf	(___lwmod@divisor+1)^0,w,c
  2385  0014FE  580D               	subwfb	(___lwmod@dividend+1)^0,w,c
  2386  001500  A0D8               	btfss	status,0,c
  2387  001502  EF85  F00A         	goto	u921
  2388  001506  EF87  F00A         	goto	u920
  2389  00150A                     u921:
  2390  00150A  EF8B  F00A         	goto	l2052
  2391  00150E                     u920:
  2392  00150E  500E               	movf	___lwmod@divisor^0,w,c
  2393  001510  5E0C               	subwf	___lwmod@dividend^0,f,c
  2394  001512  500F               	movf	(___lwmod@divisor+1)^0,w,c
  2395  001514  5A0D               	subwfb	(___lwmod@dividend+1)^0,f,c
  2396  001516                     l2052:
  2397  001516  90D8               	bcf	status,0,c
  2398  001518  320F               	rrcf	(___lwmod@divisor+1)^0,f,c
  2399  00151A  320E               	rrcf	___lwmod@divisor^0,f,c
  2400  00151C  2E10               	decfsz	___lwmod@counter^0,f,c
  2401  00151E  EF7C  F00A         	goto	l2048
  2402  001522                     l923:
  2403  001522  C00C  F00C         	movff	___lwmod@dividend,?___lwmod
  2404  001526  C00D  F00D         	movff	___lwmod@dividend+1,?___lwmod+1
  2405  00152A  0012               	return		;funcret
  2406  00152C                     __end_of___lwmod:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function ___lwdiv *****************
  2410 ;; Defined at:
  2411 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  dividend        2    4[COMRAM] unsigned int 
  2414 ;;  divisor         2    6[COMRAM] unsigned int 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  quotient        2    8[COMRAM] unsigned int 
  2417 ;;  counter         1   10[COMRAM] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2    4[COMRAM] unsigned int 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2427 ;;      Params:         4       0       0       0       0       0       0       0       0
  2428 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2430 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2431 ;;Total ram usage:        7 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 2
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_sprintf
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text9
  2442  001454                     __ptext9:
  2443                           	callstack 0
  2444  001454                     ___lwdiv:
  2445                           	callstack 25
  2446  001454  0E00               	movlw	0
  2447  001456  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
  2448  001458  0E00               	movlw	0
  2449  00145A  6E09               	movwf	___lwdiv@quotient^0,c
  2450  00145C  5007               	movf	___lwdiv@divisor^0,w,c
  2451  00145E  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2452  001460  B4D8               	btfsc	status,2,c
  2453  001462  EF35  F00A         	goto	u871
  2454  001466  EF37  F00A         	goto	u870
  2455  00146A                     u871:
  2456  00146A  EF5F  F00A         	goto	l913
  2457  00146E                     u870:
  2458  00146E  0E01               	movlw	1
  2459  001470  6E0B               	movwf	___lwdiv@counter^0,c
  2460  001472  EF3F  F00A         	goto	l2026
  2461  001476                     l2024:
  2462  001476  90D8               	bcf	status,0,c
  2463  001478  3607               	rlcf	___lwdiv@divisor^0,f,c
  2464  00147A  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2465  00147C  2A0B               	incf	___lwdiv@counter^0,f,c
  2466  00147E                     l2026:
  2467  00147E  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  2468  001480  EF44  F00A         	goto	u881
  2469  001484  EF46  F00A         	goto	u880
  2470  001488                     u881:
  2471  001488  EF3B  F00A         	goto	l2024
  2472  00148C                     u880:
  2473  00148C                     l2028:
  2474  00148C  90D8               	bcf	status,0,c
  2475  00148E  3609               	rlcf	___lwdiv@quotient^0,f,c
  2476  001490  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2477  001492  5007               	movf	___lwdiv@divisor^0,w,c
  2478  001494  5C05               	subwf	___lwdiv@dividend^0,w,c
  2479  001496  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  2480  001498  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2481  00149A  A0D8               	btfss	status,0,c
  2482  00149C  EF52  F00A         	goto	u891
  2483  0014A0  EF54  F00A         	goto	u890
  2484  0014A4                     u891:
  2485  0014A4  EF59  F00A         	goto	l2036
  2486  0014A8                     u890:
  2487  0014A8  5007               	movf	___lwdiv@divisor^0,w,c
  2488  0014AA  5E05               	subwf	___lwdiv@dividend^0,f,c
  2489  0014AC  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  2490  0014AE  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2491  0014B0  8009               	bsf	___lwdiv@quotient^0,0,c
  2492  0014B2                     l2036:
  2493  0014B2  90D8               	bcf	status,0,c
  2494  0014B4  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2495  0014B6  3207               	rrcf	___lwdiv@divisor^0,f,c
  2496  0014B8  2E0B               	decfsz	___lwdiv@counter^0,f,c
  2497  0014BA  EF46  F00A         	goto	l2028
  2498  0014BE                     l913:
  2499  0014BE  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
  2500  0014C2  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2501  0014C6  0012               	return		;funcret
  2502  0014C8                     __end_of___lwdiv:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _manda_AT_COMANDO *****************
  2506 ;; Defined at:
  2507 ;;		line 235 in file "Librerias/esp8266.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  coman           2   29[COMRAM] PTR unsigned char 
  2510 ;;		 -> STR_29(14), STR_24(14), modbus_tx(50), STR_13(9), 
  2511 ;;		 -> STR_10(12), STR_7(36), STR_4(12), STR_1(5), 
  2512 ;;  cap             2   31[COMRAM] PTR unsigned char 
  2513 ;;		 -> STR_32(3), STR_30(3), STR_27(3), STR_25(3), 
  2514 ;;		 -> STR_14(3), STR_11(3), STR_8(3), STR_5(3), 
  2515 ;;		 -> STR_2(3), 
  2516 ;;  cap1            2   33[COMRAM] PTR unsigned char 
  2517 ;;		 -> STR_33(7), STR_31(3), STR_28(8), STR_26(3), 
  2518 ;;		 -> STR_15(3), STR_12(3), STR_9(3), STR_6(10), 
  2519 ;;		 -> STR_3(6), 
  2520 ;;  retardo         2   35[COMRAM] unsigned int 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      unsigned char 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2532 ;;      Params:         8       0       0       0       0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2535 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2536 ;;Total ram usage:        8 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 5
  2539 ;; This function calls:
  2540 ;;		_EUSART1_Write_string
  2541 ;;		_Uart1_write_text_const
  2542 ;;		_tiempo
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;;		_conecta
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text10
  2550  0016BC                     __ptext10:
  2551                           	callstack 0
  2552  0016BC                     _manda_AT_COMANDO:
  2553                           	callstack 25
  2554  0016BC                     
  2555                           ;esp8266.c: 238: EUSART1_Write_string(coman);
  2556  0016BC  C01E  F006         	movff	manda_AT_COMANDO@coman,EUSART1_Write_string@data
  2557  0016C0  C01F  F007         	movff	manda_AT_COMANDO@coman+1,EUSART1_Write_string@data+1
  2558  0016C4  EC96  F00A         	call	_EUSART1_Write_string	;wreg free
  2559  0016C8                     
  2560                           ;esp8266.c: 239: Uart1_write_text_const("\r\n");
  2561  0016C8  0E69               	movlw	low (STR_24+11)
  2562  0016CA  6E06               	movwf	Uart1_write_text_const@info^0,c
  2563  0016CC  0E08               	movlw	high (STR_24+11)
  2564  0016CE  6E07               	movwf	(Uart1_write_text_const@info+1)^0,c
  2565  0016D0  5006               	movf	Uart1_write_text_const@info^0,w,c
  2566  0016D2  1007               	iorwf	(Uart1_write_text_const@info+1)^0,w,c
  2567  0016D4  A4D8               	btfss	status,2,c
  2568  0016D6  0E00               	movlw	low (__mediumconst shr (0+16))
  2569  0016D8  6E08               	movwf	(Uart1_write_text_const@info+2)^0,c
  2570  0016DA  EC3B  F00B         	call	_Uart1_write_text_const	;wreg free
  2571  0016DE                     
  2572                           ;esp8266.c: 240: return (tiempo(retardo,cap,cap1));
  2573  0016DE  C024  F014         	movff	manda_AT_COMANDO@retardo,tiempo@milis
  2574  0016E2  C025  F015         	movff	manda_AT_COMANDO@retardo+1,tiempo@milis+1
  2575  0016E6  C020  F016         	movff	manda_AT_COMANDO@cap,tiempo@cap
  2576  0016EA  C021  F017         	movff	manda_AT_COMANDO@cap+1,tiempo@cap+1
  2577  0016EE  C022  F018         	movff	manda_AT_COMANDO@cap1,tiempo@cap1
  2578  0016F2  C023  F019         	movff	manda_AT_COMANDO@cap1+1,tiempo@cap1+1
  2579  0016F6  ECC6  F008         	call	_tiempo	;wreg free
  2580  0016FA  0012               	return		;funcret
  2581  0016FC                     __end_of_manda_AT_COMANDO:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _tiempo *****************
  2585 ;; Defined at:
  2586 ;;		line 52 in file "Librerias/esp8266.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  milis           2   19[COMRAM] unsigned int 
  2589 ;;  cap             2   21[COMRAM] PTR unsigned char 
  2590 ;;		 -> STR_32(3), STR_30(3), STR_27(3), STR_25(3), 
  2591 ;;		 -> STR_14(3), STR_11(3), STR_8(3), STR_5(3), 
  2592 ;;		 -> STR_2(3), 
  2593 ;;  cap1            2   23[COMRAM] PTR unsigned char 
  2594 ;;		 -> STR_33(7), STR_31(3), STR_28(8), STR_26(3), 
  2595 ;;		 -> STR_15(3), STR_12(3), STR_9(3), STR_6(10), 
  2596 ;;		 -> STR_3(6), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  cont1           2   27[COMRAM] unsigned int 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      unsigned char 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2608 ;;      Params:         6       0       0       0       0       0       0       0       0
  2609 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2610 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2611 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2612 ;;Total ram usage:       10 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 4
  2615 ;; This function calls:
  2616 ;;		_memset
  2617 ;;		_strstr
  2618 ;; This function is called by:
  2619 ;;		_manda_AT_COMANDO
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text11
  2624  00118C                     __ptext11:
  2625                           	callstack 0
  2626  00118C                     _tiempo:
  2627                           	callstack 25
  2628  00118C                     
  2629                           ;esp8266.c: 54: unsigned int cont1;;esp8266.c: 55: estado_rec=normal;
  2630  00118C  0E00               	movlw	0
  2631  00118E  6E58               	movwf	_estado_rec^0,c
  2632                           
  2633                           ;esp8266.c: 56: trama_cont=0;
  2634  001190  0E00               	movlw	0
  2635  001192  6E57               	movwf	_trama_cont^0,c
  2636  001194                     
  2637                           ;esp8266.c: 57: memset(modbus_rx,0,50);
  2638  001194  0EA0               	movlw	low _modbus_rx
  2639  001196  6E05               	movwf	memset@p1^0,c
  2640  001198  0E00               	movlw	high _modbus_rx
  2641  00119A  6E06               	movwf	(memset@p1+1)^0,c
  2642  00119C  0E00               	movlw	0
  2643  00119E  6E08               	movwf	(memset@c+1)^0,c
  2644  0011A0  0E00               	movlw	0
  2645  0011A2  6E07               	movwf	memset@c^0,c
  2646  0011A4  0E00               	movlw	0
  2647  0011A6  6E0A               	movwf	(memset@n+1)^0,c
  2648  0011A8  0E32               	movlw	50
  2649  0011AA  6E09               	movwf	memset@n^0,c
  2650  0011AC  ECBA  F00B         	call	_memset	;wreg free
  2651  0011B0                     
  2652                           ;esp8266.c: 58: PIR1bits.RC1IF = 0;
  2653  0011B0  9A9E               	bcf	158,5,c	;volatile
  2654  0011B2                     
  2655                           ;esp8266.c: 60: CREN = 0;
  2656  0011B2  98AB               	bcf	4011,4,c	;volatile
  2657  0011B4                     
  2658                           ;esp8266.c: 61: CREN = 1;
  2659  0011B4  88AB               	bsf	4011,4,c	;volatile
  2660  0011B6                     
  2661                           ;esp8266.c: 62: PIE1bits.RC1IE = 1;
  2662  0011B6  8A9D               	bsf	157,5,c	;volatile
  2663  0011B8                     
  2664                           ;esp8266.c: 63: _delay((unsigned long)((50)*(48000000/4000.0)));
  2665  0011B8  0E04               	movlw	4
  2666  0011BA  6E1B               	movwf	(??_tiempo+1)^0,c
  2667  0011BC  0E0C               	movlw	12
  2668  0011BE  6E1A               	movwf	??_tiempo^0,c
  2669  0011C0  0E34               	movlw	52
  2670  0011C2                     u1497:
  2671  0011C2  2EE8               	decfsz	wreg,f,c
  2672  0011C4  D7FE               	bra	u1497
  2673  0011C6  2E1A               	decfsz	??_tiempo^0,f,c
  2674  0011C8  D7FC               	bra	u1497
  2675  0011CA  2E1B               	decfsz	(??_tiempo+1)^0,f,c
  2676  0011CC  D7FA               	bra	u1497
  2677  0011CE                     
  2678                           ;esp8266.c: 66: for (cont1=1;cont1<=milis;cont1++)
  2679  0011CE  0E00               	movlw	0
  2680  0011D0  6E1D               	movwf	(tiempo@cont1+1)^0,c
  2681  0011D2  0E01               	movlw	1
  2682  0011D4  6E1C               	movwf	tiempo@cont1^0,c
  2683  0011D6  EF35  F009         	goto	l2116
  2684  0011DA                     l2094:
  2685                           
  2686                           ;esp8266.c: 67: {;esp8266.c: 68: _delay((unsigned long)((1)*(48000000/4000.0)));
  2687  0011DA  0E10               	movlw	16
  2688  0011DC  6E1A               	movwf	??_tiempo^0,c
  2689  0011DE  0E94               	movlw	148
  2690  0011E0                     u1507:
  2691  0011E0  2EE8               	decfsz	wreg,f,c
  2692  0011E2  D7FE               	bra	u1507
  2693  0011E4  2E1A               	decfsz	??_tiempo^0,f,c
  2694  0011E6  D7FC               	bra	u1507
  2695  0011E8  D000               	nop2	
  2696  0011EA                     
  2697                           ;esp8266.c: 70: if (strstr(modbus_rx,cap))
  2698  0011EA  0EA0               	movlw	low _modbus_rx
  2699  0011EC  6E10               	movwf	strstr@s1^0,c
  2700  0011EE  0E00               	movlw	high _modbus_rx
  2701  0011F0  6E11               	movwf	(strstr@s1+1)^0,c
  2702  0011F2  C016  F012         	movff	tiempo@cap,strstr@s2
  2703  0011F6  C017  F013         	movff	tiempo@cap+1,strstr@s2+1
  2704  0011FA  EC43  F009         	call	_strstr	;wreg free
  2705  0011FE  5010               	movf	?_strstr^0,w,c
  2706  001200  1011               	iorwf	(?_strstr+1)^0,w,c
  2707  001202  B4D8               	btfsc	status,2,c
  2708  001204  EF06  F009         	goto	u971
  2709  001208  EF08  F009         	goto	u970
  2710  00120C                     u971:
  2711  00120C  EF14  F009         	goto	l2106
  2712  001210                     u970:
  2713  001210                     
  2714                           ;esp8266.c: 71: {;esp8266.c: 72: RCIE=0;
  2715  001210  9A9D               	bcf	3997,5,c	;volatile
  2716  001212                     
  2717                           ;esp8266.c: 73: _delay((unsigned long)((10)*(48000000/4000.0)));
  2718  001212  0E9C               	movlw	156
  2719  001214  6E1A               	movwf	??_tiempo^0,c
  2720  001216  0ED7               	movlw	215
  2721  001218                     u1517:
  2722  001218  2EE8               	decfsz	wreg,f,c
  2723  00121A  D7FE               	bra	u1517
  2724  00121C  2E1A               	decfsz	??_tiempo^0,f,c
  2725  00121E  D7FC               	bra	u1517
  2726  001220  F000               	nop	
  2727                           
  2728                           ;esp8266.c: 74: return(1);
  2729  001222  0E01               	movlw	1
  2730  001224  EF42  F009         	goto	l312
  2731  001228                     l2106:
  2732                           
  2733                           ;esp8266.c: 76: else if (strstr(modbus_rx,cap1) )
  2734  001228  0EA0               	movlw	low _modbus_rx
  2735  00122A  6E10               	movwf	strstr@s1^0,c
  2736  00122C  0E00               	movlw	high _modbus_rx
  2737  00122E  6E11               	movwf	(strstr@s1+1)^0,c
  2738  001230  C018  F012         	movff	tiempo@cap1,strstr@s2
  2739  001234  C019  F013         	movff	tiempo@cap1+1,strstr@s2+1
  2740  001238  EC43  F009         	call	_strstr	;wreg free
  2741  00123C  5010               	movf	?_strstr^0,w,c
  2742  00123E  1011               	iorwf	(?_strstr+1)^0,w,c
  2743  001240  B4D8               	btfsc	status,2,c
  2744  001242  EF25  F009         	goto	u981
  2745  001246  EF27  F009         	goto	u980
  2746  00124A                     u981:
  2747  00124A  EF33  F009         	goto	l2114
  2748  00124E                     u980:
  2749  00124E                     
  2750                           ;esp8266.c: 77: {;esp8266.c: 78: RCIE=0;
  2751  00124E  9A9D               	bcf	3997,5,c	;volatile
  2752  001250                     
  2753                           ;esp8266.c: 79: _delay((unsigned long)((10)*(48000000/4000.0)));
  2754  001250  0E9C               	movlw	156
  2755  001252  6E1A               	movwf	??_tiempo^0,c
  2756  001254  0ED7               	movlw	215
  2757  001256                     u1527:
  2758  001256  2EE8               	decfsz	wreg,f,c
  2759  001258  D7FE               	bra	u1527
  2760  00125A  2E1A               	decfsz	??_tiempo^0,f,c
  2761  00125C  D7FC               	bra	u1527
  2762  00125E  F000               	nop	
  2763                           
  2764                           ;esp8266.c: 80: return(2);
  2765  001260  0E02               	movlw	2
  2766  001262  EF42  F009         	goto	l312
  2767  001266                     l2114:
  2768  001266  4A1C               	infsnz	tiempo@cont1^0,f,c
  2769  001268  2A1D               	incf	(tiempo@cont1+1)^0,f,c
  2770  00126A                     l2116:
  2771  00126A  501C               	movf	tiempo@cont1^0,w,c
  2772  00126C  5C14               	subwf	tiempo@milis^0,w,c
  2773  00126E  501D               	movf	(tiempo@cont1+1)^0,w,c
  2774  001270  5815               	subwfb	(tiempo@milis+1)^0,w,c
  2775  001272  B0D8               	btfsc	status,0,c
  2776  001274  EF3E  F009         	goto	u991
  2777  001278  EF40  F009         	goto	u990
  2778  00127C                     u991:
  2779  00127C  EFED  F008         	goto	l2094
  2780  001280                     u990:
  2781  001280                     
  2782                           ;esp8266.c: 81: };esp8266.c: 82: };esp8266.c: 84: PIE1bits.RC1IE = 0;
  2783  001280  9A9D               	bcf	157,5,c	;volatile
  2784  001282                     
  2785                           ;esp8266.c: 85: return(0);
  2786  001282  0E00               	movlw	0
  2787  001284                     l312:
  2788  001284  0012               	return		;funcret
  2789  001286                     __end_of_tiempo:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _strstr *****************
  2793 ;; Defined at:
  2794 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strstr.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  2797 ;;		 -> NULL(0), modbus_rx(50), 
  2798 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  2799 ;;		 -> STR_33(7), STR_32(3), STR_31(3), STR_30(3), 
  2800 ;;		 -> STR_28(8), STR_27(3), STR_26(3), STR_25(3), 
  2801 ;;		 -> STR_15(3), STR_14(3), STR_12(3), STR_11(3), 
  2802 ;;		 -> STR_9(3), STR_8(3), STR_6(10), STR_5(3), 
  2803 ;;		 -> STR_3(6), STR_2(3), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2   15[COMRAM] PTR unsigned char 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2815 ;;      Params:         4       0       0       0       0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2818 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2819 ;;Total ram usage:        4 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 3
  2822 ;; This function calls:
  2823 ;;		_strchr
  2824 ;;		_strlen
  2825 ;;		_strncmp
  2826 ;; This function is called by:
  2827 ;;		_tiempo
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text12
  2832  001286                     __ptext12:
  2833                           	callstack 0
  2834  001286                     _strstr:
  2835                           	callstack 25
  2836  001286  EF7C  F009         	goto	l1992
  2837  00128A                     l1984:
  2838  00128A  C010  F009         	movff	strstr@s1,strncmp@s1
  2839  00128E  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
  2840  001292  C012  F00B         	movff	strstr@s2,strncmp@s2
  2841  001296  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
  2842  00129A  C012  F005         	movff	strstr@s2,strlen@s
  2843  00129E  C013  F006         	movff	strstr@s2+1,strlen@s+1
  2844  0012A2  EC9D  F00B         	call	_strlen	;wreg free
  2845  0012A6  C005  F00D         	movff	?_strlen,strncmp@len
  2846  0012AA  C006  F00E         	movff	?_strlen+1,strncmp@len+1
  2847  0012AE  EC96  F009         	call	_strncmp	;wreg free
  2848  0012B2  5009               	movf	?_strncmp^0,w,c
  2849  0012B4  100A               	iorwf	(?_strncmp+1)^0,w,c
  2850  0012B6  A4D8               	btfss	status,2,c
  2851  0012B8  EF60  F009         	goto	u821
  2852  0012BC  EF62  F009         	goto	u820
  2853  0012C0                     u821:
  2854  0012C0  EF68  F009         	goto	l1990
  2855  0012C4                     u820:
  2856  0012C4  C010  F010         	movff	strstr@s1,?_strstr
  2857  0012C8  C011  F011         	movff	strstr@s1+1,?_strstr+1
  2858  0012CC  EF95  F009         	goto	l1122
  2859  0012D0                     l1990:
  2860  0012D0  0E01               	movlw	1
  2861  0012D2  2410               	addwf	strstr@s1^0,w,c
  2862  0012D4  6E05               	movwf	strchr@ptr^0,c
  2863  0012D6  0E00               	movlw	0
  2864  0012D8  2011               	addwfc	(strstr@s1+1)^0,w,c
  2865  0012DA  6E06               	movwf	(strchr@ptr+1)^0,c
  2866  0012DC  C012  FFF6         	movff	strstr@s2,tblptrl
  2867  0012E0  C013  FFF7         	movff	strstr@s2+1,tblptrh
  2868  0012E4                     	if	0	;tblptru may be non-zero
  2869  0012E4                     	endif
  2870  0012E4                     	if	0	;tblptru may be non-zero
  2871  0012E4                     	endif
  2872  0012E4  0008               	tblrd		*
  2873  0012E6  50F5               	movf	tablat,w,c
  2874  0012E8  6E07               	movwf	strchr@chr^0,c
  2875  0012EA  6A08               	clrf	(strchr@chr+1)^0,c
  2876  0012EC  ECF0  F00A         	call	_strchr	;wreg free
  2877  0012F0  C005  F010         	movff	?_strchr,strstr@s1
  2878  0012F4  C006  F011         	movff	?_strchr+1,strstr@s1+1
  2879  0012F8                     l1992:
  2880  0012F8  5010               	movf	strstr@s1^0,w,c
  2881  0012FA  1011               	iorwf	(strstr@s1+1)^0,w,c
  2882  0012FC  B4D8               	btfsc	status,2,c
  2883  0012FE  EF83  F009         	goto	u831
  2884  001302  EF85  F009         	goto	u830
  2885  001306                     u831:
  2886  001306  EF91  F009         	goto	l1996
  2887  00130A                     u830:
  2888  00130A  C010  FFD9         	movff	strstr@s1,fsr2l
  2889  00130E  C011  FFDA         	movff	strstr@s1+1,fsr2h
  2890  001312  50DF               	movf	indf2,w,c
  2891  001314  A4D8               	btfss	status,2,c
  2892  001316  EF8F  F009         	goto	u841
  2893  00131A  EF91  F009         	goto	u840
  2894  00131E                     u841:
  2895  00131E  EF45  F009         	goto	l1984
  2896  001322                     u840:
  2897  001322                     l1996:
  2898  001322  0E00               	movlw	0
  2899  001324  6E10               	movwf	?_strstr^0,c
  2900  001326  0E00               	movlw	0
  2901  001328  6E11               	movwf	(?_strstr+1)^0,c
  2902  00132A                     l1122:
  2903  00132A  0012               	return		;funcret
  2904  00132C                     __end_of_strstr:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _strncmp *****************
  2908 ;; Defined at:
  2909 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strncmp.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  s1              2    8[COMRAM] PTR const unsigned char 
  2912 ;;		 -> NULL(0), modbus_rx(50), 
  2913 ;;  s2              2   10[COMRAM] PTR const unsigned char 
  2914 ;;		 -> STR_33(7), STR_32(3), STR_31(3), STR_30(3), 
  2915 ;;		 -> STR_28(8), STR_27(3), STR_26(3), STR_25(3), 
  2916 ;;		 -> STR_15(3), STR_14(3), STR_12(3), STR_11(3), 
  2917 ;;		 -> STR_9(3), STR_8(3), STR_6(10), STR_5(3), 
  2918 ;;		 -> STR_3(6), STR_2(3), 
  2919 ;;  len             2   12[COMRAM] unsigned int 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2    8[COMRAM] int 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2931 ;;      Params:         6       0       0       0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2933 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2934 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2935 ;;Total ram usage:        7 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 2
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_strstr
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text13
  2946  00132C                     __ptext13:
  2947                           	callstack 0
  2948  00132C                     _strncmp:
  2949                           	callstack 25
  2950  00132C  EFCF  F009         	goto	l1952
  2951  001330                     l1942:
  2952  001330  C009  FFD9         	movff	strncmp@s1,fsr2l
  2953  001334  C00A  FFDA         	movff	strncmp@s1+1,fsr2h
  2954  001338  50DF               	movf	indf2,w,c
  2955  00133A  B4D8               	btfsc	status,2,c
  2956  00133C  EFA2  F009         	goto	u751
  2957  001340  EFA4  F009         	goto	u750
  2958  001344                     u751:
  2959  001344  EFB8  F009         	goto	l1946
  2960  001348                     u750:
  2961  001348  C009  FFD9         	movff	strncmp@s1,fsr2l
  2962  00134C  C00A  FFDA         	movff	strncmp@s1+1,fsr2h
  2963  001350  50DF               	movf	indf2,w,c
  2964  001352  6E0F               	movwf	??_strncmp^0,c
  2965  001354  C00B  FFF6         	movff	strncmp@s2,tblptrl
  2966  001358  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  2967  00135C                     	if	0	;tblptru may be non-zero
  2968  00135C                     	endif
  2969  00135C                     	if	0	;tblptru may be non-zero
  2970  00135C                     	endif
  2971  00135C  0008               	tblrd		*
  2972  00135E  50F5               	movf	tablat,w,c
  2973  001360  180F               	xorwf	??_strncmp^0,w,c
  2974  001362  B4D8               	btfsc	status,2,c
  2975  001364  EFB6  F009         	goto	u761
  2976  001368  EFB8  F009         	goto	u760
  2977  00136C                     u761:
  2978  00136C  EFCB  F009         	goto	l1950
  2979  001370                     u760:
  2980  001370                     l1946:
  2981  001370  C009  FFD9         	movff	strncmp@s1,fsr2l
  2982  001374  C00A  FFDA         	movff	strncmp@s1+1,fsr2h
  2983  001378  50DF               	movf	indf2,w,c
  2984  00137A  6E0F               	movwf	??_strncmp^0,c
  2985  00137C  C00B  FFF6         	movff	strncmp@s2,tblptrl
  2986  001380  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  2987  001384                     	if	0	;tblptru may be non-zero
  2988  001384                     	endif
  2989  001384                     	if	0	;tblptru may be non-zero
  2990  001384                     	endif
  2991  001384  0008               	tblrd		*
  2992  001386  50F5               	movf	tablat,w,c
  2993  001388  5C0F               	subwf	??_strncmp^0,w,c
  2994  00138A  6E09               	movwf	?_strncmp^0,c
  2995  00138C  6A0A               	clrf	(?_strncmp+1)^0,c
  2996  00138E  A0D8               	btfss	status,0,c
  2997  001390  060A               	decf	(?_strncmp+1)^0,f,c
  2998  001392  EFE0  F009         	goto	l1139
  2999  001396                     l1950:
  3000  001396  4A09               	infsnz	strncmp@s1^0,f,c
  3001  001398  2A0A               	incf	(strncmp@s1+1)^0,f,c
  3002  00139A  4A0B               	infsnz	strncmp@s2^0,f,c
  3003  00139C  2A0C               	incf	(strncmp@s2+1)^0,f,c
  3004  00139E                     l1952:
  3005  00139E  060D               	decf	strncmp@len^0,f,c
  3006  0013A0  A0D8               	btfss	status,0,c
  3007  0013A2  060E               	decf	(strncmp@len+1)^0,f,c
  3008  0013A4  280D               	incf	strncmp@len^0,w,c
  3009  0013A6  E106               	bnz	u771
  3010  0013A8  280E               	incf	(strncmp@len+1)^0,w,c
  3011  0013AA  A4D8               	btfss	status,2,c
  3012  0013AC  EFDA  F009         	goto	u771
  3013  0013B0  EFDC  F009         	goto	u770
  3014  0013B4                     u771:
  3015  0013B4  EF98  F009         	goto	l1942
  3016  0013B8                     u770:
  3017  0013B8  0E00               	movlw	0
  3018  0013BA  6E0A               	movwf	(?_strncmp+1)^0,c
  3019  0013BC  0E00               	movlw	0
  3020  0013BE  6E09               	movwf	?_strncmp^0,c
  3021  0013C0                     l1139:
  3022  0013C0  0012               	return		;funcret
  3023  0013C2                     __end_of_strncmp:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _strlen *****************
  3027 ;; Defined at:
  3028 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3031 ;;		 -> STR_33(7), STR_32(3), STR_31(3), STR_30(3), 
  3032 ;;		 -> STR_28(8), STR_27(3), STR_26(3), STR_25(3), 
  3033 ;;		 -> STR_15(3), STR_14(3), STR_12(3), STR_11(3), 
  3034 ;;		 -> STR_9(3), STR_8(3), STR_6(10), STR_5(3), 
  3035 ;;		 -> STR_3(6), STR_2(3), 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  cp              2    6[COMRAM] PTR const unsigned char 
  3038 ;;		 -> STR_33(7), STR_32(3), STR_31(3), STR_30(3), 
  3039 ;;		 -> STR_28(8), STR_27(3), STR_26(3), STR_25(3), 
  3040 ;;		 -> STR_15(3), STR_14(3), STR_12(3), STR_11(3), 
  3041 ;;		 -> STR_9(3), STR_8(3), STR_6(10), STR_5(3), 
  3042 ;;		 -> STR_3(6), STR_2(3), 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2    4[COMRAM] unsigned int 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3052 ;;      Params:         2       0       0       0       0       0       0       0       0
  3053 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3055 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3056 ;;Total ram usage:        4 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 2
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_strstr
  3063 ;;		_manda_esp8266
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text14
  3068  00173A                     __ptext14:
  3069                           	callstack 0
  3070  00173A                     _strlen:
  3071                           	callstack 25
  3072  00173A  C005  F007         	movff	strlen@s,strlen@cp
  3073  00173E  C006  F008         	movff	strlen@s+1,strlen@cp+1
  3074  001742  EFA5  F00B         	goto	l1934
  3075  001746                     l1932:
  3076  001746  4A07               	infsnz	strlen@cp^0,f,c
  3077  001748  2A08               	incf	(strlen@cp+1)^0,f,c
  3078  00174A                     l1934:
  3079  00174A  C007  FFF6         	movff	strlen@cp,tblptrl
  3080  00174E  C008  FFF7         	movff	strlen@cp+1,tblptrh
  3081  001752                     	if	0	;tblptru may be non-zero
  3082  001752                     	endif
  3083  001752                     	if	0	;tblptru may be non-zero
  3084  001752                     	endif
  3085  001752  0008               	tblrd		*
  3086  001754  50F5               	movf	tablat,w,c
  3087  001756  0900               	iorlw	0
  3088  001758  A4D8               	btfss	status,2,c
  3089  00175A  EFB1  F00B         	goto	u741
  3090  00175E  EFB3  F00B         	goto	u740
  3091  001762                     u741:
  3092  001762  EFA3  F00B         	goto	l1932
  3093  001766                     u740:
  3094  001766  5005               	movf	strlen@s^0,w,c
  3095  001768  5C07               	subwf	strlen@cp^0,w,c
  3096  00176A  6E05               	movwf	?_strlen^0,c
  3097  00176C  5006               	movf	(strlen@s+1)^0,w,c
  3098  00176E  5808               	subwfb	(strlen@cp+1)^0,w,c
  3099  001770  6E06               	movwf	(?_strlen+1)^0,c
  3100  001772  0012               	return		;funcret
  3101  001774                     __end_of_strlen:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function _strchr *****************
  3105 ;; Defined at:
  3106 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strchr.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  3109 ;;		 -> NULL(0), modbus_rx(50), 
  3110 ;;  chr             2    6[COMRAM] int 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2    4[COMRAM] PTR unsigned char 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3122 ;;      Params:         4       0       0       0       0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3124 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3125 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3126 ;;Total ram usage:        5 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 2
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_strstr
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text15
  3137  0015E0                     __ptext15:
  3138                           	callstack 0
  3139  0015E0                     _strchr:
  3140                           	callstack 25
  3141  0015E0                     l1128:
  3142  0015E0  C005  FFD9         	movff	strchr@ptr,fsr2l
  3143  0015E4  C006  FFDA         	movff	strchr@ptr+1,fsr2h
  3144  0015E8  5007               	movf	strchr@chr^0,w,c
  3145  0015EA  18DE               	xorwf	postinc2,w,c
  3146  0015EC  A4D8               	btfss	status,2,c
  3147  0015EE  EFFB  F00A         	goto	u781
  3148  0015F2  EFFD  F00A         	goto	u780
  3149  0015F6                     u781:
  3150  0015F6  EF03  F00B         	goto	l1964
  3151  0015FA                     u780:
  3152  0015FA  C005  F005         	movff	strchr@ptr,?_strchr
  3153  0015FE  C006  F006         	movff	strchr@ptr+1,?_strchr+1
  3154  001602  EF15  F00B         	goto	l1130
  3155  001606                     l1964:
  3156  001606  C005  FFD9         	movff	strchr@ptr,fsr2l
  3157  00160A  C006  FFDA         	movff	strchr@ptr+1,fsr2h
  3158  00160E  4A05               	infsnz	strchr@ptr^0,f,c
  3159  001610  2A06               	incf	(strchr@ptr+1)^0,f,c
  3160  001612  50DF               	movf	indf2,w,c
  3161  001614  A4D8               	btfss	status,2,c
  3162  001616  EF0F  F00B         	goto	u791
  3163  00161A  EF11  F00B         	goto	u790
  3164  00161E                     u791:
  3165  00161E  EFF0  F00A         	goto	l1128
  3166  001622                     u790:
  3167  001622  0E00               	movlw	0
  3168  001624  6E05               	movwf	?_strchr^0,c
  3169  001626  0E00               	movlw	0
  3170  001628  6E06               	movwf	(?_strchr+1)^0,c
  3171  00162A                     l1130:
  3172  00162A  0012               	return		;funcret
  3173  00162C                     __end_of_strchr:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _memset *****************
  3177 ;; Defined at:
  3178 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memset.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  p1              2    4[COMRAM] PTR void 
  3181 ;;		 -> modbus_rx(50), modbus_tx(50), 
  3182 ;;  c               2    6[COMRAM] int 
  3183 ;;  n               2    8[COMRAM] unsigned int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  p               2   10[COMRAM] PTR unsigned char 
  3186 ;;		 -> modbus_rx(50), modbus_tx(50), 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2    4[COMRAM] PTR void 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3196 ;;      Params:         6       0       0       0       0       0       0       0       0
  3197 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3199 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3200 ;;Total ram usage:        8 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 2
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_tiempo
  3207 ;;		_conecta
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text16
  3212  001774                     __ptext16:
  3213                           	callstack 0
  3214  001774                     _memset:
  3215                           	callstack 26
  3216  001774  C005  F00B         	movff	memset@p1,memset@p
  3217  001778  C006  F00C         	movff	memset@p1+1,memset@p+1
  3218  00177C  EFC8  F00B         	goto	l1980
  3219  001780                     l1976:
  3220  001780  C00B  FFD9         	movff	memset@p,fsr2l
  3221  001784  C00C  FFDA         	movff	memset@p+1,fsr2h
  3222  001788  C007  FFDF         	movff	memset@c,indf2
  3223  00178C  4A0B               	infsnz	memset@p^0,f,c
  3224  00178E  2A0C               	incf	(memset@p+1)^0,f,c
  3225  001790                     l1980:
  3226  001790  0609               	decf	memset@n^0,f,c
  3227  001792  A0D8               	btfss	status,0,c
  3228  001794  060A               	decf	(memset@n+1)^0,f,c
  3229  001796  2809               	incf	memset@n^0,w,c
  3230  001798  E106               	bnz	u811
  3231  00179A  280A               	incf	(memset@n+1)^0,w,c
  3232  00179C  A4D8               	btfss	status,2,c
  3233  00179E  EFD3  F00B         	goto	u811
  3234  0017A2  EFD5  F00B         	goto	u810
  3235  0017A6                     u811:
  3236  0017A6  EFC0  F00B         	goto	l1976
  3237  0017AA                     u810:
  3238  0017AA  0012               	return		;funcret
  3239  0017AC                     __end_of_memset:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _Uart1_write_text_const *****************
  3243 ;; Defined at:
  3244 ;;		line 46 in file "Librerias/esp8266.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  info            3    5[COMRAM] PTR const unsigned char 
  3247 ;;		 -> ROM(32767), STR_20(3), STR_18(12), STR_17(3), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3259 ;;      Params:         3       0       0       0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3262 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3263 ;;Total ram usage:        3 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 3
  3266 ;; This function calls:
  3267 ;;		_EUSART1_Write
  3268 ;; This function is called by:
  3269 ;;		_manda_AT_COMANDO
  3270 ;;		_manda_esp8266_const
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text17
  3275  001676                     __ptext17:
  3276                           	callstack 0
  3277  001676                     _Uart1_write_text_const:
  3278                           	callstack 26
  3279  001676                     
  3280                           ;esp8266.c: 48: while(*info) EUSART1_Write(*info++);
  3281  001676  EF4D  F00B         	goto	l2076
  3282  00167A                     l2072:
  3283  00167A  C006  FFF6         	movff	Uart1_write_text_const@info,tblptrl
  3284  00167E  C007  FFF7         	movff	Uart1_write_text_const@info+1,tblptrh
  3285  001682  C008  FFF8         	movff	Uart1_write_text_const@info+2,tblptru
  3286  001686  0008               	tblrd		*
  3287  001688  50F5               	movf	tablat,w,c
  3288  00168A  EC3C  F00C         	call	_EUSART1_Write
  3289  00168E  0E01               	movlw	1
  3290  001690  2606               	addwf	Uart1_write_text_const@info^0,f,c
  3291  001692  0E00               	movlw	0
  3292  001694  2207               	addwfc	(Uart1_write_text_const@info+1)^0,f,c
  3293  001696  0E00               	movlw	0
  3294  001698  2208               	addwfc	(Uart1_write_text_const@info+2)^0,f,c
  3295  00169A                     l2076:
  3296  00169A  C006  FFF6         	movff	Uart1_write_text_const@info,tblptrl
  3297  00169E  C007  FFF7         	movff	Uart1_write_text_const@info+1,tblptrh
  3298  0016A2  C008  FFF8         	movff	Uart1_write_text_const@info+2,tblptru
  3299  0016A6  0008               	tblrd		*
  3300  0016A8  50F5               	movf	tablat,w,c
  3301  0016AA  0900               	iorlw	0
  3302  0016AC  A4D8               	btfss	status,2,c
  3303  0016AE  EF5B  F00B         	goto	u961
  3304  0016B2  EF5D  F00B         	goto	u960
  3305  0016B6                     u961:
  3306  0016B6  EF3D  F00B         	goto	l2072
  3307  0016BA                     u960:
  3308  0016BA  0012               	return		;funcret
  3309  0016BC                     __end_of_Uart1_write_text_const:
  3310                           	callstack 0
  3311                           
  3312 ;; *************** function _EUSART1_Write_string *****************
  3313 ;; Defined at:
  3314 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  data            2    5[COMRAM] PTR const unsigned char 
  3317 ;;		 -> STR_29(14), STR_24(14), captu1(30), modbus_tx(50), 
  3318 ;;		 -> STR_13(9), STR_10(12), STR_7(36), STR_4(12), 
  3319 ;;		 -> STR_1(5), 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3331 ;;      Params:         2       0       0       0       0       0       0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3334 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3335 ;;Total ram usage:        2 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 3
  3338 ;; This function calls:
  3339 ;;		_EUSART1_Write
  3340 ;; This function is called by:
  3341 ;;		_manda_AT_COMANDO
  3342 ;;		_manda_esp8266_bytes
  3343 ;;		_manda_esp8266_const
  3344 ;;		_manda_esp8266
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text18
  3349  00152C                     __ptext18:
  3350                           	callstack 0
  3351  00152C                     _EUSART1_Write_string:
  3352                           	callstack 25
  3353  00152C                     
  3354                           ;eusart1.c: 143: while(*data != 0)
  3355  00152C  EFAC  F00A         	goto	l2068
  3356  001530                     l2064:
  3357                           
  3358                           ;eusart1.c: 144: {;eusart1.c: 145: EUSART1_Write(*data++);
  3359  001530  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3360  001534  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3361  001538  6AF8               	clrf	tblptru,c
  3362  00153A  0E07               	movlw	(high __ramtop+-1)
  3363  00153C  64F7               	cpfsgt	tblptrh,c
  3364  00153E  D003               	bra	u937
  3365  001540  0008               	tblrd		*
  3366  001542  50F5               	movf	tablat,w,c
  3367  001544  D005               	bra	u930
  3368  001546                     u937:
  3369  001546  CFF6 FFE1          	movff	tblptrl,fsr1l
  3370  00154A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3371  00154E  50E7               	movf	indf1,w,c
  3372  001550                     u930:
  3373  001550  EC3C  F00C         	call	_EUSART1_Write
  3374  001554  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  3375  001556  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  3376  001558                     l2068:
  3377  001558  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3378  00155C  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3379  001560  6AF8               	clrf	tblptru,c
  3380  001562  0E07               	movlw	(high __ramtop+-1)
  3381  001564  64F7               	cpfsgt	tblptrh,c
  3382  001566  D003               	bra	u947
  3383  001568  0008               	tblrd		*
  3384  00156A  50F5               	movf	tablat,w,c
  3385  00156C  D005               	bra	u940
  3386  00156E                     u947:
  3387  00156E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3388  001572  CFF7 FFE2          	movff	tblptrh,fsr1h
  3389  001576  50E7               	movf	indf1,w,c
  3390  001578                     u940:
  3391  001578  0900               	iorlw	0
  3392  00157A  A4D8               	btfss	status,2,c
  3393  00157C  EFC2  F00A         	goto	u951
  3394  001580  EFC4  F00A         	goto	u950
  3395  001584                     u951:
  3396  001584  EF98  F00A         	goto	l2064
  3397  001588                     u950:
  3398  001588  0012               	return		;funcret
  3399  00158A                     __end_of_EUSART1_Write_string:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _EUSART1_Write *****************
  3403 ;; Defined at:
  3404 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  txData          1    wreg     unsigned char 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  txData          1    4[COMRAM] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0
  3419 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3421 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 2
  3425 ;; This function calls:
  3426 ;;		Nothing
  3427 ;; This function is called by:
  3428 ;;		_EUSART1_Write_string
  3429 ;;		_Uart1_write_text_const
  3430 ;;		_manda_esp8266_bytes
  3431 ;;		_putch
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text19
  3436  001878                     __ptext19:
  3437                           	callstack 0
  3438  001878                     _EUSART1_Write:
  3439                           	callstack 25
  3440                           
  3441                           ;incstack = 0
  3442                           ;EUSART1_Write@txData stored from wreg
  3443  001878  6E05               	movwf	EUSART1_Write@txData^0,c
  3444  00187A                     l67:
  3445  00187A  A89E               	btfss	158,4,c	;volatile
  3446  00187C  EF42  F00C         	goto	u801
  3447  001880  EF44  F00C         	goto	u800
  3448  001884                     u801:
  3449  001884  EF3D  F00C         	goto	l67
  3450  001888                     u800:
  3451  001888                     
  3452                           ;eusart1.c: 136: };eusart1.c: 138: TXREG1 = txData;
  3453  001888  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3454  00188C  0012               	return		;funcret
  3455  00188E                     __end_of_EUSART1_Write:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _SYSTEM_Initialize *****************
  3459 ;; Defined at:
  3460 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 4
  3481 ;; This function calls:
  3482 ;;		_EUSART1_Initialize
  3483 ;;		_OSCILLATOR_Initialize
  3484 ;;		_PIN_MANAGER_Initialize
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text20
  3491  00188E                     __ptext20:
  3492                           	callstack 0
  3493  00188E                     _SYSTEM_Initialize:
  3494                           	callstack 26
  3495  00188E                     
  3496                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3497  00188E  ECEF  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  3498                           
  3499                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3500  001892  EC2C  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  3501  001896                     
  3502                           ;mcc.c: 55: EUSART1_Initialize();
  3503  001896  EC7E  F00B         	call	_EUSART1_Initialize	;wreg free
  3504  00189A  0012               	return		;funcret
  3505  00189C                     __end_of_SYSTEM_Initialize:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _PIN_MANAGER_Initialize *****************
  3509 ;; Defined at:
  3510 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3524 ;;      Params:         0       0       0       0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3527 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 2
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_SYSTEM_Initialize
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text21
  3539  0017DE                     __ptext21:
  3540                           	callstack 0
  3541  0017DE                     _PIN_MANAGER_Initialize:
  3542                           	callstack 27
  3543  0017DE                     
  3544                           ;pin_manager.c: 60: LATA = 0x00;
  3545  0017DE  0E00               	movlw	0
  3546  0017E0  6E89               	movwf	137,c	;volatile
  3547                           
  3548                           ;pin_manager.c: 61: LATB = 0x00;
  3549  0017E2  0E00               	movlw	0
  3550  0017E4  6E8A               	movwf	138,c	;volatile
  3551                           
  3552                           ;pin_manager.c: 62: LATC = 0x00;
  3553  0017E6  0E00               	movlw	0
  3554  0017E8  6E8B               	movwf	139,c	;volatile
  3555                           
  3556                           ;pin_manager.c: 67: TRISA = 0xDF;
  3557  0017EA  0EDF               	movlw	223
  3558  0017EC  6E92               	movwf	146,c	;volatile
  3559                           
  3560                           ;pin_manager.c: 68: TRISB = 0x7E;
  3561  0017EE  0E7E               	movlw	126
  3562  0017F0  6E93               	movwf	147,c	;volatile
  3563                           
  3564                           ;pin_manager.c: 69: TRISC = 0x87;
  3565  0017F2  0E87               	movlw	135
  3566  0017F4  6E94               	movwf	148,c	;volatile
  3567                           
  3568                           ;pin_manager.c: 74: ANSELC = 0x04;
  3569  0017F6  0E04               	movlw	4
  3570  0017F8  010F               	movlb	15	; () banked
  3571  0017FA  6F5D               	movwf	93,b	;volatile
  3572                           
  3573                           ;pin_manager.c: 75: ANSELB = 0x3E;
  3574  0017FC  0E3E               	movlw	62
  3575  0017FE  6F5C               	movwf	92,b	;volatile
  3576                           
  3577                           ;pin_manager.c: 76: ANSELA = 0x07;
  3578  001800  0E07               	movlw	7
  3579  001802  6F5B               	movwf	91,b	;volatile
  3580                           
  3581                           ;pin_manager.c: 81: WPUB = 0x00;
  3582  001804  0E00               	movlw	0
  3583  001806  6E85               	movwf	133,c	;volatile
  3584  001808                     
  3585                           ; BSR set to: 15
  3586                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  3587  001808  8EF1               	bsf	241,7,c	;volatile
  3588  00180A                     
  3589                           ; BSR set to: 15
  3590  00180A  0012               	return		;funcret
  3591  00180C                     __end_of_PIN_MANAGER_Initialize:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _OSCILLATOR_Initialize *****************
  3595 ;; Defined at:
  3596 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3610 ;;      Params:         0       0       0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 2
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_SYSTEM_Initialize
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text22
  3625  001858                     __ptext22:
  3626                           	callstack 0
  3627  001858                     _OSCILLATOR_Initialize:
  3628                           	callstack 27
  3629  001858                     
  3630                           ;mcc.c: 61: OSCCON = 0x70;
  3631  001858  0E70               	movlw	112
  3632  00185A  6ED3               	movwf	211,c	;volatile
  3633                           
  3634                           ;mcc.c: 63: OSCCON2 = 0x00;
  3635  00185C  0E00               	movlw	0
  3636  00185E  6ED2               	movwf	210,c	;volatile
  3637                           
  3638                           ;mcc.c: 65: OSCTUNE = 0x80;
  3639  001860  0E80               	movlw	128
  3640  001862  6E9B               	movwf	155,c	;volatile
  3641                           
  3642                           ;mcc.c: 67: ACTCON = 0x00;
  3643  001864  0E00               	movlw	0
  3644  001866  6EB5               	movwf	181,c	;volatile
  3645  001868                     l122:
  3646  001868  AED2               	btfss	4050,7,c	;volatile
  3647  00186A  EF39  F00C         	goto	u491
  3648  00186E  EF3B  F00C         	goto	u490
  3649  001872                     u491:
  3650  001872  EF34  F00C         	goto	l122
  3651  001876                     u490:
  3652  001876  0012               	return		;funcret
  3653  001878                     __end_of_OSCILLATOR_Initialize:
  3654                           	callstack 0
  3655                           
  3656 ;; *************** function _EUSART1_Initialize *****************
  3657 ;; Defined at:
  3658 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3675 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 3
  3679 ;; This function calls:
  3680 ;;		_EUSART1_SetErrorHandler
  3681 ;;		_EUSART1_SetFramingErrorHandler
  3682 ;;		_EUSART1_SetOverrunErrorHandler
  3683 ;; This function is called by:
  3684 ;;		_SYSTEM_Initialize
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text23
  3689  0016FC                     __ptext23:
  3690                           	callstack 0
  3691  0016FC                     _EUSART1_Initialize:
  3692                           	callstack 26
  3693  0016FC                     
  3694                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  3695  0016FC  0E08               	movlw	8
  3696  0016FE  6EB8               	movwf	184,c	;volatile
  3697                           
  3698                           ;eusart1.c: 74: RCSTA1 = 0x90;
  3699  001700  0E90               	movlw	144
  3700  001702  6EAB               	movwf	171,c	;volatile
  3701                           
  3702                           ;eusart1.c: 77: TXSTA1 = 0x24;
  3703  001704  0E24               	movlw	36
  3704  001706  6EAC               	movwf	172,c	;volatile
  3705                           
  3706                           ;eusart1.c: 80: SPBRG1 = 0x67;
  3707  001708  0E67               	movlw	103
  3708  00170A  6EAF               	movwf	175,c	;volatile
  3709                           
  3710                           ;eusart1.c: 83: SPBRGH1 = 0x00;
  3711  00170C  0E00               	movlw	0
  3712  00170E  6EB0               	movwf	176,c	;volatile
  3713  001710                     
  3714                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3715  001710  0E00               	movlw	0
  3716  001712  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3717  001714  0E00               	movlw	0
  3718  001716  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3719  001718  EC53  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3720  00171C                     
  3721                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3722  00171C  0E00               	movlw	0
  3723  00171E  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3724  001720  0E00               	movlw	0
  3725  001722  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3726  001724  EC4E  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3727  001728                     
  3728                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3729  001728  0E00               	movlw	0
  3730  00172A  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3731  00172C  0E00               	movlw	0
  3732  00172E  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3733  001730  EC58  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  3734  001734                     
  3735                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  3736  001734  0E00               	movlw	0
  3737  001736  6E59               	movwf	_eusart1RxLastError^0,c	;volatile
  3738  001738  0012               	return		;funcret
  3739  00173A                     __end_of_EUSART1_Initialize:
  3740                           	callstack 0
  3741                           
  3742 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3743 ;; Defined at:
  3744 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3747 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3759 ;;      Params:         2       0       0       0       0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3762 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3763 ;;Total ram usage:        2 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 2
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_EUSART1_Initialize
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text24
  3774  00189C                     __ptext24:
  3775                           	callstack 0
  3776  00189C                     _EUSART1_SetOverrunErrorHandler:
  3777                           	callstack 26
  3778  00189C                     
  3779                           ;eusart1.c: 179: EUSART1_OverrunErrorHandler = interruptHandler;
  3780  00189C  C005  F050         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3781  0018A0  C006  F051         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3782  0018A4  0012               	return		;funcret
  3783  0018A6                     __end_of_EUSART1_SetOverrunErrorHandler:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3787 ;; Defined at:
  3788 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3791 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3803 ;;      Params:         2       0       0       0       0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3806 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 2
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_EUSART1_Initialize
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text25
  3818  0018A6                     __ptext25:
  3819                           	callstack 0
  3820  0018A6                     _EUSART1_SetFramingErrorHandler:
  3821                           	callstack 26
  3822  0018A6                     
  3823                           ;eusart1.c: 175: EUSART1_FramingErrorHandler = interruptHandler;
  3824  0018A6  C005  F052         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3825  0018AA  C006  F053         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3826  0018AE  0012               	return		;funcret
  3827  0018B0                     __end_of_EUSART1_SetFramingErrorHandler:
  3828                           	callstack 0
  3829                           
  3830 ;; *************** function _EUSART1_SetErrorHandler *****************
  3831 ;; Defined at:
  3832 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3835 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3847 ;;      Params:         2       0       0       0       0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3850 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3851 ;;Total ram usage:        2 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 2
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_EUSART1_Initialize
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text26
  3862  0018B0                     __ptext26:
  3863                           	callstack 0
  3864  0018B0                     _EUSART1_SetErrorHandler:
  3865                           	callstack 26
  3866  0018B0                     
  3867                           ;eusart1.c: 183: EUSART1_ErrorHandler = interruptHandler;
  3868  0018B0  C005  F04E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3869  0018B4  C006  F04F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3870  0018B8  0012               	return		;funcret
  3871  0018BA                     __end_of_EUSART1_SetErrorHandler:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _INTERRUPT_InterruptManager *****************
  3875 ;; Defined at:
  3876 ;;		line 124 in file "main.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3892 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3893 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3894 ;;Total ram usage:        2 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 1
  3897 ;; This function calls:
  3898 ;;		_esp82666_interrupcion_1
  3899 ;; This function is called by:
  3900 ;;		Interrupt level 2
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	intcode
  3905  000008                     __pintcode:
  3906                           	callstack 0
  3907  000008                     _INTERRUPT_InterruptManager:
  3908                           	callstack 24
  3909                           
  3910                           ;incstack = 0
  3911  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3912  00000A  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager
  3913  00000E  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+1
  3914  000012                     
  3915                           ;main.c: 126: if (RCIF == 1)
  3916  000012  AA9E               	btfss	3998,5,c	;volatile
  3917  000014  EF0E  F000         	goto	i2u139_41
  3918  000018  EF10  F000         	goto	i2u139_40
  3919  00001C                     i2u139_41:
  3920  00001C  EF12  F000         	goto	i2l203
  3921  000020                     i2u139_40:
  3922  000020                     
  3923                           ;main.c: 127: {;main.c: 128: esp82666_interrupcion_1();
  3924  000020  EC8E  F006         	call	_esp82666_interrupcion_1	;wreg free
  3925  000024                     i2l203:
  3926  000024  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+1,fsr2h
  3927  000028  C003  FFD9         	movff	??_INTERRUPT_InterruptManager,fsr2l
  3928  00002C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3929  00002E  0011               	retfie		f
  3930  000030                     __end_of_INTERRUPT_InterruptManager:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _esp82666_interrupcion_1 *****************
  3934 ;; Defined at:
  3935 ;;		line 89 in file "Librerias/esp8266.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3949 ;;      Params:         0       0       0       0       0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3951 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3952 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3953 ;;Total ram usage:        2 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_INTERRUPT_InterruptManager
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text28
  3963  000D1C                     __ptext28:
  3964                           	callstack 0
  3965  000D1C                     _esp82666_interrupcion_1:
  3966                           	callstack 24
  3967  000D1C                     
  3968                           ;esp8266.c: 92: if (PIR1bits.RC1IF == 1)
  3969  000D1C  AA9E               	btfss	158,5,c	;volatile
  3970  000D1E  EF93  F006         	goto	i2u123_41
  3971  000D22  EF95  F006         	goto	i2u123_40
  3972  000D26                     i2u123_41:
  3973  000D26  EF85  F007         	goto	i2l345
  3974  000D2A                     i2u123_40:
  3975  000D2A                     
  3976                           ;esp8266.c: 93: { dato_rx=RCREG;
  3977  000D2A  CFAE F056          	movff	4014,_dato_rx	;volatile
  3978                           
  3979                           ;esp8266.c: 95: switch (estado_rec)
  3980  000D2E  EF61  F007         	goto	i2l2368
  3981  000D32                     i2l2300:
  3982                           
  3983                           ;esp8266.c: 98: modbus_rx[trama_cont]=dato_rx;
  3984  000D32  0EA0               	movlw	low _modbus_rx
  3985  000D34  2457               	addwf	_trama_cont^0,w,c
  3986  000D36  6ED9               	movwf	fsr2l,c
  3987  000D38  6ADA               	clrf	fsr2h,c
  3988  000D3A  0E00               	movlw	high _modbus_rx
  3989  000D3C  22DA               	addwfc	fsr2h,f,c
  3990  000D3E  C056  FFDF         	movff	_dato_rx,indf2
  3991  000D42                     
  3992                           ;esp8266.c: 99: trama_cont++;
  3993  000D42  2A57               	incf	_trama_cont^0,f,c
  3994  000D44                     
  3995                           ;esp8266.c: 100: if (trama_cont>=50) trama_cont=0;
  3996  000D44  0E31               	movlw	49
  3997  000D46  6457               	cpfsgt	_trama_cont^0,c
  3998  000D48  EFA8  F006         	goto	i2u124_41
  3999  000D4C  EFAA  F006         	goto	i2u124_40
  4000  000D50                     i2u124_41:
  4001  000D50  EF84  F007         	goto	i2l322
  4002  000D54                     i2u124_40:
  4003  000D54  0E00               	movlw	0
  4004  000D56  6E57               	movwf	_trama_cont^0,c
  4005  000D58  EF84  F007         	goto	i2l322
  4006  000D5C                     i2l2308:
  4007                           
  4008                           ;esp8266.c: 105: if (dato_rx!='I') trama_cont=0;
  4009  000D5C  0E49               	movlw	73
  4010  000D5E  1856               	xorwf	_dato_rx^0,w,c
  4011  000D60  B4D8               	btfsc	status,2,c
  4012  000D62  EFB5  F006         	goto	i2u125_41
  4013  000D66  EFB7  F006         	goto	i2u125_40
  4014  000D6A                     i2u125_41:
  4015  000D6A  EFBB  F006         	goto	i2l2312
  4016  000D6E                     i2u125_40:
  4017  000D6E  0E00               	movlw	0
  4018  000D70  6E57               	movwf	_trama_cont^0,c
  4019  000D72  EFBD  F006         	goto	i2l2314
  4020  000D76                     i2l2312:
  4021                           
  4022                           ;esp8266.c: 106: else;esp8266.c: 107: {;esp8266.c: 109: estado_rec=cap_p;
  4023  000D76  0E02               	movlw	2
  4024  000D78  6E58               	movwf	_estado_rec^0,c
  4025  000D7A                     i2l2314:
  4026                           
  4027                           ;esp8266.c: 115: if (dato_rx!='P')
  4028  000D7A  0E50               	movlw	80
  4029  000D7C  1856               	xorwf	_dato_rx^0,w,c
  4030  000D7E  B4D8               	btfsc	status,2,c
  4031  000D80  EFC4  F006         	goto	i2u126_41
  4032  000D84  EFC6  F006         	goto	i2u126_40
  4033  000D88                     i2u126_41:
  4034  000D88  EFCC  F006         	goto	i2l2318
  4035  000D8C                     i2u126_40:
  4036  000D8C                     i2l2316:
  4037                           
  4038                           ;esp8266.c: 116: {;esp8266.c: 117: trama_cont=0;
  4039  000D8C  0E00               	movlw	0
  4040  000D8E  6E57               	movwf	_trama_cont^0,c
  4041                           
  4042                           ;esp8266.c: 118: estado_rec=cap_i;
  4043  000D90  0E01               	movlw	1
  4044  000D92  6E58               	movwf	_estado_rec^0,c
  4045                           
  4046                           ;esp8266.c: 120: }
  4047  000D94  EF84  F007         	goto	i2l322
  4048  000D98                     i2l2318:
  4049                           
  4050                           ;esp8266.c: 121: else;esp8266.c: 122: {;esp8266.c: 124: estado_rec=cap_d;
  4051  000D98  0E03               	movlw	3
  4052  000D9A  6E58               	movwf	_estado_rec^0,c
  4053  000D9C  EF84  F007         	goto	i2l322
  4054  000DA0                     i2l2320:
  4055                           
  4056                           ;esp8266.c: 132: if (dato_rx!='D')
  4057  000DA0  0E44               	movlw	68
  4058  000DA2  1856               	xorwf	_dato_rx^0,w,c
  4059  000DA4  B4D8               	btfsc	status,2,c
  4060  000DA6  EFD7  F006         	goto	i2u127_41
  4061  000DAA  EFD9  F006         	goto	i2u127_40
  4062  000DAE                     i2u127_41:
  4063  000DAE  EFDB  F006         	goto	i2l2324
  4064  000DB2                     i2u127_40:
  4065  000DB2  EFC6  F006         	goto	i2l2316
  4066  000DB6                     i2l2324:
  4067                           
  4068                           ;esp8266.c: 138: else;esp8266.c: 139: {;esp8266.c: 141: estado_rec=cap_co;
  4069  000DB6  0E04               	movlw	4
  4070  000DB8  6E58               	movwf	_estado_rec^0,c
  4071  000DBA  EF84  F007         	goto	i2l322
  4072  000DBE                     i2l2326:
  4073                           
  4074                           ;esp8266.c: 148: if (dato_rx!=',')
  4075  000DBE  0E2C               	movlw	44
  4076  000DC0  1856               	xorwf	_dato_rx^0,w,c
  4077  000DC2  B4D8               	btfsc	status,2,c
  4078  000DC4  EFE6  F006         	goto	i2u128_41
  4079  000DC8  EFE8  F006         	goto	i2u128_40
  4080  000DCC                     i2u128_41:
  4081  000DCC  EFEA  F006         	goto	i2l2330
  4082  000DD0                     i2u128_40:
  4083  000DD0  EFC6  F006         	goto	i2l2316
  4084  000DD4                     i2l2330:
  4085                           
  4086                           ;esp8266.c: 154: else;esp8266.c: 155: {;esp8266.c: 160: trama_cont=0;
  4087  000DD4  0E00               	movlw	0
  4088  000DD6  6E57               	movwf	_trama_cont^0,c
  4089                           
  4090                           ;esp8266.c: 161: estado_rec=cap_co2;
  4091  000DD8  0E05               	movlw	5
  4092  000DDA  6E58               	movwf	_estado_rec^0,c
  4093  000DDC  EF84  F007         	goto	i2l322
  4094  000DE0                     i2l2332:
  4095                           
  4096                           ;esp8266.c: 171: if (dato_rx==',')
  4097  000DE0  0E2C               	movlw	44
  4098  000DE2  1856               	xorwf	_dato_rx^0,w,c
  4099  000DE4  A4D8               	btfss	status,2,c
  4100  000DE6  EFF7  F006         	goto	i2u129_41
  4101  000DEA  EFF9  F006         	goto	i2u129_40
  4102  000DEE                     i2u129_41:
  4103  000DEE  EFFF  F006         	goto	i2l2336
  4104  000DF2                     i2u129_40:
  4105  000DF2                     
  4106                           ;esp8266.c: 172: {;esp8266.c: 173: estado_rec=cap_largo;
  4107  000DF2  0E06               	movlw	6
  4108  000DF4  6E58               	movwf	_estado_rec^0,c
  4109                           
  4110                           ;esp8266.c: 174: trama_cont=0;
  4111  000DF6  0E00               	movlw	0
  4112  000DF8  6E57               	movwf	_trama_cont^0,c
  4113                           
  4114                           ;esp8266.c: 175: }
  4115  000DFA  EF84  F007         	goto	i2l322
  4116  000DFE                     i2l2336:
  4117                           
  4118                           ;esp8266.c: 176: else;esp8266.c: 177: {;esp8266.c: 178: trama_cont++;
  4119  000DFE  2A57               	incf	_trama_cont^0,f,c
  4120  000E00                     
  4121                           ;esp8266.c: 179: if (trama_cont>50)
  4122  000E00  0E32               	movlw	50
  4123  000E02  6457               	cpfsgt	_trama_cont^0,c
  4124  000E04  EF06  F007         	goto	i2u130_41
  4125  000E08  EF08  F007         	goto	i2u130_40
  4126  000E0C                     i2u130_41:
  4127  000E0C  EF84  F007         	goto	i2l322
  4128  000E10                     i2u130_40:
  4129  000E10  EFC6  F006         	goto	i2l2316
  4130  000E14                     i2l2342:
  4131                           
  4132                           ;esp8266.c: 189: if (dato_rx==':')
  4133  000E14  0E3A               	movlw	58
  4134  000E16  1856               	xorwf	_dato_rx^0,w,c
  4135  000E18  A4D8               	btfss	status,2,c
  4136  000E1A  EF11  F007         	goto	i2u131_41
  4137  000E1E  EF13  F007         	goto	i2u131_40
  4138  000E22                     i2u131_41:
  4139  000E22  EF1D  F007         	goto	i2l2346
  4140  000E26                     i2u131_40:
  4141  000E26                     
  4142                           ;esp8266.c: 190: {;esp8266.c: 191: trama_cont=0;
  4143  000E26  0E00               	movlw	0
  4144  000E28  6E57               	movwf	_trama_cont^0,c
  4145                           
  4146                           ;esp8266.c: 192: rec_son=13;
  4147  000E2A  0E00               	movlw	0
  4148  000E2C  6E3B               	movwf	(_rec_son+1)^0,c
  4149  000E2E  0E0D               	movlw	13
  4150  000E30  6E3A               	movwf	_rec_son^0,c
  4151                           
  4152                           ;esp8266.c: 193: estado_rec=esp_final;
  4153  000E32  0E07               	movlw	7
  4154  000E34  6E58               	movwf	_estado_rec^0,c
  4155                           
  4156                           ;esp8266.c: 194: }
  4157  000E36  EF84  F007         	goto	i2l322
  4158  000E3A                     i2l2346:
  4159                           
  4160                           ;esp8266.c: 195: else;esp8266.c: 196: {;esp8266.c: 197: modbus_rx[trama_cont]=dato_rx;
  4161  000E3A  0EA0               	movlw	low _modbus_rx
  4162  000E3C  2457               	addwf	_trama_cont^0,w,c
  4163  000E3E  6ED9               	movwf	fsr2l,c
  4164  000E40  6ADA               	clrf	fsr2h,c
  4165  000E42  0E00               	movlw	high _modbus_rx
  4166  000E44  22DA               	addwfc	fsr2h,f,c
  4167  000E46  C056  FFDF         	movff	_dato_rx,indf2
  4168  000E4A                     
  4169                           ;esp8266.c: 198: trama_cont++;
  4170  000E4A  2A57               	incf	_trama_cont^0,f,c
  4171  000E4C                     
  4172                           ;esp8266.c: 199: if (trama_cont>50)
  4173  000E4C  0E32               	movlw	50
  4174  000E4E  6457               	cpfsgt	_trama_cont^0,c
  4175  000E50  EF2C  F007         	goto	i2u132_41
  4176  000E54  EF2E  F007         	goto	i2u132_40
  4177  000E58                     i2u132_41:
  4178  000E58  EF84  F007         	goto	i2l322
  4179  000E5C                     i2u132_40:
  4180  000E5C  EFC6  F006         	goto	i2l2316
  4181  000E60                     i2l2354:
  4182                           
  4183                           ;esp8266.c: 208: led1=!led1;
  4184  000E60  5042               	movf	_led1^0,w,c
  4185  000E62  1043               	iorwf	(_led1+1)^0,w,c
  4186  000E64  B4D8               	btfsc	status,2,c
  4187  000E66  EF37  F007         	goto	i2u133_41
  4188  000E6A  EF3A  F007         	goto	i2u133_40
  4189  000E6E                     i2u133_41:
  4190  000E6E  0E01               	movlw	1
  4191  000E70  EF3B  F007         	goto	i2u134_40
  4192  000E74                     i2u133_40:
  4193  000E74  0E00               	movlw	0
  4194  000E76                     i2u134_40:
  4195  000E76  6E42               	movwf	_led1^0,c
  4196  000E78  6A43               	clrf	(_led1+1)^0,c
  4197  000E7A                     
  4198                           ;esp8266.c: 209: modbus_rx[trama_cont]=dato_rx;
  4199  000E7A  0EA0               	movlw	low _modbus_rx
  4200  000E7C  2457               	addwf	_trama_cont^0,w,c
  4201  000E7E  6ED9               	movwf	fsr2l,c
  4202  000E80  6ADA               	clrf	fsr2h,c
  4203  000E82  0E00               	movlw	high _modbus_rx
  4204  000E84  22DA               	addwfc	fsr2h,f,c
  4205  000E86  C056  FFDF         	movff	_dato_rx,indf2
  4206  000E8A                     
  4207                           ;esp8266.c: 210: trama_cont++;
  4208  000E8A  2A57               	incf	_trama_cont^0,f,c
  4209  000E8C                     
  4210                           ;esp8266.c: 211: if (trama_cont>=rec_son)
  4211  000E8C  5057               	movf	_trama_cont^0,w,c
  4212  000E8E  6E01               	movwf	??_esp82666_interrupcion_1^0,c
  4213  000E90  6A02               	clrf	(??_esp82666_interrupcion_1+1)^0,c
  4214  000E92  503A               	movf	_rec_son^0,w,c
  4215  000E94  5C01               	subwf	??_esp82666_interrupcion_1^0,w,c
  4216  000E96  503B               	movf	(_rec_son+1)^0,w,c
  4217  000E98  5802               	subwfb	(??_esp82666_interrupcion_1+1)^0,w,c
  4218  000E9A  A0D8               	btfss	status,0,c
  4219  000E9C  EF52  F007         	goto	i2u135_41
  4220  000EA0  EF54  F007         	goto	i2u135_40
  4221  000EA4                     i2u135_41:
  4222  000EA4  EF84  F007         	goto	i2l322
  4223  000EA8                     i2u135_40:
  4224  000EA8                     
  4225                           ;esp8266.c: 214: {;esp8266.c: 215: trama_cont=0;
  4226  000EA8  0E00               	movlw	0
  4227  000EAA  6E57               	movwf	_trama_cont^0,c
  4228                           
  4229                           ;esp8266.c: 216: estado_rec=normal;
  4230  000EAC  0E00               	movlw	0
  4231  000EAE  6E58               	movwf	_estado_rec^0,c
  4232                           
  4233                           ;esp8266.c: 217: flag_modbus = 1;
  4234  000EB0  0E01               	movlw	1
  4235  000EB2  6E54               	movwf	_flag_modbus^0,c
  4236                           
  4237                           ;esp8266.c: 218: led2 = 1;
  4238  000EB4  0E00               	movlw	0
  4239  000EB6  6E41               	movwf	(_led2+1)^0,c
  4240  000EB8  0E01               	movlw	1
  4241  000EBA  6E40               	movwf	_led2^0,c
  4242  000EBC                     
  4243                           ;esp8266.c: 219: PIE1bits.RC1IE = 0;
  4244  000EBC  9A9D               	bcf	157,5,c	;volatile
  4245  000EBE  EF84  F007         	goto	i2l322
  4246  000EC2                     i2l2368:
  4247  000EC2  5058               	movf	_estado_rec^0,w,c
  4248                           
  4249                           ; Switch size 1, requested type "simple"
  4250                           ; Number of cases is 8, Range of values is 0 to 7
  4251                           ; switch strategies available:
  4252                           ; Name         Instructions Cycles
  4253                           ; simple_byte           25    13 (average)
  4254                           ;	Chosen strategy is simple_byte
  4255  000EC4  0A00               	xorlw	0	; case 0
  4256  000EC6  B4D8               	btfsc	status,2,c
  4257  000EC8  EF99  F006         	goto	i2l2300
  4258  000ECC  0A01               	xorlw	1	; case 1
  4259  000ECE  B4D8               	btfsc	status,2,c
  4260  000ED0  EFAE  F006         	goto	i2l2308
  4261  000ED4  0A03               	xorlw	3	; case 2
  4262  000ED6  B4D8               	btfsc	status,2,c
  4263  000ED8  EFBD  F006         	goto	i2l2314
  4264  000EDC  0A01               	xorlw	1	; case 3
  4265  000EDE  B4D8               	btfsc	status,2,c
  4266  000EE0  EFD0  F006         	goto	i2l2320
  4267  000EE4  0A07               	xorlw	7	; case 4
  4268  000EE6  B4D8               	btfsc	status,2,c
  4269  000EE8  EFDF  F006         	goto	i2l2326
  4270  000EEC  0A01               	xorlw	1	; case 5
  4271  000EEE  B4D8               	btfsc	status,2,c
  4272  000EF0  EFF0  F006         	goto	i2l2332
  4273  000EF4  0A03               	xorlw	3	; case 6
  4274  000EF6  B4D8               	btfsc	status,2,c
  4275  000EF8  EF0A  F007         	goto	i2l2342
  4276  000EFC  0A01               	xorlw	1	; case 7
  4277  000EFE  B4D8               	btfsc	status,2,c
  4278  000F00  EF30  F007         	goto	i2l2354
  4279  000F04  EF84  F007         	goto	i2l322
  4280  000F08                     i2l322:
  4281                           
  4282                           ;esp8266.c: 228: PIR1bits.RC1IF = 0;
  4283  000F08  9A9E               	bcf	158,5,c	;volatile
  4284  000F0A                     i2l345:
  4285  000F0A  0012               	return		;funcret
  4286  000F0C                     __end_of_esp82666_interrupcion_1:
  4287                           	callstack 0
  4288                           
  4289                           	psect	rparam
  4290  0000                     
  4291                           	psect	temp
  4292  00005A                     btemp:
  4293                           	callstack 0
  4294  00005A                     	ds	1
  4295  0000                     int$flags	set	btemp
  4296  0000                     wtemp8	set	btemp+1
  4297  0000                     ttemp5	set	btemp+1
  4298  0000                     ttemp6	set	btemp+4
  4299  0000                     ttemp7	set	btemp+8
  4300                           
  4301                           	psect	idloc
  4302                           
  4303                           ;Config register IDLOC0 @ 0x200000
  4304                           ;	unspecified, using default values
  4305  200000                     	org	2097152
  4306  200000  FF                 	db	255
  4307                           
  4308                           ;Config register IDLOC1 @ 0x200001
  4309                           ;	unspecified, using default values
  4310  200001                     	org	2097153
  4311  200001  FF                 	db	255
  4312                           
  4313                           ;Config register IDLOC2 @ 0x200002
  4314                           ;	unspecified, using default values
  4315  200002                     	org	2097154
  4316  200002  FF                 	db	255
  4317                           
  4318                           ;Config register IDLOC3 @ 0x200003
  4319                           ;	unspecified, using default values
  4320  200003                     	org	2097155
  4321  200003  FF                 	db	255
  4322                           
  4323                           ;Config register IDLOC4 @ 0x200004
  4324                           ;	unspecified, using default values
  4325  200004                     	org	2097156
  4326  200004  FF                 	db	255
  4327                           
  4328                           ;Config register IDLOC5 @ 0x200005
  4329                           ;	unspecified, using default values
  4330  200005                     	org	2097157
  4331  200005  FF                 	db	255
  4332                           
  4333                           ;Config register IDLOC6 @ 0x200006
  4334                           ;	unspecified, using default values
  4335  200006                     	org	2097158
  4336  200006  FF                 	db	255
  4337                           
  4338                           ;Config register IDLOC7 @ 0x200007
  4339                           ;	unspecified, using default values
  4340  200007                     	org	2097159
  4341  200007  FF                 	db	255
  4342                           
  4343                           	psect	config
  4344                           
  4345                           ;Config register CONFIG1L @ 0x300000
  4346                           ;	PLL Selection
  4347                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4348                           ;	PLL Enable Configuration bit
  4349                           ;	CFGPLLEN = ON, PLL Enabled
  4350                           ;	CPU System Clock Postscaler
  4351                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4352                           ;	Low Speed USB mode with 48 MHz system clock
  4353                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4354  300000                     	org	3145728
  4355  300000  23                 	db	35
  4356                           
  4357                           ;Config register CONFIG1H @ 0x300001
  4358                           ;	Oscillator Selection
  4359                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  4360                           ;	Primary Oscillator Shutdown
  4361                           ;	PCLKEN = ON, Primary oscillator enabled
  4362                           ;	Fail-Safe Clock Monitor
  4363                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4364                           ;	Internal/External Oscillator Switchover
  4365                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4366  300001                     	org	3145729
  4367  300001  23                 	db	35
  4368                           
  4369                           ;Config register CONFIG2L @ 0x300002
  4370                           ;	Power-up Timer Enable
  4371                           ;	nPWRTEN = ON, Power up timer enabled
  4372                           ;	Brown-out Reset Enable
  4373                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4374                           ;	Brown-out Reset Voltage
  4375                           ;	BORV = 190, BOR set to 1.9V nominal
  4376                           ;	Low-Power Brown-out Reset
  4377                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4378  300002                     	org	3145730
  4379  300002  5E                 	db	94
  4380                           
  4381                           ;Config register CONFIG2H @ 0x300003
  4382                           ;	Watchdog Timer Enable bits
  4383                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4384                           ;	Watchdog Timer Postscaler
  4385                           ;	WDTPS = 32768, 1:32768
  4386  300003                     	org	3145731
  4387  300003  3C                 	db	60
  4388                           
  4389                           ; Padding undefined space
  4390  300004                     	org	3145732
  4391  300004  FF                 	db	255
  4392                           
  4393                           ;Config register CONFIG3H @ 0x300005
  4394                           ;	CCP2 MUX bit
  4395                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4396                           ;	PORTB A/D Enable bit
  4397                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4398                           ;	Timer3 Clock Input MUX bit
  4399                           ;	T3CMX = RC0, T3CKI function is on RC0
  4400                           ;	SDO Output MUX bit
  4401                           ;	SDOMX = RB3, SDO function is on RB3
  4402                           ;	Master Clear Reset Pin Enable
  4403                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4404  300005                     	org	3145733
  4405  300005  D1                 	db	209
  4406                           
  4407                           ;Config register CONFIG4L @ 0x300006
  4408                           ;	Stack Full/Underflow Reset
  4409                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4410                           ;	Single-Supply ICSP Enable bit
  4411                           ;	LVP = OFF, Single-Supply ICSP disabled
  4412                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4413                           ;	ICPRT = OFF, ICPORT disabled
  4414                           ;	Extended Instruction Set Enable bit
  4415                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4416                           ;	Background Debugger Enable bit
  4417                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4418  300006                     	org	3145734
  4419  300006  81                 	db	129
  4420                           
  4421                           ; Padding undefined space
  4422  300007                     	org	3145735
  4423  300007  FF                 	db	255
  4424                           
  4425                           ;Config register CONFIG5L @ 0x300008
  4426                           ;	Block 0 Code Protect
  4427                           ;	CP0 = OFF, Block 0 is not code-protected
  4428                           ;	Block 1 Code Protect
  4429                           ;	CP1 = OFF, Block 1 is not code-protected
  4430                           ;	Block 2 Code Protect
  4431                           ;	CP2 = OFF, Block 2 is not code-protected
  4432                           ;	Block 3 Code Protect
  4433                           ;	CP3 = OFF, Block 3 is not code-protected
  4434  300008                     	org	3145736
  4435  300008  0F                 	db	15
  4436                           
  4437                           ;Config register CONFIG5H @ 0x300009
  4438                           ;	Boot Block Code Protect
  4439                           ;	CPB = OFF, Boot block is not code-protected
  4440                           ;	Data EEPROM Code Protect
  4441                           ;	CPD = OFF, Data EEPROM is not code-protected
  4442  300009                     	org	3145737
  4443  300009  C0                 	db	192
  4444                           
  4445                           ;Config register CONFIG6L @ 0x30000A
  4446                           ;	Block 0 Write Protect
  4447                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4448                           ;	Block 1 Write Protect
  4449                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4450                           ;	Block 2 Write Protect
  4451                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4452                           ;	Block 3 Write Protect
  4453                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4454  30000A                     	org	3145738
  4455  30000A  0F                 	db	15
  4456                           
  4457                           ;Config register CONFIG6H @ 0x30000B
  4458                           ;	Configuration Registers Write Protect
  4459                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4460                           ;	Boot Block Write Protect
  4461                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4462                           ;	Data EEPROM Write Protect
  4463                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4464  30000B                     	org	3145739
  4465  30000B  E0                 	db	224
  4466                           
  4467                           ;Config register CONFIG7L @ 0x30000C
  4468                           ;	Block 0 Table Read Protect
  4469                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4470                           ;	Block 1 Table Read Protect
  4471                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4472                           ;	Block 2 Table Read Protect
  4473                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4474                           ;	Block 3 Table Read Protect
  4475                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4476  30000C                     	org	3145740
  4477  30000C  0F                 	db	15
  4478                           
  4479                           ;Config register CONFIG7H @ 0x30000D
  4480                           ;	Boot Block Table Read Protect
  4481                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4482  30000D                     	org	3145741
  4483  30000D  40                 	db	64
  4484                           tosu	equ	0xFFF
  4485                           tosh	equ	0xFFE
  4486                           tosl	equ	0xFFD
  4487                           stkptr	equ	0xFFC
  4488                           pclatu	equ	0xFFB
  4489                           pclath	equ	0xFFA
  4490                           pcl	equ	0xFF9
  4491                           tblptru	equ	0xFF8
  4492                           tblptrh	equ	0xFF7
  4493                           tblptrl	equ	0xFF6
  4494                           tablat	equ	0xFF5
  4495                           prodh	equ	0xFF4
  4496                           prodl	equ	0xFF3
  4497                           indf0	equ	0xFEF
  4498                           postinc0	equ	0xFEE
  4499                           postdec0	equ	0xFED
  4500                           preinc0	equ	0xFEC
  4501                           plusw0	equ	0xFEB
  4502                           fsr0h	equ	0xFEA
  4503                           fsr0l	equ	0xFE9
  4504                           wreg	equ	0xFE8
  4505                           indf1	equ	0xFE7
  4506                           postinc1	equ	0xFE6
  4507                           postdec1	equ	0xFE5
  4508                           preinc1	equ	0xFE4
  4509                           plusw1	equ	0xFE3
  4510                           fsr1h	equ	0xFE2
  4511                           fsr1l	equ	0xFE1
  4512                           bsr	equ	0xFE0
  4513                           indf2	equ	0xFDF
  4514                           postinc2	equ	0xFDE
  4515                           postdec2	equ	0xFDD
  4516                           preinc2	equ	0xFDC
  4517                           plusw2	equ	0xFDB
  4518                           fsr2h	equ	0xFDA
  4519                           fsr2l	equ	0xFD9
  4520                           status	equ	0xFD8

Data Sizes:
    Strings     205
    Constant    10
    Data        0
    BSS         184
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      89
    BANK0           160      4     148
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    buff_punte	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rec_punte	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[7]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[3]), 
		 -> STR_28(CODE[8]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_6(CODE[10]), STR_5(CODE[3]), 
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), modbus_rx(BANK0[50]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), modbus_rx(BANK0[50]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), modbus_rx(BANK0[50]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[7]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[3]), 
		 -> STR_28(CODE[8]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_6(CODE[10]), STR_5(CODE[3]), 
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), modbus_rx(BANK0[50]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[7]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[3]), 
		 -> STR_28(CODE[8]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_6(CODE[10]), STR_5(CODE[3]), 
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[7]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[3]), 
		 -> STR_28(CODE[8]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_6(CODE[10]), STR_5(CODE[3]), 
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> modbus_rx(BANK0[50]), modbus_tx(BANK0[50]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> modbus_rx(BANK0[50]), modbus_tx(BANK0[50]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_34(CODE[7]), ?_sprintf(COMRAM[2]), STR_16(CODE[13]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_23(CODE[29]), STR_22(CODE[18]), STR_21(CODE[18]), STR_19(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> captu1(BANK0[30]), modbus_tx(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    conecta@ip_dir	PTR unsigned char  size(2) Largest target is 13
		 -> STR_16(CODE[13]), 

    manda_esp8266_bytes@info2	PTR unsigned char  size(2) Largest target is 50
		 -> modbus_tx(BANK0[50]), 

    manda_AT_COMANDO@cap1	PTR unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[7]), STR_31(CODE[3]), STR_28(CODE[8]), STR_26(CODE[3]), 
		 -> STR_15(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), STR_6(CODE[10]), 
		 -> STR_3(CODE[6]), 

    manda_AT_COMANDO@cap	PTR unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), STR_30(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), 
		 -> STR_14(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), STR_5(CODE[3]), 
		 -> STR_2(CODE[3]), 

    manda_AT_COMANDO@coman	PTR unsigned char  size(2) Largest target is 50
		 -> STR_29(CODE[14]), STR_24(CODE[14]), modbus_tx(BANK0[50]), STR_13(CODE[9]), 
		 -> STR_10(CODE[12]), STR_7(CODE[36]), STR_4(CODE[12]), STR_1(CODE[5]), 

    tiempo@cap1	PTR unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[7]), STR_31(CODE[3]), STR_28(CODE[8]), STR_26(CODE[3]), 
		 -> STR_15(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), STR_6(CODE[10]), 
		 -> STR_3(CODE[6]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), modbus_rx(BANK0[50]), 

    tiempo@cap	PTR unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), STR_30(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), 
		 -> STR_14(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), STR_5(CODE[3]), 
		 -> STR_2(CODE[3]), 

    sp__memset	PTR void  size(2) Largest target is 50
		 -> modbus_rx(BANK0[50]), modbus_tx(BANK0[50]), 

    Uart1_write_text_const@info	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), STR_20(CODE[3]), STR_18(CODE[12]), STR_17(CODE[3]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_29(CODE[14]), STR_24(CODE[14]), captu1(BANK0[30]), modbus_tx(BANK0[50]), 
		 -> STR_13(CODE[9]), STR_10(CODE[12]), STR_7(CODE[36]), STR_4(CODE[12]), 
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _modbus_write_holding->_manda_esp8266_bytes
    _modbus_write_coilsdigital->_manda_esp8266_bytes
    _manda_esp8266_bytes->_sprintf
    _conecta->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _manda_AT_COMANDO->_tiempo
    _tiempo->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _Uart1_write_text_const->_EUSART1_Write
    _EUSART1_Write_string->_EUSART1_Write
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_esp82666_interrupcion_1

Critical Paths under _main in BANK0

    _main->_modbus_write_coilsdigital
    _main->_modbus_write_holding

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24699
                                             47 COMRAM     2     2      0
                  _SYSTEM_Initialize
                            _conecta
                   _manda_AT_COMANDO
          _modbus_write_coilsdigital
               _modbus_write_holding
 ---------------------------------------------------------------------------------
 (1) _modbus_write_holding                                 4     0      4    4516
                                              0 BANK0      4     0      4
                _manda_esp8266_bytes
 ---------------------------------------------------------------------------------
 (1) _modbus_write_coilsdigital                            4     0      4    4336
                                              0 BANK0      4     0      4
                _manda_esp8266_bytes
 ---------------------------------------------------------------------------------
 (2) _manda_esp8266_bytes                                  8     4      4    4026
                                             39 COMRAM     8     4      4
                      _EUSART1_Write
               _EUSART1_Write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _conecta                                              5     3      2    9564
                                             39 COMRAM     5     3      2
                   _manda_AT_COMANDO
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    21      6    2835
                                             16 COMRAM    23    17      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                             11 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _manda_AT_COMANDO                                     8     0      8    5989
                                             29 COMRAM     8     0      8
               _EUSART1_Write_string
             _Uart1_write_text_const
                             _tiempo
 ---------------------------------------------------------------------------------
 (2) _tiempo                                              10     4      6    2195
                                             19 COMRAM    10     4      6
                             _memset
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1325
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     240
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     552
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _Uart1_write_text_const                               3     0      3     523
                                              5 COMRAM     3     0      3
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write_string                                 2     0      2     447
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           2     2      0       0
                                              2 COMRAM     2     2      0
            _esp82666_interrupcion_1
 ---------------------------------------------------------------------------------
 (7) _esp82666_interrupcion_1                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _conecta
     _manda_AT_COMANDO
       _EUSART1_Write_string
         _EUSART1_Write
       _Uart1_write_text_const
         _EUSART1_Write
       _tiempo
         _memset
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
     _memset
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _manda_AT_COMANDO
   _modbus_write_coilsdigital
     _manda_esp8266_bytes
       _EUSART1_Write
       _EUSART1_Write_string
       _sprintf
   _modbus_write_holding
     _manda_esp8266_bytes

 _INTERRUPT_InterruptManager (ROOT)
   _esp82666_interrupcion_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      59       1       94.7%
BITBIGSFRlllllh     27      0       0      30        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRhl         19      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      25        0.0%
BITBIGSFRllllll      8      0       0      31        0.0%
BITBIGSFRllllhh      6      0       0      27        0.0%
BITBIGSFRllllhl      6      0       0      28        0.0%
BITBIGSFRlhhl        4      0       0      24        0.0%
BITBIGSFRlllllh      3      0       0      29        0.0%
BITBIGSFRlhhh        2      0       0      23        0.0%
BITBIGSFRlllh        1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      ED      32        0.0%
DATA                 0      0      ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 03 05:19:52 2023

                      ?_esp82666_interrupcion_1 0001                                              l43 1738  
                                            l70 188C                                              l67 187A  
                                            l76 1588                                              l94 18AE  
                                            l97 18A4                    __end_of_modbus_write_holding 1676  
                           ___wmul@multiplicand 0007                                             l100 18B8  
                                           l122 1868                                             l125 1876  
                                           l230 1674                                             l119 189A  
                                           l152 180A                                             l312 1284  
                                           l306 16BA                                             l315 1280  
                                           l431 0D1A                                             l239 15DE  
                                           l434 1856                                             l348 16FA  
                                           l372 1058                                             l366 1452  
                                           l398 0B18                                             l920 14C6  
                                           l913 14BE                                             l930 152A  
                                           l923 1522                                             _GIE 007F97  
                                           u800 1888                                             u801 1884  
                                           u490 1876                                             u810 17AA  
                                           u491 1872                                             u811 17A6  
                                           u740 1766                                             u820 12C4  
                                           u900 14DA                                             u741 1762  
                                           u821 12C0                                             u901 14D6  
                                           u750 1348                                             u830 130A  
                                           u910 14F8                                             u751 1344  
                                           u831 1306                                             u911 14F4  
                                           u760 1370                                             u840 1322  
                                           u920 150E                                             u761 136C  
                                           u841 131E                                             u921 150A  
                                           u930 1550                                             u770 13B8  
                                           u850 17C2                                             u771 13B4  
                                           u851 17BE                                             u940 1578  
                                           u780 15FA                                             u860 17D2  
                                           u781 15F6                                             u861 17CE  
                                           u950 1588                                             u790 1622  
                                           u870 146E                                             u951 1584  
                                           u791 161E                                             u871 146A  
                                           u960 16BA                                             u880 148C  
                                           u937 1546                                             u961 16B6  
                                           u881 1488                                             u970 1210  
                                           u890 14A8                                             u947 156E  
                                           u971 120C                                             u891 14A4  
                                           u980 124E                                             u981 124A  
                                           u990 1280                                             u991 127C  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  conecta@tempo 002C                           ??_manda_esp8266_bytes 002C  
                                          l1110 1772                                            l1104 17AA  
                                          l2000 17AE                                            l1130 162A  
                                          l1122 132A                                            l2002 17B2  
                                          l2100 1212                                            l2020 145C  
                                          l2012 1832                                            l2004 17C2  
                                          l2110 1250                                            l2030 1492  
                                          l2022 146E                                            l2014 184E  
                                          l2006 17D2                                            l1128 15E0  
                                          l2032 14A8                                            l2024 1476  
                                          l2040 14C8                                            l2008 17D6  
                                          l2114 1266                                            l2106 1228  
                                          l2034 14B0                                            l2026 147E  
                                          l2018 1454                                            l2050 150E  
                                          l2042 14DA                                            l2210 0BA8  
                                          l2130 090C                                            l2122 08DA  
                                          l1139 13C0                                            l2060 18B0  
                                          l2108 124E                                            l2116 126A  
                                          l2036 14B2                                            l2028 148C  
                                          l2052 1516                                            l2044 14E2  
                                          l2220 0C0C                                            l2212 0BBA  
                                          l2204 0B78                                            l2140 0982  
                                          l2132 0918                                            l2124 08E6  
                                          l2062 152C                                            l2070 1676  
                                          l2118 1282                                            l2038 14B8  
                                          l2054 151C                                            l2046 14EA  
                                          l2230 0C42                                            l2222 0C18  
                                          l2214 0BCC                                            l2150 09D2  
                                          l2142 0986                                            l2134 0936  
                                          l2126 08F8                                            l2056 18A6  
                                          l2064 1530                                            l2072 167A  
                                          l2080 1194                                            l2048 14F8  
                                          l2240 0C88                                            l2232 0C5A  
                                          l2224 0C20                                            l2216 0BE2  
                                          l2208 0BA6                                            l2160 0A3C  
                                          l2152 09DA                                            l2144 09A8  
                                          l2136 093E                                            l2128 0904  
                                          l2058 189C                                            l2066 1554  
                                          l2074 168E                                            l2090 11B8  
                                          l2082 11B0                                            l1098 17DC  
                                          l2242 0CCA                                            l2234 0C70  
                                          l2226 0C32                                            l2218 0BE8  
                                          l2250 0D0E                                            l2170 0A82  
                                          l2162 0A48                                            l2154 09E6  
                                          l2146 09B8                                            l2138 095A  
                                          l2260 1728                                            l2068 1558  
                                          l2076 169A                                            l2092 11CE  
                                          l2084 11B2                                            l2244 0CD6  
                                          l2236 0C7C                                            l2228 0C3E  
                                          l2172 0AAC                                            l2164 0A54  
                                          l2156 09EA                                            l2148 09C0  
                                          l2262 1734                                            l2254 16FC  
                                          l2094 11DA                                            l2086 11B4  
                                          l2078 118C                                            l2246 0CDA  
                                          l2238 0C80                                            l2190 0B4C  
                                          l2174 0AB0                                            l2166 0A60  
                                          l2158 0A26                                            l2182 0AD8  
                                          l2256 1710                                            l2096 11EA  
                                          l2088 11B6                                            l2264 16BC  
                                          l2192 0B50                                            l2184 0B26  
                                          l2176 0AB4                                            l2168 0A64  
                                          l2248 0CEC                                            l2280 1408  
                                          l2272 13C2                                            l2600 1658  
                                          l2258 171C                                            l1562 17DE  
                                          l2098 1210                                            l2266 16C8  
                                          l2186 0B36                                            l2194 0B5C  
                                          l2178 0AD2                                            l2370 0F0C  
                                          l2290 143C                                            l2282 1414  
                                          l2274 13DE                                            l2602 165C  
                                          l2610 1060                                            l1564 1808  
                                          l2292 188E                                            l2268 16DE  
                                          l2196 0B6C                                            l2188 0B3E  
                                          l2380 0FA6                                            l2372 0F28  
                                          l2284 1418                                            l2276 13EA  
                                          l2604 1660                                            l2620 106A  
                                          l2612 1062                                            l1566 1858  
                                          l2294 1896                                            l2198 0B74  
                                          l2390 101E                                            l2382 0FBC  
                                          l2374 0F44                                            l2286 141E  
                                          l2278 1400                                            l2630 10FC  
                                          l2622 106C                                            l2614 1064  
                                          l2606 105A                                            l2384 0FCC  
                                          l2376 0F68                                            l2288 1420  
                                          l2640 116E                                            l2632 1120  
                                          l2624 1090                                            l2616 1066  
                                          l2608 105E                                            l1930 173A  
                                          l2386 0FE2                                            l2378 0F80  
                                          l2634 1136                                            l2626 10B4  
                                          l2618 1068                                            l1932 1746  
                                          l1940 132C                                            l2388 1006  
                                          l2580 158C                                            l2636 1142  
                                          l2628 10D8                                            l1934 174A  
                                          l1950 1396                                            l1942 1330  
                                          l2590 15CA                                            l2582 15AE  
                                          l2638 1158                                            l1960 15FA  
                                          l1936 1766                                            l1944 1348  
                                          l1952 139E                                            l2584 15B2  
                                          l2592 162C                                            l1970 187A  
                                          l1954 13B8                                            l1946 1370  
                                          l2586 15C2                                            l2578 158A  
                                          l2594 162E                                            l1972 1888  
                                          l1980 1790                                            l1964 1606  
                                          l2588 15C6                                            l2596 1650  
                                          l1974 1774                                            l1966 1622  
                                          l1958 15E0                                            l1990 12D0  
                                          l1982 1286                                            l2598 1654  
                                          l1976 1780                                            l1984 128A  
                                          l1992 12F8                                            l1978 178C  
                                          l1994 130A                                            l1986 12C4  
                                          l1996 1322                                            STR_1 08CC  
                                          STR_2 08D5                                            STR_3 08C6  
                                          STR_4 0885                                            STR_5 08D5  
                                          STR_6 089D                                            STR_7 080B  
                                          STR_8 08D5                                            STR_9 08D5  
                                          u1000 08F8                                            _CREN 007D5C  
                                          u1001 08F4                                            u1010 0936  
                                          u1011 0932                                            u1100 0B26  
                                          u1020 09A4                                            u1101 0B22  
                                          u1021 09A0                                            u1110 0B4C  
                                          u1030 09D2                                            u1111 0B48  
                                          u1031 09CE                                            u1200 0CEC  
                                          u1120 0BA2                                            u1040 0A16  
                                          u1201 0CE8                                            u1121 0B9E  
                                          u1210 0D0E                                            u1130 0BBA  
                                          u1050 0A26                                            u1211 0D0A  
                                          u1131 0BB6                                            u1051 0A22  
                                          u1140 0BCC                                            u1060 0A3C  
                                          u1220 143C                                            u1141 0BC8  
                                          u1061 0A38                                            u1221 1438  
                                          u1150 0BE2                                            u1070 0A7E  
                                          u1151 0BDE                                            u1071 0A7A  
                                          u1047 0A0C                                            u1160 0C0C  
                                          u1080 0AAA                                            u1161 0C08  
                                          u1170 0C32                                            u1090 0ACE  
                                          u1171 0C2E                                            u1091 0ACA  
                                          u1180 0C5A                                            u1181 0C56  
                                          _LATA 000F89                                            u1190 0C70  
                                          _LATB 000F8A                                            u1191 0C6C  
                                          u1087 0AA0                                            _LATC 000F8B  
                                          u1360 0FCC                                            u1361 0FC8  
                                          u1370 0FDE                                            u1507 11E0  
                                          u1371 0FDA                                            u1427 112A  
                                          u1517 1218                                            u1437 13F4  
                                          u1527 1256                                            u1447 1446  
                                          u1457 0F72                                            u1467 0FB0  
                                          u1477 1010                                            u1487 104C  
                                          u1497 11C2                                            _RCIE 007CED  
                                          _RCIF 007CF5                                            _WPUB 000F85  
                                 _EUSART1_Write 1878                                            _led1 0042  
                                          _led2 0040                                _manda_AT_COMANDO 16BC  
                                          _main 105A                                            _val1 0036  
                                          _val2 0032                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            btemp 005A  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0030                                    ___param_bank 000000  
                                 conecta@ip_dir 0028                   __end_of_OSCILLATOR_Initialize 1878  
                                         ?_main 0001                                           STR_10 0891  
                                         STR_11 08D5                                           STR_12 08D5  
                                         STR_13 08A7                                           STR_21 084C  
                                         STR_22 084C                                           STR_30 08D5  
                                         STR_14 08D5                                           STR_31 08D5  
                                         STR_15 08D5                                           STR_23 082F  
                                         STR_32 08D5                                           STR_16 086C  
                                         STR_24 085E                                           STR_17 0869  
                                         STR_25 08D5                                           STR_33 08BF  
                                         STR_26 08D5                                           STR_34 08B8  
                                         STR_18 0879                                           STR_27 08D5  
                                         STR_19 08D1                                           STR_28 08B0  
                                         STR_29 085E                    __end_of_EUSART1_Write_string 158A  
                                         _LATB0 007C50                                           _LATA5 007C4D  
                                         _LATB7 007C57                                 __end_of___lwdiv 14C8  
                               __end_of___lwmod 152C                                           i2l203 0024  
                                         i2l322 0F08                                           i2l345 0F0A  
                                         _RCREG 000FAE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                               __end_of_conecta 105A                                 __end_of_dpowers 080B  
                               __end_of_isdigit 17DE                                  ?_EUSART1_Write 0001  
                                         tablat 000FF5                                           ttemp5 005B  
                                         ttemp6 005E                                           ttemp7 0062  
                                         status 000FD8                                           wtemp8 005B  
                               __end_of_sprintf 0D1C                                 __end_of_strncmp 13C2  
                        _Uart1_write_text_const 1676                             manda_AT_COMANDO@cap 0020  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 180C  
                    __end_of_EUSART1_Initialize 173A                                    __end_of_main 118C  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0030  
                                 __activetblptr 000002                                          _ACTCON 000FB5  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          i2l2300 0D32  
                                        i2l2310 0D6E                                          i2l2302 0D42  
                                        i2l2320 0DA0                                          i2l2312 0D76  
                                        i2l2304 0D44                                          i2l2330 0DD4  
                                        i2l2314 0D7A                                          i2l2306 0D54  
                                        i2l2332 0DE0                                          i2l2324 0DB6  
                                        i2l2316 0D8C                                          i2l2308 0D5C  
                                        i2l2350 0E4C                                          i2l2342 0E14  
                                        i2l2334 0DF2                                          i2l2326 0DBE  
                                        i2l2318 0D98                                          i2l2360 0E8C  
                                        i2l2344 0E26                                          i2l2336 0DFE  
                                        i2l2440 0020                                          i2l2362 0EA8  
                                        i2l2354 0E60                                          i2l2346 0E3A  
                                        i2l2338 0E00                                          i2l2364 0EBC  
                                        i2l2356 0E7A                                          i2l2348 0E4A  
                                        i2l2358 0E8A                                          i2l2438 0012  
                                        i2l2368 0EC2                                          i2l2296 0D1C  
                                        i2l2298 0D2A                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                          _modbus_write_holding 162C                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                          ___wmul 1832  
                                        _captu1 00D2                                          _codigo 004A  
                                     ??___lwdiv 0009                                       ??___lwmod 0010  
                                        _lectu1 0048                                          _lectu2 0046  
                      ?_EUSART1_SetErrorHandler 0005                                          _memset 1774  
                                        clear_0 1812                                          clear_1 181E  
                                        _tamano 0044                                          isa$std 000001  
                                        _tiempo 118C                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                       ??_conecta 002A  
                                        _strchr 15E0                                          _strlen 173A  
                                        _strstr 1286                     ??_modbus_write_coilsdigital 0030  
                                     ??_isdigit 0005                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_EUSART1_Write 0005  
                                     ??_sprintf 0017                                       ??_strncmp 000F  
                          manda_AT_COMANDO@cap1 0022                           ?_modbus_write_holding 00F0  
                             _SYSTEM_Initialize 188E                                      __accesstop 0060  
                       __end_of__initialization 1824                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                            _EUSART1_Write_string 152C  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0007  
                      __end_of_manda_AT_COMANDO 16FC                       __end_of_SYSTEM_Initialize 189C  
                                  sprintf@width 0025                                      __pbssBANK0 0060  
                     _modbus_write_coilsdigital 158A                           ?_EUSART1_Write_string 0006  
               __end_of_EUSART1_SetErrorHandler 18BA                                         ?___wmul 0005  
                                       ?_memset 0005                                         ?_tiempo 0014  
                                       ?_strchr 0005                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 18B0                  _EUSART1_SetFramingErrorHandler 18A6  
                                       ?_strstr 0010                     __end_of_manda_esp8266_bytes 1454  
                                       _OSCCON2 000FD2                                      _buff_punte 003C  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                        ??_modbus_write_holding 0030                         ?_Uart1_write_text_const 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                                    _estado_rec 0058                                         ___lwdiv 1454  
                                       ___lwmod 14C8                                    __psmallconst 0800  
                                       __pcinit 180C                                         __ramtop 0800  
                                       _dato_rx 0056                                         __ptext0 105A  
                                       __ptext1 162C                                         __ptext2 158A  
                                       __ptext3 13C2                                         __ptext4 0F0C  
                                       __ptext5 08DA                                         __ptext6 17AC  
                                       __ptext7 1832                                         __ptext8 14C8  
                                       __ptext9 1454                                         _conecta 0F0C  
                                       _buff_tx 0060                                         _dpowers 0801  
                         _OSCILLATOR_Initialize 1858                                         _isdigit 17AC  
                                    _rec_socket 0055                                         _rec_son 003A  
                            _EUSART1_Initialize 16FC                        ??_PIN_MANAGER_Initialize 0005  
                      EUSART1_Write_string@data 0006                  __end_of_Uart1_write_text_const 16BC  
                                       _sprintf 08DA                                         _strncmp 132C  
                          end_of_initialization 1824                             ?_EUSART1_Initialize 0001  
                        ??_EUSART1_Write_string 0008                                         memset@c 0007  
                                       memset@n 0009                                         memset@p 000B  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0050  
                                   tiempo@cont1 001C                                     tiempo@milis 0014  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                            ??_EUSART1_Initialize 0007  
                                       strlen@s 0005                     modbus_write_holding@dat_mod 00F2  
                   modbus_write_holding@dir_mod 00F0                         _esp82666_interrupcion_1 0D1C  
                         manda_AT_COMANDO@coman 001E                                      _trama_cont 0057  
                           EUSART1_Write@txData 0005                        manda_esp8266_bytes@info2 0028  
                      manda_esp8266_bytes@largo 002A                                  __end_of___wmul 1858  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_memset 17AC  
                             ?_manda_AT_COMANDO 001E                                  __end_of_tiempo 1286  
                                __end_of_strchr 162C                                  __end_of_strlen 1774  
                                __end_of_strstr 132C                             start_initialization 180C  
                            ??_manda_AT_COMANDO 0026                           __end_of_EUSART1_Write 188E  
                                      ??___wmul 0009                                        ??_memset 000B  
             __end_of_modbus_write_coilsdigital 15E0                      Uart1_write_text_const@info 0006  
                                      ??_tiempo 001A                       ??_esp82666_interrupcion_1 0001  
                                      ??_strchr 0009                                        ??_strlen 0007  
                                      ??_strstr 0014                                     __pbssCOMRAM 0032  
                                 __pcstackBANK0 00F0                                    _isdigit$1296 0006  
                     manda_esp8266_bytes@cuenta 002F                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                     sprintf@flag 0020  
                                   sprintf@prec 001B                                ___lwdiv@dividend 0005  
                        _PIN_MANAGER_Initialize 17DE                                       __pintcode 0008  
                                      ?___lwdiv 0005                                        ?___lwmod 000C  
                  ??_INTERRUPT_InterruptManager 0003                                     _digital_out 004C  
                                      ?_conecta 0028                                     __smallconst 0800  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 0001                            _EUSART1_ErrorHandler 004E  
                                   _flag_modbus 0054                         _EUSART1_SetErrorHandler 18B0  
                              ___lwdiv@quotient 0009                                        ?_sprintf 0011  
                                      ?_strncmp 0009                                       _rec_largo 006A  
                                     _rec_punte 003E                 __end_of_esp82666_interrupcion_1 0F0C  
                                     _modbus_rx 00A0                                       _modbus_tx 006E  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _PIE1bits 000F9D                                        i2u130_40 0E10  
                                      i2u130_41 0E0C                                      tiempo@cap1 0018  
                                      i2u131_40 0E26                                        i2u123_40 0D2A  
                                      i2u131_41 0E22                                        i2u123_41 0D26  
                                      i2u132_40 0E5C                                        i2u124_40 0D54  
                                      i2u132_41 0E58                                        i2u124_41 0D50  
                                      i2u133_40 0E74                                        i2u125_40 0D6E  
                                      i2u133_41 0E6E                                        i2u125_41 0D6A  
                                      i2u134_40 0E76                                        i2u126_40 0D8C  
                                      i2u126_41 0D88                                        i2u135_40 0EA8  
                                      i2u127_40 0DB2                                        i2u135_41 0EA4  
                                      i2u127_41 0DAE                                        i2u128_40 0DD0  
                                      i2u128_41 0DCC                                        i2u129_40 0DF2  
                                      i2u129_41 0DEE                                        i2u139_40 0020  
                                      i2u139_41 001C                                        _PIR1bits 000F9E  
                             ___wmul@multiplier 0005                         manda_esp8266_bytes@byte 002E  
                                   _INTCON2bits 000FF1                                        __Hrparam 0000  
                                      __Lrparam 0000                         ??_OSCILLATOR_Initialize 0005  
              modbus_write_coilsdigital@dat_dig 00F2                modbus_write_coilsdigital@dir_mod 00F0  
                     ??_EUSART1_SetErrorHandler 0007                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@len 0021                                      sprintf@val 0023  
                               ___lwdiv@divisor 0007                                 ___lwdiv@counter 000B  
                                      __ptext10 16BC                                        __ptext11 118C  
                                      __ptext20 188E                                        __ptext12 1286  
                                      __ptext21 17DE                                        __ptext13 132C  
                                      __ptext22 1858                                        __ptext14 173A  
                                      __ptext23 16FC                                        __ptext15 15E0  
                                      __ptext24 189C                                        __ptext16 1774  
                                      __ptext25 18A6                                        __ptext17 1676  
                                      __ptext26 18B0                                        __ptext18 152C  
                                      __ptext19 1878                                        __ptext28 0D1C  
                                    strncmp@len 000D                                       tiempo@cap 0016  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                      int$flags 005A              __end_of_INTERRUPT_InterruptManager 0030  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 0052  
                      ??_Uart1_write_text_const 0009                                      _INTCONbits 000FF2  
                                      isdigit@c 0007                                        memset@p1 0005  
                                      intlevel2 0000                                       sprintf@ap 001E  
                                     sprintf@cp 001C                                       sprintf@sp 0011  
                                     strchr@chr 0007                                ___lwmod@dividend 000C  
                                     strchr@ptr 0005                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 18A6                  _EUSART1_SetOverrunErrorHandler 189C  
                                    _RCSTA1bits 000FAB                                       strncmp@s1 0009  
                                     strncmp@s2 000B  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                           _manda_esp8266_bytes 13C2                              _eusart1RxLastError 0059  
                    ?_modbus_write_coilsdigital 00F0                                        sprintf@c 0027  
                                      sprintf@f 0013                                 ___lwmod@divisor 000E  
                                      strlen@cp 0007                                 ___lwmod@counter 0010  
                                      strstr@s1 0010                                        strstr@s2 0012  
                          ?_manda_esp8266_bytes 0028                  __end_of_PIN_MANAGER_Initialize 180C  
                       manda_AT_COMANDO@retardo 0024  
