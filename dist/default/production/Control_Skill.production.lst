

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 20 20:34:05 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44  0000                     
    45                           ; Generated 09/02/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F25K50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    81  0000                     
    82 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    83  0000                     
    84 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    85  0000                     
    86                           	psect	smallconst
    87  000800                     __psmallconst:
    88                           	callstack 0
    89  000800  00                 	db	0
    90  000801                     _dpowers:
    91                           	callstack 0
    92  000801  0001               	dw	1
    93  000803  0000               	dw	0
    94  000805  000A               	dw	10
    95  000807  0000               	dw	0
    96  000809  0064               	dw	100
    97  00080B  0000               	dw	0
    98  00080D  03E8               	dw	1000
    99  00080F  0000               	dw	0
   100  000811  2710               	dw	10000
   101  000813  0000               	dw	0
   102  000815  86A0               	dw	34464
   103  000817  0001               	dw	1
   104  000819  4240               	dw	16960
   105  00081B  000F               	dw	15
   106  00081D  9680               	dw	38528
   107  00081F  0098               	dw	152
   108  000821  E100               	dw	57600
   109  000823  05F5               	dw	1525
   110  000825  CA00               	dw	51712
   111  000827  3B9A               	dw	15258
   112  000829                     __end_of_dpowers:
   113                           	callstack 0
   114  000829                     _hexpowers:
   115                           	callstack 0
   116  000829  0001               	dw	1
   117  00082B  0000               	dw	0
   118  00082D  0010               	dw	16
   119  00082F  0000               	dw	0
   120  000831  0100               	dw	256
   121  000833  0000               	dw	0
   122  000835  1000               	dw	4096
   123  000837  0000               	dw	0
   124  000839  0000               	dw	0
   125  00083B  0001               	dw	1
   126  00083D  0000               	dw	0
   127  00083F  0010               	dw	16
   128  000841  0000               	dw	0
   129  000843  0100               	dw	256
   130  000845  0000               	dw	0
   131  000847  1000               	dw	4096
   132  000849                     __end_of_hexpowers:
   133                           	callstack 0
   134  0000                     _TXREG1	set	4013
   135  0000                     _RCREG1	set	4014
   136  0000                     _SPBRG1	set	4015
   137  0000                     _TXSTA1	set	4012
   138  000849                     STR_12:
   139  000849  30                 	db	48	;'0'
   140  00084A  31                 	db	49	;'1'
   141  00084B  32                 	db	50	;'2'
   142  00084C  33                 	db	51	;'3'
   143  00084D  34                 	db	52	;'4'
   144  00084E  35                 	db	53	;'5'
   145  00084F  36                 	db	54	;'6'
   146  000850  37                 	db	55	;'7'
   147  000851  38                 	db	56	;'8'
   148  000852  39                 	db	57	;'9'
   149  000853  61                 	db	97	;'a'
   150  000854  62                 	db	98	;'b'
   151  000855  63                 	db	99	;'c'
   152  000856  64                 	db	100	;'d'
   153  000857  65                 	db	101	;'e'
   154  000858  66                 	db	102	;'f'
   155  000859  00                 	db	0
   156  00085A                     STR_6:
   157  00085A  43                 	db	67	;'C'
   158  00085B  4F                 	db	79	;'O'
   159  00085C  44                 	db	68	;'D'
   160  00085D  49                 	db	73	;'I'
   161  00085E  47                 	db	71	;'G'
   162  00085F  4F                 	db	79	;'O'
   163  000860  20                 	db	32
   164  000861  49                 	db	73	;'I'
   165  000862  52                 	db	82	;'R'
   166  000863  20                 	db	32
   167  000864  3D                 	db	61	;'='
   168  000865  20                 	db	32
   169  000866  00                 	db	0
   170  000867                     STR_9:
   171  000867  43                 	db	67	;'C'
   172  000868  4F                 	db	79	;'O'
   173  000869  4D                 	db	77	;'M'
   174  00086A  41                 	db	65	;'A'
   175  00086B  4E                 	db	78	;'N'
   176  00086C  44                 	db	68	;'D'
   177  00086D  4F                 	db	79	;'O'
   178  00086E  31                 	db	49	;'1'
   179  00086F  00                 	db	0
   180  000870                     STR_10:
   181  000870  43                 	db	67	;'C'
   182  000871  4F                 	db	79	;'O'
   183  000872  4D                 	db	77	;'M'
   184  000873  41                 	db	65	;'A'
   185  000874  4E                 	db	78	;'N'
   186  000875  44                 	db	68	;'D'
   187  000876  4F                 	db	79	;'O'
   188  000877  32                 	db	50	;'2'
   189  000878  00                 	db	0
   190  000879                     STR_11:
   191  000879  43                 	db	67	;'C'
   192  00087A  4F                 	db	79	;'O'
   193  00087B  4D                 	db	77	;'M'
   194  00087C  41                 	db	65	;'A'
   195  00087D  4E                 	db	78	;'N'
   196  00087E  44                 	db	68	;'D'
   197  00087F  4F                 	db	79	;'O'
   198  000880  33                 	db	51	;'3'
   199  000881  00                 	db	0
   200  000882                     STR_1:
   201  000882  53                 	db	83	;'S'
   202  000883  6F                 	db	111	;'o'
   203  000884  6E                 	db	110	;'n'
   204  000885  3A                 	db	58	;':'
   205  000886  20                 	db	32
   206  000887  00                 	db	0
   207  000888                     STR_5:
   208  000888  25                 	db	37
   209  000889  6C                 	db	108	;'l'
   210  00088A  78                 	db	120	;'x'
   211  00088B  00                 	db	0
   212  00088C                     STR_2:
   213  00088C  25                 	db	37
   214  00088D  64                 	db	100	;'d'
   215  00088E  00                 	db	0
   216  00088F                     STR_4:
   217  00088F  0A                 	db	10
   218  000890  00                 	db	0
   219  000891                     STR_3:
   220  000891  0D                 	db	13
   221  000892  00                 	db	0
   222  000893  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           	psect	nvCOMRAM
   225  000052                     __pnvCOMRAM:
   226                           	callstack 0
   227  000052                     _INT1_InterruptHandler:
   228                           	callstack 0
   229  000052                     	ds	2
   230  000054                     _EUSART1_ErrorHandler:
   231                           	callstack 0
   232  000054                     	ds	2
   233  000056                     _EUSART1_OverrunErrorHandler:
   234                           	callstack 0
   235  000056                     	ds	2
   236  000058                     _EUSART1_FramingErrorHandler:
   237                           	callstack 0
   238  000058                     	ds	2
   239  00005A                     _timer0ReloadVal:
   240                           	callstack 0
   241  00005A                     	ds	1
   242  0000                     _TMR0	set	4054
   243  0000                     _TRISBbits	set	3987
   244  0000                     _T0CONbits	set	4053
   245  0000                     _RCSTA1bits	set	4011
   246  0000                     _TXSTA1bits	set	4012
   247  0000                     _LATB7	set	31831
   248  0000                     _INT1E	set	32643
   249  0000                     _LATA5	set	31821
   250  0000                     _LATA4	set	31820
   251  0000                     _LATA3	set	31819
   252  0000                     _INT1IE	set	32643
   253  0000                     _TMR0IF	set	32658
   254  0000                     _INTEDG1	set	32653
   255  0000                     _INT1IF	set	32640
   256  0000                     _ANSELA	set	3931
   257  0000                     _ANSELB	set	3932
   258  0000                     _ANSELC	set	3933
   259  0000                     _LATA	set	3977
   260  0000                     _OSCTUNE	set	3995
   261  0000                     _PIR1bits	set	3998
   262  0000                     _RCSTA1	set	4011
   263  0000                     _BAUDCON1	set	4024
   264  0000                     _RCONbits	set	4048
   265  0000                     _OSCCON2	set	4050
   266  0000                     _OSCCON	set	4051
   267  0000                     _ACTCON	set	4021
   268  0000                     _SPBRGH1	set	4016
   269  0000                     _T0CON	set	4053
   270  0000                     _TMR0L	set	4054
   271  0000                     _TMR0H	set	4055
   272  0000                     _INTCON2bits	set	4081
   273  0000                     _TRISA	set	3986
   274  0000                     _LATC	set	3979
   275  0000                     _LATB	set	3978
   276  0000                     _TRISC	set	3988
   277  0000                     _TRISB	set	3987
   278  0000                     _WPUB	set	3973
   279  0000                     _INTCONbits	set	4082
   280  0000                     _INTCON3bits	set	4080
   281                           
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285  001A08                     __pcinit:
   286                           	callstack 0
   287  001A08                     start_initialization:
   288                           	callstack 0
   289  001A08                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Clear objects allocated to BANK0 (70 bytes)
   293  001A08  EE00  F060         	lfsr	0,__pbssBANK0
   294  001A0C  0E46               	movlw	70
   295  001A0E                     clear_0:
   296  001A0E  6AEE               	clrf	postinc0,c
   297  001A10  06E8               	decf	wreg,f,c
   298  001A12  E1FD               	bnz	clear_0
   299                           
   300                           ; Clear objects allocated to COMRAM (20 bytes)
   301  001A14  EE00  F03E         	lfsr	0,__pbssCOMRAM
   302  001A18  0E14               	movlw	20
   303  001A1A                     clear_1:
   304  001A1A  6AEE               	clrf	postinc0,c
   305  001A1C  06E8               	decf	wreg,f,c
   306  001A1E  E1FD               	bnz	clear_1
   307  001A20                     end_of_initialization:
   308                           	callstack 0
   309  001A20                     __end_of__initialization:
   310                           	callstack 0
   311  001A20  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312  001A22  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313  001A24  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  001A26  6EF8               	movwf	tblptru,c
   315  001A28  0100               	movlb	0
   316  001A2A  EF37  F008         	goto	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMRAM
   319  00003E                     __pbssCOMRAM:
   320                           	callstack 0
   321  00003E                     _codigo_ir:
   322                           	callstack 0
   323  00003E                     	ds	4
   324  000042                     _cuenta:
   325                           	callstack 0
   326  000042                     	ds	2
   327  000044                     _timer_aux:
   328                           	callstack 0
   329  000044                     	ds	1
   330  000045                     _cont:
   331                           	callstack 0
   332  000045                     	ds	1
   333  000046                     _flag_codigo:
   334                           	callstack 0
   335  000046                     	ds	1
   336  000047                     _eusart1RxLastError:
   337                           	callstack 0
   338  000047                     	ds	1
   339  000048                     _texto:
   340                           	callstack 0
   341  000048                     	ds	10
   342                           
   343                           	psect	bssBANK0
   344  000060                     __pbssBANK0:
   345                           	callstack 0
   346  000060                     _tiempo:
   347                           	callstack 0
   348  000060                     	ds	70
   349                           
   350                           	psect	cstackCOMRAM
   351  000001                     __pcstackCOMRAM:
   352                           	callstack 0
   353  000001                     ??_INTERRUPT_InterruptManager:
   354  000001                     
   355                           ; 1 bytes @ 0x0
   356  000001                     	ds	4
   357  000005                     ?___lmul:
   358                           	callstack 0
   359  000005                     ?___lldiv:
   360                           	callstack 0
   361  000005                     ?___xxtofl:
   362                           	callstack 0
   363  000005                     EUSART1_Write@txData:
   364                           	callstack 0
   365  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   366                           	callstack 0
   367  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   368                           	callstack 0
   369  000005                     EUSART1_SetErrorHandler@interruptHandler:
   370                           	callstack 0
   371  000005                     INT1_SetInterruptHandler@InterruptHandler:
   372                           	callstack 0
   373  000005                     ___lmul@multiplier:
   374                           	callstack 0
   375  000005                     ___lldiv@dividend:
   376                           	callstack 0
   377  000005                     ___xxtofl@val:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x4
   381  000005                     	ds	1
   382  000006                     EUSART1_Write_string@data:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x5
   386  000006                     	ds	1
   387  000007                     
   388                           ; 1 bytes @ 0x6
   389  000007                     	ds	1
   390  000008                     
   391                           ; 1 bytes @ 0x7
   392  000008                     	ds	1
   393  000009                     ??___xxtofl:
   394  000009                     ___lmul@multiplicand:
   395                           	callstack 0
   396  000009                     ___lldiv@divisor:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x8
   400  000009                     	ds	4
   401  00000D                     ___xxtofl@sign:
   402                           	callstack 0
   403  00000D                     ___lmul@product:
   404                           	callstack 0
   405  00000D                     ___lldiv@quotient:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0xC
   409  00000D                     	ds	1
   410  00000E                     ___xxtofl@exp:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xD
   414  00000E                     	ds	1
   415  00000F                     ___xxtofl@arg:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0xE
   419  00000F                     	ds	2
   420  000011                     ?_Hash_algoritmo:
   421                           	callstack 0
   422  000011                     ___lldiv@counter:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x10
   426  000011                     	ds	1
   427  000012                     ?___llmod:
   428                           	callstack 0
   429  000012                     ___llmod@dividend:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x11
   433  000012                     	ds	1
   434  000013                     ?___flmul:
   435                           	callstack 0
   436  000013                     ___flmul@b:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x12
   440  000013                     	ds	2
   441  000015                     ??_Hash_algoritmo:
   442                           
   443                           ; 1 bytes @ 0x14
   444  000015                     	ds	1
   445  000016                     ___llmod@divisor:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x15
   449  000016                     	ds	1
   450  000017                     ___flmul@a:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x16
   454  000017                     	ds	3
   455  00001A                     ___llmod@counter:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x19
   459  00001A                     	ds	1
   460  00001B                     ??___flmul:
   461  00001B                     ?_sprintf:
   462                           	callstack 0
   463  00001B                     sprintf@sp:
   464                           	callstack 0
   465  00001B                     Hash_algoritmo@hash_acum:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x1A
   469  00001B                     	ds	2
   470  00001D                     sprintf@f:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x1C
   474  00001D                     	ds	2
   475  00001F                     ___flmul@sign:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x1E
   479  00001F                     	ds	1
   480  000020                     ___flmul@grs:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x1F
   484  000020                     	ds	3
   485  000023                     ??_sprintf:
   486                           
   487                           ; 1 bytes @ 0x22
   488  000023                     	ds	1
   489  000024                     ___flmul@aexp:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x23
   493  000024                     	ds	1
   494  000025                     sprintf@idx:
   495                           	callstack 0
   496  000025                     ___flmul@bexp:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x24
   500  000025                     	ds	1
   501  000026                     sprintf@prec:
   502                           	callstack 0
   503  000026                     ___flmul@prod:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x25
   507  000026                     	ds	2
   508  000028                     sprintf@ap:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x27
   512  000028                     	ds	2
   513  00002A                     ___flmul@temp:
   514                           	callstack 0
   515  00002A                     sprintf@val:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x29
   519  00002A                     	ds	2
   520  00002C                     ___flge@ff1:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x2B
   524  00002C                     	ds	2
   525  00002E                     sprintf@flag:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x2D
   529  00002E                     	ds	1
   530  00002F                     sprintf@c:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x2E
   534  00002F                     	ds	1
   535  000030                     ___flge@ff2:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x2F
   539  000030                     	ds	4
   540  000034                     ??___flge:
   541                           
   542                           ; 1 bytes @ 0x33
   543  000034                     	ds	4
   544  000038                     ??_normaliza:
   545                           
   546                           ; 1 bytes @ 0x37
   547  000038                     	ds	4
   548  00003C                     ??_main:
   549                           
   550                           ; 1 bytes @ 0x3B
   551  00003C                     	ds	2
   552                           
   553 ;;
   554 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   555 ;;
   556 ;; *************** function _main *****************
   557 ;; Defined at:
   558 ;;		line 234 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       0       0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0
   574 ;;      Temps:          2       0       0       0       0       0       0       0       0
   575 ;;      Totals:         2       0       0       0       0       0       0       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels required when called: 7
   578 ;; This function calls:
   579 ;;		_EUSART1_Write_string
   580 ;;		_Hash_algoritmo
   581 ;;		_SYSTEM_Initialize
   582 ;;		_normaliza
   583 ;;		_sprintf
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text0
   590  00106E                     __ptext0:
   591                           	callstack 0
   592  00106E                     _main:
   593                           	callstack 24
   594  00106E                     
   595                           ;main.c: 237: SYSTEM_Initialize();
   596  00106E  EC17  F00D         	call	_SYSTEM_Initialize	;wreg free
   597  001072                     
   598                           ;main.c: 239: ANSELA = 0b00000111;
   599  001072  0E07               	movlw	7
   600  001074  010F               	movlb	15	; () banked
   601  001076  6F5B               	movwf	91,b	;volatile
   602  001078                     
   603                           ; BSR set to: 15
   604                           ;main.c: 240: ANSELC = 0x00;
   605  001078  0E00               	movlw	0
   606  00107A  6F5D               	movwf	93,b	;volatile
   607  00107C                     
   608                           ; BSR set to: 15
   609                           ;main.c: 241: TRISBbits.TRISB7 = 0;
   610  00107C  9E93               	bcf	147,7,c	;volatile
   611  00107E                     
   612                           ; BSR set to: 15
   613                           ;main.c: 248: (INTCONbits.GIE = 1);
   614  00107E  8EF2               	bsf	242,7,c	;volatile
   615  001080                     
   616                           ; BSR set to: 15
   617                           ;main.c: 254: (INTCONbits.PEIE = 1);
   618  001080  8CF2               	bsf	242,6,c	;volatile
   619  001082                     l2237:
   620                           
   621                           ;main.c: 266: {;main.c: 268: if (flag_codigo == 1)
   622  001082  0446               	decf	_flag_codigo^0,w,c
   623  001084  A4D8               	btfss	status,2,c
   624  001086  EF47  F008         	goto	u1601
   625  00108A  EF49  F008         	goto	u1600
   626  00108E                     u1601:
   627  00108E  EF29  F009         	goto	l2295
   628  001092                     u1600:
   629  001092                     
   630                           ;main.c: 269: {;main.c: 272: normaliza();
   631  001092  EC1C  F00A         	call	_normaliza	;wreg free
   632  001096                     
   633                           ;main.c: 273: codigo_ir = Hash_algoritmo();
   634  001096  EC6A  F00B         	call	_Hash_algoritmo	;wreg free
   635  00109A  C011  F03E         	movff	?_Hash_algoritmo,_codigo_ir
   636  00109E  C012  F03F         	movff	?_Hash_algoritmo+1,_codigo_ir+1
   637  0010A2  C013  F040         	movff	?_Hash_algoritmo+2,_codigo_ir+2
   638  0010A6  C014  F041         	movff	?_Hash_algoritmo+3,_codigo_ir+3
   639  0010AA                     
   640                           ;main.c: 274: EUSART1_Write_string("Son: ");
   641  0010AA  0E82               	movlw	low STR_1
   642  0010AC  6E06               	movwf	EUSART1_Write_string@data^0,c
   643  0010AE  0E08               	movlw	high STR_1
   644  0010B0  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   645  0010B2  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   646  0010B6                     
   647                           ;main.c: 275: sprintf(texto, "%d", cuenta);
   648  0010B6  0E48               	movlw	low _texto
   649  0010B8  6E1B               	movwf	sprintf@sp^0,c
   650  0010BA  0E00               	movlw	high _texto
   651  0010BC  6E1C               	movwf	(sprintf@sp+1)^0,c
   652  0010BE  0E8C               	movlw	low STR_2
   653  0010C0  6E1D               	movwf	sprintf@f^0,c
   654  0010C2  0E08               	movlw	high STR_2
   655  0010C4  6E1E               	movwf	(sprintf@f+1)^0,c
   656  0010C6  C042  F01F         	movff	_cuenta,?_sprintf+4
   657  0010CA  C043  F020         	movff	_cuenta+1,?_sprintf+5
   658  0010CE  EC5F  F006         	call	_sprintf	;wreg free
   659  0010D2                     
   660                           ;main.c: 276: EUSART1_Write_string(texto);
   661  0010D2  0E48               	movlw	low _texto
   662  0010D4  6E06               	movwf	EUSART1_Write_string@data^0,c
   663  0010D6  0E00               	movlw	high _texto
   664  0010D8  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   665  0010DA  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   666  0010DE                     
   667                           ;main.c: 277: EUSART1_Write_string("\r");
   668  0010DE  0E91               	movlw	low STR_3
   669  0010E0  6E06               	movwf	EUSART1_Write_string@data^0,c
   670  0010E2  0E08               	movlw	high STR_3
   671  0010E4  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   672  0010E6  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   673  0010EA                     
   674                           ;main.c: 278: EUSART1_Write_string("\n");
   675  0010EA  0E8F               	movlw	low STR_4
   676  0010EC  6E06               	movwf	EUSART1_Write_string@data^0,c
   677  0010EE  0E08               	movlw	high STR_4
   678  0010F0  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   679  0010F2  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   680  0010F6                     
   681                           ;main.c: 279: sprintf(texto, "%lx", codigo_ir);
   682  0010F6  0E48               	movlw	low _texto
   683  0010F8  6E1B               	movwf	sprintf@sp^0,c
   684  0010FA  0E00               	movlw	high _texto
   685  0010FC  6E1C               	movwf	(sprintf@sp+1)^0,c
   686  0010FE  0E88               	movlw	low STR_5
   687  001100  6E1D               	movwf	sprintf@f^0,c
   688  001102  0E08               	movlw	high STR_5
   689  001104  6E1E               	movwf	(sprintf@f+1)^0,c
   690  001106  C03E  F01F         	movff	_codigo_ir,?_sprintf+4
   691  00110A  C03F  F020         	movff	_codigo_ir+1,?_sprintf+5
   692  00110E  C040  F021         	movff	_codigo_ir+2,?_sprintf+6
   693  001112  C041  F022         	movff	_codigo_ir+3,?_sprintf+7
   694  001116  EC5F  F006         	call	_sprintf	;wreg free
   695  00111A                     
   696                           ;main.c: 280: EUSART1_Write_string("CODIGO IR = ");
   697  00111A  0E5A               	movlw	low STR_6
   698  00111C  6E06               	movwf	EUSART1_Write_string@data^0,c
   699  00111E  0E08               	movlw	high STR_6
   700  001120  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   701  001122  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   702  001126                     
   703                           ;main.c: 281: EUSART1_Write_string(texto);
   704  001126  0E48               	movlw	low _texto
   705  001128  6E06               	movwf	EUSART1_Write_string@data^0,c
   706  00112A  0E00               	movlw	high _texto
   707  00112C  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   708  00112E  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   709  001132                     
   710                           ;main.c: 282: EUSART1_Write_string("\r");
   711  001132  0E91               	movlw	low STR_3
   712  001134  6E06               	movwf	EUSART1_Write_string@data^0,c
   713  001136  0E08               	movlw	high STR_3
   714  001138  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   715  00113A  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   716  00113E                     
   717                           ;main.c: 283: EUSART1_Write_string("\n");
   718  00113E  0E8F               	movlw	low STR_4
   719  001140  6E06               	movwf	EUSART1_Write_string@data^0,c
   720  001142  0E08               	movlw	high STR_4
   721  001144  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   722  001146  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   723  00114A                     
   724                           ;main.c: 285: if (codigo_ir == 0x811c9dc5)
   725  00114A  0EC5               	movlw	197
   726  00114C  183E               	xorwf	_codigo_ir^0,w,c
   727  00114E  E10D               	bnz	u1611
   728  001150  0E9D               	movlw	157
   729  001152  183F               	xorwf	(_codigo_ir+1)^0,w,c
   730  001154  E10A               	bnz	u1611
   731  001156  0E1C               	movlw	28
   732  001158  1840               	xorwf	(_codigo_ir+2)^0,w,c
   733  00115A  E107               	bnz	u1611
   734  00115C  0E81               	movlw	129
   735  00115E  1841               	xorwf	(_codigo_ir+3)^0,w,c
   736  001160  A4D8               	btfss	status,2,c
   737  001162  EFB5  F008         	goto	u1611
   738  001166  EFB7  F008         	goto	u1610
   739  00116A                     u1611:
   740  00116A  EFC8  F008         	goto	l2269
   741  00116E                     u1610:
   742  00116E                     
   743                           ;main.c: 286: {;main.c: 287: LATA3 =~ LATA3;
   744  00116E  A689               	btfss	3977,3,c	;volatile
   745  001170  EFBC  F008         	goto	u1621
   746  001174  EFBF  F008         	goto	u1620
   747  001178                     u1621:
   748  001178  8689               	bsf	3977,3,c	;volatile
   749  00117A  EFC0  F008         	goto	u1635
   750  00117E                     u1620:
   751  00117E  9689               	bcf	3977,3,c	;volatile
   752  001180                     u1635:
   753  001180                     
   754                           ;main.c: 288: EUSART1_Write_string("COMANDO1");
   755  001180  0E67               	movlw	low STR_9
   756  001182  6E06               	movwf	EUSART1_Write_string@data^0,c
   757  001184  0E08               	movlw	high STR_9
   758  001186  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   759  001188  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   760                           
   761                           ;main.c: 290: }
   762  00118C  EF0C  F009         	goto	l2281
   763  001190                     l2269:
   764                           
   765                           ;main.c: 291: else if (codigo_ir == 0xBF681DA0)
   766  001190  0EA0               	movlw	160
   767  001192  183E               	xorwf	_codigo_ir^0,w,c
   768  001194  E10D               	bnz	u1641
   769  001196  0E1D               	movlw	29
   770  001198  183F               	xorwf	(_codigo_ir+1)^0,w,c
   771  00119A  E10A               	bnz	u1641
   772  00119C  0E68               	movlw	104
   773  00119E  1840               	xorwf	(_codigo_ir+2)^0,w,c
   774  0011A0  E107               	bnz	u1641
   775  0011A2  0EBF               	movlw	191
   776  0011A4  1841               	xorwf	(_codigo_ir+3)^0,w,c
   777  0011A6  A4D8               	btfss	status,2,c
   778  0011A8  EFD8  F008         	goto	u1641
   779  0011AC  EFDA  F008         	goto	u1640
   780  0011B0                     u1641:
   781  0011B0  EFEB  F008         	goto	l2275
   782  0011B4                     u1640:
   783  0011B4                     
   784                           ;main.c: 292: {;main.c: 293: LATA4 =~ LATA4;
   785  0011B4  A889               	btfss	3977,4,c	;volatile
   786  0011B6  EFDF  F008         	goto	u1651
   787  0011BA  EFE2  F008         	goto	u1650
   788  0011BE                     u1651:
   789  0011BE  8889               	bsf	3977,4,c	;volatile
   790  0011C0  EFE3  F008         	goto	u1665
   791  0011C4                     u1650:
   792  0011C4  9889               	bcf	3977,4,c	;volatile
   793  0011C6                     u1665:
   794  0011C6                     
   795                           ;main.c: 294: EUSART1_Write_string("COMANDO2");
   796  0011C6  0E70               	movlw	low STR_10
   797  0011C8  6E06               	movwf	EUSART1_Write_string@data^0,c
   798  0011CA  0E08               	movlw	high STR_10
   799  0011CC  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   800  0011CE  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   801                           
   802                           ;main.c: 295: }
   803  0011D2  EF0C  F009         	goto	l2281
   804  0011D6                     l2275:
   805                           
   806                           ;main.c: 297: else if (codigo_ir == 0xBF681DA0)
   807  0011D6  0EA0               	movlw	160
   808  0011D8  183E               	xorwf	_codigo_ir^0,w,c
   809  0011DA  E10D               	bnz	u1671
   810  0011DC  0E1D               	movlw	29
   811  0011DE  183F               	xorwf	(_codigo_ir+1)^0,w,c
   812  0011E0  E10A               	bnz	u1671
   813  0011E2  0E68               	movlw	104
   814  0011E4  1840               	xorwf	(_codigo_ir+2)^0,w,c
   815  0011E6  E107               	bnz	u1671
   816  0011E8  0EBF               	movlw	191
   817  0011EA  1841               	xorwf	(_codigo_ir+3)^0,w,c
   818  0011EC  A4D8               	btfss	status,2,c
   819  0011EE  EFFB  F008         	goto	u1671
   820  0011F2  EFFD  F008         	goto	u1670
   821  0011F6                     u1671:
   822  0011F6  EF0C  F009         	goto	l2281
   823  0011FA                     u1670:
   824  0011FA                     
   825                           ;main.c: 298: {;main.c: 299: LATA5 =~ LATA5;
   826  0011FA  AA89               	btfss	3977,5,c	;volatile
   827  0011FC  EF02  F009         	goto	u1681
   828  001200  EF05  F009         	goto	u1680
   829  001204                     u1681:
   830  001204  8A89               	bsf	3977,5,c	;volatile
   831  001206  EF06  F009         	goto	u1695
   832  00120A                     u1680:
   833  00120A  9A89               	bcf	3977,5,c	;volatile
   834  00120C                     u1695:
   835  00120C                     
   836                           ;main.c: 300: EUSART1_Write_string("COMANDO3");
   837  00120C  0E79               	movlw	low STR_11
   838  00120E  6E06               	movwf	EUSART1_Write_string@data^0,c
   839  001210  0E08               	movlw	high STR_11
   840  001212  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   841  001214  EC88  F00C         	call	_EUSART1_Write_string	;wreg free
   842  001218                     l2281:
   843                           
   844                           ;main.c: 301: };main.c: 302: codigo_ir = 0;
   845  001218  0E00               	movlw	0
   846  00121A  6E3E               	movwf	_codigo_ir^0,c
   847  00121C  0E00               	movlw	0
   848  00121E  6E3F               	movwf	(_codigo_ir+1)^0,c
   849  001220  0E00               	movlw	0
   850  001222  6E40               	movwf	(_codigo_ir+2)^0,c
   851  001224  0E00               	movlw	0
   852  001226  6E41               	movwf	(_codigo_ir+3)^0,c
   853  001228                     
   854                           ;main.c: 304: _delay((unsigned long)((2000)*(16000000/4000.0)));
   855  001228  0E29               	movlw	41
   856  00122A  6E3D               	movwf	(??_main+1)^0,c
   857  00122C  0E96               	movlw	150
   858  00122E  6E3C               	movwf	??_main^0,c
   859  001230  0E7F               	movlw	127
   860  001232                     u1727:
   861  001232  2EE8               	decfsz	wreg,f,c
   862  001234  D7FE               	bra	u1727
   863  001236  2E3C               	decfsz	??_main^0,f,c
   864  001238  D7FC               	bra	u1727
   865  00123A  2E3D               	decfsz	(??_main+1)^0,f,c
   866  00123C  D7FA               	bra	u1727
   867  00123E  F000               	nop	
   868  001240                     
   869                           ;main.c: 306: flag_codigo = 0;
   870  001240  0E00               	movlw	0
   871  001242  6E46               	movwf	_flag_codigo^0,c
   872  001244                     
   873                           ;main.c: 307: cuenta = 0;
   874  001244  0E00               	movlw	0
   875  001246  6E43               	movwf	(_cuenta+1)^0,c
   876  001248  0E00               	movlw	0
   877  00124A  6E42               	movwf	_cuenta^0,c
   878  00124C                     
   879                           ;main.c: 308: INTEDG1 = 0;
   880  00124C  9AF1               	bcf	4081,5,c	;volatile
   881  00124E                     
   882                           ;main.c: 309: INT1IF = 0;
   883  00124E  90F0               	bcf	4080,0,c	;volatile
   884  001250                     
   885                           ;main.c: 310: INT1E = 1;
   886  001250  86F0               	bsf	4080,3,c	;volatile
   887  001252                     l2295:
   888                           
   889                           ;main.c: 311: };main.c: 312: _delay((unsigned long)((80)*(16000000/4000.0)));
   890  001252  0E02               	movlw	2
   891  001254  6E3D               	movwf	(??_main+1)^0,c
   892  001256  0EA0               	movlw	160
   893  001258  6E3C               	movwf	??_main^0,c
   894  00125A  0E92               	movlw	146
   895  00125C                     u1737:
   896  00125C  2EE8               	decfsz	wreg,f,c
   897  00125E  D7FE               	bra	u1737
   898  001260  2E3C               	decfsz	??_main^0,f,c
   899  001262  D7FC               	bra	u1737
   900  001264  2E3D               	decfsz	(??_main+1)^0,f,c
   901  001266  D7FA               	bra	u1737
   902  001268  D000               	nop2	
   903  00126A                     
   904                           ;main.c: 313: LATB7 =~ LATB7;
   905  00126A  AE8A               	btfss	3978,7,c	;volatile
   906  00126C  EF3A  F009         	goto	u1701
   907  001270  EF3D  F009         	goto	u1700
   908  001274                     u1701:
   909  001274  8E8A               	bsf	3978,7,c	;volatile
   910  001276  EF3E  F009         	goto	u1715
   911  00127A                     u1700:
   912  00127A  9E8A               	bcf	3978,7,c	;volatile
   913  00127C                     u1715:
   914  00127C  EF41  F008         	goto	l2237
   915  001280  EF71  F000         	goto	start
   916  001284                     __end_of_main:
   917                           	callstack 0
   918                           
   919 ;; *************** function _sprintf *****************
   920 ;; Defined at:
   921 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  sp              2   26[COMRAM] PTR unsigned char 
   924 ;;		 -> texto(10), 
   925 ;;  f               2   28[COMRAM] PTR const unsigned char 
   926 ;;		 -> STR_5(4), STR_2(3), 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  idx             1   36[COMRAM] unsigned char 
   929 ;;  val             4   41[COMRAM] unsigned long 
   930 ;;  tmpval          4    0        struct .
   931 ;;  cp              3    0        PTR const unsigned char 
   932 ;;  ap              2   39[COMRAM] PTR void [1]
   933 ;;		 -> ?_sprintf(2), 
   934 ;;  prec            2   37[COMRAM] int 
   935 ;;  len             2    0        unsigned int 
   936 ;;  c               1   46[COMRAM] unsigned char 
   937 ;;  flag            1   45[COMRAM] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2   26[COMRAM] int 
   940 ;; Registers used:
   941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         8       0       0       0       0       0       0       0       0
   948 ;;      Locals:        11       0       0       0       0       0       0       0       0
   949 ;;      Temps:          2       0       0       0       0       0       0       0       0
   950 ;;      Totals:        21       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:       21 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 5
   954 ;; This function calls:
   955 ;;		___lldiv
   956 ;;		___llmod
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text1
   963  000CBE                     __ptext1:
   964                           	callstack 0
   965  000CBE                     _sprintf:
   966                           	callstack 25
   967  000CBE                     
   968                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
   969  000CBE  0E1F               	movlw	low (?_sprintf+4)
   970  000CC0  6E28               	movwf	sprintf@ap^0,c
   971  000CC2  0E00               	movlw	high (?_sprintf+4)
   972  000CC4  6E29               	movwf	(sprintf@ap+1)^0,c
   973                           
   974                           ;doprnt.c: 553: while((c = *f++)) {
   975  000CC6  EF1F  F008         	goto	l2183
   976  000CCA                     l2087:
   977                           
   978                           ;doprnt.c: 555: if(c != '%')
   979  000CCA  0E25               	movlw	37
   980  000CCC  182F               	xorwf	sprintf@c^0,w,c
   981  000CCE  B4D8               	btfsc	status,2,c
   982  000CD0  EF6C  F006         	goto	u1401
   983  000CD4  EF6E  F006         	goto	u1400
   984  000CD8                     u1401:
   985  000CD8  EF78  F006         	goto	l2093
   986  000CDC                     u1400:
   987  000CDC                     
   988                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   989  000CDC  C01B  FFD9         	movff	sprintf@sp,fsr2l
   990  000CE0  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
   991  000CE4  C02F  FFDF         	movff	sprintf@c,indf2
   992  000CE8  4A1B               	infsnz	sprintf@sp^0,f,c
   993  000CEA  2A1C               	incf	(sprintf@sp+1)^0,f,c
   994                           
   995                           ;doprnt.c: 559: continue;
   996  000CEC  EF1F  F008         	goto	l2183
   997  000CF0                     l2093:
   998                           
   999                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1000  000CF0  0E00               	movlw	0
  1001  000CF2  6E2E               	movwf	sprintf@flag^0,c
  1002  000CF4  EF82  F006         	goto	l2101
  1003  000CF8                     l2095:
  1004                           
  1005                           ;doprnt.c: 669: flag |= 0x10;
  1006  000CF8  882E               	bsf	sprintf@flag^0,4,c
  1007                           
  1008                           ;doprnt.c: 670: goto loop;
  1009  000CFA  EF82  F006         	goto	l2101
  1010  000CFE                     l2097:
  1011                           
  1012                           ;doprnt.c: 747: flag |= 0x80;
  1013  000CFE  8E2E               	bsf	sprintf@flag^0,7,c
  1014                           
  1015                           ;doprnt.c: 749: break;
  1016  000D00  EFA2  F006         	goto	l366
  1017  000D04                     l2101:
  1018  000D04  C01D  FFF6         	movff	sprintf@f,tblptrl
  1019  000D08  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1020  000D0C  4A1D               	infsnz	sprintf@f^0,f,c
  1021  000D0E  2A1E               	incf	(sprintf@f+1)^0,f,c
  1022  000D10                     	if	0	;tblptru may be non-zero
  1023  000D10                     	endif
  1024  000D10                     	if	0	;tblptru may be non-zero
  1025  000D10                     	endif
  1026  000D10  0008               	tblrd		*
  1027  000D12  CFF5 F02F          	movff	tablat,sprintf@c
  1028  000D16  502F               	movf	sprintf@c^0,w,c
  1029                           
  1030                           ; Switch size 1, requested type "simple"
  1031                           ; Number of cases is 5, Range of values is 0 to 120
  1032                           ; switch strategies available:
  1033                           ; Name         Instructions Cycles
  1034                           ; simple_byte           16     9 (average)
  1035                           ;	Chosen strategy is simple_byte
  1036  000D18  0A00               	xorlw	0	; case 0
  1037  000D1A  B4D8               	btfsc	status,2,c
  1038  000D1C  EF30  F008         	goto	l2185
  1039  000D20  0A64               	xorlw	100	; case 100
  1040  000D22  B4D8               	btfsc	status,2,c
  1041  000D24  EFA2  F006         	goto	l366
  1042  000D28  0A0D               	xorlw	13	; case 105
  1043  000D2A  B4D8               	btfsc	status,2,c
  1044  000D2C  EFA2  F006         	goto	l366
  1045  000D30  0A05               	xorlw	5	; case 108
  1046  000D32  B4D8               	btfsc	status,2,c
  1047  000D34  EF7C  F006         	goto	l2095
  1048  000D38  0A14               	xorlw	20	; case 120
  1049  000D3A  B4D8               	btfsc	status,2,c
  1050  000D3C  EF7F  F006         	goto	l2097
  1051  000D40  EF1F  F008         	goto	l2183
  1052  000D44                     l366:
  1053                           
  1054                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  1055  000D44  BE2E               	btfsc	sprintf@flag^0,7,c
  1056  000D46  EFA7  F006         	goto	u1411
  1057  000D4A  EFA9  F006         	goto	u1410
  1058  000D4E                     u1411:
  1059  000D4E  EFE6  F006         	goto	l369
  1060  000D52                     u1410:
  1061  000D52                     
  1062                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  1063  000D52  A82E               	btfss	sprintf@flag^0,4,c
  1064  000D54  EFAE  F006         	goto	u1421
  1065  000D58  EFB0  F006         	goto	u1420
  1066  000D5C                     u1421:
  1067  000D5C  EFC2  F006         	goto	l2109
  1068  000D60                     u1420:
  1069  000D60                     
  1070                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  1071  000D60  C028  FFD9         	movff	sprintf@ap,fsr2l
  1072  000D64  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1073  000D68  CFDE F02A          	movff	postinc2,sprintf@val
  1074  000D6C  CFDE F02B          	movff	postinc2,sprintf@val+1
  1075  000D70  CFDE F02C          	movff	postinc2,sprintf@val+2
  1076  000D74  CFDE F02D          	movff	postinc2,sprintf@val+3
  1077  000D78  0E04               	movlw	4
  1078  000D7A  2628               	addwf	sprintf@ap^0,f,c
  1079  000D7C  0E00               	movlw	0
  1080  000D7E  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1081  000D80  EFD3  F006         	goto	l2113
  1082  000D84                     l2109:
  1083                           
  1084                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  1085  000D84  C028  FFD9         	movff	sprintf@ap,fsr2l
  1086  000D88  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1087  000D8C  CFDE F02A          	movff	postinc2,sprintf@val
  1088  000D90  CFDD F02B          	movff	postdec2,sprintf@val+1
  1089  000D94  0E00               	movlw	0
  1090  000D96  BE2B               	btfsc	(sprintf@val+1)^0,7,c
  1091  000D98  0EFF               	movlw	-1
  1092  000D9A  6E2C               	movwf	(sprintf@val+2)^0,c
  1093  000D9C  6E2D               	movwf	(sprintf@val+3)^0,c
  1094  000D9E  0E02               	movlw	2
  1095  000DA0  2628               	addwf	sprintf@ap^0,f,c
  1096  000DA2  0E00               	movlw	0
  1097  000DA4  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1098  000DA6                     l2113:
  1099                           
  1100                           ;doprnt.c: 1287: if((long)val < 0) {
  1101  000DA6  BE2D               	btfsc	(sprintf@val+3)^0,7,c
  1102  000DA8  EFDA  F006         	goto	u1430
  1103  000DAC  EFD8  F006         	goto	u1431
  1104  000DB0                     u1431:
  1105  000DB0  EF69  F007         	goto	l2157
  1106  000DB4                     u1430:
  1107  000DB4                     
  1108                           ;doprnt.c: 1288: flag |= 0x03;
  1109  000DB4  0E03               	movlw	3
  1110  000DB6  122E               	iorwf	sprintf@flag^0,f,c
  1111  000DB8                     
  1112                           ;doprnt.c: 1289: val = -val;
  1113  000DB8  1E2D               	comf	(sprintf@val+3)^0,f,c
  1114  000DBA  1E2C               	comf	(sprintf@val+2)^0,f,c
  1115  000DBC  1E2B               	comf	(sprintf@val+1)^0,f,c
  1116  000DBE  6C2A               	negf	sprintf@val^0,c
  1117  000DC0  0E00               	movlw	0
  1118  000DC2  222B               	addwfc	(sprintf@val+1)^0,f,c
  1119  000DC4  222C               	addwfc	(sprintf@val+2)^0,f,c
  1120  000DC6  222D               	addwfc	(sprintf@val+3)^0,f,c
  1121  000DC8  EF69  F007         	goto	l2157
  1122  000DCC                     l369:
  1123                           
  1124                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  1125  000DCC  A82E               	btfss	sprintf@flag^0,4,c
  1126  000DCE  EFEB  F006         	goto	u1441
  1127  000DD2  EFED  F006         	goto	u1440
  1128  000DD6                     u1441:
  1129  000DD6  EFFF  F006         	goto	l2123
  1130  000DDA                     u1440:
  1131  000DDA                     
  1132                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1133  000DDA  C028  FFD9         	movff	sprintf@ap,fsr2l
  1134  000DDE  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1135  000DE2  CFDE F02A          	movff	postinc2,sprintf@val
  1136  000DE6  CFDE F02B          	movff	postinc2,sprintf@val+1
  1137  000DEA  CFDE F02C          	movff	postinc2,sprintf@val+2
  1138  000DEE  CFDE F02D          	movff	postinc2,sprintf@val+3
  1139  000DF2  0E04               	movlw	4
  1140  000DF4  2628               	addwf	sprintf@ap^0,f,c
  1141  000DF6  0E00               	movlw	0
  1142  000DF8  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1143  000DFA  EF69  F007         	goto	l2157
  1144  000DFE                     l2123:
  1145                           
  1146                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  1147  000DFE  C028  FFD9         	movff	sprintf@ap,fsr2l
  1148  000E02  C029  FFDA         	movff	sprintf@ap+1,fsr2h
  1149  000E06  CFDE F023          	movff	postinc2,??_sprintf
  1150  000E0A  CFDD F024          	movff	postdec2,??_sprintf+1
  1151  000E0E  C023  F02A         	movff	??_sprintf,sprintf@val
  1152  000E12  C024  F02B         	movff	??_sprintf+1,sprintf@val+1
  1153  000E16  6A2C               	clrf	(sprintf@val+2)^0,c
  1154  000E18  6A2D               	clrf	(sprintf@val+3)^0,c
  1155  000E1A  0E02               	movlw	2
  1156  000E1C  2628               	addwf	sprintf@ap^0,f,c
  1157  000E1E  0E00               	movlw	0
  1158  000E20  2229               	addwfc	(sprintf@ap+1)^0,f,c
  1159  000E22  EF69  F007         	goto	l2157
  1160  000E26                     l2127:
  1161                           
  1162                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1163  000E26  0E01               	movlw	1
  1164  000E28  6E2F               	movwf	sprintf@c^0,c
  1165  000E2A                     l2133:
  1166                           
  1167                           ;doprnt.c: 1332: if(val < dpowers[c])
  1168  000E2A  502F               	movf	sprintf@c^0,w,c
  1169  000E2C  0D04               	mullw	4
  1170  000E2E  0E01               	movlw	low _dpowers
  1171  000E30  24F3               	addwf	243,w,c
  1172  000E32  6EF6               	movwf	tblptrl,c
  1173  000E34  0E08               	movlw	high _dpowers
  1174  000E36  20F4               	addwfc	244,w,c
  1175  000E38  6EF7               	movwf	tblptrh,c
  1176  000E3A                     	if	0	;There are less than 3 active tblptr bytes
  1177  000E3A                     	endif
  1178  000E3A  0009               	tblrd		*+
  1179  000E3C  50F5               	movf	tablat,w,c
  1180  000E3E  5C2A               	subwf	sprintf@val^0,w,c
  1181  000E40  0009               	tblrd		*+
  1182  000E42  50F5               	movf	tablat,w,c
  1183  000E44  582B               	subwfb	(sprintf@val+1)^0,w,c
  1184  000E46  0009               	tblrd		*+
  1185  000E48  50F5               	movf	tablat,w,c
  1186  000E4A  582C               	subwfb	(sprintf@val+2)^0,w,c
  1187  000E4C  0009               	tblrd		*+
  1188  000E4E  50F5               	movf	tablat,w,c
  1189  000E50  582D               	subwfb	(sprintf@val+3)^0,w,c
  1190  000E52  B0D8               	btfsc	status,0,c
  1191  000E54  EF2E  F007         	goto	u1451
  1192  000E58  EF30  F007         	goto	u1450
  1193  000E5C                     u1451:
  1194  000E5C  EF32  F007         	goto	l2137
  1195  000E60                     u1450:
  1196  000E60  EF75  F007         	goto	l2159
  1197  000E64                     l2137:
  1198  000E64  2A2F               	incf	sprintf@c^0,f,c
  1199  000E66  0E0A               	movlw	10
  1200  000E68  182F               	xorwf	sprintf@c^0,w,c
  1201  000E6A  A4D8               	btfss	status,2,c
  1202  000E6C  EF3A  F007         	goto	u1461
  1203  000E70  EF3C  F007         	goto	u1460
  1204  000E74                     u1461:
  1205  000E74  EF15  F007         	goto	l2133
  1206  000E78                     u1460:
  1207  000E78  EF75  F007         	goto	l2159
  1208  000E7C                     l2141:
  1209                           
  1210                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1211  000E7C  0E01               	movlw	1
  1212  000E7E  6E2F               	movwf	sprintf@c^0,c
  1213  000E80                     l2147:
  1214                           
  1215                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1216  000E80  502F               	movf	sprintf@c^0,w,c
  1217  000E82  0D04               	mullw	4
  1218  000E84  0E29               	movlw	low _hexpowers
  1219  000E86  24F3               	addwf	243,w,c
  1220  000E88  6EF6               	movwf	tblptrl,c
  1221  000E8A  0E08               	movlw	high _hexpowers
  1222  000E8C  20F4               	addwfc	244,w,c
  1223  000E8E  6EF7               	movwf	tblptrh,c
  1224  000E90                     	if	0	;There are less than 3 active tblptr bytes
  1225  000E90                     	endif
  1226  000E90  0009               	tblrd		*+
  1227  000E92  50F5               	movf	tablat,w,c
  1228  000E94  5C2A               	subwf	sprintf@val^0,w,c
  1229  000E96  0009               	tblrd		*+
  1230  000E98  50F5               	movf	tablat,w,c
  1231  000E9A  582B               	subwfb	(sprintf@val+1)^0,w,c
  1232  000E9C  0009               	tblrd		*+
  1233  000E9E  50F5               	movf	tablat,w,c
  1234  000EA0  582C               	subwfb	(sprintf@val+2)^0,w,c
  1235  000EA2  0009               	tblrd		*+
  1236  000EA4  50F5               	movf	tablat,w,c
  1237  000EA6  582D               	subwfb	(sprintf@val+3)^0,w,c
  1238  000EA8  B0D8               	btfsc	status,0,c
  1239  000EAA  EF59  F007         	goto	u1471
  1240  000EAE  EF5B  F007         	goto	u1470
  1241  000EB2                     u1471:
  1242  000EB2  EF5D  F007         	goto	l2151
  1243  000EB6                     u1470:
  1244  000EB6  EF75  F007         	goto	l2159
  1245  000EBA                     l2151:
  1246  000EBA  2A2F               	incf	sprintf@c^0,f,c
  1247  000EBC  0E08               	movlw	8
  1248  000EBE  182F               	xorwf	sprintf@c^0,w,c
  1249  000EC0  A4D8               	btfss	status,2,c
  1250  000EC2  EF65  F007         	goto	u1481
  1251  000EC6  EF67  F007         	goto	u1480
  1252  000ECA                     u1481:
  1253  000ECA  EF40  F007         	goto	l2147
  1254  000ECE                     u1480:
  1255  000ECE  EF75  F007         	goto	l2159
  1256  000ED2                     l2157:
  1257  000ED2  502E               	movf	sprintf@flag^0,w,c
  1258  000ED4  0B80               	andlw	128
  1259                           
  1260                           ; Switch size 1, requested type "simple"
  1261                           ; Number of cases is 2, Range of values is 0 to 128
  1262                           ; switch strategies available:
  1263                           ; Name         Instructions Cycles
  1264                           ; simple_byte            7     4 (average)
  1265                           ;	Chosen strategy is simple_byte
  1266  000ED6  0A00               	xorlw	0	; case 0
  1267  000ED8  B4D8               	btfsc	status,2,c
  1268  000EDA  EF13  F007         	goto	l2127
  1269  000EDE  0A80               	xorlw	128	; case 128
  1270  000EE0  B4D8               	btfsc	status,2,c
  1271  000EE2  EF3E  F007         	goto	l2141
  1272  000EE6  EF75  F007         	goto	l2159
  1273  000EEA                     l2159:
  1274                           
  1275                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1276  000EEA  C02E  F023         	movff	sprintf@flag,??_sprintf
  1277  000EEE  0E03               	movlw	3
  1278  000EF0  1623               	andwf	??_sprintf^0,f,c
  1279  000EF2  B4D8               	btfsc	status,2,c
  1280  000EF4  EF7E  F007         	goto	u1491
  1281  000EF8  EF80  F007         	goto	u1490
  1282  000EFC                     u1491:
  1283  000EFC  EF88  F007         	goto	l2165
  1284  000F00                     u1490:
  1285  000F00                     
  1286                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1287  000F00  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1288  000F04  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1289  000F08  0E2D               	movlw	45
  1290  000F0A  6EDF               	movwf	indf2,c
  1291  000F0C  4A1B               	infsnz	sprintf@sp^0,f,c
  1292  000F0E  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1293  000F10                     l2165:
  1294                           
  1295                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1296  000F10  C02F  F026         	movff	sprintf@c,sprintf@prec
  1297  000F14  6A27               	clrf	(sprintf@prec+1)^0,c
  1298                           
  1299                           ;doprnt.c: 1500: while(prec--) {
  1300  000F16  EF12  F008         	goto	l2181
  1301  000F1A                     l2167:
  1302                           
  1303                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  1304  000F1A  C026  F023         	movff	sprintf@prec,??_sprintf
  1305  000F1E  C027  F024         	movff	sprintf@prec+1,??_sprintf+1
  1306  000F22  90D8               	bcf	status,0,c
  1307  000F24  3623               	rlcf	??_sprintf^0,f,c
  1308  000F26  3624               	rlcf	(??_sprintf+1)^0,f,c
  1309  000F28  90D8               	bcf	status,0,c
  1310  000F2A  3623               	rlcf	??_sprintf^0,f,c
  1311  000F2C  3624               	rlcf	(??_sprintf+1)^0,f,c
  1312  000F2E  0E01               	movlw	low _dpowers
  1313  000F30  2423               	addwf	??_sprintf^0,w,c
  1314  000F32  6EF6               	movwf	tblptrl,c
  1315  000F34  0E08               	movlw	high _dpowers
  1316  000F36  2024               	addwfc	(??_sprintf+1)^0,w,c
  1317  000F38  6EF7               	movwf	tblptrh,c
  1318  000F3A                     	if	0	;There are less than 3 active tblptr bytes
  1319  000F3A                     	endif
  1320  000F3A  0009               	tblrd		*+
  1321  000F3C  CFF5 F009          	movff	tablat,___lldiv@divisor
  1322  000F40  0009               	tblrd		*+
  1323  000F42  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1324  000F46  0009               	tblrd		*+
  1325  000F48  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1326  000F4C  000A               	tblrd		*-
  1327  000F4E  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1328  000F52  C02A  F005         	movff	sprintf@val,___lldiv@dividend
  1329  000F56  C02B  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1330  000F5A  C02C  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1331  000F5E  C02D  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1332  000F62  ECBD  F00B         	call	___lldiv	;wreg free
  1333  000F66  C005  F012         	movff	?___lldiv,___llmod@dividend
  1334  000F6A  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  1335  000F6E  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  1336  000F72  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  1337  000F76  0E0A               	movlw	10
  1338  000F78  6E16               	movwf	___llmod@divisor^0,c
  1339  000F7A  0E00               	movlw	0
  1340  000F7C  6E17               	movwf	(___llmod@divisor+1)^0,c
  1341  000F7E  0E00               	movlw	0
  1342  000F80  6E18               	movwf	(___llmod@divisor+2)^0,c
  1343  000F82  0E00               	movlw	0
  1344  000F84  6E19               	movwf	(___llmod@divisor+3)^0,c
  1345  000F86  EC0F  F00C         	call	___llmod	;wreg free
  1346  000F8A  5012               	movf	?___llmod^0,w,c
  1347  000F8C  0F30               	addlw	48
  1348  000F8E  6E2F               	movwf	sprintf@c^0,c
  1349                           
  1350                           ;doprnt.c: 1517: break;
  1351  000F90  EF0A  F008         	goto	l2177
  1352  000F94                     l2169:
  1353                           
  1354                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  1355  000F94  C02A  F005         	movff	sprintf@val,___lldiv@dividend
  1356  000F98  C02B  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1357  000F9C  C02C  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1358  000FA0  C02D  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1359  000FA4  C026  F023         	movff	sprintf@prec,??_sprintf
  1360  000FA8  C027  F024         	movff	sprintf@prec+1,??_sprintf+1
  1361  000FAC  90D8               	bcf	status,0,c
  1362  000FAE  3623               	rlcf	??_sprintf^0,f,c
  1363  000FB0  3624               	rlcf	(??_sprintf+1)^0,f,c
  1364  000FB2  90D8               	bcf	status,0,c
  1365  000FB4  3623               	rlcf	??_sprintf^0,f,c
  1366  000FB6  3624               	rlcf	(??_sprintf+1)^0,f,c
  1367  000FB8  0E29               	movlw	low _hexpowers
  1368  000FBA  2423               	addwf	??_sprintf^0,w,c
  1369  000FBC  6EF6               	movwf	tblptrl,c
  1370  000FBE  0E08               	movlw	high _hexpowers
  1371  000FC0  2024               	addwfc	(??_sprintf+1)^0,w,c
  1372  000FC2  6EF7               	movwf	tblptrh,c
  1373  000FC4                     	if	0	;There are less than 3 active tblptr bytes
  1374  000FC4                     	endif
  1375  000FC4  0009               	tblrd		*+
  1376  000FC6  CFF5 F009          	movff	tablat,___lldiv@divisor
  1377  000FCA  0009               	tblrd		*+
  1378  000FCC  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1379  000FD0  0009               	tblrd		*+
  1380  000FD2  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1381  000FD6  000A               	tblrd		*-
  1382  000FD8  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1383  000FDC  ECBD  F00B         	call	___lldiv	;wreg free
  1384  000FE0  5005               	movf	?___lldiv^0,w,c
  1385  000FE2  0B0F               	andlw	15
  1386  000FE4  6E25               	movwf	sprintf@idx^0,c
  1387  000FE6                     
  1388                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  1389  000FE6  0E49               	movlw	low STR_12
  1390  000FE8  2425               	addwf	sprintf@idx^0,w,c
  1391  000FEA  6EF6               	movwf	tblptrl,c
  1392  000FEC  6AF7               	clrf	tblptrh,c
  1393  000FEE  0E08               	movlw	high STR_12
  1394  000FF0  22F7               	addwfc	tblptrh,f,c
  1395  000FF2                     	if	0	;There are less than 3 active tblptr bytes
  1396  000FF2                     	endif
  1397  000FF2  0008               	tblrd		*
  1398  000FF4  CFF5 F02F          	movff	tablat,sprintf@c
  1399                           
  1400                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  1401  000FF8  EF0A  F008         	goto	l2177
  1402  000FFC                     l2175:
  1403  000FFC  502E               	movf	sprintf@flag^0,w,c
  1404  000FFE  0B80               	andlw	128
  1405                           
  1406                           ; Switch size 1, requested type "simple"
  1407                           ; Number of cases is 2, Range of values is 0 to 128
  1408                           ; switch strategies available:
  1409                           ; Name         Instructions Cycles
  1410                           ; simple_byte            7     4 (average)
  1411                           ;	Chosen strategy is simple_byte
  1412  001000  0A00               	xorlw	0	; case 0
  1413  001002  B4D8               	btfsc	status,2,c
  1414  001004  EF8D  F007         	goto	l2167
  1415  001008  0A80               	xorlw	128	; case 128
  1416  00100A  B4D8               	btfsc	status,2,c
  1417  00100C  EFCA  F007         	goto	l2169
  1418  001010  EF0A  F008         	goto	l2177
  1419  001014                     l2177:
  1420                           
  1421                           ;doprnt.c: 1550: ((*sp++ = (c)));
  1422  001014  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1423  001018  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1424  00101C  C02F  FFDF         	movff	sprintf@c,indf2
  1425  001020  4A1B               	infsnz	sprintf@sp^0,f,c
  1426  001022  2A1C               	incf	(sprintf@sp+1)^0,f,c
  1427  001024                     l2181:
  1428  001024  0626               	decf	sprintf@prec^0,f,c
  1429  001026  A0D8               	btfss	status,0,c
  1430  001028  0627               	decf	(sprintf@prec+1)^0,f,c
  1431  00102A  2826               	incf	sprintf@prec^0,w,c
  1432  00102C  E106               	bnz	u1501
  1433  00102E  2827               	incf	(sprintf@prec+1)^0,w,c
  1434  001030  A4D8               	btfss	status,2,c
  1435  001032  EF1D  F008         	goto	u1501
  1436  001036  EF1F  F008         	goto	u1500
  1437  00103A                     u1501:
  1438  00103A  EFFE  F007         	goto	l2175
  1439  00103E                     u1500:
  1440  00103E                     l2183:
  1441  00103E  C01D  FFF6         	movff	sprintf@f,tblptrl
  1442  001042  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  1443  001046  4A1D               	infsnz	sprintf@f^0,f,c
  1444  001048  2A1E               	incf	(sprintf@f+1)^0,f,c
  1445  00104A                     	if	0	;tblptru may be non-zero
  1446  00104A                     	endif
  1447  00104A                     	if	0	;tblptru may be non-zero
  1448  00104A                     	endif
  1449  00104A  0008               	tblrd		*
  1450  00104C  CFF5 F02F          	movff	tablat,sprintf@c
  1451  001050  502F               	movf	sprintf@c^0,w,c
  1452  001052  A4D8               	btfss	status,2,c
  1453  001054  EF2E  F008         	goto	u1511
  1454  001058  EF30  F008         	goto	u1510
  1455  00105C                     u1511:
  1456  00105C  EF65  F006         	goto	l2087
  1457  001060                     u1510:
  1458  001060                     l2185:
  1459                           
  1460                           ;doprnt.c: 1564: *sp = 0;
  1461  001060  C01B  FFD9         	movff	sprintf@sp,fsr2l
  1462  001064  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  1463  001068  0E00               	movlw	0
  1464  00106A  6EDF               	movwf	indf2,c
  1465  00106C  0012               	return		;funcret
  1466  00106E                     __end_of_sprintf:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function ___llmod *****************
  1470 ;; Defined at:
  1471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  dividend        4   17[COMRAM] unsigned long 
  1474 ;;  divisor         4   21[COMRAM] unsigned long 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  counter         1   25[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  4   17[COMRAM] unsigned long 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1486 ;;      Params:         8       0       0       0       0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1489 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1490 ;;Total ram usage:        9 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 4
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_sprintf
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text2
  1501  00181E                     __ptext2:
  1502                           	callstack 0
  1503  00181E                     ___llmod:
  1504                           	callstack 25
  1505  00181E  5016               	movf	___llmod@divisor^0,w,c
  1506  001820  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  1507  001822  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  1508  001824  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  1509  001826  B4D8               	btfsc	status,2,c
  1510  001828  EF18  F00C         	goto	u1201
  1511  00182C  EF1A  F00C         	goto	u1200
  1512  001830                     u1201:
  1513  001830  EF4A  F00C         	goto	l806
  1514  001834                     u1200:
  1515  001834  0E01               	movlw	1
  1516  001836  6E1A               	movwf	___llmod@counter^0,c
  1517  001838  EF24  F00C         	goto	l1981
  1518  00183C                     l1979:
  1519  00183C  90D8               	bcf	status,0,c
  1520  00183E  3616               	rlcf	___llmod@divisor^0,f,c
  1521  001840  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  1522  001842  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  1523  001844  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  1524  001846  2A1A               	incf	___llmod@counter^0,f,c
  1525  001848                     l1981:
  1526  001848  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  1527  00184A  EF29  F00C         	goto	u1211
  1528  00184E  EF2B  F00C         	goto	u1210
  1529  001852                     u1211:
  1530  001852  EF1E  F00C         	goto	l1979
  1531  001856                     u1210:
  1532  001856                     l1983:
  1533  001856  5016               	movf	___llmod@divisor^0,w,c
  1534  001858  5C12               	subwf	___llmod@dividend^0,w,c
  1535  00185A  5017               	movf	(___llmod@divisor+1)^0,w,c
  1536  00185C  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  1537  00185E  5018               	movf	(___llmod@divisor+2)^0,w,c
  1538  001860  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  1539  001862  5019               	movf	(___llmod@divisor+3)^0,w,c
  1540  001864  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  1541  001866  A0D8               	btfss	status,0,c
  1542  001868  EF38  F00C         	goto	u1221
  1543  00186C  EF3A  F00C         	goto	u1220
  1544  001870                     u1221:
  1545  001870  EF42  F00C         	goto	l1987
  1546  001874                     u1220:
  1547  001874  5016               	movf	___llmod@divisor^0,w,c
  1548  001876  5E12               	subwf	___llmod@dividend^0,f,c
  1549  001878  5017               	movf	(___llmod@divisor+1)^0,w,c
  1550  00187A  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  1551  00187C  5018               	movf	(___llmod@divisor+2)^0,w,c
  1552  00187E  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  1553  001880  5019               	movf	(___llmod@divisor+3)^0,w,c
  1554  001882  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  1555  001884                     l1987:
  1556  001884  90D8               	bcf	status,0,c
  1557  001886  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  1558  001888  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  1559  00188A  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  1560  00188C  3216               	rrcf	___llmod@divisor^0,f,c
  1561  00188E  2E1A               	decfsz	___llmod@counter^0,f,c
  1562  001890  EF2B  F00C         	goto	l1983
  1563  001894                     l806:
  1564  001894  C012  F012         	movff	___llmod@dividend,?___llmod
  1565  001898  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  1566  00189C  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  1567  0018A0  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  1568  0018A4  0012               	return		;funcret
  1569  0018A6                     __end_of___llmod:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function ___lldiv *****************
  1573 ;; Defined at:
  1574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  dividend        4    4[COMRAM] unsigned long 
  1577 ;;  divisor         4    8[COMRAM] unsigned long 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  quotient        4   12[COMRAM] unsigned long 
  1580 ;;  counter         1   16[COMRAM] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  4    4[COMRAM] unsigned long 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1590 ;;      Params:         8       0       0       0       0       0       0       0       0
  1591 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1593 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1594 ;;Total ram usage:       13 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 4
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_sprintf
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text3
  1605  00177A                     __ptext3:
  1606                           	callstack 0
  1607  00177A                     ___lldiv:
  1608                           	callstack 25
  1609  00177A  0E00               	movlw	0
  1610  00177C  6E0D               	movwf	___lldiv@quotient^0,c
  1611  00177E  0E00               	movlw	0
  1612  001780  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  1613  001782  0E00               	movlw	0
  1614  001784  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  1615  001786  0E00               	movlw	0
  1616  001788  6E10               	movwf	(___lldiv@quotient+3)^0,c
  1617  00178A  5009               	movf	___lldiv@divisor^0,w,c
  1618  00178C  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  1619  00178E  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  1620  001790  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  1621  001792  B4D8               	btfsc	status,2,c
  1622  001794  EFCE  F00B         	goto	u931
  1623  001798  EFD0  F00B         	goto	u930
  1624  00179C                     u931:
  1625  00179C  EF06  F00C         	goto	l425
  1626  0017A0                     u930:
  1627  0017A0  0E01               	movlw	1
  1628  0017A2  6E11               	movwf	___lldiv@counter^0,c
  1629  0017A4  EFDA  F00B         	goto	l1809
  1630  0017A8                     l1807:
  1631  0017A8  90D8               	bcf	status,0,c
  1632  0017AA  3609               	rlcf	___lldiv@divisor^0,f,c
  1633  0017AC  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  1634  0017AE  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  1635  0017B0  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  1636  0017B2  2A11               	incf	___lldiv@counter^0,f,c
  1637  0017B4                     l1809:
  1638  0017B4  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  1639  0017B6  EFDF  F00B         	goto	u941
  1640  0017BA  EFE1  F00B         	goto	u940
  1641  0017BE                     u941:
  1642  0017BE  EFD4  F00B         	goto	l1807
  1643  0017C2                     u940:
  1644  0017C2                     l1811:
  1645  0017C2  90D8               	bcf	status,0,c
  1646  0017C4  360D               	rlcf	___lldiv@quotient^0,f,c
  1647  0017C6  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  1648  0017C8  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  1649  0017CA  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  1650  0017CC  5009               	movf	___lldiv@divisor^0,w,c
  1651  0017CE  5C05               	subwf	___lldiv@dividend^0,w,c
  1652  0017D0  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1653  0017D2  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  1654  0017D4  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1655  0017D6  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  1656  0017D8  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1657  0017DA  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  1658  0017DC  A0D8               	btfss	status,0,c
  1659  0017DE  EFF3  F00B         	goto	u951
  1660  0017E2  EFF5  F00B         	goto	u950
  1661  0017E6                     u951:
  1662  0017E6  EFFE  F00B         	goto	l1819
  1663  0017EA                     u950:
  1664  0017EA  5009               	movf	___lldiv@divisor^0,w,c
  1665  0017EC  5E05               	subwf	___lldiv@dividend^0,f,c
  1666  0017EE  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1667  0017F0  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  1668  0017F2  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1669  0017F4  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  1670  0017F6  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1671  0017F8  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  1672  0017FA  800D               	bsf	___lldiv@quotient^0,0,c
  1673  0017FC                     l1819:
  1674  0017FC  90D8               	bcf	status,0,c
  1675  0017FE  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  1676  001800  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  1677  001802  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  1678  001804  3209               	rrcf	___lldiv@divisor^0,f,c
  1679  001806  2E11               	decfsz	___lldiv@counter^0,f,c
  1680  001808  EFE1  F00B         	goto	l1811
  1681  00180C                     l425:
  1682  00180C  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  1683  001810  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  1684  001814  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  1685  001818  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  1686  00181C  0012               	return		;funcret
  1687  00181E                     __end_of___lldiv:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _normaliza *****************
  1691 ;; Defined at:
  1692 ;;		line 107 in file "main.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1706 ;;      Params:         0       0       0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1708 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1709 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1710 ;;Total ram usage:        4 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; Hardware stack levels required when called: 5
  1713 ;; This function calls:
  1714 ;;		___flge
  1715 ;;		___flmul
  1716 ;;		___xxtofl
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text4
  1723  001438                     __ptext4:
  1724                           	callstack 0
  1725  001438                     _normaliza:
  1726                           	callstack 25
  1727  001438                     
  1728                           ;main.c: 112: for (cont=0;cont<cuenta-1+2;cont++)
  1729  001438  0E00               	movlw	0
  1730  00143A  6E45               	movwf	_cont^0,c
  1731  00143C  EFD3  F00A         	goto	l2075
  1732  001440                     l2063:
  1733                           
  1734                           ;main.c: 113: {;main.c: 114: if (tiempo[cont+2] <(float)tiempo[cont] * .8) tiempo[cont]=
      +                          0 ;
  1735  001440  0E62               	movlw	low (_tiempo+2)
  1736  001442  2445               	addwf	_cont^0,w,c
  1737  001444  6ED9               	movwf	fsr2l,c
  1738  001446  6ADA               	clrf	fsr2h,c
  1739  001448  0E00               	movlw	high (_tiempo+2)
  1740  00144A  22DA               	addwfc	fsr2h,f,c
  1741  00144C  50DF               	movf	indf2,w,c
  1742  00144E  6E38               	movwf	??_normaliza^0,c
  1743  001450  5038               	movf	??_normaliza^0,w,c
  1744  001452  6E05               	movwf	___xxtofl@val^0,c
  1745  001454  6A06               	clrf	(___xxtofl@val+1)^0,c
  1746  001456  6A07               	clrf	(___xxtofl@val+2)^0,c
  1747  001458  6A08               	clrf	(___xxtofl@val+3)^0,c
  1748  00145A  0E00               	movlw	0
  1749  00145C  EC42  F009         	call	___xxtofl
  1750  001460  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1751  001464  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1752  001468  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1753  00146C  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1754  001470  0ECD               	movlw	205
  1755  001472  6E17               	movwf	___flmul@a^0,c
  1756  001474  0ECC               	movlw	204
  1757  001476  6E18               	movwf	(___flmul@a+1)^0,c
  1758  001478  0E4C               	movlw	76
  1759  00147A  6E19               	movwf	(___flmul@a+2)^0,c
  1760  00147C  0E3F               	movlw	63
  1761  00147E  6E1A               	movwf	(___flmul@a+3)^0,c
  1762  001480  0E60               	movlw	low _tiempo
  1763  001482  2445               	addwf	_cont^0,w,c
  1764  001484  6ED9               	movwf	fsr2l,c
  1765  001486  6ADA               	clrf	fsr2h,c
  1766  001488  0E00               	movlw	high _tiempo
  1767  00148A  22DA               	addwfc	fsr2h,f,c
  1768  00148C  50DF               	movf	indf2,w,c
  1769  00148E  6E39               	movwf	(??_normaliza+1)^0,c
  1770  001490  5039               	movf	(??_normaliza+1)^0,w,c
  1771  001492  6E05               	movwf	___xxtofl@val^0,c
  1772  001494  6A06               	clrf	(___xxtofl@val+1)^0,c
  1773  001496  6A07               	clrf	(___xxtofl@val+2)^0,c
  1774  001498  6A08               	clrf	(___xxtofl@val+3)^0,c
  1775  00149A  0E00               	movlw	0
  1776  00149C  EC42  F009         	call	___xxtofl
  1777  0014A0  C005  F013         	movff	?___xxtofl,___flmul@b
  1778  0014A4  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1779  0014A8  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1780  0014AC  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1781  0014B0  EC4A  F004         	call	___flmul	;wreg free
  1782  0014B4  C013  F030         	movff	?___flmul,___flge@ff2
  1783  0014B8  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1784  0014BC  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1785  0014C0  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1786  0014C4  ECE8  F00A         	call	___flge	;wreg free
  1787  0014C8  B0D8               	btfsc	status,0,c
  1788  0014CA  EF69  F00A         	goto	u1361
  1789  0014CE  EF6B  F00A         	goto	u1360
  1790  0014D2                     u1361:
  1791  0014D2  EF75  F00A         	goto	l2067
  1792  0014D6                     u1360:
  1793  0014D6  0E60               	movlw	low _tiempo
  1794  0014D8  2445               	addwf	_cont^0,w,c
  1795  0014DA  6ED9               	movwf	fsr2l,c
  1796  0014DC  6ADA               	clrf	fsr2h,c
  1797  0014DE  0E00               	movlw	high _tiempo
  1798  0014E0  22DA               	addwfc	fsr2h,f,c
  1799  0014E2  0E00               	movlw	0
  1800  0014E4  6EDF               	movwf	indf2,c
  1801  0014E6  EFD2  F00A         	goto	l2073
  1802  0014EA                     l2067:
  1803                           
  1804                           ;main.c: 115: else if (tiempo[cont] <(float)tiempo[cont+2] * .8) tiempo[cont]= 2 ;
  1805  0014EA  0E60               	movlw	low _tiempo
  1806  0014EC  2445               	addwf	_cont^0,w,c
  1807  0014EE  6ED9               	movwf	fsr2l,c
  1808  0014F0  6ADA               	clrf	fsr2h,c
  1809  0014F2  0E00               	movlw	high _tiempo
  1810  0014F4  22DA               	addwfc	fsr2h,f,c
  1811  0014F6  50DF               	movf	indf2,w,c
  1812  0014F8  6E38               	movwf	??_normaliza^0,c
  1813  0014FA  5038               	movf	??_normaliza^0,w,c
  1814  0014FC  6E05               	movwf	___xxtofl@val^0,c
  1815  0014FE  6A06               	clrf	(___xxtofl@val+1)^0,c
  1816  001500  6A07               	clrf	(___xxtofl@val+2)^0,c
  1817  001502  6A08               	clrf	(___xxtofl@val+3)^0,c
  1818  001504  0E00               	movlw	0
  1819  001506  EC42  F009         	call	___xxtofl
  1820  00150A  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1821  00150E  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1822  001512  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1823  001516  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1824  00151A  0ECD               	movlw	205
  1825  00151C  6E17               	movwf	___flmul@a^0,c
  1826  00151E  0ECC               	movlw	204
  1827  001520  6E18               	movwf	(___flmul@a+1)^0,c
  1828  001522  0E4C               	movlw	76
  1829  001524  6E19               	movwf	(___flmul@a+2)^0,c
  1830  001526  0E3F               	movlw	63
  1831  001528  6E1A               	movwf	(___flmul@a+3)^0,c
  1832  00152A  0E62               	movlw	low (_tiempo+2)
  1833  00152C  2445               	addwf	_cont^0,w,c
  1834  00152E  6ED9               	movwf	fsr2l,c
  1835  001530  6ADA               	clrf	fsr2h,c
  1836  001532  0E00               	movlw	high (_tiempo+2)
  1837  001534  22DA               	addwfc	fsr2h,f,c
  1838  001536  50DF               	movf	indf2,w,c
  1839  001538  6E39               	movwf	(??_normaliza+1)^0,c
  1840  00153A  5039               	movf	(??_normaliza+1)^0,w,c
  1841  00153C  6E05               	movwf	___xxtofl@val^0,c
  1842  00153E  6A06               	clrf	(___xxtofl@val+1)^0,c
  1843  001540  6A07               	clrf	(___xxtofl@val+2)^0,c
  1844  001542  6A08               	clrf	(___xxtofl@val+3)^0,c
  1845  001544  0E00               	movlw	0
  1846  001546  EC42  F009         	call	___xxtofl
  1847  00154A  C005  F013         	movff	?___xxtofl,___flmul@b
  1848  00154E  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1849  001552  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1850  001556  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1851  00155A  EC4A  F004         	call	___flmul	;wreg free
  1852  00155E  C013  F030         	movff	?___flmul,___flge@ff2
  1853  001562  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1854  001566  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1855  00156A  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1856  00156E  ECE8  F00A         	call	___flge	;wreg free
  1857  001572  B0D8               	btfsc	status,0,c
  1858  001574  EFBE  F00A         	goto	u1371
  1859  001578  EFC0  F00A         	goto	u1370
  1860  00157C                     u1371:
  1861  00157C  EFCA  F00A         	goto	l2071
  1862  001580                     u1370:
  1863  001580  0E60               	movlw	low _tiempo
  1864  001582  2445               	addwf	_cont^0,w,c
  1865  001584  6ED9               	movwf	fsr2l,c
  1866  001586  6ADA               	clrf	fsr2h,c
  1867  001588  0E00               	movlw	high _tiempo
  1868  00158A  22DA               	addwfc	fsr2h,f,c
  1869  00158C  0E02               	movlw	2
  1870  00158E  6EDF               	movwf	indf2,c
  1871  001590  EFD2  F00A         	goto	l2073
  1872  001594                     l2071:
  1873                           
  1874                           ;main.c: 116: else tiempo[cont]=1 ;
  1875  001594  0E60               	movlw	low _tiempo
  1876  001596  2445               	addwf	_cont^0,w,c
  1877  001598  6ED9               	movwf	fsr2l,c
  1878  00159A  6ADA               	clrf	fsr2h,c
  1879  00159C  0E00               	movlw	high _tiempo
  1880  00159E  22DA               	addwfc	fsr2h,f,c
  1881  0015A0  0E01               	movlw	1
  1882  0015A2  6EDF               	movwf	indf2,c
  1883  0015A4                     l2073:
  1884  0015A4  2A45               	incf	_cont^0,f,c
  1885  0015A6                     l2075:
  1886  0015A6  0E01               	movlw	1
  1887  0015A8  2442               	addwf	_cuenta^0,w,c
  1888  0015AA  6E38               	movwf	??_normaliza^0,c
  1889  0015AC  0E00               	movlw	0
  1890  0015AE  2043               	addwfc	(_cuenta+1)^0,w,c
  1891  0015B0  6E39               	movwf	(??_normaliza+1)^0,c
  1892  0015B2  5045               	movf	_cont^0,w,c
  1893  0015B4  6E3A               	movwf	(??_normaliza+2)^0,c
  1894  0015B6  6A3B               	clrf	(??_normaliza+3)^0,c
  1895  0015B8  5038               	movf	??_normaliza^0,w,c
  1896  0015BA  5C3A               	subwf	(??_normaliza+2)^0,w,c
  1897  0015BC  5039               	movf	(??_normaliza+1)^0,w,c
  1898  0015BE  583B               	subwfb	(??_normaliza+3)^0,w,c
  1899  0015C0  A0D8               	btfss	status,0,c
  1900  0015C2  EFE5  F00A         	goto	u1381
  1901  0015C6  EFE7  F00A         	goto	u1380
  1902  0015CA                     u1381:
  1903  0015CA  EF20  F00A         	goto	l2063
  1904  0015CE                     u1380:
  1905  0015CE  0012               	return		;funcret
  1906  0015D0                     __end_of_normaliza:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function ___xxtofl *****************
  1910 ;; Defined at:
  1911 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  sign            1    wreg     unsigned char 
  1914 ;;  val             4    4[COMRAM] long 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  sign            1   12[COMRAM] unsigned char 
  1917 ;;  arg             4   14[COMRAM] unsigned long 
  1918 ;;  exp             1   13[COMRAM] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  4    4[COMRAM] unsigned char 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1928 ;;      Params:         4       0       0       0       0       0       0       0       0
  1929 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1930 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1931 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1932 ;;Total ram usage:       14 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 4
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_normaliza
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text5
  1943  001284                     __ptext5:
  1944                           	callstack 0
  1945  001284                     ___xxtofl:
  1946                           	callstack 25
  1947                           
  1948                           ;incstack = 0
  1949                           ;___xxtofl@sign stored from wreg
  1950  001284  6E0D               	movwf	___xxtofl@sign^0,c
  1951  001286  500D               	movf	___xxtofl@sign^0,w,c
  1952  001288  B4D8               	btfsc	status,2,c
  1953  00128A  EF49  F009         	goto	u1231
  1954  00128E  EF4B  F009         	goto	u1230
  1955  001292                     u1231:
  1956  001292  EF6D  F009         	goto	l1041
  1957  001296                     u1230:
  1958  001296  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  1959  001298  EF52  F009         	goto	u1240
  1960  00129C  EF50  F009         	goto	u1241
  1961  0012A0                     u1241:
  1962  0012A0  EF6D  F009         	goto	l1041
  1963  0012A4                     u1240:
  1964  0012A4  C005  F009         	movff	___xxtofl@val,??___xxtofl
  1965  0012A8  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  1966  0012AC  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  1967  0012B0  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  1968  0012B4  1E09               	comf	??___xxtofl^0,f,c
  1969  0012B6  1E0A               	comf	(??___xxtofl+1)^0,f,c
  1970  0012B8  1E0B               	comf	(??___xxtofl+2)^0,f,c
  1971  0012BA  1E0C               	comf	(??___xxtofl+3)^0,f,c
  1972  0012BC  2A09               	incf	??___xxtofl^0,f,c
  1973  0012BE  0E00               	movlw	0
  1974  0012C0  220A               	addwfc	(??___xxtofl+1)^0,f,c
  1975  0012C2  220B               	addwfc	(??___xxtofl+2)^0,f,c
  1976  0012C4  220C               	addwfc	(??___xxtofl+3)^0,f,c
  1977  0012C6  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  1978  0012CA  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  1979  0012CE  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  1980  0012D2  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  1981  0012D6  EF75  F009         	goto	l1997
  1982  0012DA                     l1041:
  1983  0012DA  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  1984  0012DE  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1985  0012E2  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1986  0012E6  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1987  0012EA                     l1997:
  1988  0012EA  5005               	movf	___xxtofl@val^0,w,c
  1989  0012EC  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  1990  0012EE  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  1991  0012F0  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  1992  0012F2  A4D8               	btfss	status,2,c
  1993  0012F4  EF7E  F009         	goto	u1251
  1994  0012F8  EF80  F009         	goto	u1250
  1995  0012FC                     u1251:
  1996  0012FC  EF8A  F009         	goto	l2003
  1997  001300                     u1250:
  1998  001300  0E00               	movlw	0
  1999  001302  6E05               	movwf	?___xxtofl^0,c
  2000  001304  0E00               	movlw	0
  2001  001306  6E06               	movwf	(?___xxtofl+1)^0,c
  2002  001308  0E00               	movlw	0
  2003  00130A  6E07               	movwf	(?___xxtofl+2)^0,c
  2004  00130C  0E00               	movlw	0
  2005  00130E  6E08               	movwf	(?___xxtofl+3)^0,c
  2006  001310  EF1B  F00A         	goto	l1044
  2007  001314                     l2003:
  2008  001314  0E96               	movlw	150
  2009  001316  6E0E               	movwf	___xxtofl@exp^0,c
  2010  001318  EF94  F009         	goto	l2007
  2011  00131C                     l2005:
  2012  00131C  2A0E               	incf	___xxtofl@exp^0,f,c
  2013  00131E  90D8               	bcf	status,0,c
  2014  001320  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2015  001322  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2016  001324  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2017  001326  320F               	rrcf	___xxtofl@arg^0,f,c
  2018  001328                     l2007:
  2019  001328  0E00               	movlw	0
  2020  00132A  140F               	andwf	___xxtofl@arg^0,w,c
  2021  00132C  6E09               	movwf	??___xxtofl^0,c
  2022  00132E  0E00               	movlw	0
  2023  001330  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2024  001332  6E0A               	movwf	(??___xxtofl+1)^0,c
  2025  001334  0E00               	movlw	0
  2026  001336  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2027  001338  6E0B               	movwf	(??___xxtofl+2)^0,c
  2028  00133A  0EFE               	movlw	254
  2029  00133C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2030  00133E  6E0C               	movwf	(??___xxtofl+3)^0,c
  2031  001340  5009               	movf	??___xxtofl^0,w,c
  2032  001342  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2033  001344  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2034  001346  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2035  001348  A4D8               	btfss	status,2,c
  2036  00134A  EFA9  F009         	goto	u1261
  2037  00134E  EFAB  F009         	goto	u1260
  2038  001352                     u1261:
  2039  001352  EF8E  F009         	goto	l2005
  2040  001356                     u1260:
  2041  001356  EFB9  F009         	goto	l1048
  2042  00135A                     l2009:
  2043  00135A  2A0E               	incf	___xxtofl@exp^0,f,c
  2044  00135C  0E01               	movlw	1
  2045  00135E  260F               	addwf	___xxtofl@arg^0,f,c
  2046  001360  0E00               	movlw	0
  2047  001362  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  2048  001364  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  2049  001366  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  2050  001368  90D8               	bcf	status,0,c
  2051  00136A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2052  00136C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2053  00136E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2054  001370  320F               	rrcf	___xxtofl@arg^0,f,c
  2055  001372                     l1048:
  2056  001372  0E00               	movlw	0
  2057  001374  140F               	andwf	___xxtofl@arg^0,w,c
  2058  001376  6E09               	movwf	??___xxtofl^0,c
  2059  001378  0E00               	movlw	0
  2060  00137A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2061  00137C  6E0A               	movwf	(??___xxtofl+1)^0,c
  2062  00137E  0E00               	movlw	0
  2063  001380  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2064  001382  6E0B               	movwf	(??___xxtofl+2)^0,c
  2065  001384  0EFF               	movlw	255
  2066  001386  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2067  001388  6E0C               	movwf	(??___xxtofl+3)^0,c
  2068  00138A  5009               	movf	??___xxtofl^0,w,c
  2069  00138C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2070  00138E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2071  001390  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2072  001392  A4D8               	btfss	status,2,c
  2073  001394  EFCE  F009         	goto	u1271
  2074  001398  EFD0  F009         	goto	u1270
  2075  00139C                     u1271:
  2076  00139C  EFAD  F009         	goto	l2009
  2077  0013A0                     u1270:
  2078  0013A0  EFD8  F009         	goto	l2017
  2079  0013A4                     l2015:
  2080  0013A4  060E               	decf	___xxtofl@exp^0,f,c
  2081  0013A6  90D8               	bcf	status,0,c
  2082  0013A8  360F               	rlcf	___xxtofl@arg^0,f,c
  2083  0013AA  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  2084  0013AC  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  2085  0013AE  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  2086  0013B0                     l2017:
  2087  0013B0  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  2088  0013B2  EFDD  F009         	goto	u1281
  2089  0013B6  EFDF  F009         	goto	u1280
  2090  0013BA                     u1281:
  2091  0013BA  EFE7  F009         	goto	l1055
  2092  0013BE                     u1280:
  2093  0013BE  0E02               	movlw	2
  2094  0013C0  600E               	cpfslt	___xxtofl@exp^0,c
  2095  0013C2  EFE5  F009         	goto	u1291
  2096  0013C6  EFE7  F009         	goto	u1290
  2097  0013CA                     u1291:
  2098  0013CA  EFD2  F009         	goto	l2015
  2099  0013CE                     u1290:
  2100  0013CE                     l1055:
  2101  0013CE  B00E               	btfsc	___xxtofl@exp^0,0,c
  2102  0013D0  EFEC  F009         	goto	u1301
  2103  0013D4  EFEE  F009         	goto	u1300
  2104  0013D8                     u1301:
  2105  0013D8  EFEF  F009         	goto	l2023
  2106  0013DC                     u1300:
  2107  0013DC  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  2108  0013DE                     l2023:
  2109  0013DE  90D8               	bcf	status,0,c
  2110  0013E0  320E               	rrcf	___xxtofl@exp^0,f,c
  2111  0013E2  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  2112  0013E6  6A0A               	clrf	(??___xxtofl+1)^0,c
  2113  0013E8  6A0B               	clrf	(??___xxtofl+2)^0,c
  2114  0013EA  6A0C               	clrf	(??___xxtofl+3)^0,c
  2115  0013EC  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  2116  0013F0  6A0B               	clrf	(??___xxtofl+2)^0,c
  2117  0013F2  6A0A               	clrf	(??___xxtofl+1)^0,c
  2118  0013F4  6A09               	clrf	??___xxtofl^0,c
  2119  0013F6  5009               	movf	??___xxtofl^0,w,c
  2120  0013F8  120F               	iorwf	___xxtofl@arg^0,f,c
  2121  0013FA  500A               	movf	(??___xxtofl+1)^0,w,c
  2122  0013FC  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  2123  0013FE  500B               	movf	(??___xxtofl+2)^0,w,c
  2124  001400  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  2125  001402  500C               	movf	(??___xxtofl+3)^0,w,c
  2126  001404  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  2127  001406  500D               	movf	___xxtofl@sign^0,w,c
  2128  001408  B4D8               	btfsc	status,2,c
  2129  00140A  EF09  F00A         	goto	u1311
  2130  00140E  EF0B  F00A         	goto	u1310
  2131  001412                     u1311:
  2132  001412  EF13  F00A         	goto	l2033
  2133  001416                     u1310:
  2134  001416  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2135  001418  EF12  F00A         	goto	u1320
  2136  00141C  EF10  F00A         	goto	u1321
  2137  001420                     u1321:
  2138  001420  EF13  F00A         	goto	l2033
  2139  001424                     u1320:
  2140  001424  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  2141  001426                     l2033:
  2142  001426  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  2143  00142A  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  2144  00142E  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  2145  001432  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  2146  001436                     l1044:
  2147  001436  0012               	return		;funcret
  2148  001438                     __end_of___xxtofl:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function ___flmul *****************
  2152 ;; Defined at:
  2153 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  b               4   18[COMRAM] unsigned char 
  2156 ;;  a               4   22[COMRAM] unsigned char 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  prod            4   37[COMRAM] struct .
  2159 ;;  grs             4   31[COMRAM] unsigned long 
  2160 ;;  temp            2   41[COMRAM] struct .
  2161 ;;  bexp            1   36[COMRAM] unsigned char 
  2162 ;;  aexp            1   35[COMRAM] unsigned char 
  2163 ;;  sign            1   30[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  4   18[COMRAM] unsigned char 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, prodl, prodh
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         8       0       0       0       0       0       0       0       0
  2174 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2176 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:       25 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 4
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_normaliza
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text6
  2188  000894                     __ptext6:
  2189                           	callstack 0
  2190  000894                     ___flmul:
  2191                           	callstack 25
  2192  000894  5016               	movf	(___flmul@b+3)^0,w,c
  2193  000896  0B80               	andlw	128
  2194  000898  6E1F               	movwf	___flmul@sign^0,c
  2195  00089A  5016               	movf	(___flmul@b+3)^0,w,c
  2196  00089C  2416               	addwf	(___flmul@b+3)^0,w,c
  2197  00089E  6E25               	movwf	___flmul@bexp^0,c
  2198  0008A0  AE15               	btfss	(___flmul@b+2)^0,7,c
  2199  0008A2  EF55  F004         	goto	u961
  2200  0008A6  EF57  F004         	goto	u960
  2201  0008AA                     u961:
  2202  0008AA  EF58  F004         	goto	l1829
  2203  0008AE                     u960:
  2204  0008AE  8025               	bsf	___flmul@bexp^0,0,c
  2205  0008B0                     l1829:
  2206  0008B0  5025               	movf	___flmul@bexp^0,w,c
  2207  0008B2  B4D8               	btfsc	status,2,c
  2208  0008B4  EF5E  F004         	goto	u971
  2209  0008B8  EF60  F004         	goto	u970
  2210  0008BC                     u971:
  2211  0008BC  EF73  F004         	goto	l1837
  2212  0008C0                     u970:
  2213  0008C0  2825               	incf	___flmul@bexp^0,w,c
  2214  0008C2  A4D8               	btfss	status,2,c
  2215  0008C4  EF66  F004         	goto	u981
  2216  0008C8  EF68  F004         	goto	u980
  2217  0008CC                     u981:
  2218  0008CC  EF70  F004         	goto	l1835
  2219  0008D0                     u980:
  2220  0008D0  0E00               	movlw	0
  2221  0008D2  6E13               	movwf	___flmul@b^0,c
  2222  0008D4  0E00               	movlw	0
  2223  0008D6  6E14               	movwf	(___flmul@b+1)^0,c
  2224  0008D8  0E00               	movlw	0
  2225  0008DA  6E15               	movwf	(___flmul@b+2)^0,c
  2226  0008DC  0E00               	movlw	0
  2227  0008DE  6E16               	movwf	(___flmul@b+3)^0,c
  2228  0008E0                     l1835:
  2229  0008E0  8E15               	bsf	(___flmul@b+2)^0,7,c
  2230  0008E2  EF7B  F004         	goto	l1839
  2231  0008E6                     l1837:
  2232  0008E6  0E00               	movlw	0
  2233  0008E8  6E13               	movwf	___flmul@b^0,c
  2234  0008EA  0E00               	movlw	0
  2235  0008EC  6E14               	movwf	(___flmul@b+1)^0,c
  2236  0008EE  0E00               	movlw	0
  2237  0008F0  6E15               	movwf	(___flmul@b+2)^0,c
  2238  0008F2  0E00               	movlw	0
  2239  0008F4  6E16               	movwf	(___flmul@b+3)^0,c
  2240  0008F6                     l1839:
  2241  0008F6  501A               	movf	(___flmul@a+3)^0,w,c
  2242  0008F8  0B80               	andlw	128
  2243  0008FA  1A1F               	xorwf	___flmul@sign^0,f,c
  2244  0008FC  501A               	movf	(___flmul@a+3)^0,w,c
  2245  0008FE  241A               	addwf	(___flmul@a+3)^0,w,c
  2246  000900  6E24               	movwf	___flmul@aexp^0,c
  2247  000902  AE19               	btfss	(___flmul@a+2)^0,7,c
  2248  000904  EF86  F004         	goto	u991
  2249  000908  EF88  F004         	goto	u990
  2250  00090C                     u991:
  2251  00090C  EF89  F004         	goto	l1847
  2252  000910                     u990:
  2253  000910  8024               	bsf	___flmul@aexp^0,0,c
  2254  000912                     l1847:
  2255  000912  5024               	movf	___flmul@aexp^0,w,c
  2256  000914  B4D8               	btfsc	status,2,c
  2257  000916  EF8F  F004         	goto	u1001
  2258  00091A  EF91  F004         	goto	u1000
  2259  00091E                     u1001:
  2260  00091E  EFA4  F004         	goto	l1855
  2261  000922                     u1000:
  2262  000922  2824               	incf	___flmul@aexp^0,w,c
  2263  000924  A4D8               	btfss	status,2,c
  2264  000926  EF97  F004         	goto	u1011
  2265  00092A  EF99  F004         	goto	u1010
  2266  00092E                     u1011:
  2267  00092E  EFA1  F004         	goto	l1853
  2268  000932                     u1010:
  2269  000932  0E00               	movlw	0
  2270  000934  6E17               	movwf	___flmul@a^0,c
  2271  000936  0E00               	movlw	0
  2272  000938  6E18               	movwf	(___flmul@a+1)^0,c
  2273  00093A  0E00               	movlw	0
  2274  00093C  6E19               	movwf	(___flmul@a+2)^0,c
  2275  00093E  0E00               	movlw	0
  2276  000940  6E1A               	movwf	(___flmul@a+3)^0,c
  2277  000942                     l1853:
  2278  000942  8E19               	bsf	(___flmul@a+2)^0,7,c
  2279  000944  EFAC  F004         	goto	l1000
  2280  000948                     l1855:
  2281  000948  0E00               	movlw	0
  2282  00094A  6E17               	movwf	___flmul@a^0,c
  2283  00094C  0E00               	movlw	0
  2284  00094E  6E18               	movwf	(___flmul@a+1)^0,c
  2285  000950  0E00               	movlw	0
  2286  000952  6E19               	movwf	(___flmul@a+2)^0,c
  2287  000954  0E00               	movlw	0
  2288  000956  6E1A               	movwf	(___flmul@a+3)^0,c
  2289  000958                     l1000:
  2290  000958  5024               	movf	___flmul@aexp^0,w,c
  2291  00095A  B4D8               	btfsc	status,2,c
  2292  00095C  EFB2  F004         	goto	u1021
  2293  000960  EFB4  F004         	goto	u1020
  2294  000964                     u1021:
  2295  000964  EFBC  F004         	goto	l1859
  2296  000968                     u1020:
  2297  000968  5025               	movf	___flmul@bexp^0,w,c
  2298  00096A  A4D8               	btfss	status,2,c
  2299  00096C  EFBA  F004         	goto	u1031
  2300  000970  EFBC  F004         	goto	u1030
  2301  000974                     u1031:
  2302  000974  EFC6  F004         	goto	l1863
  2303  000978                     u1030:
  2304  000978                     l1859:
  2305  000978  0E00               	movlw	0
  2306  00097A  6E13               	movwf	?___flmul^0,c
  2307  00097C  0E00               	movlw	0
  2308  00097E  6E14               	movwf	(?___flmul+1)^0,c
  2309  000980  0E00               	movlw	0
  2310  000982  6E15               	movwf	(?___flmul+2)^0,c
  2311  000984  0E00               	movlw	0
  2312  000986  6E16               	movwf	(?___flmul+3)^0,c
  2313  000988  EF5E  F006         	goto	l1004
  2314  00098C                     l1863:
  2315  00098C  5019               	movf	(___flmul@a+2)^0,w,c
  2316  00098E  0213               	mulwf	___flmul@b^0,c
  2317  000990  CFF3 F02A          	movff	prodl,___flmul@temp
  2318  000994  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2319  000998  502A               	movf	___flmul@temp^0,w,c
  2320  00099A  6E20               	movwf	___flmul@grs^0,c
  2321  00099C  6A21               	clrf	(___flmul@grs+1)^0,c
  2322  00099E  6A22               	clrf	(___flmul@grs+2)^0,c
  2323  0009A0  6A23               	clrf	(___flmul@grs+3)^0,c
  2324  0009A2  502B               	movf	(___flmul@temp+1)^0,w,c
  2325  0009A4  6E26               	movwf	___flmul@prod^0,c
  2326  0009A6  6A27               	clrf	(___flmul@prod+1)^0,c
  2327  0009A8  6A28               	clrf	(___flmul@prod+2)^0,c
  2328  0009AA  6A29               	clrf	(___flmul@prod+3)^0,c
  2329  0009AC  5018               	movf	(___flmul@a+1)^0,w,c
  2330  0009AE  0214               	mulwf	(___flmul@b+1)^0,c
  2331  0009B0  CFF3 F02A          	movff	prodl,___flmul@temp
  2332  0009B4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2333  0009B8  502A               	movf	___flmul@temp^0,w,c
  2334  0009BA  2620               	addwf	___flmul@grs^0,f,c
  2335  0009BC  0E00               	movlw	0
  2336  0009BE  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2337  0009C0  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2338  0009C2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2339  0009C4  502B               	movf	(___flmul@temp+1)^0,w,c
  2340  0009C6  2626               	addwf	___flmul@prod^0,f,c
  2341  0009C8  0E00               	movlw	0
  2342  0009CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2343  0009CC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2344  0009CE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2345  0009D0  5017               	movf	___flmul@a^0,w,c
  2346  0009D2  0215               	mulwf	(___flmul@b+2)^0,c
  2347  0009D4  CFF3 F02A          	movff	prodl,___flmul@temp
  2348  0009D8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2349  0009DC  502A               	movf	___flmul@temp^0,w,c
  2350  0009DE  2620               	addwf	___flmul@grs^0,f,c
  2351  0009E0  0E00               	movlw	0
  2352  0009E2  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2353  0009E4  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2354  0009E6  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2355  0009E8  502B               	movf	(___flmul@temp+1)^0,w,c
  2356  0009EA  2626               	addwf	___flmul@prod^0,f,c
  2357  0009EC  0E00               	movlw	0
  2358  0009EE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2359  0009F0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2360  0009F2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2361  0009F4  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2362  0009F8  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2363  0009FC  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2364  000A00  6A20               	clrf	___flmul@grs^0,c
  2365  000A02  5017               	movf	___flmul@a^0,w,c
  2366  000A04  0214               	mulwf	(___flmul@b+1)^0,c
  2367  000A06  CFF3 F02A          	movff	prodl,___flmul@temp
  2368  000A0A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2369  000A0E  502A               	movf	___flmul@temp^0,w,c
  2370  000A10  2620               	addwf	___flmul@grs^0,f,c
  2371  000A12  502B               	movf	(___flmul@temp+1)^0,w,c
  2372  000A14  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2373  000A16  0E00               	movlw	0
  2374  000A18  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2375  000A1A  0E00               	movlw	0
  2376  000A1C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2377  000A1E  5018               	movf	(___flmul@a+1)^0,w,c
  2378  000A20  0213               	mulwf	___flmul@b^0,c
  2379  000A22  CFF3 F02A          	movff	prodl,___flmul@temp
  2380  000A26  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2381  000A2A  502A               	movf	___flmul@temp^0,w,c
  2382  000A2C  2620               	addwf	___flmul@grs^0,f,c
  2383  000A2E  502B               	movf	(___flmul@temp+1)^0,w,c
  2384  000A30  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2385  000A32  0E00               	movlw	0
  2386  000A34  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2387  000A36  0E00               	movlw	0
  2388  000A38  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2389  000A3A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2390  000A3E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2391  000A42  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2392  000A46  6A20               	clrf	___flmul@grs^0,c
  2393  000A48  5017               	movf	___flmul@a^0,w,c
  2394  000A4A  0213               	mulwf	___flmul@b^0,c
  2395  000A4C  CFF3 F02A          	movff	prodl,___flmul@temp
  2396  000A50  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2397  000A54  502A               	movf	___flmul@temp^0,w,c
  2398  000A56  2620               	addwf	___flmul@grs^0,f,c
  2399  000A58  502B               	movf	(___flmul@temp+1)^0,w,c
  2400  000A5A  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2401  000A5C  0E00               	movlw	0
  2402  000A5E  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2403  000A60  0E00               	movlw	0
  2404  000A62  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2405  000A64  5019               	movf	(___flmul@a+2)^0,w,c
  2406  000A66  0214               	mulwf	(___flmul@b+1)^0,c
  2407  000A68  CFF3 F02A          	movff	prodl,___flmul@temp
  2408  000A6C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2409  000A70  502A               	movf	___flmul@temp^0,w,c
  2410  000A72  2626               	addwf	___flmul@prod^0,f,c
  2411  000A74  502B               	movf	(___flmul@temp+1)^0,w,c
  2412  000A76  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2413  000A78  0E00               	movlw	0
  2414  000A7A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2415  000A7C  0E00               	movlw	0
  2416  000A7E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2417  000A80  5018               	movf	(___flmul@a+1)^0,w,c
  2418  000A82  0215               	mulwf	(___flmul@b+2)^0,c
  2419  000A84  CFF3 F02A          	movff	prodl,___flmul@temp
  2420  000A88  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2421  000A8C  502A               	movf	___flmul@temp^0,w,c
  2422  000A8E  2626               	addwf	___flmul@prod^0,f,c
  2423  000A90  502B               	movf	(___flmul@temp+1)^0,w,c
  2424  000A92  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2425  000A94  0E00               	movlw	0
  2426  000A96  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2427  000A98  0E00               	movlw	0
  2428  000A9A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2429  000A9C  5019               	movf	(___flmul@a+2)^0,w,c
  2430  000A9E  0215               	mulwf	(___flmul@b+2)^0,c
  2431  000AA0  CFF3 F02A          	movff	prodl,___flmul@temp
  2432  000AA4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2433  000AA8  502A               	movf	___flmul@temp^0,w,c
  2434  000AAA  6E1B               	movwf	??___flmul^0,c
  2435  000AAC  502B               	movf	(___flmul@temp+1)^0,w,c
  2436  000AAE  6E1C               	movwf	(??___flmul+1)^0,c
  2437  000AB0  6A1D               	clrf	(??___flmul+2)^0,c
  2438  000AB2  6A1E               	clrf	(??___flmul+3)^0,c
  2439  000AB4  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  2440  000AB8  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  2441  000ABC  C01B  F01C         	movff	??___flmul,??___flmul+1
  2442  000AC0  6A1B               	clrf	??___flmul^0,c
  2443  000AC2  501B               	movf	??___flmul^0,w,c
  2444  000AC4  2626               	addwf	___flmul@prod^0,f,c
  2445  000AC6  501C               	movf	(??___flmul+1)^0,w,c
  2446  000AC8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2447  000ACA  501D               	movf	(??___flmul+2)^0,w,c
  2448  000ACC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2449  000ACE  501E               	movf	(??___flmul+3)^0,w,c
  2450  000AD0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2451  000AD2  C020  F01B         	movff	___flmul@grs,??___flmul
  2452  000AD6  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  2453  000ADA  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  2454  000ADE  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  2455  000AE2  0E19               	movlw	25
  2456  000AE4  EF79  F005         	goto	u1040
  2457  000AE8                     u1045:
  2458  000AE8  90D8               	bcf	status,0,c
  2459  000AEA  321E               	rrcf	(??___flmul+3)^0,f,c
  2460  000AEC  321D               	rrcf	(??___flmul+2)^0,f,c
  2461  000AEE  321C               	rrcf	(??___flmul+1)^0,f,c
  2462  000AF0  321B               	rrcf	??___flmul^0,f,c
  2463  000AF2                     u1040:
  2464  000AF2  2EE8               	decfsz	wreg,f,c
  2465  000AF4  EF74  F005         	goto	u1045
  2466  000AF8  501B               	movf	??___flmul^0,w,c
  2467  000AFA  2626               	addwf	___flmul@prod^0,f,c
  2468  000AFC  501C               	movf	(??___flmul+1)^0,w,c
  2469  000AFE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2470  000B00  501D               	movf	(??___flmul+2)^0,w,c
  2471  000B02  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2472  000B04  501E               	movf	(??___flmul+3)^0,w,c
  2473  000B06  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2474  000B08  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2475  000B0C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2476  000B10  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2477  000B14  6A20               	clrf	___flmul@grs^0,c
  2478  000B16  5024               	movf	___flmul@aexp^0,w,c
  2479  000B18  C025  F01B         	movff	___flmul@bexp,??___flmul
  2480  000B1C  6A1C               	clrf	(??___flmul+1)^0,c
  2481  000B1E  261B               	addwf	??___flmul^0,f,c
  2482  000B20  0E00               	movlw	0
  2483  000B22  221C               	addwfc	(??___flmul+1)^0,f,c
  2484  000B24  0E82               	movlw	130
  2485  000B26  241B               	addwf	??___flmul^0,w,c
  2486  000B28  6E2A               	movwf	___flmul@temp^0,c
  2487  000B2A  0EFF               	movlw	255
  2488  000B2C  201C               	addwfc	(??___flmul+1)^0,w,c
  2489  000B2E  6E2B               	movwf	(___flmul@temp+1)^0,c
  2490  000B30  EFAF  F005         	goto	l1911
  2491  000B34                     l1905:
  2492  000B34  90D8               	bcf	status,0,c
  2493  000B36  3626               	rlcf	___flmul@prod^0,f,c
  2494  000B38  3627               	rlcf	(___flmul@prod+1)^0,f,c
  2495  000B3A  3628               	rlcf	(___flmul@prod+2)^0,f,c
  2496  000B3C  3629               	rlcf	(___flmul@prod+3)^0,f,c
  2497  000B3E  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2498  000B40  EFA4  F005         	goto	u1051
  2499  000B44  EFA6  F005         	goto	u1050
  2500  000B48                     u1051:
  2501  000B48  EFA7  F005         	goto	l1007
  2502  000B4C                     u1050:
  2503  000B4C  8026               	bsf	___flmul@prod^0,0,c
  2504  000B4E                     l1007:
  2505  000B4E  90D8               	bcf	status,0,c
  2506  000B50  3620               	rlcf	___flmul@grs^0,f,c
  2507  000B52  3621               	rlcf	(___flmul@grs+1)^0,f,c
  2508  000B54  3622               	rlcf	(___flmul@grs+2)^0,f,c
  2509  000B56  3623               	rlcf	(___flmul@grs+3)^0,f,c
  2510  000B58  062A               	decf	___flmul@temp^0,f,c
  2511  000B5A  A0D8               	btfss	status,0,c
  2512  000B5C  062B               	decf	(___flmul@temp+1)^0,f,c
  2513  000B5E                     l1911:
  2514  000B5E  AE28               	btfss	(___flmul@prod+2)^0,7,c
  2515  000B60  EFB4  F005         	goto	u1061
  2516  000B64  EFB6  F005         	goto	u1060
  2517  000B68                     u1061:
  2518  000B68  EF9A  F005         	goto	l1905
  2519  000B6C                     u1060:
  2520  000B6C  0E00               	movlw	0
  2521  000B6E  6E24               	movwf	___flmul@aexp^0,c
  2522  000B70  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2523  000B72  EFBD  F005         	goto	u1071
  2524  000B76  EFBF  F005         	goto	u1070
  2525  000B7A                     u1071:
  2526  000B7A  EFE3  F005         	goto	l1009
  2527  000B7E                     u1070:
  2528  000B7E  0EFF               	movlw	255
  2529  000B80  1420               	andwf	___flmul@grs^0,w,c
  2530  000B82  6E1B               	movwf	??___flmul^0,c
  2531  000B84  0EFF               	movlw	255
  2532  000B86  1421               	andwf	(___flmul@grs+1)^0,w,c
  2533  000B88  6E1C               	movwf	(??___flmul+1)^0,c
  2534  000B8A  0EFF               	movlw	255
  2535  000B8C  1422               	andwf	(___flmul@grs+2)^0,w,c
  2536  000B8E  6E1D               	movwf	(??___flmul+2)^0,c
  2537  000B90  0E7F               	movlw	127
  2538  000B92  1423               	andwf	(___flmul@grs+3)^0,w,c
  2539  000B94  6E1E               	movwf	(??___flmul+3)^0,c
  2540  000B96  501B               	movf	??___flmul^0,w,c
  2541  000B98  101C               	iorwf	(??___flmul+1)^0,w,c
  2542  000B9A  101D               	iorwf	(??___flmul+2)^0,w,c
  2543  000B9C  101E               	iorwf	(??___flmul+3)^0,w,c
  2544  000B9E  B4D8               	btfsc	status,2,c
  2545  000BA0  EFD4  F005         	goto	u1081
  2546  000BA4  EFD6  F005         	goto	u1080
  2547  000BA8                     u1081:
  2548  000BA8  EFDA  F005         	goto	l1010
  2549  000BAC                     u1080:
  2550  000BAC                     l1919:
  2551  000BAC  0E01               	movlw	1
  2552  000BAE  6E24               	movwf	___flmul@aexp^0,c
  2553  000BB0  EFE3  F005         	goto	l1009
  2554  000BB4                     l1010:
  2555  000BB4  A026               	btfss	___flmul@prod^0,0,c
  2556  000BB6  EFDF  F005         	goto	u1091
  2557  000BBA  EFE1  F005         	goto	u1090
  2558  000BBE                     u1091:
  2559  000BBE  EFE3  F005         	goto	l1009
  2560  000BC2                     u1090:
  2561  000BC2  EFD6  F005         	goto	l1919
  2562  000BC6                     l1009:
  2563  000BC6  5024               	movf	___flmul@aexp^0,w,c
  2564  000BC8  B4D8               	btfsc	status,2,c
  2565  000BCA  EFE9  F005         	goto	u1101
  2566  000BCE  EFEB  F005         	goto	u1100
  2567  000BD2                     u1101:
  2568  000BD2  EF0F  F006         	goto	l1931
  2569  000BD6                     u1100:
  2570  000BD6  0E01               	movlw	1
  2571  000BD8  2626               	addwf	___flmul@prod^0,f,c
  2572  000BDA  0E00               	movlw	0
  2573  000BDC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2574  000BDE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2575  000BE0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2576  000BE2  A029               	btfss	(___flmul@prod+3)^0,0,c
  2577  000BE4  EFF6  F005         	goto	u1111
  2578  000BE8  EFF8  F005         	goto	u1110
  2579  000BEC                     u1111:
  2580  000BEC  EF0F  F006         	goto	l1931
  2581  000BF0                     u1110:
  2582  000BF0  C026  F01B         	movff	___flmul@prod,??___flmul
  2583  000BF4  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  2584  000BF8  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  2585  000BFC  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  2586  000C00  341E               	rlcf	(??___flmul+3)^0,w,c
  2587  000C02  321E               	rrcf	(??___flmul+3)^0,f,c
  2588  000C04  321D               	rrcf	(??___flmul+2)^0,f,c
  2589  000C06  321C               	rrcf	(??___flmul+1)^0,f,c
  2590  000C08  321B               	rrcf	??___flmul^0,f,c
  2591  000C0A  C01B  F026         	movff	??___flmul,___flmul@prod
  2592  000C0E  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  2593  000C12  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  2594  000C16  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  2595  000C1A  4A2A               	infsnz	___flmul@temp^0,f,c
  2596  000C1C  2A2B               	incf	(___flmul@temp+1)^0,f,c
  2597  000C1E                     l1931:
  2598  000C1E  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2599  000C20  EF1A  F006         	goto	u1121
  2600  000C24  502B               	movf	(___flmul@temp+1)^0,w,c
  2601  000C26  E108               	bnz	u1120
  2602  000C28  282A               	incf	___flmul@temp^0,w,c
  2603  000C2A  A0D8               	btfss	status,0,c
  2604  000C2C  EF1A  F006         	goto	u1121
  2605  000C30  EF1C  F006         	goto	u1120
  2606  000C34                     u1121:
  2607  000C34  EF26  F006         	goto	l1935
  2608  000C38                     u1120:
  2609  000C38  0E00               	movlw	0
  2610  000C3A  6E26               	movwf	___flmul@prod^0,c
  2611  000C3C  0E00               	movlw	0
  2612  000C3E  6E27               	movwf	(___flmul@prod+1)^0,c
  2613  000C40  0E80               	movlw	128
  2614  000C42  6E28               	movwf	(___flmul@prod+2)^0,c
  2615  000C44  0E7F               	movlw	127
  2616  000C46  6E29               	movwf	(___flmul@prod+3)^0,c
  2617  000C48  EF54  F006         	goto	l1947
  2618  000C4C                     l1935:
  2619  000C4C  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2620  000C4E  EF33  F006         	goto	u1130
  2621  000C52  502B               	movf	(___flmul@temp+1)^0,w,c
  2622  000C54  E106               	bnz	u1131
  2623  000C56  042A               	decf	___flmul@temp^0,w,c
  2624  000C58  B0D8               	btfsc	status,0,c
  2625  000C5A  EF31  F006         	goto	u1131
  2626  000C5E  EF33  F006         	goto	u1130
  2627  000C62                     u1131:
  2628  000C62  EF3F  F006         	goto	l1017
  2629  000C66                     u1130:
  2630  000C66  0E00               	movlw	0
  2631  000C68  6E26               	movwf	___flmul@prod^0,c
  2632  000C6A  0E00               	movlw	0
  2633  000C6C  6E27               	movwf	(___flmul@prod+1)^0,c
  2634  000C6E  0E00               	movlw	0
  2635  000C70  6E28               	movwf	(___flmul@prod+2)^0,c
  2636  000C72  0E00               	movlw	0
  2637  000C74  6E29               	movwf	(___flmul@prod+3)^0,c
  2638  000C76  0E00               	movlw	0
  2639  000C78  6E1F               	movwf	___flmul@sign^0,c
  2640  000C7A  EF54  F006         	goto	l1947
  2641  000C7E                     l1017:
  2642  000C7E  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  2643  000C82  0EFF               	movlw	255
  2644  000C84  1626               	andwf	___flmul@prod^0,f,c
  2645  000C86  0EFF               	movlw	255
  2646  000C88  1627               	andwf	(___flmul@prod+1)^0,f,c
  2647  000C8A  0E7F               	movlw	127
  2648  000C8C  1628               	andwf	(___flmul@prod+2)^0,f,c
  2649  000C8E  0E00               	movlw	0
  2650  000C90  1629               	andwf	(___flmul@prod+3)^0,f,c
  2651  000C92  A025               	btfss	___flmul@bexp^0,0,c
  2652  000C94  EF4E  F006         	goto	u1141
  2653  000C98  EF50  F006         	goto	u1140
  2654  000C9C                     u1141:
  2655  000C9C  EF51  F006         	goto	l1945
  2656  000CA0                     u1140:
  2657  000CA0  8E28               	bsf	(___flmul@prod+2)^0,7,c
  2658  000CA2                     l1945:
  2659  000CA2  90D8               	bcf	status,0,c
  2660  000CA4  3025               	rrcf	___flmul@bexp^0,w,c
  2661  000CA6  6E29               	movwf	(___flmul@prod+3)^0,c
  2662  000CA8                     l1947:
  2663  000CA8  501F               	movf	___flmul@sign^0,w,c
  2664  000CAA  1229               	iorwf	(___flmul@prod+3)^0,f,c
  2665  000CAC  C026  F013         	movff	___flmul@prod,?___flmul
  2666  000CB0  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  2667  000CB4  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  2668  000CB8  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  2669  000CBC                     l1004:
  2670  000CBC  0012               	return		;funcret
  2671  000CBE                     __end_of___flmul:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function ___flge *****************
  2675 ;; Defined at:
  2676 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  ff1             4   43[COMRAM] unsigned char 
  2679 ;;  ff2             4   47[COMRAM] unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2691 ;;      Params:         8       0       0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2693 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2694 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:       12 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 4
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_normaliza
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text7
  2706  0015D0                     __ptext7:
  2707                           	callstack 0
  2708  0015D0                     ___flge:
  2709                           	callstack 25
  2710  0015D0  0E00               	movlw	0
  2711  0015D2  142C               	andwf	___flge@ff1^0,w,c
  2712  0015D4  6E34               	movwf	??___flge^0,c
  2713  0015D6  0E00               	movlw	0
  2714  0015D8  142D               	andwf	(___flge@ff1+1)^0,w,c
  2715  0015DA  6E35               	movwf	(??___flge+1)^0,c
  2716  0015DC  0E80               	movlw	128
  2717  0015DE  142E               	andwf	(___flge@ff1+2)^0,w,c
  2718  0015E0  6E36               	movwf	(??___flge+2)^0,c
  2719  0015E2  0E7F               	movlw	127
  2720  0015E4  142F               	andwf	(___flge@ff1+3)^0,w,c
  2721  0015E6  6E37               	movwf	(??___flge+3)^0,c
  2722  0015E8  5034               	movf	??___flge^0,w,c
  2723  0015EA  1035               	iorwf	(??___flge+1)^0,w,c
  2724  0015EC  1036               	iorwf	(??___flge+2)^0,w,c
  2725  0015EE  1037               	iorwf	(??___flge+3)^0,w,c
  2726  0015F0  A4D8               	btfss	status,2,c
  2727  0015F2  EFFD  F00A         	goto	u1151
  2728  0015F6  EFFF  F00A         	goto	u1150
  2729  0015FA                     u1151:
  2730  0015FA  EF07  F00B         	goto	l1957
  2731  0015FE                     u1150:
  2732  0015FE  0E00               	movlw	0
  2733  001600  6E2C               	movwf	___flge@ff1^0,c
  2734  001602  0E00               	movlw	0
  2735  001604  6E2D               	movwf	(___flge@ff1+1)^0,c
  2736  001606  0E00               	movlw	0
  2737  001608  6E2E               	movwf	(___flge@ff1+2)^0,c
  2738  00160A  0E00               	movlw	0
  2739  00160C  6E2F               	movwf	(___flge@ff1+3)^0,c
  2740  00160E                     l1957:
  2741  00160E  0E00               	movlw	0
  2742  001610  1430               	andwf	___flge@ff2^0,w,c
  2743  001612  6E34               	movwf	??___flge^0,c
  2744  001614  0E00               	movlw	0
  2745  001616  1431               	andwf	(___flge@ff2+1)^0,w,c
  2746  001618  6E35               	movwf	(??___flge+1)^0,c
  2747  00161A  0E80               	movlw	128
  2748  00161C  1432               	andwf	(___flge@ff2+2)^0,w,c
  2749  00161E  6E36               	movwf	(??___flge+2)^0,c
  2750  001620  0E7F               	movlw	127
  2751  001622  1433               	andwf	(___flge@ff2+3)^0,w,c
  2752  001624  6E37               	movwf	(??___flge+3)^0,c
  2753  001626  5034               	movf	??___flge^0,w,c
  2754  001628  1035               	iorwf	(??___flge+1)^0,w,c
  2755  00162A  1036               	iorwf	(??___flge+2)^0,w,c
  2756  00162C  1037               	iorwf	(??___flge+3)^0,w,c
  2757  00162E  A4D8               	btfss	status,2,c
  2758  001630  EF1C  F00B         	goto	u1161
  2759  001634  EF1E  F00B         	goto	u1160
  2760  001638                     u1161:
  2761  001638  EF26  F00B         	goto	l1961
  2762  00163C                     u1160:
  2763  00163C  0E00               	movlw	0
  2764  00163E  6E30               	movwf	___flge@ff2^0,c
  2765  001640  0E00               	movlw	0
  2766  001642  6E31               	movwf	(___flge@ff2+1)^0,c
  2767  001644  0E00               	movlw	0
  2768  001646  6E32               	movwf	(___flge@ff2+2)^0,c
  2769  001648  0E00               	movlw	0
  2770  00164A  6E33               	movwf	(___flge@ff2+3)^0,c
  2771  00164C                     l1961:
  2772  00164C  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  2773  00164E  EF2B  F00B         	goto	u1171
  2774  001652  EF2D  F00B         	goto	u1170
  2775  001656                     u1171:
  2776  001656  EF36  F00B         	goto	l1965
  2777  00165A                     u1170:
  2778  00165A  6C2C               	negf	___flge@ff1^0,c
  2779  00165C  1E2D               	comf	(___flge@ff1+1)^0,f,c
  2780  00165E  B0D8               	btfsc	status,0,c
  2781  001660  2A2D               	incf	(___flge@ff1+1)^0,f,c
  2782  001662  1E2E               	comf	(___flge@ff1+2)^0,f,c
  2783  001664  B0D8               	btfsc	status,0,c
  2784  001666  2A2E               	incf	(___flge@ff1+2)^0,f,c
  2785  001668  0E80               	movlw	128
  2786  00166A  562F               	subfwb	(___flge@ff1+3)^0,f,c
  2787  00166C                     l1965:
  2788  00166C  AE33               	btfss	(___flge@ff2+3)^0,7,c
  2789  00166E  EF3B  F00B         	goto	u1181
  2790  001672  EF3D  F00B         	goto	u1180
  2791  001676                     u1181:
  2792  001676  EF46  F00B         	goto	l659
  2793  00167A                     u1180:
  2794  00167A  6C30               	negf	___flge@ff2^0,c
  2795  00167C  1E31               	comf	(___flge@ff2+1)^0,f,c
  2796  00167E  B0D8               	btfsc	status,0,c
  2797  001680  2A31               	incf	(___flge@ff2+1)^0,f,c
  2798  001682  1E32               	comf	(___flge@ff2+2)^0,f,c
  2799  001684  B0D8               	btfsc	status,0,c
  2800  001686  2A32               	incf	(___flge@ff2+2)^0,f,c
  2801  001688  0E80               	movlw	128
  2802  00168A  5633               	subfwb	(___flge@ff2+3)^0,f,c
  2803  00168C                     l659:
  2804  00168C  0E00               	movlw	0
  2805  00168E  1A2C               	xorwf	___flge@ff1^0,f,c
  2806  001690  0E00               	movlw	0
  2807  001692  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  2808  001694  0E00               	movlw	0
  2809  001696  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  2810  001698  0E80               	movlw	128
  2811  00169A  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  2812  00169C  0E00               	movlw	0
  2813  00169E  1A30               	xorwf	___flge@ff2^0,f,c
  2814  0016A0  0E00               	movlw	0
  2815  0016A2  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  2816  0016A4  0E00               	movlw	0
  2817  0016A6  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  2818  0016A8  0E80               	movlw	128
  2819  0016AA  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  2820  0016AC  5030               	movf	___flge@ff2^0,w,c
  2821  0016AE  5C2C               	subwf	___flge@ff1^0,w,c
  2822  0016B0  5031               	movf	(___flge@ff2+1)^0,w,c
  2823  0016B2  582D               	subwfb	(___flge@ff1+1)^0,w,c
  2824  0016B4  5032               	movf	(___flge@ff2+2)^0,w,c
  2825  0016B6  582E               	subwfb	(___flge@ff1+2)^0,w,c
  2826  0016B8  5033               	movf	(___flge@ff2+3)^0,w,c
  2827  0016BA  582F               	subwfb	(___flge@ff1+3)^0,w,c
  2828  0016BC  B0D8               	btfsc	status,0,c
  2829  0016BE  EF63  F00B         	goto	u1191
  2830  0016C2  EF65  F00B         	goto	u1190
  2831  0016C6                     u1191:
  2832  0016C6  EF68  F00B         	goto	l1971
  2833  0016CA                     u1190:
  2834  0016CA  90D8               	bcf	status,0,c
  2835  0016CC  EF69  F00B         	goto	l660
  2836  0016D0                     l1971:
  2837  0016D0  80D8               	bsf	status,0,c
  2838  0016D2                     l660:
  2839  0016D2  0012               	return		;funcret
  2840  0016D4                     __end_of___flge:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _SYSTEM_Initialize *****************
  2844 ;; Defined at:
  2845 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 6
  2866 ;; This function calls:
  2867 ;;		_EUSART1_Initialize
  2868 ;;		_EXT_INT_Initialize
  2869 ;;		_INTERRUPT_Initialize
  2870 ;;		_OSCILLATOR_Initialize
  2871 ;;		_PIN_MANAGER_Initialize
  2872 ;;		_TMR0_Initialize
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text8
  2879  001A2E                     __ptext8:
  2880                           	callstack 0
  2881  001A2E                     _SYSTEM_Initialize:
  2882                           	callstack 24
  2883  001A2E                     
  2884                           ;mcc.c: 53: INTERRUPT_Initialize();
  2885  001A2E  EC64  F00D         	call	_INTERRUPT_Initialize	;wreg free
  2886  001A32                     
  2887                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2888  001A32  ECD6  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2889  001A36                     
  2890                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2891  001A36  EC43  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  2892  001A3A                     
  2893                           ;mcc.c: 56: EXT_INT_Initialize();
  2894  001A3A  EC39  F00D         	call	_EXT_INT_Initialize	;wreg free
  2895  001A3E                     
  2896                           ;mcc.c: 57: TMR0_Initialize();
  2897  001A3E  EC2F  F00D         	call	_TMR0_Initialize	;wreg free
  2898  001A42                     
  2899                           ;mcc.c: 58: EUSART1_Initialize();
  2900  001A42  ECB7  F00C         	call	_EUSART1_Initialize	;wreg free
  2901  001A46  0012               	return		;funcret
  2902  001A48                     __end_of_SYSTEM_Initialize:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _TMR0_Initialize *****************
  2906 ;; Defined at:
  2907 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 4
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_SYSTEM_Initialize
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text9
  2936  001A5E                     __ptext9:
  2937                           	callstack 0
  2938  001A5E                     _TMR0_Initialize:
  2939                           	callstack 25
  2940  001A5E                     
  2941                           ;tmr0.c: 71: TMR0H = 0x00;
  2942  001A5E  0E00               	movlw	0
  2943  001A60  6ED7               	movwf	215,c	;volatile
  2944                           
  2945                           ;tmr0.c: 74: TMR0L = 0x64;
  2946  001A62  0E64               	movlw	100
  2947  001A64  6ED6               	movwf	214,c	;volatile
  2948                           
  2949                           ;tmr0.c: 78: timer0ReloadVal = 100;
  2950  001A66  0E64               	movlw	100
  2951  001A68  6E5A               	movwf	_timer0ReloadVal^0,c	;volatile
  2952  001A6A                     
  2953                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  2954  001A6A  94F2               	bcf	242,2,c	;volatile
  2955                           
  2956                           ;tmr0.c: 84: T0CON = 0xD7;
  2957  001A6C  0ED7               	movlw	215
  2958  001A6E  6ED5               	movwf	213,c	;volatile
  2959  001A70  0012               	return		;funcret
  2960  001A72                     __end_of_TMR0_Initialize:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _PIN_MANAGER_Initialize *****************
  2964 ;; Defined at:
  2965 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 4
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_SYSTEM_Initialize
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text10
  2994  0019AC                     __ptext10:
  2995                           	callstack 0
  2996  0019AC                     _PIN_MANAGER_Initialize:
  2997                           	callstack 25
  2998  0019AC                     
  2999                           ;pin_manager.c: 60: LATA = 0x00;
  3000  0019AC  0E00               	movlw	0
  3001  0019AE  6E89               	movwf	137,c	;volatile
  3002                           
  3003                           ;pin_manager.c: 61: LATB = 0x00;
  3004  0019B0  0E00               	movlw	0
  3005  0019B2  6E8A               	movwf	138,c	;volatile
  3006                           
  3007                           ;pin_manager.c: 62: LATC = 0x00;
  3008  0019B4  0E00               	movlw	0
  3009  0019B6  6E8B               	movwf	139,c	;volatile
  3010                           
  3011                           ;pin_manager.c: 67: TRISA = 0xC7;
  3012  0019B8  0EC7               	movlw	199
  3013  0019BA  6E92               	movwf	146,c	;volatile
  3014                           
  3015                           ;pin_manager.c: 68: TRISB = 0xFE;
  3016  0019BC  0EFE               	movlw	254
  3017  0019BE  6E93               	movwf	147,c	;volatile
  3018                           
  3019                           ;pin_manager.c: 69: TRISC = 0x87;
  3020  0019C0  0E87               	movlw	135
  3021  0019C2  6E94               	movwf	148,c	;volatile
  3022                           
  3023                           ;pin_manager.c: 74: ANSELC = 0x84;
  3024  0019C4  0E84               	movlw	132
  3025  0019C6  010F               	movlb	15	; () banked
  3026  0019C8  6F5D               	movwf	93,b	;volatile
  3027                           
  3028                           ;pin_manager.c: 75: ANSELB = 0x3C;
  3029  0019CA  0E3C               	movlw	60
  3030  0019CC  6F5C               	movwf	92,b	;volatile
  3031                           
  3032                           ;pin_manager.c: 76: ANSELA = 0x07;
  3033  0019CE  0E07               	movlw	7
  3034  0019D0  6F5B               	movwf	91,b	;volatile
  3035                           
  3036                           ;pin_manager.c: 81: WPUB = 0x00;
  3037  0019D2  0E00               	movlw	0
  3038  0019D4  6E85               	movwf	133,c	;volatile
  3039  0019D6                     
  3040                           ; BSR set to: 15
  3041                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  3042  0019D6  8EF1               	bsf	241,7,c	;volatile
  3043  0019D8                     
  3044                           ; BSR set to: 15
  3045  0019D8  0012               	return		;funcret
  3046  0019DA                     __end_of_PIN_MANAGER_Initialize:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _OSCILLATOR_Initialize *****************
  3050 ;; Defined at:
  3051 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 4
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_SYSTEM_Initialize
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text11
  3080  001A86                     __ptext11:
  3081                           	callstack 0
  3082  001A86                     _OSCILLATOR_Initialize:
  3083                           	callstack 25
  3084  001A86                     
  3085                           ;mcc.c: 64: OSCCON = 0x70;
  3086  001A86  0E70               	movlw	112
  3087  001A88  6ED3               	movwf	211,c	;volatile
  3088                           
  3089                           ;mcc.c: 66: OSCCON2 = 0x00;
  3090  001A8A  0E00               	movlw	0
  3091  001A8C  6ED2               	movwf	210,c	;volatile
  3092                           
  3093                           ;mcc.c: 68: OSCTUNE = 0x80;
  3094  001A8E  0E80               	movlw	128
  3095  001A90  6E9B               	movwf	155,c	;volatile
  3096                           
  3097                           ;mcc.c: 70: ACTCON = 0x00;
  3098  001A92  0E00               	movlw	0
  3099  001A94  6EB5               	movwf	181,c	;volatile
  3100  001A96  0012               	return		;funcret
  3101  001A98                     __end_of_OSCILLATOR_Initialize:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function _INTERRUPT_Initialize *****************
  3105 ;; Defined at:
  3106 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		None
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3120 ;;      Params:         0       0       0       0       0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3123 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 4
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_SYSTEM_Initialize
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text12
  3135  001AC8                     __ptext12:
  3136                           	callstack 0
  3137  001AC8                     _INTERRUPT_Initialize:
  3138                           	callstack 25
  3139  001AC8                     
  3140                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3141  001AC8  9ED0               	bcf	208,7,c	;volatile
  3142  001ACA  0012               	return		;funcret
  3143  001ACC                     __end_of_INTERRUPT_Initialize:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _EXT_INT_Initialize *****************
  3147 ;; Defined at:
  3148 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 5
  3169 ;; This function calls:
  3170 ;;		_INT1_SetInterruptHandler
  3171 ;; This function is called by:
  3172 ;;		_SYSTEM_Initialize
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text13
  3177  001A72                     __ptext13:
  3178                           	callstack 0
  3179  001A72                     _EXT_INT_Initialize:
  3180                           	callstack 24
  3181  001A72                     
  3182                           ;ext_int.c: 64: (INTCON3bits.INT1IF = 0);
  3183  001A72  90F0               	bcf	240,0,c	;volatile
  3184                           
  3185                           ;ext_int.c: 65: (INTCON2bits.INTEDG1 = 0);
  3186  001A74  9AF1               	bcf	241,5,c	;volatile
  3187  001A76                     
  3188                           ;ext_int.c: 67: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3189  001A76  0ECC               	movlw	low _INT1_DefaultInterruptHandler
  3190  001A78  6E05               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3191  001A7A  0E1A               	movlw	high _INT1_DefaultInterruptHandler
  3192  001A7C  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3193  001A7E  EC4C  F00D         	call	_INT1_SetInterruptHandler	;wreg free
  3194  001A82                     
  3195                           ;ext_int.c: 68: (INTCON3bits.INT1IE = 1);
  3196  001A82  86F0               	bsf	240,3,c	;volatile
  3197  001A84  0012               	return		;funcret
  3198  001A86                     __end_of_EXT_INT_Initialize:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function _INT1_SetInterruptHandler *****************
  3202 ;; Defined at:
  3203 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  3206 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3218 ;;      Params:         2       0       0       0       0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3221 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3222 ;;Total ram usage:        2 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 4
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_EXT_INT_Initialize
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text14
  3233  001A98                     __ptext14:
  3234                           	callstack 0
  3235  001A98                     _INT1_SetInterruptHandler:
  3236                           	callstack 24
  3237  001A98                     
  3238                           ;ext_int.c: 51: INT1_InterruptHandler = InterruptHandler;
  3239  001A98  C005  F052         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3240  001A9C  C006  F053         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3241  001AA0  0012               	return		;funcret
  3242  001AA2                     __end_of_INT1_SetInterruptHandler:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _EUSART1_Initialize *****************
  3246 ;; Defined at:
  3247 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3264 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3265 ;;Total ram usage:        0 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 5
  3268 ;; This function calls:
  3269 ;;		_EUSART1_SetErrorHandler
  3270 ;;		_EUSART1_SetFramingErrorHandler
  3271 ;;		_EUSART1_SetOverrunErrorHandler
  3272 ;; This function is called by:
  3273 ;;		_SYSTEM_Initialize
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text15
  3278  00196E                     __ptext15:
  3279                           	callstack 0
  3280  00196E                     _EUSART1_Initialize:
  3281                           	callstack 24
  3282  00196E                     
  3283                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  3284  00196E  0E08               	movlw	8
  3285  001970  6EB8               	movwf	184,c	;volatile
  3286                           
  3287                           ;eusart1.c: 74: RCSTA1 = 0x80;
  3288  001972  0E80               	movlw	128
  3289  001974  6EAB               	movwf	171,c	;volatile
  3290                           
  3291                           ;eusart1.c: 77: TXSTA1 = 0x24;
  3292  001976  0E24               	movlw	36
  3293  001978  6EAC               	movwf	172,c	;volatile
  3294                           
  3295                           ;eusart1.c: 80: SPBRG1 = 0xA0;
  3296  00197A  0EA0               	movlw	160
  3297  00197C  6EAF               	movwf	175,c	;volatile
  3298                           
  3299                           ;eusart1.c: 83: SPBRGH1 = 0x01;
  3300  00197E  0E01               	movlw	1
  3301  001980  6EB0               	movwf	176,c	;volatile
  3302  001982                     
  3303                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3304  001982  0E00               	movlw	0
  3305  001984  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3306  001986  0E00               	movlw	0
  3307  001988  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3308  00198A  EC56  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3309  00198E                     
  3310                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3311  00198E  0E00               	movlw	0
  3312  001990  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3313  001992  0E00               	movlw	0
  3314  001994  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3315  001996  EC51  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3316  00199A                     
  3317                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3318  00199A  0E00               	movlw	0
  3319  00199C  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3320  00199E  0E00               	movlw	0
  3321  0019A0  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3322  0019A2  EC5B  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  3323  0019A6                     
  3324                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  3325  0019A6  0E00               	movlw	0
  3326  0019A8  6E47               	movwf	_eusart1RxLastError^0,c	;volatile
  3327  0019AA  0012               	return		;funcret
  3328  0019AC                     __end_of_EUSART1_Initialize:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3332 ;; Defined at:
  3333 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3336 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3348 ;;      Params:         2       0       0       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3351 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:        2 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 4
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_EUSART1_Initialize
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text16
  3363  001AA2                     __ptext16:
  3364                           	callstack 0
  3365  001AA2                     _EUSART1_SetOverrunErrorHandler:
  3366                           	callstack 24
  3367  001AA2                     
  3368                           ;eusart1.c: 179: EUSART1_OverrunErrorHandler = interruptHandler;
  3369  001AA2  C005  F056         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3370  001AA6  C006  F057         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3371  001AAA  0012               	return		;funcret
  3372  001AAC                     __end_of_EUSART1_SetOverrunErrorHandler:
  3373                           	callstack 0
  3374                           
  3375 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3376 ;; Defined at:
  3377 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3380 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3392 ;;      Params:         2       0       0       0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3395 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 4
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_EUSART1_Initialize
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text17
  3407  001AAC                     __ptext17:
  3408                           	callstack 0
  3409  001AAC                     _EUSART1_SetFramingErrorHandler:
  3410                           	callstack 24
  3411  001AAC                     
  3412                           ;eusart1.c: 175: EUSART1_FramingErrorHandler = interruptHandler;
  3413  001AAC  C005  F058         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3414  001AB0  C006  F059         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3415  001AB4  0012               	return		;funcret
  3416  001AB6                     __end_of_EUSART1_SetFramingErrorHandler:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function _EUSART1_SetErrorHandler *****************
  3420 ;; Defined at:
  3421 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3424 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3436 ;;      Params:         2       0       0       0       0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3439 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3440 ;;Total ram usage:        2 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 4
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_EUSART1_Initialize
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text18
  3451  001AB6                     __ptext18:
  3452                           	callstack 0
  3453  001AB6                     _EUSART1_SetErrorHandler:
  3454                           	callstack 24
  3455  001AB6                     
  3456                           ;eusart1.c: 183: EUSART1_ErrorHandler = interruptHandler;
  3457  001AB6  C005  F054         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3458  001ABA  C006  F055         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3459  001ABE  0012               	return		;funcret
  3460  001AC0                     __end_of_EUSART1_SetErrorHandler:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _Hash_algoritmo *****************
  3464 ;; Defined at:
  3465 ;;		line 128 in file "main.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  hash_acum       4   26[COMRAM] unsigned long 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  4   16[COMRAM] unsigned long 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3479 ;;      Params:         4       0       0       0       0       0       0       0       0
  3480 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3481 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3482 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3483 ;;Total ram usage:       14 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 5
  3486 ;; This function calls:
  3487 ;;		___lmul
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text19
  3494  0016D4                     __ptext19:
  3495                           	callstack 0
  3496  0016D4                     _Hash_algoritmo:
  3497                           	callstack 25
  3498  0016D4                     
  3499                           ;main.c: 130: unsigned long hash_acum = 2166136261;
  3500  0016D4  0EC5               	movlw	197
  3501  0016D6  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3502  0016D8  0E9D               	movlw	157
  3503  0016DA  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3504  0016DC  0E1C               	movlw	28
  3505  0016DE  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3506  0016E0  0E81               	movlw	129
  3507  0016E2  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3508                           
  3509                           ;main.c: 131: for (cont = 0; cont < cuenta - 1; cont++)
  3510  0016E4  0E00               	movlw	0
  3511  0016E6  6E45               	movwf	_cont^0,c
  3512  0016E8  EF9A  F00B         	goto	l2083
  3513  0016EC                     l2079:
  3514                           
  3515                           ;main.c: 132: {;main.c: 133: hash_acum = (hash_acum * 16777619) ^ tiempo[cont];
  3516  0016EC  C01B  F005         	movff	Hash_algoritmo@hash_acum,___lmul@multiplier
  3517  0016F0  C01C  F006         	movff	Hash_algoritmo@hash_acum+1,___lmul@multiplier+1
  3518  0016F4  C01D  F007         	movff	Hash_algoritmo@hash_acum+2,___lmul@multiplier+2
  3519  0016F8  C01E  F008         	movff	Hash_algoritmo@hash_acum+3,___lmul@multiplier+3
  3520  0016FC  0E93               	movlw	147
  3521  0016FE  6E09               	movwf	___lmul@multiplicand^0,c
  3522  001700  0E01               	movlw	1
  3523  001702  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  3524  001704  0E00               	movlw	0
  3525  001706  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  3526  001708  0E01               	movlw	1
  3527  00170A  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  3528  00170C  EC53  F00C         	call	___lmul	;wreg free
  3529  001710  0E60               	movlw	low _tiempo
  3530  001712  2445               	addwf	_cont^0,w,c
  3531  001714  6ED9               	movwf	fsr2l,c
  3532  001716  6ADA               	clrf	fsr2h,c
  3533  001718  0E00               	movlw	high _tiempo
  3534  00171A  22DA               	addwfc	fsr2h,f,c
  3535  00171C  50DF               	movf	indf2,w,c
  3536  00171E  6E15               	movwf	??_Hash_algoritmo^0,c
  3537  001720  5015               	movf	??_Hash_algoritmo^0,w,c
  3538  001722  1805               	xorwf	?___lmul^0,w,c
  3539  001724  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3540  001726  5006               	movf	(?___lmul+1)^0,w,c
  3541  001728  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3542  00172A  5007               	movf	(?___lmul+2)^0,w,c
  3543  00172C  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3544  00172E  5008               	movf	(?___lmul+3)^0,w,c
  3545  001730  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3546  001732  2A45               	incf	_cont^0,f,c
  3547  001734                     l2083:
  3548  001734  0EFF               	movlw	255
  3549  001736  6E15               	movwf	??_Hash_algoritmo^0,c
  3550  001738  0EFF               	movlw	255
  3551  00173A  6E16               	movwf	(??_Hash_algoritmo+1)^0,c
  3552  00173C  C042  F017         	movff	_cuenta,??_Hash_algoritmo+2
  3553  001740  C043  F018         	movff	_cuenta+1,??_Hash_algoritmo+3
  3554  001744  5015               	movf	??_Hash_algoritmo^0,w,c
  3555  001746  2617               	addwf	(??_Hash_algoritmo+2)^0,f,c
  3556  001748  5016               	movf	(??_Hash_algoritmo+1)^0,w,c
  3557  00174A  2218               	addwfc	(??_Hash_algoritmo+3)^0,f,c
  3558  00174C  5045               	movf	_cont^0,w,c
  3559  00174E  6E19               	movwf	(??_Hash_algoritmo+4)^0,c
  3560  001750  6A1A               	clrf	(??_Hash_algoritmo+5)^0,c
  3561  001752  5017               	movf	(??_Hash_algoritmo+2)^0,w,c
  3562  001754  5C19               	subwf	(??_Hash_algoritmo+4)^0,w,c
  3563  001756  5018               	movf	(??_Hash_algoritmo+3)^0,w,c
  3564  001758  581A               	subwfb	(??_Hash_algoritmo+5)^0,w,c
  3565  00175A  A0D8               	btfss	status,0,c
  3566  00175C  EFB2  F00B         	goto	u1391
  3567  001760  EFB4  F00B         	goto	u1390
  3568  001764                     u1391:
  3569  001764  EF76  F00B         	goto	l2079
  3570  001768                     u1390:
  3571  001768                     
  3572                           ;main.c: 134: };main.c: 135: return (hash_acum);
  3573  001768  C01B  F011         	movff	Hash_algoritmo@hash_acum,?_Hash_algoritmo
  3574  00176C  C01C  F012         	movff	Hash_algoritmo@hash_acum+1,?_Hash_algoritmo+1
  3575  001770  C01D  F013         	movff	Hash_algoritmo@hash_acum+2,?_Hash_algoritmo+2
  3576  001774  C01E  F014         	movff	Hash_algoritmo@hash_acum+3,?_Hash_algoritmo+3
  3577  001778  0012               	return		;funcret
  3578  00177A                     __end_of_Hash_algoritmo:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function ___lmul *****************
  3582 ;; Defined at:
  3583 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  multiplier      4    4[COMRAM] unsigned long 
  3586 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  product         4   12[COMRAM] unsigned long 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  4    4[COMRAM] unsigned long 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3598 ;;      Params:         8       0       0       0       0       0       0       0       0
  3599 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3601 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3602 ;;Total ram usage:       12 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 4
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_Hash_algoritmo
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text20
  3613  0018A6                     __ptext20:
  3614                           	callstack 0
  3615  0018A6                     ___lmul:
  3616                           	callstack 25
  3617  0018A6  0E00               	movlw	0
  3618  0018A8  6E0D               	movwf	___lmul@product^0,c
  3619  0018AA  0E00               	movlw	0
  3620  0018AC  6E0E               	movwf	(___lmul@product+1)^0,c
  3621  0018AE  0E00               	movlw	0
  3622  0018B0  6E0F               	movwf	(___lmul@product+2)^0,c
  3623  0018B2  0E00               	movlw	0
  3624  0018B4  6E10               	movwf	(___lmul@product+3)^0,c
  3625  0018B6                     l1793:
  3626  0018B6  A005               	btfss	___lmul@multiplier^0,0,c
  3627  0018B8  EF60  F00C         	goto	u911
  3628  0018BC  EF62  F00C         	goto	u910
  3629  0018C0                     u911:
  3630  0018C0  EF6A  F00C         	goto	l1797
  3631  0018C4                     u910:
  3632  0018C4  5009               	movf	___lmul@multiplicand^0,w,c
  3633  0018C6  260D               	addwf	___lmul@product^0,f,c
  3634  0018C8  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  3635  0018CA  220E               	addwfc	(___lmul@product+1)^0,f,c
  3636  0018CC  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  3637  0018CE  220F               	addwfc	(___lmul@product+2)^0,f,c
  3638  0018D0  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  3639  0018D2  2210               	addwfc	(___lmul@product+3)^0,f,c
  3640  0018D4                     l1797:
  3641  0018D4  90D8               	bcf	status,0,c
  3642  0018D6  3609               	rlcf	___lmul@multiplicand^0,f,c
  3643  0018D8  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3644  0018DA  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3645  0018DC  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3646  0018DE  90D8               	bcf	status,0,c
  3647  0018E0  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  3648  0018E2  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  3649  0018E4  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  3650  0018E6  3205               	rrcf	___lmul@multiplier^0,f,c
  3651  0018E8  5005               	movf	___lmul@multiplier^0,w,c
  3652  0018EA  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  3653  0018EC  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  3654  0018EE  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  3655  0018F0  A4D8               	btfss	status,2,c
  3656  0018F2  EF7D  F00C         	goto	u921
  3657  0018F6  EF7F  F00C         	goto	u920
  3658  0018FA                     u921:
  3659  0018FA  EF5B  F00C         	goto	l1793
  3660  0018FE                     u920:
  3661  0018FE  C00D  F005         	movff	___lmul@product,?___lmul
  3662  001902  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  3663  001906  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  3664  00190A  C010  F008         	movff	___lmul@product+3,?___lmul+3
  3665  00190E  0012               	return		;funcret
  3666  001910                     __end_of___lmul:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _EUSART1_Write_string *****************
  3670 ;; Defined at:
  3671 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  data            2    5[COMRAM] PTR const unsigned char 
  3674 ;;		 -> STR_11(9), STR_10(9), STR_9(9), STR_8(2), 
  3675 ;;		 -> STR_7(2), STR_6(13), STR_4(2), STR_3(2), 
  3676 ;;		 -> texto(10), STR_1(6), 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3688 ;;      Params:         2       0       0       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3691 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3692 ;;Total ram usage:        2 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 5
  3695 ;; This function calls:
  3696 ;;		_EUSART1_Write
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text21
  3703  001910                     __ptext21:
  3704                           	callstack 0
  3705  001910                     _EUSART1_Write_string:
  3706                           	callstack 25
  3707  001910                     
  3708                           ;eusart1.c: 143: while(*data != 0)
  3709  001910  EF9E  F00C         	goto	l2043
  3710  001914                     l2039:
  3711                           
  3712                           ;eusart1.c: 144: {;eusart1.c: 145: EUSART1_Write(*data++);
  3713  001914  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3714  001918  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3715  00191C  6AF8               	clrf	tblptru,c
  3716  00191E  0E07               	movlw	(high __ramtop+-1)
  3717  001920  64F7               	cpfsgt	tblptrh,c
  3718  001922  D003               	bra	u1337
  3719  001924  0008               	tblrd		*
  3720  001926  50F5               	movf	tablat,w,c
  3721  001928  D005               	bra	u1330
  3722  00192A                     u1337:
  3723  00192A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3724  00192E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3725  001932  50EF               	movf	indf0,w,c
  3726  001934                     u1330:
  3727  001934  EC24  F00D         	call	_EUSART1_Write
  3728  001938  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  3729  00193A  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  3730  00193C                     l2043:
  3731  00193C  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3732  001940  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3733  001944  6AF8               	clrf	tblptru,c
  3734  001946  0E07               	movlw	(high __ramtop+-1)
  3735  001948  64F7               	cpfsgt	tblptrh,c
  3736  00194A  D003               	bra	u1347
  3737  00194C  0008               	tblrd		*
  3738  00194E  50F5               	movf	tablat,w,c
  3739  001950  D005               	bra	u1340
  3740  001952                     u1347:
  3741  001952  CFF6 FFE9          	movff	tblptrl,fsr0l
  3742  001956  CFF7 FFEA          	movff	tblptrh,fsr0h
  3743  00195A  50EF               	movf	indf0,w,c
  3744  00195C                     u1340:
  3745  00195C  0900               	iorlw	0
  3746  00195E  A4D8               	btfss	status,2,c
  3747  001960  EFB4  F00C         	goto	u1351
  3748  001964  EFB6  F00C         	goto	u1350
  3749  001968                     u1351:
  3750  001968  EF8A  F00C         	goto	l2039
  3751  00196C                     u1350:
  3752  00196C  0012               	return		;funcret
  3753  00196E                     __end_of_EUSART1_Write_string:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _EUSART1_Write *****************
  3757 ;; Defined at:
  3758 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  txData          1    wreg     unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  txData          1    4[COMRAM] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3772 ;;      Params:         0       0       0       0       0       0       0       0       0
  3773 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3775 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3776 ;;Total ram usage:        1 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 4
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_EUSART1_Write_string
  3783 ;;		_putch
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text22
  3788  001A48                     __ptext22:
  3789                           	callstack 0
  3790  001A48                     _EUSART1_Write:
  3791                           	callstack 25
  3792                           
  3793                           ;incstack = 0
  3794                           ;EUSART1_Write@txData stored from wreg
  3795  001A48  6E05               	movwf	EUSART1_Write@txData^0,c
  3796  001A4A                     l67:
  3797  001A4A  A89E               	btfss	158,4,c	;volatile
  3798  001A4C  EF2A  F00D         	goto	u11
  3799  001A50  EF2C  F00D         	goto	u10
  3800  001A54                     u11:
  3801  001A54  EF25  F00D         	goto	l67
  3802  001A58                     u10:
  3803  001A58                     
  3804                           ;eusart1.c: 136: };eusart1.c: 138: TXREG1 = txData;
  3805  001A58  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3806  001A5C  0012               	return		;funcret
  3807  001A5E                     __end_of_EUSART1_Write:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _INTERRUPT_InterruptManager *****************
  3811 ;; Defined at:
  3812 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3828 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3829 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3830 ;;Total ram usage:        4 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 3
  3833 ;; This function calls:
  3834 ;;		_INT1_ISR
  3835 ;; This function is called by:
  3836 ;;		Interrupt level 2
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	intcode
  3841  000008                     __pintcode:
  3842                           	callstack 0
  3843  000008                     _INTERRUPT_InterruptManager:
  3844                           	callstack 24
  3845                           
  3846                           ;incstack = 0
  3847  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3848  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3849  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3850  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3851  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3852  00001A                     
  3853                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  3854  00001A  A6F0               	btfss	240,3,c	;volatile
  3855  00001C  EF12  F000         	goto	i2u152_41
  3856  000020  EF14  F000         	goto	i2u152_40
  3857  000024                     i2u152_41:
  3858  000024  EF67  F000         	goto	i2l247
  3859  000028                     i2u152_40:
  3860  000028  A0F0               	btfss	240,0,c	;volatile
  3861  00002A  EF19  F000         	goto	i2u153_41
  3862  00002E  EF1B  F000         	goto	i2u153_40
  3863  000032                     i2u153_41:
  3864  000032  EF67  F000         	goto	i2l247
  3865  000036                     i2u153_40:
  3866  000036                     
  3867                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: if (INT1IF == 1)
  3868  000036  A0F0               	btfss	4080,0,c	;volatile
  3869  000038  EF20  F000         	goto	i2u154_41
  3870  00003C  EF22  F000         	goto	i2u154_40
  3871  000040                     i2u154_41:
  3872  000040  EF64  F000         	goto	i2l2221
  3873  000044                     i2u154_40:
  3874  000044                     
  3875                           ;interrupt_manager.c: 65: {;interrupt_manager.c: 70: if (flag_codigo == 0)
  3876  000044  5046               	movf	_flag_codigo^0,w,c
  3877  000046  A4D8               	btfss	status,2,c
  3878  000048  EF28  F000         	goto	i2u155_41
  3879  00004C  EF2A  F000         	goto	i2u155_40
  3880  000050                     i2u155_41:
  3881  000050  EF64  F000         	goto	i2l2221
  3882  000054                     i2u155_40:
  3883  000054                     
  3884                           ;interrupt_manager.c: 71: {;interrupt_manager.c: 72: if (cuenta != 0)
  3885  000054  5042               	movf	_cuenta^0,w,c
  3886  000056  1043               	iorwf	(_cuenta+1)^0,w,c
  3887  000058  B4D8               	btfsc	status,2,c
  3888  00005A  EF31  F000         	goto	i2u156_41
  3889  00005E  EF33  F000         	goto	i2u156_40
  3890  000062                     i2u156_41:
  3891  000062  EF5B  F000         	goto	i2l244
  3892  000066                     i2u156_40:
  3893  000066                     
  3894                           ;interrupt_manager.c: 73: {;interrupt_manager.c: 74: timer_aux = TMR0;
  3895  000066  CFD6 F044          	movff	4054,_timer_aux	;volatile
  3896  00006A                     
  3897                           ;interrupt_manager.c: 75: TMR0 = 0;
  3898  00006A  0E00               	movlw	0
  3899  00006C  6ED7               	movwf	215,c	;volatile
  3900  00006E  0E00               	movlw	0
  3901  000070  6ED6               	movwf	214,c	;volatile
  3902  000072                     
  3903                           ;interrupt_manager.c: 76: tiempo[cuenta - 1] = timer_aux;
  3904  000072  0E5F               	movlw	low (_tiempo+65535)
  3905  000074  2442               	addwf	_cuenta^0,w,c
  3906  000076  6ED9               	movwf	fsr2l,c
  3907  000078  0E00               	movlw	high (_tiempo+65535)
  3908  00007A  2043               	addwfc	(_cuenta+1)^0,w,c
  3909  00007C  6EDA               	movwf	fsr2h,c
  3910  00007E  C044  FFDF         	movff	_timer_aux,indf2
  3911  000082                     
  3912                           ;interrupt_manager.c: 77: cuenta++;
  3913  000082  4A42               	infsnz	_cuenta^0,f,c
  3914  000084  2A43               	incf	(_cuenta+1)^0,f,c
  3915  000086                     
  3916                           ;interrupt_manager.c: 78: INTEDG1 = !INTEDG1;
  3917  000086  AAF1               	btfss	4081,5,c	;volatile
  3918  000088  EF48  F000         	goto	i2u157_41
  3919  00008C  EF4B  F000         	goto	i2u157_40
  3920  000090                     i2u157_41:
  3921  000090  8AF1               	bsf	4081,5,c	;volatile
  3922  000092  EF4C  F000         	goto	i2u158_45
  3923  000096                     i2u157_40:
  3924  000096  9AF1               	bcf	4081,5,c	;volatile
  3925  000098                     i2u158_45:
  3926  000098                     
  3927                           ;interrupt_manager.c: 80: if (TMR0IF == 1)
  3928  000098  A4F2               	btfss	4082,2,c	;volatile
  3929  00009A  EF51  F000         	goto	i2u159_41
  3930  00009E  EF53  F000         	goto	i2u159_40
  3931  0000A2                     i2u159_41:
  3932  0000A2  EF64  F000         	goto	i2l243
  3933  0000A6                     i2u159_40:
  3934  0000A6                     
  3935                           ;interrupt_manager.c: 81: {;interrupt_manager.c: 82: cuenta--;
  3936  0000A6  0642               	decf	_cuenta^0,f,c
  3937  0000A8  A0D8               	btfss	status,0,c
  3938  0000AA  0643               	decf	(_cuenta+1)^0,f,c
  3939  0000AC                     
  3940                           ;interrupt_manager.c: 83: flag_codigo = 1;
  3941  0000AC  0E01               	movlw	1
  3942  0000AE  6E46               	movwf	_flag_codigo^0,c
  3943  0000B0                     
  3944                           ;interrupt_manager.c: 84: INT1IE = 0;
  3945  0000B0  96F0               	bcf	4080,3,c	;volatile
  3946  0000B2  EF64  F000         	goto	i2l2221
  3947  0000B6                     i2l244:
  3948                           
  3949                           ;interrupt_manager.c: 87: else;interrupt_manager.c: 88: {;interrupt_manager.c: 89: TMR0I
      +                          F = 0;
  3950  0000B6  94F2               	bcf	4082,2,c	;volatile
  3951  0000B8                     
  3952                           ;interrupt_manager.c: 90: TMR0 = 0;
  3953  0000B8  0E00               	movlw	0
  3954  0000BA  6ED7               	movwf	215,c	;volatile
  3955  0000BC  0E00               	movlw	0
  3956  0000BE  6ED6               	movwf	214,c	;volatile
  3957  0000C0                     
  3958                           ;interrupt_manager.c: 91: cuenta++;
  3959  0000C0  4A42               	infsnz	_cuenta^0,f,c
  3960  0000C2  2A43               	incf	(_cuenta+1)^0,f,c
  3961  0000C4  EF64  F000         	goto	i2l2221
  3962  0000C8                     i2l243:
  3963  0000C8                     i2l2221:
  3964                           
  3965                           ;interrupt_manager.c: 92: };interrupt_manager.c: 93: };interrupt_manager.c: 94: };interr
      +                          upt_manager.c: 95: INT1IF = 0;
  3966  0000C8  90F0               	bcf	4080,0,c	;volatile
  3967  0000CA                     
  3968                           ;interrupt_manager.c: 97: INT1_ISR();
  3969  0000CA  EC60  F00D         	call	_INT1_ISR	;wreg free
  3970  0000CE                     i2l247:
  3971  0000CE  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3972  0000D2  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3973  0000D6  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3974  0000DA  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3975  0000DE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3976  0000E0  0011               	retfie		f
  3977  0000E2                     __end_of_INTERRUPT_InterruptManager:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _INT1_ISR *****************
  3981 ;; Defined at:
  3982 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3999 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4000 ;;Total ram usage:        0 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 2
  4003 ;; This function calls:
  4004 ;;		_INT1_CallBack
  4005 ;; This function is called by:
  4006 ;;		_INTERRUPT_InterruptManager
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text24
  4011  001AC0                     __ptext24:
  4012                           	callstack 0
  4013  001AC0                     _INT1_ISR:
  4014                           	callstack 24
  4015  001AC0                     
  4016                           ;ext_int.c: 34: (INTCON3bits.INT1IF = 0);
  4017  001AC0  90F0               	bcf	240,0,c	;volatile
  4018  001AC2                     
  4019                           ;ext_int.c: 37: INT1_CallBack();
  4020  001AC2  ECED  F00C         	call	_INT1_CallBack	;wreg free
  4021  001AC6  0012               	return		;funcret
  4022  001AC8                     __end_of_INT1_ISR:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function _INT1_CallBack *****************
  4026 ;; Defined at:
  4027 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 1
  4048 ;; This function calls:
  4049 ;;		Absolute function
  4050 ;;		_INT1_DefaultInterruptHandler
  4051 ;; This function is called by:
  4052 ;;		_INT1_ISR
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text25
  4057  0019DA                     __ptext25:
  4058                           	callstack 0
  4059  0019DA                     _INT1_CallBack:
  4060                           	callstack 24
  4061  0019DA                     
  4062                           ;ext_int.c: 44: if(INT1_InterruptHandler)
  4063  0019DA  5052               	movf	_INT1_InterruptHandler^0,w,c
  4064  0019DC  1053               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  4065  0019DE  B4D8               	btfsc	status,2,c
  4066  0019E0  EFF4  F00C         	goto	i2u89_41
  4067  0019E4  EFF6  F00C         	goto	i2u89_40
  4068  0019E8                     i2u89_41:
  4069  0019E8  EF03  F00D         	goto	i2l262
  4070  0019EC                     i2u89_40:
  4071  0019EC                     
  4072                           ;ext_int.c: 45: {;ext_int.c: 46: INT1_InterruptHandler();
  4073  0019EC  D802               	call	i2u90_48
  4074  0019EE  EF03  F00D         	goto	i2u90_49
  4075  0019F2                     i2u90_48:
  4076  0019F2  0005               	push	
  4077  0019F4  6EFA               	movwf	pclath,c
  4078  0019F6  5052               	movf	_INT1_InterruptHandler^0,w,c
  4079  0019F8  6EFD               	movwf	tosl,c
  4080  0019FA  5053               	movf	(_INT1_InterruptHandler+1)^0,w,c
  4081  0019FC  6EFE               	movwf	tosh,c
  4082  0019FE  50F8               	movf	tblptru,w,c
  4083  001A00  6EFF               	movwf	tosu,c
  4084  001A02  50FA               	movf	pclath,w,c
  4085  001A04  0012               	return		;indir
  4086  001A06                     i2u90_49:
  4087  001A06                     i2l262:
  4088  001A06  0012               	return		;funcret
  4089  001A08                     __end_of_INT1_CallBack:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _INT1_DefaultInterruptHandler *****************
  4093 ;; Defined at:
  4094 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		None
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         0       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_EXT_INT_Initialize
  4118 ;;		_INT1_CallBack
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text26
  4123  001ACC                     __ptext26:
  4124                           	callstack 0
  4125  001ACC                     _INT1_DefaultInterruptHandler:
  4126                           	callstack 24
  4127  001ACC  0012               	return		;funcret
  4128  001ACE                     __end_of_INT1_DefaultInterruptHandler:
  4129                           	callstack 0
  4130                           
  4131                           	psect	text27
  4132  000000                     __ptext27:
  4133                           	callstack 0
  4134  000000                     
  4135                           	psect	rparam
  4136  0000                     
  4137                           	psect	temp
  4138  00005B                     btemp:
  4139                           	callstack 0
  4140  00005B                     	ds	1
  4141  0000                     int$flags	set	btemp
  4142  0000                     wtemp8	set	btemp+1
  4143  0000                     ttemp5	set	btemp+1
  4144  0000                     ttemp6	set	btemp+4
  4145  0000                     ttemp7	set	btemp+8
  4146                           
  4147                           	psect	idloc
  4148                           
  4149                           ;Config register IDLOC0 @ 0x200000
  4150                           ;	unspecified, using default values
  4151  200000                     	org	2097152
  4152  200000  FF                 	db	255
  4153                           
  4154                           ;Config register IDLOC1 @ 0x200001
  4155                           ;	unspecified, using default values
  4156  200001                     	org	2097153
  4157  200001  FF                 	db	255
  4158                           
  4159                           ;Config register IDLOC2 @ 0x200002
  4160                           ;	unspecified, using default values
  4161  200002                     	org	2097154
  4162  200002  FF                 	db	255
  4163                           
  4164                           ;Config register IDLOC3 @ 0x200003
  4165                           ;	unspecified, using default values
  4166  200003                     	org	2097155
  4167  200003  FF                 	db	255
  4168                           
  4169                           ;Config register IDLOC4 @ 0x200004
  4170                           ;	unspecified, using default values
  4171  200004                     	org	2097156
  4172  200004  FF                 	db	255
  4173                           
  4174                           ;Config register IDLOC5 @ 0x200005
  4175                           ;	unspecified, using default values
  4176  200005                     	org	2097157
  4177  200005  FF                 	db	255
  4178                           
  4179                           ;Config register IDLOC6 @ 0x200006
  4180                           ;	unspecified, using default values
  4181  200006                     	org	2097158
  4182  200006  FF                 	db	255
  4183                           
  4184                           ;Config register IDLOC7 @ 0x200007
  4185                           ;	unspecified, using default values
  4186  200007                     	org	2097159
  4187  200007  FF                 	db	255
  4188                           
  4189                           	psect	config
  4190                           
  4191                           ;Config register CONFIG1L @ 0x300000
  4192                           ;	PLL Selection
  4193                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4194                           ;	PLL Enable Configuration bit
  4195                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  4196                           ;	CPU System Clock Postscaler
  4197                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4198                           ;	Low Speed USB mode with 48 MHz system clock
  4199                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4200  300000                     	org	3145728
  4201  300000  21                 	db	33
  4202                           
  4203                           ;Config register CONFIG1H @ 0x300001
  4204                           ;	Oscillator Selection
  4205                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  4206                           ;	Primary Oscillator Shutdown
  4207                           ;	PCLKEN = ON, Primary oscillator enabled
  4208                           ;	Fail-Safe Clock Monitor
  4209                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4210                           ;	Internal/External Oscillator Switchover
  4211                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4212  300001                     	org	3145729
  4213  300001  23                 	db	35
  4214                           
  4215                           ;Config register CONFIG2L @ 0x300002
  4216                           ;	Power-up Timer Enable
  4217                           ;	nPWRTEN = ON, Power up timer enabled
  4218                           ;	Brown-out Reset Enable
  4219                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4220                           ;	Brown-out Reset Voltage
  4221                           ;	BORV = 190, BOR set to 1.9V nominal
  4222                           ;	Low-Power Brown-out Reset
  4223                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4224  300002                     	org	3145730
  4225  300002  5E                 	db	94
  4226                           
  4227                           ;Config register CONFIG2H @ 0x300003
  4228                           ;	Watchdog Timer Enable bits
  4229                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4230                           ;	Watchdog Timer Postscaler
  4231                           ;	WDTPS = 32768, 1:32768
  4232  300003                     	org	3145731
  4233  300003  3C                 	db	60
  4234                           
  4235                           ; Padding undefined space
  4236  300004                     	org	3145732
  4237  300004  FF                 	db	255
  4238                           
  4239                           ;Config register CONFIG3H @ 0x300005
  4240                           ;	CCP2 MUX bit
  4241                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4242                           ;	PORTB A/D Enable bit
  4243                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4244                           ;	Timer3 Clock Input MUX bit
  4245                           ;	T3CMX = RC0, T3CKI function is on RC0
  4246                           ;	SDO Output MUX bit
  4247                           ;	SDOMX = RB3, SDO function is on RB3
  4248                           ;	Master Clear Reset Pin Enable
  4249                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4250  300005                     	org	3145733
  4251  300005  D1                 	db	209
  4252                           
  4253                           ;Config register CONFIG4L @ 0x300006
  4254                           ;	Stack Full/Underflow Reset
  4255                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4256                           ;	Single-Supply ICSP Enable bit
  4257                           ;	LVP = OFF, Single-Supply ICSP disabled
  4258                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4259                           ;	ICPRT = OFF, ICPORT disabled
  4260                           ;	Extended Instruction Set Enable bit
  4261                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4262                           ;	Background Debugger Enable bit
  4263                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4264  300006                     	org	3145734
  4265  300006  81                 	db	129
  4266                           
  4267                           ; Padding undefined space
  4268  300007                     	org	3145735
  4269  300007  FF                 	db	255
  4270                           
  4271                           ;Config register CONFIG5L @ 0x300008
  4272                           ;	Block 0 Code Protect
  4273                           ;	CP0 = OFF, Block 0 is not code-protected
  4274                           ;	Block 1 Code Protect
  4275                           ;	CP1 = OFF, Block 1 is not code-protected
  4276                           ;	Block 2 Code Protect
  4277                           ;	CP2 = OFF, Block 2 is not code-protected
  4278                           ;	Block 3 Code Protect
  4279                           ;	CP3 = OFF, Block 3 is not code-protected
  4280  300008                     	org	3145736
  4281  300008  0F                 	db	15
  4282                           
  4283                           ;Config register CONFIG5H @ 0x300009
  4284                           ;	Boot Block Code Protect
  4285                           ;	CPB = OFF, Boot block is not code-protected
  4286                           ;	Data EEPROM Code Protect
  4287                           ;	CPD = OFF, Data EEPROM is not code-protected
  4288  300009                     	org	3145737
  4289  300009  C0                 	db	192
  4290                           
  4291                           ;Config register CONFIG6L @ 0x30000A
  4292                           ;	Block 0 Write Protect
  4293                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4294                           ;	Block 1 Write Protect
  4295                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4296                           ;	Block 2 Write Protect
  4297                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4298                           ;	Block 3 Write Protect
  4299                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4300  30000A                     	org	3145738
  4301  30000A  0F                 	db	15
  4302                           
  4303                           ;Config register CONFIG6H @ 0x30000B
  4304                           ;	Configuration Registers Write Protect
  4305                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4306                           ;	Boot Block Write Protect
  4307                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4308                           ;	Data EEPROM Write Protect
  4309                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4310  30000B                     	org	3145739
  4311  30000B  E0                 	db	224
  4312                           
  4313                           ;Config register CONFIG7L @ 0x30000C
  4314                           ;	Block 0 Table Read Protect
  4315                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4316                           ;	Block 1 Table Read Protect
  4317                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4318                           ;	Block 2 Table Read Protect
  4319                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4320                           ;	Block 3 Table Read Protect
  4321                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4322  30000C                     	org	3145740
  4323  30000C  0F                 	db	15
  4324                           
  4325                           ;Config register CONFIG7H @ 0x30000D
  4326                           ;	Boot Block Table Read Protect
  4327                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4328  30000D                     	org	3145741
  4329  30000D  40                 	db	64
  4330                           tosu	equ	0xFFF
  4331                           tosh	equ	0xFFE
  4332                           tosl	equ	0xFFD
  4333                           stkptr	equ	0xFFC
  4334                           pclatu	equ	0xFFB
  4335                           pclath	equ	0xFFA
  4336                           pcl	equ	0xFF9
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           prodh	equ	0xFF4
  4342                           prodl	equ	0xFF3
  4343                           indf0	equ	0xFEF
  4344                           postinc0	equ	0xFEE
  4345                           postdec0	equ	0xFED
  4346                           preinc0	equ	0xFEC
  4347                           plusw0	equ	0xFEB
  4348                           fsr0h	equ	0xFEA
  4349                           fsr0l	equ	0xFE9
  4350                           wreg	equ	0xFE8
  4351                           indf1	equ	0xFE7
  4352                           postinc1	equ	0xFE6
  4353                           postdec1	equ	0xFE5
  4354                           preinc1	equ	0xFE4
  4355                           plusw1	equ	0xFE3
  4356                           fsr1h	equ	0xFE2
  4357                           fsr1l	equ	0xFE1
  4358                           bsr	equ	0xFE0
  4359                           indf2	equ	0xFDF
  4360                           postinc2	equ	0xFDE
  4361                           postdec2	equ	0xFDD
  4362                           preinc2	equ	0xFDC
  4363                           plusw2	equ	0xFDB
  4364                           fsr2h	equ	0xFDA
  4365                           fsr2l	equ	0xFD9
  4366                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    72
    Data        0
    BSS         90
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      90
    BANK0           160      0      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[13]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> texto(COMRAM[10]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_normaliza
    _sprintf->___llmod
    ___llmod->___lldiv
    _normaliza->___flge
    ___flmul->___xxtofl
    ___flge->___flmul
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Hash_algoritmo->___lmul
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6612
                                             59 COMRAM     2     2      0
               _EUSART1_Write_string
                     _Hash_algoritmo
                  _SYSTEM_Initialize
                          _normaliza
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    22      8    1900
                                             26 COMRAM    21    13      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _normaliza                                            4     4      0    3008
                                             55 COMRAM     4     4      0
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Hash_algoritmo                                      14    10      4     416
                                             16 COMRAM    14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     896
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _Hash_algoritmo
     ___lmul
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _normaliza
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5A       1       95.7%
BITBIGSFRlllllh     27      0       0      32        0.0%
BITBIGSFRhhlh       18      0       0      21        0.0%
BITBIGSFRhll        17      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      33        0.0%
BITBIGSFRllllhh      6      0       0      29        0.0%
BITBIGSFRllllhl      6      0       0      30        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      31        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRhlh         1      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0      34        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 20 20:34:05 2023

                                            l43 19AA                                              l70 1A5C  
                                            l67 1A4A                                              l76 196C  
                                            l94 1AB4                                              l97 1AAA  
                                            u10 1A58                                              u11 1A54  
                               _timer0ReloadVal 005A                                             l100 1ABE  
                                           l140 1A96                                             l137 1A46  
                                           l410 190E                                             l330 1768  
                                           l331 1778                                             l236 1ACA  
                                           l325 15CE                                             l271 1A84  
                                           l167 19D8                                             l432 181C  
                                           l409 18FE                                             l265 1AA0  
                                           l185 1A70                                             l425 180C  
                                           l366 0D44                                             l369 0DCC  
                                           l395 106C                                             l660 16D2  
                                           l813 18A4                                             l806 1894  
                                           l659 168C                                             u910 18C4  
                                           u911 18C0                                             u920 18FE  
                                           u921 18FA                                             u930 17A0  
                                           u931 179C                                             u940 17C2  
                                           u941 17BE                                             u950 17EA  
                                           u951 17E6                                             u960 08AE  
                                           u961 08AA                                             u970 08C0  
                                           u971 08BC                                             u980 08D0  
                                           u981 08CC                                             u990 0910  
                                           u991 090C                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 0024                                    ___flmul@bexp 0025  
                                  ___flmul@sign 001F                                    ___flmul@temp 002A  
                                  ___flmul@prod 0026                                   _INT1_CallBack 19DA  
                                          l1000 0958                                            l1010 0BB4  
                                          l1004 0CBC                                            l1007 0B4E  
                                          l1017 0C7E                                            l1009 0BC6  
                                          l1041 12DA                                            l2011 135C  
                                          l2003 1314                                            l1044 1436  
                                          l2021 13DC                                            l2013 1368  
                                          l2005 131C                                            l2101 0D04  
                                          l2031 1424                                            l2023 13DE  
                                          l1055 13CE                                            l2015 13A4  
                                          l2007 1328                                            l2111 0D9E  
                                          l2103 0D52                                            l1048 1372  
                                          l2041 1938                                            l2033 1426  
                                          l2025 13E2                                            l2017 13B0  
                                          l2009 135A                                            l2121 0DF2  
                                          l2113 0DA6                                            l2105 0D60  
                                          l2043 193C                                            l2051 1A3A  
                                          l2027 1406                                            l2019 13BE  
                                          l2123 0DFE                                            l2115 0DB4  
                                          l2107 0D78                                            l1173 1A4A  
                                          l2037 1910                                            l1181 19D6  
                                          l2053 1A3E                                            l2045 1A2E  
                                          l2029 1416                                            l2061 1438  
                                          l2141 0E7C                                            l2133 0E2A  
                                          l2125 0E1A                                            l2117 0DB8  
                                          l2109 0D84                                            l1175 1A58  
                                          l2039 1914                                            l1183 1A86  
                                          l1191 1A5E                                            l2055 1A42  
                                          l2047 1A32                                            l2071 1594  
                                          l2063 1440                                            l2151 0EBA  
                                          l2127 0E26                                            l2119 0DDA  
                                          l2231 107C                                            l2081 1732  
                                          l1177 1AC8                                            l1193 1A6A  
                                          l2049 1A36                                            l2073 15A4  
                                          l2065 14D6                                            l2161 0F00  
                                          l2153 0EBC                                            l2137 0E64  
                                          l2241 1096                                            l2233 107E  
                                          l2225 106E                                            l2083 1734  
                                          l1179 19AC                                            l2067 14EA  
                                          l2075 15A6                                            l2171 0FE6  
                                          l2163 0F0C                                            l2147 0E80  
                                          l2139 0E66                                            l2091 0CE8  
                                          l2251 10EA                                            l2243 10AA  
                                          l2235 1080                                            l2227 1072  
                                          l2077 16D4                                            l2069 1580  
                                          l2181 1024                                            l2165 0F10  
                                          l2157 0ED2                                            l2093 0CF0  
                                          l2085 0CBE                                            l2261 113E  
                                          l2253 10F6                                            l2245 10B6  
                                          l2237 1082                                            l2229 1078  
                                          l2079 16EC                                            l2175 0FFC  
                                          l2167 0F1A                                            l2159 0EEA  
                                          l2095 0CF8                                            l2087 0CCA  
                                          l2183 103E                                            l2271 11B4  
                                          l2263 114A                                            l2255 111A  
                                          l2247 10D2                                            l2239 1092  
                                          l1801 177A                                            l2169 0F94  
                                          l2177 1014                                            l2185 1060  
                                          l2097 0CFE                                            l2089 0CDC  
                                          l2273 11C6                                            l2281 1218  
                                          l2265 116E                                            l2257 1126  
                                          l2249 10DE                                            l1811 17C2  
                                          l1803 178A                                            l2179 1020  
                                          l2291 124E                                            l2283 1228  
                                          l2275 11D6                                            l2267 1180  
                                          l2259 1132                                            l1901 0B08  
                                          l1821 1806                                            l1813 17CC  
                                          l1805 17A0                                            l2293 1250  
                                          l2285 1240                                            l2277 11FA  
                                          l2269 1190                                            l1911 0B5E  
                                          l1903 0B16                                            l1831 08C0  
                                          l1823 0894                                            l1815 17EA  
                                          l1807 17A8                                            l2287 1244  
                                          l2279 120C                                            l2295 1252  
                                          l1913 0B6C                                            l1905 0B34  
                                          l1841 08FC                                            l1833 08D0  
                                          l1825 08A0                                            l1817 17FA  
                                          l1809 17B4                                            l2297 126A  
                                          l2289 124C                                            l1763 1AAC  
                                          l1771 196E                                            l1923 0BD6  
                                          l1931 0C1E                                            l1915 0B70  
                                          l1907 0B3E                                            l1851 0932  
                                          l1843 0902                                            l1835 08E0  
                                          l1827 08AE                                            l1819 17FC  
                                          l1765 1AA2                                            l1773 1982  
                                          l1781 1A72                                            l1941 0C92  
                                          l1933 0C38                                            l1925 0BE2  
                                          l1917 0B7E                                            l1909 0B4C  
                                          l1853 0942                                            l1845 0910  
                                          l1837 08E6                                            l1829 08B0  
                                          l1791 18A6                                            l1767 1AB6  
                                          l1775 198E                                            l1783 1A76  
                                          l1943 0CA0                                            l1935 0C4C  
                                          l1927 0BF0                                            l1919 0BAC  
                                          l1871 09C4                                            l1863 098C  
                                          l1855 0948                                            l1847 0912  
                                          l1839 08F6                                            l1793 18B6  
                                          l1777 199A                                            l1769 1A98  
                                          l1785 1A82                                            l1961 164C  
                                          l1953 15D0                                            l1945 0CA2  
                                          l1937 0C66                                            l1929 0C1A  
                                          l1881 0A0E                                            l1873 09DC  
                                          l1865 0998                                            l1857 0968  
                                          l1849 0922                                            l1795 18C4  
                                          l1779 19A6                                            l1971 16D0  
                                          l1963 165A                                            l1955 15FE  
                                          l1939 0C82                                            l1947 0CA8  
                                          l1891 0A64                                            l1883 0A1E  
                                          l1875 09E8                                            l1867 09A2  
                                          l1859 0978                                            l1797 18D4  
                                          l1965 166C                                            l1957 160E  
                                          l1949 0CAC                                            l1893 0A80  
                                          l1885 0A2A                                            l1877 09F4  
                                          l1869 09B8                                            l1981 1848  
                                          l1799 18DE                                            l1967 167A  
                                          l1959 163C                                            l1895 0A8C  
                                          l1887 0A3A                                            l1879 0A02  
                                          l1991 1286                                            l1983 1856  
                                          l1975 181E                                            l1969 16CA  
                                          l1897 0AA8                                            l1889 0A54  
                                          l1993 1296                                            l1985 1874  
                                          l1977 1834                                            l1899 0AD2  
                                          l1995 12A4                                            l1987 1884  
                                          l1979 183C                                            l1997 12EA  
                                          l1989 188E                                            l1999 1300  
                                          STR_1 0882                                            STR_2 088C  
                                          STR_3 0891                                            STR_4 088F  
                                          STR_5 0888                                            STR_6 085A  
                                          STR_7 0891                                            STR_8 088F  
                                          STR_9 0867                                            u1000 0922  
                                          u1001 091E                                            u1010 0932  
                                          u1011 092E                                            u1100 0BD6  
                                          u1020 0968                                            u1101 0BD2  
                                          u1021 0964                                            u1110 0BF0  
                                          u1030 0978                                            u1111 0BEC  
                                          u1031 0974                                            u1120 0C38  
                                          u1040 0AF2                                            u1200 1834  
                                          u1121 0C34                                            u1201 1830  
                                          u1130 0C66                                            u1050 0B4C  
                                          u1210 1856                                            u1131 0C62  
                                          u1051 0B48                                            u1211 1852  
                                          u1140 0CA0                                            u1060 0B6C  
                                          u1300 13DC                                            u1220 1874  
                                          u1141 0C9C                                            u1061 0B68  
                                          u1045 0AE8                                            u1301 13D8  
                                          u1221 1870                                            u1150 15FE  
                                          u1070 0B7E                                            u1310 1416  
                                          u1230 1296                                            u1151 15FA  
                                          u1071 0B7A                                            u1311 1412  
                                          u1231 1292                                            u1160 163C  
                                          u1080 0BAC                                            u1320 1424  
                                          u1240 12A4                                            u1400 0CDC  
                                          u1161 1638                                            u1081 0BA8  
                                          u1321 1420                                            u1241 12A0  
                                          u1401 0CD8                                            u1330 1934  
                                          u1170 165A                                            u1090 0BC2  
                                          u1250 1300                                            u1410 0D52  
                                          u1171 1656                                            u1091 0BBE  
                                          u1251 12FC                                            u1411 0D4E  
                                          u1340 195C                                            u1180 167A  
                                          u1260 1356                                            u1500 103E  
                                          u1420 0D60                                            u1181 1676  
                                          u1261 1352                                            u1501 103A  
                                          u1421 0D5C                                            _LATA 000F89  
                                          u1350 196C                                            u1190 16CA  
                                          u1270 13A0                                            u1510 1060  
                                          u1430 0DB4                                            _LATB 000F8A  
                                          u1351 1968                                            u1191 16C6  
                                          u1271 139C                                            u1511 105C  
                                          u1431 0DB0                                            _LATC 000F8B  
                                          u1280 13BE                                            u1360 14D6  
                                          u1440 0DDA                                            u1600 1092  
                                          u1337 192A                                            u1281 13BA  
                                          u1361 14D2                                            u1441 0DD6  
                                          u1601 108E                                            u1290 13CE  
                                          u1370 1580                                            u1450 0E60  
                                          u1610 116E                                            u1347 1952  
                                          u1291 13CA                                            u1371 157C  
                                          u1451 0E5C                                            u1611 116A  
                                          u1380 15CE                                            u1460 0E78  
                                          u1700 127A                                            u1620 117E  
                                          u1381 15CA                                            u1461 0E74  
                                          u1701 1274                                            u1621 1178  
                                          u1390 1768                                            u1470 0EB6  
                                          u1391 1764                                            u1471 0EB2  
                                          u1480 0ECE                                            u1640 11B4  
                                          u1481 0ECA                                            u1641 11B0  
                                          u1490 0F00                                            u1650 11C4  
                                          u1491 0EFC                                            u1715 127C  
                                          u1651 11BE                                            u1635 1180  
                                          u1670 11FA                                            u1727 1232  
                                          u1671 11F6                                            u1680 120A  
                                          u1737 125C                                            u1681 1204  
                                          u1665 11C6                                            u1695 120C  
                                          _TMR0 000FD6                                            _WPUB 000F85  
                                 _EUSART1_Write 1A48                                            _cont 0045  
                                          _main 106E                                            fsr0h 000FEA  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr2l 000FD9                                            btemp 005B  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00E2                                    ___param_bank 000000  
                       __end_of_TMR0_Initialize 1A72                                __end_of_INT1_ISR 1AC8  
                 __end_of_OSCILLATOR_Initialize 1A98                                           ?_main 0001  
                                         STR_10 0870                                           STR_11 0879  
                                         STR_12 0849                                 __end_of___flmul 0CBE  
                               __end_of___lldiv 181E                                           _T0CON 000FD5  
                  __end_of_EUSART1_Write_string 196E                                 __end_of___llmod 18A6  
                                         _LATA3 007C4B                                           _LATA4 007C4C  
                                         _LATA5 007C4D                                           _LATB7 007C57  
                                         _INT1E 007F83                                           i2l243 00C8  
                                         i2l244 00B6                                           i2l262 1A06  
                                         i2l247 00CE                                           i2l258 1AC6  
                                         i2l268 1ACC                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                           ___lmul@multiplicand 0009                                  ?_INT1_CallBack 0001  
                               __end_of_dpowers 0829                  ??_INT1_DefaultInterruptHandler 0001  
                                         _texto 0048                        _INT1_SetInterruptHandler 1A98  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                 __end_of_sprintf 106E  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 1A08  
                    __end_of_EUSART1_Initialize 19AC                                    __end_of_main 1284  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 003C  
                                 __activetblptr 000002                                ___llmod@dividend 0012  
                                        _ACTCON 000FB5                                          _ANSELA 000F5B  
                                        _ANSELB 000F5C                                          _ANSELC 000F5D  
                                        _INT1IE 007F83                                          _INT1IF 007F80  
                                        i2l2201 006A                                          i2l2211 00A6  
                                        i2l2203 0072                                          i2l2213 00AC  
                                        i2l2205 0082                                          i2l2221 00C8  
                                        i2l2223 00CA                                          i2l2215 00B0  
                                        i2l2207 0086                                          i2l2057 1AC0  
                                        i2l2217 00B8                                          i2l2209 0098  
                                        i2l2059 1AC2                                          i2l2219 00C0  
                                        i2l2191 0028                                          i2l2193 0036  
                                        i2l2195 0044                                          i2l2197 0054  
                                        i2l2189 001A                                          i2l2199 0066  
                                        i2l1787 19DA                                          i2l1789 19EC  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TMR0IF 007F92                                          _TXREG1 000FAD  
                              __end_of___xxtofl 1438                                          _TXSTA1 000FAC  
                                        ___flge 15D0                                          ___lmul 18A6  
                                     ??___flmul 001B                                       ??___lldiv 000D  
                                     ??___llmod 001A                                          _cuenta 0042  
                      ?_EUSART1_SetErrorHandler 0005                                ?_TMR0_Initialize 0001  
                                        clear_0 1A0E                                          clear_1 1A1A  
                                        isa$std 000001                                          _tiempo 0060  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                               ??_INT1_CallBack 0001                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_EUSART1_Write 0005  
      INT1_SetInterruptHandler@InterruptHandler 0005                                       ??_sprintf 0023  
                                    ___flge@ff1 002C                                      ___flge@ff2 0030  
                                  ___xxtofl@arg 000F                                    ___xxtofl@exp 000E  
                             _SYSTEM_Initialize 1A2E                                    ___xxtofl@val 0005  
                                    __accesstop 0060                         __end_of__initialization 1A20  
                                     ?_INT1_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                            _EUSART1_Write_string 1910  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0007  
                     __end_of_SYSTEM_Initialize 1A48                                      __pbssBANK0 0060  
                                    ??_INT1_ISR 0001                                      __pnvCOMRAM 0052  
                         ?_EUSART1_Write_string 0006                 __end_of_EUSART1_SetErrorHandler 1AC0  
                                       ?___flge 002C                                         ?___lmul 0005  
                                ___lmul@product 000D          __end_of_EUSART1_SetFramingErrorHandler 1AB6  
                _EUSART1_SetFramingErrorHandler 1AAC                      ??_INT1_SetInterruptHandler 0007  
                                       _INTEDG1 007F8D                                       ?___xxtofl 0005  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       i2u90_48 19F2                                         i2u90_49 1A06  
                                       _SPBRGH1 000FB0                                         i2u89_40 19EC  
                                       i2u89_41 19E8                                  _Hash_algoritmo 16D4  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___flmul 0894                                         ___lldiv 177A  
                                       ___llmod 181E                                    __psmallconst 0800  
                                       __pcinit 1A08                                         __ramtop 0800  
                                       __ptext0 106E                                         __ptext1 0CBE  
                                       __ptext2 181E                                         __ptext3 177A  
                                       __ptext4 1438                                         __ptext5 1284  
                                       __ptext6 0894                                         __ptext7 15D0  
                                       __ptext8 1A2E                                         __ptext9 1A5E  
                                     _T0CONbits 000FD5                               __end_of_hexpowers 0849  
                                       _dpowers 0801                           _OSCILLATOR_Initialize 1A86  
                                    ??___xxtofl 0009                          __end_of_Hash_algoritmo 177A  
                            _EUSART1_Initialize 196E                        ??_PIN_MANAGER_Initialize 0005  
                      EUSART1_Write_string@data 0006                                         _sprintf 0CBE  
                          end_of_initialization 1A20                             ?_EUSART1_Initialize 0001  
                        ??_EUSART1_Write_string 0008                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0056                               __end_of_normaliza 15D0  
                               ___lldiv@divisor 0009                                 ___lldiv@counter 0011  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                            ??_EUSART1_Initialize 0007  
                         _INT1_InterruptHandler 0052                                   ___xxtofl@sign 000D  
                               ?_Hash_algoritmo 0011                                       _TRISBbits 000F93  
                           EUSART1_Write@txData 0005                                     ___flmul@grs 0020  
                  __end_of_INTERRUPT_Initialize 1ACC                                  __end_of___flge 16D4  
                                __end_of___lmul 1910                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 1A08                           __end_of_INT1_CallBack 1A08  
                         __end_of_EUSART1_Write 1A5E                                 ___llmod@divisor 0016  
                               ___llmod@counter 001A                                        ??___flge 0034  
                                      ??___lmul 000D                      __end_of_EXT_INT_Initialize 1A86  
                                     ___flmul@a 0017                                       ___flmul@b 0013  
                                   __pbssCOMRAM 003E                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                     sprintf@flag 002E  
                                   sprintf@prec 0026                          _PIN_MANAGER_Initialize 19AC  
                                     __pintcode 0008                                        ?___flmul 0013  
                                     _codigo_ir 003E                                        ?___lldiv 0005  
                                      ?___llmod 0012                         Hash_algoritmo@hash_acum 001B  
                  ??_INTERRUPT_InterruptManager 0001                                     __smallconst 0800  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                   _flag_codigo 0046                            _EUSART1_ErrorHandler 0054  
                       _EUSART1_SetErrorHandler 1AB6                                       _hexpowers 0829  
                                      ?_sprintf 001B                            _INTERRUPT_Initialize 1AC8  
                             ??_TMR0_Initialize 0005                                        _INT1_ISR 1AC0  
       EUSART1_SetErrorHandler@interruptHandler 0005                       ?_INT1_SetInterruptHandler 0005  
                                      i2u152_40 0028                                        i2u152_41 0024  
                                      i2u153_40 0036                                        i2u153_41 0032  
                                      i2u154_40 0044                                        i2u154_41 0040  
                                      i2u155_40 0054                                        i2u155_41 0050  
                                      i2u156_40 0066                                        i2u156_41 0062  
                                      i2u157_40 0096                                        i2u157_41 0090  
                                      i2u158_45 0098                                        i2u159_40 00A6  
                                      i2u159_41 00A2                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                       _normaliza 1438  
                                     _timer_aux 0044                                ??_Hash_algoritmo 0015  
                             ___lmul@multiplier 0005                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                           ?_INTERRUPT_Initialize 0001  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                    ?_normaliza 0001                         ??_OSCILLATOR_Initialize 0005  
                     ??_EUSART1_SetErrorHandler 0007                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@idx 0025                                      sprintf@val 002A  
                                      ___xxtofl 1284                                        __ptext10 19AC  
                                      __ptext11 1A86                                        __ptext20 18A6  
                                      __ptext12 1AC8                                        __ptext21 1910  
                                      __ptext13 1A72                                        __ptext22 1A48  
                                      __ptext14 1A98                                        __ptext15 196E  
                                      __ptext24 1AC0                                        __ptext16 1AA2  
                                      __ptext25 19DA                                        __ptext17 1AAC  
                                      __ptext26 1ACC                                        __ptext18 1AB6  
                                      __ptext27 0000                                        __ptext19 16D4  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                      int$flags 005B              __end_of_INTERRUPT_InterruptManager 00E2  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 0058  
          __end_of_INT1_DefaultInterruptHandler 1ACE                    _INT1_DefaultInterruptHandler 1ACC  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0005  
                            _EXT_INT_Initialize 1A72                                        intlevel2 0000  
                                     sprintf@ap 0028                                       sprintf@sp 001B  
                              ___lldiv@dividend 0005                         ?_PIN_MANAGER_Initialize 0001  
                           ?_EXT_INT_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1AAC  
                _EUSART1_SetOverrunErrorHandler 1AA2                                      _RCSTA1bits 000FAB  
                                   ??_normaliza 0038  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                            _eusart1RxLastError 0047                            ??_EXT_INT_Initialize 0007  
                                      sprintf@c 002F                                        sprintf@f 001D  
               fp__INT1_DefaultInterruptHandler 0000                   ?_INT1_DefaultInterruptHandler 0001  
                              ___lldiv@quotient 000D                                 _TMR0_Initialize 1A5E  
              __end_of_INT1_SetInterruptHandler 1AA2                  __end_of_PIN_MANAGER_Initialize 19DA  
