

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Sep 21 13:26:23 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81   000000                     
    82                           ; Generated 21/07/2023 GMT
    83                           ; 
    84                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F25K50 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   000000                     
   117 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   118   000000                     
   119 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   120   000000                     
   121 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   122   000000                     
   123                           	psect	idataBANK1
   124   0036EE                     __pidataBANK1:
   125                           	callstack 0
   126                           
   127                           ;initializer for _offset
   128                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;;main.c: 85: double re
      +                          lacion = 0.100;;main.c: 86: double I = 0.0;;main.c: 87: double I_max = 0.0;;main.c: 88: 
      +                          double I_min = 0.0;;main.c: 89: double I_rms = 0.0;;main.c: 90: double offset = 0.100;
   129   0036EE  CCCD               	dw	52429
   130   0036F0  3DCC               	dw	15820
   131                           
   132                           ;initializer for _relacion
   133                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;;main.c: 85: double re
      +                          lacion = 0.100;
   134   0036F2  CCCD               	dw	52429
   135   0036F4  3DCC               	dw	15820
   136                           
   137                           ;initializer for _sensibilidad
   138                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;
   139   0036F6  624E               	dw	25166
   140   0036F8  3E90               	dw	16016
   141                           
   142                           	psect	smallconst
   143   000800                     __psmallconst:
   144                           	callstack 0
   145   000800  00                 	db	0
   146   000801                     _direccion_rx:
   147                           	callstack 0
   148   000801  11                 	db	17
   149   000802  11                 	db	17
   150   000803  11                 	db	17
   151   000804  11                 	db	17
   152   000805  11                 	db	17
   153   000806                     __end_of_direccion_rx:
   154                           	callstack 0
   155   000806  3840               	dw	14400
   156   000808  0000               	dw	0
   157   00080A                     __end_of_intervalo:
   158                           	callstack 0
   159   00080A                     _direccion_tx:
   160                           	callstack 0
   161   00080A  11                 	db	17
   162   00080B  11                 	db	17
   163   00080C  11                 	db	17
   164   00080D  11                 	db	17
   165   00080E  11                 	db	17
   166   00080F                     __end_of_direccion_tx:
   167                           	callstack 0
   168   000000                     _T1CON	set	4045
   169   000000                     _TMR1L	set	4046
   170   000000                     _TMR1H	set	4047
   171   000000                     _ADCON0	set	4034
   172   000000                     _ADRESL	set	4035
   173   000000                     _CCPR2H	set	3985
   174   000000                     _TXREG1	set	4013
   175   000000                     _RCREG1	set	4014
   176   000000                     _SPBRG1	set	4015
   177   000000                     _TXSTA1	set	4012
   178   000000                     _TMR1	set	4046
   179   000000                     _LATCbits	set	3979
   180   000000                     _LATBbits	set	3978
   181   000000                     _TRISBbits	set	3987
   182   000000                     _TRISCbits	set	3988
   183   000000                     _T1GCONbits	set	4044
   184   000000                     _T1CONbits	set	4045
   185   000000                     _ADCON0bits	set	4034
   186   000000                     _RCSTA1bits	set	4011
   187   000000                     _TXSTA1bits	set	4012
   188   000000                     _LATA5	set	31821
   189   000000                     _PLLRDY	set	32407
   190   000000                     _ANSELA	set	3931
   191   000000                     _ANSELB	set	3932
   192   000000                     _ANSELC	set	3933
   193   000000                     _LATA	set	3977
   194   000000                     _OSCTUNE	set	3995
   195   000000                     _PIR1bits	set	3998
   196   000000                     _RCSTA1	set	4011
   197   000000                     _BAUDCON1	set	4024
   198   000000                     _ADCON2	set	4032
   199   000000                     _ADCON1	set	4033
   200   000000                     _OSCCON2	set	4050
   201   000000                     _OSCCON	set	4051
   202   000000                     _ACTCON	set	4021
   203   000000                     _SPBRGH1	set	4016
   204   000000                     _INTCON2bits	set	4081
   205   000000                     _PIE1bits	set	3997
   206   000000                     _CCPR2L	set	3984
   207   000000                     _TRISA	set	3986
   208   000000                     _LATC	set	3979
   209   000000                     _LATB	set	3978
   210   000000                     _CCP2CON	set	3991
   211   000000                     _TRISC	set	3988
   212   000000                     _TRISB	set	3987
   213   000000                     _PORTBbits	set	3969
   214   000000                     _WPUB	set	3973
   215   000000                     _INTCONbits	set	4082
   216   000000                     _T1GCON	set	4044
   217   000000                     _RCONbits	set	4048
   218   000000                     _ADRESH	set	4036
   219   00080F                     STR_1:
   220   00080F  25                 	db	37
   221   000810  2E                 	db	46
   222   000811  33                 	db	51	;'3'
   223   000812  66                 	db	102	;'f'
   224   000813  20                 	db	32
   225   000814  41                 	db	65	;'A'
   226   000815  6D                 	db	109	;'m'
   227   000816  70                 	db	112	;'p'
   228   000817  2E                 	db	46
   229   000818  0A                 	db	10
   230   000819  0D                 	db	13
   231   00081A  00                 	db	0
   232   00081B                     STR_2:
   233   00081B  69                 	db	105	;'i'
   234   00081C  6E                 	db	110	;'n'
   235   00081D  66                 	db	102	;'f'
   236   00081E  00                 	db	0
   237   00081F                     STR_5:
   238   00081F  6E                 	db	110	;'n'
   239   000820  61                 	db	97	;'a'
   240   000821  6E                 	db	110	;'n'
   241   000822  00                 	db	0
   242   000823  00                 	db	0	; dummy byte at the end
   243   000000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247   003134                     __pcinit:
   248                           	callstack 0
   249   003134                     start_initialization:
   250                           	callstack 0
   251   003134                     __initialization:
   252                           	callstack 0
   253                           
   254                           ; Initialize objects allocated to BANK1 (12 bytes)
   255                           ; load TBLPTR registers with __pidataBANK1
   256   003134  0EEE               	movlw	low __pidataBANK1
   257   003136  6EF6               	movwf	tblptrl,c
   258   003138  0E36               	movlw	high __pidataBANK1
   259   00313A  6EF7               	movwf	tblptrh,c
   260   00313C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   261   00313E  6EF8               	movwf	tblptru,c
   262   003140  EE01  F062         	lfsr	0,__pdataBANK1
   263   003144  EE10 F00C          	lfsr	1,12
   264   003148                     copy_data0:
   265   003148  0009               	tblrd		*+
   266   00314A  CFF5 FFEE          	movff	tablat,postinc0
   267   00314E  50E5               	movf	postdec1,w,c
   268   003150  50E1               	movf	fsr1l,w,c
   269   003152  E1FA               	bnz	copy_data0
   270                           
   271                           ; Clear objects allocated to BANK1 (98 bytes)
   272   003154  EE01  F000         	lfsr	0,__pbssBANK1
   273   003158  0E62               	movlw	98
   274   00315A                     clear_0:
   275   00315A  6AEE               	clrf	postinc0,c
   276   00315C  06E8               	decf	wreg,f,c
   277   00315E  E1FD               	bnz	clear_0
   278                           
   279                           ; Clear objects allocated to BANK0 (63 bytes)
   280   003160  EE00  F0C1         	lfsr	0,__pbssBANK0
   281   003164  0E3F               	movlw	63
   282   003166                     clear_1:
   283   003166  6AEE               	clrf	postinc0,c
   284   003168  06E8               	decf	wreg,f,c
   285   00316A  E1FD               	bnz	clear_1
   286                           
   287                           ; Clear objects allocated to COMRAM (4 bytes)
   288   00316C  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   289   00316E  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   290   003170  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   291   003172  6A57               	clrf	__pbssCOMRAM& (0+255),c
   292   003174                     end_of_initialization:
   293                           	callstack 0
   294   003174                     __end_of__initialization:
   295                           	callstack 0
   296   003174  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   297   003176  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   298   003178  0E00               	movlw	low (__Lmediumconst shr (0+16))
   299   00317A  6EF8               	movwf	tblptru,c
   300   00317C  0100               	movlb	0
   301   00317E  EF94  F014         	goto	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMRAM
   304   000057                     __pbssCOMRAM:
   305                           	callstack 0
   306   000057                     _I:
   307                           	callstack 0
   308   000057                     	ds	4
   309                           
   310                           	psect	bssBANK0
   311   0000C1                     __pbssBANK0:
   312                           	callstack 0
   313   0000C1                     floorf@F521:
   314                           	callstack 0
   315   0000C1                     	ds	4
   316   0000C5                     ___fpclassifyf@F465:
   317                           	callstack 0
   318   0000C5                     	ds	4
   319   0000C9                     _previousMillis:
   320                           	callstack 0
   321   0000C9                     	ds	4
   322   0000CD                     _currentSeg:
   323                           	callstack 0
   324   0000CD                     	ds	4
   325   0000D1                     _I_min:
   326                           	callstack 0
   327   0000D1                     	ds	4
   328   0000D5                     _I_max:
   329                           	callstack 0
   330   0000D5                     	ds	4
   331   0000D9                     _voltaje:
   332                           	callstack 0
   333   0000D9                     	ds	4
   334   0000DD                     _conteo:
   335                           	callstack 0
   336   0000DD                     	ds	4
   337   0000E1                     _width:
   338                           	callstack 0
   339   0000E1                     	ds	2
   340   0000E3                     _prec:
   341                           	callstack 0
   342   0000E3                     	ds	2
   343   0000E5                     _l:
   344                           	callstack 0
   345   0000E5                     	ds	2
   346   0000E7                     _k:
   347                           	callstack 0
   348   0000E7                     	ds	2
   349   0000E9                     _j:
   350                           	callstack 0
   351   0000E9                     	ds	2
   352   0000EB                     _i:
   353                           	callstack 0
   354   0000EB                     	ds	2
   355   0000ED                     _valor:
   356                           	callstack 0
   357   0000ED                     	ds	2
   358   0000EF                     TMR1_ISR@CountCallBack:
   359                           	callstack 0
   360   0000EF                     	ds	2
   361   0000F1                     _TMR1_InterruptHandler:
   362                           	callstack 0
   363   0000F1                     	ds	2
   364   0000F3                     _timer1ReloadVal:
   365                           	callstack 0
   366   0000F3                     	ds	2
   367   0000F5                     _ADC_InterruptHandler:
   368                           	callstack 0
   369   0000F5                     	ds	2
   370   0000F7                     _EUSART1_ErrorHandler:
   371                           	callstack 0
   372   0000F7                     	ds	2
   373   0000F9                     _EUSART1_OverrunErrorHandler:
   374                           	callstack 0
   375   0000F9                     	ds	2
   376   0000FB                     _EUSART1_FramingErrorHandler:
   377                           	callstack 0
   378   0000FB                     	ds	2
   379   0000FD                     _flags:
   380                           	callstack 0
   381   0000FD                     	ds	1
   382   0000FE                     _dato_serial:
   383                           	callstack 0
   384   0000FE                     	ds	1
   385   0000FF                     _eusart1RxLastError:
   386                           	callstack 0
   387   0000FF                     	ds	1
   388                           
   389                           	psect	bssBANK1
   390   000100                     __pbssBANK1:
   391                           	callstack 0
   392   000100                     _I_rms:
   393                           	callstack 0
   394   000100                     	ds	4
   395   000104                     _dbuf:
   396                           	callstack 0
   397   000104                     	ds	80
   398   000154                     _valor_string:
   399                           	callstack 0
   400   000154                     	ds	14
   401                           
   402                           	psect	dataBANK1
   403   000162                     __pdataBANK1:
   404                           	callstack 0
   405   000162                     _offset:
   406                           	callstack 0
   407   000162                     	ds	4
   408   000166                     _relacion:
   409                           	callstack 0
   410   000166                     	ds	4
   411   00016A                     _sensibilidad:
   412                           	callstack 0
   413   00016A                     	ds	4
   414                           
   415                           	psect	cstackBANK1
   416   00016E                     __pcstackBANK1:
   417                           	callstack 0
   418   00016E                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x0
   421   00016E                     	ds	2
   422   000170                     _main$2367:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x2
   426   000170                     	ds	4
   427                           
   428                           	psect	cstackBANK0
   429   000060                     __pcstackBANK0:
   430                           	callstack 0
   431   000060                     get_corriente_AC@i:
   432                           	callstack 0
   433   000060                     floorf@m:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x0
   437   000060                     	ds	2
   438   000062                     get_corriente_AC@corriente:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x2
   442   000062                     	ds	2
   443   000064                     floorf@e:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x4
   447   000064                     	ds	2
   448   000066                     floorf@u:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x6
   452   000066                     	ds	4
   453   00006A                     efgtoa@fp:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xA
   457   00006A                     	ds	1
   458   00006B                     efgtoa@f:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0xB
   462   00006B                     	ds	4
   463   00006F                     efgtoa@c:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0xF
   467   00006F                     	ds	1
   468   000070                     ??_efgtoa:
   469                           
   470                           ; 1 bytes @ 0x10
   471   000070                     	ds	2
   472   000072                     efgtoa@ne:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x12
   476   000072                     	ds	2
   477   000074                     efgtoa@p:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x14
   481   000074                     	ds	2
   482   000076                     efgtoa@t:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x16
   486   000076                     	ds	2
   487   000078                     _efgtoa$1965:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491   000078                     	ds	2
   492   00007A                     efgtoa@pp:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x1A
   496   00007A                     	ds	1
   497   00007B                     efgtoa@mode:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x1B
   501   00007B                     	ds	1
   502   00007C                     efgtoa@nmode:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x1C
   506   00007C                     	ds	1
   507   00007D                     efgtoa@d:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x1D
   511   00007D                     	ds	2
   512   00007F                     efgtoa@m:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x1F
   516   00007F                     	ds	2
   517   000081                     efgtoa@e:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x21
   521   000081                     	ds	2
   522   000083                     efgtoa@w:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x23
   526   000083                     	ds	2
   527   000085                     efgtoa@ou:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x25
   531   000085                     	ds	4
   532   000089                     efgtoa@i:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x29
   536   000089                     	ds	2
   537   00008B                     efgtoa@h:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x2B
   541   00008B                     	ds	4
   542   00008F                     efgtoa@l:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x2F
   546   00008F                     	ds	4
   547   000093                     efgtoa@sign:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x33
   551   000093                     	ds	1
   552   000094                     efgtoa@g:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x34
   556   000094                     	ds	4
   557   000098                     efgtoa@n:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x38
   561   000098                     	ds	2
   562   00009A                     efgtoa@u:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x3A
   566   00009A                     	ds	4
   567   00009E                     vfpfcnvrt@fp:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x3E
   571   00009E                     	ds	1
   572   00009F                     vfpfcnvrt@fmt:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x3F
   576   00009F                     	ds	1
   577   0000A0                     vfpfcnvrt@ap:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x40
   581   0000A0                     	ds	1
   582   0000A1                     ??_vfpfcnvrt:
   583                           
   584                           ; 1 bytes @ 0x41
   585   0000A1                     	ds	2
   586   0000A3                     vfpfcnvrt@convarg:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x43
   590   0000A3                     	ds	4
   591   0000A7                     vfpfcnvrt@c:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x47
   595   0000A7                     	ds	1
   596   0000A8                     vfpfcnvrt@cp:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x48
   600   0000A8                     	ds	1
   601   0000A9                     ?_vfprintf:
   602                           	callstack 0
   603   0000A9                     vfprintf@fp:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x49
   607   0000A9                     	ds	1
   608   0000AA                     vfprintf@fmt:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x4A
   612   0000AA                     	ds	1
   613   0000AB                     vfprintf@ap:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x4B
   617   0000AB                     	ds	1
   618   0000AC                     vfprintf@cfmt:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x4C
   622   0000AC                     	ds	1
   623   0000AD                     ?_sprintf:
   624                           	callstack 0
   625   0000AD                     sprintf@s:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x4D
   629   0000AD                     	ds	2
   630   0000AF                     sprintf@fmt:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x4F
   634   0000AF                     	ds	5
   635   0000B4                     sprintf@ap:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x54
   639   0000B4                     	ds	1
   640   0000B5                     sprintf@f:
   641                           	callstack 0
   642                           
   643                           ; 12 bytes @ 0x55
   644   0000B5                     	ds	12
   645                           
   646                           	psect	cstackCOMRAM
   647   000001                     __pcstackCOMRAM:
   648                           	callstack 0
   649   000001                     TMR1_WriteTimer@timerVal:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x0
   653   000001                     	ds	2
   654   000003                     ??_INTERRUPT_InterruptManager:
   655   000003                     
   656                           ; 1 bytes @ 0x2
   657   000003                     	ds	2
   658   000005                     ?___fpclassifyf:
   659                           	callstack 0
   660   000005                     ?_ADC_GetConversion:
   661                           	callstack 0
   662   000005                     ?___wmul:
   663                           	callstack 0
   664   000005                     ?___fladd:
   665                           	callstack 0
   666   000005                     ?_labs:
   667                           	callstack 0
   668   000005                     ?___flneg:
   669                           	callstack 0
   670   000005                     ?___fltol:
   671                           	callstack 0
   672   000005                     ?___xxtofl:
   673                           	callstack 0
   674   000005                     _EUSART1_is_tx_ready$282:
   675                           	callstack 0
   676   000005                     EUSART1_Write@txData:
   677                           	callstack 0
   678   000005                     spi_s_read@dato_:
   679                           	callstack 0
   680   000005                     spi_s_write@dato_:
   681                           	callstack 0
   682   000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   683                           	callstack 0
   684   000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   685                           	callstack 0
   686   000005                     EUSART1_SetErrorHandler@interruptHandler:
   687                           	callstack 0
   688   000005                     TMR1_SetInterruptHandler@InterruptHandler:
   689                           	callstack 0
   690   000005                     ___wmul@multiplier:
   691                           	callstack 0
   692   000005                     memcpy@d1:
   693                           	callstack 0
   694   000005                     strcpy@dest:
   695                           	callstack 0
   696   000005                     ___fleq@ff1:
   697                           	callstack 0
   698   000005                     ___flneg@f1:
   699                           	callstack 0
   700   000005                     ___fltol@f1:
   701                           	callstack 0
   702   000005                     ___fladd@b:
   703                           	callstack 0
   704   000005                     ___xxtofl@val:
   705                           	callstack 0
   706   000005                     ___fpclassifyf@x:
   707                           	callstack 0
   708   000005                     labs@a:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x4
   712   000005                     	ds	1
   713   000006                     putch@txData:
   714                           	callstack 0
   715   000006                     spi_s_read@cont_s:
   716                           	callstack 0
   717   000006                     spi_s_write@cont_s:
   718                           	callstack 0
   719   000006                     EUSART1_Write_string@data:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x5
   723   000006                     	ds	1
   724   000007                     ??_ADC_GetConversion:
   725   000007                     nrf2401_write@valor:
   726                           	callstack 0
   727   000007                     nrf2401_comando@comando:
   728                           	callstack 0
   729   000007                     nrf2401_read@reg:
   730                           	callstack 0
   731   000007                     nrf2401_direccion_TX_RX@direccion_:
   732                           	callstack 0
   733   000007                     nrf2401_recibe@valor_:
   734                           	callstack 0
   735   000007                     strcpy@src:
   736                           	callstack 0
   737   000007                     ___wmul@multiplicand:
   738                           	callstack 0
   739   000007                     memcpy@s1:
   740                           	callstack 0
   741   000007                     fputc@c:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x6
   745   000007                     	ds	1
   746   000008                     ??_strcpy:
   747   000008                     nrf2401_write@reg:
   748                           	callstack 0
   749   000008                     nrf2401_read@dato_:
   750                           	callstack 0
   751   000008                     nrf2401_direccion_TX_RX@registro:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x7
   755   000008                     	ds	1
   756   000009                     ??___fpclassifyf:
   757   000009                     ??_labs:
   758   000009                     ??_nrf2401_direccion_TX_RX:
   759   000009                     ??___fltol:
   760   000009                     ??___xxtofl:
   761   000009                     ADC_GetConversion@channel:
   762                           	callstack 0
   763   000009                     fputc@fp:
   764                           	callstack 0
   765   000009                     ___wmul@product:
   766                           	callstack 0
   767   000009                     memcpy@n:
   768                           	callstack 0
   769   000009                     strcpy@d:
   770                           	callstack 0
   771   000009                     ___fleq@ff2:
   772                           	callstack 0
   773   000009                     ___fladd@a:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x8
   777   000009                     	ds	1
   778   00000A                     ??_fputc:
   779   00000A                     nrf2401_direccion_TX_RX@cont_s:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x9
   783   00000A                     	ds	1
   784   00000B                     ?_read_prec_or_width:
   785                           	callstack 0
   786   00000B                     nrF2401_init_RX@canal:
   787                           	callstack 0
   788   00000B                     read_prec_or_width@fmt:
   789                           	callstack 0
   790   00000B                     memcpy@tmp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0xA
   794   00000B                     	ds	1
   795   00000C                     read_prec_or_width@ap:
   796                           	callstack 0
   797   00000C                     memcpy@d:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0xB
   801   00000C                     	ds	1
   802   00000D                     ??___fladd:
   803   00000D                     ??___fleq:
   804   00000D                     ___fltol@sign1:
   805                           	callstack 0
   806   00000D                     ___xxtofl@sign:
   807                           	callstack 0
   808   00000D                     read_prec_or_width@c:
   809                           	callstack 0
   810   00000D                     ___fpclassifyf@e:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0xC
   814   00000D                     	ds	1
   815   00000E                     ___fltol@exp1:
   816                           	callstack 0
   817   00000E                     ___xxtofl@exp:
   818                           	callstack 0
   819   00000E                     read_prec_or_width@n:
   820                           	callstack 0
   821   00000E                     memcpy@s:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0xD
   825   00000E                     	ds	1
   826   00000F                     fputs@s:
   827                           	callstack 0
   828   00000F                     ___xxtofl@arg:
   829                           	callstack 0
   830   00000F                     ___fpclassifyf@u:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0xE
   834   00000F                     	ds	2
   835   000011                     ___fladd@signs:
   836                           	callstack 0
   837   000011                     fputs@fp:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x10
   841   000011                     	ds	1
   842   000012                     ___fladd@aexp:
   843                           	callstack 0
   844   000012                     fputs@c:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x11
   848   000012                     	ds	1
   849   000013                     ?___flmul:
   850                           	callstack 0
   851   000013                     ___fladd@bexp:
   852                           	callstack 0
   853   000013                     fputs@i:
   854                           	callstack 0
   855   000013                     ___flmul@b:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x12
   859   000013                     	ds	1
   860   000014                     ___fladd@grs:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x13
   864   000014                     	ds	1
   865   000015                     pad@fp:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x14
   869   000015                     	ds	1
   870   000016                     pad@buf:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x15
   874   000016                     	ds	1
   875   000017                     ___flmul@a:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x16
   879   000017                     	ds	1
   880   000018                     pad@p:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x17
   884   000018                     	ds	2
   885   00001A                     ??_pad:
   886                           
   887                           ; 1 bytes @ 0x19
   888   00001A                     	ds	1
   889   00001B                     ??___flmul:
   890   00001B                     pad@i:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x1A
   894   00001B                     	ds	4
   895   00001F                     ___flmul@sign:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x1E
   899   00001F                     	ds	1
   900   000020                     ___flmul@aexp:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x1F
   904   000020                     	ds	1
   905   000021                     ___flmul@grs:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x20
   909   000021                     	ds	4
   910   000025                     ___flmul@bexp:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x24
   914   000025                     	ds	1
   915   000026                     ___flmul@prod:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x25
   919   000026                     	ds	4
   920   00002A                     ___flmul@temp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x29
   924   00002A                     	ds	2
   925   00002C                     ?___flsub:
   926                           	callstack 0
   927   00002C                     ___flge@ff1:
   928                           	callstack 0
   929   00002C                     ___flsub@b:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x2B
   933   00002C                     	ds	4
   934   000030                     ___flge@ff2:
   935                           	callstack 0
   936   000030                     ___flsub@a:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x2F
   940   000030                     	ds	4
   941   000034                     ??___flge:
   942   000034                     ?___fldiv:
   943                           	callstack 0
   944   000034                     ___fldiv@b:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x33
   948   000034                     	ds	4
   949   000038                     ??_trip_protec_current:
   950   000038                     ___fldiv@a:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x37
   954   000038                     	ds	4
   955   00003C                     ??___fldiv:
   956                           
   957                           ; 1 bytes @ 0x3B
   958   00003C                     	ds	4
   959   000040                     ___fldiv@rem:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x3F
   963   000040                     	ds	4
   964   000044                     ___fldiv@sign:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x43
   968   000044                     	ds	1
   969   000045                     ___fldiv@new_exp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x44
   973   000045                     	ds	2
   974   000047                     ___fldiv@grs:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x46
   978   000047                     	ds	4
   979   00004B                     ___fldiv@bexp:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x4A
   983   00004B                     	ds	1
   984   00004C                     ___fldiv@aexp:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x4B
   988   00004C                     	ds	1
   989   00004D                     ?_floorf:
   990                           	callstack 0
   991   00004D                     ?_get_corriente_AC:
   992                           	callstack 0
   993   00004D                     get_corriente_AC@n_muestras:
   994                           	callstack 0
   995   00004D                     floorf@x:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x4C
   999   00004D                     	ds	4
  1000   000051                     ??_floorf:
  1001   000051                     ??_get_corriente_AC:
  1002                           
  1003                           ; 1 bytes @ 0x50
  1004   000051                     	ds	6
  1005   000057                     
  1006                           ; 1 bytes @ 0x56
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 251 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0
  1027 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1029 ;;      Totals:         0       0       6       0       0       0       0       0       0
  1030 ;;Total ram usage:        6 bytes
  1031 ;; Hardware stack levels required when called: 13
  1032 ;; This function calls:
  1033 ;;		_EUSART1_Write_string
  1034 ;;		_EUSART1_is_tx_ready
  1035 ;;		_SYSTEM_Initialize
  1036 ;;		___fladd
  1037 ;;		___fldiv
  1038 ;;		_get_corriente_AC
  1039 ;;		_nrF2401_init_RX
  1040 ;;		_nrf2401_haydatos
  1041 ;;		_nrf2401_recibe
  1042 ;;		_spi_s_init
  1043 ;;		_sprintf
  1044 ;;		_trip_protec_current
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text0
  1051   002928                     __ptext0:
  1052                           	callstack 0
  1053   002928                     _main:
  1054                           	callstack 18
  1055   002928                     
  1056                           ;main.c: 254:     SYSTEM_Initialize();
  1057   002928  EC01  F01B         	call	_SYSTEM_Initialize	;wreg free
  1058   00292C                     
  1059                           ;main.c: 262:     (INTCONbits.GIE = 1);
  1060   00292C  8EF2               	bsf	242,7,c	;volatile
  1061   00292E                     
  1062                           ;main.c: 268:     (INTCONbits.PEIE = 1);
  1063   00292E  8CF2               	bsf	242,6,c	;volatile
  1064   002930                     
  1065                           ;main.c: 273:     ANSELA = 0b00000111;
  1066   002930  0E07               	movlw	7
  1067   002932  010F               	movlb	15	; () banked
  1068   002934  6F5B               	movwf	91,b	;volatile
  1069   002936                     
  1070                           ; BSR set to: 15
  1071                           ;main.c: 274:     ANSELB = 0b00000000;
  1072   002936  0E00               	movlw	0
  1073   002938  6F5C               	movwf	92,b	;volatile
  1074   00293A                     
  1075                           ; BSR set to: 15
  1076                           ;main.c: 275:     ANSELC = 0x00;
  1077   00293A  0E00               	movlw	0
  1078   00293C  6F5D               	movwf	93,b	;volatile
  1079   00293E                     
  1080                           ; BSR set to: 15
  1081                           ;main.c: 283:     spi_s_init();
  1082   00293E  EC45  F01B         	call	_spi_s_init	;wreg free
  1083   002942                     
  1084                           ;main.c: 285:     nrF2401_init_RX(17);
  1085   002942  0E11               	movlw	17
  1086   002944  ECDA  F017         	call	_nrF2401_init_RX
  1087   002948                     
  1088                           ;main.c: 289:     _delay((unsigned long)((2000)*(48000000/4000.0)));
  1089   002948  0E7A               	movlw	122
  1090   00294A  0101               	movlb	1	; () banked
  1091   00294C  6F6F               	movwf	(??_main+1)& (0+255),b
  1092   00294E  0EC1               	movlw	193
  1093   002950  6F6E               	movwf	??_main& (0+255),b
  1094   002952  0E81               	movlw	129
  1095   002954                     u6377:
  1096   002954  2EE8               	decfsz	wreg,f,c
  1097   002956  D7FE               	bra	u6377
  1098   002958  2F6E               	decfsz	??_main& (0+255),f,b
  1099   00295A  D7FC               	bra	u6377
  1100   00295C  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1101   00295E  D7FA               	bra	u6377
  1102   002960  D000               	nop2	
  1103   002962                     
  1104                           ;main.c: 290:     LATA5 = 1;
  1105   002962  8A89               	bsf	3977,5,c	;volatile
  1106   002964                     
  1107                           ;main.c: 291:     _delay((unsigned long)((3000)*(48000000/4000.0)));
  1108   002964  0EB7               	movlw	183
  1109   002966  0101               	movlb	1	; () banked
  1110   002968  6F6F               	movwf	(??_main+1)& (0+255),b
  1111   00296A  0EA1               	movlw	161
  1112   00296C  6F6E               	movwf	??_main& (0+255),b
  1113   00296E  0EC3               	movlw	195
  1114   002970                     u6387:
  1115   002970  2EE8               	decfsz	wreg,f,c
  1116   002972  D7FE               	bra	u6387
  1117   002974  2F6E               	decfsz	??_main& (0+255),f,b
  1118   002976  D7FC               	bra	u6387
  1119   002978  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1120   00297A  D7FA               	bra	u6387
  1121   00297C  D000               	nop2	
  1122   00297E                     l5999:
  1123                           
  1124                           ;main.c: 294:     {;main.c: 298:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1125   00297E  0E07               	movlw	7
  1126   002980  6E4E               	movwf	(get_corriente_AC@n_muestras+1)^0,c
  1127   002982  0ED0               	movlw	208
  1128   002984  6E4D               	movwf	get_corriente_AC@n_muestras^0,c
  1129   002986  ECCC  F012         	call	_get_corriente_AC	;wreg free
  1130   00298A  C04D  F170         	movff	?_get_corriente_AC,_main$2367
  1131   00298E  C04E  F171         	movff	?_get_corriente_AC+1,_main$2367+1
  1132   002992  C04F  F172         	movff	?_get_corriente_AC+2,_main$2367+2
  1133   002996  C050  F173         	movff	?_get_corriente_AC+3,_main$2367+3
  1134   00299A                     
  1135                           ;main.c: 294:     {;main.c: 298:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1136   00299A  0ECD               	movlw	205
  1137   00299C  6E09               	movwf	___fladd@a^0,c
  1138   00299E  0ECC               	movlw	204
  1139   0029A0  6E0A               	movwf	(___fladd@a+1)^0,c
  1140   0029A2  0ECC               	movlw	204
  1141   0029A4  6E0B               	movwf	(___fladd@a+2)^0,c
  1142   0029A6  0EBD               	movlw	189
  1143   0029A8  6E0C               	movwf	(___fladd@a+3)^0,c
  1144   0029AA  C170  F005         	movff	_main$2367,___fladd@b
  1145   0029AE  C171  F006         	movff	_main$2367+1,___fladd@b+1
  1146   0029B2  C172  F007         	movff	_main$2367+2,___fladd@b+2
  1147   0029B6  C173  F008         	movff	_main$2367+3,___fladd@b+3
  1148   0029BA  EC06  F009         	call	___fladd	;wreg free
  1149   0029BE  C005  F034         	movff	?___fladd,___fldiv@b
  1150   0029C2  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  1151   0029C6  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  1152   0029CA  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  1153   0029CE  0ECD               	movlw	205
  1154   0029D0  6E38               	movwf	___fldiv@a^0,c
  1155   0029D2  0ECC               	movlw	204
  1156   0029D4  6E39               	movwf	(___fldiv@a+1)^0,c
  1157   0029D6  0ECC               	movlw	204
  1158   0029D8  6E3A               	movwf	(___fldiv@a+2)^0,c
  1159   0029DA  0E3D               	movlw	61
  1160   0029DC  6E3B               	movwf	(___fldiv@a+3)^0,c
  1161   0029DE  EC7B  F00D         	call	___fldiv	;wreg free
  1162   0029E2  C034  F057         	movff	?___fldiv,_I
  1163   0029E6  C035  F058         	movff	?___fldiv+1,_I+1
  1164   0029EA  C036  F059         	movff	?___fldiv+2,_I+2
  1165   0029EE  C037  F05A         	movff	?___fldiv+3,_I+3
  1166   0029F2                     
  1167                           ;main.c: 299:         sprintf(valor_string, "%.3f Amp.\n\r", I);
  1168   0029F2  0E54               	movlw	low _valor_string
  1169   0029F4  0100               	movlb	0	; () banked
  1170   0029F6  6FAD               	movwf	sprintf@s& (0+255),b
  1171   0029F8  0E01               	movlw	high _valor_string
  1172   0029FA  6FAE               	movwf	(sprintf@s+1)& (0+255),b
  1173   0029FC  0E0F               	movlw	low STR_1
  1174   0029FE  6FAF               	movwf	sprintf@fmt& (0+255),b
  1175   002A00  C057  F0B0         	movff	_I,?_sprintf+3
  1176   002A04  C058  F0B1         	movff	_I+1,?_sprintf+4
  1177   002A08  C059  F0B2         	movff	_I+2,?_sprintf+5
  1178   002A0C  C05A  F0B3         	movff	_I+3,?_sprintf+6
  1179   002A10  EC70  F019         	call	_sprintf	;wreg free
  1180   002A14                     
  1181                           ;main.c: 300:         if (EUSART1_is_tx_ready()) EUSART1_Write_string(valor_string);
  1182   002A14  ECA7  F01A         	call	_EUSART1_is_tx_ready	;wreg free
  1183   002A18  0900               	iorlw	0
  1184   002A1A  B4D8               	btfsc	status,2,c
  1185   002A1C  EF12  F015         	goto	u6341
  1186   002A20  EF14  F015         	goto	u6340
  1187   002A24                     u6341:
  1188   002A24  EF1A  F015         	goto	l6009
  1189   002A28                     u6340:
  1190   002A28  0E54               	movlw	low _valor_string
  1191   002A2A  6E06               	movwf	EUSART1_Write_string@data^0,c
  1192   002A2C  0E01               	movlw	high _valor_string
  1193   002A2E  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
  1194   002A30  EC63  F01A         	call	_EUSART1_Write_string	;wreg free
  1195   002A34                     l6009:
  1196                           
  1197                           ;main.c: 302:         trip_protec_current();
  1198   002A34  EC48  F00F         	call	_trip_protec_current	;wreg free
  1199   002A38                     
  1200                           ;main.c: 304:         if(nrf2401_haydatos() == 1)
  1201   002A38  ECF2  F01A         	call	_nrf2401_haydatos	;wreg free
  1202   002A3C  06E8               	decf	wreg,f,c
  1203   002A3E  A4D8               	btfss	status,2,c
  1204   002A40  EF24  F015         	goto	u6351
  1205   002A44  EF26  F015         	goto	u6350
  1206   002A48                     u6351:
  1207   002A48  EF40  F015         	goto	l495
  1208   002A4C                     u6350:
  1209   002A4C                     
  1210                           ;main.c: 305:         {;main.c: 306:             dato_serial = nrf2401_recibe();
  1211   002A4C  EC2C  F01B         	call	_nrf2401_recibe	;wreg free
  1212   002A50  0100               	movlb	0	; () banked
  1213   002A52  6FFE               	movwf	_dato_serial& (0+255),b
  1214   002A54                     
  1215                           ; BSR set to: 0
  1216                           ;main.c: 307:             if (dato_serial == 1)
  1217   002A54  05FE               	decf	_dato_serial& (0+255),w,b
  1218   002A56  A4D8               	btfss	status,2,c
  1219   002A58  EF30  F015         	goto	u6361
  1220   002A5C  EF32  F015         	goto	u6360
  1221   002A60                     u6361:
  1222   002A60  EF40  F015         	goto	l495
  1223   002A64                     u6360:
  1224   002A64                     
  1225                           ; BSR set to: 0
  1226                           ;main.c: 308:             {;main.c: 309:                 LATA5 = 1;
  1227   002A64  8A89               	bsf	3977,5,c	;volatile
  1228   002A66                     
  1229                           ; BSR set to: 0
  1230                           ;main.c: 310:                 _delay((unsigned long)((3000)*(48000000/4000.0)));
  1231   002A66  0EB7               	movlw	183
  1232   002A68  0101               	movlb	1	; () banked
  1233   002A6A  6F6F               	movwf	(??_main+1)& (0+255),b
  1234   002A6C  0EA1               	movlw	161
  1235   002A6E  6F6E               	movwf	??_main& (0+255),b
  1236   002A70  0EC3               	movlw	195
  1237   002A72                     u6397:
  1238   002A72  2EE8               	decfsz	wreg,f,c
  1239   002A74  D7FE               	bra	u6397
  1240   002A76  2F6E               	decfsz	??_main& (0+255),f,b
  1241   002A78  D7FC               	bra	u6397
  1242   002A7A  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1243   002A7C  D7FA               	bra	u6397
  1244   002A7E  D000               	nop2	
  1245   002A80                     l495:
  1246                           
  1247                           ;main.c: 314:         _delay((unsigned long)((100)*(48000000/4000.0)));
  1248   002A80  0E07               	movlw	7
  1249   002A82  0101               	movlb	1	; () banked
  1250   002A84  6F6F               	movwf	(??_main+1)& (0+255),b
  1251   002A86  0E17               	movlw	23
  1252   002A88  6F6E               	movwf	??_main& (0+255),b
  1253   002A8A  0E6A               	movlw	106
  1254   002A8C                     u6407:
  1255   002A8C  2EE8               	decfsz	wreg,f,c
  1256   002A8E  D7FE               	bra	u6407
  1257   002A90  2F6E               	decfsz	??_main& (0+255),f,b
  1258   002A92  D7FC               	bra	u6407
  1259   002A94  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1260   002A96  D7FA               	bra	u6407
  1261   002A98  0000               	nop	
  1262   002A9A  EFBF  F014         	goto	l5999
  1263   002A9E  EF26  F000         	goto	start
  1264   002AA2                     __end_of_main:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _trip_protec_current *****************
  1268 ;; Defined at:
  1269 ;;		line 196 in file "main.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1285 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1286 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1287 ;;Total ram usage:        4 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 5
  1290 ;; This function calls:
  1291 ;;		___flge
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text1
  1298   001E90                     __ptext1:
  1299                           	callstack 0
  1300   001E90                     _trip_protec_current:
  1301                           	callstack 25
  1302   001E90                     
  1303                           ;main.c: 198:     if (I <= 9)
  1304   001E90  0E00               	movlw	0
  1305   001E92  6E2C               	movwf	___flge@ff1^0,c
  1306   001E94  0E00               	movlw	0
  1307   001E96  6E2D               	movwf	(___flge@ff1+1)^0,c
  1308   001E98  0E10               	movlw	16
  1309   001E9A  6E2E               	movwf	(___flge@ff1+2)^0,c
  1310   001E9C  0E41               	movlw	65
  1311   001E9E  6E2F               	movwf	(___flge@ff1+3)^0,c
  1312   001EA0  C057  F030         	movff	_I,___flge@ff2
  1313   001EA4  C058  F031         	movff	_I+1,___flge@ff2+1
  1314   001EA8  C059  F032         	movff	_I+2,___flge@ff2+2
  1315   001EAC  C05A  F033         	movff	_I+3,___flge@ff2+3
  1316   001EB0  ECD4  F015         	call	___flge	;wreg free
  1317   001EB4  A0D8               	btfss	status,0,c
  1318   001EB6  EF5F  F00F         	goto	u6181
  1319   001EBA  EF61  F00F         	goto	u6180
  1320   001EBE                     u6181:
  1321   001EBE  EF99  F00F         	goto	l5891
  1322   001EC2                     u6180:
  1323   001EC2                     
  1324                           ;main.c: 199:     {;main.c: 200:         LATA5 = 0;
  1325   001EC2  9A89               	bcf	3977,5,c	;volatile
  1326                           
  1327                           ;main.c: 201:         currentSeg = conteo;
  1328   001EC4  C0DD  F0CD         	movff	_conteo,_currentSeg
  1329   001EC8  C0DE  F0CE         	movff	_conteo+1,_currentSeg+1
  1330   001ECC  C0DF  F0CF         	movff	_conteo+2,_currentSeg+2
  1331   001ED0  C0E0  F0D0         	movff	_conteo+3,_currentSeg+3
  1332   001ED4                     
  1333                           ;main.c: 202:         if (currentSeg - previousMillis >= intervalo)
  1334   001ED4  0100               	movlb	0	; () banked
  1335   001ED6  51C9               	movf	_previousMillis& (0+255),w,b
  1336   001ED8  5DCD               	subwf	_currentSeg& (0+255),w,b
  1337   001EDA  6E38               	movwf	??_trip_protec_current^0,c
  1338   001EDC  51CA               	movf	(_previousMillis+1)& (0+255),w,b
  1339   001EDE  59CE               	subwfb	(_currentSeg+1)& (0+255),w,b
  1340   001EE0  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1341   001EE2  51CB               	movf	(_previousMillis+2)& (0+255),w,b
  1342   001EE4  59CF               	subwfb	(_currentSeg+2)& (0+255),w,b
  1343   001EE6  6E3A               	movwf	(??_trip_protec_current+2)^0,c
  1344   001EE8  51CC               	movf	(_previousMillis+3)& (0+255),w,b
  1345   001EEA  59D0               	subwfb	(_currentSeg+3)& (0+255),w,b
  1346   001EEC  6E3B               	movwf	(??_trip_protec_current+3)^0,c
  1347   001EEE  503B               	movf	(??_trip_protec_current+3)^0,w,c
  1348   001EF0  103A               	iorwf	(??_trip_protec_current+2)^0,w,c
  1349   001EF2  E10B               	bnz	u6190
  1350   001EF4  0E40               	movlw	64
  1351   001EF6  5C38               	subwf	??_trip_protec_current^0,w,c
  1352   001EF8  0E38               	movlw	56
  1353   001EFA  5839               	subwfb	(??_trip_protec_current+1)^0,w,c
  1354   001EFC  A0D8               	btfss	status,0,c
  1355   001EFE  EF83  F00F         	goto	u6191
  1356   001F02  EF85  F00F         	goto	u6190
  1357   001F06                     u6191:
  1358   001F06  EF99  F00F         	goto	l5891
  1359   001F0A                     u6190:
  1360   001F0A                     
  1361                           ; BSR set to: 0
  1362                           ;main.c: 203:         {;main.c: 204:             previousMillis = currentSeg;
  1363   001F0A  C0CD  F0C9         	movff	_currentSeg,_previousMillis
  1364   001F0E  C0CE  F0CA         	movff	_currentSeg+1,_previousMillis+1
  1365   001F12  C0CF  F0CB         	movff	_currentSeg+2,_previousMillis+2
  1366   001F16  C0D0  F0CC         	movff	_currentSeg+3,_previousMillis+3
  1367                           
  1368                           ;main.c: 205:             LATA5 = 1;
  1369   001F1A  8A89               	bsf	3977,5,c	;volatile
  1370   001F1C                     
  1371                           ; BSR set to: 0
  1372                           ;main.c: 206:             _delay((unsigned long)((3000)*(48000000/4000.0)));
  1373   001F1C  0EB7               	movlw	183
  1374   001F1E  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1375   001F20  0EA1               	movlw	161
  1376   001F22  6E38               	movwf	??_trip_protec_current^0,c
  1377   001F24  0EC4               	movlw	196
  1378   001F26                     u6417:
  1379   001F26  2EE8               	decfsz	wreg,f,c
  1380   001F28  D7FE               	bra	u6417
  1381   001F2A  2E38               	decfsz	??_trip_protec_current^0,f,c
  1382   001F2C  D7FC               	bra	u6417
  1383   001F2E  2E39               	decfsz	(??_trip_protec_current+1)^0,f,c
  1384   001F30  D7FA               	bra	u6417
  1385   001F32                     l5891:
  1386                           
  1387                           ;main.c: 209:     if (I >= 16 && I < 17)
  1388   001F32  C057  F02C         	movff	_I,___flge@ff1
  1389   001F36  C058  F02D         	movff	_I+1,___flge@ff1+1
  1390   001F3A  C059  F02E         	movff	_I+2,___flge@ff1+2
  1391   001F3E  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1392   001F42  0E00               	movlw	0
  1393   001F44  6E30               	movwf	___flge@ff2^0,c
  1394   001F46  0E00               	movlw	0
  1395   001F48  6E31               	movwf	(___flge@ff2+1)^0,c
  1396   001F4A  0E80               	movlw	128
  1397   001F4C  6E32               	movwf	(___flge@ff2+2)^0,c
  1398   001F4E  0E41               	movlw	65
  1399   001F50  6E33               	movwf	(___flge@ff2+3)^0,c
  1400   001F52  ECD4  F015         	call	___flge	;wreg free
  1401   001F56  A0D8               	btfss	status,0,c
  1402   001F58  EFB0  F00F         	goto	u6201
  1403   001F5C  EFB2  F00F         	goto	u6200
  1404   001F60                     u6201:
  1405   001F60  EFE7  F00F         	goto	l5901
  1406   001F64                     u6200:
  1407   001F64  C057  F02C         	movff	_I,___flge@ff1
  1408   001F68  C058  F02D         	movff	_I+1,___flge@ff1+1
  1409   001F6C  C059  F02E         	movff	_I+2,___flge@ff1+2
  1410   001F70  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1411   001F74  0E00               	movlw	0
  1412   001F76  6E30               	movwf	___flge@ff2^0,c
  1413   001F78  0E00               	movlw	0
  1414   001F7A  6E31               	movwf	(___flge@ff2+1)^0,c
  1415   001F7C  0E88               	movlw	136
  1416   001F7E  6E32               	movwf	(___flge@ff2+2)^0,c
  1417   001F80  0E41               	movlw	65
  1418   001F82  6E33               	movwf	(___flge@ff2+3)^0,c
  1419   001F84  ECD4  F015         	call	___flge	;wreg free
  1420   001F88  B0D8               	btfsc	status,0,c
  1421   001F8A  EFC9  F00F         	goto	u6211
  1422   001F8E  EFCB  F00F         	goto	u6210
  1423   001F92                     u6211:
  1424   001F92  EFE7  F00F         	goto	l5901
  1425   001F96                     u6210:
  1426   001F96                     
  1427                           ;main.c: 210:     {;main.c: 211:         i = i + 1;
  1428   001F96  0E01               	movlw	1
  1429   001F98  0100               	movlb	0	; () banked
  1430   001F9A  25EB               	addwf	_i& (0+255),w,b
  1431   001F9C  6FEB               	movwf	_i& (0+255),b
  1432   001F9E  0E00               	movlw	0
  1433   001FA0  21EC               	addwfc	(_i+1)& (0+255),w,b
  1434   001FA2  6FEC               	movwf	(_i+1)& (0+255),b
  1435                           
  1436                           ;main.c: 212:         if (i > 600)
  1437   001FA4  BFEC               	btfsc	(_i+1)& (0+255),7,b
  1438   001FA6  EFDE  F00F         	goto	u6221
  1439   001FAA  0E59               	movlw	89
  1440   001FAC  5DEB               	subwf	_i& (0+255),w,b
  1441   001FAE  0E02               	movlw	2
  1442   001FB0  59EC               	subwfb	(_i+1)& (0+255),w,b
  1443   001FB2  A0D8               	btfss	status,0,c
  1444   001FB4  EFDE  F00F         	goto	u6221
  1445   001FB8  EFE0  F00F         	goto	u6220
  1446   001FBC                     u6221:
  1447   001FBC  EFE7  F00F         	goto	l5901
  1448   001FC0                     u6220:
  1449   001FC0                     
  1450                           ; BSR set to: 0
  1451                           ;main.c: 213:         {;main.c: 214:             i = 0;
  1452   001FC0  0E00               	movlw	0
  1453   001FC2  6FEC               	movwf	(_i+1)& (0+255),b
  1454   001FC4  0E00               	movlw	0
  1455   001FC6  6FEB               	movwf	_i& (0+255),b
  1456   001FC8                     
  1457                           ; BSR set to: 0
  1458                           ;main.c: 215:             LATA5 = 0;
  1459   001FC8  9A89               	bcf	3977,5,c	;volatile
  1460   001FCA                     l470:
  1461   001FCA  EFE5  F00F         	goto	l470
  1462   001FCE                     l5901:
  1463                           
  1464                           ;main.c: 219:     if (I >= 17 && I < 18)
  1465   001FCE  C057  F02C         	movff	_I,___flge@ff1
  1466   001FD2  C058  F02D         	movff	_I+1,___flge@ff1+1
  1467   001FD6  C059  F02E         	movff	_I+2,___flge@ff1+2
  1468   001FDA  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1469   001FDE  0E00               	movlw	0
  1470   001FE0  6E30               	movwf	___flge@ff2^0,c
  1471   001FE2  0E00               	movlw	0
  1472   001FE4  6E31               	movwf	(___flge@ff2+1)^0,c
  1473   001FE6  0E88               	movlw	136
  1474   001FE8  6E32               	movwf	(___flge@ff2+2)^0,c
  1475   001FEA  0E41               	movlw	65
  1476   001FEC  6E33               	movwf	(___flge@ff2+3)^0,c
  1477   001FEE  ECD4  F015         	call	___flge	;wreg free
  1478   001FF2  A0D8               	btfss	status,0,c
  1479   001FF4  EFFE  F00F         	goto	u6231
  1480   001FF8  EF00  F010         	goto	u6230
  1481   001FFC                     u6231:
  1482   001FFC  EF35  F010         	goto	l5911
  1483   002000                     u6230:
  1484   002000  C057  F02C         	movff	_I,___flge@ff1
  1485   002004  C058  F02D         	movff	_I+1,___flge@ff1+1
  1486   002008  C059  F02E         	movff	_I+2,___flge@ff1+2
  1487   00200C  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1488   002010  0E00               	movlw	0
  1489   002012  6E30               	movwf	___flge@ff2^0,c
  1490   002014  0E00               	movlw	0
  1491   002016  6E31               	movwf	(___flge@ff2+1)^0,c
  1492   002018  0E90               	movlw	144
  1493   00201A  6E32               	movwf	(___flge@ff2+2)^0,c
  1494   00201C  0E41               	movlw	65
  1495   00201E  6E33               	movwf	(___flge@ff2+3)^0,c
  1496   002020  ECD4  F015         	call	___flge	;wreg free
  1497   002024  B0D8               	btfsc	status,0,c
  1498   002026  EF17  F010         	goto	u6241
  1499   00202A  EF19  F010         	goto	u6240
  1500   00202E                     u6241:
  1501   00202E  EF35  F010         	goto	l5911
  1502   002032                     u6240:
  1503   002032                     
  1504                           ;main.c: 220:     {;main.c: 221:         j = j + 1;
  1505   002032  0E01               	movlw	1
  1506   002034  0100               	movlb	0	; () banked
  1507   002036  25E9               	addwf	_j& (0+255),w,b
  1508   002038  6FE9               	movwf	_j& (0+255),b
  1509   00203A  0E00               	movlw	0
  1510   00203C  21EA               	addwfc	(_j+1)& (0+255),w,b
  1511   00203E  6FEA               	movwf	(_j+1)& (0+255),b
  1512                           
  1513                           ;main.c: 222:         if ( j > 300)
  1514   002040  BFEA               	btfsc	(_j+1)& (0+255),7,b
  1515   002042  EF2C  F010         	goto	u6251
  1516   002046  0E2D               	movlw	45
  1517   002048  5DE9               	subwf	_j& (0+255),w,b
  1518   00204A  0E01               	movlw	1
  1519   00204C  59EA               	subwfb	(_j+1)& (0+255),w,b
  1520   00204E  A0D8               	btfss	status,0,c
  1521   002050  EF2C  F010         	goto	u6251
  1522   002054  EF2E  F010         	goto	u6250
  1523   002058                     u6251:
  1524   002058  EF35  F010         	goto	l5911
  1525   00205C                     u6250:
  1526   00205C                     
  1527                           ; BSR set to: 0
  1528                           ;main.c: 223:         {;main.c: 224:             j = 0;
  1529   00205C  0E00               	movlw	0
  1530   00205E  6FEA               	movwf	(_j+1)& (0+255),b
  1531   002060  0E00               	movlw	0
  1532   002062  6FE9               	movwf	_j& (0+255),b
  1533   002064                     
  1534                           ; BSR set to: 0
  1535                           ;main.c: 225:             LATA5 = 0;
  1536   002064  9A89               	bcf	3977,5,c	;volatile
  1537   002066                     l475:
  1538   002066  EF33  F010         	goto	l475
  1539   00206A                     l5911:
  1540                           
  1541                           ;main.c: 229:     if (I >= 18 && I < 19)
  1542   00206A  C057  F02C         	movff	_I,___flge@ff1
  1543   00206E  C058  F02D         	movff	_I+1,___flge@ff1+1
  1544   002072  C059  F02E         	movff	_I+2,___flge@ff1+2
  1545   002076  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1546   00207A  0E00               	movlw	0
  1547   00207C  6E30               	movwf	___flge@ff2^0,c
  1548   00207E  0E00               	movlw	0
  1549   002080  6E31               	movwf	(___flge@ff2+1)^0,c
  1550   002082  0E90               	movlw	144
  1551   002084  6E32               	movwf	(___flge@ff2+2)^0,c
  1552   002086  0E41               	movlw	65
  1553   002088  6E33               	movwf	(___flge@ff2+3)^0,c
  1554   00208A  ECD4  F015         	call	___flge	;wreg free
  1555   00208E  A0D8               	btfss	status,0,c
  1556   002090  EF4C  F010         	goto	u6261
  1557   002094  EF4E  F010         	goto	u6260
  1558   002098                     u6261:
  1559   002098  EF83  F010         	goto	l5921
  1560   00209C                     u6260:
  1561   00209C  C057  F02C         	movff	_I,___flge@ff1
  1562   0020A0  C058  F02D         	movff	_I+1,___flge@ff1+1
  1563   0020A4  C059  F02E         	movff	_I+2,___flge@ff1+2
  1564   0020A8  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1565   0020AC  0E00               	movlw	0
  1566   0020AE  6E30               	movwf	___flge@ff2^0,c
  1567   0020B0  0E00               	movlw	0
  1568   0020B2  6E31               	movwf	(___flge@ff2+1)^0,c
  1569   0020B4  0E98               	movlw	152
  1570   0020B6  6E32               	movwf	(___flge@ff2+2)^0,c
  1571   0020B8  0E41               	movlw	65
  1572   0020BA  6E33               	movwf	(___flge@ff2+3)^0,c
  1573   0020BC  ECD4  F015         	call	___flge	;wreg free
  1574   0020C0  B0D8               	btfsc	status,0,c
  1575   0020C2  EF65  F010         	goto	u6271
  1576   0020C6  EF67  F010         	goto	u6270
  1577   0020CA                     u6271:
  1578   0020CA  EF83  F010         	goto	l5921
  1579   0020CE                     u6270:
  1580   0020CE                     
  1581                           ;main.c: 230:     {;main.c: 231:         k = k + 1;
  1582   0020CE  0E01               	movlw	1
  1583   0020D0  0100               	movlb	0	; () banked
  1584   0020D2  25E7               	addwf	_k& (0+255),w,b
  1585   0020D4  6FE7               	movwf	_k& (0+255),b
  1586   0020D6  0E00               	movlw	0
  1587   0020D8  21E8               	addwfc	(_k+1)& (0+255),w,b
  1588   0020DA  6FE8               	movwf	(_k+1)& (0+255),b
  1589                           
  1590                           ;main.c: 232:         if (k > 120)
  1591   0020DC  BFE8               	btfsc	(_k+1)& (0+255),7,b
  1592   0020DE  EF7A  F010         	goto	u6281
  1593   0020E2  51E8               	movf	(_k+1)& (0+255),w,b
  1594   0020E4  E109               	bnz	u6280
  1595   0020E6  0E79               	movlw	121
  1596   0020E8  5DE7               	subwf	_k& (0+255),w,b
  1597   0020EA  A0D8               	btfss	status,0,c
  1598   0020EC  EF7A  F010         	goto	u6281
  1599   0020F0  EF7C  F010         	goto	u6280
  1600   0020F4                     u6281:
  1601   0020F4  EF83  F010         	goto	l5921
  1602   0020F8                     u6280:
  1603   0020F8                     
  1604                           ; BSR set to: 0
  1605                           ;main.c: 233:         {;main.c: 234:             k = 0;
  1606   0020F8  0E00               	movlw	0
  1607   0020FA  6FE8               	movwf	(_k+1)& (0+255),b
  1608   0020FC  0E00               	movlw	0
  1609   0020FE  6FE7               	movwf	_k& (0+255),b
  1610   002100                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 235:             LATA5 = 0;
  1613   002100  9A89               	bcf	3977,5,c	;volatile
  1614   002102                     l480:
  1615   002102  EF81  F010         	goto	l480
  1616   002106                     l5921:
  1617                           
  1618                           ;main.c: 239:     if (I >= 19)
  1619   002106  C057  F02C         	movff	_I,___flge@ff1
  1620   00210A  C058  F02D         	movff	_I+1,___flge@ff1+1
  1621   00210E  C059  F02E         	movff	_I+2,___flge@ff1+2
  1622   002112  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1623   002116  0E00               	movlw	0
  1624   002118  6E30               	movwf	___flge@ff2^0,c
  1625   00211A  0E00               	movlw	0
  1626   00211C  6E31               	movwf	(___flge@ff2+1)^0,c
  1627   00211E  0E98               	movlw	152
  1628   002120  6E32               	movwf	(___flge@ff2+2)^0,c
  1629   002122  0E41               	movlw	65
  1630   002124  6E33               	movwf	(___flge@ff2+3)^0,c
  1631   002126  ECD4  F015         	call	___flge	;wreg free
  1632   00212A  A0D8               	btfss	status,0,c
  1633   00212C  EF9A  F010         	goto	u6291
  1634   002130  EF9C  F010         	goto	u6290
  1635   002134                     u6291:
  1636   002134  EFB8  F010         	goto	l488
  1637   002138                     u6290:
  1638   002138                     
  1639                           ;main.c: 240:     {;main.c: 241:         l = l + 1;
  1640   002138  0E01               	movlw	1
  1641   00213A  0100               	movlb	0	; () banked
  1642   00213C  25E5               	addwf	_l& (0+255),w,b
  1643   00213E  6FE5               	movwf	_l& (0+255),b
  1644   002140  0E00               	movlw	0
  1645   002142  21E6               	addwfc	(_l+1)& (0+255),w,b
  1646   002144  6FE6               	movwf	(_l+1)& (0+255),b
  1647                           
  1648                           ;main.c: 242:         if (l > 15)
  1649   002146  BFE6               	btfsc	(_l+1)& (0+255),7,b
  1650   002148  EFAF  F010         	goto	u6301
  1651   00214C  51E6               	movf	(_l+1)& (0+255),w,b
  1652   00214E  E109               	bnz	u6300
  1653   002150  0E10               	movlw	16
  1654   002152  5DE5               	subwf	_l& (0+255),w,b
  1655   002154  A0D8               	btfss	status,0,c
  1656   002156  EFAF  F010         	goto	u6301
  1657   00215A  EFB1  F010         	goto	u6300
  1658   00215E                     u6301:
  1659   00215E  EFB8  F010         	goto	l488
  1660   002162                     u6300:
  1661   002162                     
  1662                           ; BSR set to: 0
  1663                           ;main.c: 243:         {;main.c: 244:             l = 0;
  1664   002162  0E00               	movlw	0
  1665   002164  6FE6               	movwf	(_l+1)& (0+255),b
  1666   002166  0E00               	movlw	0
  1667   002168  6FE5               	movwf	_l& (0+255),b
  1668   00216A                     
  1669                           ; BSR set to: 0
  1670                           ;main.c: 245:             LATA5 = 0;
  1671   00216A  9A89               	bcf	3977,5,c	;volatile
  1672   00216C                     l485:
  1673   00216C  EFB6  F010         	goto	l485
  1674   002170                     l488:
  1675   002170  0012               	return		;funcret
  1676   002172                     __end_of_trip_protec_current:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _sprintf *****************
  1680 ;; Defined at:
  1681 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  s               2   77[BANK0 ] PTR unsigned char 
  1684 ;;		 -> valor_string(14), 
  1685 ;;  fmt             1   79[BANK0 ] PTR const unsigned char 
  1686 ;;		 -> STR_1(12), 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  f              12   85[BANK0 ] struct _IO_FILE
  1689 ;;  ret             2    0        int 
  1690 ;;  ap              1   84[BANK0 ] PTR void [1]
  1691 ;;		 -> ?_sprintf(2), 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2   77[BANK0 ] int 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         0       7       0       0       0       0       0       0       0
  1702 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1704 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1705 ;;Total ram usage:       20 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 12
  1708 ;; This function calls:
  1709 ;;		_vfprintf
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text2
  1716   0032E0                     __ptext2:
  1717                           	callstack 0
  1718   0032E0                     _sprintf:
  1719                           	callstack 18
  1720   0032E0  0EB0               	movlw	low (?_sprintf+3)
  1721   0032E2  0100               	movlb	0	; () banked
  1722   0032E4  6FB4               	movwf	sprintf@ap& (0+255),b
  1723   0032E6  C0AD  F0B5         	movff	sprintf@s,sprintf@f
  1724   0032EA  C0AE  F0B6         	movff	sprintf@s+1,sprintf@f+1
  1725   0032EE                     
  1726                           ; BSR set to: 0
  1727   0032EE  0E00               	movlw	0
  1728   0032F0  6FB9               	movwf	(sprintf@f+4)& (0+255),b
  1729   0032F2  0E00               	movlw	0
  1730   0032F4  6FB8               	movwf	(sprintf@f+3)& (0+255),b
  1731   0032F6                     
  1732                           ; BSR set to: 0
  1733   0032F6  0E00               	movlw	0
  1734   0032F8  6FC0               	movwf	(sprintf@f+11)& (0+255),b
  1735   0032FA  0E00               	movlw	0
  1736   0032FC  6FBF               	movwf	(sprintf@f+10)& (0+255),b
  1737   0032FE                     
  1738                           ; BSR set to: 0
  1739   0032FE  0EB5               	movlw	low sprintf@f
  1740   003300  6FA9               	movwf	vfprintf@fp& (0+255),b
  1741   003302  C0AF  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  1742   003306  0EB4               	movlw	low sprintf@ap
  1743   003308  6FAB               	movwf	vfprintf@ap& (0+255),b
  1744   00330A  EC4F  F019         	call	_vfprintf	;wreg free
  1745   00330E  0100               	movlb	0	; () banked
  1746   003310  51B8               	movf	(sprintf@f+3)& (0+255),w,b
  1747   003312  25AD               	addwf	sprintf@s& (0+255),w,b
  1748   003314  6ED9               	movwf	fsr2l,c
  1749   003316  51B9               	movf	(sprintf@f+4)& (0+255),w,b
  1750   003318  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1751   00331A  6EDA               	movwf	fsr2h,c
  1752   00331C  6ADF               	clrf	indf2,c
  1753   00331E                     
  1754                           ; BSR set to: 0
  1755   00331E  0012               	return		;funcret
  1756   003320                     __end_of_sprintf:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _vfprintf *****************
  1760 ;; Defined at:
  1761 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  1764 ;;		 -> sprintf@f(12), 
  1765 ;;  fmt             1   74[BANK0 ] PTR const unsigned char 
  1766 ;;		 -> STR_1(12), 
  1767 ;;  ap              1   75[BANK0 ] PTR PTR void 
  1768 ;;		 -> sprintf@ap(1), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  cfmt            1   76[BANK0 ] PTR unsigned char 
  1771 ;;		 -> STR_1(12), 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2   73[BANK0 ] int 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         0       3       0       0       0       0       0       0       0
  1782 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1784 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        4 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 11
  1788 ;; This function calls:
  1789 ;;		_vfpfcnvrt
  1790 ;; This function is called by:
  1791 ;;		_sprintf
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text3
  1796   00329E                     __ptext3:
  1797                           	callstack 0
  1798   00329E                     _vfprintf:
  1799                           	callstack 18
  1800   00329E                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1802   00329E  C0AA  F0AC         	movff	vfprintf@fmt,vfprintf@cfmt
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1805   0032A2  EF5C  F019         	goto	l5759
  1806   0032A6                     l5757:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1809   0032A6  C0A9  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1810   0032AA  0EAC               	movlw	low vfprintf@cfmt
  1811   0032AC  0100               	movlb	0	; () banked
  1812   0032AE  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1813   0032B0  C0AB  F0A0         	movff	vfprintf@ap,vfpfcnvrt@ap
  1814   0032B4  ECC4  F011         	call	_vfpfcnvrt	;wreg free
  1815   0032B8                     l5759:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1818   0032B8  C0AC  FFF6         	movff	vfprintf@cfmt,tblptrl
  1819   0032BC                     	if	1	;There is more than 1 active tblptr byte
  1820   0032BC  0E08               	movlw	high __smallconst
  1821   0032BE  6EF7               	movwf	tblptrh,c
  1822   0032C0                     	endif
  1823   0032C0                     	if	0	;tblptru may be non-zero
  1824   0032C0                     	endif
  1825   0032C0                     	if	0	;tblptru may be non-zero
  1826   0032C0                     	endif
  1827   0032C0  0008               	tblrd		*
  1828   0032C2  50F5               	movf	tablat,w,c
  1829   0032C4  0900               	iorlw	0
  1830   0032C6  A4D8               	btfss	status,2,c
  1831   0032C8  EF68  F019         	goto	u6101
  1832   0032CC  EF6A  F019         	goto	u6100
  1833   0032D0                     u6101:
  1834   0032D0  EF53  F019         	goto	l5757
  1835   0032D4                     u6100:
  1836   0032D4                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1838   0032D4  0E00               	movlw	0
  1839   0032D6  0100               	movlb	0	; () banked
  1840   0032D8  6FAA               	movwf	(?_vfprintf+1)& (0+255),b
  1841   0032DA  0E00               	movlw	0
  1842   0032DC  6FA9               	movwf	?_vfprintf& (0+255),b
  1843   0032DE                     
  1844                           ; BSR set to: 0
  1845   0032DE  0012               	return		;funcret
  1846   0032E0                     __end_of_vfprintf:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _vfpfcnvrt *****************
  1850 ;; Defined at:
  1851 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  1854 ;;		 -> sprintf@f(12), 
  1855 ;;  fmt             1   63[BANK0 ] PTR PTR unsigned char 
  1856 ;;		 -> vfprintf@cfmt(1), 
  1857 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1858 ;;		 -> sprintf@ap(1), 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  convarg         4   67[BANK0 ] struct .
  1861 ;;  cp              1   72[BANK0 ] PTR unsigned char 
  1862 ;;		 -> STR_1(12), 
  1863 ;;  c               1   71[BANK0 ] unsigned char 
  1864 ;;  done            1    0        _Bool 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         0       3       0       0       0       0       0       0       0
  1875 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1877 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1878 ;;Total ram usage:       11 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 10
  1881 ;; This function calls:
  1882 ;;		_efgtoa
  1883 ;;		_fputc
  1884 ;;		_read_prec_or_width
  1885 ;; This function is called by:
  1886 ;;		_vfprintf
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text4
  1891   002388                     __ptext4:
  1892                           	callstack 0
  1893   002388                     _vfpfcnvrt:
  1894                           	callstack 18
  1895   002388                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1897   002388  0100               	movlb	0	; () banked
  1898   00238A  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1899   00238C  6ED9               	movwf	fsr2l,c
  1900   00238E  6ADA               	clrf	fsr2h,c
  1901   002390  CFDF FFF6          	movff	indf2,tblptrl
  1902   002394                     	if	1	;There is more than 1 active tblptr byte
  1903   002394  0E08               	movlw	high __smallconst
  1904   002396  6EF7               	movwf	tblptrh,c
  1905   002398                     	endif
  1906   002398                     	if	0	;tblptru may be non-zero
  1907   002398                     	endif
  1908   002398                     	if	0	;tblptru may be non-zero
  1909   002398                     	endif
  1910   002398  0008               	tblrd		*
  1911   00239A  50F5               	movf	tablat,w,c
  1912   00239C  0A25               	xorlw	37
  1913   00239E  A4D8               	btfss	status,2,c
  1914   0023A0  EFD4  F011         	goto	u5941
  1915   0023A4  EFD6  F011         	goto	u5940
  1916   0023A8                     u5941:
  1917   0023A8  EFBA  F012         	goto	l5621
  1918   0023AC                     u5940:
  1919   0023AC                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1922   0023AC  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1923   0023AE  6ED9               	movwf	fsr2l,c
  1924   0023B0  6ADA               	clrf	fsr2h,c
  1925   0023B2  2ADF               	incf	indf2,f,c
  1926   0023B4                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1929   0023B4  0E00               	movlw	0
  1930   0023B6  6FE2               	movwf	(_width+1)& (0+255),b
  1931   0023B8  0E00               	movlw	0
  1932   0023BA  6FE1               	movwf	_width& (0+255),b
  1933   0023BC  C0E1  F0FD         	movff	_width,_flags
  1934   0023C0                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1937   0023C0  69E3               	setf	_prec& (0+255),b
  1938   0023C2  69E4               	setf	(_prec+1)& (0+255),b
  1939   0023C4                     
  1940                           ; BSR set to: 0
  1941                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1942   0023C4  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1943   0023C6  6ED9               	movwf	fsr2l,c
  1944   0023C8  6ADA               	clrf	fsr2h,c
  1945   0023CA  CFDF FFF6          	movff	indf2,tblptrl
  1946   0023CE                     	if	1	;There is more than 1 active tblptr byte
  1947   0023CE  0E08               	movlw	high __smallconst
  1948   0023D0  6EF7               	movwf	tblptrh,c
  1949   0023D2                     	endif
  1950   0023D2                     	if	0	;tblptru may be non-zero
  1951   0023D2                     	endif
  1952   0023D2                     	if	0	;tblptru may be non-zero
  1953   0023D2                     	endif
  1954   0023D2  0008               	tblrd		*
  1955   0023D4  50F5               	movf	tablat,w,c
  1956   0023D6  0A2E               	xorlw	46
  1957   0023D8  A4D8               	btfss	status,2,c
  1958   0023DA  EFF1  F011         	goto	u5951
  1959   0023DE  EFF3  F011         	goto	u5950
  1960   0023E2                     u5951:
  1961   0023E2  EF01  F012         	goto	l5583
  1962   0023E6                     u5950:
  1963   0023E6                     
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1966   0023E6  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1967   0023E8  6ED9               	movwf	fsr2l,c
  1968   0023EA  6ADA               	clrf	fsr2h,c
  1969   0023EC  2ADF               	incf	indf2,f,c
  1970   0023EE                     
  1971                           ; BSR set to: 0
  1972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1973   0023EE  C09F  F00B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1974   0023F2  C0A0  F00C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1975   0023F6  EC87  F017         	call	_read_prec_or_width	;wreg free
  1976   0023FA  C00B  F0E3         	movff	?_read_prec_or_width,_prec
  1977   0023FE  C00C  F0E4         	movff	?_read_prec_or_width+1,_prec+1
  1978   002402                     l5583:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1981   002402  0100               	movlb	0	; () banked
  1982   002404  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1983   002406  6ED9               	movwf	fsr2l,c
  1984   002408  6ADA               	clrf	fsr2h,c
  1985   00240A  50DF               	movf	indf2,w,c
  1986   00240C  6FA8               	movwf	vfpfcnvrt@cp& (0+255),b
  1987   00240E                     
  1988                           ; BSR set to: 0
  1989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1990   00240E  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1991   002412                     	if	1	;There is more than 1 active tblptr byte
  1992   002412  0E08               	movlw	high __smallconst
  1993   002414  6EF7               	movwf	tblptrh,c
  1994   002416                     	endif
  1995   002416                     	if	0	;tblptru may be non-zero
  1996   002416                     	endif
  1997   002416                     	if	0	;tblptru may be non-zero
  1998   002416                     	endif
  1999   002416  0008               	tblrd		*
  2000   002418  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2003   00241C  EF1B  F012         	goto	l5595
  2004   002420                     l5587:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2008   002420  2BA8               	incf	vfpfcnvrt@cp& (0+255),f,b
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  2011   002422  EF34  F012         	goto	l5597
  2012   002426                     l5589:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2016   002426  0E6C               	movlw	108
  2017   002428  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2020   00242A  EF34  F012         	goto	l5597
  2021   00242E                     l5591:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2025   00242E  0E00               	movlw	0
  2026   002430  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2029   002432  EF34  F012         	goto	l5597
  2030   002436                     l5595:
  2031                           
  2032                           ; BSR set to: 0
  2033   002436  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  2034   002438  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2035   00243A  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2036                           
  2037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2038                           ; Switch size 1, requested type "simple"
  2039                           ; Number of cases is 1, Range of values is 0 to 0
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte            4     3 (average)
  2043                           ;	Chosen strategy is simple_byte
  2044   00243C  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2045   00243E  0A00               	xorlw	0	; case 0
  2046   002440  B4D8               	btfsc	status,2,c
  2047   002442  EF25  F012         	goto	l6081
  2048   002446  EF17  F012         	goto	l5591
  2049   00244A                     l6081:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ; Switch size 1, requested type "simple"
  2053                           ; Number of cases is 3, Range of values is 76 to 108
  2054                           ; switch strategies available:
  2055                           ; Name         Instructions Cycles
  2056                           ; simple_byte           10     6 (average)
  2057                           ;	Chosen strategy is simple_byte
  2058   00244A  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2059   00244C  0A4C               	xorlw	76	; case 76
  2060   00244E  B4D8               	btfsc	status,2,c
  2061   002450  EF10  F012         	goto	l5587
  2062   002454  0A2A               	xorlw	42	; case 102
  2063   002456  B4D8               	btfsc	status,2,c
  2064   002458  EF13  F012         	goto	l5589
  2065   00245C  0A0A               	xorlw	10	; case 108
  2066   00245E  B4D8               	btfsc	status,2,c
  2067   002460  EF10  F012         	goto	l5587
  2068   002464  EF17  F012         	goto	l5591
  2069   002468                     l5597:
  2070                           
  2071                           ; BSR set to: 0
  2072   002468  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2073   00246C                     	if	1	;There is more than 1 active tblptr byte
  2074   00246C  0E08               	movlw	high __smallconst
  2075   00246E  6EF7               	movwf	tblptrh,c
  2076   002470                     	endif
  2077   002470                     	if	0	;tblptru may be non-zero
  2078   002470                     	endif
  2079   002470                     	if	0	;tblptru may be non-zero
  2080   002470                     	endif
  2081   002470  0008               	tblrd		*
  2082   002472  50F5               	movf	tablat,w,c
  2083   002474  0A66               	xorlw	102
  2084   002476  A4D8               	btfss	status,2,c
  2085   002478  EF40  F012         	goto	u5961
  2086   00247C  EF42  F012         	goto	u5960
  2087   002480                     u5961:
  2088   002480  EFB3  F012         	goto	l5617
  2089   002484                     u5960:
  2090   002484  EF6C  F012         	goto	l5605
  2091   002488                     l5599:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2095   002488  51A0               	movf	vfpfcnvrt@ap& (0+255),w,b
  2096   00248A  6ED9               	movwf	fsr2l,c
  2097   00248C  6ADA               	clrf	fsr2h,c
  2098   00248E  CFDF F0A1          	movff	indf2,??_vfpfcnvrt
  2099   002492  0E04               	movlw	4
  2100   002494  26DF               	addwf	indf2,f,c
  2101   002496  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2102   002498  6ED9               	movwf	fsr2l,c
  2103   00249A  6ADA               	clrf	fsr2h,c
  2104   00249C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  2105   0024A0  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  2106   0024A4  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  2107   0024A8  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2110   0024AC  EF81  F012         	goto	l5607
  2111   0024B0                     l5601:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2115   0024B0  51A0               	movf	vfpfcnvrt@ap& (0+255),w,b
  2116   0024B2  6ED9               	movwf	fsr2l,c
  2117   0024B4  6ADA               	clrf	fsr2h,c
  2118   0024B6  CFDF F0A1          	movff	indf2,??_vfpfcnvrt
  2119   0024BA  0E04               	movlw	4
  2120   0024BC  26DF               	addwf	indf2,f,c
  2121   0024BE  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2122   0024C0  6ED9               	movwf	fsr2l,c
  2123   0024C2  6ADA               	clrf	fsr2h,c
  2124   0024C4  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  2125   0024C8  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  2126   0024CC  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  2127   0024D0  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2130   0024D4  EF81  F012         	goto	l5607
  2131   0024D8                     l5605:
  2132                           
  2133                           ; BSR set to: 0
  2134   0024D8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  2135   0024DA  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2136   0024DC  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2137                           
  2138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 1, Range of values is 0 to 0
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte            4     3 (average)
  2144                           ;	Chosen strategy is simple_byte
  2145   0024DE  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2146   0024E0  0A00               	xorlw	0	; case 0
  2147   0024E2  B4D8               	btfsc	status,2,c
  2148   0024E4  EF76  F012         	goto	l6083
  2149   0024E8  EF81  F012         	goto	l5607
  2150   0024EC                     l6083:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ; Switch size 1, requested type "simple"
  2154                           ; Number of cases is 2, Range of values is 76 to 108
  2155                           ; switch strategies available:
  2156                           ; Name         Instructions Cycles
  2157                           ; simple_byte            7     4 (average)
  2158                           ;	Chosen strategy is simple_byte
  2159   0024EC  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2160   0024EE  0A4C               	xorlw	76	; case 76
  2161   0024F0  B4D8               	btfsc	status,2,c
  2162   0024F2  EF58  F012         	goto	l5601
  2163   0024F6  0A20               	xorlw	32	; case 108
  2164   0024F8  B4D8               	btfsc	status,2,c
  2165   0024FA  EF44  F012         	goto	l5599
  2166   0024FE  EF81  F012         	goto	l5607
  2167   002502                     l5607:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2171   002502  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2172   002504  6ED9               	movwf	fsr2l,c
  2173   002506  6ADA               	clrf	fsr2h,c
  2174   002508  29A8               	incf	vfpfcnvrt@cp& (0+255),w,b
  2175   00250A  6EDF               	movwf	indf2,c
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2178   00250C  EF9D  F012         	goto	l5615
  2179   002510                     l5609:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2183   002510  C09E  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2184   002514  C0A3  F06B         	movff	vfpfcnvrt@convarg,efgtoa@f
  2185   002518  C0A4  F06C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2186   00251C  C0A5  F06D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2187   002520  C0A6  F06E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2188   002524  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2189   002528                     	if	1	;There is more than 1 active tblptr byte
  2190   002528  0E08               	movlw	high __smallconst
  2191   00252A  6EF7               	movwf	tblptrh,c
  2192   00252C                     	endif
  2193   00252C                     	if	0	;tblptru may be non-zero
  2194   00252C                     	endif
  2195   00252C                     	if	0	;tblptru may be non-zero
  2196   00252C                     	endif
  2197   00252C  0008               	tblrd		*
  2198   00252E  CFF5 F06F          	movff	tablat,efgtoa@c
  2199   002532  EC12  F004         	call	_efgtoa	;wreg free
  2200   002536  EFCB  F012         	goto	l1291
  2201   00253A                     l5615:
  2202                           
  2203                           ; BSR set to: 0
  2204   00253A  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2205   00253E                     	if	1	;There is more than 1 active tblptr byte
  2206   00253E  0E08               	movlw	high __smallconst
  2207   002540  6EF7               	movwf	tblptrh,c
  2208   002542                     	endif
  2209   002542                     	if	0	;tblptru may be non-zero
  2210   002542                     	endif
  2211   002542                     	if	0	;tblptru may be non-zero
  2212   002542                     	endif
  2213   002542  0008               	tblrd		*
  2214   002544  50F5               	movf	tablat,w,c
  2215   002546  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2216   002548  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2217                           
  2218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2219                           ; Switch size 1, requested type "simple"
  2220                           ; Number of cases is 1, Range of values is 0 to 0
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte            4     3 (average)
  2224                           ;	Chosen strategy is simple_byte
  2225   00254A  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2226   00254C  0A00               	xorlw	0	; case 0
  2227   00254E  B4D8               	btfsc	status,2,c
  2228   002550  EFAC  F012         	goto	l6085
  2229   002554  EFB3  F012         	goto	l5617
  2230   002558                     l6085:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ; Switch size 1, requested type "simple"
  2234                           ; Number of cases is 1, Range of values is 102 to 102
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte            4     3 (average)
  2238                           ;	Chosen strategy is simple_byte
  2239   002558  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2240   00255A  0A66               	xorlw	102	; case 102
  2241   00255C  B4D8               	btfsc	status,2,c
  2242   00255E  EF88  F012         	goto	l5609
  2243   002562  EFB3  F012         	goto	l5617
  2244   002566                     l5617:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2247   002566  0100               	movlb	0	; () banked
  2248   002568  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2249   00256A  6ED9               	movwf	fsr2l,c
  2250   00256C  6ADA               	clrf	fsr2h,c
  2251   00256E  2ADF               	incf	indf2,f,c
  2252   002570  EFCB  F012         	goto	l1291
  2253   002574                     l5621:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2257   002574  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2258   002576  6ED9               	movwf	fsr2l,c
  2259   002578  6ADA               	clrf	fsr2h,c
  2260   00257A  CFDF FFF6          	movff	indf2,tblptrl
  2261   00257E                     	if	1	;There is more than 1 active tblptr byte
  2262   00257E  0E08               	movlw	high __smallconst
  2263   002580  6EF7               	movwf	tblptrh,c
  2264   002582                     	endif
  2265   002582                     	if	0	;tblptru may be non-zero
  2266   002582                     	endif
  2267   002582                     	if	0	;tblptru may be non-zero
  2268   002582                     	endif
  2269   002582  0008               	tblrd		*
  2270   002584  50F5               	movf	tablat,w,c
  2271   002586  6E07               	movwf	fputc@c^0,c
  2272   002588  6A08               	clrf	(fputc@c+1)^0,c
  2273   00258A  C09E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2274   00258E  ECD5  F016         	call	_fputc	;wreg free
  2275   002592  EFB3  F012         	goto	l5617
  2276   002596                     l1291:
  2277   002596  0012               	return		;funcret
  2278   002598                     __end_of_vfpfcnvrt:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _read_prec_or_width *****************
  2282 ;; Defined at:
  2283 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  fmt             1   10[COMRAM] PTR PTR const unsigned c
  2286 ;;		 -> vfprintf@cfmt(1), 
  2287 ;;  ap              1   11[COMRAM] PTR PTR void [1]
  2288 ;;		 -> sprintf@ap(1), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  c               1   12[COMRAM] unsigned char 
  2291 ;;  n               2   13[COMRAM] int 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2   10[COMRAM] int 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2301 ;;      Params:         2       0       0       0       0       0       0       0       0
  2302 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2304 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2305 ;;Total ram usage:        5 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 5
  2308 ;; This function calls:
  2309 ;;		___wmul
  2310 ;; This function is called by:
  2311 ;;		_vfpfcnvrt
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text5
  2316   002F0E                     __ptext5:
  2317                           	callstack 0
  2318   002F0E                     _read_prec_or_width:
  2319                           	callstack 22
  2320   002F0E                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2322   002F0E  0E00               	movlw	0
  2323   002F10  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2324   002F12  0E00               	movlw	0
  2325   002F14  6E0E               	movwf	read_prec_or_width@n^0,c
  2326   002F16                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2328   002F16  500B               	movf	read_prec_or_width@fmt^0,w,c
  2329   002F18  6ED9               	movwf	fsr2l,c
  2330   002F1A  6ADA               	clrf	fsr2h,c
  2331   002F1C  CFDF FFF6          	movff	indf2,tblptrl
  2332   002F20                     	if	1	;There is more than 1 active tblptr byte
  2333   002F20  0E08               	movlw	high __smallconst
  2334   002F22  6EF7               	movwf	tblptrh,c
  2335   002F24                     	endif
  2336   002F24                     	if	0	;tblptru may be non-zero
  2337   002F24                     	endif
  2338   002F24                     	if	0	;tblptru may be non-zero
  2339   002F24                     	endif
  2340   002F24  0008               	tblrd		*
  2341   002F26  50F5               	movf	tablat,w,c
  2342   002F28  0A2A               	xorlw	42
  2343   002F2A  A4D8               	btfss	status,2,c
  2344   002F2C  EF9A  F017         	goto	u5921
  2345   002F30  EF9C  F017         	goto	u5920
  2346   002F34                     u5921:
  2347   002F34  EFC2  F017         	goto	l5529
  2348   002F38                     u5920:
  2349   002F38                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2351   002F38  500B               	movf	read_prec_or_width@fmt^0,w,c
  2352   002F3A  6ED9               	movwf	fsr2l,c
  2353   002F3C  6ADA               	clrf	fsr2h,c
  2354   002F3E  2ADF               	incf	indf2,f,c
  2355   002F40                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2357   002F40  500C               	movf	read_prec_or_width@ap^0,w,c
  2358   002F42  6ED9               	movwf	fsr2l,c
  2359   002F44  6ADA               	clrf	fsr2h,c
  2360   002F46  0E02               	movlw	2
  2361   002F48  26DF               	addwf	indf2,f,c
  2362   002F4A  5CDF               	subwf	indf2,w,c
  2363   002F4C  6ED9               	movwf	fsr2l,c
  2364   002F4E  6ADA               	clrf	fsr2h,c
  2365   002F50  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  2366   002F54  CFDE F00F          	movff	postinc2,read_prec_or_width@n+1
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2369   002F58  EFD5  F017         	goto	l1267
  2370   002F5C                     l5525:
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2373   002F5C  C00E  F005         	movff	read_prec_or_width@n,___wmul@multiplier
  2374   002F60  C00F  F006         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2375   002F64  0E00               	movlw	0
  2376   002F66  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2377   002F68  0E0A               	movlw	10
  2378   002F6A  6E07               	movwf	___wmul@multiplicand^0,c
  2379   002F6C  ECCF  F01A         	call	___wmul	;wreg free
  2380   002F70  500D               	movf	read_prec_or_width@c^0,w,c
  2381   002F72  2405               	addwf	?___wmul^0,w,c
  2382   002F74  6E0E               	movwf	read_prec_or_width@n^0,c
  2383   002F76  0E00               	movlw	0
  2384   002F78  2006               	addwfc	(?___wmul+1)^0,w,c
  2385   002F7A  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2386   002F7C                     
  2387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2388   002F7C  500B               	movf	read_prec_or_width@fmt^0,w,c
  2389   002F7E  6ED9               	movwf	fsr2l,c
  2390   002F80  6ADA               	clrf	fsr2h,c
  2391   002F82  2ADF               	incf	indf2,f,c
  2392   002F84                     l5529:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2395   002F84  500B               	movf	read_prec_or_width@fmt^0,w,c
  2396   002F86  6ED9               	movwf	fsr2l,c
  2397   002F88  6ADA               	clrf	fsr2h,c
  2398   002F8A  CFDF FFF6          	movff	indf2,tblptrl
  2399   002F8E                     	if	1	;There is more than 1 active tblptr byte
  2400   002F8E  0E08               	movlw	high __smallconst
  2401   002F90  6EF7               	movwf	tblptrh,c
  2402   002F92                     	endif
  2403   002F92                     	if	0	;tblptru may be non-zero
  2404   002F92                     	endif
  2405   002F92                     	if	0	;tblptru may be non-zero
  2406   002F92                     	endif
  2407   002F92  0008               	tblrd		*
  2408   002F94  50F5               	movf	tablat,w,c
  2409   002F96  0FD0               	addlw	208
  2410   002F98  6E0D               	movwf	read_prec_or_width@c^0,c
  2411   002F9A  0E09               	movlw	9
  2412   002F9C  640D               	cpfsgt	read_prec_or_width@c^0,c
  2413   002F9E  EFD3  F017         	goto	u5931
  2414   002FA2  EFD5  F017         	goto	u5930
  2415   002FA6                     u5931:
  2416   002FA6  EFAE  F017         	goto	l5525
  2417   002FAA                     u5930:
  2418   002FAA                     l1267:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2421   002FAA  C00E  F00B         	movff	read_prec_or_width@n,?_read_prec_or_width
  2422   002FAE  C00F  F00C         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2423   002FB2  0012               	return		;funcret
  2424   002FB4                     __end_of_read_prec_or_width:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function ___wmul *****************
  2428 ;; Defined at:
  2429 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  multiplier      2    4[COMRAM] unsigned int 
  2432 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  product         2    8[COMRAM] unsigned int 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2    4[COMRAM] unsigned int 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0, prodl, prodh
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         4       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2447 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2448 ;;Total ram usage:        6 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; Hardware stack levels required when called: 4
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_read_prec_or_width
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text6
  2459   00359E                     __ptext6:
  2460                           	callstack 0
  2461   00359E                     ___wmul:
  2462                           	callstack 22
  2463   00359E  5005               	movf	___wmul@multiplier^0,w,c
  2464   0035A0  0207               	mulwf	___wmul@multiplicand^0,c
  2465   0035A2  CFF3 F009          	movff	prodl,___wmul@product
  2466   0035A6  CFF4 F00A          	movff	prodh,___wmul@product+1
  2467   0035AA  5005               	movf	___wmul@multiplier^0,w,c
  2468   0035AC  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2469   0035AE  50F3               	movf	243,w,c
  2470   0035B0  260A               	addwf	(___wmul@product+1)^0,f,c
  2471   0035B2  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2472   0035B4  0207               	mulwf	___wmul@multiplicand^0,c
  2473   0035B6  50F3               	movf	243,w,c
  2474   0035B8  260A               	addwf	(___wmul@product+1)^0,f,c
  2475   0035BA  C009  F005         	movff	___wmul@product,?___wmul
  2476   0035BE  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2477   0035C2  0012               	return		;funcret
  2478   0035C4                     __end_of___wmul:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _efgtoa *****************
  2482 ;; Defined at:
  2483 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2486 ;;		 -> sprintf@f(12), 
  2487 ;;  f               4   11[BANK0 ] PTR struct _IO_FILE
  2488 ;;  c               1   15[BANK0 ] unsigned char 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  u               4   58[BANK0 ] struct flui
  2491 ;;  g               4   52[BANK0 ] struct flui
  2492 ;;  l               4   47[BANK0 ] struct flui
  2493 ;;  h               4   43[BANK0 ] struct flui
  2494 ;;  ou              4   37[BANK0 ] struct flui
  2495 ;;  n               2   56[BANK0 ] int 
  2496 ;;  i               2   41[BANK0 ] int 
  2497 ;;  w               2   35[BANK0 ] int 
  2498 ;;  e               2   33[BANK0 ] int 
  2499 ;;  m               2   31[BANK0 ] int 
  2500 ;;  d               2   29[BANK0 ] int 
  2501 ;;  t               2   22[BANK0 ] int 
  2502 ;;  p               2   20[BANK0 ] int 
  2503 ;;  ne              2   18[BANK0 ] int 
  2504 ;;  sign            1   51[BANK0 ] unsigned char 
  2505 ;;  nmode           1   28[BANK0 ] unsigned char 
  2506 ;;  mode            1   27[BANK0 ] unsigned char 
  2507 ;;  pp              1   26[BANK0 ] unsigned char 
  2508 ;;  esign           1    0        unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2518 ;;      Params:         0       6       0       0       0       0       0       0       0
  2519 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2520 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2521 ;;      Totals:         0      52       0       0       0       0       0       0       0
  2522 ;;Total ram usage:       52 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 9
  2525 ;; This function calls:
  2526 ;;		___fladd
  2527 ;;		___fldiv
  2528 ;;		___fleq
  2529 ;;		___flge
  2530 ;;		___flmul
  2531 ;;		___flneg
  2532 ;;		___flsub
  2533 ;;		___fltol
  2534 ;;		___fpclassifyf
  2535 ;;		_floorf
  2536 ;;		_labs
  2537 ;;		_memcpy
  2538 ;;		_pad
  2539 ;;		_strcpy
  2540 ;; This function is called by:
  2541 ;;		_vfpfcnvrt
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text7
  2546   000824                     __ptext7:
  2547                           	callstack 0
  2548   000824                     _efgtoa:
  2549                           	callstack 18
  2550   000824                     
  2551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2552   000824  0E00               	movlw	0
  2553   000826  0100               	movlb	0	; () banked
  2554   000828  6F93               	movwf	efgtoa@sign& (0+255),b
  2555   00082A                     
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2558   00082A  C06B  F094         	movff	efgtoa@f,efgtoa@g
  2559   00082E  C06C  F095         	movff	efgtoa@f+1,efgtoa@g+1
  2560   000832  C06D  F096         	movff	efgtoa@f+2,efgtoa@g+2
  2561   000836  C06E  F097         	movff	efgtoa@f+3,efgtoa@g+3
  2562   00083A                     
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2565   00083A  BF97               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2566   00083C  EF24  F004         	goto	u5600
  2567   000840  EF22  F004         	goto	u5601
  2568   000844                     u5601:
  2569   000844  EF38  F004         	goto	l5305
  2570   000848                     u5600:
  2571   000848                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2574   000848  0E01               	movlw	1
  2575   00084A  6F93               	movwf	efgtoa@sign& (0+255),b
  2576   00084C                     
  2577                           ; BSR set to: 0
  2578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2579   00084C  C094  F005         	movff	efgtoa@g,___flneg@f1
  2580   000850  C095  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2581   000854  C096  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2582   000858  C097  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2583   00085C  EC47  F01A         	call	___flneg	;wreg free
  2584   000860  C005  F094         	movff	?___flneg,efgtoa@g
  2585   000864  C006  F095         	movff	?___flneg+1,efgtoa@g+1
  2586   000868  C007  F096         	movff	?___flneg+2,efgtoa@g+2
  2587   00086C  C008  F097         	movff	?___flneg+3,efgtoa@g+3
  2588   000870                     l5305:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2591   000870  0E00               	movlw	0
  2592   000872  0100               	movlb	0	; () banked
  2593   000874  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2594   000876  0E00               	movlw	0
  2595   000878  6F98               	movwf	efgtoa@n& (0+255),b
  2596   00087A                     
  2597                           ; BSR set to: 0
  2598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2599   00087A  C0E1  F083         	movff	_width,efgtoa@w
  2600   00087E  C0E2  F084         	movff	_width+1,efgtoa@w+1
  2601   000882                     
  2602                           ; BSR set to: 0
  2603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2604   000882  5193               	movf	efgtoa@sign& (0+255),w,b
  2605   000884  B4D8               	btfsc	status,2,c
  2606   000886  EF47  F004         	goto	u5611
  2607   00088A  EF49  F004         	goto	u5610
  2608   00088E                     u5611:
  2609   00088E  EF5D  F004         	goto	l5319
  2610   000892                     u5610:
  2611   000892                     
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2614   000892  5193               	movf	efgtoa@sign& (0+255),w,b
  2615   000894  A4D8               	btfss	status,2,c
  2616   000896  EF4F  F004         	goto	u5621
  2617   00089A  EF51  F004         	goto	u5620
  2618   00089E                     u5621:
  2619   00089E  EF57  F004         	goto	l5315
  2620   0008A2                     u5620:
  2621   0008A2                     
  2622                           ; BSR set to: 0
  2623   0008A2  0E00               	movlw	0
  2624   0008A4  6F79               	movwf	(_efgtoa$1965+1)& (0+255),b
  2625   0008A6  0E2B               	movlw	43
  2626   0008A8  6F78               	movwf	_efgtoa$1965& (0+255),b
  2627   0008AA  EF5B  F004         	goto	l5317
  2628   0008AE                     l5315:
  2629                           
  2630                           ; BSR set to: 0
  2631   0008AE  0E00               	movlw	0
  2632   0008B0  6F79               	movwf	(_efgtoa$1965+1)& (0+255),b
  2633   0008B2  0E2D               	movlw	45
  2634   0008B4  6F78               	movwf	_efgtoa$1965& (0+255),b
  2635   0008B6                     l5317:
  2636                           
  2637                           ; BSR set to: 0
  2638   0008B6  C078  F093         	movff	_efgtoa$1965,efgtoa@sign
  2639   0008BA                     l5319:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2643   0008BA  C094  F005         	movff	efgtoa@g,___fpclassifyf@x
  2644   0008BE  C095  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2645   0008C2  C096  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2646   0008C6  C097  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2647   0008CA  EC56  F016         	call	___fpclassifyf	;wreg free
  2648   0008CE  0405               	decf	?___fpclassifyf^0,w,c
  2649   0008D0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2650   0008D2  A4D8               	btfss	status,2,c
  2651   0008D4  EF6E  F004         	goto	u5631
  2652   0008D8  EF70  F004         	goto	u5630
  2653   0008DC                     u5631:
  2654   0008DC  EF9F  F004         	goto	l5337
  2655   0008E0                     u5630:
  2656   0008E0                     
  2657                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2658   0008E0  0100               	movlb	0	; () banked
  2659   0008E2  5193               	movf	efgtoa@sign& (0+255),w,b
  2660   0008E4  B4D8               	btfsc	status,2,c
  2661   0008E6  EF77  F004         	goto	u5641
  2662   0008EA  EF79  F004         	goto	u5640
  2663   0008EE                     u5641:
  2664   0008EE  EF82  F004         	goto	l5329
  2665   0008F2                     u5640:
  2666   0008F2                     
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2669   0008F2  C093  F104         	movff	efgtoa@sign,_dbuf
  2670   0008F6                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2673   0008F6  0783               	decf	efgtoa@w& (0+255),f,b
  2674   0008F8  A0D8               	btfss	status,0,c
  2675   0008FA  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  2676   0008FC                     
  2677                           ; BSR set to: 0
  2678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2679   0008FC  0E00               	movlw	0
  2680   0008FE  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2681   000900  0E01               	movlw	1
  2682   000902  6F98               	movwf	efgtoa@n& (0+255),b
  2683   000904                     l5329:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2687   000904  0E04               	movlw	low _dbuf
  2688   000906  2598               	addwf	efgtoa@n& (0+255),w,b
  2689   000908  6E05               	movwf	strcpy@dest^0,c
  2690   00090A  0E01               	movlw	high _dbuf
  2691   00090C  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2692   00090E  6E06               	movwf	(strcpy@dest+1)^0,c
  2693   000910  0E1B               	movlw	low STR_2
  2694   000912  6E07               	movwf	strcpy@src^0,c
  2695   000914  ECF0  F019         	call	_strcpy	;wreg free
  2696   000918                     l5331:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2699   000918  0100               	movlb	0	; () banked
  2700   00091A  0EFD               	movlw	253
  2701   00091C  2783               	addwf	efgtoa@w& (0+255),f,b
  2702   00091E  0EFF               	movlw	255
  2703   000920  2384               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2704   000922                     
  2705                           ; BSR set to: 0
  2706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2707   000922  C06A  F015         	movff	efgtoa@fp,pad@fp
  2708   000926  0E04               	movlw	low _dbuf
  2709   000928  6E16               	movwf	pad@buf^0,c
  2710   00092A  0E01               	movlw	high _dbuf
  2711   00092C  6E17               	movwf	(pad@buf+1)^0,c
  2712   00092E  C083  F018         	movff	efgtoa@w,pad@p
  2713   000932  C084  F019         	movff	efgtoa@w+1,pad@p+1
  2714   000936  EC14  F018         	call	_pad	;wreg free
  2715   00093A  EF05  F009         	goto	l1222
  2716   00093E                     l5337:
  2717                           
  2718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2719   00093E  C094  F005         	movff	efgtoa@g,___fpclassifyf@x
  2720   000942  C095  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2721   000946  C096  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2722   00094A  C097  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2723   00094E  EC56  F016         	call	___fpclassifyf	;wreg free
  2724   000952  5005               	movf	?___fpclassifyf^0,w,c
  2725   000954  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2726   000956  A4D8               	btfss	status,2,c
  2727   000958  EFB0  F004         	goto	u5651
  2728   00095C  EFB2  F004         	goto	u5650
  2729   000960                     u5651:
  2730   000960  EFD0  F004         	goto	l5355
  2731   000964                     u5650:
  2732   000964                     
  2733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2734   000964  0100               	movlb	0	; () banked
  2735   000966  5193               	movf	efgtoa@sign& (0+255),w,b
  2736   000968  B4D8               	btfsc	status,2,c
  2737   00096A  EFB9  F004         	goto	u5661
  2738   00096E  EFBB  F004         	goto	u5660
  2739   000972                     u5661:
  2740   000972  EFC4  F004         	goto	l5347
  2741   000976                     u5660:
  2742   000976                     
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2745   000976  C093  F104         	movff	efgtoa@sign,_dbuf
  2746   00097A                     
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2749   00097A  0783               	decf	efgtoa@w& (0+255),f,b
  2750   00097C  A0D8               	btfss	status,0,c
  2751   00097E  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  2752   000980                     
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2755   000980  0E00               	movlw	0
  2756   000982  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2757   000984  0E01               	movlw	1
  2758   000986  6F98               	movwf	efgtoa@n& (0+255),b
  2759   000988                     l5347:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2763   000988  0E04               	movlw	low _dbuf
  2764   00098A  2598               	addwf	efgtoa@n& (0+255),w,b
  2765   00098C  6E05               	movwf	strcpy@dest^0,c
  2766   00098E  0E01               	movlw	high _dbuf
  2767   000990  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2768   000992  6E06               	movwf	(strcpy@dest+1)^0,c
  2769   000994  0E1F               	movlw	low STR_5
  2770   000996  6E07               	movwf	strcpy@src^0,c
  2771   000998  ECF0  F019         	call	_strcpy	;wreg free
  2772   00099C  EF8C  F004         	goto	l5331
  2773   0009A0                     l5355:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2776   0009A0  0E00               	movlw	0
  2777   0009A2  0100               	movlb	0	; () banked
  2778   0009A4  6F9A               	movwf	efgtoa@u& (0+255),b
  2779   0009A6  0E00               	movlw	0
  2780   0009A8  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  2781   0009AA  0E80               	movlw	128
  2782   0009AC  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  2783   0009AE  0E3F               	movlw	63
  2784   0009B0  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2787   0009B2  0E00               	movlw	0
  2788   0009B4  6F82               	movwf	(efgtoa@e+1)& (0+255),b
  2789   0009B6  0E00               	movlw	0
  2790   0009B8  6F81               	movwf	efgtoa@e& (0+255),b
  2791   0009BA                     
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2794   0009BA  C094  F005         	movff	efgtoa@g,___fleq@ff1
  2795   0009BE  C095  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2796   0009C2  C096  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2797   0009C6  C097  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2798   0009CA  0E00               	movlw	0
  2799   0009CC  6E09               	movwf	___fleq@ff2^0,c
  2800   0009CE  0E00               	movlw	0
  2801   0009D0  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2802   0009D2  0E00               	movlw	0
  2803   0009D4  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2804   0009D6  0E00               	movlw	0
  2805   0009D8  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2806   0009DA  EC32  F017         	call	___fleq	;wreg free
  2807   0009DE  B0D8               	btfsc	status,0,c
  2808   0009E0  EFF4  F004         	goto	u5671
  2809   0009E4  EFF6  F004         	goto	u5670
  2810   0009E8                     u5671:
  2811   0009E8  EFD5  F005         	goto	l1225
  2812   0009EC                     u5670:
  2813   0009EC  EF03  F005         	goto	l5363
  2814   0009F0                     l1227:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2817   0009F0  C085  F09A         	movff	efgtoa@ou,efgtoa@u
  2818   0009F4  C086  F09B         	movff	efgtoa@ou+1,efgtoa@u+1
  2819   0009F8  C087  F09C         	movff	efgtoa@ou+2,efgtoa@u+2
  2820   0009FC  C088  F09D         	movff	efgtoa@ou+3,efgtoa@u+3
  2821   000A00                     
  2822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2823   000A00  0100               	movlb	0	; () banked
  2824   000A02  4B81               	infsnz	efgtoa@e& (0+255),f,b
  2825   000A04  2B82               	incf	(efgtoa@e+1)& (0+255),f,b
  2826   000A06                     l5363:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2829   000A06  C09A  F013         	movff	efgtoa@u,___flmul@b
  2830   000A0A  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  2831   000A0E  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  2832   000A12  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  2833   000A16  0E00               	movlw	0
  2834   000A18  6E17               	movwf	___flmul@a^0,c
  2835   000A1A  0E00               	movlw	0
  2836   000A1C  6E18               	movwf	(___flmul@a+1)^0,c
  2837   000A1E  0E20               	movlw	32
  2838   000A20  6E19               	movwf	(___flmul@a+2)^0,c
  2839   000A22  0E41               	movlw	65
  2840   000A24  6E1A               	movwf	(___flmul@a+3)^0,c
  2841   000A26  EC66  F00B         	call	___flmul	;wreg free
  2842   000A2A  C013  F085         	movff	?___flmul,efgtoa@ou
  2843   000A2E  C014  F086         	movff	?___flmul+1,efgtoa@ou+1
  2844   000A32  C015  F087         	movff	?___flmul+2,efgtoa@ou+2
  2845   000A36  C016  F088         	movff	?___flmul+3,efgtoa@ou+3
  2846   000A3A  0100               	movlb	0	; () banked
  2847   000A3C  5185               	movf	efgtoa@ou& (0+255),w,b
  2848   000A3E  5D94               	subwf	efgtoa@g& (0+255),w,b
  2849   000A40  6E05               	movwf	labs@a^0,c
  2850   000A42  5186               	movf	(efgtoa@ou+1)& (0+255),w,b
  2851   000A44  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2852   000A46  6E06               	movwf	(labs@a+1)^0,c
  2853   000A48  5187               	movf	(efgtoa@ou+2)& (0+255),w,b
  2854   000A4A  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2855   000A4C  6E07               	movwf	(labs@a+2)^0,c
  2856   000A4E  5188               	movf	(efgtoa@ou+3)& (0+255),w,b
  2857   000A50  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2858   000A52  6E08               	movwf	(labs@a+3)^0,c
  2859   000A54  EC47  F018         	call	_labs	;wreg free
  2860   000A58  BE08               	btfsc	(?_labs+3)^0,7,c
  2861   000A5A  EF3A  F005         	goto	u5681
  2862   000A5E  5008               	movf	(?_labs+3)^0,w,c
  2863   000A60  1007               	iorwf	(?_labs+2)^0,w,c
  2864   000A62  1006               	iorwf	(?_labs+1)^0,w,c
  2865   000A64  E109               	bnz	u5680
  2866   000A66  0E02               	movlw	2
  2867   000A68  5C05               	subwf	?_labs^0,w,c
  2868   000A6A  A0D8               	btfss	status,0,c
  2869   000A6C  EF3A  F005         	goto	u5681
  2870   000A70  EF3C  F005         	goto	u5680
  2871   000A74                     u5681:
  2872   000A74  EFF8  F004         	goto	l1227
  2873   000A78                     u5680:
  2874   000A78  C085  F02C         	movff	efgtoa@ou,___flge@ff1
  2875   000A7C  C086  F02D         	movff	efgtoa@ou+1,___flge@ff1+1
  2876   000A80  C087  F02E         	movff	efgtoa@ou+2,___flge@ff1+2
  2877   000A84  C088  F02F         	movff	efgtoa@ou+3,___flge@ff1+3
  2878   000A88  C094  F030         	movff	efgtoa@g,___flge@ff2
  2879   000A8C  C095  F031         	movff	efgtoa@g+1,___flge@ff2+1
  2880   000A90  C096  F032         	movff	efgtoa@g+2,___flge@ff2+2
  2881   000A94  C097  F033         	movff	efgtoa@g+3,___flge@ff2+3
  2882   000A98  ECD4  F015         	call	___flge	;wreg free
  2883   000A9C  A0D8               	btfss	status,0,c
  2884   000A9E  EF53  F005         	goto	u5691
  2885   000AA2  EF55  F005         	goto	u5690
  2886   000AA6                     u5691:
  2887   000AA6  EFF8  F004         	goto	l1227
  2888   000AAA                     u5690:
  2889   000AAA                     
  2890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2891   000AAA  0100               	movlb	0	; () banked
  2892   000AAC  519A               	movf	efgtoa@u& (0+255),w,b
  2893   000AAE  5D94               	subwf	efgtoa@g& (0+255),w,b
  2894   000AB0  6E05               	movwf	labs@a^0,c
  2895   000AB2  519B               	movf	(efgtoa@u+1)& (0+255),w,b
  2896   000AB4  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2897   000AB6  6E06               	movwf	(labs@a+1)^0,c
  2898   000AB8  519C               	movf	(efgtoa@u+2)& (0+255),w,b
  2899   000ABA  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2900   000ABC  6E07               	movwf	(labs@a+2)^0,c
  2901   000ABE  519D               	movf	(efgtoa@u+3)& (0+255),w,b
  2902   000AC0  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2903   000AC2  6E08               	movwf	(labs@a+3)^0,c
  2904   000AC4  EC47  F018         	call	_labs	;wreg free
  2905   000AC8  BE08               	btfsc	(?_labs+3)^0,7,c
  2906   000ACA  EF74  F005         	goto	u5700
  2907   000ACE  5008               	movf	(?_labs+3)^0,w,c
  2908   000AD0  1007               	iorwf	(?_labs+2)^0,w,c
  2909   000AD2  1006               	iorwf	(?_labs+1)^0,w,c
  2910   000AD4  E107               	bnz	u5701
  2911   000AD6  0E02               	movlw	2
  2912   000AD8  5C05               	subwf	?_labs^0,w,c
  2913   000ADA  B0D8               	btfsc	status,0,c
  2914   000ADC  EF72  F005         	goto	u5701
  2915   000AE0  EF74  F005         	goto	u5700
  2916   000AE4                     u5701:
  2917   000AE4  EFBC  F005         	goto	l5381
  2918   000AE8                     u5700:
  2919   000AE8                     l5371:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2922   000AE8  C09A  F094         	movff	efgtoa@u,efgtoa@g
  2923   000AEC  C09B  F095         	movff	efgtoa@u+1,efgtoa@g+1
  2924   000AF0  C09C  F096         	movff	efgtoa@u+2,efgtoa@g+2
  2925   000AF4  C09D  F097         	movff	efgtoa@u+3,efgtoa@g+3
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  2928   000AF8  EFD5  F005         	goto	l1225
  2929   000AFC                     l5373:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2932   000AFC  C09A  F034         	movff	efgtoa@u,___fldiv@b
  2933   000B00  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  2934   000B04  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  2935   000B08  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  2936   000B0C  0E00               	movlw	0
  2937   000B0E  6E38               	movwf	___fldiv@a^0,c
  2938   000B10  0E00               	movlw	0
  2939   000B12  6E39               	movwf	(___fldiv@a+1)^0,c
  2940   000B14  0E20               	movlw	32
  2941   000B16  6E3A               	movwf	(___fldiv@a+2)^0,c
  2942   000B18  0E41               	movlw	65
  2943   000B1A  6E3B               	movwf	(___fldiv@a+3)^0,c
  2944   000B1C  EC7B  F00D         	call	___fldiv	;wreg free
  2945   000B20  C034  F09A         	movff	?___fldiv,efgtoa@u
  2946   000B24  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  2947   000B28  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  2948   000B2C  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  2949   000B30                     
  2950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  2951   000B30  0100               	movlb	0	; () banked
  2952   000B32  0781               	decf	efgtoa@e& (0+255),f,b
  2953   000B34  A0D8               	btfss	status,0,c
  2954   000B36  0782               	decf	(efgtoa@e+1)& (0+255),f,b
  2955   000B38                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2958   000B38  519A               	movf	efgtoa@u& (0+255),w,b
  2959   000B3A  5D94               	subwf	efgtoa@g& (0+255),w,b
  2960   000B3C  6E05               	movwf	labs@a^0,c
  2961   000B3E  519B               	movf	(efgtoa@u+1)& (0+255),w,b
  2962   000B40  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2963   000B42  6E06               	movwf	(labs@a+1)^0,c
  2964   000B44  519C               	movf	(efgtoa@u+2)& (0+255),w,b
  2965   000B46  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2966   000B48  6E07               	movwf	(labs@a+2)^0,c
  2967   000B4A  519D               	movf	(efgtoa@u+3)& (0+255),w,b
  2968   000B4C  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2969   000B4E  6E08               	movwf	(labs@a+3)^0,c
  2970   000B50  EC47  F018         	call	_labs	;wreg free
  2971   000B54  BE08               	btfsc	(?_labs+3)^0,7,c
  2972   000B56  EFBA  F005         	goto	u5710
  2973   000B5A  5008               	movf	(?_labs+3)^0,w,c
  2974   000B5C  1007               	iorwf	(?_labs+2)^0,w,c
  2975   000B5E  1006               	iorwf	(?_labs+1)^0,w,c
  2976   000B60  E107               	bnz	u5711
  2977   000B62  0E02               	movlw	2
  2978   000B64  5C05               	subwf	?_labs^0,w,c
  2979   000B66  B0D8               	btfsc	status,0,c
  2980   000B68  EFB8  F005         	goto	u5711
  2981   000B6C  EFBA  F005         	goto	u5710
  2982   000B70                     u5711:
  2983   000B70  EFBC  F005         	goto	l5381
  2984   000B74                     u5710:
  2985   000B74  EF74  F005         	goto	l5371
  2986   000B78                     l5381:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2989   000B78  C094  F02C         	movff	efgtoa@g,___flge@ff1
  2990   000B7C  C095  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2991   000B80  C096  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2992   000B84  C097  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2993   000B88  C09A  F030         	movff	efgtoa@u,___flge@ff2
  2994   000B8C  C09B  F031         	movff	efgtoa@u+1,___flge@ff2+1
  2995   000B90  C09C  F032         	movff	efgtoa@u+2,___flge@ff2+2
  2996   000B94  C09D  F033         	movff	efgtoa@u+3,___flge@ff2+3
  2997   000B98  ECD4  F015         	call	___flge	;wreg free
  2998   000B9C  A0D8               	btfss	status,0,c
  2999   000B9E  EFD3  F005         	goto	u5721
  3000   000BA2  EFD5  F005         	goto	u5720
  3001   000BA6                     u5721:
  3002   000BA6  EF7E  F005         	goto	l5373
  3003   000BAA                     u5720:
  3004   000BAA                     l1225:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3007   000BAA  C06F  F07B         	movff	efgtoa@c,efgtoa@mode
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3010   000BAE  C07B  F07C         	movff	efgtoa@mode,efgtoa@nmode
  3011   000BB2                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3013   000BB2  0100               	movlb	0	; () banked
  3014   000BB4  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  3015   000BB6  EFDF  F005         	goto	u5731
  3016   000BBA  EFE1  F005         	goto	u5730
  3017   000BBE                     u5731:
  3018   000BBE  EFE7  F005         	goto	l5387
  3019   000BC2                     u5730:
  3020   000BC2                     
  3021                           ; BSR set to: 0
  3022   000BC2  C0E3  F074         	movff	_prec,efgtoa@p
  3023   000BC6  C0E4  F075         	movff	_prec+1,efgtoa@p+1
  3024   000BCA  EFEB  F005         	goto	l5389
  3025   000BCE                     l5387:
  3026                           
  3027                           ; BSR set to: 0
  3028   000BCE  0E00               	movlw	0
  3029   000BD0  6F75               	movwf	(efgtoa@p+1)& (0+255),b
  3030   000BD2  0E06               	movlw	6
  3031   000BD4  6F74               	movwf	efgtoa@p& (0+255),b
  3032   000BD6                     l5389:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3036   000BD6  C074  F07F         	movff	efgtoa@p,efgtoa@m
  3037   000BDA  C075  F080         	movff	efgtoa@p+1,efgtoa@m+1
  3038   000BDE                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3041   000BDE  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  3042   000BE0  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  3043   000BE2                     
  3044                           ; BSR set to: 0
  3045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3046   000BE2  0E66               	movlw	102
  3047   000BE4  197C               	xorwf	efgtoa@nmode& (0+255),w,b
  3048   000BE6  A4D8               	btfss	status,2,c
  3049   000BE8  EFF8  F005         	goto	u5741
  3050   000BEC  EFFA  F005         	goto	u5740
  3051   000BF0                     u5741:
  3052   000BF0  EF1A  F006         	goto	l5403
  3053   000BF4                     u5740:
  3054   000BF4                     
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3057   000BF4  BF82               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3058   000BF6  EF01  F006         	goto	u5750
  3059   000BFA  EFFF  F005         	goto	u5751
  3060   000BFE                     u5751:
  3061   000BFE  EF0D  F006         	goto	l5399
  3062   000C02                     u5750:
  3063   000C02                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3066   000C02  0E00               	movlw	0
  3067   000C04  6F9A               	movwf	efgtoa@u& (0+255),b
  3068   000C06  0E00               	movlw	0
  3069   000C08  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  3070   000C0A  0E80               	movlw	128
  3071   000C0C  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  3072   000C0E  0E3F               	movlw	63
  3073   000C10  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3076   000C12  0E00               	movlw	0
  3077   000C14  6F82               	movwf	(efgtoa@e+1)& (0+255),b
  3078   000C16  0E00               	movlw	0
  3079   000C18  6F81               	movwf	efgtoa@e& (0+255),b
  3080   000C1A                     l5399:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3084   000C1A  0E67               	movlw	103
  3085   000C1C  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3086   000C1E  B4D8               	btfsc	status,2,c
  3087   000C20  EF14  F006         	goto	u5761
  3088   000C24  EF16  F006         	goto	u5760
  3089   000C28                     u5761:
  3090   000C28  EF1A  F006         	goto	l5403
  3091   000C2C                     u5760:
  3092   000C2C                     
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3095   000C2C  5181               	movf	efgtoa@e& (0+255),w,b
  3096   000C2E  277F               	addwf	efgtoa@m& (0+255),f,b
  3097   000C30  5182               	movf	(efgtoa@e+1)& (0+255),w,b
  3098   000C32  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3099   000C34                     l5403:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3103   000C34  0E00               	movlw	0
  3104   000C36  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3105   000C38  0E00               	movlw	0
  3106   000C3A  6F89               	movwf	efgtoa@i& (0+255),b
  3107   000C3C                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3110   000C3C  C094  F08B         	movff	efgtoa@g,efgtoa@h
  3111   000C40  C095  F08C         	movff	efgtoa@g+1,efgtoa@h+1
  3112   000C44  C096  F08D         	movff	efgtoa@g+2,efgtoa@h+2
  3113   000C48  C097  F08E         	movff	efgtoa@g+3,efgtoa@h+3
  3114   000C4C                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3117   000C4C  C09A  F085         	movff	efgtoa@u,efgtoa@ou
  3118   000C50  C09B  F086         	movff	efgtoa@u+1,efgtoa@ou+1
  3119   000C54  C09C  F087         	movff	efgtoa@u+2,efgtoa@ou+2
  3120   000C58  C09D  F088         	movff	efgtoa@u+3,efgtoa@ou+3
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3123   000C5C  EFAB  F006         	goto	l5417
  3124   000C60                     l5409:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3128   000C60  C08B  F034         	movff	efgtoa@h,___fldiv@b
  3129   000C64  C08C  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3130   000C68  C08D  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3131   000C6C  C08E  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3132   000C70  C09A  F038         	movff	efgtoa@u,___fldiv@a
  3133   000C74  C09B  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3134   000C78  C09C  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3135   000C7C  C09D  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3136   000C80  EC7B  F00D         	call	___fldiv	;wreg free
  3137   000C84  C034  F04D         	movff	?___fldiv,floorf@x
  3138   000C88  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3139   000C8C  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3140   000C90  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3141   000C94  ECB9  F010         	call	_floorf	;wreg free
  3142   000C98  C04D  F08F         	movff	?_floorf,efgtoa@l
  3143   000C9C  C04E  F090         	movff	?_floorf+1,efgtoa@l+1
  3144   000CA0  C04F  F091         	movff	?_floorf+2,efgtoa@l+2
  3145   000CA4  C050  F092         	movff	?_floorf+3,efgtoa@l+3
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3148   000CA8  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3149   000CAC  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3150   000CB0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3151   000CB4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3152   000CB8  EC51  F015         	call	___fltol	;wreg free
  3153   000CBC  C005  F07D         	movff	?___fltol,efgtoa@d
  3154   000CC0  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3155   000CC4                     
  3156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3157   000CC4  C08B  F02C         	movff	efgtoa@h,___flsub@b
  3158   000CC8  C08C  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3159   000CCC  C08D  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3160   000CD0  C08E  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3161   000CD4  C08F  F017         	movff	efgtoa@l,___flmul@a
  3162   000CD8  C090  F018         	movff	efgtoa@l+1,___flmul@a+1
  3163   000CDC  C091  F019         	movff	efgtoa@l+2,___flmul@a+2
  3164   000CE0  C092  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3165   000CE4  C09A  F013         	movff	efgtoa@u,___flmul@b
  3166   000CE8  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3167   000CEC  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3168   000CF0  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3169   000CF4  EC66  F00B         	call	___flmul	;wreg free
  3170   000CF8  C013  F030         	movff	?___flmul,___flsub@a
  3171   000CFC  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3172   000D00  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3173   000D04  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3174   000D08  EC2C  F019         	call	___flsub	;wreg free
  3175   000D0C  C02C  F08B         	movff	?___flsub,efgtoa@h
  3176   000D10  C02D  F08C         	movff	?___flsub+1,efgtoa@h+1
  3177   000D14  C02E  F08D         	movff	?___flsub+2,efgtoa@h+2
  3178   000D18  C02F  F08E         	movff	?___flsub+3,efgtoa@h+3
  3179   000D1C                     
  3180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3181   000D1C  C09A  F034         	movff	efgtoa@u,___fldiv@b
  3182   000D20  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3183   000D24  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3184   000D28  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3185   000D2C  0E00               	movlw	0
  3186   000D2E  6E38               	movwf	___fldiv@a^0,c
  3187   000D30  0E00               	movlw	0
  3188   000D32  6E39               	movwf	(___fldiv@a+1)^0,c
  3189   000D34  0E20               	movlw	32
  3190   000D36  6E3A               	movwf	(___fldiv@a+2)^0,c
  3191   000D38  0E41               	movlw	65
  3192   000D3A  6E3B               	movwf	(___fldiv@a+3)^0,c
  3193   000D3C  EC7B  F00D         	call	___fldiv	;wreg free
  3194   000D40  C034  F09A         	movff	?___fldiv,efgtoa@u
  3195   000D44  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3196   000D48  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3197   000D4C  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3198   000D50                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3200   000D50  0100               	movlb	0	; () banked
  3201   000D52  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3202   000D54  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3203   000D56                     l5417:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3207   000D56  517F               	movf	efgtoa@m& (0+255),w,b
  3208   000D58  5D89               	subwf	efgtoa@i& (0+255),w,b
  3209   000D5A  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3210   000D5C  0A80               	xorlw	128
  3211   000D5E  6F70               	movwf	??_efgtoa& (0+255),b
  3212   000D60  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  3213   000D62  0A80               	xorlw	128
  3214   000D64  5970               	subwfb	??_efgtoa& (0+255),w,b
  3215   000D66  A0D8               	btfss	status,0,c
  3216   000D68  EFB8  F006         	goto	u5771
  3217   000D6C  EFBA  F006         	goto	u5770
  3218   000D70                     u5771:
  3219   000D70  EF30  F006         	goto	l5409
  3220   000D74                     u5770:
  3221   000D74                     
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3224   000D74  C09A  F013         	movff	efgtoa@u,___flmul@b
  3225   000D78  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3226   000D7C  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3227   000D80  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3228   000D84  0E00               	movlw	0
  3229   000D86  6E17               	movwf	___flmul@a^0,c
  3230   000D88  0E00               	movlw	0
  3231   000D8A  6E18               	movwf	(___flmul@a+1)^0,c
  3232   000D8C  0EA0               	movlw	160
  3233   000D8E  6E19               	movwf	(___flmul@a+2)^0,c
  3234   000D90  0E40               	movlw	64
  3235   000D92  6E1A               	movwf	(___flmul@a+3)^0,c
  3236   000D94  EC66  F00B         	call	___flmul	;wreg free
  3237   000D98  C013  F08F         	movff	?___flmul,efgtoa@l
  3238   000D9C  C014  F090         	movff	?___flmul+1,efgtoa@l+1
  3239   000DA0  C015  F091         	movff	?___flmul+2,efgtoa@l+2
  3240   000DA4  C016  F092         	movff	?___flmul+3,efgtoa@l+3
  3241   000DA8                     
  3242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3243   000DA8  C08B  F02C         	movff	efgtoa@h,___flge@ff1
  3244   000DAC  C08C  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3245   000DB0  C08D  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3246   000DB4  C08E  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3247   000DB8  C08F  F030         	movff	efgtoa@l,___flge@ff2
  3248   000DBC  C090  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3249   000DC0  C091  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3250   000DC4  C092  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3251   000DC8  ECD4  F015         	call	___flge	;wreg free
  3252   000DCC  B0D8               	btfsc	status,0,c
  3253   000DCE  EFEB  F006         	goto	u5781
  3254   000DD2  EFED  F006         	goto	u5780
  3255   000DD6                     u5781:
  3256   000DD6  EFF8  F006         	goto	l5425
  3257   000DDA                     u5780:
  3258   000DDA                     
  3259                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3260   000DDA  0E00               	movlw	0
  3261   000DDC  0100               	movlb	0	; () banked
  3262   000DDE  6F8F               	movwf	efgtoa@l& (0+255),b
  3263   000DE0  0E00               	movlw	0
  3264   000DE2  6F90               	movwf	(efgtoa@l+1)& (0+255),b
  3265   000DE4  0E00               	movlw	0
  3266   000DE6  6F91               	movwf	(efgtoa@l+2)& (0+255),b
  3267   000DE8  0E00               	movlw	0
  3268   000DEA  6F92               	movwf	(efgtoa@l+3)& (0+255),b
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3271   000DEC  EF21  F007         	goto	l5431
  3272   000DF0                     l5425:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3275   000DF0  C08B  F005         	movff	efgtoa@h,___fleq@ff1
  3276   000DF4  C08C  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3277   000DF8  C08D  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3278   000DFC  C08E  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3279   000E00  C08F  F009         	movff	efgtoa@l,___fleq@ff2
  3280   000E04  C090  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3281   000E08  C091  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3282   000E0C  C092  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3283   000E10  EC32  F017         	call	___fleq	;wreg free
  3284   000E14  A0D8               	btfss	status,0,c
  3285   000E16  EF0F  F007         	goto	u5791
  3286   000E1A  EF11  F007         	goto	u5790
  3287   000E1E                     u5791:
  3288   000E1E  EF21  F007         	goto	l5431
  3289   000E22                     u5790:
  3290   000E22  0100               	movlb	0	; () banked
  3291   000E24  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3292   000E26  EF17  F007         	goto	u5801
  3293   000E2A  EF19  F007         	goto	u5800
  3294   000E2E                     u5801:
  3295   000E2E  EF21  F007         	goto	l5431
  3296   000E32                     u5800:
  3297   000E32                     
  3298                           ; BSR set to: 0
  3299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3300   000E32  0E00               	movlw	0
  3301   000E34  6F8F               	movwf	efgtoa@l& (0+255),b
  3302   000E36  0E00               	movlw	0
  3303   000E38  6F90               	movwf	(efgtoa@l+1)& (0+255),b
  3304   000E3A  0E00               	movlw	0
  3305   000E3C  6F91               	movwf	(efgtoa@l+2)& (0+255),b
  3306   000E3E  0E00               	movlw	0
  3307   000E40  6F92               	movwf	(efgtoa@l+3)& (0+255),b
  3308   000E42                     l5431:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3311   000E42  C094  F005         	movff	efgtoa@g,___fladd@b
  3312   000E46  C095  F006         	movff	efgtoa@g+1,___fladd@b+1
  3313   000E4A  C096  F007         	movff	efgtoa@g+2,___fladd@b+2
  3314   000E4E  C097  F008         	movff	efgtoa@g+3,___fladd@b+3
  3315   000E52  C08F  F009         	movff	efgtoa@l,___fladd@a
  3316   000E56  C090  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3317   000E5A  C091  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3318   000E5E  C092  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3319   000E62  EC06  F009         	call	___fladd	;wreg free
  3320   000E66  C005  F08B         	movff	?___fladd,efgtoa@h
  3321   000E6A  C006  F08C         	movff	?___fladd+1,efgtoa@h+1
  3322   000E6E  C007  F08D         	movff	?___fladd+2,efgtoa@h+2
  3323   000E72  C008  F08E         	movff	?___fladd+3,efgtoa@h+3
  3324   000E76                     
  3325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3326   000E76  C08B  F02C         	movff	efgtoa@h,___flge@ff1
  3327   000E7A  C08C  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3328   000E7E  C08D  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3329   000E82  C08E  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3330   000E86  0E00               	movlw	0
  3331   000E88  6E17               	movwf	___flmul@a^0,c
  3332   000E8A  0E00               	movlw	0
  3333   000E8C  6E18               	movwf	(___flmul@a+1)^0,c
  3334   000E8E  0E20               	movlw	32
  3335   000E90  6E19               	movwf	(___flmul@a+2)^0,c
  3336   000E92  0E41               	movlw	65
  3337   000E94  6E1A               	movwf	(___flmul@a+3)^0,c
  3338   000E96  C085  F013         	movff	efgtoa@ou,___flmul@b
  3339   000E9A  C086  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3340   000E9E  C087  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3341   000EA2  C088  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3342   000EA6  EC66  F00B         	call	___flmul	;wreg free
  3343   000EAA  C013  F030         	movff	?___flmul,___flge@ff2
  3344   000EAE  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3345   000EB2  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3346   000EB6  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3347   000EBA  ECD4  F015         	call	___flge	;wreg free
  3348   000EBE  A0D8               	btfss	status,0,c
  3349   000EC0  EF64  F007         	goto	u5811
  3350   000EC4  EF66  F007         	goto	u5810
  3351   000EC8                     u5811:
  3352   000EC8  EF8F  F007         	goto	l5443
  3353   000ECC                     u5810:
  3354   000ECC                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3356   000ECC  0100               	movlb	0	; () banked
  3357   000ECE  4B81               	infsnz	efgtoa@e& (0+255),f,b
  3358   000ED0  2B82               	incf	(efgtoa@e+1)& (0+255),f,b
  3359   000ED2                     
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3362   000ED2  C085  F013         	movff	efgtoa@ou,___flmul@b
  3363   000ED6  C086  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3364   000EDA  C087  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3365   000EDE  C088  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3366   000EE2  0E00               	movlw	0
  3367   000EE4  6E17               	movwf	___flmul@a^0,c
  3368   000EE6  0E00               	movlw	0
  3369   000EE8  6E18               	movwf	(___flmul@a+1)^0,c
  3370   000EEA  0E20               	movlw	32
  3371   000EEC  6E19               	movwf	(___flmul@a+2)^0,c
  3372   000EEE  0E41               	movlw	65
  3373   000EF0  6E1A               	movwf	(___flmul@a+3)^0,c
  3374   000EF2  EC66  F00B         	call	___flmul	;wreg free
  3375   000EF6  C013  F085         	movff	?___flmul,efgtoa@ou
  3376   000EFA  C014  F086         	movff	?___flmul+1,efgtoa@ou+1
  3377   000EFE  C015  F087         	movff	?___flmul+2,efgtoa@ou+2
  3378   000F02  C016  F088         	movff	?___flmul+3,efgtoa@ou+3
  3379   000F06                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3381   000F06  0E66               	movlw	102
  3382   000F08  0100               	movlb	0	; () banked
  3383   000F0A  197C               	xorwf	efgtoa@nmode& (0+255),w,b
  3384   000F0C  A4D8               	btfss	status,2,c
  3385   000F0E  EF8B  F007         	goto	u5821
  3386   000F12  EF8D  F007         	goto	u5820
  3387   000F16                     u5821:
  3388   000F16  EF8F  F007         	goto	l5443
  3389   000F1A                     u5820:
  3390   000F1A                     
  3391                           ; BSR set to: 0
  3392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3393   000F1A  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  3394   000F1C  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  3395   000F1E                     l5443:
  3396                           
  3397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3398   000F1E  C085  F09A         	movff	efgtoa@ou,efgtoa@u
  3399   000F22  C086  F09B         	movff	efgtoa@ou+1,efgtoa@u+1
  3400   000F26  C087  F09C         	movff	efgtoa@ou+2,efgtoa@u+2
  3401   000F2A  C088  F09D         	movff	efgtoa@ou+3,efgtoa@u+3
  3402   000F2E                     
  3403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3404   000F2E  C081  F072         	movff	efgtoa@e,efgtoa@ne
  3405   000F32  C082  F073         	movff	efgtoa@e+1,efgtoa@ne+1
  3406   000F36                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3408   000F36  0E00               	movlw	0
  3409   000F38  0100               	movlb	0	; () banked
  3410   000F3A  6F7A               	movwf	efgtoa@pp& (0+255),b
  3411   000F3C                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3414   000F3C  0E00               	movlw	0
  3415   000F3E  6F77               	movwf	(efgtoa@t+1)& (0+255),b
  3416   000F40  0E00               	movlw	0
  3417   000F42  6F76               	movwf	efgtoa@t& (0+255),b
  3418   000F44                     
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3421   000F44  0E00               	movlw	0
  3422   000F46  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3423   000F48  0E00               	movlw	0
  3424   000F4A  6F89               	movwf	efgtoa@i& (0+255),b
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3427   000F4C  EF8D  F008         	goto	l5493
  3428   000F50                     l5453:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3432   000F50  C08B  F034         	movff	efgtoa@h,___fldiv@b
  3433   000F54  C08C  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3434   000F58  C08D  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3435   000F5C  C08E  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3436   000F60  C09A  F038         	movff	efgtoa@u,___fldiv@a
  3437   000F64  C09B  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3438   000F68  C09C  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3439   000F6C  C09D  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3440   000F70  EC7B  F00D         	call	___fldiv	;wreg free
  3441   000F74  C034  F04D         	movff	?___fldiv,floorf@x
  3442   000F78  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3443   000F7C  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3444   000F80  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3445   000F84  ECB9  F010         	call	_floorf	;wreg free
  3446   000F88  C04D  F08F         	movff	?_floorf,efgtoa@l
  3447   000F8C  C04E  F090         	movff	?_floorf+1,efgtoa@l+1
  3448   000F90  C04F  F091         	movff	?_floorf+2,efgtoa@l+2
  3449   000F94  C050  F092         	movff	?_floorf+3,efgtoa@l+3
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3452   000F98  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3453   000F9C  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3454   000FA0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3455   000FA4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3456   000FA8  EC51  F015         	call	___fltol	;wreg free
  3457   000FAC  BE06               	btfsc	(?___fltol+1)^0,7,c
  3458   000FAE  EFE4  F007         	goto	u5830
  3459   000FB2  5006               	movf	(?___fltol+1)^0,w,c
  3460   000FB4  E107               	bnz	u5831
  3461   000FB6  0E0A               	movlw	10
  3462   000FB8  5C05               	subwf	?___fltol^0,w,c
  3463   000FBA  B0D8               	btfsc	status,0,c
  3464   000FBC  EFE2  F007         	goto	u5831
  3465   000FC0  EFE4  F007         	goto	u5830
  3466   000FC4                     u5831:
  3467   000FC4  EFF4  F007         	goto	l5457
  3468   000FC8                     u5830:
  3469   000FC8  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3470   000FCC  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3471   000FD0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3472   000FD4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3473   000FD8  EC51  F015         	call	___fltol	;wreg free
  3474   000FDC  C005  F07D         	movff	?___fltol,efgtoa@d
  3475   000FE0  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3476   000FE4  EFF9  F007         	goto	l1255
  3477   000FE8                     l5457:
  3478   000FE8  0E00               	movlw	0
  3479   000FEA  0100               	movlb	0	; () banked
  3480   000FEC  6F7E               	movwf	(efgtoa@d+1)& (0+255),b
  3481   000FEE  0E09               	movlw	9
  3482   000FF0  6F7D               	movwf	efgtoa@d& (0+255),b
  3483   000FF2                     l1255:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3486   000FF2  0100               	movlb	0	; () banked
  3487   000FF4  517A               	movf	efgtoa@pp& (0+255),w,b
  3488   000FF6  A4D8               	btfss	status,2,c
  3489   000FF8  EF00  F008         	goto	u5841
  3490   000FFC  EF02  F008         	goto	u5840
  3491   001000                     u5841:
  3492   001000  EF2A  F008         	goto	l5477
  3493   001004                     u5840:
  3494   001004                     
  3495                           ; BSR set to: 0
  3496   001004  BF73               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3497   001006  EF09  F008         	goto	u5850
  3498   00100A  EF07  F008         	goto	u5851
  3499   00100E                     u5851:
  3500   00100E  EF2A  F008         	goto	l5477
  3501   001012                     u5850:
  3502   001012                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3505   001012  0E04               	movlw	low _dbuf
  3506   001014  2598               	addwf	efgtoa@n& (0+255),w,b
  3507   001016  6ED9               	movwf	fsr2l,c
  3508   001018  0E01               	movlw	high _dbuf
  3509   00101A  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3510   00101C  6EDA               	movwf	fsr2h,c
  3511   00101E  0E2E               	movlw	46
  3512   001020  6EDF               	movwf	indf2,c
  3513   001022                     
  3514                           ; BSR set to: 0
  3515   001022  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3516   001024  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3517   001026                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3520   001026  0783               	decf	efgtoa@w& (0+255),f,b
  3521   001028  A0D8               	btfss	status,0,c
  3522   00102A  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3523   00102C                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3526   00102C  0E01               	movlw	1
  3527   00102E  6F7A               	movwf	efgtoa@pp& (0+255),b
  3528   001030  EF2A  F008         	goto	l5477
  3529   001034                     l5469:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3533   001034  0E04               	movlw	low _dbuf
  3534   001036  2598               	addwf	efgtoa@n& (0+255),w,b
  3535   001038  6ED9               	movwf	fsr2l,c
  3536   00103A  0E01               	movlw	high _dbuf
  3537   00103C  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3538   00103E  6EDA               	movwf	fsr2h,c
  3539   001040  0E30               	movlw	48
  3540   001042  6EDF               	movwf	indf2,c
  3541   001044                     
  3542                           ; BSR set to: 0
  3543   001044  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3544   001046  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3545   001048                     
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3548   001048  0783               	decf	efgtoa@w& (0+255),f,b
  3549   00104A  A0D8               	btfss	status,0,c
  3550   00104C  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3551   00104E                     
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3554   00104E  0776               	decf	efgtoa@t& (0+255),f,b
  3555   001050  A0D8               	btfss	status,0,c
  3556   001052  0777               	decf	(efgtoa@t+1)& (0+255),f,b
  3557   001054                     l5477:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3561   001054  5176               	movf	efgtoa@t& (0+255),w,b
  3562   001056  1177               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3563   001058  A4D8               	btfss	status,2,c
  3564   00105A  EF31  F008         	goto	u5861
  3565   00105E  EF33  F008         	goto	u5860
  3566   001062                     u5861:
  3567   001062  EF1A  F008         	goto	l5469
  3568   001066                     u5860:
  3569   001066                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3572   001066  0E04               	movlw	low _dbuf
  3573   001068  2598               	addwf	efgtoa@n& (0+255),w,b
  3574   00106A  6ED9               	movwf	fsr2l,c
  3575   00106C  0E01               	movlw	high _dbuf
  3576   00106E  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3577   001070  6EDA               	movwf	fsr2h,c
  3578   001072  517D               	movf	efgtoa@d& (0+255),w,b
  3579   001074  0F30               	addlw	48
  3580   001076  6EDF               	movwf	indf2,c
  3581   001078                     
  3582                           ; BSR set to: 0
  3583   001078  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3584   00107A  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3585   00107C                     
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3588   00107C  0783               	decf	efgtoa@w& (0+255),f,b
  3589   00107E  A0D8               	btfss	status,0,c
  3590   001080  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3591   001082                     
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3594   001082  C08B  F02C         	movff	efgtoa@h,___flsub@b
  3595   001086  C08C  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3596   00108A  C08D  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3597   00108E  C08E  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3598   001092  C08F  F017         	movff	efgtoa@l,___flmul@a
  3599   001096  C090  F018         	movff	efgtoa@l+1,___flmul@a+1
  3600   00109A  C091  F019         	movff	efgtoa@l+2,___flmul@a+2
  3601   00109E  C092  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3602   0010A2  C09A  F013         	movff	efgtoa@u,___flmul@b
  3603   0010A6  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3604   0010AA  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3605   0010AE  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3606   0010B2  EC66  F00B         	call	___flmul	;wreg free
  3607   0010B6  C013  F030         	movff	?___flmul,___flsub@a
  3608   0010BA  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3609   0010BE  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3610   0010C2  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3611   0010C6  EC2C  F019         	call	___flsub	;wreg free
  3612   0010CA  C02C  F08B         	movff	?___flsub,efgtoa@h
  3613   0010CE  C02D  F08C         	movff	?___flsub+1,efgtoa@h+1
  3614   0010D2  C02E  F08D         	movff	?___flsub+2,efgtoa@h+2
  3615   0010D6  C02F  F08E         	movff	?___flsub+3,efgtoa@h+3
  3616   0010DA                     
  3617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3618   0010DA  C09A  F034         	movff	efgtoa@u,___fldiv@b
  3619   0010DE  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3620   0010E2  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3621   0010E6  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3622   0010EA  0E00               	movlw	0
  3623   0010EC  6E38               	movwf	___fldiv@a^0,c
  3624   0010EE  0E00               	movlw	0
  3625   0010F0  6E39               	movwf	(___fldiv@a+1)^0,c
  3626   0010F2  0E20               	movlw	32
  3627   0010F4  6E3A               	movwf	(___fldiv@a+2)^0,c
  3628   0010F6  0E41               	movlw	65
  3629   0010F8  6E3B               	movwf	(___fldiv@a+3)^0,c
  3630   0010FA  EC7B  F00D         	call	___fldiv	;wreg free
  3631   0010FE  C034  F09A         	movff	?___fldiv,efgtoa@u
  3632   001102  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3633   001106  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3634   00110A  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3635   00110E                     
  3636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3637   00110E  0100               	movlb	0	; () banked
  3638   001110  0772               	decf	efgtoa@ne& (0+255),f,b
  3639   001112  A0D8               	btfss	status,0,c
  3640   001114  0773               	decf	(efgtoa@ne+1)& (0+255),f,b
  3641   001116                     
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3644   001116  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3645   001118  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3646   00111A                     l5493:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3650   00111A  517F               	movf	efgtoa@m& (0+255),w,b
  3651   00111C  5D89               	subwf	efgtoa@i& (0+255),w,b
  3652   00111E  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3653   001120  0A80               	xorlw	128
  3654   001122  6F70               	movwf	??_efgtoa& (0+255),b
  3655   001124  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  3656   001126  0A80               	xorlw	128
  3657   001128  5970               	subwfb	??_efgtoa& (0+255),w,b
  3658   00112A  B0D8               	btfsc	status,0,c
  3659   00112C  EF9A  F008         	goto	u5871
  3660   001130  EF9C  F008         	goto	u5870
  3661   001134                     u5871:
  3662   001134  EFAA  F008         	goto	l5497
  3663   001138                     u5870:
  3664   001138                     
  3665                           ; BSR set to: 0
  3666   001138  BF99               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3667   00113A  EFA8  F008         	goto	u5881
  3668   00113E  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3669   001140  E109               	bnz	u5880
  3670   001142  0E4B               	movlw	75
  3671   001144  5D98               	subwf	efgtoa@n& (0+255),w,b
  3672   001146  A0D8               	btfss	status,0,c
  3673   001148  EFA8  F008         	goto	u5881
  3674   00114C  EFAA  F008         	goto	u5880
  3675   001150                     u5881:
  3676   001150  EFA8  F007         	goto	l5453
  3677   001154                     u5880:
  3678   001154                     l5497:
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3682   001154  0E00               	movlw	0
  3683   001156  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3684   001158  0E4F               	movlw	79
  3685   00115A  6F89               	movwf	efgtoa@i& (0+255),b
  3686   00115C                     
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3689   00115C  0E04               	movlw	low _dbuf
  3690   00115E  2589               	addwf	efgtoa@i& (0+255),w,b
  3691   001160  6ED9               	movwf	fsr2l,c
  3692   001162  0E01               	movlw	high _dbuf
  3693   001164  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3694   001166  6EDA               	movwf	fsr2h,c
  3695   001168  6ADF               	clrf	indf2,c
  3696   00116A                     
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3699   00116A  0E04               	movlw	low _dbuf
  3700   00116C  6F70               	movwf	??_efgtoa& (0+255),b
  3701   00116E  0E01               	movlw	high _dbuf
  3702   001170  6F71               	movwf	(??_efgtoa+1)& (0+255),b
  3703   001172  5198               	movf	efgtoa@n& (0+255),w,b
  3704   001174  5F70               	subwf	??_efgtoa& (0+255),f,b
  3705   001176  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3706   001178  5B71               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3707   00117A  5189               	movf	efgtoa@i& (0+255),w,b
  3708   00117C  2570               	addwf	??_efgtoa& (0+255),w,b
  3709   00117E  6E05               	movwf	memcpy@d1^0,c
  3710   001180  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3711   001182  2171               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3712   001184  6E06               	movwf	(memcpy@d1+1)^0,c
  3713   001186  0E04               	movlw	low _dbuf
  3714   001188  6E07               	movwf	memcpy@s1^0,c
  3715   00118A  0E01               	movlw	high _dbuf
  3716   00118C  6E08               	movwf	(memcpy@s1+1)^0,c
  3717   00118E  C098  F009         	movff	efgtoa@n,memcpy@n
  3718   001192  C099  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3719   001196  EC72  F018         	call	_memcpy	;wreg free
  3720   00119A                     
  3721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3722   00119A  0100               	movlb	0	; () banked
  3723   00119C  5198               	movf	efgtoa@n& (0+255),w,b
  3724   00119E  5D89               	subwf	efgtoa@i& (0+255),w,b
  3725   0011A0  6F98               	movwf	efgtoa@n& (0+255),b
  3726   0011A2  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3727   0011A4  598A               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3728   0011A6  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  3729   0011A8                     
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3732   0011A8  5193               	movf	efgtoa@sign& (0+255),w,b
  3733   0011AA  A4D8               	btfss	status,2,c
  3734   0011AC  EFDA  F008         	goto	u5891
  3735   0011B0  EFDD  F008         	goto	u5890
  3736   0011B4                     u5891:
  3737   0011B4  0E01               	movlw	1
  3738   0011B6  EFDE  F008         	goto	u5900
  3739   0011BA                     u5890:
  3740   0011BA  0E00               	movlw	0
  3741   0011BC                     u5900:
  3742   0011BC  6F89               	movwf	efgtoa@i& (0+255),b
  3743   0011BE  6B8A               	clrf	(efgtoa@i+1)& (0+255),b
  3744   0011C0                     
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3747   0011C0  5193               	movf	efgtoa@sign& (0+255),w,b
  3748   0011C2  B4D8               	btfsc	status,2,c
  3749   0011C4  EFE6  F008         	goto	u5911
  3750   0011C8  EFE8  F008         	goto	u5910
  3751   0011CC                     u5911:
  3752   0011CC  EFF3  F008         	goto	l5511
  3753   0011D0                     u5910:
  3754   0011D0                     
  3755                           ; BSR set to: 0
  3756                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3757   0011D0  0798               	decf	efgtoa@n& (0+255),f,b
  3758   0011D2  A0D8               	btfss	status,0,c
  3759   0011D4  0799               	decf	(efgtoa@n+1)& (0+255),f,b
  3760   0011D6  0E04               	movlw	low _dbuf
  3761   0011D8  2598               	addwf	efgtoa@n& (0+255),w,b
  3762   0011DA  6ED9               	movwf	fsr2l,c
  3763   0011DC  0E01               	movlw	high _dbuf
  3764   0011DE  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3765   0011E0  6EDA               	movwf	fsr2h,c
  3766   0011E2  C093  FFDF         	movff	efgtoa@sign,indf2
  3767   0011E6                     l5511:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3771   0011E6  5189               	movf	efgtoa@i& (0+255),w,b
  3772   0011E8  5F83               	subwf	efgtoa@w& (0+255),f,b
  3773   0011EA  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3774   0011EC  5B84               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3775   0011EE                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3778   0011EE  C06A  F015         	movff	efgtoa@fp,pad@fp
  3779   0011F2  0E04               	movlw	low _dbuf
  3780   0011F4  2598               	addwf	efgtoa@n& (0+255),w,b
  3781   0011F6  6E16               	movwf	pad@buf^0,c
  3782   0011F8  0E01               	movlw	high _dbuf
  3783   0011FA  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3784   0011FC  6E17               	movwf	(pad@buf+1)^0,c
  3785   0011FE  C083  F018         	movff	efgtoa@w,pad@p
  3786   001202  C084  F019         	movff	efgtoa@w+1,pad@p+1
  3787   001206  EC14  F018         	call	_pad	;wreg free
  3788   00120A                     l1222:
  3789   00120A  0012               	return		;funcret
  3790   00120C                     __end_of_efgtoa:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function _strcpy *****************
  3794 ;; Defined at:
  3795 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3798 ;;		 -> dbuf(80), 
  3799 ;;  src             1    6[COMRAM] PTR const unsigned char 
  3800 ;;		 -> STR_5(4), STR_2(4), 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  d               2    8[COMRAM] PTR unsigned char 
  3803 ;;		 -> dbuf(80), 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2    4[COMRAM] PTR unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3813 ;;      Params:         3       0       0       0       0       0       0       0       0
  3814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3815 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3816 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3817 ;;Total ram usage:        6 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 4
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_efgtoa
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text8
  3828   0033E0                     __ptext8:
  3829                           	callstack 0
  3830   0033E0                     _strcpy:
  3831                           	callstack 22
  3832   0033E0  C005  F009         	movff	strcpy@dest,strcpy@d
  3833   0033E4  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3834   0033E8                     l5195:
  3835   0033E8  2A07               	incf	strcpy@src^0,f,c
  3836   0033EA  0407               	decf	strcpy@src^0,w,c
  3837   0033EC  6E08               	movwf	??_strcpy^0,c
  3838   0033EE  C008  FFF6         	movff	??_strcpy,tblptrl
  3839   0033F2                     	if	1	;There is more than 1 active tblptr byte
  3840   0033F2  0E08               	movlw	high __smallconst
  3841   0033F4  6EF7               	movwf	tblptrh,c
  3842   0033F6                     	endif
  3843   0033F6                     	if	0	;tblptru may be non-zero
  3844   0033F6                     	endif
  3845   0033F6                     	if	0	;tblptru may be non-zero
  3846   0033F6                     	endif
  3847   0033F6  C009  FFD9         	movff	strcpy@d,fsr2l
  3848   0033FA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3849   0033FE  4A09               	infsnz	strcpy@d^0,f,c
  3850   003400  2A0A               	incf	(strcpy@d+1)^0,f,c
  3851   003402  0008               	tblrd		*
  3852   003404  CFF5 FFDF          	movff	tablat,indf2
  3853   003408  50DF               	movf	indf2,w,c
  3854   00340A  A4D8               	btfss	status,2,c
  3855   00340C  EF0A  F01A         	goto	u5431
  3856   003410  EF0C  F01A         	goto	u5430
  3857   003414                     u5431:
  3858   003414  EFF4  F019         	goto	l5195
  3859   003418                     u5430:
  3860   003418  0012               	return		;funcret
  3861   00341A                     __end_of_strcpy:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function _pad *****************
  3865 ;; Defined at:
  3866 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  3869 ;;		 -> sprintf@f(12), 
  3870 ;;  buf             2   21[COMRAM] PTR unsigned char 
  3871 ;;		 -> dbuf(80), 
  3872 ;;  p               2   23[COMRAM] int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  i               2   26[COMRAM] int 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3884 ;;      Params:         5       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3886 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3887 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3888 ;;Total ram usage:        8 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 8
  3891 ;; This function calls:
  3892 ;;		_fputc
  3893 ;;		_fputs
  3894 ;; This function is called by:
  3895 ;;		_efgtoa
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text9
  3900   003028                     __ptext9:
  3901                           	callstack 0
  3902   003028                     _pad:
  3903                           	callstack 18
  3904   003028                     
  3905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3906   003028  BE19               	btfsc	(pad@p+1)^0,7,c
  3907   00302A  EF1B  F018         	goto	u5340
  3908   00302E  EF19  F018         	goto	u5341
  3909   003032                     u5341:
  3910   003032  EF1F  F018         	goto	l1207
  3911   003036                     u5340:
  3912   003036                     
  3913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3914   003036  0E00               	movlw	0
  3915   003038  6E19               	movwf	(pad@p+1)^0,c
  3916   00303A  0E00               	movlw	0
  3917   00303C  6E18               	movwf	pad@p^0,c
  3918   00303E                     l1207:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3921   00303E  0E00               	movlw	0
  3922   003040  6E1C               	movwf	(pad@i+1)^0,c
  3923   003042  0E00               	movlw	0
  3924   003044  6E1B               	movwf	pad@i^0,c
  3925                           
  3926                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3927   003046  EF2F  F018         	goto	l5167
  3928   00304A                     l5163:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3931   00304A  0E00               	movlw	0
  3932   00304C  6E08               	movwf	(fputc@c+1)^0,c
  3933   00304E  0E20               	movlw	32
  3934   003050  6E07               	movwf	fputc@c^0,c
  3935   003052  C015  F009         	movff	pad@fp,fputc@fp
  3936   003056  ECD5  F016         	call	_fputc	;wreg free
  3937   00305A                     
  3938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3939   00305A  4A1B               	infsnz	pad@i^0,f,c
  3940   00305C  2A1C               	incf	(pad@i+1)^0,f,c
  3941   00305E                     l5167:
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3944   00305E  5018               	movf	pad@p^0,w,c
  3945   003060  5C1B               	subwf	pad@i^0,w,c
  3946   003062  501C               	movf	(pad@i+1)^0,w,c
  3947   003064  0A80               	xorlw	128
  3948   003066  6E1A               	movwf	??_pad^0,c
  3949   003068  5019               	movf	(pad@p+1)^0,w,c
  3950   00306A  0A80               	xorlw	128
  3951   00306C  581A               	subwfb	??_pad^0,w,c
  3952   00306E  A0D8               	btfss	status,0,c
  3953   003070  EF3C  F018         	goto	u5351
  3954   003074  EF3E  F018         	goto	u5350
  3955   003078                     u5351:
  3956   003078  EF25  F018         	goto	l5163
  3957   00307C                     u5350:
  3958   00307C                     
  3959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3960   00307C  C016  F00F         	movff	pad@buf,fputs@s
  3961   003080  C017  F010         	movff	pad@buf+1,fputs@s+1
  3962   003084  C015  F011         	movff	pad@fp,fputs@fp
  3963   003088  EC90  F019         	call	_fputs	;wreg free
  3964   00308C  0012               	return		;funcret
  3965   00308E                     __end_of_pad:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _fputs *****************
  3969 ;; Defined at:
  3970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3973 ;;		 -> dbuf(80), 
  3974 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  3975 ;;		 -> sprintf@f(12), 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  i               2   18[COMRAM] int 
  3978 ;;  c               1   17[COMRAM] unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2   14[COMRAM] int 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3988 ;;      Params:         3       0       0       0       0       0       0       0       0
  3989 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3991 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3992 ;;Total ram usage:        6 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 7
  3995 ;; This function calls:
  3996 ;;		_fputc
  3997 ;; This function is called by:
  3998 ;;		_pad
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text10
  4003   003320                     __ptext10:
  4004                           	callstack 0
  4005   003320                     _fputs:
  4006                           	callstack 18
  4007   003320  0E00               	movlw	0
  4008   003322  6E14               	movwf	(fputs@i+1)^0,c
  4009   003324  0E00               	movlw	0
  4010   003326  6E13               	movwf	fputs@i^0,c
  4011   003328  EF9F  F019         	goto	l4787
  4012   00332C                     l4783:
  4013   00332C  C012  F007         	movff	fputs@c,fputc@c
  4014   003330  6A08               	clrf	(fputc@c+1)^0,c
  4015   003332  C011  F009         	movff	fputs@fp,fputc@fp
  4016   003336  ECD5  F016         	call	_fputc	;wreg free
  4017   00333A  4A13               	infsnz	fputs@i^0,f,c
  4018   00333C  2A14               	incf	(fputs@i+1)^0,f,c
  4019   00333E                     l4787:
  4020   00333E  5013               	movf	fputs@i^0,w,c
  4021   003340  240F               	addwf	fputs@s^0,w,c
  4022   003342  6ED9               	movwf	fsr2l,c
  4023   003344  5014               	movf	(fputs@i+1)^0,w,c
  4024   003346  2010               	addwfc	(fputs@s+1)^0,w,c
  4025   003348  6EDA               	movwf	fsr2h,c
  4026   00334A  50DF               	movf	indf2,w,c
  4027   00334C  6E12               	movwf	fputs@c^0,c
  4028   00334E  5012               	movf	fputs@c^0,w,c
  4029   003350  A4D8               	btfss	status,2,c
  4030   003352  EFAD  F019         	goto	u4751
  4031   003356  EFAF  F019         	goto	u4750
  4032   00335A                     u4751:
  4033   00335A  EF96  F019         	goto	l4783
  4034   00335E                     u4750:
  4035   00335E  0012               	return		;funcret
  4036   003360                     __end_of_fputs:
  4037                           	callstack 0
  4038                           
  4039 ;; *************** function _fputc *****************
  4040 ;; Defined at:
  4041 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  c               2    6[COMRAM] int 
  4044 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  4045 ;;		 -> sprintf@f(12), 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  2    6[COMRAM] int 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4057 ;;      Params:         3       0       0       0       0       0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4059 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4060 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4061 ;;Total ram usage:        8 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; Hardware stack levels required when called: 6
  4064 ;; This function calls:
  4065 ;;		_putch
  4066 ;; This function is called by:
  4067 ;;		_pad
  4068 ;;		_vfpfcnvrt
  4069 ;;		_fputs
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text11
  4074   002DAA                     __ptext11:
  4075                           	callstack 0
  4076   002DAA                     _fputc:
  4077                           	callstack 21
  4078   002DAA  5009               	movf	fputc@fp^0,w,c
  4079   002DAC  B4D8               	btfsc	status,2,c
  4080   002DAE  EFDB  F016         	goto	u4321
  4081   002DB2  EFDD  F016         	goto	u4320
  4082   002DB6                     u4321:
  4083   002DB6  EFE5  F016         	goto	l4569
  4084   002DBA                     u4320:
  4085   002DBA  5009               	movf	fputc@fp^0,w,c
  4086   002DBC  A4D8               	btfss	status,2,c
  4087   002DBE  EFE3  F016         	goto	u4331
  4088   002DC2  EFE5  F016         	goto	u4330
  4089   002DC6                     u4331:
  4090   002DC6  EFEA  F016         	goto	l4571
  4091   002DCA                     u4330:
  4092   002DCA                     l4569:
  4093   002DCA  5007               	movf	fputc@c^0,w,c
  4094   002DCC  EC7D  F01B         	call	_putch
  4095   002DD0  EF31  F017         	goto	l1347
  4096   002DD4                     l4571:
  4097   002DD4  5009               	movf	fputc@fp^0,w,c
  4098   002DD6  6ED9               	movwf	fsr2l,c
  4099   002DD8  6ADA               	clrf	fsr2h,c
  4100   002DDA  0E0A               	movlw	10
  4101   002DDC  26D9               	addwf	fsr2l,f,c
  4102   002DDE  50DE               	movf	postinc2,w,c
  4103   002DE0  10DE               	iorwf	postinc2,w,c
  4104   002DE2  B4D8               	btfsc	status,2,c
  4105   002DE4  EFF6  F016         	goto	u4341
  4106   002DE8  EFF8  F016         	goto	u4340
  4107   002DEC                     u4341:
  4108   002DEC  EF11  F017         	goto	l4575
  4109   002DF0                     u4340:
  4110   002DF0  5009               	movf	fputc@fp^0,w,c
  4111   002DF2  6ED9               	movwf	fsr2l,c
  4112   002DF4  6ADA               	clrf	fsr2h,c
  4113   002DF6  0E0A               	movlw	10
  4114   002DF8  26D9               	addwf	fsr2l,f,c
  4115   002DFA  5009               	movf	fputc@fp^0,w,c
  4116   002DFC  6EE1               	movwf	fsr1l,c
  4117   002DFE  6AE2               	clrf	fsr1h,c
  4118   002E00  0E03               	movlw	3
  4119   002E02  26E1               	addwf	fsr1l,f,c
  4120   002E04  50DE               	movf	postinc2,w,c
  4121   002E06  5CE6               	subwf	postinc1,w,c
  4122   002E08  50E6               	movf	postinc1,w,c
  4123   002E0A  0A80               	xorlw	128
  4124   002E0C  6E0E               	movwf	(??_fputc+4)^0,c
  4125   002E0E  50DE               	movf	postinc2,w,c
  4126   002E10  0A80               	xorlw	128
  4127   002E12  580E               	subwfb	(??_fputc+4)^0,w,c
  4128   002E14  B0D8               	btfsc	status,0,c
  4129   002E16  EF0F  F017         	goto	u4351
  4130   002E1A  EF11  F017         	goto	u4350
  4131   002E1E                     u4351:
  4132   002E1E  EF31  F017         	goto	l1347
  4133   002E22                     u4350:
  4134   002E22                     l4575:
  4135   002E22  5009               	movf	fputc@fp^0,w,c
  4136   002E24  6ED9               	movwf	fsr2l,c
  4137   002E26  6ADA               	clrf	fsr2h,c
  4138   002E28  0E03               	movlw	3
  4139   002E2A  26D9               	addwf	fsr2l,f,c
  4140   002E2C  CFDE F00A          	movff	postinc2,??_fputc
  4141   002E30  CFDD F00B          	movff	postdec2,??_fputc+1
  4142   002E34  5009               	movf	fputc@fp^0,w,c
  4143   002E36  6ED9               	movwf	fsr2l,c
  4144   002E38  6ADA               	clrf	fsr2h,c
  4145   002E3A  CFDE F00C          	movff	postinc2,??_fputc+2
  4146   002E3E  CFDD F00D          	movff	postdec2,??_fputc+3
  4147   002E42  500A               	movf	??_fputc^0,w,c
  4148   002E44  240C               	addwf	(??_fputc+2)^0,w,c
  4149   002E46  6ED9               	movwf	fsr2l,c
  4150   002E48  500B               	movf	(??_fputc+1)^0,w,c
  4151   002E4A  200D               	addwfc	(??_fputc+3)^0,w,c
  4152   002E4C  6EDA               	movwf	fsr2h,c
  4153   002E4E  C007  FFDF         	movff	fputc@c,indf2
  4154   002E52  5009               	movf	fputc@fp^0,w,c
  4155   002E54  6ED9               	movwf	fsr2l,c
  4156   002E56  6ADA               	clrf	fsr2h,c
  4157   002E58  0E03               	movlw	3
  4158   002E5A  26D9               	addwf	fsr2l,f,c
  4159   002E5C  2ADE               	incf	postinc2,f,c
  4160   002E5E  0E00               	movlw	0
  4161   002E60  22DD               	addwfc	postdec2,f,c
  4162   002E62                     l1347:
  4163   002E62  0012               	return		;funcret
  4164   002E64                     __end_of_fputc:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _putch *****************
  4168 ;; Defined at:
  4169 ;;		line 154 in file "mcc_generated_files/eusart1.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  txData          1    wreg     unsigned char 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  txData          1    5[COMRAM] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0
  4184 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4186 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4187 ;;Total ram usage:        1 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 5
  4190 ;; This function calls:
  4191 ;;		_EUSART1_Write
  4192 ;; This function is called by:
  4193 ;;		_fputc
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text12
  4198   0036FA                     __ptext12:
  4199                           	callstack 0
  4200   0036FA                     _putch:
  4201                           	callstack 21
  4202                           
  4203                           ;incstack = 0
  4204                           ;putch@txData stored from wreg
  4205   0036FA  6E06               	movwf	putch@txData^0,c
  4206   0036FC                     
  4207                           ;mcc_generated_files/eusart1.c: 154: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 155: {;mcc_generated_files/eusart1.c: 156:     EUSART1_Write(txData);
  4208   0036FC  5006               	movf	putch@txData^0,w,c
  4209   0036FE  EC5B  F01B         	call	_EUSART1_Write
  4210   003702  0012               	return		;funcret
  4211   003704                     __end_of_putch:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _memcpy *****************
  4215 ;; Defined at:
  4216 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  d1              2    4[COMRAM] PTR void 
  4219 ;;		 -> dbuf(80), 
  4220 ;;  s1              2    6[COMRAM] PTR const void 
  4221 ;;		 -> dbuf(80), 
  4222 ;;  n               2    8[COMRAM] unsigned int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4225 ;;		 -> dbuf(80), 
  4226 ;;  d               2   11[COMRAM] PTR unsigned char 
  4227 ;;		 -> dbuf(80), 
  4228 ;;  tmp             1   10[COMRAM] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  2    4[COMRAM] PTR void 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4238 ;;      Params:         6       0       0       0       0       0       0       0       0
  4239 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4241 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4242 ;;Total ram usage:       11 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 4
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_efgtoa
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text13
  4253   0030E4                     __ptext13:
  4254                           	callstack 0
  4255   0030E4                     _memcpy:
  4256                           	callstack 22
  4257   0030E4  C007  F00E         	movff	memcpy@s1,memcpy@s
  4258   0030E8  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  4259   0030EC  C005  F00C         	movff	memcpy@d1,memcpy@d
  4260   0030F0  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  4261   0030F4  EF8C  F018         	goto	l5243
  4262   0030F8                     l5235:
  4263   0030F8  C00E  FFD9         	movff	memcpy@s,fsr2l
  4264   0030FC  C00F  FFDA         	movff	memcpy@s+1,fsr2h
  4265   003100  50DF               	movf	indf2,w,c
  4266   003102  6E0B               	movwf	memcpy@tmp^0,c
  4267   003104  4A0E               	infsnz	memcpy@s^0,f,c
  4268   003106  2A0F               	incf	(memcpy@s+1)^0,f,c
  4269   003108  C00C  FFD9         	movff	memcpy@d,fsr2l
  4270   00310C  C00D  FFDA         	movff	memcpy@d+1,fsr2h
  4271   003110  C00B  FFDF         	movff	memcpy@tmp,indf2
  4272   003114  4A0C               	infsnz	memcpy@d^0,f,c
  4273   003116  2A0D               	incf	(memcpy@d+1)^0,f,c
  4274   003118                     l5243:
  4275   003118  0609               	decf	memcpy@n^0,f,c
  4276   00311A  A0D8               	btfss	status,0,c
  4277   00311C  060A               	decf	(memcpy@n+1)^0,f,c
  4278   00311E  2809               	incf	memcpy@n^0,w,c
  4279   003120  E106               	bnz	u5551
  4280   003122  280A               	incf	(memcpy@n+1)^0,w,c
  4281   003124  A4D8               	btfss	status,2,c
  4282   003126  EF97  F018         	goto	u5551
  4283   00312A  EF99  F018         	goto	u5550
  4284   00312E                     u5551:
  4285   00312E  EF7C  F018         	goto	l5235
  4286   003132                     u5550:
  4287   003132  0012               	return		;funcret
  4288   003134                     __end_of_memcpy:
  4289                           	callstack 0
  4290                           
  4291 ;; *************** function _labs *****************
  4292 ;; Defined at:
  4293 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  a               4    4[COMRAM] long 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  4    4[COMRAM] long 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4307 ;;      Params:         4       0       0       0       0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4309 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4310 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4311 ;;Total ram usage:        8 bytes
  4312 ;; Hardware stack levels used: 1
  4313 ;; Hardware stack levels required when called: 4
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_efgtoa
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text14
  4322   00308E                     __ptext14:
  4323                           	callstack 0
  4324   00308E                     _labs:
  4325                           	callstack 22
  4326   00308E  BE08               	btfsc	(labs@a+3)^0,7,c
  4327   003090  EF4C  F018         	goto	u5441
  4328   003094  EF4E  F018         	goto	u5440
  4329   003098                     u5441:
  4330   003098  EF58  F018         	goto	l5201
  4331   00309C                     u5440:
  4332   00309C  C005  F005         	movff	labs@a,?_labs
  4333   0030A0  C006  F006         	movff	labs@a+1,?_labs+1
  4334   0030A4  C007  F007         	movff	labs@a+2,?_labs+2
  4335   0030A8  C008  F008         	movff	labs@a+3,?_labs+3
  4336   0030AC  EF71  F018         	goto	l1329
  4337   0030B0                     l5201:
  4338   0030B0  C005  F009         	movff	labs@a,??_labs
  4339   0030B4  C006  F00A         	movff	labs@a+1,??_labs+1
  4340   0030B8  C007  F00B         	movff	labs@a+2,??_labs+2
  4341   0030BC  C008  F00C         	movff	labs@a+3,??_labs+3
  4342   0030C0  1E09               	comf	??_labs^0,f,c
  4343   0030C2  1E0A               	comf	(??_labs+1)^0,f,c
  4344   0030C4  1E0B               	comf	(??_labs+2)^0,f,c
  4345   0030C6  1E0C               	comf	(??_labs+3)^0,f,c
  4346   0030C8  2A09               	incf	??_labs^0,f,c
  4347   0030CA  0E00               	movlw	0
  4348   0030CC  220A               	addwfc	(??_labs+1)^0,f,c
  4349   0030CE  220B               	addwfc	(??_labs+2)^0,f,c
  4350   0030D0  220C               	addwfc	(??_labs+3)^0,f,c
  4351   0030D2  C009  F005         	movff	??_labs,?_labs
  4352   0030D6  C00A  F006         	movff	??_labs+1,?_labs+1
  4353   0030DA  C00B  F007         	movff	??_labs+2,?_labs+2
  4354   0030DE  C00C  F008         	movff	??_labs+3,?_labs+3
  4355   0030E2                     l1329:
  4356   0030E2  0012               	return		;funcret
  4357   0030E4                     __end_of_labs:
  4358                           	callstack 0
  4359                           
  4360 ;; *************** function _floorf *****************
  4361 ;; Defined at:
  4362 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  x               4   76[COMRAM] float 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  u               4    6[BANK0 ] struct .
  4367 ;;  m               4    0[BANK0 ] unsigned long 
  4368 ;;  e               2    4[BANK0 ] int 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  4   76[COMRAM] float 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4378 ;;      Params:         4       0       0       0       0       0       0       0       0
  4379 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4380 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4381 ;;      Totals:        10      10       0       0       0       0       0       0       0
  4382 ;;Total ram usage:       20 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 4
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_efgtoa
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text15
  4393   002172                     __ptext15:
  4394                           	callstack 0
  4395   002172                     _floorf:
  4396                           	callstack 22
  4397   002172  C0C1  F066         	movff	floorf@F521,floorf@u
  4398   002176  C0C2  F067         	movff	floorf@F521+1,floorf@u+1
  4399   00217A  C0C3  F068         	movff	floorf@F521+2,floorf@u+2
  4400   00217E  C0C4  F069         	movff	floorf@F521+3,floorf@u+3
  4401   002182  C04D  F066         	movff	floorf@x,floorf@u
  4402   002186  C04E  F067         	movff	floorf@x+1,floorf@u+1
  4403   00218A  C04F  F068         	movff	floorf@x+2,floorf@u+2
  4404   00218E  C050  F069         	movff	floorf@x+3,floorf@u+3
  4405   002192  0E81               	movlw	129
  4406   002194  6E51               	movwf	??_floorf^0,c
  4407   002196  0EFF               	movlw	255
  4408   002198  6E52               	movwf	(??_floorf+1)^0,c
  4409   00219A  C066  F053         	movff	floorf@u,??_floorf+2
  4410   00219E  C067  F054         	movff	floorf@u+1,??_floorf+3
  4411   0021A2  C068  F055         	movff	floorf@u+2,??_floorf+4
  4412   0021A6  C069  F056         	movff	floorf@u+3,??_floorf+5
  4413   0021AA  0E18               	movlw	24
  4414   0021AC  EFDD  F010         	goto	u5450
  4415   0021B0                     u5455:
  4416   0021B0  90D8               	bcf	status,0,c
  4417   0021B2  3256               	rrcf	(??_floorf+5)^0,f,c
  4418   0021B4  3255               	rrcf	(??_floorf+4)^0,f,c
  4419   0021B6  3254               	rrcf	(??_floorf+3)^0,f,c
  4420   0021B8  3253               	rrcf	(??_floorf+2)^0,f,c
  4421   0021BA                     u5450:
  4422   0021BA  2EE8               	decfsz	wreg,f,c
  4423   0021BC  EFD8  F010         	goto	u5455
  4424   0021C0  5053               	movf	(??_floorf+2)^0,w,c
  4425   0021C2  2451               	addwf	??_floorf^0,w,c
  4426   0021C4  0100               	movlb	0	; () banked
  4427   0021C6  6F64               	movwf	floorf@e& (0+255),b
  4428   0021C8  0E00               	movlw	0
  4429   0021CA  2052               	addwfc	(??_floorf+1)^0,w,c
  4430   0021CC  6F65               	movwf	(floorf@e+1)& (0+255),b
  4431   0021CE  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4432   0021D0  EFF3  F010         	goto	u5461
  4433   0021D4  5165               	movf	(floorf@e+1)& (0+255),w,b
  4434   0021D6  E109               	bnz	u5460
  4435   0021D8  0E17               	movlw	23
  4436   0021DA  5D64               	subwf	floorf@e& (0+255),w,b
  4437   0021DC  A0D8               	btfss	status,0,c
  4438   0021DE  EFF3  F010         	goto	u5461
  4439   0021E2  EFF5  F010         	goto	u5460
  4440   0021E6                     u5461:
  4441   0021E6  EFFF  F010         	goto	l5211
  4442   0021EA                     u5460:
  4443   0021EA                     l5209:
  4444                           
  4445                           ; BSR set to: 0
  4446   0021EA  C04D  F04D         	movff	floorf@x,?_floorf
  4447   0021EE  C04E  F04E         	movff	floorf@x+1,?_floorf+1
  4448   0021F2  C04F  F04F         	movff	floorf@x+2,?_floorf+2
  4449   0021F6  C050  F050         	movff	floorf@x+3,?_floorf+3
  4450   0021FA  EFC3  F011         	goto	l1315
  4451   0021FE                     l5211:
  4452                           
  4453                           ; BSR set to: 0
  4454   0021FE  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4455   002200  EF04  F011         	goto	u5471
  4456   002204  EF06  F011         	goto	u5470
  4457   002208                     u5471:
  4458   002208  EF77  F011         	goto	l5221
  4459   00220C                     u5470:
  4460   00220C                     
  4461                           ; BSR set to: 0
  4462   00220C  C064  F051         	movff	floorf@e,??_floorf
  4463   002210  0EFF               	movlw	255
  4464   002212  6E52               	movwf	(??_floorf+1)^0,c
  4465   002214  0EFF               	movlw	255
  4466   002216  6E53               	movwf	(??_floorf+2)^0,c
  4467   002218  0E7F               	movlw	127
  4468   00221A  6E54               	movwf	(??_floorf+3)^0,c
  4469   00221C  0E00               	movlw	0
  4470   00221E  6E55               	movwf	(??_floorf+4)^0,c
  4471   002220                     u5485:
  4472   002220  6651               	tstfsz	??_floorf^0,c
  4473   002222  EF15  F011         	goto	u5486
  4474   002226  EF1D  F011         	goto	u5487
  4475   00222A                     u5486:
  4476   00222A  3455               	rlcf	(??_floorf+4)^0,w,c
  4477   00222C  3255               	rrcf	(??_floorf+4)^0,f,c
  4478   00222E  3254               	rrcf	(??_floorf+3)^0,f,c
  4479   002230  3253               	rrcf	(??_floorf+2)^0,f,c
  4480   002232  3252               	rrcf	(??_floorf+1)^0,f,c
  4481   002234  2E51               	decfsz	??_floorf^0,f,c
  4482   002236  EF10  F011         	goto	u5485
  4483   00223A                     u5487:
  4484   00223A  C052  F060         	movff	??_floorf+1,floorf@m
  4485   00223E  C053  F061         	movff	??_floorf+2,floorf@m+1
  4486   002242  C054  F062         	movff	??_floorf+3,floorf@m+2
  4487   002246  C055  F063         	movff	??_floorf+4,floorf@m+3
  4488   00224A  0100               	movlb	0	; () banked
  4489   00224C  5160               	movf	floorf@m& (0+255),w,b
  4490   00224E  1566               	andwf	floorf@u& (0+255),w,b
  4491   002250  6E51               	movwf	??_floorf^0,c
  4492   002252  5161               	movf	(floorf@m+1)& (0+255),w,b
  4493   002254  1567               	andwf	(floorf@u+1)& (0+255),w,b
  4494   002256  6E52               	movwf	(??_floorf+1)^0,c
  4495   002258  5162               	movf	(floorf@m+2)& (0+255),w,b
  4496   00225A  1568               	andwf	(floorf@u+2)& (0+255),w,b
  4497   00225C  6E53               	movwf	(??_floorf+2)^0,c
  4498   00225E  5163               	movf	(floorf@m+3)& (0+255),w,b
  4499   002260  1569               	andwf	(floorf@u+3)& (0+255),w,b
  4500   002262  6E54               	movwf	(??_floorf+3)^0,c
  4501   002264  5051               	movf	??_floorf^0,w,c
  4502   002266  1052               	iorwf	(??_floorf+1)^0,w,c
  4503   002268  1053               	iorwf	(??_floorf+2)^0,w,c
  4504   00226A  1054               	iorwf	(??_floorf+3)^0,w,c
  4505   00226C  A4D8               	btfss	status,2,c
  4506   00226E  EF3B  F011         	goto	u5491
  4507   002272  EF3D  F011         	goto	u5490
  4508   002276                     u5491:
  4509   002276  EF3F  F011         	goto	l5217
  4510   00227A                     u5490:
  4511   00227A  EFF5  F010         	goto	l5209
  4512   00227E                     l5217:
  4513                           
  4514                           ; BSR set to: 0
  4515   00227E  C066  F051         	movff	floorf@u,??_floorf
  4516   002282  C067  F052         	movff	floorf@u+1,??_floorf+1
  4517   002286  C068  F053         	movff	floorf@u+2,??_floorf+2
  4518   00228A  C069  F054         	movff	floorf@u+3,??_floorf+3
  4519   00228E  0E20               	movlw	32
  4520   002290  EF4F  F011         	goto	u5500
  4521   002294                     u5505:
  4522   002294  90D8               	bcf	status,0,c
  4523   002296  3254               	rrcf	(??_floorf+3)^0,f,c
  4524   002298  3253               	rrcf	(??_floorf+2)^0,f,c
  4525   00229A  3252               	rrcf	(??_floorf+1)^0,f,c
  4526   00229C  3251               	rrcf	??_floorf^0,f,c
  4527   00229E                     u5500:
  4528   00229E  2EE8               	decfsz	wreg,f,c
  4529   0022A0  EF4A  F011         	goto	u5505
  4530   0022A4  5051               	movf	??_floorf^0,w,c
  4531   0022A6  1052               	iorwf	(??_floorf+1)^0,w,c
  4532   0022A8  1053               	iorwf	(??_floorf+2)^0,w,c
  4533   0022AA  1054               	iorwf	(??_floorf+3)^0,w,c
  4534   0022AC  B4D8               	btfsc	status,2,c
  4535   0022AE  EF5B  F011         	goto	u5511
  4536   0022B2  EF5D  F011         	goto	u5510
  4537   0022B6                     u5511:
  4538   0022B6  EF65  F011         	goto	l1318
  4539   0022BA                     u5510:
  4540   0022BA                     
  4541                           ; BSR set to: 0
  4542   0022BA  5160               	movf	floorf@m& (0+255),w,b
  4543   0022BC  2766               	addwf	floorf@u& (0+255),f,b
  4544   0022BE  5161               	movf	(floorf@m+1)& (0+255),w,b
  4545   0022C0  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  4546   0022C2  5162               	movf	(floorf@m+2)& (0+255),w,b
  4547   0022C4  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  4548   0022C6  5163               	movf	(floorf@m+3)& (0+255),w,b
  4549   0022C8  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  4550   0022CA                     l1318:
  4551                           
  4552                           ; BSR set to: 0
  4553   0022CA  1D60               	comf	floorf@m& (0+255),w,b
  4554   0022CC  6E51               	movwf	??_floorf^0,c
  4555   0022CE  1D61               	comf	(floorf@m+1)& (0+255),w,b
  4556   0022D0  6E52               	movwf	(??_floorf+1)^0,c
  4557   0022D2  1D62               	comf	(floorf@m+2)& (0+255),w,b
  4558   0022D4  6E53               	movwf	(??_floorf+2)^0,c
  4559   0022D6  1D63               	comf	(floorf@m+3)& (0+255),w,b
  4560   0022D8  6E54               	movwf	(??_floorf+3)^0,c
  4561   0022DA  5051               	movf	??_floorf^0,w,c
  4562   0022DC  1766               	andwf	floorf@u& (0+255),f,b
  4563   0022DE  5052               	movf	(??_floorf+1)^0,w,c
  4564   0022E0  1767               	andwf	(floorf@u+1)& (0+255),f,b
  4565   0022E2  5053               	movf	(??_floorf+2)^0,w,c
  4566   0022E4  1768               	andwf	(floorf@u+2)& (0+255),f,b
  4567   0022E6  5054               	movf	(??_floorf+3)^0,w,c
  4568   0022E8  1769               	andwf	(floorf@u+3)& (0+255),f,b
  4569   0022EA  EFBB  F011         	goto	l5229
  4570   0022EE                     l5221:
  4571                           
  4572                           ; BSR set to: 0
  4573   0022EE  C066  F051         	movff	floorf@u,??_floorf
  4574   0022F2  C067  F052         	movff	floorf@u+1,??_floorf+1
  4575   0022F6  C068  F053         	movff	floorf@u+2,??_floorf+2
  4576   0022FA  C069  F054         	movff	floorf@u+3,??_floorf+3
  4577   0022FE  0E20               	movlw	32
  4578   002300  EF87  F011         	goto	u5520
  4579   002304                     u5525:
  4580   002304  90D8               	bcf	status,0,c
  4581   002306  3254               	rrcf	(??_floorf+3)^0,f,c
  4582   002308  3253               	rrcf	(??_floorf+2)^0,f,c
  4583   00230A  3252               	rrcf	(??_floorf+1)^0,f,c
  4584   00230C  3251               	rrcf	??_floorf^0,f,c
  4585   00230E                     u5520:
  4586   00230E  2EE8               	decfsz	wreg,f,c
  4587   002310  EF82  F011         	goto	u5525
  4588   002314  5051               	movf	??_floorf^0,w,c
  4589   002316  1052               	iorwf	(??_floorf+1)^0,w,c
  4590   002318  1053               	iorwf	(??_floorf+2)^0,w,c
  4591   00231A  1054               	iorwf	(??_floorf+3)^0,w,c
  4592   00231C  A4D8               	btfss	status,2,c
  4593   00231E  EF93  F011         	goto	u5531
  4594   002322  EF95  F011         	goto	u5530
  4595   002326                     u5531:
  4596   002326  EF9F  F011         	goto	l5225
  4597   00232A                     u5530:
  4598   00232A                     
  4599                           ; BSR set to: 0
  4600   00232A  0E00               	movlw	0
  4601   00232C  6F66               	movwf	floorf@u& (0+255),b
  4602   00232E  0E00               	movlw	0
  4603   002330  6F67               	movwf	(floorf@u+1)& (0+255),b
  4604   002332  0E00               	movlw	0
  4605   002334  6F68               	movwf	(floorf@u+2)& (0+255),b
  4606   002336  0E00               	movlw	0
  4607   002338  6F69               	movwf	(floorf@u+3)& (0+255),b
  4608   00233A  EFBB  F011         	goto	l5229
  4609   00233E                     l5225:
  4610                           
  4611                           ; BSR set to: 0
  4612   00233E  90D8               	bcf	status,0,c
  4613   002340  3566               	rlcf	floorf@u& (0+255),w,b
  4614   002342  6E51               	movwf	??_floorf^0,c
  4615   002344  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  4616   002346  6E52               	movwf	(??_floorf+1)^0,c
  4617   002348  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  4618   00234A  6E53               	movwf	(??_floorf+2)^0,c
  4619   00234C  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  4620   00234E  6E54               	movwf	(??_floorf+3)^0,c
  4621   002350  5051               	movf	??_floorf^0,w,c
  4622   002352  1052               	iorwf	(??_floorf+1)^0,w,c
  4623   002354  1053               	iorwf	(??_floorf+2)^0,w,c
  4624   002356  1054               	iorwf	(??_floorf+3)^0,w,c
  4625   002358  B4D8               	btfsc	status,2,c
  4626   00235A  EFB1  F011         	goto	u5541
  4627   00235E  EFB3  F011         	goto	u5540
  4628   002362                     u5541:
  4629   002362  EFBB  F011         	goto	l5229
  4630   002366                     u5540:
  4631   002366                     
  4632                           ; BSR set to: 0
  4633   002366  0E00               	movlw	0
  4634   002368  6F66               	movwf	floorf@u& (0+255),b
  4635   00236A  0E00               	movlw	0
  4636   00236C  6F67               	movwf	(floorf@u+1)& (0+255),b
  4637   00236E  0E80               	movlw	128
  4638   002370  6F68               	movwf	(floorf@u+2)& (0+255),b
  4639   002372  0EBF               	movlw	191
  4640   002374  6F69               	movwf	(floorf@u+3)& (0+255),b
  4641   002376                     l5229:
  4642                           
  4643                           ; BSR set to: 0
  4644   002376  C066  F04D         	movff	floorf@u,?_floorf
  4645   00237A  C067  F04E         	movff	floorf@u+1,?_floorf+1
  4646   00237E  C068  F04F         	movff	floorf@u+2,?_floorf+2
  4647   002382  C069  F050         	movff	floorf@u+3,?_floorf+3
  4648   002386                     l1315:
  4649                           
  4650                           ; BSR set to: 0
  4651   002386  0012               	return		;funcret
  4652   002388                     __end_of_floorf:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function ___fpclassifyf *****************
  4656 ;; Defined at:
  4657 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  x               4    4[COMRAM] float 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  u               4   14[COMRAM] struct .
  4662 ;;  e               2   12[COMRAM] int 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2    4[COMRAM] int 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4672 ;;      Params:         4       0       0       0       0       0       0       0       0
  4673 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4674 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4675 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4676 ;;Total ram usage:       14 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; Hardware stack levels required when called: 4
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_efgtoa
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text16
  4687   002CAC                     __ptext16:
  4688                           	callstack 0
  4689   002CAC                     ___fpclassifyf:
  4690                           	callstack 22
  4691   002CAC  C0C5  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4692   002CB0  C0C6  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4693   002CB4  C0C7  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4694   002CB8  C0C8  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4695   002CBC  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4696   002CC0  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4697   002CC4  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4698   002CC8  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4699   002CCC  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4700   002CD0  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4701   002CD4  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4702   002CD8  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4703   002CDC  0E18               	movlw	24
  4704   002CDE  EF76  F016         	goto	u5360
  4705   002CE2                     u5365:
  4706   002CE2  90D8               	bcf	status,0,c
  4707   002CE4  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4708   002CE6  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4709   002CE8  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4710   002CEA  3209               	rrcf	??___fpclassifyf^0,f,c
  4711   002CEC                     u5360:
  4712   002CEC  2EE8               	decfsz	wreg,f,c
  4713   002CEE  EF71  F016         	goto	u5365
  4714   002CF2  5009               	movf	??___fpclassifyf^0,w,c
  4715   002CF4  6E0D               	movwf	___fpclassifyf@e^0,c
  4716   002CF6  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4717   002CF8  500D               	movf	___fpclassifyf@e^0,w,c
  4718   002CFA  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4719   002CFC  A4D8               	btfss	status,2,c
  4720   002CFE  EF83  F016         	goto	u5371
  4721   002D02  EF85  F016         	goto	u5370
  4722   002D06                     u5371:
  4723   002D06  EFA5  F016         	goto	l5183
  4724   002D0A                     u5370:
  4725   002D0A  90D8               	bcf	status,0,c
  4726   002D0C  340F               	rlcf	___fpclassifyf@u^0,w,c
  4727   002D0E  6E09               	movwf	??___fpclassifyf^0,c
  4728   002D10  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4729   002D12  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4730   002D14  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4731   002D16  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4732   002D18  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4733   002D1A  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4734   002D1C  5009               	movf	??___fpclassifyf^0,w,c
  4735   002D1E  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4736   002D20  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4737   002D22  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4738   002D24  A4D8               	btfss	status,2,c
  4739   002D26  EF97  F016         	goto	u5381
  4740   002D2A  EF99  F016         	goto	u5380
  4741   002D2E                     u5381:
  4742   002D2E  EF9F  F016         	goto	l5179
  4743   002D32                     u5380:
  4744   002D32  0E00               	movlw	0
  4745   002D34  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4746   002D36  0E02               	movlw	2
  4747   002D38  6E05               	movwf	?___fpclassifyf^0,c
  4748   002D3A  EFD4  F016         	goto	l1308
  4749   002D3E                     l5179:
  4750   002D3E  0E00               	movlw	0
  4751   002D40  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4752   002D42  0E03               	movlw	3
  4753   002D44  6E05               	movwf	?___fpclassifyf^0,c
  4754   002D46  EFD4  F016         	goto	l1308
  4755   002D4A                     l5183:
  4756   002D4A  280D               	incf	___fpclassifyf@e^0,w,c
  4757   002D4C  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4758   002D4E  A4D8               	btfss	status,2,c
  4759   002D50  EFAC  F016         	goto	u5391
  4760   002D54  EFAE  F016         	goto	u5390
  4761   002D58                     u5391:
  4762   002D58  EFD0  F016         	goto	l5189
  4763   002D5C                     u5390:
  4764   002D5C  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4765   002D60  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4766   002D64  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4767   002D68  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4768   002D6C  0E09               	movlw	9
  4769   002D6E                     u5405:
  4770   002D6E  90D8               	bcf	status,0,c
  4771   002D70  3609               	rlcf	??___fpclassifyf^0,f,c
  4772   002D72  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4773   002D74  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4774   002D76  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4775   002D78  2EE8               	decfsz	wreg,f,c
  4776   002D7A  EFB7  F016         	goto	u5405
  4777   002D7E  5009               	movf	??___fpclassifyf^0,w,c
  4778   002D80  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4779   002D82  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4780   002D84  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4781   002D86  B4D8               	btfsc	status,2,c
  4782   002D88  EFC8  F016         	goto	u5411
  4783   002D8C  EFCB  F016         	goto	u5410
  4784   002D90                     u5411:
  4785   002D90  0E01               	movlw	1
  4786   002D92  EFCC  F016         	goto	u5420
  4787   002D96                     u5410:
  4788   002D96  0E00               	movlw	0
  4789   002D98                     u5420:
  4790   002D98  6E05               	movwf	?___fpclassifyf^0,c
  4791   002D9A  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4792   002D9C  EFD4  F016         	goto	l1308
  4793   002DA0                     l5189:
  4794   002DA0  0E00               	movlw	0
  4795   002DA2  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4796   002DA4  0E04               	movlw	4
  4797   002DA6  6E05               	movwf	?___fpclassifyf^0,c
  4798   002DA8                     l1308:
  4799   002DA8  0012               	return		;funcret
  4800   002DAA                     __end_of___fpclassifyf:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function ___fltol *****************
  4804 ;; Defined at:
  4805 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  f1              4    4[COMRAM] int 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  exp1            1   13[COMRAM] unsigned char 
  4810 ;;  sign1           1   12[COMRAM] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  4    4[COMRAM] long 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4820 ;;      Params:         4       0       0       0       0       0       0       0       0
  4821 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4822 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4823 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4824 ;;Total ram usage:       10 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 4
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_efgtoa
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text17
  4835   002AA2                     __ptext17:
  4836                           	callstack 0
  4837   002AA2                     ___fltol:
  4838                           	callstack 22
  4839   002AA2  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4840   002AA4  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4841   002AA6  6E0E               	movwf	___fltol@exp1^0,c
  4842   002AA8  500E               	movf	___fltol@exp1^0,w,c
  4843   002AAA  A4D8               	btfss	status,2,c
  4844   002AAC  EF5A  F015         	goto	u5271
  4845   002AB0  EF5C  F015         	goto	u5270
  4846   002AB4                     u5271:
  4847   002AB4  EF66  F015         	goto	l5121
  4848   002AB8                     u5270:
  4849   002AB8                     l5117:
  4850   002AB8  0E00               	movlw	0
  4851   002ABA  6E05               	movwf	?___fltol^0,c
  4852   002ABC  0E00               	movlw	0
  4853   002ABE  6E06               	movwf	(?___fltol+1)^0,c
  4854   002AC0  0E00               	movlw	0
  4855   002AC2  6E07               	movwf	(?___fltol+2)^0,c
  4856   002AC4  0E00               	movlw	0
  4857   002AC6  6E08               	movwf	(?___fltol+3)^0,c
  4858   002AC8  EFD3  F015         	goto	l799
  4859   002ACC                     l5121:
  4860   002ACC  C005  F009         	movff	___fltol@f1,??___fltol
  4861   002AD0  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4862   002AD4  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4863   002AD8  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4864   002ADC  0E20               	movlw	32
  4865   002ADE  EF76  F015         	goto	u5280
  4866   002AE2                     u5285:
  4867   002AE2  90D8               	bcf	status,0,c
  4868   002AE4  320C               	rrcf	(??___fltol+3)^0,f,c
  4869   002AE6  320B               	rrcf	(??___fltol+2)^0,f,c
  4870   002AE8  320A               	rrcf	(??___fltol+1)^0,f,c
  4871   002AEA  3209               	rrcf	??___fltol^0,f,c
  4872   002AEC                     u5280:
  4873   002AEC  2EE8               	decfsz	wreg,f,c
  4874   002AEE  EF71  F015         	goto	u5285
  4875   002AF2  5009               	movf	??___fltol^0,w,c
  4876   002AF4  6E0D               	movwf	___fltol@sign1^0,c
  4877   002AF6  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4878   002AF8  0EFF               	movlw	255
  4879   002AFA  1605               	andwf	___fltol@f1^0,f,c
  4880   002AFC  0EFF               	movlw	255
  4881   002AFE  1606               	andwf	(___fltol@f1+1)^0,f,c
  4882   002B00  0EFF               	movlw	255
  4883   002B02  1607               	andwf	(___fltol@f1+2)^0,f,c
  4884   002B04  0E00               	movlw	0
  4885   002B06  1608               	andwf	(___fltol@f1+3)^0,f,c
  4886   002B08  0E96               	movlw	150
  4887   002B0A  5E0E               	subwf	___fltol@exp1^0,f,c
  4888   002B0C  BE0E               	btfsc	___fltol@exp1^0,7,c
  4889   002B0E  EF8D  F015         	goto	u5290
  4890   002B12  EF8B  F015         	goto	u5291
  4891   002B16                     u5291:
  4892   002B16  EFA3  F015         	goto	l5141
  4893   002B1A                     u5290:
  4894   002B1A  500E               	movf	___fltol@exp1^0,w,c
  4895   002B1C  0A80               	xorlw	128
  4896   002B1E  0F97               	addlw	151
  4897   002B20  B0D8               	btfsc	status,0,c
  4898   002B22  EF95  F015         	goto	u5301
  4899   002B26  EF97  F015         	goto	u5300
  4900   002B2A                     u5301:
  4901   002B2A  EF99  F015         	goto	l5137
  4902   002B2E                     u5300:
  4903   002B2E  EF5C  F015         	goto	l5117
  4904   002B32                     l5137:
  4905   002B32  90D8               	bcf	status,0,c
  4906   002B34  3208               	rrcf	(___fltol@f1+3)^0,f,c
  4907   002B36  3207               	rrcf	(___fltol@f1+2)^0,f,c
  4908   002B38  3206               	rrcf	(___fltol@f1+1)^0,f,c
  4909   002B3A  3205               	rrcf	___fltol@f1^0,f,c
  4910   002B3C  3E0E               	incfsz	___fltol@exp1^0,f,c
  4911   002B3E  EF99  F015         	goto	l5137
  4912   002B42  EFBB  F015         	goto	l5151
  4913   002B46                     l5141:
  4914   002B46  0E1F               	movlw	31
  4915   002B48  640E               	cpfsgt	___fltol@exp1^0,c
  4916   002B4A  EFA9  F015         	goto	u5311
  4917   002B4E  EFAB  F015         	goto	u5310
  4918   002B52                     u5311:
  4919   002B52  EFB3  F015         	goto	l5149
  4920   002B56                     u5310:
  4921   002B56  EF5C  F015         	goto	l5117
  4922   002B5A                     l5147:
  4923   002B5A  90D8               	bcf	status,0,c
  4924   002B5C  3605               	rlcf	___fltol@f1^0,f,c
  4925   002B5E  3606               	rlcf	(___fltol@f1+1)^0,f,c
  4926   002B60  3607               	rlcf	(___fltol@f1+2)^0,f,c
  4927   002B62  3608               	rlcf	(___fltol@f1+3)^0,f,c
  4928   002B64  060E               	decf	___fltol@exp1^0,f,c
  4929   002B66                     l5149:
  4930   002B66  500E               	movf	___fltol@exp1^0,w,c
  4931   002B68  A4D8               	btfss	status,2,c
  4932   002B6A  EFB9  F015         	goto	u5321
  4933   002B6E  EFBB  F015         	goto	u5320
  4934   002B72                     u5321:
  4935   002B72  EFAD  F015         	goto	l5147
  4936   002B76                     u5320:
  4937   002B76                     l5151:
  4938   002B76  500D               	movf	___fltol@sign1^0,w,c
  4939   002B78  B4D8               	btfsc	status,2,c
  4940   002B7A  EFC1  F015         	goto	u5331
  4941   002B7E  EFC3  F015         	goto	u5330
  4942   002B82                     u5331:
  4943   002B82  EFCB  F015         	goto	l5155
  4944   002B86                     u5330:
  4945   002B86  1E08               	comf	(___fltol@f1+3)^0,f,c
  4946   002B88  1E07               	comf	(___fltol@f1+2)^0,f,c
  4947   002B8A  1E06               	comf	(___fltol@f1+1)^0,f,c
  4948   002B8C  6C05               	negf	___fltol@f1^0,c
  4949   002B8E  0E00               	movlw	0
  4950   002B90  2206               	addwfc	(___fltol@f1+1)^0,f,c
  4951   002B92  2207               	addwfc	(___fltol@f1+2)^0,f,c
  4952   002B94  2208               	addwfc	(___fltol@f1+3)^0,f,c
  4953   002B96                     l5155:
  4954   002B96  C005  F005         	movff	___fltol@f1,?___fltol
  4955   002B9A  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  4956   002B9E  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  4957   002BA2  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  4958   002BA6                     l799:
  4959   002BA6  0012               	return		;funcret
  4960   002BA8                     __end_of___fltol:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function ___flneg *****************
  4964 ;; Defined at:
  4965 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  f1              4    4[COMRAM] long 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  4    4[COMRAM] long 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4979 ;;      Params:         4       0       0       0       0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4982 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4983 ;;Total ram usage:        4 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 4
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_efgtoa
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text18
  4994   00348E                     __ptext18:
  4995                           	callstack 0
  4996   00348E                     ___flneg:
  4997                           	callstack 22
  4998   00348E  5005               	movf	___flneg@f1^0,w,c
  4999   003490  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5000   003492  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5001   003494  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5002   003496  B4D8               	btfsc	status,2,c
  5003   003498  EF50  F01A         	goto	u5261
  5004   00349C  EF52  F01A         	goto	u5260
  5005   0034A0                     u5261:
  5006   0034A0  EF5A  F01A         	goto	l5111
  5007   0034A4                     u5260:
  5008   0034A4  0E00               	movlw	0
  5009   0034A6  1A05               	xorwf	___flneg@f1^0,f,c
  5010   0034A8  0E00               	movlw	0
  5011   0034AA  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5012   0034AC  0E00               	movlw	0
  5013   0034AE  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5014   0034B0  0E80               	movlw	128
  5015   0034B2  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5016   0034B4                     l5111:
  5017   0034B4  C005  F005         	movff	___flneg@f1,?___flneg
  5018   0034B8  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5019   0034BC  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5020   0034C0  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5021   0034C4  0012               	return		;funcret
  5022   0034C6                     __end_of___flneg:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function ___fleq *****************
  5026 ;; Defined at:
  5027 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  ff1             4    4[COMRAM] long 
  5030 ;;  ff2             4    8[COMRAM] long 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;		None               void
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5042 ;;      Params:         8       0       0       0       0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5044 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5045 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5046 ;;Total ram usage:       12 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 4
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_efgtoa
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text19
  5057   002E64                     __ptext19:
  5058                           	callstack 0
  5059   002E64                     ___fleq:
  5060                           	callstack 22
  5061   002E64  0E00               	movlw	0
  5062   002E66  1405               	andwf	___fleq@ff1^0,w,c
  5063   002E68  6E0D               	movwf	??___fleq^0,c
  5064   002E6A  0E00               	movlw	0
  5065   002E6C  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5066   002E6E  6E0E               	movwf	(??___fleq+1)^0,c
  5067   002E70  0E80               	movlw	128
  5068   002E72  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5069   002E74  6E0F               	movwf	(??___fleq+2)^0,c
  5070   002E76  0E7F               	movlw	127
  5071   002E78  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5072   002E7A  6E10               	movwf	(??___fleq+3)^0,c
  5073   002E7C  500D               	movf	??___fleq^0,w,c
  5074   002E7E  100E               	iorwf	(??___fleq+1)^0,w,c
  5075   002E80  100F               	iorwf	(??___fleq+2)^0,w,c
  5076   002E82  1010               	iorwf	(??___fleq+3)^0,w,c
  5077   002E84  A4D8               	btfss	status,2,c
  5078   002E86  EF47  F017         	goto	u5181
  5079   002E8A  EF49  F017         	goto	u5180
  5080   002E8E                     u5181:
  5081   002E8E  EF51  F017         	goto	l5073
  5082   002E92                     u5180:
  5083   002E92  0E00               	movlw	0
  5084   002E94  6E05               	movwf	___fleq@ff1^0,c
  5085   002E96  0E00               	movlw	0
  5086   002E98  6E06               	movwf	(___fleq@ff1+1)^0,c
  5087   002E9A  0E00               	movlw	0
  5088   002E9C  6E07               	movwf	(___fleq@ff1+2)^0,c
  5089   002E9E  0E00               	movlw	0
  5090   002EA0  6E08               	movwf	(___fleq@ff1+3)^0,c
  5091   002EA2                     l5073:
  5092   002EA2  0E00               	movlw	0
  5093   002EA4  1409               	andwf	___fleq@ff2^0,w,c
  5094   002EA6  6E0D               	movwf	??___fleq^0,c
  5095   002EA8  0E00               	movlw	0
  5096   002EAA  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5097   002EAC  6E0E               	movwf	(??___fleq+1)^0,c
  5098   002EAE  0E80               	movlw	128
  5099   002EB0  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5100   002EB2  6E0F               	movwf	(??___fleq+2)^0,c
  5101   002EB4  0E7F               	movlw	127
  5102   002EB6  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5103   002EB8  6E10               	movwf	(??___fleq+3)^0,c
  5104   002EBA  500D               	movf	??___fleq^0,w,c
  5105   002EBC  100E               	iorwf	(??___fleq+1)^0,w,c
  5106   002EBE  100F               	iorwf	(??___fleq+2)^0,w,c
  5107   002EC0  1010               	iorwf	(??___fleq+3)^0,w,c
  5108   002EC2  A4D8               	btfss	status,2,c
  5109   002EC4  EF66  F017         	goto	u5191
  5110   002EC8  EF68  F017         	goto	u5190
  5111   002ECC                     u5191:
  5112   002ECC  EF70  F017         	goto	l5077
  5113   002ED0                     u5190:
  5114   002ED0  0E00               	movlw	0
  5115   002ED2  6E09               	movwf	___fleq@ff2^0,c
  5116   002ED4  0E00               	movlw	0
  5117   002ED6  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5118   002ED8  0E00               	movlw	0
  5119   002EDA  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5120   002EDC  0E00               	movlw	0
  5121   002EDE  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5122   002EE0                     l5077:
  5123   002EE0  5009               	movf	___fleq@ff2^0,w,c
  5124   002EE2  1805               	xorwf	___fleq@ff1^0,w,c
  5125   002EE4  E10F               	bnz	u5200
  5126   002EE6  500A               	movf	(___fleq@ff2+1)^0,w,c
  5127   002EE8  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5128   002EEA  E10C               	bnz	u5200
  5129   002EEC  500B               	movf	(___fleq@ff2+2)^0,w,c
  5130   002EEE  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5131   002EF0  E109               	bnz	u5200
  5132   002EF2  500C               	movf	(___fleq@ff2+3)^0,w,c
  5133   002EF4  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5134   002EF6  B4D8               	btfsc	status,2,c
  5135   002EF8  EF80  F017         	goto	u5201
  5136   002EFC  EF82  F017         	goto	u5200
  5137   002F00                     u5201:
  5138   002F00  EF85  F017         	goto	l5081
  5139   002F04                     u5200:
  5140   002F04  90D8               	bcf	status,0,c
  5141   002F06  EF86  F017         	goto	l761
  5142   002F0A                     l5081:
  5143   002F0A  80D8               	bsf	status,0,c
  5144   002F0C                     l761:
  5145   002F0C  0012               	return		;funcret
  5146   002F0E                     __end_of___fleq:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function _spi_s_init *****************
  5150 ;; Defined at:
  5151 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		None
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5168 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used: 1
  5171 ;; Hardware stack levels required when called: 4
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text20
  5180   00368A                     __ptext20:
  5181                           	callstack 0
  5182   00368A                     _spi_s_init:
  5183                           	callstack 26
  5184   00368A                     
  5185                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
  5186   00368A  9294               	bcf	148,1,c	;volatile
  5187                           
  5188                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
  5189   00368C  9493               	bcf	147,2,c	;volatile
  5190                           
  5191                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
  5192   00368E  9494               	bcf	148,2,c	;volatile
  5193                           
  5194                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
  5195   003690  8693               	bsf	147,3,c	;volatile
  5196                           
  5197                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
  5198   003692  9293               	bcf	147,1,c	;volatile
  5199                           
  5200                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
  5201   003694  8094               	bsf	148,0,c	;volatile
  5202                           
  5203                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
  5204   003696  948A               	bcf	138,2,c	;volatile
  5205                           
  5206                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
  5207   003698  948B               	bcf	139,2,c	;volatile
  5208                           
  5209                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
  5210   00369A  928B               	bcf	139,1,c	;volatile
  5211                           
  5212                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
  5213   00369C  928A               	bcf	138,1,c	;volatile
  5214   00369E  0012               	return		;funcret
  5215   0036A0                     __end_of_spi_s_init:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _nrf2401_recibe *****************
  5219 ;; Defined at:
  5220 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  valor_          1    6[COMRAM] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      unsigned char 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0
  5235 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5237 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5238 ;;Total ram usage:        1 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 5
  5241 ;; This function calls:
  5242 ;;		_spi_s_read
  5243 ;;		_spi_s_write
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;;		_nrf2401_recibe_Text
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text21
  5251   003658                     __ptext21:
  5252                           	callstack 0
  5253   003658                     _nrf2401_recibe:
  5254                           	callstack 25
  5255   003658                     
  5256                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
  5257   003658  948B               	bcf	139,2,c	;volatile
  5258   00365A                     
  5259                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
  5260   00365A  0E61               	movlw	97
  5261   00365C  ECC1  F018         	call	_spi_s_write
  5262                           
  5263                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
  5264   003660  EC09  F019         	call	_spi_s_read	;wreg free
  5265   003664  6E07               	movwf	nrf2401_recibe@valor_^0,c
  5266   003666                     
  5267                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
  5268   003666  848B               	bsf	139,2,c	;volatile
  5269   003668                     
  5270                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5271   003668  0E14               	movlw	20
  5272   00366A                     u6427:
  5273   00366A  2EE8               	decfsz	wreg,f,c
  5274   00366C  D7FE               	bra	u6427
  5275   00366E                     
  5276                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
  5277   00366E  5007               	movf	nrf2401_recibe@valor_^0,w,c
  5278   003670  0012               	return		;funcret
  5279   003672                     __end_of_nrf2401_recibe:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _nrf2401_haydatos *****************
  5283 ;; Defined at:
  5284 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      unsigned char 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5298 ;;      Params:         0       0       0       0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; Hardware stack levels required when called: 7
  5305 ;; This function calls:
  5306 ;;		_get_Status
  5307 ;; This function is called by:
  5308 ;;		_main
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text22
  5313   0035E4                     __ptext22:
  5314                           	callstack 0
  5315   0035E4                     _nrf2401_haydatos:
  5316                           	callstack 23
  5317   0035E4                     
  5318                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
  5319   0035E4  EC96  F01B         	call	_get_Status	;wreg free
  5320   0035E8  0A40               	xorlw	64
  5321   0035EA  A4D8               	btfss	status,2,c
  5322   0035EC  EFFA  F01A         	goto	u6141
  5323   0035F0  EFFC  F01A         	goto	u6140
  5324   0035F4                     u6141:
  5325   0035F4  EFFF  F01A         	goto	l5853
  5326   0035F8                     u6140:
  5327   0035F8  0E01               	movlw	1
  5328   0035FA  EF00  F01B         	goto	l409
  5329   0035FE                     l5853:
  5330   0035FE  0E00               	movlw	0
  5331   003600                     l409:
  5332   003600  0012               	return		;funcret
  5333   003602                     __end_of_nrf2401_haydatos:
  5334                           	callstack 0
  5335                           
  5336 ;; *************** function _get_Status *****************
  5337 ;; Defined at:
  5338 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      unsigned char 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 6
  5359 ;; This function calls:
  5360 ;;		_nrf2401_read
  5361 ;; This function is called by:
  5362 ;;		_nrf2401_haydatos
  5363 ;;		_nrf2401_recibe_Text
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text23
  5368   00372C                     __ptext23:
  5369                           	callstack 0
  5370   00372C                     _get_Status:
  5371                           	callstack 23
  5372   00372C                     
  5373                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
  5374   00372C  0E07               	movlw	7
  5375   00372E  EC10  F01B         	call	_nrf2401_read
  5376   003732  0012               	return		;funcret
  5377   003734                     __end_of_get_Status:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _nrf2401_read *****************
  5381 ;; Defined at:
  5382 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  reg             1    wreg     unsigned char 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  reg             1    6[COMRAM] unsigned char 
  5387 ;;  dato_           1    7[COMRAM] unsigned char 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      unsigned char 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, status,0, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5397 ;;      Params:         0       0       0       0       0       0       0       0       0
  5398 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5400 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5401 ;;Total ram usage:        2 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; Hardware stack levels required when called: 5
  5404 ;; This function calls:
  5405 ;;		_spi_s_read
  5406 ;;		_spi_s_write
  5407 ;; This function is called by:
  5408 ;;		_get_Status
  5409 ;;		_get_fifo_status
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text24
  5414   003620                     __ptext24:
  5415                           	callstack 0
  5416   003620                     _nrf2401_read:
  5417                           	callstack 23
  5418                           
  5419                           ;incstack = 0
  5420                           ;nrf2401_read@reg stored from wreg
  5421   003620  6E07               	movwf	nrf2401_read@reg^0,c
  5422   003622                     
  5423                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
  5424   003622  948B               	bcf	139,2,c	;volatile
  5425   003624                     
  5426                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
  5427   003624  5007               	movf	nrf2401_read@reg^0,w,c
  5428   003626  ECC1  F018         	call	_spi_s_write
  5429   00362A                     
  5430                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
  5431   00362A  EC09  F019         	call	_spi_s_read	;wreg free
  5432   00362E  6E08               	movwf	nrf2401_read@dato_^0,c
  5433   003630                     
  5434                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
  5435   003630  848B               	bsf	139,2,c	;volatile
  5436   003632                     
  5437                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5438   003632  0E14               	movlw	20
  5439   003634                     u6437:
  5440   003634  2EE8               	decfsz	wreg,f,c
  5441   003636  D7FE               	bra	u6437
  5442                           
  5443                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
  5444   003638  5008               	movf	nrf2401_read@dato_^0,w,c
  5445   00363A  0012               	return		;funcret
  5446   00363C                     __end_of_nrf2401_read:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _spi_s_read *****************
  5450 ;; Defined at:
  5451 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;		None
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  cont_s          1    5[COMRAM] unsigned char 
  5456 ;;  dato_           1    4[COMRAM] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      unsigned char 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0
  5467 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5469 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5470 ;;Total ram usage:        2 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 4
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_nrf2401_read
  5477 ;;		_nrf2401_recibe
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text25
  5482   003212                     __ptext25:
  5483                           	callstack 0
  5484   003212                     _spi_s_read:
  5485                           	callstack 25
  5486   003212                     
  5487                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
  5488   003212  0E00               	movlw	0
  5489   003214  6E06               	movwf	spi_s_read@cont_s^0,c
  5490                           
  5491                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
  5492   003216  0E00               	movlw	0
  5493   003218  6E05               	movwf	spi_s_read@dato_^0,c
  5494                           
  5495                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
  5496   00321A  0E00               	movlw	0
  5497   00321C  6E06               	movwf	spi_s_read@cont_s^0,c
  5498   00321E                     l5251:
  5499                           
  5500                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
  5501   00321E  90D8               	bcf	status,0,c
  5502   003220  3605               	rlcf	spi_s_read@dato_^0,f,c
  5503   003222                     
  5504                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
  5505   003222  848A               	bsf	138,2,c	;volatile
  5506   003224                     
  5507                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  5508   003224  0E04               	movlw	4
  5509   003226                     u6447:
  5510   003226  2EE8               	decfsz	wreg,f,c
  5511   003228  D7FE               	bra	u6447
  5512   00322A                     
  5513                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
  5514   00322A  A681               	btfss	129,3,c	;volatile
  5515   00322C  EF1A  F019         	goto	u5561
  5516   003230  EF1C  F019         	goto	u5560
  5517   003234                     u5561:
  5518   003234  EF1D  F019         	goto	l5261
  5519   003238                     u5560:
  5520   003238                     
  5521                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
  5522   003238  8005               	bsf	spi_s_read@dato_^0,0,c
  5523   00323A                     l5261:
  5524                           
  5525                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
  5526   00323A  948A               	bcf	138,2,c	;volatile
  5527   00323C                     
  5528                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  5529   00323C  0E04               	movlw	4
  5530   00323E                     u6457:
  5531   00323E  2EE8               	decfsz	wreg,f,c
  5532   003240  D7FE               	bra	u6457
  5533   003242                     
  5534                           ;./Librerias/nRF24L01_2.h: 57:     }
  5535   003242  2A06               	incf	spi_s_read@cont_s^0,f,c
  5536   003244  0E07               	movlw	7
  5537   003246  6406               	cpfsgt	spi_s_read@cont_s^0,c
  5538   003248  EF28  F019         	goto	u5571
  5539   00324C  EF2A  F019         	goto	u5570
  5540   003250                     u5571:
  5541   003250  EF0F  F019         	goto	l5251
  5542   003254                     u5570:
  5543   003254                     
  5544                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
  5545   003254  5005               	movf	spi_s_read@dato_^0,w,c
  5546   003256  0012               	return		;funcret
  5547   003258                     __end_of_spi_s_read:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function _nrF2401_init_RX *****************
  5551 ;; Defined at:
  5552 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  canal           1    wreg     unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  canal           1   10[COMRAM] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        1 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; Hardware stack levels required when called: 7
  5573 ;; This function calls:
  5574 ;;		_flush_TX_RX
  5575 ;;		_nrf2401_direccion_TX_RX
  5576 ;;		_nrf2401_write
  5577 ;; This function is called by:
  5578 ;;		_main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text26
  5583   002FB4                     __ptext26:
  5584                           	callstack 0
  5585   002FB4                     _nrF2401_init_RX:
  5586                           	callstack 23
  5587                           
  5588                           ;incstack = 0
  5589                           ;nrF2401_init_RX@canal stored from wreg
  5590   002FB4  6E0B               	movwf	nrF2401_init_RX@canal^0,c
  5591   002FB6                     
  5592                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
  5593   002FB6  928A               	bcf	138,1,c	;volatile
  5594   002FB8                     
  5595                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
  5596   002FB8  0E0C               	movlw	12
  5597   002FBA  6E07               	movwf	nrf2401_write@valor^0,c
  5598   002FBC  0E00               	movlw	0
  5599   002FBE  EC1E  F01B         	call	_nrf2401_write
  5600                           
  5601                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
  5602   002FC2  0E00               	movlw	0
  5603   002FC4  6E07               	movwf	nrf2401_write@valor^0,c
  5604   002FC6  0E04               	movlw	4
  5605   002FC8  EC1E  F01B         	call	_nrf2401_write
  5606                           
  5607                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
  5608   002FCC  0E03               	movlw	3
  5609   002FCE  6E07               	movwf	nrf2401_write@valor^0,c
  5610   002FD0  0E03               	movlw	3
  5611   002FD2  EC1E  F01B         	call	_nrf2401_write
  5612                           
  5613                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x10 + 0x06);
  5614   002FD6  0E16               	movlw	22
  5615   002FD8  6E07               	movwf	nrf2401_write@valor^0,c
  5616   002FDA  0E06               	movlw	6
  5617   002FDC  EC1E  F01B         	call	_nrf2401_write
  5618                           
  5619                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
  5620   002FE0  C00B  F007         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
  5621   002FE4  0E05               	movlw	5
  5622   002FE6  EC1E  F01B         	call	_nrf2401_write
  5623                           
  5624                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
  5625   002FEA  0E00               	movlw	0
  5626   002FEC  6E07               	movwf	nrf2401_write@valor^0,c
  5627   002FEE  0E01               	movlw	1
  5628   002FF0  EC1E  F01B         	call	_nrf2401_write
  5629                           
  5630                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
  5631   002FF4  0E01               	movlw	1
  5632   002FF6  6E07               	movwf	nrf2401_write@valor^0,c
  5633   002FF8  0E11               	movlw	17
  5634   002FFA  EC1E  F01B         	call	_nrf2401_write
  5635                           
  5636                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
  5637   002FFE  0E0F               	movlw	15
  5638   003000  6E07               	movwf	nrf2401_write@valor^0,c
  5639   003002  0E00               	movlw	0
  5640   003004  EC1E  F01B         	call	_nrf2401_write
  5641   003008                     
  5642                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
  5643   003008  0E0A               	movlw	low _direccion_tx
  5644   00300A  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  5645   00300C  0E10               	movlw	16
  5646   00300E  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  5647   003010  ECB0  F019         	call	_nrf2401_direccion_TX_RX	;wreg free
  5648   003014                     
  5649                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
  5650   003014  0E0A               	movlw	low _direccion_tx
  5651   003016  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  5652   003018  0E0A               	movlw	10
  5653   00301A  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  5654   00301C  ECB0  F019         	call	_nrf2401_direccion_TX_RX	;wreg free
  5655                           
  5656                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
  5657   003020  EC39  F01B         	call	_flush_TX_RX	;wreg free
  5658   003024                     
  5659                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
  5660   003024  828A               	bsf	138,1,c	;volatile
  5661   003026  0012               	return		;funcret
  5662   003028                     __end_of_nrF2401_init_RX:
  5663                           	callstack 0
  5664                           
  5665 ;; *************** function _nrf2401_direccion_TX_RX *****************
  5666 ;; Defined at:
  5667 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  direccion_      1    6[COMRAM] PTR const unsigned char 
  5670 ;;		 -> direccion_tx(5), 
  5671 ;;  registro        1    7[COMRAM] unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  cont_s          1    9[COMRAM] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5683 ;;      Params:         2       0       0       0       0       0       0       0       0
  5684 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5686 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5687 ;;Total ram usage:        4 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 5
  5690 ;; This function calls:
  5691 ;;		_spi_s_write
  5692 ;; This function is called by:
  5693 ;;		_nrF2401_init_RX
  5694 ;;		_nrF2401_init_TX
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text27
  5699   003360                     __ptext27:
  5700                           	callstack 0
  5701   003360                     _nrf2401_direccion_TX_RX:
  5702                           	callstack 24
  5703   003360                     
  5704                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
  5705   003360  948B               	bcf	139,2,c	;volatile
  5706   003362                     
  5707                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
  5708   003362  5008               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
  5709   003364  0920               	iorlw	32
  5710   003366  ECC1  F018         	call	_spi_s_write
  5711   00336A                     
  5712                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
  5713   00336A  0E00               	movlw	0
  5714   00336C  6E0A               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
  5715   00336E                     l5693:
  5716                           
  5717                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
  5718   00336E  5007               	movf	nrf2401_direccion_TX_RX@direccion_^0,w,c
  5719   003370  240A               	addwf	nrf2401_direccion_TX_RX@cont_s^0,w,c
  5720   003372  6E09               	movwf	??_nrf2401_direccion_TX_RX^0,c
  5721   003374  C009  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
  5722   003378                     	if	1	;There is more than 1 active tblptr byte
  5723   003378  0E08               	movlw	high __smallconst
  5724   00337A  6EF7               	movwf	tblptrh,c
  5725   00337C                     	endif
  5726   00337C                     	if	0	;tblptru may be non-zero
  5727   00337C                     	endif
  5728   00337C                     	if	0	;tblptru may be non-zero
  5729   00337C                     	endif
  5730   00337C  0008               	tblrd		*
  5731   00337E  50F5               	movf	tablat,w,c
  5732   003380  ECC1  F018         	call	_spi_s_write
  5733   003384                     
  5734                           ;./Librerias/nRF24L01_2.h: 120:     }
  5735   003384  2A0A               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
  5736   003386  0E04               	movlw	4
  5737   003388  640A               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
  5738   00338A  EFC9  F019         	goto	u5991
  5739   00338E  EFCB  F019         	goto	u5990
  5740   003392                     u5991:
  5741   003392  EFB7  F019         	goto	l5693
  5742   003396                     u5990:
  5743   003396                     
  5744                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
  5745   003396  848B               	bsf	139,2,c	;volatile
  5746   003398                     
  5747                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5748   003398  0E14               	movlw	20
  5749   00339A                     u6467:
  5750   00339A  2EE8               	decfsz	wreg,f,c
  5751   00339C  D7FE               	bra	u6467
  5752   00339E  0012               	return		;funcret
  5753   0033A0                     __end_of_nrf2401_direccion_TX_RX:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function _flush_TX_RX *****************
  5757 ;; Defined at:
  5758 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 6
  5779 ;; This function calls:
  5780 ;;		_nrf2401_comando
  5781 ;;		_nrf2401_write
  5782 ;; This function is called by:
  5783 ;;		_nrF2401_init_RX
  5784 ;;		_nrF2401_init_TX
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text28
  5789   003672                     __ptext28:
  5790                           	callstack 0
  5791   003672                     _flush_TX_RX:
  5792                           	callstack 23
  5793   003672                     
  5794                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
  5795   003672  0E70               	movlw	112
  5796   003674  6E07               	movwf	nrf2401_write@valor^0,c
  5797   003676  0E07               	movlw	7
  5798   003678  EC1E  F01B         	call	_nrf2401_write
  5799                           
  5800                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
  5801   00367C  0EE1               	movlw	225
  5802   00367E  EC66  F01B         	call	_nrf2401_comando
  5803                           
  5804                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
  5805   003682  0EE2               	movlw	226
  5806   003684  EC66  F01B         	call	_nrf2401_comando
  5807   003688  0012               	return		;funcret
  5808   00368A                     __end_of_flush_TX_RX:
  5809                           	callstack 0
  5810                           
  5811 ;; *************** function _nrf2401_write *****************
  5812 ;; Defined at:
  5813 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  reg             1    wreg     unsigned char 
  5816 ;;  valor           1    6[COMRAM] unsigned char 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  reg             1    7[COMRAM] unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5828 ;;      Params:         1       0       0       0       0       0       0       0       0
  5829 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5831 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5832 ;;Total ram usage:        2 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; Hardware stack levels required when called: 5
  5835 ;; This function calls:
  5836 ;;		_spi_s_write
  5837 ;; This function is called by:
  5838 ;;		_flush_TX_RX
  5839 ;;		_nrF2401_init_RX
  5840 ;;		_flush_RX
  5841 ;;		_flush_TX
  5842 ;;		_nrf2401_envia
  5843 ;;		_nrF2401_init_TX
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text29
  5848   00363C                     __ptext29:
  5849                           	callstack 0
  5850   00363C                     _nrf2401_write:
  5851                           	callstack 24
  5852                           
  5853                           ;incstack = 0
  5854                           ;nrf2401_write@reg stored from wreg
  5855   00363C  6E08               	movwf	nrf2401_write@reg^0,c
  5856   00363E                     
  5857                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
  5858   00363E  948B               	bcf	139,2,c	;volatile
  5859   003640                     
  5860                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
  5861   003640  5008               	movf	nrf2401_write@reg^0,w,c
  5862   003642  0920               	iorlw	32
  5863   003644  ECC1  F018         	call	_spi_s_write
  5864                           
  5865                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
  5866   003648  5007               	movf	nrf2401_write@valor^0,w,c
  5867   00364A  ECC1  F018         	call	_spi_s_write
  5868   00364E                     
  5869                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
  5870   00364E  848B               	bsf	139,2,c	;volatile
  5871   003650                     
  5872                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5873   003650  0E14               	movlw	20
  5874   003652                     u6477:
  5875   003652  2EE8               	decfsz	wreg,f,c
  5876   003654  D7FE               	bra	u6477
  5877   003656  0012               	return		;funcret
  5878   003658                     __end_of_nrf2401_write:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function _nrf2401_comando *****************
  5882 ;; Defined at:
  5883 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  comando         1    wreg     unsigned char 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  comando         1    6[COMRAM] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0
  5898 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5900 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5901 ;;Total ram usage:        1 bytes
  5902 ;; Hardware stack levels used: 1
  5903 ;; Hardware stack levels required when called: 5
  5904 ;; This function calls:
  5905 ;;		_spi_s_write
  5906 ;; This function is called by:
  5907 ;;		_flush_TX_RX
  5908 ;;		_flush_RX
  5909 ;;		_flush_TX
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text30
  5914   0036CC                     __ptext30:
  5915                           	callstack 0
  5916   0036CC                     _nrf2401_comando:
  5917                           	callstack 23
  5918                           
  5919                           ;incstack = 0
  5920                           ;nrf2401_comando@comando stored from wreg
  5921   0036CC  6E07               	movwf	nrf2401_comando@comando^0,c
  5922   0036CE                     
  5923                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  5924   0036CE  948B               	bcf	139,2,c	;volatile
  5925   0036D0                     
  5926                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  5927   0036D0  5007               	movf	nrf2401_comando@comando^0,w,c
  5928   0036D2  ECC1  F018         	call	_spi_s_write
  5929   0036D6                     
  5930                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  5931   0036D6  848B               	bsf	139,2,c	;volatile
  5932   0036D8                     
  5933                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5934   0036D8  0E14               	movlw	20
  5935   0036DA                     u6487:
  5936   0036DA  2EE8               	decfsz	wreg,f,c
  5937   0036DC  D7FE               	bra	u6487
  5938   0036DE  0012               	return		;funcret
  5939   0036E0                     __end_of_nrf2401_comando:
  5940                           	callstack 0
  5941                           
  5942 ;; *************** function _spi_s_write *****************
  5943 ;; Defined at:
  5944 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  dato_           1    wreg     unsigned char 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  dato_           1    4[COMRAM] unsigned char 
  5949 ;;  cont_s          1    5[COMRAM] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5959 ;;      Params:         0       0       0       0       0       0       0       0       0
  5960 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5962 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5963 ;;Total ram usage:        2 bytes
  5964 ;; Hardware stack levels used: 1
  5965 ;; Hardware stack levels required when called: 4
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_nrf2401_write
  5970 ;;		_nrf2401_comando
  5971 ;;		_nrf2401_read
  5972 ;;		_nrf2401_direccion_TX_RX
  5973 ;;		_nrf2401_recibe
  5974 ;;		_nrf2401_envia
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text31
  5979   003182                     __ptext31:
  5980                           	callstack 0
  5981   003182                     _spi_s_write:
  5982                           	callstack 25
  5983                           
  5984                           ;incstack = 0
  5985                           ;spi_s_write@dato_ stored from wreg
  5986   003182  6E05               	movwf	spi_s_write@dato_^0,c
  5987   003184                     
  5988                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  5989   003184  0E00               	movlw	0
  5990   003186  6E06               	movwf	spi_s_write@cont_s^0,c
  5991                           
  5992                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  5993   003188  0E00               	movlw	0
  5994   00318A  6E06               	movwf	spi_s_write@cont_s^0,c
  5995   00318C                     l354:
  5996                           
  5997                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  5998   00318C  AE05               	btfss	spi_s_write@dato_^0,7,c
  5999   00318E  EFCB  F018         	goto	u5581
  6000   003192  EFCD  F018         	goto	u5580
  6001   003196                     u5581:
  6002   003196  EFD0  F018         	goto	l356
  6003   00319A                     u5580:
  6004   00319A  828B               	bsf	139,1,c	;volatile
  6005   00319C  EFD1  F018         	goto	l5281
  6006   0031A0                     l356:
  6007   0031A0  928B               	bcf	139,1,c	;volatile
  6008   0031A2                     l5281:
  6009                           
  6010                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  6011   0031A2  90D8               	bcf	status,0,c
  6012   0031A4  3605               	rlcf	spi_s_write@dato_^0,f,c
  6013   0031A6                     
  6014                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  6015   0031A6  848A               	bsf	138,2,c	;volatile
  6016   0031A8                     
  6017                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  6018   0031A8  0E14               	movlw	20
  6019   0031AA                     u6497:
  6020   0031AA  2EE8               	decfsz	wreg,f,c
  6021   0031AC  D7FE               	bra	u6497
  6022   0031AE                     
  6023                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  6024   0031AE  948A               	bcf	138,2,c	;volatile
  6025   0031B0                     
  6026                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  6027   0031B0  0E14               	movlw	20
  6028   0031B2                     u6507:
  6029   0031B2  2EE8               	decfsz	wreg,f,c
  6030   0031B4  D7FE               	bra	u6507
  6031   0031B6                     
  6032                           ;./Librerias/nRF24L01_2.h: 76:     }
  6033   0031B6  2A06               	incf	spi_s_write@cont_s^0,f,c
  6034   0031B8  0E07               	movlw	7
  6035   0031BA  6406               	cpfsgt	spi_s_write@cont_s^0,c
  6036   0031BC  EFE2  F018         	goto	u5591
  6037   0031C0  EFE4  F018         	goto	u5590
  6038   0031C4                     u5591:
  6039   0031C4  EFC6  F018         	goto	l354
  6040   0031C8                     u5590:
  6041   0031C8  0012               	return		;funcret
  6042   0031CA                     __end_of_spi_s_write:
  6043                           	callstack 0
  6044                           
  6045 ;; *************** function _get_corriente_AC *****************
  6046 ;; Defined at:
  6047 ;;		line 135 in file "main.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  n_muestras      2   76[COMRAM] int 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  i               2    0[BANK0 ] int 
  6052 ;;  corriente       4    2[BANK0 ] int 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  4   76[COMRAM] int 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6062 ;;      Params:         4       0       0       0       0       0       0       0       0
  6063 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6064 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6065 ;;      Totals:         5       6       0       0       0       0       0       0       0
  6066 ;;Total ram usage:       11 bytes
  6067 ;; Hardware stack levels used: 1
  6068 ;; Hardware stack levels required when called: 6
  6069 ;; This function calls:
  6070 ;;		_ADC_GetConversion
  6071 ;;		___fladd
  6072 ;;		___fldiv
  6073 ;;		___flge
  6074 ;;		___flmul
  6075 ;;		___flsub
  6076 ;;		___xxtofl
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text32
  6083   002598                     __ptext32:
  6084                           	callstack 0
  6085   002598                     _get_corriente_AC:
  6086                           	callstack 24
  6087   002598                     
  6088                           ;main.c: 138:   I_max = 0.0;
  6089   002598  0E00               	movlw	0
  6090   00259A  0100               	movlb	0	; () banked
  6091   00259C  6FD5               	movwf	_I_max& (0+255),b
  6092   00259E  0E00               	movlw	0
  6093   0025A0  6FD6               	movwf	(_I_max+1)& (0+255),b
  6094   0025A2  0E00               	movlw	0
  6095   0025A4  6FD7               	movwf	(_I_max+2)& (0+255),b
  6096   0025A6  0E00               	movlw	0
  6097   0025A8  6FD8               	movwf	(_I_max+3)& (0+255),b
  6098                           
  6099                           ;main.c: 139:   I_min = 0.0;
  6100   0025AA  0E00               	movlw	0
  6101   0025AC  6FD1               	movwf	_I_min& (0+255),b
  6102   0025AE  0E00               	movlw	0
  6103   0025B0  6FD2               	movwf	(_I_min+1)& (0+255),b
  6104   0025B2  0E00               	movlw	0
  6105   0025B4  6FD3               	movwf	(_I_min+2)& (0+255),b
  6106   0025B6  0E00               	movlw	0
  6107   0025B8  6FD4               	movwf	(_I_min+3)& (0+255),b
  6108                           
  6109                           ;main.c: 140:   for(int i = 0; i < n_muestras; i++)
  6110   0025BA  0E00               	movlw	0
  6111   0025BC  6F61               	movwf	(get_corriente_AC@i+1)& (0+255),b
  6112   0025BE  0E00               	movlw	0
  6113   0025C0  6F60               	movwf	get_corriente_AC@i& (0+255),b
  6114   0025C2  EF7E  F013         	goto	l5875
  6115   0025C6                     l5859:
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;main.c: 141:   {;main.c: 142:       valor = ADC_GetConversion(0);
  6119   0025C6  0E00               	movlw	0
  6120   0025C8  EC0D  F01A         	call	_ADC_GetConversion
  6121   0025CC  C005  F0ED         	movff	?_ADC_GetConversion,_valor
  6122   0025D0  C006  F0EE         	movff	?_ADC_GetConversion+1,_valor+1
  6123   0025D4                     
  6124                           ;main.c: 143:       voltaje = valor * (5.0 / 1023.0);
  6125   0025D4  C0ED  F005         	movff	_valor,___xxtofl@val
  6126   0025D8  C0EE  F006         	movff	_valor+1,___xxtofl@val+1
  6127   0025DC  6A07               	clrf	(___xxtofl@val+2)^0,c
  6128   0025DE  6A08               	clrf	(___xxtofl@val+3)^0,c
  6129   0025E0  0E00               	movlw	0
  6130   0025E2  ECBA  F013         	call	___xxtofl
  6131   0025E6  C005  F013         	movff	?___xxtofl,___flmul@b
  6132   0025EA  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  6133   0025EE  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  6134   0025F2  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  6135   0025F6  0E0A               	movlw	10
  6136   0025F8  6E17               	movwf	___flmul@a^0,c
  6137   0025FA  0E28               	movlw	40
  6138   0025FC  6E18               	movwf	(___flmul@a+1)^0,c
  6139   0025FE  0EA0               	movlw	160
  6140   002600  6E19               	movwf	(___flmul@a+2)^0,c
  6141   002602  0E3B               	movlw	59
  6142   002604  6E1A               	movwf	(___flmul@a+3)^0,c
  6143   002606  EC66  F00B         	call	___flmul	;wreg free
  6144   00260A  C013  F0D9         	movff	?___flmul,_voltaje
  6145   00260E  C014  F0DA         	movff	?___flmul+1,_voltaje+1
  6146   002612  C015  F0DB         	movff	?___flmul+2,_voltaje+2
  6147   002616  C016  F0DC         	movff	?___flmul+3,_voltaje+3
  6148   00261A                     
  6149                           ;main.c: 144:       corriente = ((voltaje - 2.527) / sensibilidad);
  6150   00261A  0E5E               	movlw	94
  6151   00261C  6E09               	movwf	___fladd@a^0,c
  6152   00261E  0EBA               	movlw	186
  6153   002620  6E0A               	movwf	(___fladd@a+1)^0,c
  6154   002622  0E21               	movlw	33
  6155   002624  6E0B               	movwf	(___fladd@a+2)^0,c
  6156   002626  0EC0               	movlw	192
  6157   002628  6E0C               	movwf	(___fladd@a+3)^0,c
  6158   00262A  C0D9  F005         	movff	_voltaje,___fladd@b
  6159   00262E  C0DA  F006         	movff	_voltaje+1,___fladd@b+1
  6160   002632  C0DB  F007         	movff	_voltaje+2,___fladd@b+2
  6161   002636  C0DC  F008         	movff	_voltaje+3,___fladd@b+3
  6162   00263A  EC06  F009         	call	___fladd	;wreg free
  6163   00263E  C005  F034         	movff	?___fladd,___fldiv@b
  6164   002642  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  6165   002646  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  6166   00264A  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  6167   00264E  0E4E               	movlw	78
  6168   002650  6E38               	movwf	___fldiv@a^0,c
  6169   002652  0E62               	movlw	98
  6170   002654  6E39               	movwf	(___fldiv@a+1)^0,c
  6171   002656  0E90               	movlw	144
  6172   002658  6E3A               	movwf	(___fldiv@a+2)^0,c
  6173   00265A  0E3E               	movlw	62
  6174   00265C  6E3B               	movwf	(___fldiv@a+3)^0,c
  6175   00265E  EC7B  F00D         	call	___fldiv	;wreg free
  6176   002662  C034  F062         	movff	?___fldiv,get_corriente_AC@corriente
  6177   002666  C035  F063         	movff	?___fldiv+1,get_corriente_AC@corriente+1
  6178   00266A  C036  F064         	movff	?___fldiv+2,get_corriente_AC@corriente+2
  6179   00266E  C037  F065         	movff	?___fldiv+3,get_corriente_AC@corriente+3
  6180   002672                     
  6181                           ;main.c: 145:       if (corriente > I_max) I_max = corriente;
  6182   002672  C0D5  F02C         	movff	_I_max,___flge@ff1
  6183   002676  C0D6  F02D         	movff	_I_max+1,___flge@ff1+1
  6184   00267A  C0D7  F02E         	movff	_I_max+2,___flge@ff1+2
  6185   00267E  C0D8  F02F         	movff	_I_max+3,___flge@ff1+3
  6186   002682  C062  F030         	movff	get_corriente_AC@corriente,___flge@ff2
  6187   002686  C063  F031         	movff	get_corriente_AC@corriente+1,___flge@ff2+1
  6188   00268A  C064  F032         	movff	get_corriente_AC@corriente+2,___flge@ff2+2
  6189   00268E  C065  F033         	movff	get_corriente_AC@corriente+3,___flge@ff2+3
  6190   002692  ECD4  F015         	call	___flge	;wreg free
  6191   002696  B0D8               	btfsc	status,0,c
  6192   002698  EF50  F013         	goto	u6151
  6193   00269C  EF52  F013         	goto	u6150
  6194   0026A0                     u6151:
  6195   0026A0  EF5A  F013         	goto	l5869
  6196   0026A4                     u6150:
  6197   0026A4  C062  F0D5         	movff	get_corriente_AC@corriente,_I_max
  6198   0026A8  C063  F0D6         	movff	get_corriente_AC@corriente+1,_I_max+1
  6199   0026AC  C064  F0D7         	movff	get_corriente_AC@corriente+2,_I_max+2
  6200   0026B0  C065  F0D8         	movff	get_corriente_AC@corriente+3,_I_max+3
  6201   0026B4                     l5869:
  6202                           
  6203                           ;main.c: 146:       if (corriente < I_min) I_min = corriente;
  6204   0026B4  C062  F02C         	movff	get_corriente_AC@corriente,___flge@ff1
  6205   0026B8  C063  F02D         	movff	get_corriente_AC@corriente+1,___flge@ff1+1
  6206   0026BC  C064  F02E         	movff	get_corriente_AC@corriente+2,___flge@ff1+2
  6207   0026C0  C065  F02F         	movff	get_corriente_AC@corriente+3,___flge@ff1+3
  6208   0026C4  C0D1  F030         	movff	_I_min,___flge@ff2
  6209   0026C8  C0D2  F031         	movff	_I_min+1,___flge@ff2+1
  6210   0026CC  C0D3  F032         	movff	_I_min+2,___flge@ff2+2
  6211   0026D0  C0D4  F033         	movff	_I_min+3,___flge@ff2+3
  6212   0026D4  ECD4  F015         	call	___flge	;wreg free
  6213   0026D8  B0D8               	btfsc	status,0,c
  6214   0026DA  EF71  F013         	goto	u6161
  6215   0026DE  EF73  F013         	goto	u6160
  6216   0026E2                     u6161:
  6217   0026E2  EF7B  F013         	goto	l5873
  6218   0026E6                     u6160:
  6219   0026E6  C062  F0D1         	movff	get_corriente_AC@corriente,_I_min
  6220   0026EA  C063  F0D2         	movff	get_corriente_AC@corriente+1,_I_min+1
  6221   0026EE  C064  F0D3         	movff	get_corriente_AC@corriente+2,_I_min+2
  6222   0026F2  C065  F0D4         	movff	get_corriente_AC@corriente+3,_I_min+3
  6223   0026F6                     l5873:
  6224                           
  6225                           ;main.c: 147:   }
  6226   0026F6  0100               	movlb	0	; () banked
  6227   0026F8  4B60               	infsnz	get_corriente_AC@i& (0+255),f,b
  6228   0026FA  2B61               	incf	(get_corriente_AC@i+1)& (0+255),f,b
  6229   0026FC                     l5875:
  6230                           
  6231                           ; BSR set to: 0
  6232   0026FC  504D               	movf	get_corriente_AC@n_muestras^0,w,c
  6233   0026FE  5D60               	subwf	get_corriente_AC@i& (0+255),w,b
  6234   002700  5161               	movf	(get_corriente_AC@i+1)& (0+255),w,b
  6235   002702  0A80               	xorlw	128
  6236   002704  6E51               	movwf	??_get_corriente_AC^0,c
  6237   002706  504E               	movf	(get_corriente_AC@n_muestras+1)^0,w,c
  6238   002708  0A80               	xorlw	128
  6239   00270A  5851               	subwfb	??_get_corriente_AC^0,w,c
  6240   00270C  A0D8               	btfss	status,0,c
  6241   00270E  EF8B  F013         	goto	u6171
  6242   002712  EF8D  F013         	goto	u6170
  6243   002716                     u6171:
  6244   002716  EFE3  F012         	goto	l5859
  6245   00271A                     u6170:
  6246   00271A                     
  6247                           ; BSR set to: 0
  6248                           ;main.c: 150:   return(((I_max - I_min) / 2));
  6249   00271A  C0D1  F030         	movff	_I_min,___flsub@a
  6250   00271E  C0D2  F031         	movff	_I_min+1,___flsub@a+1
  6251   002722  C0D3  F032         	movff	_I_min+2,___flsub@a+2
  6252   002726  C0D4  F033         	movff	_I_min+3,___flsub@a+3
  6253   00272A  C0D5  F02C         	movff	_I_max,___flsub@b
  6254   00272E  C0D6  F02D         	movff	_I_max+1,___flsub@b+1
  6255   002732  C0D7  F02E         	movff	_I_max+2,___flsub@b+2
  6256   002736  C0D8  F02F         	movff	_I_max+3,___flsub@b+3
  6257   00273A  EC2C  F019         	call	___flsub	;wreg free
  6258   00273E  C02C  F034         	movff	?___flsub,___fldiv@b
  6259   002742  C02D  F035         	movff	?___flsub+1,___fldiv@b+1
  6260   002746  C02E  F036         	movff	?___flsub+2,___fldiv@b+2
  6261   00274A  C02F  F037         	movff	?___flsub+3,___fldiv@b+3
  6262   00274E  0E00               	movlw	0
  6263   002750  6E38               	movwf	___fldiv@a^0,c
  6264   002752  0E00               	movlw	0
  6265   002754  6E39               	movwf	(___fldiv@a+1)^0,c
  6266   002756  0E00               	movlw	0
  6267   002758  6E3A               	movwf	(___fldiv@a+2)^0,c
  6268   00275A  0E40               	movlw	64
  6269   00275C  6E3B               	movwf	(___fldiv@a+3)^0,c
  6270   00275E  EC7B  F00D         	call	___fldiv	;wreg free
  6271   002762  C034  F04D         	movff	?___fldiv,?_get_corriente_AC
  6272   002766  C035  F04E         	movff	?___fldiv+1,?_get_corriente_AC+1
  6273   00276A  C036  F04F         	movff	?___fldiv+2,?_get_corriente_AC+2
  6274   00276E  C037  F050         	movff	?___fldiv+3,?_get_corriente_AC+3
  6275   002772  0012               	return		;funcret
  6276   002774                     __end_of_get_corriente_AC:
  6277                           	callstack 0
  6278                           
  6279 ;; *************** function ___xxtofl *****************
  6280 ;; Defined at:
  6281 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  sign            1    wreg     unsigned char 
  6284 ;;  val             4    4[COMRAM] long 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  sign            1   12[COMRAM] unsigned char 
  6287 ;;  arg             4   14[COMRAM] unsigned long 
  6288 ;;  exp             1   13[COMRAM] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  4    4[COMRAM] unsigned char 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6298 ;;      Params:         4       0       0       0       0       0       0       0       0
  6299 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6300 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6301 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6302 ;;Total ram usage:       14 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; Hardware stack levels required when called: 4
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_get_corriente_AC
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text33
  6313   002774                     __ptext33:
  6314                           	callstack 0
  6315   002774                     ___xxtofl:
  6316                           	callstack 25
  6317                           
  6318                           ;incstack = 0
  6319                           ;___xxtofl@sign stored from wreg
  6320   002774  6E0D               	movwf	___xxtofl@sign^0,c
  6321   002776  500D               	movf	___xxtofl@sign^0,w,c
  6322   002778  B4D8               	btfsc	status,2,c
  6323   00277A  EFC1  F013         	goto	u6001
  6324   00277E  EFC3  F013         	goto	u6000
  6325   002782                     u6001:
  6326   002782  EFE5  F013         	goto	l1157
  6327   002786                     u6000:
  6328   002786  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6329   002788  EFCA  F013         	goto	u6010
  6330   00278C  EFC8  F013         	goto	u6011
  6331   002790                     u6011:
  6332   002790  EFE5  F013         	goto	l1157
  6333   002794                     u6010:
  6334   002794  C005  F009         	movff	___xxtofl@val,??___xxtofl
  6335   002798  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  6336   00279C  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  6337   0027A0  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  6338   0027A4  1E09               	comf	??___xxtofl^0,f,c
  6339   0027A6  1E0A               	comf	(??___xxtofl+1)^0,f,c
  6340   0027A8  1E0B               	comf	(??___xxtofl+2)^0,f,c
  6341   0027AA  1E0C               	comf	(??___xxtofl+3)^0,f,c
  6342   0027AC  2A09               	incf	??___xxtofl^0,f,c
  6343   0027AE  0E00               	movlw	0
  6344   0027B0  220A               	addwfc	(??___xxtofl+1)^0,f,c
  6345   0027B2  220B               	addwfc	(??___xxtofl+2)^0,f,c
  6346   0027B4  220C               	addwfc	(??___xxtofl+3)^0,f,c
  6347   0027B6  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  6348   0027BA  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  6349   0027BE  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  6350   0027C2  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  6351   0027C6  EFED  F013         	goto	l5715
  6352   0027CA                     l1157:
  6353   0027CA  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  6354   0027CE  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6355   0027D2  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6356   0027D6  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6357   0027DA                     l5715:
  6358   0027DA  5005               	movf	___xxtofl@val^0,w,c
  6359   0027DC  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  6360   0027DE  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  6361   0027E0  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  6362   0027E2  A4D8               	btfss	status,2,c
  6363   0027E4  EFF6  F013         	goto	u6021
  6364   0027E8  EFF8  F013         	goto	u6020
  6365   0027EC                     u6021:
  6366   0027EC  EF02  F014         	goto	l5721
  6367   0027F0                     u6020:
  6368   0027F0  0E00               	movlw	0
  6369   0027F2  6E05               	movwf	?___xxtofl^0,c
  6370   0027F4  0E00               	movlw	0
  6371   0027F6  6E06               	movwf	(?___xxtofl+1)^0,c
  6372   0027F8  0E00               	movlw	0
  6373   0027FA  6E07               	movwf	(?___xxtofl+2)^0,c
  6374   0027FC  0E00               	movlw	0
  6375   0027FE  6E08               	movwf	(?___xxtofl+3)^0,c
  6376   002800  EF93  F014         	goto	l1160
  6377   002804                     l5721:
  6378   002804  0E96               	movlw	150
  6379   002806  6E0E               	movwf	___xxtofl@exp^0,c
  6380   002808  EF0C  F014         	goto	l5725
  6381   00280C                     l5723:
  6382   00280C  2A0E               	incf	___xxtofl@exp^0,f,c
  6383   00280E  90D8               	bcf	status,0,c
  6384   002810  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6385   002812  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6386   002814  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6387   002816  320F               	rrcf	___xxtofl@arg^0,f,c
  6388   002818                     l5725:
  6389   002818  0E00               	movlw	0
  6390   00281A  140F               	andwf	___xxtofl@arg^0,w,c
  6391   00281C  6E09               	movwf	??___xxtofl^0,c
  6392   00281E  0E00               	movlw	0
  6393   002820  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6394   002822  6E0A               	movwf	(??___xxtofl+1)^0,c
  6395   002824  0E00               	movlw	0
  6396   002826  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6397   002828  6E0B               	movwf	(??___xxtofl+2)^0,c
  6398   00282A  0EFE               	movlw	254
  6399   00282C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6400   00282E  6E0C               	movwf	(??___xxtofl+3)^0,c
  6401   002830  5009               	movf	??___xxtofl^0,w,c
  6402   002832  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6403   002834  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6404   002836  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6405   002838  A4D8               	btfss	status,2,c
  6406   00283A  EF21  F014         	goto	u6031
  6407   00283E  EF23  F014         	goto	u6030
  6408   002842                     u6031:
  6409   002842  EF06  F014         	goto	l5723
  6410   002846                     u6030:
  6411   002846  EF31  F014         	goto	l1164
  6412   00284A                     l5727:
  6413   00284A  2A0E               	incf	___xxtofl@exp^0,f,c
  6414   00284C  0E01               	movlw	1
  6415   00284E  260F               	addwf	___xxtofl@arg^0,f,c
  6416   002850  0E00               	movlw	0
  6417   002852  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  6418   002854  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  6419   002856  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  6420   002858  90D8               	bcf	status,0,c
  6421   00285A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6422   00285C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6423   00285E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6424   002860  320F               	rrcf	___xxtofl@arg^0,f,c
  6425   002862                     l1164:
  6426   002862  0E00               	movlw	0
  6427   002864  140F               	andwf	___xxtofl@arg^0,w,c
  6428   002866  6E09               	movwf	??___xxtofl^0,c
  6429   002868  0E00               	movlw	0
  6430   00286A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6431   00286C  6E0A               	movwf	(??___xxtofl+1)^0,c
  6432   00286E  0E00               	movlw	0
  6433   002870  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6434   002872  6E0B               	movwf	(??___xxtofl+2)^0,c
  6435   002874  0EFF               	movlw	255
  6436   002876  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6437   002878  6E0C               	movwf	(??___xxtofl+3)^0,c
  6438   00287A  5009               	movf	??___xxtofl^0,w,c
  6439   00287C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6440   00287E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6441   002880  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6442   002882  A4D8               	btfss	status,2,c
  6443   002884  EF46  F014         	goto	u6041
  6444   002888  EF48  F014         	goto	u6040
  6445   00288C                     u6041:
  6446   00288C  EF25  F014         	goto	l5727
  6447   002890                     u6040:
  6448   002890  EF50  F014         	goto	l5735
  6449   002894                     l5733:
  6450   002894  060E               	decf	___xxtofl@exp^0,f,c
  6451   002896  90D8               	bcf	status,0,c
  6452   002898  360F               	rlcf	___xxtofl@arg^0,f,c
  6453   00289A  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  6454   00289C  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  6455   00289E  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  6456   0028A0                     l5735:
  6457   0028A0  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  6458   0028A2  EF55  F014         	goto	u6051
  6459   0028A6  EF57  F014         	goto	u6050
  6460   0028AA                     u6051:
  6461   0028AA  EF5F  F014         	goto	l1171
  6462   0028AE                     u6050:
  6463   0028AE  0E02               	movlw	2
  6464   0028B0  600E               	cpfslt	___xxtofl@exp^0,c
  6465   0028B2  EF5D  F014         	goto	u6061
  6466   0028B6  EF5F  F014         	goto	u6060
  6467   0028BA                     u6061:
  6468   0028BA  EF4A  F014         	goto	l5733
  6469   0028BE                     u6060:
  6470   0028BE                     l1171:
  6471   0028BE  B00E               	btfsc	___xxtofl@exp^0,0,c
  6472   0028C0  EF64  F014         	goto	u6071
  6473   0028C4  EF66  F014         	goto	u6070
  6474   0028C8                     u6071:
  6475   0028C8  EF67  F014         	goto	l5741
  6476   0028CC                     u6070:
  6477   0028CC  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  6478   0028CE                     l5741:
  6479   0028CE  90D8               	bcf	status,0,c
  6480   0028D0  320E               	rrcf	___xxtofl@exp^0,f,c
  6481   0028D2  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  6482   0028D6  6A0A               	clrf	(??___xxtofl+1)^0,c
  6483   0028D8  6A0B               	clrf	(??___xxtofl+2)^0,c
  6484   0028DA  6A0C               	clrf	(??___xxtofl+3)^0,c
  6485   0028DC  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  6486   0028E0  6A0B               	clrf	(??___xxtofl+2)^0,c
  6487   0028E2  6A0A               	clrf	(??___xxtofl+1)^0,c
  6488   0028E4  6A09               	clrf	??___xxtofl^0,c
  6489   0028E6  5009               	movf	??___xxtofl^0,w,c
  6490   0028E8  120F               	iorwf	___xxtofl@arg^0,f,c
  6491   0028EA  500A               	movf	(??___xxtofl+1)^0,w,c
  6492   0028EC  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  6493   0028EE  500B               	movf	(??___xxtofl+2)^0,w,c
  6494   0028F0  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  6495   0028F2  500C               	movf	(??___xxtofl+3)^0,w,c
  6496   0028F4  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  6497   0028F6  500D               	movf	___xxtofl@sign^0,w,c
  6498   0028F8  B4D8               	btfsc	status,2,c
  6499   0028FA  EF81  F014         	goto	u6081
  6500   0028FE  EF83  F014         	goto	u6080
  6501   002902                     u6081:
  6502   002902  EF8B  F014         	goto	l5751
  6503   002906                     u6080:
  6504   002906  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6505   002908  EF8A  F014         	goto	u6090
  6506   00290C  EF88  F014         	goto	u6091
  6507   002910                     u6091:
  6508   002910  EF8B  F014         	goto	l5751
  6509   002914                     u6090:
  6510   002914  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  6511   002916                     l5751:
  6512   002916  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  6513   00291A  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  6514   00291E  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  6515   002922  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  6516   002926                     l1160:
  6517   002926  0012               	return		;funcret
  6518   002928                     __end_of___xxtofl:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function ___flsub *****************
  6522 ;; Defined at:
  6523 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  b               4   43[COMRAM] unsigned char 
  6526 ;;  a               4   47[COMRAM] unsigned char 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  4   43[COMRAM] unsigned char 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6538 ;;      Params:         8       0       0       0       0       0       0       0       0
  6539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6541 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6542 ;;Total ram usage:        8 bytes
  6543 ;; Hardware stack levels used: 1
  6544 ;; Hardware stack levels required when called: 5
  6545 ;; This function calls:
  6546 ;;		___fladd
  6547 ;; This function is called by:
  6548 ;;		_get_corriente_AC
  6549 ;;		_main
  6550 ;;		_efgtoa
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text34
  6555   003258                     __ptext34:
  6556                           	callstack 0
  6557   003258                     ___flsub:
  6558                           	callstack 21
  6559   003258  0E00               	movlw	0
  6560   00325A  1A30               	xorwf	___flsub@a^0,f,c
  6561   00325C  0E00               	movlw	0
  6562   00325E  1A31               	xorwf	(___flsub@a+1)^0,f,c
  6563   003260  0E00               	movlw	0
  6564   003262  1A32               	xorwf	(___flsub@a+2)^0,f,c
  6565   003264  0E80               	movlw	128
  6566   003266  1A33               	xorwf	(___flsub@a+3)^0,f,c
  6567   003268  C02C  F005         	movff	___flsub@b,___fladd@b
  6568   00326C  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  6569   003270  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  6570   003274  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  6571   003278  C030  F009         	movff	___flsub@a,___fladd@a
  6572   00327C  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  6573   003280  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  6574   003284  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  6575   003288  EC06  F009         	call	___fladd	;wreg free
  6576   00328C  C005  F02C         	movff	?___fladd,?___flsub
  6577   003290  C006  F02D         	movff	?___fladd+1,?___flsub+1
  6578   003294  C007  F02E         	movff	?___fladd+2,?___flsub+2
  6579   003298  C008  F02F         	movff	?___fladd+3,?___flsub+3
  6580   00329C  0012               	return		;funcret
  6581   00329E                     __end_of___flsub:
  6582                           	callstack 0
  6583                           
  6584 ;; *************** function ___fladd *****************
  6585 ;; Defined at:
  6586 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  b               4    4[COMRAM] unsigned char 
  6589 ;;  a               4    8[COMRAM] unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  grs             1   19[COMRAM] unsigned char 
  6592 ;;  bexp            1   18[COMRAM] unsigned char 
  6593 ;;  aexp            1   17[COMRAM] unsigned char 
  6594 ;;  signs           1   16[COMRAM] unsigned char 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  4    4[COMRAM] unsigned char 
  6597 ;; Registers used:
  6598 ;;		wreg, status,2, status,0
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6604 ;;      Params:         8       0       0       0       0       0       0       0       0
  6605 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6606 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6607 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6608 ;;Total ram usage:       16 bytes
  6609 ;; Hardware stack levels used: 1
  6610 ;; Hardware stack levels required when called: 4
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_get_corriente_AC
  6615 ;;		___flsub
  6616 ;;		_efgtoa
  6617 ;;		_main
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text35
  6622   00120C                     __ptext35:
  6623                           	callstack 0
  6624   00120C                     ___fladd:
  6625                           	callstack 21
  6626   00120C  5008               	movf	(___fladd@b+3)^0,w,c
  6627   00120E  0B80               	andlw	128
  6628   001210  6E11               	movwf	___fladd@signs^0,c
  6629   001212  5008               	movf	(___fladd@b+3)^0,w,c
  6630   001214  2408               	addwf	(___fladd@b+3)^0,w,c
  6631   001216  6E13               	movwf	___fladd@bexp^0,c
  6632   001218  AE07               	btfss	(___fladd@b+2)^0,7,c
  6633   00121A  EF11  F009         	goto	u4361
  6634   00121E  EF13  F009         	goto	u4360
  6635   001222                     u4361:
  6636   001222  EF14  F009         	goto	l4585
  6637   001226                     u4360:
  6638   001226  8013               	bsf	___fladd@bexp^0,0,c
  6639   001228                     l4585:
  6640   001228  5013               	movf	___fladd@bexp^0,w,c
  6641   00122A  B4D8               	btfsc	status,2,c
  6642   00122C  EF1A  F009         	goto	u4371
  6643   001230  EF1C  F009         	goto	u4370
  6644   001234                     u4371:
  6645   001234  EF31  F009         	goto	l4595
  6646   001238                     u4370:
  6647   001238  2813               	incf	___fladd@bexp^0,w,c
  6648   00123A  A4D8               	btfss	status,2,c
  6649   00123C  EF22  F009         	goto	u4381
  6650   001240  EF24  F009         	goto	u4380
  6651   001244                     u4381:
  6652   001244  EF2C  F009         	goto	l4591
  6653   001248                     u4380:
  6654   001248  0E00               	movlw	0
  6655   00124A  6E05               	movwf	___fladd@b^0,c
  6656   00124C  0E00               	movlw	0
  6657   00124E  6E06               	movwf	(___fladd@b+1)^0,c
  6658   001250  0E00               	movlw	0
  6659   001252  6E07               	movwf	(___fladd@b+2)^0,c
  6660   001254  0E00               	movlw	0
  6661   001256  6E08               	movwf	(___fladd@b+3)^0,c
  6662   001258                     l4591:
  6663   001258  8E07               	bsf	(___fladd@b+2)^0,7,c
  6664   00125A  0E00               	movlw	0
  6665   00125C  6E08               	movwf	(___fladd@b+3)^0,c
  6666   00125E  EF39  F009         	goto	l4597
  6667   001262                     l4595:
  6668   001262  0E00               	movlw	0
  6669   001264  6E05               	movwf	___fladd@b^0,c
  6670   001266  0E00               	movlw	0
  6671   001268  6E06               	movwf	(___fladd@b+1)^0,c
  6672   00126A  0E00               	movlw	0
  6673   00126C  6E07               	movwf	(___fladd@b+2)^0,c
  6674   00126E  0E00               	movlw	0
  6675   001270  6E08               	movwf	(___fladd@b+3)^0,c
  6676   001272                     l4597:
  6677   001272  500C               	movf	(___fladd@a+3)^0,w,c
  6678   001274  0B80               	andlw	128
  6679   001276  6E12               	movwf	___fladd@aexp^0,c
  6680   001278  5011               	movf	___fladd@signs^0,w,c
  6681   00127A  1812               	xorwf	___fladd@aexp^0,w,c
  6682   00127C  B4D8               	btfsc	status,2,c
  6683   00127E  EF43  F009         	goto	u4391
  6684   001282  EF45  F009         	goto	u4390
  6685   001286                     u4391:
  6686   001286  EF46  F009         	goto	l4603
  6687   00128A                     u4390:
  6688   00128A  8C11               	bsf	___fladd@signs^0,6,c
  6689   00128C                     l4603:
  6690   00128C  500C               	movf	(___fladd@a+3)^0,w,c
  6691   00128E  240C               	addwf	(___fladd@a+3)^0,w,c
  6692   001290  6E12               	movwf	___fladd@aexp^0,c
  6693   001292  AE0B               	btfss	(___fladd@a+2)^0,7,c
  6694   001294  EF4E  F009         	goto	u4401
  6695   001298  EF50  F009         	goto	u4400
  6696   00129C                     u4401:
  6697   00129C  EF51  F009         	goto	l4609
  6698   0012A0                     u4400:
  6699   0012A0  8012               	bsf	___fladd@aexp^0,0,c
  6700   0012A2                     l4609:
  6701   0012A2  5012               	movf	___fladd@aexp^0,w,c
  6702   0012A4  B4D8               	btfsc	status,2,c
  6703   0012A6  EF57  F009         	goto	u4411
  6704   0012AA  EF59  F009         	goto	u4410
  6705   0012AE                     u4411:
  6706   0012AE  EF6E  F009         	goto	l4619
  6707   0012B2                     u4410:
  6708   0012B2  2812               	incf	___fladd@aexp^0,w,c
  6709   0012B4  A4D8               	btfss	status,2,c
  6710   0012B6  EF5F  F009         	goto	u4421
  6711   0012BA  EF61  F009         	goto	u4420
  6712   0012BE                     u4421:
  6713   0012BE  EF69  F009         	goto	l4615
  6714   0012C2                     u4420:
  6715   0012C2  0E00               	movlw	0
  6716   0012C4  6E09               	movwf	___fladd@a^0,c
  6717   0012C6  0E00               	movlw	0
  6718   0012C8  6E0A               	movwf	(___fladd@a+1)^0,c
  6719   0012CA  0E00               	movlw	0
  6720   0012CC  6E0B               	movwf	(___fladd@a+2)^0,c
  6721   0012CE  0E00               	movlw	0
  6722   0012D0  6E0C               	movwf	(___fladd@a+3)^0,c
  6723   0012D2                     l4615:
  6724   0012D2  8E0B               	bsf	(___fladd@a+2)^0,7,c
  6725   0012D4  0E00               	movlw	0
  6726   0012D6  6E0C               	movwf	(___fladd@a+3)^0,c
  6727   0012D8  EF76  F009         	goto	l4621
  6728   0012DC                     l4619:
  6729   0012DC  0E00               	movlw	0
  6730   0012DE  6E09               	movwf	___fladd@a^0,c
  6731   0012E0  0E00               	movlw	0
  6732   0012E2  6E0A               	movwf	(___fladd@a+1)^0,c
  6733   0012E4  0E00               	movlw	0
  6734   0012E6  6E0B               	movwf	(___fladd@a+2)^0,c
  6735   0012E8  0E00               	movlw	0
  6736   0012EA  6E0C               	movwf	(___fladd@a+3)^0,c
  6737   0012EC                     l4621:
  6738   0012EC  5013               	movf	___fladd@bexp^0,w,c
  6739   0012EE  5C12               	subwf	___fladd@aexp^0,w,c
  6740   0012F0  B0D8               	btfsc	status,0,c
  6741   0012F2  EF7D  F009         	goto	u4431
  6742   0012F6  EF7F  F009         	goto	u4430
  6743   0012FA                     u4431:
  6744   0012FA  EFA6  F009         	goto	l4657
  6745   0012FE                     u4430:
  6746   0012FE  AC11               	btfss	___fladd@signs^0,6,c
  6747   001300  EF84  F009         	goto	u4441
  6748   001304  EF86  F009         	goto	u4440
  6749   001308                     u4441:
  6750   001308  EF88  F009         	goto	l4627
  6751   00130C                     u4440:
  6752   00130C  0E80               	movlw	128
  6753   00130E  1A11               	xorwf	___fladd@signs^0,f,c
  6754   001310                     l4627:
  6755   001310  C013  F014         	movff	___fladd@bexp,___fladd@grs
  6756   001314  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6757   001318  C014  F012         	movff	___fladd@grs,___fladd@aexp
  6758   00131C  C005  F014         	movff	___fladd@b,___fladd@grs
  6759   001320  C009  F005         	movff	___fladd@a,___fladd@b
  6760   001324  C014  F009         	movff	___fladd@grs,___fladd@a
  6761   001328  C006  F014         	movff	___fladd@b+1,___fladd@grs
  6762   00132C  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  6763   001330  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  6764   001334  C007  F014         	movff	___fladd@b+2,___fladd@grs
  6765   001338  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  6766   00133C  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  6767   001340  C008  F014         	movff	___fladd@b+3,___fladd@grs
  6768   001344  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  6769   001348  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  6770   00134C                     l4657:
  6771   00134C  0E00               	movlw	0
  6772   00134E  6E14               	movwf	___fladd@grs^0,c
  6773   001350  5013               	movf	___fladd@bexp^0,w,c
  6774   001352  C012  F00D         	movff	___fladd@aexp,??___fladd
  6775   001356  6A0E               	clrf	(??___fladd+1)^0,c
  6776   001358  5E0D               	subwf	??___fladd^0,f,c
  6777   00135A  0E00               	movlw	0
  6778   00135C  5A0E               	subwfb	(??___fladd+1)^0,f,c
  6779   00135E  BE0E               	btfsc	(??___fladd+1)^0,7,c
  6780   001360  EFBB  F009         	goto	u4451
  6781   001364  500E               	movf	(??___fladd+1)^0,w,c
  6782   001366  E109               	bnz	u4450
  6783   001368  0E1A               	movlw	26
  6784   00136A  5C0D               	subwf	??___fladd^0,w,c
  6785   00136C  A0D8               	btfss	status,0,c
  6786   00136E  EFBB  F009         	goto	u4451
  6787   001372  EFBD  F009         	goto	u4450
  6788   001376                     u4451:
  6789   001376  EFF4  F009         	goto	l1031
  6790   00137A                     u4450:
  6791   00137A  5005               	movf	___fladd@b^0,w,c
  6792   00137C  1006               	iorwf	(___fladd@b+1)^0,w,c
  6793   00137E  1007               	iorwf	(___fladd@b+2)^0,w,c
  6794   001380  1008               	iorwf	(___fladd@b+3)^0,w,c
  6795   001382  A4D8               	btfss	status,2,c
  6796   001384  EFC6  F009         	goto	u4461
  6797   001388  EFC9  F009         	goto	u4460
  6798   00138C                     u4461:
  6799   00138C  0E01               	movlw	1
  6800   00138E  EFCA  F009         	goto	u4470
  6801   001392                     u4460:
  6802   001392  0E00               	movlw	0
  6803   001394                     u4470:
  6804   001394  6E14               	movwf	___fladd@grs^0,c
  6805   001396  0E00               	movlw	0
  6806   001398  6E05               	movwf	___fladd@b^0,c
  6807   00139A  0E00               	movlw	0
  6808   00139C  6E06               	movwf	(___fladd@b+1)^0,c
  6809   00139E  0E00               	movlw	0
  6810   0013A0  6E07               	movwf	(___fladd@b+2)^0,c
  6811   0013A2  0E00               	movlw	0
  6812   0013A4  6E08               	movwf	(___fladd@b+3)^0,c
  6813   0013A6  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6814   0013AA  EFFD  F009         	goto	l1030
  6815   0013AE                     l1032:
  6816   0013AE  A014               	btfss	___fladd@grs^0,0,c
  6817   0013B0  EFDC  F009         	goto	u4481
  6818   0013B4  EFDE  F009         	goto	u4480
  6819   0013B8                     u4481:
  6820   0013B8  EFE4  F009         	goto	l4669
  6821   0013BC                     u4480:
  6822   0013BC  90D8               	bcf	status,0,c
  6823   0013BE  3014               	rrcf	___fladd@grs^0,w,c
  6824   0013C0  0901               	iorlw	1
  6825   0013C2  6E14               	movwf	___fladd@grs^0,c
  6826   0013C4  EFE6  F009         	goto	l4671
  6827   0013C8                     l4669:
  6828   0013C8  90D8               	bcf	status,0,c
  6829   0013CA  3214               	rrcf	___fladd@grs^0,f,c
  6830   0013CC                     l4671:
  6831   0013CC  A005               	btfss	___fladd@b^0,0,c
  6832   0013CE  EFEB  F009         	goto	u4491
  6833   0013D2  EFED  F009         	goto	u4490
  6834   0013D6                     u4491:
  6835   0013D6  EFEE  F009         	goto	l4675
  6836   0013DA                     u4490:
  6837   0013DA  8E14               	bsf	___fladd@grs^0,7,c
  6838   0013DC                     l4675:
  6839   0013DC  3408               	rlcf	(___fladd@b+3)^0,w,c
  6840   0013DE  3208               	rrcf	(___fladd@b+3)^0,f,c
  6841   0013E0  3207               	rrcf	(___fladd@b+2)^0,f,c
  6842   0013E2  3206               	rrcf	(___fladd@b+1)^0,f,c
  6843   0013E4  3205               	rrcf	___fladd@b^0,f,c
  6844   0013E6  2A13               	incf	___fladd@bexp^0,f,c
  6845   0013E8                     l1031:
  6846   0013E8  5012               	movf	___fladd@aexp^0,w,c
  6847   0013EA  5C13               	subwf	___fladd@bexp^0,w,c
  6848   0013EC  A0D8               	btfss	status,0,c
  6849   0013EE  EFFB  F009         	goto	u4501
  6850   0013F2  EFFD  F009         	goto	u4500
  6851   0013F6                     u4501:
  6852   0013F6  EFD7  F009         	goto	l1032
  6853   0013FA                     u4500:
  6854   0013FA                     l1030:
  6855   0013FA  BC11               	btfsc	___fladd@signs^0,6,c
  6856   0013FC  EF02  F00A         	goto	u4511
  6857   001400  EF04  F00A         	goto	u4510
  6858   001404                     u4511:
  6859   001404  EF44  F00A         	goto	l4703
  6860   001408                     u4510:
  6861   001408  5013               	movf	___fladd@bexp^0,w,c
  6862   00140A  A4D8               	btfss	status,2,c
  6863   00140C  EF0A  F00A         	goto	u4521
  6864   001410  EF0C  F00A         	goto	u4520
  6865   001414                     u4521:
  6866   001414  EF16  F00A         	goto	l4685
  6867   001418                     u4520:
  6868   001418  0E00               	movlw	0
  6869   00141A  6E05               	movwf	?___fladd^0,c
  6870   00141C  0E00               	movlw	0
  6871   00141E  6E06               	movwf	(?___fladd+1)^0,c
  6872   001420  0E00               	movlw	0
  6873   001422  6E07               	movwf	(?___fladd+2)^0,c
  6874   001424  0E00               	movlw	0
  6875   001426  6E08               	movwf	(?___fladd+3)^0,c
  6876   001428  EF65  F00B         	goto	l1039
  6877   00142C                     l4685:
  6878   00142C  5009               	movf	___fladd@a^0,w,c
  6879   00142E  2605               	addwf	___fladd@b^0,f,c
  6880   001430  500A               	movf	(___fladd@a+1)^0,w,c
  6881   001432  2206               	addwfc	(___fladd@b+1)^0,f,c
  6882   001434  500B               	movf	(___fladd@a+2)^0,w,c
  6883   001436  2207               	addwfc	(___fladd@b+2)^0,f,c
  6884   001438  500C               	movf	(___fladd@a+3)^0,w,c
  6885   00143A  2208               	addwfc	(___fladd@b+3)^0,f,c
  6886   00143C  A008               	btfss	(___fladd@b+3)^0,0,c
  6887   00143E  EF23  F00A         	goto	u4531
  6888   001442  EF25  F00A         	goto	u4530
  6889   001446                     u4531:
  6890   001446  EFD1  F00A         	goto	l4739
  6891   00144A                     u4530:
  6892   00144A  A014               	btfss	___fladd@grs^0,0,c
  6893   00144C  EF2A  F00A         	goto	u4541
  6894   001450  EF2C  F00A         	goto	u4540
  6895   001454                     u4541:
  6896   001454  EF32  F00A         	goto	l4693
  6897   001458                     u4540:
  6898   001458  90D8               	bcf	status,0,c
  6899   00145A  3014               	rrcf	___fladd@grs^0,w,c
  6900   00145C  0901               	iorlw	1
  6901   00145E  6E14               	movwf	___fladd@grs^0,c
  6902   001460  EF34  F00A         	goto	l4695
  6903   001464                     l4693:
  6904   001464  90D8               	bcf	status,0,c
  6905   001466  3214               	rrcf	___fladd@grs^0,f,c
  6906   001468                     l4695:
  6907   001468  A005               	btfss	___fladd@b^0,0,c
  6908   00146A  EF39  F00A         	goto	u4551
  6909   00146E  EF3B  F00A         	goto	u4550
  6910   001472                     u4551:
  6911   001472  EF3C  F00A         	goto	l4699
  6912   001476                     u4550:
  6913   001476  8E14               	bsf	___fladd@grs^0,7,c
  6914   001478                     l4699:
  6915   001478  3408               	rlcf	(___fladd@b+3)^0,w,c
  6916   00147A  3208               	rrcf	(___fladd@b+3)^0,f,c
  6917   00147C  3207               	rrcf	(___fladd@b+2)^0,f,c
  6918   00147E  3206               	rrcf	(___fladd@b+1)^0,f,c
  6919   001480  3205               	rrcf	___fladd@b^0,f,c
  6920   001482  2A13               	incf	___fladd@bexp^0,f,c
  6921   001484  EFD1  F00A         	goto	l4739
  6922   001488                     l4703:
  6923   001488  5009               	movf	___fladd@a^0,w,c
  6924   00148A  5C05               	subwf	___fladd@b^0,w,c
  6925   00148C  500A               	movf	(___fladd@a+1)^0,w,c
  6926   00148E  5806               	subwfb	(___fladd@b+1)^0,w,c
  6927   001490  500B               	movf	(___fladd@a+2)^0,w,c
  6928   001492  5807               	subwfb	(___fladd@b+2)^0,w,c
  6929   001494  5008               	movf	(___fladd@b+3)^0,w,c
  6930   001496  0A80               	xorlw	128
  6931   001498  6E0D               	movwf	??___fladd^0,c
  6932   00149A  500C               	movf	(___fladd@a+3)^0,w,c
  6933   00149C  0A80               	xorlw	128
  6934   00149E  580D               	subwfb	??___fladd^0,w,c
  6935   0014A0  B0D8               	btfsc	status,0,c
  6936   0014A2  EF55  F00A         	goto	u4561
  6937   0014A6  EF57  F00A         	goto	u4560
  6938   0014AA                     u4561:
  6939   0014AA  EF82  F00A         	goto	l4713
  6940   0014AE                     u4560:
  6941   0014AE  5005               	movf	___fladd@b^0,w,c
  6942   0014B0  5C09               	subwf	___fladd@a^0,w,c
  6943   0014B2  6E0D               	movwf	??___fladd^0,c
  6944   0014B4  5006               	movf	(___fladd@b+1)^0,w,c
  6945   0014B6  580A               	subwfb	(___fladd@a+1)^0,w,c
  6946   0014B8  6E0E               	movwf	(??___fladd+1)^0,c
  6947   0014BA  5007               	movf	(___fladd@b+2)^0,w,c
  6948   0014BC  580B               	subwfb	(___fladd@a+2)^0,w,c
  6949   0014BE  6E0F               	movwf	(??___fladd+2)^0,c
  6950   0014C0  5008               	movf	(___fladd@b+3)^0,w,c
  6951   0014C2  580C               	subwfb	(___fladd@a+3)^0,w,c
  6952   0014C4  6E10               	movwf	(??___fladd+3)^0,c
  6953   0014C6  0EFF               	movlw	255
  6954   0014C8  240D               	addwf	??___fladd^0,w,c
  6955   0014CA  6E05               	movwf	___fladd@b^0,c
  6956   0014CC  0EFF               	movlw	255
  6957   0014CE  200E               	addwfc	(??___fladd+1)^0,w,c
  6958   0014D0  6E06               	movwf	(___fladd@b+1)^0,c
  6959   0014D2  0EFF               	movlw	255
  6960   0014D4  200F               	addwfc	(??___fladd+2)^0,w,c
  6961   0014D6  6E07               	movwf	(___fladd@b+2)^0,c
  6962   0014D8  0EFF               	movlw	255
  6963   0014DA  2010               	addwfc	(??___fladd+3)^0,w,c
  6964   0014DC  6E08               	movwf	(___fladd@b+3)^0,c
  6965   0014DE  0E80               	movlw	128
  6966   0014E0  1A11               	xorwf	___fladd@signs^0,f,c
  6967   0014E2  6C14               	negf	___fladd@grs^0,c
  6968   0014E4  5014               	movf	___fladd@grs^0,w,c
  6969   0014E6  A4D8               	btfss	status,2,c
  6970   0014E8  EF78  F00A         	goto	u4571
  6971   0014EC  EF7A  F00A         	goto	u4570
  6972   0014F0                     u4571:
  6973   0014F0  EF8A  F00A         	goto	l1047
  6974   0014F4                     u4570:
  6975   0014F4  0E01               	movlw	1
  6976   0014F6  2605               	addwf	___fladd@b^0,f,c
  6977   0014F8  0E00               	movlw	0
  6978   0014FA  2206               	addwfc	(___fladd@b+1)^0,f,c
  6979   0014FC  2207               	addwfc	(___fladd@b+2)^0,f,c
  6980   0014FE  2208               	addwfc	(___fladd@b+3)^0,f,c
  6981   001500  EF8A  F00A         	goto	l1047
  6982   001504                     l4713:
  6983   001504  5009               	movf	___fladd@a^0,w,c
  6984   001506  5E05               	subwf	___fladd@b^0,f,c
  6985   001508  500A               	movf	(___fladd@a+1)^0,w,c
  6986   00150A  5A06               	subwfb	(___fladd@b+1)^0,f,c
  6987   00150C  500B               	movf	(___fladd@a+2)^0,w,c
  6988   00150E  5A07               	subwfb	(___fladd@b+2)^0,f,c
  6989   001510  500C               	movf	(___fladd@a+3)^0,w,c
  6990   001512  5A08               	subwfb	(___fladd@b+3)^0,f,c
  6991   001514                     l1047:
  6992   001514  5005               	movf	___fladd@b^0,w,c
  6993   001516  1006               	iorwf	(___fladd@b+1)^0,w,c
  6994   001518  1007               	iorwf	(___fladd@b+2)^0,w,c
  6995   00151A  1008               	iorwf	(___fladd@b+3)^0,w,c
  6996   00151C  A4D8               	btfss	status,2,c
  6997   00151E  EF93  F00A         	goto	u4581
  6998   001522  EF95  F00A         	goto	u4580
  6999   001526                     u4581:
  7000   001526  EFCA  F00A         	goto	l4737
  7001   00152A                     u4580:
  7002   00152A  5014               	movf	___fladd@grs^0,w,c
  7003   00152C  A4D8               	btfss	status,2,c
  7004   00152E  EF9B  F00A         	goto	u4591
  7005   001532  EF9D  F00A         	goto	u4590
  7006   001536                     u4591:
  7007   001536  EFCA  F00A         	goto	l4737
  7008   00153A                     u4590:
  7009   00153A  0E00               	movlw	0
  7010   00153C  6E05               	movwf	?___fladd^0,c
  7011   00153E  0E00               	movlw	0
  7012   001540  6E06               	movwf	(?___fladd+1)^0,c
  7013   001542  0E00               	movlw	0
  7014   001544  6E07               	movwf	(?___fladd+2)^0,c
  7015   001546  0E00               	movlw	0
  7016   001548  6E08               	movwf	(?___fladd+3)^0,c
  7017   00154A  EF65  F00B         	goto	l1039
  7018   00154E                     l4721:
  7019   00154E  90D8               	bcf	status,0,c
  7020   001550  3605               	rlcf	___fladd@b^0,f,c
  7021   001552  3606               	rlcf	(___fladd@b+1)^0,f,c
  7022   001554  3607               	rlcf	(___fladd@b+2)^0,f,c
  7023   001556  3608               	rlcf	(___fladd@b+3)^0,f,c
  7024   001558  AE14               	btfss	___fladd@grs^0,7,c
  7025   00155A  EFB1  F00A         	goto	u4601
  7026   00155E  EFB3  F00A         	goto	u4600
  7027   001562                     u4601:
  7028   001562  EFB4  F00A         	goto	l4727
  7029   001566                     u4600:
  7030   001566  8005               	bsf	___fladd@b^0,0,c
  7031   001568                     l4727:
  7032   001568  A014               	btfss	___fladd@grs^0,0,c
  7033   00156A  EFB9  F00A         	goto	u4611
  7034   00156E  EFBB  F00A         	goto	u4610
  7035   001572                     u4611:
  7036   001572  EFBF  F00A         	goto	l4731
  7037   001576                     u4610:
  7038   001576  80D8               	bsf	status,0,c
  7039   001578  3614               	rlcf	___fladd@grs^0,f,c
  7040   00157A  EFC1  F00A         	goto	l4733
  7041   00157E                     l4731:
  7042   00157E  90D8               	bcf	status,0,c
  7043   001580  3614               	rlcf	___fladd@grs^0,f,c
  7044   001582                     l4733:
  7045   001582  5013               	movf	___fladd@bexp^0,w,c
  7046   001584  B4D8               	btfsc	status,2,c
  7047   001586  EFC7  F00A         	goto	u4621
  7048   00158A  EFC9  F00A         	goto	u4620
  7049   00158E                     u4621:
  7050   00158E  EFCA  F00A         	goto	l4737
  7051   001592                     u4620:
  7052   001592  0613               	decf	___fladd@bexp^0,f,c
  7053   001594                     l4737:
  7054   001594  AE07               	btfss	(___fladd@b+2)^0,7,c
  7055   001596  EFCF  F00A         	goto	u4631
  7056   00159A  EFD1  F00A         	goto	u4630
  7057   00159E                     u4631:
  7058   00159E  EFA7  F00A         	goto	l4721
  7059   0015A2                     u4630:
  7060   0015A2                     l4739:
  7061   0015A2  0E00               	movlw	0
  7062   0015A4  6E12               	movwf	___fladd@aexp^0,c
  7063   0015A6  AE14               	btfss	___fladd@grs^0,7,c
  7064   0015A8  EFD8  F00A         	goto	u4641
  7065   0015AC  EFDA  F00A         	goto	u4640
  7066   0015B0                     u4641:
  7067   0015B0  EFF2  F00A         	goto	l1056
  7068   0015B4                     u4640:
  7069   0015B4  C014  F00D         	movff	___fladd@grs,??___fladd
  7070   0015B8  0E7F               	movlw	127
  7071   0015BA  160D               	andwf	??___fladd^0,f,c
  7072   0015BC  B4D8               	btfsc	status,2,c
  7073   0015BE  EFE3  F00A         	goto	u4651
  7074   0015C2  EFE5  F00A         	goto	u4650
  7075   0015C6                     u4651:
  7076   0015C6  EFE9  F00A         	goto	l1057
  7077   0015CA                     u4650:
  7078   0015CA                     l4745:
  7079   0015CA  0E01               	movlw	1
  7080   0015CC  6E12               	movwf	___fladd@aexp^0,c
  7081   0015CE  EFF2  F00A         	goto	l1056
  7082   0015D2                     l1057:
  7083   0015D2  A005               	btfss	___fladd@b^0,0,c
  7084   0015D4  EFEE  F00A         	goto	u4661
  7085   0015D8  EFF0  F00A         	goto	u4660
  7086   0015DC                     u4661:
  7087   0015DC  EFF2  F00A         	goto	l1056
  7088   0015E0                     u4660:
  7089   0015E0  EFE5  F00A         	goto	l4745
  7090   0015E4                     l1056:
  7091   0015E4  5012               	movf	___fladd@aexp^0,w,c
  7092   0015E6  B4D8               	btfsc	status,2,c
  7093   0015E8  EFF8  F00A         	goto	u4671
  7094   0015EC  EFFA  F00A         	goto	u4670
  7095   0015F0                     u4671:
  7096   0015F0  EF25  F00B         	goto	l4757
  7097   0015F4                     u4670:
  7098   0015F4  0E01               	movlw	1
  7099   0015F6  2605               	addwf	___fladd@b^0,f,c
  7100   0015F8  0E00               	movlw	0
  7101   0015FA  2206               	addwfc	(___fladd@b+1)^0,f,c
  7102   0015FC  2207               	addwfc	(___fladd@b+2)^0,f,c
  7103   0015FE  2208               	addwfc	(___fladd@b+3)^0,f,c
  7104   001600  A008               	btfss	(___fladd@b+3)^0,0,c
  7105   001602  EF05  F00B         	goto	u4681
  7106   001606  EF07  F00B         	goto	u4680
  7107   00160A                     u4681:
  7108   00160A  EF25  F00B         	goto	l4757
  7109   00160E                     u4680:
  7110   00160E  C005  F00D         	movff	___fladd@b,??___fladd
  7111   001612  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  7112   001616  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  7113   00161A  C008  F010         	movff	___fladd@b+3,??___fladd+3
  7114   00161E  3410               	rlcf	(??___fladd+3)^0,w,c
  7115   001620  3210               	rrcf	(??___fladd+3)^0,f,c
  7116   001622  320F               	rrcf	(??___fladd+2)^0,f,c
  7117   001624  320E               	rrcf	(??___fladd+1)^0,f,c
  7118   001626  320D               	rrcf	??___fladd^0,f,c
  7119   001628  C00D  F005         	movff	??___fladd,___fladd@b
  7120   00162C  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  7121   001630  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  7122   001634  C010  F008         	movff	??___fladd+3,___fladd@b+3
  7123   001638  2813               	incf	___fladd@bexp^0,w,c
  7124   00163A  B4D8               	btfsc	status,2,c
  7125   00163C  EF22  F00B         	goto	u4691
  7126   001640  EF24  F00B         	goto	u4690
  7127   001644                     u4691:
  7128   001644  EF25  F00B         	goto	l4757
  7129   001648                     u4690:
  7130   001648  2A13               	incf	___fladd@bexp^0,f,c
  7131   00164A                     l4757:
  7132   00164A  2813               	incf	___fladd@bexp^0,w,c
  7133   00164C  B4D8               	btfsc	status,2,c
  7134   00164E  EF2B  F00B         	goto	u4701
  7135   001652  EF2D  F00B         	goto	u4700
  7136   001656                     u4701:
  7137   001656  EF35  F00B         	goto	l4761
  7138   00165A                     u4700:
  7139   00165A  5013               	movf	___fladd@bexp^0,w,c
  7140   00165C  A4D8               	btfss	status,2,c
  7141   00165E  EF33  F00B         	goto	u4711
  7142   001662  EF35  F00B         	goto	u4710
  7143   001666                     u4711:
  7144   001666  EF47  F00B         	goto	l4765
  7145   00166A                     u4710:
  7146   00166A                     l4761:
  7147   00166A  0E00               	movlw	0
  7148   00166C  6E05               	movwf	___fladd@b^0,c
  7149   00166E  0E00               	movlw	0
  7150   001670  6E06               	movwf	(___fladd@b+1)^0,c
  7151   001672  0E00               	movlw	0
  7152   001674  6E07               	movwf	(___fladd@b+2)^0,c
  7153   001676  0E00               	movlw	0
  7154   001678  6E08               	movwf	(___fladd@b+3)^0,c
  7155   00167A  5013               	movf	___fladd@bexp^0,w,c
  7156   00167C  A4D8               	btfss	status,2,c
  7157   00167E  EF43  F00B         	goto	u4721
  7158   001682  EF45  F00B         	goto	u4720
  7159   001686                     u4721:
  7160   001686  EF47  F00B         	goto	l4765
  7161   00168A                     u4720:
  7162   00168A  0E00               	movlw	0
  7163   00168C  6E11               	movwf	___fladd@signs^0,c
  7164   00168E                     l4765:
  7165   00168E  A013               	btfss	___fladd@bexp^0,0,c
  7166   001690  EF4C  F00B         	goto	u4731
  7167   001694  EF4E  F00B         	goto	u4730
  7168   001698                     u4731:
  7169   001698  EF51  F00B         	goto	l4769
  7170   00169C                     u4730:
  7171   00169C  8E07               	bsf	(___fladd@b+2)^0,7,c
  7172   00169E  EF52  F00B         	goto	l4771
  7173   0016A2                     l4769:
  7174   0016A2  9E07               	bcf	(___fladd@b+2)^0,7,c
  7175   0016A4                     l4771:
  7176   0016A4  90D8               	bcf	status,0,c
  7177   0016A6  3013               	rrcf	___fladd@bexp^0,w,c
  7178   0016A8  6E08               	movwf	(___fladd@b+3)^0,c
  7179   0016AA  AE11               	btfss	___fladd@signs^0,7,c
  7180   0016AC  EF5A  F00B         	goto	u4741
  7181   0016B0  EF5C  F00B         	goto	u4740
  7182   0016B4                     u4741:
  7183   0016B4  EF5D  F00B         	goto	l4777
  7184   0016B8                     u4740:
  7185   0016B8  8E08               	bsf	(___fladd@b+3)^0,7,c
  7186   0016BA                     l4777:
  7187   0016BA  C005  F005         	movff	___fladd@b,?___fladd
  7188   0016BE  C006  F006         	movff	___fladd@b+1,?___fladd+1
  7189   0016C2  C007  F007         	movff	___fladd@b+2,?___fladd+2
  7190   0016C6  C008  F008         	movff	___fladd@b+3,?___fladd+3
  7191   0016CA                     l1039:
  7192   0016CA  0012               	return		;funcret
  7193   0016CC                     __end_of___fladd:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function ___flmul *****************
  7197 ;; Defined at:
  7198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  b               4   18[COMRAM] unsigned char 
  7201 ;;  a               4   22[COMRAM] unsigned char 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  prod            4   37[COMRAM] struct .
  7204 ;;  grs             4   32[COMRAM] unsigned long 
  7205 ;;  temp            2   41[COMRAM] struct .
  7206 ;;  bexp            1   36[COMRAM] unsigned char 
  7207 ;;  aexp            1   31[COMRAM] unsigned char 
  7208 ;;  sign            1   30[COMRAM] unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  4   18[COMRAM] unsigned char 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, prodl, prodh
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7218 ;;      Params:         8       0       0       0       0       0       0       0       0
  7219 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7220 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7221 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7222 ;;Total ram usage:       25 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 4
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_get_corriente_AC
  7229 ;;		_efgtoa
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text36
  7234   0016CC                     __ptext36:
  7235                           	callstack 0
  7236   0016CC                     ___flmul:
  7237                           	callstack 22
  7238   0016CC  5016               	movf	(___flmul@b+3)^0,w,c
  7239   0016CE  0B80               	andlw	128
  7240   0016D0  6E1F               	movwf	___flmul@sign^0,c
  7241   0016D2  5016               	movf	(___flmul@b+3)^0,w,c
  7242   0016D4  2416               	addwf	(___flmul@b+3)^0,w,c
  7243   0016D6  6E25               	movwf	___flmul@bexp^0,c
  7244   0016D8  AE15               	btfss	(___flmul@b+2)^0,7,c
  7245   0016DA  EF71  F00B         	goto	u4991
  7246   0016DE  EF73  F00B         	goto	u4990
  7247   0016E2                     u4991:
  7248   0016E2  EF74  F00B         	goto	l4939
  7249   0016E6                     u4990:
  7250   0016E6  8025               	bsf	___flmul@bexp^0,0,c
  7251   0016E8                     l4939:
  7252   0016E8  5025               	movf	___flmul@bexp^0,w,c
  7253   0016EA  B4D8               	btfsc	status,2,c
  7254   0016EC  EF7A  F00B         	goto	u5001
  7255   0016F0  EF7C  F00B         	goto	u5000
  7256   0016F4                     u5001:
  7257   0016F4  EF8F  F00B         	goto	l4947
  7258   0016F8                     u5000:
  7259   0016F8  2825               	incf	___flmul@bexp^0,w,c
  7260   0016FA  A4D8               	btfss	status,2,c
  7261   0016FC  EF82  F00B         	goto	u5011
  7262   001700  EF84  F00B         	goto	u5010
  7263   001704                     u5011:
  7264   001704  EF8C  F00B         	goto	l4945
  7265   001708                     u5010:
  7266   001708  0E00               	movlw	0
  7267   00170A  6E13               	movwf	___flmul@b^0,c
  7268   00170C  0E00               	movlw	0
  7269   00170E  6E14               	movwf	(___flmul@b+1)^0,c
  7270   001710  0E00               	movlw	0
  7271   001712  6E15               	movwf	(___flmul@b+2)^0,c
  7272   001714  0E00               	movlw	0
  7273   001716  6E16               	movwf	(___flmul@b+3)^0,c
  7274   001718                     l4945:
  7275   001718  8E15               	bsf	(___flmul@b+2)^0,7,c
  7276   00171A  EF97  F00B         	goto	l4949
  7277   00171E                     l4947:
  7278   00171E  0E00               	movlw	0
  7279   001720  6E13               	movwf	___flmul@b^0,c
  7280   001722  0E00               	movlw	0
  7281   001724  6E14               	movwf	(___flmul@b+1)^0,c
  7282   001726  0E00               	movlw	0
  7283   001728  6E15               	movwf	(___flmul@b+2)^0,c
  7284   00172A  0E00               	movlw	0
  7285   00172C  6E16               	movwf	(___flmul@b+3)^0,c
  7286   00172E                     l4949:
  7287   00172E  501A               	movf	(___flmul@a+3)^0,w,c
  7288   001730  0B80               	andlw	128
  7289   001732  1A1F               	xorwf	___flmul@sign^0,f,c
  7290   001734  501A               	movf	(___flmul@a+3)^0,w,c
  7291   001736  241A               	addwf	(___flmul@a+3)^0,w,c
  7292   001738  6E20               	movwf	___flmul@aexp^0,c
  7293   00173A  AE19               	btfss	(___flmul@a+2)^0,7,c
  7294   00173C  EFA2  F00B         	goto	u5021
  7295   001740  EFA4  F00B         	goto	u5020
  7296   001744                     u5021:
  7297   001744  EFA5  F00B         	goto	l4957
  7298   001748                     u5020:
  7299   001748  8020               	bsf	___flmul@aexp^0,0,c
  7300   00174A                     l4957:
  7301   00174A  5020               	movf	___flmul@aexp^0,w,c
  7302   00174C  B4D8               	btfsc	status,2,c
  7303   00174E  EFAB  F00B         	goto	u5031
  7304   001752  EFAD  F00B         	goto	u5030
  7305   001756                     u5031:
  7306   001756  EFC0  F00B         	goto	l4965
  7307   00175A                     u5030:
  7308   00175A  2820               	incf	___flmul@aexp^0,w,c
  7309   00175C  A4D8               	btfss	status,2,c
  7310   00175E  EFB3  F00B         	goto	u5041
  7311   001762  EFB5  F00B         	goto	u5040
  7312   001766                     u5041:
  7313   001766  EFBD  F00B         	goto	l4963
  7314   00176A                     u5040:
  7315   00176A  0E00               	movlw	0
  7316   00176C  6E17               	movwf	___flmul@a^0,c
  7317   00176E  0E00               	movlw	0
  7318   001770  6E18               	movwf	(___flmul@a+1)^0,c
  7319   001772  0E00               	movlw	0
  7320   001774  6E19               	movwf	(___flmul@a+2)^0,c
  7321   001776  0E00               	movlw	0
  7322   001778  6E1A               	movwf	(___flmul@a+3)^0,c
  7323   00177A                     l4963:
  7324   00177A  8E19               	bsf	(___flmul@a+2)^0,7,c
  7325   00177C  EFC8  F00B         	goto	l1116
  7326   001780                     l4965:
  7327   001780  0E00               	movlw	0
  7328   001782  6E17               	movwf	___flmul@a^0,c
  7329   001784  0E00               	movlw	0
  7330   001786  6E18               	movwf	(___flmul@a+1)^0,c
  7331   001788  0E00               	movlw	0
  7332   00178A  6E19               	movwf	(___flmul@a+2)^0,c
  7333   00178C  0E00               	movlw	0
  7334   00178E  6E1A               	movwf	(___flmul@a+3)^0,c
  7335   001790                     l1116:
  7336   001790  5020               	movf	___flmul@aexp^0,w,c
  7337   001792  B4D8               	btfsc	status,2,c
  7338   001794  EFCE  F00B         	goto	u5051
  7339   001798  EFD0  F00B         	goto	u5050
  7340   00179C                     u5051:
  7341   00179C  EFD8  F00B         	goto	l4969
  7342   0017A0                     u5050:
  7343   0017A0  5025               	movf	___flmul@bexp^0,w,c
  7344   0017A2  A4D8               	btfss	status,2,c
  7345   0017A4  EFD6  F00B         	goto	u5061
  7346   0017A8  EFD8  F00B         	goto	u5060
  7347   0017AC                     u5061:
  7348   0017AC  EFE2  F00B         	goto	l4973
  7349   0017B0                     u5060:
  7350   0017B0                     l4969:
  7351   0017B0  0E00               	movlw	0
  7352   0017B2  6E13               	movwf	?___flmul^0,c
  7353   0017B4  0E00               	movlw	0
  7354   0017B6  6E14               	movwf	(?___flmul+1)^0,c
  7355   0017B8  0E00               	movlw	0
  7356   0017BA  6E15               	movwf	(?___flmul+2)^0,c
  7357   0017BC  0E00               	movlw	0
  7358   0017BE  6E16               	movwf	(?___flmul+3)^0,c
  7359   0017C0  EF7A  F00D         	goto	l1120
  7360   0017C4                     l4973:
  7361   0017C4  5019               	movf	(___flmul@a+2)^0,w,c
  7362   0017C6  0213               	mulwf	___flmul@b^0,c
  7363   0017C8  CFF3 F02A          	movff	prodl,___flmul@temp
  7364   0017CC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7365   0017D0  502A               	movf	___flmul@temp^0,w,c
  7366   0017D2  6E21               	movwf	___flmul@grs^0,c
  7367   0017D4  6A22               	clrf	(___flmul@grs+1)^0,c
  7368   0017D6  6A23               	clrf	(___flmul@grs+2)^0,c
  7369   0017D8  6A24               	clrf	(___flmul@grs+3)^0,c
  7370   0017DA  502B               	movf	(___flmul@temp+1)^0,w,c
  7371   0017DC  6E26               	movwf	___flmul@prod^0,c
  7372   0017DE  6A27               	clrf	(___flmul@prod+1)^0,c
  7373   0017E0  6A28               	clrf	(___flmul@prod+2)^0,c
  7374   0017E2  6A29               	clrf	(___flmul@prod+3)^0,c
  7375   0017E4  5018               	movf	(___flmul@a+1)^0,w,c
  7376   0017E6  0214               	mulwf	(___flmul@b+1)^0,c
  7377   0017E8  CFF3 F02A          	movff	prodl,___flmul@temp
  7378   0017EC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7379   0017F0  502A               	movf	___flmul@temp^0,w,c
  7380   0017F2  2621               	addwf	___flmul@grs^0,f,c
  7381   0017F4  0E00               	movlw	0
  7382   0017F6  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7383   0017F8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7384   0017FA  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7385   0017FC  502B               	movf	(___flmul@temp+1)^0,w,c
  7386   0017FE  2626               	addwf	___flmul@prod^0,f,c
  7387   001800  0E00               	movlw	0
  7388   001802  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7389   001804  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7390   001806  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7391   001808  5017               	movf	___flmul@a^0,w,c
  7392   00180A  0215               	mulwf	(___flmul@b+2)^0,c
  7393   00180C  CFF3 F02A          	movff	prodl,___flmul@temp
  7394   001810  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7395   001814  502A               	movf	___flmul@temp^0,w,c
  7396   001816  2621               	addwf	___flmul@grs^0,f,c
  7397   001818  0E00               	movlw	0
  7398   00181A  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7399   00181C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7400   00181E  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7401   001820  502B               	movf	(___flmul@temp+1)^0,w,c
  7402   001822  2626               	addwf	___flmul@prod^0,f,c
  7403   001824  0E00               	movlw	0
  7404   001826  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7405   001828  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7406   00182A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7407   00182C  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7408   001830  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7409   001834  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7410   001838  6A21               	clrf	___flmul@grs^0,c
  7411   00183A  5017               	movf	___flmul@a^0,w,c
  7412   00183C  0214               	mulwf	(___flmul@b+1)^0,c
  7413   00183E  CFF3 F02A          	movff	prodl,___flmul@temp
  7414   001842  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7415   001846  502A               	movf	___flmul@temp^0,w,c
  7416   001848  2621               	addwf	___flmul@grs^0,f,c
  7417   00184A  502B               	movf	(___flmul@temp+1)^0,w,c
  7418   00184C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7419   00184E  0E00               	movlw	0
  7420   001850  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7421   001852  0E00               	movlw	0
  7422   001854  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7423   001856  5018               	movf	(___flmul@a+1)^0,w,c
  7424   001858  0213               	mulwf	___flmul@b^0,c
  7425   00185A  CFF3 F02A          	movff	prodl,___flmul@temp
  7426   00185E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7427   001862  502A               	movf	___flmul@temp^0,w,c
  7428   001864  2621               	addwf	___flmul@grs^0,f,c
  7429   001866  502B               	movf	(___flmul@temp+1)^0,w,c
  7430   001868  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7431   00186A  0E00               	movlw	0
  7432   00186C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7433   00186E  0E00               	movlw	0
  7434   001870  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7435   001872  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7436   001876  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7437   00187A  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7438   00187E  6A21               	clrf	___flmul@grs^0,c
  7439   001880  5017               	movf	___flmul@a^0,w,c
  7440   001882  0213               	mulwf	___flmul@b^0,c
  7441   001884  CFF3 F02A          	movff	prodl,___flmul@temp
  7442   001888  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7443   00188C  502A               	movf	___flmul@temp^0,w,c
  7444   00188E  2621               	addwf	___flmul@grs^0,f,c
  7445   001890  502B               	movf	(___flmul@temp+1)^0,w,c
  7446   001892  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7447   001894  0E00               	movlw	0
  7448   001896  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7449   001898  0E00               	movlw	0
  7450   00189A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7451   00189C  5019               	movf	(___flmul@a+2)^0,w,c
  7452   00189E  0214               	mulwf	(___flmul@b+1)^0,c
  7453   0018A0  CFF3 F02A          	movff	prodl,___flmul@temp
  7454   0018A4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7455   0018A8  502A               	movf	___flmul@temp^0,w,c
  7456   0018AA  2626               	addwf	___flmul@prod^0,f,c
  7457   0018AC  502B               	movf	(___flmul@temp+1)^0,w,c
  7458   0018AE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7459   0018B0  0E00               	movlw	0
  7460   0018B2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7461   0018B4  0E00               	movlw	0
  7462   0018B6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7463   0018B8  5018               	movf	(___flmul@a+1)^0,w,c
  7464   0018BA  0215               	mulwf	(___flmul@b+2)^0,c
  7465   0018BC  CFF3 F02A          	movff	prodl,___flmul@temp
  7466   0018C0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7467   0018C4  502A               	movf	___flmul@temp^0,w,c
  7468   0018C6  2626               	addwf	___flmul@prod^0,f,c
  7469   0018C8  502B               	movf	(___flmul@temp+1)^0,w,c
  7470   0018CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7471   0018CC  0E00               	movlw	0
  7472   0018CE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7473   0018D0  0E00               	movlw	0
  7474   0018D2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7475   0018D4  5019               	movf	(___flmul@a+2)^0,w,c
  7476   0018D6  0215               	mulwf	(___flmul@b+2)^0,c
  7477   0018D8  CFF3 F02A          	movff	prodl,___flmul@temp
  7478   0018DC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7479   0018E0  502A               	movf	___flmul@temp^0,w,c
  7480   0018E2  6E1B               	movwf	??___flmul^0,c
  7481   0018E4  502B               	movf	(___flmul@temp+1)^0,w,c
  7482   0018E6  6E1C               	movwf	(??___flmul+1)^0,c
  7483   0018E8  6A1D               	clrf	(??___flmul+2)^0,c
  7484   0018EA  6A1E               	clrf	(??___flmul+3)^0,c
  7485   0018EC  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  7486   0018F0  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  7487   0018F4  C01B  F01C         	movff	??___flmul,??___flmul+1
  7488   0018F8  6A1B               	clrf	??___flmul^0,c
  7489   0018FA  501B               	movf	??___flmul^0,w,c
  7490   0018FC  2626               	addwf	___flmul@prod^0,f,c
  7491   0018FE  501C               	movf	(??___flmul+1)^0,w,c
  7492   001900  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7493   001902  501D               	movf	(??___flmul+2)^0,w,c
  7494   001904  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7495   001906  501E               	movf	(??___flmul+3)^0,w,c
  7496   001908  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7497   00190A  C021  F01B         	movff	___flmul@grs,??___flmul
  7498   00190E  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  7499   001912  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  7500   001916  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  7501   00191A  0E19               	movlw	25
  7502   00191C  EF95  F00C         	goto	u5070
  7503   001920                     u5075:
  7504   001920  90D8               	bcf	status,0,c
  7505   001922  321E               	rrcf	(??___flmul+3)^0,f,c
  7506   001924  321D               	rrcf	(??___flmul+2)^0,f,c
  7507   001926  321C               	rrcf	(??___flmul+1)^0,f,c
  7508   001928  321B               	rrcf	??___flmul^0,f,c
  7509   00192A                     u5070:
  7510   00192A  2EE8               	decfsz	wreg,f,c
  7511   00192C  EF90  F00C         	goto	u5075
  7512   001930  501B               	movf	??___flmul^0,w,c
  7513   001932  2626               	addwf	___flmul@prod^0,f,c
  7514   001934  501C               	movf	(??___flmul+1)^0,w,c
  7515   001936  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7516   001938  501D               	movf	(??___flmul+2)^0,w,c
  7517   00193A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7518   00193C  501E               	movf	(??___flmul+3)^0,w,c
  7519   00193E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7520   001940  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7521   001944  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7522   001948  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7523   00194C  6A21               	clrf	___flmul@grs^0,c
  7524   00194E  5020               	movf	___flmul@aexp^0,w,c
  7525   001950  C025  F01B         	movff	___flmul@bexp,??___flmul
  7526   001954  6A1C               	clrf	(??___flmul+1)^0,c
  7527   001956  261B               	addwf	??___flmul^0,f,c
  7528   001958  0E00               	movlw	0
  7529   00195A  221C               	addwfc	(??___flmul+1)^0,f,c
  7530   00195C  0E82               	movlw	130
  7531   00195E  241B               	addwf	??___flmul^0,w,c
  7532   001960  6E2A               	movwf	___flmul@temp^0,c
  7533   001962  0EFF               	movlw	255
  7534   001964  201C               	addwfc	(??___flmul+1)^0,w,c
  7535   001966  6E2B               	movwf	(___flmul@temp+1)^0,c
  7536   001968  EFCB  F00C         	goto	l5021
  7537   00196C                     l5015:
  7538   00196C  90D8               	bcf	status,0,c
  7539   00196E  3626               	rlcf	___flmul@prod^0,f,c
  7540   001970  3627               	rlcf	(___flmul@prod+1)^0,f,c
  7541   001972  3628               	rlcf	(___flmul@prod+2)^0,f,c
  7542   001974  3629               	rlcf	(___flmul@prod+3)^0,f,c
  7543   001976  AE24               	btfss	(___flmul@grs+3)^0,7,c
  7544   001978  EFC0  F00C         	goto	u5081
  7545   00197C  EFC2  F00C         	goto	u5080
  7546   001980                     u5081:
  7547   001980  EFC3  F00C         	goto	l1123
  7548   001984                     u5080:
  7549   001984  8026               	bsf	___flmul@prod^0,0,c
  7550   001986                     l1123:
  7551   001986  90D8               	bcf	status,0,c
  7552   001988  3621               	rlcf	___flmul@grs^0,f,c
  7553   00198A  3622               	rlcf	(___flmul@grs+1)^0,f,c
  7554   00198C  3623               	rlcf	(___flmul@grs+2)^0,f,c
  7555   00198E  3624               	rlcf	(___flmul@grs+3)^0,f,c
  7556   001990  062A               	decf	___flmul@temp^0,f,c
  7557   001992  A0D8               	btfss	status,0,c
  7558   001994  062B               	decf	(___flmul@temp+1)^0,f,c
  7559   001996                     l5021:
  7560   001996  AE28               	btfss	(___flmul@prod+2)^0,7,c
  7561   001998  EFD0  F00C         	goto	u5091
  7562   00199C  EFD2  F00C         	goto	u5090
  7563   0019A0                     u5091:
  7564   0019A0  EFB6  F00C         	goto	l5015
  7565   0019A4                     u5090:
  7566   0019A4  0E00               	movlw	0
  7567   0019A6  6E20               	movwf	___flmul@aexp^0,c
  7568   0019A8  AE24               	btfss	(___flmul@grs+3)^0,7,c
  7569   0019AA  EFD9  F00C         	goto	u5101
  7570   0019AE  EFDB  F00C         	goto	u5100
  7571   0019B2                     u5101:
  7572   0019B2  EFFF  F00C         	goto	l1125
  7573   0019B6                     u5100:
  7574   0019B6  0EFF               	movlw	255
  7575   0019B8  1421               	andwf	___flmul@grs^0,w,c
  7576   0019BA  6E1B               	movwf	??___flmul^0,c
  7577   0019BC  0EFF               	movlw	255
  7578   0019BE  1422               	andwf	(___flmul@grs+1)^0,w,c
  7579   0019C0  6E1C               	movwf	(??___flmul+1)^0,c
  7580   0019C2  0EFF               	movlw	255
  7581   0019C4  1423               	andwf	(___flmul@grs+2)^0,w,c
  7582   0019C6  6E1D               	movwf	(??___flmul+2)^0,c
  7583   0019C8  0E7F               	movlw	127
  7584   0019CA  1424               	andwf	(___flmul@grs+3)^0,w,c
  7585   0019CC  6E1E               	movwf	(??___flmul+3)^0,c
  7586   0019CE  501B               	movf	??___flmul^0,w,c
  7587   0019D0  101C               	iorwf	(??___flmul+1)^0,w,c
  7588   0019D2  101D               	iorwf	(??___flmul+2)^0,w,c
  7589   0019D4  101E               	iorwf	(??___flmul+3)^0,w,c
  7590   0019D6  B4D8               	btfsc	status,2,c
  7591   0019D8  EFF0  F00C         	goto	u5111
  7592   0019DC  EFF2  F00C         	goto	u5110
  7593   0019E0                     u5111:
  7594   0019E0  EFF6  F00C         	goto	l1126
  7595   0019E4                     u5110:
  7596   0019E4                     l5029:
  7597   0019E4  0E01               	movlw	1
  7598   0019E6  6E20               	movwf	___flmul@aexp^0,c
  7599   0019E8  EFFF  F00C         	goto	l1125
  7600   0019EC                     l1126:
  7601   0019EC  A026               	btfss	___flmul@prod^0,0,c
  7602   0019EE  EFFB  F00C         	goto	u5121
  7603   0019F2  EFFD  F00C         	goto	u5120
  7604   0019F6                     u5121:
  7605   0019F6  EFFF  F00C         	goto	l1125
  7606   0019FA                     u5120:
  7607   0019FA  EFF2  F00C         	goto	l5029
  7608   0019FE                     l1125:
  7609   0019FE  5020               	movf	___flmul@aexp^0,w,c
  7610   001A00  B4D8               	btfsc	status,2,c
  7611   001A02  EF05  F00D         	goto	u5131
  7612   001A06  EF07  F00D         	goto	u5130
  7613   001A0A                     u5131:
  7614   001A0A  EF2B  F00D         	goto	l5041
  7615   001A0E                     u5130:
  7616   001A0E  0E01               	movlw	1
  7617   001A10  2626               	addwf	___flmul@prod^0,f,c
  7618   001A12  0E00               	movlw	0
  7619   001A14  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7620   001A16  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7621   001A18  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7622   001A1A  A029               	btfss	(___flmul@prod+3)^0,0,c
  7623   001A1C  EF12  F00D         	goto	u5141
  7624   001A20  EF14  F00D         	goto	u5140
  7625   001A24                     u5141:
  7626   001A24  EF2B  F00D         	goto	l5041
  7627   001A28                     u5140:
  7628   001A28  C026  F01B         	movff	___flmul@prod,??___flmul
  7629   001A2C  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  7630   001A30  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  7631   001A34  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  7632   001A38  341E               	rlcf	(??___flmul+3)^0,w,c
  7633   001A3A  321E               	rrcf	(??___flmul+3)^0,f,c
  7634   001A3C  321D               	rrcf	(??___flmul+2)^0,f,c
  7635   001A3E  321C               	rrcf	(??___flmul+1)^0,f,c
  7636   001A40  321B               	rrcf	??___flmul^0,f,c
  7637   001A42  C01B  F026         	movff	??___flmul,___flmul@prod
  7638   001A46  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  7639   001A4A  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  7640   001A4E  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  7641   001A52  4A2A               	infsnz	___flmul@temp^0,f,c
  7642   001A54  2A2B               	incf	(___flmul@temp+1)^0,f,c
  7643   001A56                     l5041:
  7644   001A56  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  7645   001A58  EF36  F00D         	goto	u5151
  7646   001A5C  502B               	movf	(___flmul@temp+1)^0,w,c
  7647   001A5E  E108               	bnz	u5150
  7648   001A60  282A               	incf	___flmul@temp^0,w,c
  7649   001A62  A0D8               	btfss	status,0,c
  7650   001A64  EF36  F00D         	goto	u5151
  7651   001A68  EF38  F00D         	goto	u5150
  7652   001A6C                     u5151:
  7653   001A6C  EF42  F00D         	goto	l5045
  7654   001A70                     u5150:
  7655   001A70  0E00               	movlw	0
  7656   001A72  6E26               	movwf	___flmul@prod^0,c
  7657   001A74  0E00               	movlw	0
  7658   001A76  6E27               	movwf	(___flmul@prod+1)^0,c
  7659   001A78  0E80               	movlw	128
  7660   001A7A  6E28               	movwf	(___flmul@prod+2)^0,c
  7661   001A7C  0E7F               	movlw	127
  7662   001A7E  6E29               	movwf	(___flmul@prod+3)^0,c
  7663   001A80  EF70  F00D         	goto	l5057
  7664   001A84                     l5045:
  7665   001A84  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  7666   001A86  EF4F  F00D         	goto	u5160
  7667   001A8A  502B               	movf	(___flmul@temp+1)^0,w,c
  7668   001A8C  E106               	bnz	u5161
  7669   001A8E  042A               	decf	___flmul@temp^0,w,c
  7670   001A90  B0D8               	btfsc	status,0,c
  7671   001A92  EF4D  F00D         	goto	u5161
  7672   001A96  EF4F  F00D         	goto	u5160
  7673   001A9A                     u5161:
  7674   001A9A  EF5B  F00D         	goto	l1133
  7675   001A9E                     u5160:
  7676   001A9E  0E00               	movlw	0
  7677   001AA0  6E26               	movwf	___flmul@prod^0,c
  7678   001AA2  0E00               	movlw	0
  7679   001AA4  6E27               	movwf	(___flmul@prod+1)^0,c
  7680   001AA6  0E00               	movlw	0
  7681   001AA8  6E28               	movwf	(___flmul@prod+2)^0,c
  7682   001AAA  0E00               	movlw	0
  7683   001AAC  6E29               	movwf	(___flmul@prod+3)^0,c
  7684   001AAE  0E00               	movlw	0
  7685   001AB0  6E1F               	movwf	___flmul@sign^0,c
  7686   001AB2  EF70  F00D         	goto	l5057
  7687   001AB6                     l1133:
  7688   001AB6  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  7689   001ABA  0EFF               	movlw	255
  7690   001ABC  1626               	andwf	___flmul@prod^0,f,c
  7691   001ABE  0EFF               	movlw	255
  7692   001AC0  1627               	andwf	(___flmul@prod+1)^0,f,c
  7693   001AC2  0E7F               	movlw	127
  7694   001AC4  1628               	andwf	(___flmul@prod+2)^0,f,c
  7695   001AC6  0E00               	movlw	0
  7696   001AC8  1629               	andwf	(___flmul@prod+3)^0,f,c
  7697   001ACA  A025               	btfss	___flmul@bexp^0,0,c
  7698   001ACC  EF6A  F00D         	goto	u5171
  7699   001AD0  EF6C  F00D         	goto	u5170
  7700   001AD4                     u5171:
  7701   001AD4  EF6D  F00D         	goto	l5055
  7702   001AD8                     u5170:
  7703   001AD8  8E28               	bsf	(___flmul@prod+2)^0,7,c
  7704   001ADA                     l5055:
  7705   001ADA  90D8               	bcf	status,0,c
  7706   001ADC  3025               	rrcf	___flmul@bexp^0,w,c
  7707   001ADE  6E29               	movwf	(___flmul@prod+3)^0,c
  7708   001AE0                     l5057:
  7709   001AE0  501F               	movf	___flmul@sign^0,w,c
  7710   001AE2  1229               	iorwf	(___flmul@prod+3)^0,f,c
  7711   001AE4  C026  F013         	movff	___flmul@prod,?___flmul
  7712   001AE8  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  7713   001AEC  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  7714   001AF0  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  7715   001AF4                     l1120:
  7716   001AF4  0012               	return		;funcret
  7717   001AF6                     __end_of___flmul:
  7718                           	callstack 0
  7719                           
  7720 ;; *************** function ___flge *****************
  7721 ;; Defined at:
  7722 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  ff1             4   43[COMRAM] unsigned char 
  7725 ;;  ff2             4   47[COMRAM] unsigned char 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;		None
  7728 ;; Return value:  Size  Location     Type
  7729 ;;		None               void
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7737 ;;      Params:         8       0       0       0       0       0       0       0       0
  7738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7739 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7740 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7741 ;;Total ram usage:       12 bytes
  7742 ;; Hardware stack levels used: 1
  7743 ;; Hardware stack levels required when called: 4
  7744 ;; This function calls:
  7745 ;;		Nothing
  7746 ;; This function is called by:
  7747 ;;		_get_corriente_AC
  7748 ;;		_trip_protec_current
  7749 ;;		_efgtoa
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text37
  7754   002BA8                     __ptext37:
  7755                           	callstack 0
  7756   002BA8                     ___flge:
  7757                           	callstack 25
  7758   002BA8  0E00               	movlw	0
  7759   002BAA  142C               	andwf	___flge@ff1^0,w,c
  7760   002BAC  6E34               	movwf	??___flge^0,c
  7761   002BAE  0E00               	movlw	0
  7762   002BB0  142D               	andwf	(___flge@ff1+1)^0,w,c
  7763   002BB2  6E35               	movwf	(??___flge+1)^0,c
  7764   002BB4  0E80               	movlw	128
  7765   002BB6  142E               	andwf	(___flge@ff1+2)^0,w,c
  7766   002BB8  6E36               	movwf	(??___flge+2)^0,c
  7767   002BBA  0E7F               	movlw	127
  7768   002BBC  142F               	andwf	(___flge@ff1+3)^0,w,c
  7769   002BBE  6E37               	movwf	(??___flge+3)^0,c
  7770   002BC0  5034               	movf	??___flge^0,w,c
  7771   002BC2  1035               	iorwf	(??___flge+1)^0,w,c
  7772   002BC4  1036               	iorwf	(??___flge+2)^0,w,c
  7773   002BC6  1037               	iorwf	(??___flge+3)^0,w,c
  7774   002BC8  A4D8               	btfss	status,2,c
  7775   002BCA  EFE9  F015         	goto	u5211
  7776   002BCE  EFEB  F015         	goto	u5210
  7777   002BD2                     u5211:
  7778   002BD2  EFF3  F015         	goto	l5089
  7779   002BD6                     u5210:
  7780   002BD6  0E00               	movlw	0
  7781   002BD8  6E2C               	movwf	___flge@ff1^0,c
  7782   002BDA  0E00               	movlw	0
  7783   002BDC  6E2D               	movwf	(___flge@ff1+1)^0,c
  7784   002BDE  0E00               	movlw	0
  7785   002BE0  6E2E               	movwf	(___flge@ff1+2)^0,c
  7786   002BE2  0E00               	movlw	0
  7787   002BE4  6E2F               	movwf	(___flge@ff1+3)^0,c
  7788   002BE6                     l5089:
  7789   002BE6  0E00               	movlw	0
  7790   002BE8  1430               	andwf	___flge@ff2^0,w,c
  7791   002BEA  6E34               	movwf	??___flge^0,c
  7792   002BEC  0E00               	movlw	0
  7793   002BEE  1431               	andwf	(___flge@ff2+1)^0,w,c
  7794   002BF0  6E35               	movwf	(??___flge+1)^0,c
  7795   002BF2  0E80               	movlw	128
  7796   002BF4  1432               	andwf	(___flge@ff2+2)^0,w,c
  7797   002BF6  6E36               	movwf	(??___flge+2)^0,c
  7798   002BF8  0E7F               	movlw	127
  7799   002BFA  1433               	andwf	(___flge@ff2+3)^0,w,c
  7800   002BFC  6E37               	movwf	(??___flge+3)^0,c
  7801   002BFE  5034               	movf	??___flge^0,w,c
  7802   002C00  1035               	iorwf	(??___flge+1)^0,w,c
  7803   002C02  1036               	iorwf	(??___flge+2)^0,w,c
  7804   002C04  1037               	iorwf	(??___flge+3)^0,w,c
  7805   002C06  A4D8               	btfss	status,2,c
  7806   002C08  EF08  F016         	goto	u5221
  7807   002C0C  EF0A  F016         	goto	u5220
  7808   002C10                     u5221:
  7809   002C10  EF12  F016         	goto	l5093
  7810   002C14                     u5220:
  7811   002C14  0E00               	movlw	0
  7812   002C16  6E30               	movwf	___flge@ff2^0,c
  7813   002C18  0E00               	movlw	0
  7814   002C1A  6E31               	movwf	(___flge@ff2+1)^0,c
  7815   002C1C  0E00               	movlw	0
  7816   002C1E  6E32               	movwf	(___flge@ff2+2)^0,c
  7817   002C20  0E00               	movlw	0
  7818   002C22  6E33               	movwf	(___flge@ff2+3)^0,c
  7819   002C24                     l5093:
  7820   002C24  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  7821   002C26  EF17  F016         	goto	u5231
  7822   002C2A  EF19  F016         	goto	u5230
  7823   002C2E                     u5231:
  7824   002C2E  EF22  F016         	goto	l5097
  7825   002C32                     u5230:
  7826   002C32  6C2C               	negf	___flge@ff1^0,c
  7827   002C34  1E2D               	comf	(___flge@ff1+1)^0,f,c
  7828   002C36  B0D8               	btfsc	status,0,c
  7829   002C38  2A2D               	incf	(___flge@ff1+1)^0,f,c
  7830   002C3A  1E2E               	comf	(___flge@ff1+2)^0,f,c
  7831   002C3C  B0D8               	btfsc	status,0,c
  7832   002C3E  2A2E               	incf	(___flge@ff1+2)^0,f,c
  7833   002C40  0E80               	movlw	128
  7834   002C42  562F               	subfwb	(___flge@ff1+3)^0,f,c
  7835   002C44                     l5097:
  7836   002C44  AE33               	btfss	(___flge@ff2+3)^0,7,c
  7837   002C46  EF27  F016         	goto	u5241
  7838   002C4A  EF29  F016         	goto	u5240
  7839   002C4E                     u5241:
  7840   002C4E  EF32  F016         	goto	l767
  7841   002C52                     u5240:
  7842   002C52  6C30               	negf	___flge@ff2^0,c
  7843   002C54  1E31               	comf	(___flge@ff2+1)^0,f,c
  7844   002C56  B0D8               	btfsc	status,0,c
  7845   002C58  2A31               	incf	(___flge@ff2+1)^0,f,c
  7846   002C5A  1E32               	comf	(___flge@ff2+2)^0,f,c
  7847   002C5C  B0D8               	btfsc	status,0,c
  7848   002C5E  2A32               	incf	(___flge@ff2+2)^0,f,c
  7849   002C60  0E80               	movlw	128
  7850   002C62  5633               	subfwb	(___flge@ff2+3)^0,f,c
  7851   002C64                     l767:
  7852   002C64  0E00               	movlw	0
  7853   002C66  1A2C               	xorwf	___flge@ff1^0,f,c
  7854   002C68  0E00               	movlw	0
  7855   002C6A  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  7856   002C6C  0E00               	movlw	0
  7857   002C6E  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  7858   002C70  0E80               	movlw	128
  7859   002C72  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  7860   002C74  0E00               	movlw	0
  7861   002C76  1A30               	xorwf	___flge@ff2^0,f,c
  7862   002C78  0E00               	movlw	0
  7863   002C7A  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  7864   002C7C  0E00               	movlw	0
  7865   002C7E  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  7866   002C80  0E80               	movlw	128
  7867   002C82  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  7868   002C84  5030               	movf	___flge@ff2^0,w,c
  7869   002C86  5C2C               	subwf	___flge@ff1^0,w,c
  7870   002C88  5031               	movf	(___flge@ff2+1)^0,w,c
  7871   002C8A  582D               	subwfb	(___flge@ff1+1)^0,w,c
  7872   002C8C  5032               	movf	(___flge@ff2+2)^0,w,c
  7873   002C8E  582E               	subwfb	(___flge@ff1+2)^0,w,c
  7874   002C90  5033               	movf	(___flge@ff2+3)^0,w,c
  7875   002C92  582F               	subwfb	(___flge@ff1+3)^0,w,c
  7876   002C94  B0D8               	btfsc	status,0,c
  7877   002C96  EF4F  F016         	goto	u5251
  7878   002C9A  EF51  F016         	goto	u5250
  7879   002C9E                     u5251:
  7880   002C9E  EF54  F016         	goto	l5103
  7881   002CA2                     u5250:
  7882   002CA2  90D8               	bcf	status,0,c
  7883   002CA4  EF55  F016         	goto	l772
  7884   002CA8                     l5103:
  7885   002CA8  80D8               	bsf	status,0,c
  7886   002CAA                     l772:
  7887   002CAA  0012               	return		;funcret
  7888   002CAC                     __end_of___flge:
  7889                           	callstack 0
  7890                           
  7891 ;; *************** function ___fldiv *****************
  7892 ;; Defined at:
  7893 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  b               4   51[COMRAM] unsigned char 
  7896 ;;  a               4   55[COMRAM] unsigned char 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  grs             4   70[COMRAM] unsigned long 
  7899 ;;  rem             4   63[COMRAM] unsigned long 
  7900 ;;  new_exp         2   68[COMRAM] short 
  7901 ;;  aexp            1   75[COMRAM] unsigned char 
  7902 ;;  bexp            1   74[COMRAM] unsigned char 
  7903 ;;  sign            1   67[COMRAM] unsigned char 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  4   51[COMRAM] unsigned char 
  7906 ;; Registers used:
  7907 ;;		wreg, status,2, status,0
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7913 ;;      Params:         8       0       0       0       0       0       0       0       0
  7914 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7915 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7916 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7917 ;;Total ram usage:       25 bytes
  7918 ;; Hardware stack levels used: 1
  7919 ;; Hardware stack levels required when called: 4
  7920 ;; This function calls:
  7921 ;;		Nothing
  7922 ;; This function is called by:
  7923 ;;		_get_corriente_AC
  7924 ;;		_main
  7925 ;;		_efgtoa
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           	psect	text38
  7930   001AF6                     __ptext38:
  7931                           	callstack 0
  7932   001AF6                     ___fldiv:
  7933                           	callstack 22
  7934   001AF6  5037               	movf	(___fldiv@b+3)^0,w,c
  7935   001AF8  0B80               	andlw	128
  7936   001AFA  6E44               	movwf	___fldiv@sign^0,c
  7937   001AFC  5037               	movf	(___fldiv@b+3)^0,w,c
  7938   001AFE  2437               	addwf	(___fldiv@b+3)^0,w,c
  7939   001B00  6E4B               	movwf	___fldiv@bexp^0,c
  7940   001B02  AE36               	btfss	(___fldiv@b+2)^0,7,c
  7941   001B04  EF86  F00D         	goto	u4761
  7942   001B08  EF88  F00D         	goto	u4760
  7943   001B0C                     u4761:
  7944   001B0C  EF89  F00D         	goto	l4801
  7945   001B10                     u4760:
  7946   001B10  804B               	bsf	___fldiv@bexp^0,0,c
  7947   001B12                     l4801:
  7948   001B12  504B               	movf	___fldiv@bexp^0,w,c
  7949   001B14  B4D8               	btfsc	status,2,c
  7950   001B16  EF8F  F00D         	goto	u4771
  7951   001B1A  EF91  F00D         	goto	u4770
  7952   001B1E                     u4771:
  7953   001B1E  EFA6  F00D         	goto	l4811
  7954   001B22                     u4770:
  7955   001B22  284B               	incf	___fldiv@bexp^0,w,c
  7956   001B24  A4D8               	btfss	status,2,c
  7957   001B26  EF97  F00D         	goto	u4781
  7958   001B2A  EF99  F00D         	goto	u4780
  7959   001B2E                     u4781:
  7960   001B2E  EFA1  F00D         	goto	l4807
  7961   001B32                     u4780:
  7962   001B32  0E00               	movlw	0
  7963   001B34  6E34               	movwf	___fldiv@b^0,c
  7964   001B36  0E00               	movlw	0
  7965   001B38  6E35               	movwf	(___fldiv@b+1)^0,c
  7966   001B3A  0E00               	movlw	0
  7967   001B3C  6E36               	movwf	(___fldiv@b+2)^0,c
  7968   001B3E  0E00               	movlw	0
  7969   001B40  6E37               	movwf	(___fldiv@b+3)^0,c
  7970   001B42                     l4807:
  7971   001B42  8E36               	bsf	(___fldiv@b+2)^0,7,c
  7972   001B44  0E00               	movlw	0
  7973   001B46  6E37               	movwf	(___fldiv@b+3)^0,c
  7974   001B48  EFAE  F00D         	goto	l4813
  7975   001B4C                     l4811:
  7976   001B4C  0E00               	movlw	0
  7977   001B4E  6E34               	movwf	___fldiv@b^0,c
  7978   001B50  0E00               	movlw	0
  7979   001B52  6E35               	movwf	(___fldiv@b+1)^0,c
  7980   001B54  0E00               	movlw	0
  7981   001B56  6E36               	movwf	(___fldiv@b+2)^0,c
  7982   001B58  0E00               	movlw	0
  7983   001B5A  6E37               	movwf	(___fldiv@b+3)^0,c
  7984   001B5C                     l4813:
  7985   001B5C  503B               	movf	(___fldiv@a+3)^0,w,c
  7986   001B5E  0B80               	andlw	128
  7987   001B60  1A44               	xorwf	___fldiv@sign^0,f,c
  7988   001B62  503B               	movf	(___fldiv@a+3)^0,w,c
  7989   001B64  243B               	addwf	(___fldiv@a+3)^0,w,c
  7990   001B66  6E4C               	movwf	___fldiv@aexp^0,c
  7991   001B68  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  7992   001B6A  EFB9  F00D         	goto	u4791
  7993   001B6E  EFBB  F00D         	goto	u4790
  7994   001B72                     u4791:
  7995   001B72  EFBC  F00D         	goto	l4821
  7996   001B76                     u4790:
  7997   001B76  804C               	bsf	___fldiv@aexp^0,0,c
  7998   001B78                     l4821:
  7999   001B78  504C               	movf	___fldiv@aexp^0,w,c
  8000   001B7A  B4D8               	btfsc	status,2,c
  8001   001B7C  EFC2  F00D         	goto	u4801
  8002   001B80  EFC4  F00D         	goto	u4800
  8003   001B84                     u4801:
  8004   001B84  EFD9  F00D         	goto	l4831
  8005   001B88                     u4800:
  8006   001B88  284C               	incf	___fldiv@aexp^0,w,c
  8007   001B8A  A4D8               	btfss	status,2,c
  8008   001B8C  EFCA  F00D         	goto	u4811
  8009   001B90  EFCC  F00D         	goto	u4810
  8010   001B94                     u4811:
  8011   001B94  EFD4  F00D         	goto	l4827
  8012   001B98                     u4810:
  8013   001B98  0E00               	movlw	0
  8014   001B9A  6E38               	movwf	___fldiv@a^0,c
  8015   001B9C  0E00               	movlw	0
  8016   001B9E  6E39               	movwf	(___fldiv@a+1)^0,c
  8017   001BA0  0E00               	movlw	0
  8018   001BA2  6E3A               	movwf	(___fldiv@a+2)^0,c
  8019   001BA4  0E00               	movlw	0
  8020   001BA6  6E3B               	movwf	(___fldiv@a+3)^0,c
  8021   001BA8                     l4827:
  8022   001BA8  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  8023   001BAA  0E00               	movlw	0
  8024   001BAC  6E3B               	movwf	(___fldiv@a+3)^0,c
  8025   001BAE  EFE1  F00D         	goto	l4833
  8026   001BB2                     l4831:
  8027   001BB2  0E00               	movlw	0
  8028   001BB4  6E38               	movwf	___fldiv@a^0,c
  8029   001BB6  0E00               	movlw	0
  8030   001BB8  6E39               	movwf	(___fldiv@a+1)^0,c
  8031   001BBA  0E00               	movlw	0
  8032   001BBC  6E3A               	movwf	(___fldiv@a+2)^0,c
  8033   001BBE  0E00               	movlw	0
  8034   001BC0  6E3B               	movwf	(___fldiv@a+3)^0,c
  8035   001BC2                     l4833:
  8036   001BC2  5038               	movf	___fldiv@a^0,w,c
  8037   001BC4  1039               	iorwf	(___fldiv@a+1)^0,w,c
  8038   001BC6  103A               	iorwf	(___fldiv@a+2)^0,w,c
  8039   001BC8  103B               	iorwf	(___fldiv@a+3)^0,w,c
  8040   001BCA  A4D8               	btfss	status,2,c
  8041   001BCC  EFEA  F00D         	goto	u4821
  8042   001BD0  EFEC  F00D         	goto	u4820
  8043   001BD4                     u4821:
  8044   001BD4  EF04  F00E         	goto	l4845
  8045   001BD8                     u4820:
  8046   001BD8  0E00               	movlw	0
  8047   001BDA  6E34               	movwf	___fldiv@b^0,c
  8048   001BDC  0E00               	movlw	0
  8049   001BDE  6E35               	movwf	(___fldiv@b+1)^0,c
  8050   001BE0  0E00               	movlw	0
  8051   001BE2  6E36               	movwf	(___fldiv@b+2)^0,c
  8052   001BE4  0E00               	movlw	0
  8053   001BE6  6E37               	movwf	(___fldiv@b+3)^0,c
  8054   001BE8  0E80               	movlw	128
  8055   001BEA  1236               	iorwf	(___fldiv@b+2)^0,f,c
  8056   001BEC  0E7F               	movlw	127
  8057   001BEE  1237               	iorwf	(___fldiv@b+3)^0,f,c
  8058   001BF0                     l4839:
  8059   001BF0  5044               	movf	___fldiv@sign^0,w,c
  8060   001BF2  1237               	iorwf	(___fldiv@b+3)^0,f,c
  8061   001BF4  C034  F034         	movff	___fldiv@b,?___fldiv
  8062   001BF8  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  8063   001BFC  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  8064   001C00  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  8065   001C04  EF47  F00F         	goto	l1084
  8066   001C08                     l4845:
  8067   001C08  504B               	movf	___fldiv@bexp^0,w,c
  8068   001C0A  A4D8               	btfss	status,2,c
  8069   001C0C  EF0A  F00E         	goto	u4831
  8070   001C10  EF0C  F00E         	goto	u4830
  8071   001C14                     u4831:
  8072   001C14  EF16  F00E         	goto	l4853
  8073   001C18                     u4830:
  8074   001C18  0E00               	movlw	0
  8075   001C1A  6E34               	movwf	?___fldiv^0,c
  8076   001C1C  0E00               	movlw	0
  8077   001C1E  6E35               	movwf	(?___fldiv+1)^0,c
  8078   001C20  0E00               	movlw	0
  8079   001C22  6E36               	movwf	(?___fldiv+2)^0,c
  8080   001C24  0E00               	movlw	0
  8081   001C26  6E37               	movwf	(?___fldiv+3)^0,c
  8082   001C28  EF47  F00F         	goto	l1084
  8083   001C2C                     l4853:
  8084   001C2C  504C               	movf	___fldiv@aexp^0,w,c
  8085   001C2E  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  8086   001C32  6A3D               	clrf	(??___fldiv+1)^0,c
  8087   001C34  5E3C               	subwf	??___fldiv^0,f,c
  8088   001C36  0E00               	movlw	0
  8089   001C38  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  8090   001C3A  0E7F               	movlw	127
  8091   001C3C  243C               	addwf	??___fldiv^0,w,c
  8092   001C3E  6E45               	movwf	___fldiv@new_exp^0,c
  8093   001C40  0E00               	movlw	0
  8094   001C42  203D               	addwfc	(??___fldiv+1)^0,w,c
  8095   001C44  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8096   001C46  C034  F040         	movff	___fldiv@b,___fldiv@rem
  8097   001C4A  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  8098   001C4E  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  8099   001C52  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  8100   001C56  0E00               	movlw	0
  8101   001C58  6E34               	movwf	___fldiv@b^0,c
  8102   001C5A  0E00               	movlw	0
  8103   001C5C  6E35               	movwf	(___fldiv@b+1)^0,c
  8104   001C5E  0E00               	movlw	0
  8105   001C60  6E36               	movwf	(___fldiv@b+2)^0,c
  8106   001C62  0E00               	movlw	0
  8107   001C64  6E37               	movwf	(___fldiv@b+3)^0,c
  8108   001C66  0E00               	movlw	0
  8109   001C68  6E47               	movwf	___fldiv@grs^0,c
  8110   001C6A  0E00               	movlw	0
  8111   001C6C  6E48               	movwf	(___fldiv@grs+1)^0,c
  8112   001C6E  0E00               	movlw	0
  8113   001C70  6E49               	movwf	(___fldiv@grs+2)^0,c
  8114   001C72  0E00               	movlw	0
  8115   001C74  6E4A               	movwf	(___fldiv@grs+3)^0,c
  8116   001C76  0E00               	movlw	0
  8117   001C78  6E4C               	movwf	___fldiv@aexp^0,c
  8118   001C7A  EF77  F00E         	goto	l1086
  8119   001C7E                     l4863:
  8120   001C7E  504C               	movf	___fldiv@aexp^0,w,c
  8121   001C80  B4D8               	btfsc	status,2,c
  8122   001C82  EF45  F00E         	goto	u4841
  8123   001C86  EF47  F00E         	goto	u4840
  8124   001C8A                     u4841:
  8125   001C8A  EF5E  F00E         	goto	l4871
  8126   001C8E                     u4840:
  8127   001C8E  90D8               	bcf	status,0,c
  8128   001C90  3640               	rlcf	___fldiv@rem^0,f,c
  8129   001C92  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  8130   001C94  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  8131   001C96  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  8132   001C98  90D8               	bcf	status,0,c
  8133   001C9A  3634               	rlcf	___fldiv@b^0,f,c
  8134   001C9C  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8135   001C9E  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8136   001CA0  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8137   001CA2  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8138   001CA4  EF56  F00E         	goto	u4851
  8139   001CA8  EF58  F00E         	goto	u4850
  8140   001CAC                     u4851:
  8141   001CAC  EF59  F00E         	goto	l1089
  8142   001CB0                     u4850:
  8143   001CB0  8034               	bsf	___fldiv@b^0,0,c
  8144   001CB2                     l1089:
  8145   001CB2  90D8               	bcf	status,0,c
  8146   001CB4  3647               	rlcf	___fldiv@grs^0,f,c
  8147   001CB6  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8148   001CB8  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8149   001CBA  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8150   001CBC                     l4871:
  8151   001CBC  5038               	movf	___fldiv@a^0,w,c
  8152   001CBE  5C40               	subwf	___fldiv@rem^0,w,c
  8153   001CC0  5039               	movf	(___fldiv@a+1)^0,w,c
  8154   001CC2  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  8155   001CC4  503A               	movf	(___fldiv@a+2)^0,w,c
  8156   001CC6  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  8157   001CC8  503B               	movf	(___fldiv@a+3)^0,w,c
  8158   001CCA  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  8159   001CCC  A0D8               	btfss	status,0,c
  8160   001CCE  EF6B  F00E         	goto	u4861
  8161   001CD2  EF6D  F00E         	goto	u4860
  8162   001CD6                     u4861:
  8163   001CD6  EF76  F00E         	goto	l4877
  8164   001CDA                     u4860:
  8165   001CDA  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  8166   001CDC  5038               	movf	___fldiv@a^0,w,c
  8167   001CDE  5E40               	subwf	___fldiv@rem^0,f,c
  8168   001CE0  5039               	movf	(___fldiv@a+1)^0,w,c
  8169   001CE2  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  8170   001CE4  503A               	movf	(___fldiv@a+2)^0,w,c
  8171   001CE6  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  8172   001CE8  503B               	movf	(___fldiv@a+3)^0,w,c
  8173   001CEA  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  8174   001CEC                     l4877:
  8175   001CEC  2A4C               	incf	___fldiv@aexp^0,f,c
  8176   001CEE                     l1086:
  8177   001CEE  0E19               	movlw	25
  8178   001CF0  644C               	cpfsgt	___fldiv@aexp^0,c
  8179   001CF2  EF7D  F00E         	goto	u4871
  8180   001CF6  EF7F  F00E         	goto	u4870
  8181   001CFA                     u4871:
  8182   001CFA  EF3F  F00E         	goto	l4863
  8183   001CFE                     u4870:
  8184   001CFE  5040               	movf	___fldiv@rem^0,w,c
  8185   001D00  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  8186   001D02  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  8187   001D04  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  8188   001D06  B4D8               	btfsc	status,2,c
  8189   001D08  EF88  F00E         	goto	u4881
  8190   001D0C  EF8A  F00E         	goto	u4880
  8191   001D10                     u4881:
  8192   001D10  EFA2  F00E         	goto	l4889
  8193   001D14                     u4880:
  8194   001D14  8047               	bsf	___fldiv@grs^0,0,c
  8195   001D16  EFA2  F00E         	goto	l4889
  8196   001D1A                     l4883:
  8197   001D1A  90D8               	bcf	status,0,c
  8198   001D1C  3634               	rlcf	___fldiv@b^0,f,c
  8199   001D1E  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8200   001D20  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8201   001D22  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8202   001D24  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8203   001D26  EF97  F00E         	goto	u4891
  8204   001D2A  EF99  F00E         	goto	u4890
  8205   001D2E                     u4891:
  8206   001D2E  EF9A  F00E         	goto	l1095
  8207   001D32                     u4890:
  8208   001D32  8034               	bsf	___fldiv@b^0,0,c
  8209   001D34                     l1095:
  8210   001D34  90D8               	bcf	status,0,c
  8211   001D36  3647               	rlcf	___fldiv@grs^0,f,c
  8212   001D38  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8213   001D3A  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8214   001D3C  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8215   001D3E  0645               	decf	___fldiv@new_exp^0,f,c
  8216   001D40  A0D8               	btfss	status,0,c
  8217   001D42  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  8218   001D44                     l4889:
  8219   001D44  AE36               	btfss	(___fldiv@b+2)^0,7,c
  8220   001D46  EFA7  F00E         	goto	u4901
  8221   001D4A  EFA9  F00E         	goto	u4900
  8222   001D4E                     u4901:
  8223   001D4E  EF8D  F00E         	goto	l4883
  8224   001D52                     u4900:
  8225   001D52  0E00               	movlw	0
  8226   001D54  6E4C               	movwf	___fldiv@aexp^0,c
  8227   001D56  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8228   001D58  EFB0  F00E         	goto	u4911
  8229   001D5C  EFB2  F00E         	goto	u4910
  8230   001D60                     u4911:
  8231   001D60  EFD6  F00E         	goto	l1097
  8232   001D64                     u4910:
  8233   001D64  0EFF               	movlw	255
  8234   001D66  1447               	andwf	___fldiv@grs^0,w,c
  8235   001D68  6E3C               	movwf	??___fldiv^0,c
  8236   001D6A  0EFF               	movlw	255
  8237   001D6C  1448               	andwf	(___fldiv@grs+1)^0,w,c
  8238   001D6E  6E3D               	movwf	(??___fldiv+1)^0,c
  8239   001D70  0EFF               	movlw	255
  8240   001D72  1449               	andwf	(___fldiv@grs+2)^0,w,c
  8241   001D74  6E3E               	movwf	(??___fldiv+2)^0,c
  8242   001D76  0E7F               	movlw	127
  8243   001D78  144A               	andwf	(___fldiv@grs+3)^0,w,c
  8244   001D7A  6E3F               	movwf	(??___fldiv+3)^0,c
  8245   001D7C  503C               	movf	??___fldiv^0,w,c
  8246   001D7E  103D               	iorwf	(??___fldiv+1)^0,w,c
  8247   001D80  103E               	iorwf	(??___fldiv+2)^0,w,c
  8248   001D82  103F               	iorwf	(??___fldiv+3)^0,w,c
  8249   001D84  B4D8               	btfsc	status,2,c
  8250   001D86  EFC7  F00E         	goto	u4921
  8251   001D8A  EFC9  F00E         	goto	u4920
  8252   001D8E                     u4921:
  8253   001D8E  EFCD  F00E         	goto	l1098
  8254   001D92                     u4920:
  8255   001D92                     l4897:
  8256   001D92  0E01               	movlw	1
  8257   001D94  6E4C               	movwf	___fldiv@aexp^0,c
  8258   001D96  EFD6  F00E         	goto	l1097
  8259   001D9A                     l1098:
  8260   001D9A  A034               	btfss	___fldiv@b^0,0,c
  8261   001D9C  EFD2  F00E         	goto	u4931
  8262   001DA0  EFD4  F00E         	goto	u4930
  8263   001DA4                     u4931:
  8264   001DA4  EFD6  F00E         	goto	l1097
  8265   001DA8                     u4930:
  8266   001DA8  EFC9  F00E         	goto	l4897
  8267   001DAC                     l1097:
  8268   001DAC  504C               	movf	___fldiv@aexp^0,w,c
  8269   001DAE  B4D8               	btfsc	status,2,c
  8270   001DB0  EFDC  F00E         	goto	u4941
  8271   001DB4  EFDE  F00E         	goto	u4940
  8272   001DB8                     u4941:
  8273   001DB8  EF02  F00F         	goto	l4909
  8274   001DBC                     u4940:
  8275   001DBC  0E01               	movlw	1
  8276   001DBE  2634               	addwf	___fldiv@b^0,f,c
  8277   001DC0  0E00               	movlw	0
  8278   001DC2  2235               	addwfc	(___fldiv@b+1)^0,f,c
  8279   001DC4  2236               	addwfc	(___fldiv@b+2)^0,f,c
  8280   001DC6  2237               	addwfc	(___fldiv@b+3)^0,f,c
  8281   001DC8  A037               	btfss	(___fldiv@b+3)^0,0,c
  8282   001DCA  EFE9  F00E         	goto	u4951
  8283   001DCE  EFEB  F00E         	goto	u4950
  8284   001DD2                     u4951:
  8285   001DD2  EF02  F00F         	goto	l4909
  8286   001DD6                     u4950:
  8287   001DD6  C034  F03C         	movff	___fldiv@b,??___fldiv
  8288   001DDA  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  8289   001DDE  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  8290   001DE2  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  8291   001DE6  343F               	rlcf	(??___fldiv+3)^0,w,c
  8292   001DE8  323F               	rrcf	(??___fldiv+3)^0,f,c
  8293   001DEA  323E               	rrcf	(??___fldiv+2)^0,f,c
  8294   001DEC  323D               	rrcf	(??___fldiv+1)^0,f,c
  8295   001DEE  323C               	rrcf	??___fldiv^0,f,c
  8296   001DF0  C03C  F034         	movff	??___fldiv,___fldiv@b
  8297   001DF4  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  8298   001DF8  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  8299   001DFC  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  8300   001E00  4A45               	infsnz	___fldiv@new_exp^0,f,c
  8301   001E02  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  8302   001E04                     l4909:
  8303   001E04  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8304   001E06  EF0D  F00F         	goto	u4961
  8305   001E0A  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8306   001E0C  E108               	bnz	u4960
  8307   001E0E  2845               	incf	___fldiv@new_exp^0,w,c
  8308   001E10  A0D8               	btfss	status,0,c
  8309   001E12  EF0D  F00F         	goto	u4961
  8310   001E16  EF0F  F00F         	goto	u4960
  8311   001E1A                     u4961:
  8312   001E1A  EF1A  F00F         	goto	l4913
  8313   001E1E                     u4960:
  8314   001E1E  0E00               	movlw	0
  8315   001E20  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8316   001E22  6845               	setf	___fldiv@new_exp^0,c
  8317   001E24  0E00               	movlw	0
  8318   001E26  6E34               	movwf	___fldiv@b^0,c
  8319   001E28  0E00               	movlw	0
  8320   001E2A  6E35               	movwf	(___fldiv@b+1)^0,c
  8321   001E2C  0E00               	movlw	0
  8322   001E2E  6E36               	movwf	(___fldiv@b+2)^0,c
  8323   001E30  0E00               	movlw	0
  8324   001E32  6E37               	movwf	(___fldiv@b+3)^0,c
  8325   001E34                     l4913:
  8326   001E34  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8327   001E36  EF27  F00F         	goto	u4970
  8328   001E3A  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8329   001E3C  E106               	bnz	u4971
  8330   001E3E  0445               	decf	___fldiv@new_exp^0,w,c
  8331   001E40  B0D8               	btfsc	status,0,c
  8332   001E42  EF25  F00F         	goto	u4971
  8333   001E46  EF27  F00F         	goto	u4970
  8334   001E4A                     u4971:
  8335   001E4A  EF35  F00F         	goto	l4917
  8336   001E4E                     u4970:
  8337   001E4E  0E00               	movlw	0
  8338   001E50  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8339   001E52  0E00               	movlw	0
  8340   001E54  6E45               	movwf	___fldiv@new_exp^0,c
  8341   001E56  0E00               	movlw	0
  8342   001E58  6E34               	movwf	___fldiv@b^0,c
  8343   001E5A  0E00               	movlw	0
  8344   001E5C  6E35               	movwf	(___fldiv@b+1)^0,c
  8345   001E5E  0E00               	movlw	0
  8346   001E60  6E36               	movwf	(___fldiv@b+2)^0,c
  8347   001E62  0E00               	movlw	0
  8348   001E64  6E37               	movwf	(___fldiv@b+3)^0,c
  8349   001E66  0E00               	movlw	0
  8350   001E68  6E44               	movwf	___fldiv@sign^0,c
  8351   001E6A                     l4917:
  8352   001E6A  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  8353   001E6E  A04B               	btfss	___fldiv@bexp^0,0,c
  8354   001E70  EF3C  F00F         	goto	u4981
  8355   001E74  EF3E  F00F         	goto	u4980
  8356   001E78                     u4981:
  8357   001E78  EF41  F00F         	goto	l4923
  8358   001E7C                     u4980:
  8359   001E7C  8E36               	bsf	(___fldiv@b+2)^0,7,c
  8360   001E7E  EF42  F00F         	goto	l4925
  8361   001E82                     l4923:
  8362   001E82  9E36               	bcf	(___fldiv@b+2)^0,7,c
  8363   001E84                     l4925:
  8364   001E84  90D8               	bcf	status,0,c
  8365   001E86  304B               	rrcf	___fldiv@bexp^0,w,c
  8366   001E88  6E37               	movwf	(___fldiv@b+3)^0,c
  8367   001E8A  EFF8  F00D         	goto	l4839
  8368   001E8E                     l1084:
  8369   001E8E  0012               	return		;funcret
  8370   001E90                     __end_of___fldiv:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function _ADC_GetConversion *****************
  8374 ;; Defined at:
  8375 ;;		line 110 in file "mcc_generated_files/adc.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  channel         1    wreg     enum E4620
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  channel         1    8[COMRAM] enum E4620
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  2    4[COMRAM] unsigned short 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2, status,0
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8389 ;;      Params:         2       0       0       0       0       0       0       0       0
  8390 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8391 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8392 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8393 ;;Total ram usage:        5 bytes
  8394 ;; Hardware stack levels used: 1
  8395 ;; Hardware stack levels required when called: 4
  8396 ;; This function calls:
  8397 ;;		Nothing
  8398 ;; This function is called by:
  8399 ;;		_get_corriente_AC
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text39
  8404   00341A                     __ptext39:
  8405                           	callstack 0
  8406   00341A                     _ADC_GetConversion:
  8407                           	callstack 25
  8408                           
  8409                           ;incstack = 0
  8410                           ;ADC_GetConversion@channel stored from wreg
  8411   00341A  6E09               	movwf	ADC_GetConversion@channel^0,c
  8412   00341C                     
  8413                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  8414   00341C  C009  F007         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8415   003420  4607               	rlncf	??_ADC_GetConversion^0,f,c
  8416   003422  4607               	rlncf	??_ADC_GetConversion^0,f,c
  8417   003424  50C2               	movf	194,w,c	;volatile
  8418   003426  1807               	xorwf	??_ADC_GetConversion^0,w,c
  8419   003428  0B83               	andlw	-125
  8420   00342A  1807               	xorwf	??_ADC_GetConversion^0,w,c
  8421   00342C  6EC2               	movwf	194,c	;volatile
  8422   00342E                     
  8423                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  8424   00342E  80C2               	bsf	194,0,c	;volatile
  8425   003430                     
  8426                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  8427   003430  82C2               	bsf	194,1,c	;volatile
  8428   003432                     l206:
  8429                           
  8430                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  8431   003432  B2C2               	btfsc	194,1,c	;volatile
  8432   003434  EF1E  F01A         	goto	u5981
  8433   003438  EF20  F01A         	goto	u5980
  8434   00343C                     u5981:
  8435   00343C  EF19  F01A         	goto	l206
  8436   003440                     u5980:
  8437   003440                     
  8438                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8439   003440  50C4               	movf	196,w,c	;volatile
  8440   003442  6E08               	movwf	(??_ADC_GetConversion+1)^0,c
  8441   003444  6A07               	clrf	??_ADC_GetConversion^0,c
  8442   003446  50C3               	movf	195,w,c	;volatile
  8443   003448  2407               	addwf	??_ADC_GetConversion^0,w,c
  8444   00344A  6E05               	movwf	?_ADC_GetConversion^0,c
  8445   00344C  0E00               	movlw	0
  8446   00344E  2008               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  8447   003450  6E06               	movwf	(?_ADC_GetConversion+1)^0,c
  8448   003452  0012               	return		;funcret
  8449   003454                     __end_of_ADC_GetConversion:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function _SYSTEM_Initialize *****************
  8453 ;; Defined at:
  8454 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1    wreg      void 
  8461 ;; Registers used:
  8462 ;;		wreg, status,2, status,0, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8468 ;;      Params:         0       0       0       0       0       0       0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8471 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8472 ;;Total ram usage:        0 bytes
  8473 ;; Hardware stack levels used: 1
  8474 ;; Hardware stack levels required when called: 6
  8475 ;; This function calls:
  8476 ;;		_ADC_Initialize
  8477 ;;		_CCP2_Initialize
  8478 ;;		_EUSART1_Initialize
  8479 ;;		_INTERRUPT_Initialize
  8480 ;;		_OSCILLATOR_Initialize
  8481 ;;		_PIN_MANAGER_Initialize
  8482 ;;		_TMR1_Initialize
  8483 ;; This function is called by:
  8484 ;;		_main
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text40
  8489   003602                     __ptext40:
  8490                           	callstack 0
  8491   003602                     _SYSTEM_Initialize:
  8492                           	callstack 24
  8493   003602                     
  8494                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  8495   003602  EC9A  F01B         	call	_INTERRUPT_Initialize	;wreg free
  8496   003606                     
  8497                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8498   003606  EC7B  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  8499   00360A                     
  8500                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8501   00360A  ECE2  F01A         	call	_OSCILLATOR_Initialize	;wreg free
  8502   00360E                     
  8503                           ;mcc_generated_files/mcc.c: 56:     CCP2_Initialize();
  8504   00360E  EC70  F01B         	call	_CCP2_Initialize	;wreg free
  8505   003612                     
  8506                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8507   003612  EC92  F01A         	call	_TMR1_Initialize	;wreg free
  8508   003616                     
  8509                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8510   003616  EC50  F01B         	call	_ADC_Initialize	;wreg free
  8511   00361A                     
  8512                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  8513   00361A  ECD0  F019         	call	_EUSART1_Initialize	;wreg free
  8514   00361E  0012               	return		;funcret
  8515   003620                     __end_of_SYSTEM_Initialize:
  8516                           	callstack 0
  8517                           
  8518 ;; *************** function _TMR1_Initialize *****************
  8519 ;; Defined at:
  8520 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;		None
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8538 ;;Total ram usage:        0 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 5
  8541 ;; This function calls:
  8542 ;;		_TMR1_SetInterruptHandler
  8543 ;; This function is called by:
  8544 ;;		_SYSTEM_Initialize
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text41
  8549   003524                     __ptext41:
  8550                           	callstack 0
  8551   003524                     _TMR1_Initialize:
  8552                           	callstack 24
  8553   003524                     
  8554                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
  8555   003524  0E00               	movlw	0
  8556   003526  6ECC               	movwf	204,c	;volatile
  8557                           
  8558                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xD1;
  8559   003528  0ED1               	movlw	209
  8560   00352A  6ECF               	movwf	207,c	;volatile
  8561                           
  8562                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x20;
  8563   00352C  0E20               	movlw	32
  8564   00352E  6ECE               	movwf	206,c	;volatile
  8565   003530                     
  8566                           ;mcc_generated_files/tmr1.c: 79:     timer1ReloadVal=TMR1;
  8567   003530  CFCE F0F3          	movff	4046,_timer1ReloadVal	;volatile
  8568   003534  CFCF F0F4          	movff	4047,_timer1ReloadVal+1	;volatile
  8569   003538                     
  8570                           ;mcc_generated_files/tmr1.c: 82:     PIR1bits.TMR1IF = 0;
  8571   003538  909E               	bcf	158,0,c	;volatile
  8572   00353A                     
  8573                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
  8574   00353A  809D               	bsf	157,0,c	;volatile
  8575   00353C                     
  8576                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8577   00353C  0E38               	movlw	low _TMR1_DefaultInterruptHandler
  8578   00353E  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  8579   003540  0E37               	movlw	high _TMR1_DefaultInterruptHandler
  8580   003542  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  8581   003544  EC82  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  8582   003548                     
  8583                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x01;
  8584   003548  0E01               	movlw	1
  8585   00354A  6ECD               	movwf	205,c	;volatile
  8586   00354C  0012               	return		;funcret
  8587   00354E                     __end_of_TMR1_Initialize:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _TMR1_SetInterruptHandler *****************
  8591 ;; Defined at:
  8592 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  8595 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2, status,0
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8607 ;;      Params:         2       0       0       0       0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8610 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8611 ;;Total ram usage:        2 bytes
  8612 ;; Hardware stack levels used: 1
  8613 ;; Hardware stack levels required when called: 4
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_TMR1_Initialize
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text42
  8622   003704                     __ptext42:
  8623                           	callstack 0
  8624   003704                     _TMR1_SetInterruptHandler:
  8625                           	callstack 24
  8626   003704                     
  8627                           ;mcc_generated_files/tmr1.c: 190:     TMR1_InterruptHandler = InterruptHandler;
  8628   003704  C005  F0F1         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  8629   003708  C006  F0F2         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  8630   00370C  0012               	return		;funcret
  8631   00370E                     __end_of_TMR1_SetInterruptHandler:
  8632                           	callstack 0
  8633                           
  8634 ;; *************** function _PIN_MANAGER_Initialize *****************
  8635 ;; Defined at:
  8636 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;		None
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      void 
  8643 ;; Registers used:
  8644 ;;		wreg, status,2
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8650 ;;      Params:         0       0       0       0       0       0       0       0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8654 ;;Total ram usage:        0 bytes
  8655 ;; Hardware stack levels used: 1
  8656 ;; Hardware stack levels required when called: 4
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		_SYSTEM_Initialize
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text43
  8665   0034F6                     __ptext43:
  8666                           	callstack 0
  8667   0034F6                     _PIN_MANAGER_Initialize:
  8668                           	callstack 25
  8669   0034F6                     
  8670                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8671   0034F6  0E00               	movlw	0
  8672   0034F8  6E89               	movwf	137,c	;volatile
  8673                           
  8674                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8675   0034FA  0E00               	movlw	0
  8676   0034FC  6E8A               	movwf	138,c	;volatile
  8677                           
  8678                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8679   0034FE  0E00               	movlw	0
  8680   003500  6E8B               	movwf	139,c	;volatile
  8681                           
  8682                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
  8683   003502  0EC7               	movlw	199
  8684   003504  6E92               	movwf	146,c	;volatile
  8685                           
  8686                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
  8687   003506  0EFE               	movlw	254
  8688   003508  6E93               	movwf	147,c	;volatile
  8689                           
  8690                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
  8691   00350A  0E87               	movlw	135
  8692   00350C  6E94               	movwf	148,c	;volatile
  8693                           
  8694                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  8695   00350E  0E04               	movlw	4
  8696   003510  010F               	movlb	15	; () banked
  8697   003512  6F5D               	movwf	93,b	;volatile
  8698                           
  8699                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  8700   003514  0E3E               	movlw	62
  8701   003516  6F5C               	movwf	92,b	;volatile
  8702                           
  8703                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  8704   003518  0E07               	movlw	7
  8705   00351A  6F5B               	movwf	91,b	;volatile
  8706                           
  8707                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8708   00351C  0E00               	movlw	0
  8709   00351E  6E85               	movwf	133,c	;volatile
  8710   003520                     
  8711                           ; BSR set to: 15
  8712                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8713   003520  8EF1               	bsf	241,7,c	;volatile
  8714   003522                     
  8715                           ; BSR set to: 15
  8716   003522  0012               	return		;funcret
  8717   003524                     __end_of_PIN_MANAGER_Initialize:
  8718                           	callstack 0
  8719                           
  8720 ;; *************** function _OSCILLATOR_Initialize *****************
  8721 ;; Defined at:
  8722 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;		None
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;		None
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      void 
  8729 ;; Registers used:
  8730 ;;		wreg, status,2
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8736 ;;      Params:         0       0       0       0       0       0       0       0       0
  8737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8739 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8740 ;;Total ram usage:        0 bytes
  8741 ;; Hardware stack levels used: 1
  8742 ;; Hardware stack levels required when called: 4
  8743 ;; This function calls:
  8744 ;;		Nothing
  8745 ;; This function is called by:
  8746 ;;		_SYSTEM_Initialize
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text44
  8751   0035C4                     __ptext44:
  8752                           	callstack 0
  8753   0035C4                     _OSCILLATOR_Initialize:
  8754                           	callstack 25
  8755   0035C4                     
  8756                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  8757   0035C4  0E70               	movlw	112
  8758   0035C6  6ED3               	movwf	211,c	;volatile
  8759                           
  8760                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
  8761   0035C8  0E00               	movlw	0
  8762   0035CA  6ED2               	movwf	210,c	;volatile
  8763                           
  8764                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x80;
  8765   0035CC  0E80               	movlw	128
  8766   0035CE  6E9B               	movwf	155,c	;volatile
  8767                           
  8768                           ;mcc_generated_files/mcc.c: 71:     ACTCON = 0x00;
  8769   0035D0  0E00               	movlw	0
  8770   0035D2  6EB5               	movwf	181,c	;volatile
  8771   0035D4                     l130:
  8772                           
  8773                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  8774   0035D4  AED2               	btfss	4050,7,c	;volatile
  8775   0035D6  EFEF  F01A         	goto	u5971
  8776   0035DA  EFF1  F01A         	goto	u5970
  8777   0035DE                     u5971:
  8778   0035DE  EFEA  F01A         	goto	l130
  8779   0035E2                     u5970:
  8780   0035E2  0012               	return		;funcret
  8781   0035E4                     __end_of_OSCILLATOR_Initialize:
  8782                           	callstack 0
  8783                           
  8784 ;; *************** function _INTERRUPT_Initialize *****************
  8785 ;; Defined at:
  8786 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;		None
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;		None
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		None
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8800 ;;      Params:         0       0       0       0       0       0       0       0       0
  8801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8803 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8804 ;;Total ram usage:        0 bytes
  8805 ;; Hardware stack levels used: 1
  8806 ;; Hardware stack levels required when called: 4
  8807 ;; This function calls:
  8808 ;;		Nothing
  8809 ;; This function is called by:
  8810 ;;		_SYSTEM_Initialize
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text45
  8815   003734                     __ptext45:
  8816                           	callstack 0
  8817   003734                     _INTERRUPT_Initialize:
  8818                           	callstack 25
  8819   003734                     
  8820                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8821   003734  9ED0               	bcf	208,7,c	;volatile
  8822   003736  0012               	return		;funcret
  8823   003738                     __end_of_INTERRUPT_Initialize:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function _EUSART1_Initialize *****************
  8827 ;; Defined at:
  8828 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;		None
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8842 ;;      Params:         0       0       0       0       0       0       0       0       0
  8843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8846 ;;Total ram usage:        0 bytes
  8847 ;; Hardware stack levels used: 1
  8848 ;; Hardware stack levels required when called: 5
  8849 ;; This function calls:
  8850 ;;		_EUSART1_SetErrorHandler
  8851 ;;		_EUSART1_SetFramingErrorHandler
  8852 ;;		_EUSART1_SetOverrunErrorHandler
  8853 ;; This function is called by:
  8854 ;;		_SYSTEM_Initialize
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text46
  8859   0033A0                     __ptext46:
  8860                           	callstack 0
  8861   0033A0                     _EUSART1_Initialize:
  8862                           	callstack 24
  8863   0033A0                     
  8864                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8865   0033A0  0E08               	movlw	8
  8866   0033A2  6EB8               	movwf	184,c	;volatile
  8867                           
  8868                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8869   0033A4  0E90               	movlw	144
  8870   0033A6  6EAB               	movwf	171,c	;volatile
  8871                           
  8872                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8873   0033A8  0E24               	movlw	36
  8874   0033AA  6EAC               	movwf	172,c	;volatile
  8875                           
  8876                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xE1;
  8877   0033AC  0EE1               	movlw	225
  8878   0033AE  6EAF               	movwf	175,c	;volatile
  8879                           
  8880                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x04;
  8881   0033B0  0E04               	movlw	4
  8882   0033B2  6EB0               	movwf	176,c	;volatile
  8883   0033B4                     
  8884                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8885   0033B4  0E00               	movlw	0
  8886   0033B6  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8887   0033B8  0E00               	movlw	0
  8888   0033BA  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8889   0033BC  EC8C  F01B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8890   0033C0                     
  8891                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8892   0033C0  0E00               	movlw	0
  8893   0033C2  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8894   0033C4  0E00               	movlw	0
  8895   0033C6  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8896   0033C8  EC87  F01B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8897   0033CC                     
  8898                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8899   0033CC  0E00               	movlw	0
  8900   0033CE  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8901   0033D0  0E00               	movlw	0
  8902   0033D2  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8903   0033D4  EC91  F01B         	call	_EUSART1_SetErrorHandler	;wreg free
  8904   0033D8                     
  8905                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8906   0033D8  0E00               	movlw	0
  8907   0033DA  0100               	movlb	0	; () banked
  8908   0033DC  6FFF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8909   0033DE                     
  8910                           ; BSR set to: 0
  8911   0033DE  0012               	return		;funcret
  8912   0033E0                     __end_of_EUSART1_Initialize:
  8913                           	callstack 0
  8914                           
  8915 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8916 ;; Defined at:
  8917 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8920 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;		None
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      void 
  8925 ;; Registers used:
  8926 ;;		wreg, status,2, status,0
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8932 ;;      Params:         2       0       0       0       0       0       0       0       0
  8933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8935 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8936 ;;Total ram usage:        2 bytes
  8937 ;; Hardware stack levels used: 1
  8938 ;; Hardware stack levels required when called: 4
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		_EUSART1_Initialize
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text47
  8947   00370E                     __ptext47:
  8948                           	callstack 0
  8949   00370E                     _EUSART1_SetOverrunErrorHandler:
  8950                           	callstack 24
  8951   00370E                     
  8952                           ;mcc_generated_files/eusart1.c: 179:     EUSART1_OverrunErrorHandler = interruptHandler;
  8953   00370E  C005  F0F9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8954   003712  C006  F0FA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8955   003716  0012               	return		;funcret
  8956   003718                     __end_of_EUSART1_SetOverrunErrorHandler:
  8957                           	callstack 0
  8958                           
  8959 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8960 ;; Defined at:
  8961 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8964 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8976 ;;      Params:         2       0       0       0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8979 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8980 ;;Total ram usage:        2 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 4
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_EUSART1_Initialize
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text48
  8991   003718                     __ptext48:
  8992                           	callstack 0
  8993   003718                     _EUSART1_SetFramingErrorHandler:
  8994                           	callstack 24
  8995   003718                     
  8996                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_FramingErrorHandler = interruptHandler;
  8997   003718  C005  F0FB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8998   00371C  C006  F0FC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8999   003720  0012               	return		;funcret
  9000   003722                     __end_of_EUSART1_SetFramingErrorHandler:
  9001                           	callstack 0
  9002                           
  9003 ;; *************** function _EUSART1_SetErrorHandler *****************
  9004 ;; Defined at:
  9005 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9008 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2, status,0
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9020 ;;      Params:         2       0       0       0       0       0       0       0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9023 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9024 ;;Total ram usage:        2 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 4
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_EUSART1_Initialize
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text49
  9035   003722                     __ptext49:
  9036                           	callstack 0
  9037   003722                     _EUSART1_SetErrorHandler:
  9038                           	callstack 24
  9039   003722                     
  9040                           ;mcc_generated_files/eusart1.c: 183:     EUSART1_ErrorHandler = interruptHandler;
  9041   003722  C005  F0F7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  9042   003726  C006  F0F8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  9043   00372A  0012               	return		;funcret
  9044   00372C                     __end_of_EUSART1_SetErrorHandler:
  9045                           	callstack 0
  9046                           
  9047 ;; *************** function _CCP2_Initialize *****************
  9048 ;; Defined at:
  9049 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, status,2
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used: 1
  9069 ;; Hardware stack levels required when called: 4
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_SYSTEM_Initialize
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text50
  9078   0036E0                     __ptext50:
  9079                           	callstack 0
  9080   0036E0                     _CCP2_Initialize:
  9081                           	callstack 25
  9082   0036E0                     
  9083                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  9084   0036E0  0E00               	movlw	0
  9085   0036E2  6E97               	movwf	151,c	;volatile
  9086                           
  9087                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  9088   0036E4  0E00               	movlw	0
  9089   0036E6  6E90               	movwf	144,c	;volatile
  9090                           
  9091                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  9092   0036E8  0E00               	movlw	0
  9093   0036EA  6E91               	movwf	145,c	;volatile
  9094   0036EC  0012               	return		;funcret
  9095   0036EE                     __end_of_CCP2_Initialize:
  9096                           	callstack 0
  9097                           
  9098 ;; *************** function _ADC_Initialize *****************
  9099 ;; Defined at:
  9100 ;;		line 62 in file "mcc_generated_files/adc.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;		None
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;		None
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  1    wreg      void 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9114 ;;      Params:         0       0       0       0       0       0       0       0       0
  9115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9117 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9118 ;;Total ram usage:        0 bytes
  9119 ;; Hardware stack levels used: 1
  9120 ;; Hardware stack levels required when called: 4
  9121 ;; This function calls:
  9122 ;;		Nothing
  9123 ;; This function is called by:
  9124 ;;		_SYSTEM_Initialize
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128                           	psect	text51
  9129   0036A0                     __ptext51:
  9130                           	callstack 0
  9131   0036A0                     _ADC_Initialize:
  9132                           	callstack 25
  9133   0036A0                     
  9134                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  9135   0036A0  0E00               	movlw	0
  9136   0036A2  6EC1               	movwf	193,c	;volatile
  9137                           
  9138                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
  9139   0036A4  0E87               	movlw	135
  9140   0036A6  6EC0               	movwf	192,c	;volatile
  9141                           
  9142                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  9143   0036A8  0E00               	movlw	0
  9144   0036AA  6EC3               	movwf	195,c	;volatile
  9145                           
  9146                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  9147   0036AC  0E00               	movlw	0
  9148   0036AE  6EC4               	movwf	196,c	;volatile
  9149                           
  9150                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  9151   0036B0  0E01               	movlw	1
  9152   0036B2  6EC2               	movwf	194,c	;volatile
  9153   0036B4  0012               	return		;funcret
  9154   0036B6                     __end_of_ADC_Initialize:
  9155                           	callstack 0
  9156                           
  9157 ;; *************** function _EUSART1_is_tx_ready *****************
  9158 ;; Defined at:
  9159 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      _Bool 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0
  9174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9177 ;;Total ram usage:        1 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; Hardware stack levels required when called: 4
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_main
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           	psect	text52
  9188   00354E                     __ptext52:
  9189                           	callstack 0
  9190   00354E                     _EUSART1_is_tx_ready:
  9191                           	callstack 26
  9192   00354E                     
  9193                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  9194   00354E  0E00               	movlw	0
  9195   003550  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
  9196   003552  A89E               	btfss	158,4,c	;volatile
  9197   003554  EFAE  F01A         	goto	u6111
  9198   003558  EFB0  F01A         	goto	u6110
  9199   00355C                     u6111:
  9200   00355C  EFB9  F01A         	goto	l47
  9201   003560                     u6110:
  9202   003560  AAAC               	btfss	172,5,c	;volatile
  9203   003562  EFB5  F01A         	goto	u6121
  9204   003566  EFB7  F01A         	goto	u6120
  9205   00356A                     u6121:
  9206   00356A  EFB9  F01A         	goto	l47
  9207   00356E                     u6120:
  9208   00356E  0E01               	movlw	1
  9209   003570  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
  9210   003572                     l47:
  9211   003572  5005               	movf	_EUSART1_is_tx_ready$282^0,w,c
  9212   003574  0012               	return		;funcret
  9213   003576                     __end_of_EUSART1_is_tx_ready:
  9214                           	callstack 0
  9215                           
  9216 ;; *************** function _EUSART1_Write_string *****************
  9217 ;; Defined at:
  9218 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  data            2    5[COMRAM] PTR const unsigned char 
  9221 ;;		 -> valor_string(14), 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9233 ;;      Params:         2       0       0       0       0       0       0       0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9236 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9237 ;;Total ram usage:        2 bytes
  9238 ;; Hardware stack levels used: 1
  9239 ;; Hardware stack levels required when called: 5
  9240 ;; This function calls:
  9241 ;;		_EUSART1_Write
  9242 ;; This function is called by:
  9243 ;;		_main
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text53
  9248   0034C6                     __ptext53:
  9249                           	callstack 0
  9250   0034C6                     _EUSART1_Write_string:
  9251                           	callstack 25
  9252   0034C6                     
  9253                           ;mcc_generated_files/eusart1.c: 141: void EUSART1_Write_string(const char* data);mcc_gen
      +                          erated_files/eusart1.c: 142: {;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
  9254   0034C6  EF6E  F01A         	goto	l5781
  9255   0034CA                     l5777:
  9256                           
  9257                           ;mcc_generated_files/eusart1.c: 144:     {;mcc_generated_files/eusart1.c: 145:         E
      +                          USART1_Write(*data++);
  9258   0034CA  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
  9259   0034CE  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
  9260   0034D2  50DF               	movf	indf2,w,c
  9261   0034D4  EC5B  F01B         	call	_EUSART1_Write
  9262   0034D8  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  9263   0034DA  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  9264   0034DC                     l5781:
  9265                           
  9266                           ;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
  9267   0034DC  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
  9268   0034E0  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
  9269   0034E4  50DF               	movf	indf2,w,c
  9270   0034E6  A4D8               	btfss	status,2,c
  9271   0034E8  EF78  F01A         	goto	u6131
  9272   0034EC  EF7A  F01A         	goto	u6130
  9273   0034F0                     u6131:
  9274   0034F0  EF65  F01A         	goto	l5777
  9275   0034F4                     u6130:
  9276   0034F4  0012               	return		;funcret
  9277   0034F6                     __end_of_EUSART1_Write_string:
  9278                           	callstack 0
  9279                           
  9280 ;; *************** function _EUSART1_Write *****************
  9281 ;; Defined at:
  9282 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  txData          1    wreg     unsigned char 
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;  txData          1    4[COMRAM] unsigned char 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0
  9297 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9299 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9300 ;;Total ram usage:        1 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 4
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_EUSART1_Write_string
  9307 ;;		_putch
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text54
  9312   0036B6                     __ptext54:
  9313                           	callstack 0
  9314   0036B6                     _EUSART1_Write:
  9315                           	callstack 21
  9316                           
  9317                           ;incstack = 0
  9318                           ;EUSART1_Write@txData stored from wreg
  9319   0036B6  6E05               	movwf	EUSART1_Write@txData^0,c
  9320   0036B8                     l67:
  9321                           
  9322                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9323   0036B8  A89E               	btfss	158,4,c	;volatile
  9324   0036BA  EF61  F01B         	goto	u4311
  9325   0036BE  EF63  F01B         	goto	u4310
  9326   0036C2                     u4311:
  9327   0036C2  EF5C  F01B         	goto	l67
  9328   0036C6                     u4310:
  9329   0036C6                     
  9330                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9331   0036C6  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9332   0036CA  0012               	return		;funcret
  9333   0036CC                     __end_of_EUSART1_Write:
  9334                           	callstack 0
  9335                           
  9336 ;; *************** function _INTERRUPT_InterruptManager *****************
  9337 ;; Defined at:
  9338 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9354 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9355 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9356 ;;Total ram usage:        2 bytes
  9357 ;; Hardware stack levels used: 1
  9358 ;; Hardware stack levels required when called: 3
  9359 ;; This function calls:
  9360 ;;		_TMR1_ISR
  9361 ;; This function is called by:
  9362 ;;		Interrupt level 2
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	intcode
  9367   000008                     __pintcode:
  9368                           	callstack 0
  9369   000008                     _INTERRUPT_InterruptManager:
  9370                           	callstack 18
  9371                           
  9372                           ;incstack = 0
  9373   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9374   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  9375   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9376   000012                     
  9377                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9378   000012  ACF2               	btfss	242,6,c	;volatile
  9379   000014  EF0E  F000         	goto	i2u422_41
  9380   000018  EF10  F000         	goto	i2u422_40
  9381   00001C                     i2u422_41:
  9382   00001C  EF20  F000         	goto	i2l232
  9383   000020                     i2u422_40:
  9384   000020                     
  9385                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9386   000020  A09D               	btfss	157,0,c	;volatile
  9387   000022  EF15  F000         	goto	i2u423_41
  9388   000026  EF17  F000         	goto	i2u423_40
  9389   00002A                     i2u423_41:
  9390   00002A  EF20  F000         	goto	i2l232
  9391   00002E                     i2u423_40:
  9392   00002E  A09E               	btfss	158,0,c	;volatile
  9393   000030  EF1C  F000         	goto	i2u424_41
  9394   000034  EF1E  F000         	goto	i2u424_40
  9395   000038                     i2u424_41:
  9396   000038  EF20  F000         	goto	i2l232
  9397   00003C                     i2u424_40:
  9398   00003C                     
  9399                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  9400   00003C  EC2A  F01A         	call	_TMR1_ISR	;wreg free
  9401   000040                     i2l232:
  9402   000040  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9403   000044  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9404   000048  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9405   00004A  0011               	retfie		f
  9406   00004C                     __end_of_INTERRUPT_InterruptManager:
  9407                           	callstack 0
  9408                           
  9409 ;; *************** function _TMR1_ISR *****************
  9410 ;; Defined at:
  9411 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;		None
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;		None
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      void 
  9418 ;; Registers used:
  9419 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9425 ;;      Params:         0       0       0       0       0       0       0       0       0
  9426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9428 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9429 ;;Total ram usage:        0 bytes
  9430 ;; Hardware stack levels used: 1
  9431 ;; Hardware stack levels required when called: 2
  9432 ;; This function calls:
  9433 ;;		_TMR1_CallBack
  9434 ;;		_TMR1_WriteTimer
  9435 ;; This function is called by:
  9436 ;;		_INTERRUPT_InterruptManager
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text56
  9441   003454                     __ptext56:
  9442                           	callstack 0
  9443   003454                     _TMR1_ISR:
  9444                           	callstack 18
  9445   003454                     
  9446                           ;mcc_generated_files/tmr1.c: 162:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 165:     PIR1bits.TMR1IF = 0;
  9447   003454  909E               	bcf	158,0,c	;volatile
  9448   003456                     
  9449                           ;mcc_generated_files/tmr1.c: 166:     TMR1_WriteTimer(timer1ReloadVal);
  9450   003456  C0F3  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  9451   00345A  C0F4  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  9452   00345E  ECBB  F01A         	call	_TMR1_WriteTimer	;wreg free
  9453   003462                     
  9454                           ;mcc_generated_files/tmr1.c: 169:     if (++CountCallBack >= 1000)
  9455   003462  0100               	movlb	0	; () banked
  9456   003464  4BEF               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
  9457   003466  2BF0               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9458   003468  0EE8               	movlw	232
  9459   00346A  5DEF               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
  9460   00346C  0E03               	movlw	3
  9461   00346E  59F0               	subwfb	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9462   003470  A0D8               	btfss	status,0,c
  9463   003472  EF3D  F01A         	goto	i2u404_41
  9464   003476  EF3F  F01A         	goto	i2u404_40
  9465   00347A                     i2u404_41:
  9466   00347A  EF46  F01A         	goto	i2l294
  9467   00347E                     i2u404_40:
  9468   00347E                     
  9469                           ; BSR set to: 0
  9470                           ;mcc_generated_files/tmr1.c: 170:     {;mcc_generated_files/tmr1.c: 172:         TMR1_Ca
      +                          llBack();
  9471   00347E  ECE5  F018         	call	_TMR1_CallBack	;wreg free
  9472   003482                     
  9473                           ;mcc_generated_files/tmr1.c: 175:         CountCallBack = 0;
  9474   003482  0E00               	movlw	0
  9475   003484  0100               	movlb	0	; () banked
  9476   003486  6FF0               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
  9477   003488  0E00               	movlw	0
  9478   00348A  6FEF               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
  9479   00348C                     i2l294:
  9480                           
  9481                           ; BSR set to: 0
  9482   00348C  0012               	return		;funcret
  9483   00348E                     __end_of_TMR1_ISR:
  9484                           	callstack 0
  9485                           
  9486 ;; *************** function _TMR1_WriteTimer *****************
  9487 ;; Defined at:
  9488 ;;		line 123 in file "mcc_generated_files/tmr1.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  timerVal        2    0[COMRAM] unsigned short 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;		None
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      void 
  9495 ;; Registers used:
  9496 ;;		wreg, status,2
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9502 ;;      Params:         2       0       0       0       0       0       0       0       0
  9503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9505 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9506 ;;Total ram usage:        2 bytes
  9507 ;; Hardware stack levels used: 1
  9508 ;; This function calls:
  9509 ;;		Nothing
  9510 ;; This function is called by:
  9511 ;;		_TMR1_ISR
  9512 ;;		_TMR1_Reload
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text57
  9517   003576                     __ptext57:
  9518                           	callstack 0
  9519   003576                     _TMR1_WriteTimer:
  9520                           	callstack 19
  9521   003576                     
  9522                           ;mcc_generated_files/tmr1.c: 123: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 124: {;mcc_generated_files/tmr1.c: 125:     if (T1CONbits.T1SYNC == 1)
  9523   003576  A4CD               	btfss	205,2,c	;volatile
  9524   003578  EFC0  F01A         	goto	i2u384_41
  9525   00357C  EFC2  F01A         	goto	i2u384_40
  9526   003580                     i2u384_41:
  9527   003580  EFCA  F01A         	goto	i2l4117
  9528   003584                     i2u384_40:
  9529   003584                     
  9530                           ;mcc_generated_files/tmr1.c: 126:     {;mcc_generated_files/tmr1.c: 128:         T1CONbi
      +                          ts.TMR1ON = 0;
  9531   003584  90CD               	bcf	205,0,c	;volatile
  9532   003586                     
  9533                           ;mcc_generated_files/tmr1.c: 131:         TMR1H = (uint8_t)(timerVal >> 8);
  9534   003586  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  9535   003588  6ECF               	movwf	207,c	;volatile
  9536   00358A                     
  9537                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
  9538   00358A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  9539   00358E                     
  9540                           ;mcc_generated_files/tmr1.c: 135:         T1CONbits.TMR1ON =1;
  9541   00358E  80CD               	bsf	205,0,c	;volatile
  9542                           
  9543                           ;mcc_generated_files/tmr1.c: 136:     }
  9544   003590  EFCE  F01A         	goto	i2l279
  9545   003594                     i2l4117:
  9546                           
  9547                           ;mcc_generated_files/tmr1.c: 138:     {;mcc_generated_files/tmr1.c: 140:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9548   003594  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  9549   003596  6ECF               	movwf	207,c	;volatile
  9550   003598                     
  9551                           ;mcc_generated_files/tmr1.c: 141:         TMR1L = (uint8_t)timerVal;
  9552   003598  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  9553   00359C                     i2l279:
  9554   00359C  0012               	return		;funcret
  9555   00359E                     __end_of_TMR1_WriteTimer:
  9556                           	callstack 0
  9557                           
  9558 ;; *************** function _TMR1_CallBack *****************
  9559 ;; Defined at:
  9560 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used: 1
  9580 ;; Hardware stack levels required when called: 1
  9581 ;; This function calls:
  9582 ;;		NULL
  9583 ;;		_TMR1_DefaultInterruptHandler
  9584 ;; This function is called by:
  9585 ;;		_TMR1_ISR
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text58
  9590   0031CA                     __ptext58:
  9591                           	callstack 0
  9592   0031CA                     _TMR1_CallBack:
  9593                           	callstack 18
  9594   0031CA                     
  9595                           ;mcc_generated_files/tmr1.c: 182:     conteo = conteo + 1;
  9596   0031CA  0E01               	movlw	1
  9597   0031CC  0100               	movlb	0	; () banked
  9598   0031CE  25DD               	addwf	_conteo& (0+255),w,b
  9599   0031D0  6FDD               	movwf	_conteo& (0+255),b
  9600   0031D2  0E00               	movlw	0
  9601   0031D4  21DE               	addwfc	(_conteo+1)& (0+255),w,b
  9602   0031D6  6FDE               	movwf	(_conteo+1)& (0+255),b
  9603   0031D8  0E00               	movlw	0
  9604   0031DA  21DF               	addwfc	(_conteo+2)& (0+255),w,b
  9605   0031DC  6FDF               	movwf	(_conteo+2)& (0+255),b
  9606   0031DE  0E00               	movlw	0
  9607   0031E0  21E0               	addwfc	(_conteo+3)& (0+255),w,b
  9608   0031E2  6FE0               	movwf	(_conteo+3)& (0+255),b
  9609                           
  9610                           ;mcc_generated_files/tmr1.c: 183:     if(TMR1_InterruptHandler)
  9611   0031E4  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
  9612   0031E6  11F2               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  9613   0031E8  B4D8               	btfsc	status,2,c
  9614   0031EA  EFF9  F018         	goto	i2u385_41
  9615   0031EE  EFFB  F018         	goto	i2u385_40
  9616   0031F2                     i2u385_41:
  9617   0031F2  EF08  F019         	goto	i2l298
  9618   0031F6                     i2u385_40:
  9619   0031F6                     
  9620                           ; BSR set to: 0
  9621                           ;mcc_generated_files/tmr1.c: 184:     {;mcc_generated_files/tmr1.c: 185:         TMR1_In
      +                          terruptHandler();
  9622   0031F6  D802               	call	i2u386_48
  9623   0031F8  EF08  F019         	goto	i2u386_49
  9624   0031FC                     i2u386_48:
  9625   0031FC  0005               	push	
  9626   0031FE  6EFA               	movwf	pclath,c
  9627   003200  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
  9628   003202  6EFD               	movwf	tosl,c
  9629   003204  51F2               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  9630   003206  6EFE               	movwf	tosh,c
  9631   003208  50F8               	movf	tblptru,w,c
  9632   00320A  6EFF               	movwf	tosu,c
  9633   00320C  50FA               	movf	pclath,w,c
  9634   00320E  0012               	return		;indir
  9635   003210                     i2u386_49:
  9636   003210                     i2l298:
  9637   003210  0012               	return		;funcret
  9638   003212                     __end_of_TMR1_CallBack:
  9639                           	callstack 0
  9640                           
  9641 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9642 ;; Defined at:
  9643 ;;		line 193 in file "mcc_generated_files/tmr1.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;		None
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      void 
  9650 ;; Registers used:
  9651 ;;		None
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9657 ;;      Params:         0       0       0       0       0       0       0       0       0
  9658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9660 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9661 ;;Total ram usage:        0 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_TMR1_Initialize
  9667 ;;		_TMR1_CallBack
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text59
  9672   003738                     __ptext59:
  9673                           	callstack 0
  9674   003738                     _TMR1_DefaultInterruptHandler:
  9675                           	callstack 18
  9676   003738  0012               	return		;funcret
  9677   00373A                     __end_of_TMR1_DefaultInterruptHandler:
  9678                           	callstack 0
  9679                           
  9680                           	psect	text60
  9681   000000                     __ptext60:
  9682                           	callstack 0
  9683   000000                     
  9684                           	psect	rparam
  9685   000000                     
  9686                           	psect	temp
  9687   00005B                     btemp:
  9688                           	callstack 0
  9689   00005B                     	ds	1
  9690   000000                     int$flags	set	btemp
  9691   000000                     wtemp8	set	btemp+1
  9692   000000                     ttemp5	set	btemp+1
  9693   000000                     ttemp6	set	btemp+4
  9694   000000                     ttemp7	set	btemp+8
  9695                           
  9696                           	psect	idloc
  9697                           
  9698                           ;Config register IDLOC0 @ 0x200000
  9699                           ;	unspecified, using default values
  9700   200000                     	org	2097152
  9701   200000  FF                 	db	255
  9702                           
  9703                           ;Config register IDLOC1 @ 0x200001
  9704                           ;	unspecified, using default values
  9705   200001                     	org	2097153
  9706   200001  FF                 	db	255
  9707                           
  9708                           ;Config register IDLOC2 @ 0x200002
  9709                           ;	unspecified, using default values
  9710   200002                     	org	2097154
  9711   200002  FF                 	db	255
  9712                           
  9713                           ;Config register IDLOC3 @ 0x200003
  9714                           ;	unspecified, using default values
  9715   200003                     	org	2097155
  9716   200003  FF                 	db	255
  9717                           
  9718                           ;Config register IDLOC4 @ 0x200004
  9719                           ;	unspecified, using default values
  9720   200004                     	org	2097156
  9721   200004  FF                 	db	255
  9722                           
  9723                           ;Config register IDLOC5 @ 0x200005
  9724                           ;	unspecified, using default values
  9725   200005                     	org	2097157
  9726   200005  FF                 	db	255
  9727                           
  9728                           ;Config register IDLOC6 @ 0x200006
  9729                           ;	unspecified, using default values
  9730   200006                     	org	2097158
  9731   200006  FF                 	db	255
  9732                           
  9733                           ;Config register IDLOC7 @ 0x200007
  9734                           ;	unspecified, using default values
  9735   200007                     	org	2097159
  9736   200007  FF                 	db	255
  9737                           
  9738                           	psect	config
  9739                           
  9740                           ;Config register CONFIG1L @ 0x300000
  9741                           ;	PLL Selection
  9742                           ;	PLLSEL = PLL3X, 3x clock multiplier
  9743                           ;	PLL Enable Configuration bit
  9744                           ;	CFGPLLEN = ON, PLL Enabled
  9745                           ;	CPU System Clock Postscaler
  9746                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  9747                           ;	Low Speed USB mode with 48 MHz system clock
  9748                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  9749   300000                     	org	3145728
  9750   300000  23                 	db	35
  9751                           
  9752                           ;Config register CONFIG1H @ 0x300001
  9753                           ;	Oscillator Selection
  9754                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  9755                           ;	Primary Oscillator Shutdown
  9756                           ;	PCLKEN = ON, Primary oscillator enabled
  9757                           ;	Fail-Safe Clock Monitor
  9758                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9759                           ;	Internal/External Oscillator Switchover
  9760                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9761   300001                     	org	3145729
  9762   300001  22                 	db	34
  9763                           
  9764                           ;Config register CONFIG2L @ 0x300002
  9765                           ;	Power-up Timer Enable
  9766                           ;	nPWRTEN = ON, Power up timer enabled
  9767                           ;	Brown-out Reset Enable
  9768                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  9769                           ;	Brown-out Reset Voltage
  9770                           ;	BORV = 190, BOR set to 1.9V nominal
  9771                           ;	Low-Power Brown-out Reset
  9772                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  9773   300002                     	org	3145730
  9774   300002  5E                 	db	94
  9775                           
  9776                           ;Config register CONFIG2H @ 0x300003
  9777                           ;	Watchdog Timer Enable bits
  9778                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  9779                           ;	Watchdog Timer Postscaler
  9780                           ;	WDTPS = 32768, 1:32768
  9781   300003                     	org	3145731
  9782   300003  3C                 	db	60
  9783                           
  9784                           ; Padding undefined space
  9785   300004                     	org	3145732
  9786   300004  FF                 	db	255
  9787                           
  9788                           ;Config register CONFIG3H @ 0x300005
  9789                           ;	CCP2 MUX bit
  9790                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  9791                           ;	PORTB A/D Enable bit
  9792                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  9793                           ;	Timer3 Clock Input MUX bit
  9794                           ;	T3CMX = RC0, T3CKI function is on RC0
  9795                           ;	SDO Output MUX bit
  9796                           ;	SDOMX = RB3, SDO function is on RB3
  9797                           ;	Master Clear Reset Pin Enable
  9798                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  9799   300005                     	org	3145733
  9800   300005  D1                 	db	209
  9801                           
  9802                           ;Config register CONFIG4L @ 0x300006
  9803                           ;	Stack Full/Underflow Reset
  9804                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9805                           ;	Single-Supply ICSP Enable bit
  9806                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  9807                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  9808                           ;	ICPRT = OFF, ICPORT disabled
  9809                           ;	Extended Instruction Set Enable bit
  9810                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  9811                           ;	Background Debugger Enable bit
  9812                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  9813   300006                     	org	3145734
  9814   300006  85                 	db	133
  9815                           
  9816                           ; Padding undefined space
  9817   300007                     	org	3145735
  9818   300007  FF                 	db	255
  9819                           
  9820                           ;Config register CONFIG5L @ 0x300008
  9821                           ;	Block 0 Code Protect
  9822                           ;	CP0 = OFF, Block 0 is not code-protected
  9823                           ;	Block 1 Code Protect
  9824                           ;	CP1 = OFF, Block 1 is not code-protected
  9825                           ;	Block 2 Code Protect
  9826                           ;	CP2 = OFF, Block 2 is not code-protected
  9827                           ;	Block 3 Code Protect
  9828                           ;	CP3 = OFF, Block 3 is not code-protected
  9829   300008                     	org	3145736
  9830   300008  0F                 	db	15
  9831                           
  9832                           ;Config register CONFIG5H @ 0x300009
  9833                           ;	Boot Block Code Protect
  9834                           ;	CPB = OFF, Boot block is not code-protected
  9835                           ;	Data EEPROM Code Protect
  9836                           ;	CPD = OFF, Data EEPROM is not code-protected
  9837   300009                     	org	3145737
  9838   300009  C0                 	db	192
  9839                           
  9840                           ;Config register CONFIG6L @ 0x30000A
  9841                           ;	Block 0 Write Protect
  9842                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  9843                           ;	Block 1 Write Protect
  9844                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  9845                           ;	Block 2 Write Protect
  9846                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  9847                           ;	Block 3 Write Protect
  9848                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  9849   30000A                     	org	3145738
  9850   30000A  0F                 	db	15
  9851                           
  9852                           ;Config register CONFIG6H @ 0x30000B
  9853                           ;	Configuration Registers Write Protect
  9854                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9855                           ;	Boot Block Write Protect
  9856                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  9857                           ;	Data EEPROM Write Protect
  9858                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9859   30000B                     	org	3145739
  9860   30000B  E0                 	db	224
  9861                           
  9862                           ;Config register CONFIG7L @ 0x30000C
  9863                           ;	Block 0 Table Read Protect
  9864                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  9865                           ;	Block 1 Table Read Protect
  9866                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  9867                           ;	Block 2 Table Read Protect
  9868                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  9869                           ;	Block 3 Table Read Protect
  9870                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  9871   30000C                     	org	3145740
  9872   30000C  0F                 	db	15
  9873                           
  9874                           ;Config register CONFIG7H @ 0x30000D
  9875                           ;	Boot Block Table Read Protect
  9876                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  9877   30000D                     	org	3145741
  9878   30000D  40                 	db	64
  9879                           tosu	equ	0xFFF
  9880                           tosh	equ	0xFFE
  9881                           tosl	equ	0xFFD
  9882                           stkptr	equ	0xFFC
  9883                           pclatu	equ	0xFFB
  9884                           pclath	equ	0xFFA
  9885                           pcl	equ	0xFF9
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           indf0	equ	0xFEF
  9893                           postinc0	equ	0xFEE
  9894                           postdec0	equ	0xFED
  9895                           preinc0	equ	0xFEC
  9896                           plusw0	equ	0xFEB
  9897                           fsr0h	equ	0xFEA
  9898                           fsr0l	equ	0xFE9
  9899                           wreg	equ	0xFE8
  9900                           indf1	equ	0xFE7
  9901                           postinc1	equ	0xFE6
  9902                           postdec1	equ	0xFE5
  9903                           preinc1	equ	0xFE4
  9904                           plusw1	equ	0xFE3
  9905                           fsr1h	equ	0xFE2
  9906                           fsr1l	equ	0xFE1
  9907                           bsr	equ	0xFE0
  9908                           indf2	equ	0xFDF
  9909                           postinc2	equ	0xFDE
  9910                           postdec2	equ	0xFDD
  9911                           preinc2	equ	0xFDC
  9912                           plusw2	equ	0xFDB
  9913                           fsr2h	equ	0xFDA
  9914                           fsr2l	equ	0xFD9
  9915                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    14
    Data        12
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     97     160
    BANK1           256      6     116
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(1) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1840$buffer	PTR unsigned char  size(2) Largest target is 0

    S1840$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _trip_protec_current->___flge
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _floorf->___fldiv
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write
    _get_corriente_AC->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flsub
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   66762
                                              0 BANK1      6     6      0
               _EUSART1_Write_string
                _EUSART1_is_tx_ready
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                   _get_corriente_AC
                    _nrF2401_init_RX
                   _nrf2401_haydatos
                     _nrf2401_recibe
                         _spi_s_init
                            _sprintf
                _trip_protec_current
 ---------------------------------------------------------------------------------
 (1) _trip_protec_current                                  4     4      0    2786
                                             55 COMRAM     4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   32167
                                             77 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   31669
                                             73 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   31181
                                             62 BANK0     11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     852
                                             10 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   28406
                                             10 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3163
                                             20 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1239
                                             14 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     919
                                              6 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             76 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf2401_recibe                                       1     1      0     250
                                              6 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (1) _nrf2401_haydatos                                     0     0      0     284
                         _get_Status
 ---------------------------------------------------------------------------------
 (2) _get_Status                                           0     0      0     284
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (3) _nrf2401_read                                         2     2      0     284
                                              6 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_read                                           2     2      0     111
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_RX                                      1     1      0    4907
                                             10 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              4     2      2     986
                                              6 COMRAM     4     2      2
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    2013
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1877
                                              6 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0     136
                                              6 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_write                                          2     2      0     105
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_corriente_AC                                    11     7      4   18724
                                             76 COMRAM     5     1      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4547
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3650
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2786
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                             51 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                     _ADC_Initialize
                    _CCP2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_tx_ready                                  1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     186
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     240
                                              2 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _EUSART1_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   ___fladd
   ___fldiv
     ___fladd (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
   _get_corriente_AC
     _ADC_GetConversion
     ___fladd
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _nrf2401_haydatos
     _get_Status
       _nrf2401_read
         _spi_s_read
         _spi_s_write
   _nrf2401_recibe
     _spi_s_read
     _spi_s_write
   _spi_s_init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
   _trip_protec_current
     ___flge

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      74       7       45.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllllh     23      0       0      34        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      35        0.0%
BITBIGSFRhlhhll      7      0       0      23        0.0%
BITBIGSFRhll         7      0       0      24        0.0%
BITBIGSFRllllhl      4      0       0      31        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      33        0.0%
BITBIGSFRllllhh      3      0       0      29        0.0%
BITBIGSFRlllllh      3      0       0      32        0.0%
BITBIGSFRllllhh      2      0       0      30        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRhlhhh       1      0       0      22        0.0%
BITBIGSFRlllh        1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16E      36        0.0%
DATA                 0      0     16E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Sep 21 13:26:23 2023

                                             _I 0057                                    ___fldiv@aexp 004C  
                                  ___fldiv@bexp 004B                                               _i 00EB  
                                             _j 00E9                                               _k 00E7  
                                             _l 00E5                                    ___fldiv@sign 0044  
                                            l43 33DE                                              l70 36CA  
                                            l47 3572                                              l48 3574  
                                            l82 3702                                              l67 36B8  
                                            l76 34F4                                              l94 3720  
                                            l97 3716                             ___wmul@multiplicand 0007  
                                           l100 372A                                             l130 35D4  
                                           l133 35E2                                             l301 370C  
                                           l206 3432                                             l127 361E  
                                           l160 3522                                             l225 3736  
                                           l209 3452                                             l172 36EC  
                                           l502 35C2                                             l191 36B4  
                                           l351 3256                                             l265 354C  
                                           l361 3656                                             l409 3600  
                                           l345 369E                                             l354 318C  
                                           l371 3396                                             l356 31A0  
                                           l364 36DE                                             l372 339E  
                                           l381 3688                                             l358 31C8  
                                           l390 3026                                             l470 1FCA  
                                           l463 2772                                             l367 363A  
                                           l471 1FCA                                             l480 2102  
                                           l481 2102                                             l387 3670  
                                           l475 2066                                             l396 3732  
                                           l476 2066                                             l485 216C  
                                           l486 216C                                             l495 2A80  
                                           l488 2170                                             l761 2F0C  
                                           l772 2CAA                                             l767 2C64  
                                           l776 34C4                                             l799 2BA6  
                               _timer1ReloadVal 00F3                                             _pad 3028  
                                           tosl 0FFD                                             wreg 0FE8  
                                    _TXSTA1bits 0FAC                                    ___flmul@aexp 0020  
                                  ___flmul@bexp 0025                                    ___flmul@sign 001F  
                                  ___flmul@temp 002A                                    ___flmul@prod 0026  
                                  ___fltol@exp1 000E                                 _nrF2401_init_RX 2FB4  
                                          l1030 13FA                                            l1031 13E8  
                                          l1120 1AF4                                            l1032 13AE  
                                          l1123 1986                                            l1211 308C  
                                          l1116 1790                                            l1133 1AB6  
                                          l1125 19FE                                            l1126 19EC  
                                          l1222 120A                                            l1047 1514  
                                          l1039 16CA                                            l1207 303E  
                                          l1056 15E4                                            l1072 329C  
                                          l1160 2926                                            l1057 15D2  
                                          l1225 0BAA                                            l1171 28BE  
                                          l1315 2386                                            l1227 09F0  
                                          l1084 1E8E                                            l1164 2862  
                                          l1308 2DA8                                            l1180 331E  
                                          l1157 27CA                                            l1086 1CEE  
                                          l1318 22CA                                            l1095 1D34  
                                          l1335 3132                                            l1255 0FF2  
                                          l1271 2FB2                                            l1097 1DAC  
                                          l1089 1CB2                                            l1329 30E2  
                                          l1361 3418                                            l1098 1D9A  
                                          l1347 2E62                                            l1355 335E  
                                          l1267 2FAA                                            l1291 2596  
                                          l5001 189C                                            l1298 32DE  
                                          l5011 1940                                            l5003 18B8  
                                          l5101 2CA2                                            l5021 1996  
                                          l5013 194E                                            l5005 18C4  
                                          l5103 2CA8                                            l5023 19A4  
                                          l5015 196C                                            l5007 18E0  
                                          l5111 34B4                                            l5033 1A0E  
                                          l5041 1A56                                            l5025 19A8  
                                          l5017 1976                                            l5009 190A  
                                          l5121 2ACC                                            l5201 30B0  
                                          l6001 299A                                            l5051 1ACA  
                                          l5043 1A70                                            l5035 1A1A  
                                          l5027 19B6                                            l5019 1984  
                                          l5107 348E                                            l5131 2B1A  
                                          l5123 2AF6                                            l5115 2AA2  
                                          l5211 21FE                                            l6011 2A38  
                                          l6003 29F2                                            l5053 1AD8  
                                          l5045 1A84                                            l5037 1A28  
                                          l5029 19E4                                            l5109 34A4  
                                          l5141 2B46                                            l5125 2AF8  
                                          l5117 2AB8                                            l5213 220C  
                                          l5221 22EE                                            l5205 2172  
                                          l5301 0848                                            l6013 2A4C  
                                          l6005 2A14                                            l5055 1ADA  
                                          l5047 1A9E                                            l5039 1A52  
                                          l5063 3258                                            l5071 2E92  
                                          l5151 2B76                                            l5127 2B08  
                                          l5223 232A                                            l5207 2192  
                                          l5311 0892                                            l5303 084C  
                                          l6015 2A54                                            l6007 2A28  
                                          l5049 1ABA                                            l5057 1AE0  
                                          l4601 128A                                            l5065 3268  
                                          l5081 2F0A                                            l5073 2EA2  
                                          l5153 2B86                                            l5137 2B32  
                                          l5129 2B0C                                            l5225 233E  
                                          l5217 227E                                            l5209 21EA  
                                          l5241 3114                                            l5233 30E4  
                                          l5161 3036                                            l5401 0C2C  
                                          l5321 08E0                                            l5313 08A2  
                                          l5305 0870                                            l6017 2A64  
                                          l6009 2A34                                            l5091 2C14  
                                          l5059 1AE4                                            l4611 12B2  
                                          l4603 128C                                            l5251 321E  
                                          l5075 2ED0                                            l5155 2B96  
                                          l5147 2B5A                                            l5139 2B3C  
                                          l5171 2CAC                                            l5227 2366  
                                          l5219 22BA                                            l5235 30F8  
                                          l5243 3118                                            l5163 304A  
                                          l5411 0CC4                                            l5403 0C34  
                                          l5331 0918                                            l5323 08F2  
                                          l5315 08AE                                            l5307 087A  
                                          l6019 2A66                                            l5093 2C24  
                                          l5085 2BA8                                            l4701 1482  
                                          l4621 12EC                                            l4613 12C2  
                                          l4605 1292                                            l5261 323A  
                                          l5253 3222                                            l5245 3212  
                                          l5077 2EE0                                            l5069 2E64  
                                          l5149 2B66                                            l5173 2CCC  
                                          l5229 2376                                            l5237 3104  
                                          l5165 305A                                            l5501 116A  
                                          l5421 0DA8                                            l5413 0D1C  
                                          l5405 0C3C                                            l5341 0976  
                                          l5333 0922                                            l5325 08F6  
                                          l5317 08B6                                            l5309 0882  
                                          ?_pad 0015                                            l5095 2C32  
                                          l5087 2BD6                                            l4711 14F4  
                                          l4703 1488                                            l4631 1318  
                                          l4623 12FE                                            l4615 12D2  
                                          l4607 12A0                                            l5263 323C  
                                          l5255 3224                                            l5079 2F04  
                                          l5175 2D0A                                            l5183 2D4A  
                                          l5239 3108                                            l5167 305E  
                                          l5159 3028                                            l5511 11E6  
                                          l5503 119A                                            l5431 0E42  
                                          l5423 0DDA                                            l5415 0D50  
                                          l5407 0C4C                                            l5343 097A  
                                          l5327 08FC                                            l5319 08BA  
                                          l4561 36C6                                            l4801 1B12  
                                          l5097 2C44                                            l5089 2BE6  
                                          l4721 154E                                            l4705 14AE  
                                          l4713 1504                                            l4641 132C  
                                          l4633 131C                                            l4625 130C  
                                          l4617 12D4                                            l4609 12A2  
                                          l5281 31A2                                            l5273 3184  
                                          l5265 3242                                            l5257 322A  
                                          l5185 2D5C                                            l5177 2D32  
                                          l5169 307C                                            l5193 33E0  
                                          l5513 11EE                                            l5505 11A8  
                                          l5441 0F1A                                            l5433 0E76  
                                          l5425 0DF0                                            l5409 0C60  
                                          l5417 0D56                                            l5361 0A00  
                                          l5345 0980                                            l5329 0904  
                                          l5337 093E                                            l5521 2F38  
                                          l5601 24B0                                            l6081 244A  
                                          l5531 3718                                            l4803 1B22  
                                          l4811 1B4C                                            l5099 2C52  
                                          l4731 157E                                            l4723 1558  
                                          l4715 152A                                            l4707 14E2  
                                          l4651 1340                                            l4643 1330  
                                          l4635 1320                                            l4627 1310  
                                          l4619 12DC                                            l5291 31B6  
                                          l5283 31A6                                            l5267 3244  
                                          l5259 3238                                            l5179 2D3E  
                                          l4563 36FC                                            l4571 2DD4  
                                          l5195 33E8                                            l5507 11C0  
                                          l5451 0F44                                            l5435 0ECC  
                                          l5443 0F1E                                            l5427 0E22  
                                          l5419 0D74                                            l5371 0AE8  
                                          l5363 0A06                                            l5347 0988  
                                          l5339 0964                                            l5355 09A0  
                                          l5523 2F40                                            l6083 24EC  
                                          l5533 370E                                            l4901 1DBC  
                                          l4821 1B78                                            l4813 1B5C  
                                          l4805 1B32                                            l4741 15A6  
                                          l4733 1582                                            l4725 1566  
                                          l4717 153A                                            l4709 14E4  
                                          l4661 137A                                            l4653 1344  
                                          l4645 1334                                            l4637 1324  
                                          l4629 1314                                            l4581 1218  
                                          l5293 31B8                                            l5285 31A8  
                                          l5541 3640                                            l5269 3254  
                                          l5189 2DA0                                            l5197 308E  
                                          l4573 2DF0                                            l4565 2DAA  
                                          l5509 11D0                                            l5461 1012  
                                          l5453 0F50                                            l5445 0F2E  
                                          l5437 0ED2                                            l5429 0E32  
                                          l5373 0AFC                                            l5381 0B78  
                                          l5365 0A3A                                            l5357 09BA  
                                          l5525 2F5C                                            l5517 2F0E  
                                          l6085 2558                                            l5605 24D8  
                                          l5621 2574                                            l4559 36B8  
                                          l5535 3722                                            l4911 1E1E  
                                          l4903 1DC8                                            l4823 1B88  
                                          l4831 1BB2                                            l4815 1B62  
                                          l4807 1B42                                            l4751 1600  
                                          l4743 15B4                                            l4735 1592  
                                          l4727 1568                                            l4671 13CC  
                                          l4663 1396                                            l4655 1348  
                                          l4647 1338                                            l4639 1328  
                                          l4591 1258                                            l4583 1226  
                                          l5711 2786                                            l5287 31AE  
                                          l5279 319A                                            l5551 36D6  
                                          l5543 364E                                            l5703 3672  
                                          l5199 309C                                            l4575 2E22  
                                          l4567 2DBA                                            l5471 1044  
                                          l5463 1022                                            l5455 0FC8  
                                          l5447 0F36                                            l5439 0F06  
                                          l5391 0BDE                                            l5383 0BB2  
                                          l5375 0B30                                            l5367 0A78  
                                          l5295 0824                                            l5527 2F7C  
                                          l5519 2F16                                            l5615 253A  
                                          l5607 2502                                            l5641 33B4  
                                          l5537 3704                                            l4921 1E7C  
                                          l4913 1E34                                            l4905 1DD6  
                                          l4841 1BF4                                            l4833 1BC2  
                                          l4825 1B98                                            l4817 1B68  
                                          l4809 1B44                                            l4761 166A  
                                          l4753 160E                                            l4745 15CA  
                                          l4729 1576                                            l4737 1594  
                                          l4681 1418                                            l4673 13DA  
                                          l4665 13A6                                            l4649 133C  
                                          l4657 134C                                            l4593 125A  
                                          l4585 1228                                            l5721 2804  
                                          l5713 2794                                            l5289 31B0  
                                          l5553 36D8                                            l5545 3650  
                                          l5561 362A                                            l5705 372C  
                                          l4569 2DCA                                            l5481 1078  
                                          l5473 1048                                            l5465 1026  
                                          l5457 0FE8                                            l5449 0F3C  
                                          l5393 0BE2                                            l5385 0BC2  
                                          l5377 0B38                                            l5369 0AAA  
                                          l5297 082A                                            l5529 2F84  
                                          l5609 2510                                            l5617 2566  
                                          l5643 33C0                                            l5651 34F6  
                                          l4923 1E82                                            l4915 1E4E  
                                          l4907 1E00                                            l4835 1BD8  
                                          l4827 1BA8                                            l4819 1B76  
                                          l4771 16A4                                            l4763 168A  
                                          l4755 1648                                            l4691 1458  
                                          l4739 15A2                                            l4675 13DC  
                                          l4667 13BC                                            l4659 1350  
                                          l4587 1238                                            l4595 1262  
                                          l4579 120C                                            l5731 2858  
                                          l5723 280C                                            l5715 27DA  
                                          l5547 36CE                                            l5539 363E  
                                          l5563 3630                                            l5555 3622  
                                          l5491 1116                                            l5483 107C  
                                          l5475 104E                                            l5467 102C  
                                          l5459 1004                                            l5395 0BF4  
                                          l5387 0BCE                                            l5299 083A  
                                          l5571 23AC                                            l5645 33CC  
                                          l5653 3520                                            l5661 3530  
                                          l4925 1E84                                            l4917 1E6A  
                                          l4909 1E04                                            l4861 1C76  
                                          l4853 1C2C                                            l4837 1BE8  
                                          l4845 1C08                                            l4829 1BAA  
                                          l4941 16F8                                            l4933 16CC  
                                          l4773 16AA                                            l4765 168E  
                                          l4749 15F4                                            l4757 164A  
                                          l4693 1464                                            l4685 142C  
                                          l4677 13E6                                            l4669 13C8  
                                          l4597 1272                                            l4589 1248  
                                          l5741 28CE                                            l5733 2894  
                                          l5725 2818                                            l5717 27F0  
                                          l5709 2776                                            l5549 36D0  
                                          l5565 3632                                            l5557 3622  
                                          l4781 3320                                            l5485 1082  
                                          l5469 1034                                            l5477 1054  
                                          l5493 111A                                            l5397 0C02  
                                          l5389 0BD6                                            l5581 23EE  
                                          l5573 23B4                                            l5901 1FCE  
                                          l5671 36A0                                            l5647 33D8  
                                          l5639 33A0                                            l5655 35C4  
                                          l5663 3538                                            l4919 1E6E  
                                          l4871 1CBC                                            l4863 1C7E  
                                          l4855 1C46                                            l4847 1C18  
                                          l4839 1BF0                                            l4951 1734  
                                          l4943 1708                                            l4935 16D8  
                                          l4775 16B8                                            l4767 169C  
                                          l4759 165A                                            l4695 1468  
                                          l4687 143C                                            l4679 1408  
                                          l4599 1278                                            l5751 2916  
                                          l5743 28D2                                            l5735 28A0  
                                          l5727 284A                                            l5559 3624  
                                          l5831 366E                                            l5823 3658  
                                          l4783 332C                                            l5495 1138  
                                          l5487 10DA                                            l5479 1066  
                                          l5399 0C1A                                            l4791 35BA  
                                          l5591 242E                                            l5583 2402  
                                          l5575 23C0                                            l5903 2000  
                                          l5911 206A                                            l5657 36E0  
                                          l5649 3734                                            l5665 353A  
                                          l5673 341C                                            l4881 1D14  
                                          l4873 1CDA                                            l4865 1C8E  
                                          l4857 1C56                                            l4849 1C18  
                                          l4961 176A                                            l4953 173A  
                                          l4945 1718                                            l4937 16E6  
                                          l4777 16BA                                            l4769 16A2  
                                          l4697 1476                                            l4689 144A  
                                          l5745 28F6                                            l5737 28AE  
                                          l5729 284C                                            l5841 3014  
                                          l5825 365A                                            l4785 333A  
                                          l5497 1154                                            l5489 110E  
                                          l5585 240E                                            l5577 23C4  
                                          l5569 2388                                            l5761 32D4  
                                          l5913 209C                                            l5921 2106  
                                          l5905 2032                                            l5771 356E  
                                          l5667 353C                                            l5659 3524  
                                          l5675 342E                                            l4891 1D52  
                                          l4883 1D1A                                            l4875 1CDC  
                                          l4867 1CA2                                            l4859 1C66  
                                          l4795 1AF6                                            l4963 177A  
                                          l4955 1748                                            l4947 171E  
                                          l4939 16E8                                            l4699 1478  
                                          l5747 2906                                            l5739 28CC  
                                          l5683 3360                                            l5843 3024  
                                          l5835 2FB6                                            l5827 3666  
                                          l4787 333E                                            l5499 115C  
                                          l5587 2420                                            l5595 2436  
                                          l5579 23E6                                            l5755 329E  
                                          l5931 32EE                                            l5923 2138  
                                          l5915 20CE                                            l5907 205C  
                                          l5781 34DC                                            l5765 354E  
                                          l5669 3548                                            l5677 3430  
                                          l4893 1D56                                            l4885 1D24  
                                          l4877 1CEC                                            l4869 1CB0  
                                          l4797 1B02                                            l4981 17FC  
                                          l4973 17C4                                            l4965 1780  
                                          l4957 174A                                            l4949 172E  
                                          l5749 2914                                            l5861 25D4  
                                          l5693 336E                                            l5685 3362  
                                          l5837 2FB8                                            l5853 35FE  
                                          l5845 35E4                                            l5829 3668  
                                          l4789 359E                                            l5589 2426  
                                          l5597 2468                                            l5757 32A6  
                                          l5933 32F6                                            l5925 2162  
                                          l5917 20F8                                            l5909 2064  
                                          l5775 34C6                                            l5767 3552  
                                          l5791 3612                                            l5783 3602  
                                          l5679 3440                                            l4895 1D64  
                                          l4887 1D32                                            l4879 1CFE  
                                          l4799 1B10                                            l4991 1846  
                                          l4983 1814                                            l4975 17D0  
                                          l4967 17A0                                            l4959 175A  
                                          l5871 26E6                                            l5863 261A  
                                          l5695 3384                                            l5687 336A  
                                          l5839 3008                                            l5847 35F8  
                                          l5599 2488                                            l5759 32B8  
                                          l5935 32FE                                            l5927 216A  
                                          l5919 2100                                            l5777 34CA  
                                          l5769 3560                                            l5793 3616  
                                          l5785 3606                                            l4897 1D92  
                                          l4889 1D44                                            l4993 1856  
                                          l4985 1820                                            l4977 17DA  
                                          l4969 17B0                                            l5873 26F6  
                                          l5865 2672                                            l5857 2598  
                                          l5697 3386                                            l5937 330E  
                                          l5929 32E0                                            l5881 1E90  
                                          l5779 34D8                                            l5795 361A  
                                          l5787 360A                                            l4995 1862  
                                          l4987 182C                                            l4979 17F0  
                                          l5867 26A4                                            l5859 25C6  
                                          l5875 26FC                                            l5699 3398  
                                          l5883 1EC2                                            l5891 1F32  
                                          l5789 360E                                            l4997 1872  
                                          l4989 183A                                            l5877 271A  
                                          l5869 26B4                                            l5797 368A  
                                          l5893 1F64                                            l5885 1ED4  
                                          l5981 292E                                            l4999 188C  
                                          l5895 1F96                                            l5887 1F0A  
                                          l5991 2942                                            l5983 2930  
                                          l5897 1FC0                                            l5889 1F1C  
                                          l5993 2948                                            l5985 2936  
                                          l5977 2928                                            l5899 1FC8  
                                          l5995 2962                                            l5987 293A  
                                          l5979 292C                                            l5997 2964  
                                          l5989 293E                                            l5999 297E  
                                          STR_1 080F                                            STR_2 081B  
                                          STR_5 081F                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                          u5000 16F8                                            u5001 16F4  
                                          u5010 1708                                            u5011 1704  
                                          u5100 19B6                                            u5020 1748  
                                          u5101 19B2                                            u5021 1744  
                                          u4310 36C6                                            u5110 19E4  
                                          u5030 175A                                            u4311 36C2  
                                          u5111 19E0                                            u5031 1756  
                                          u5120 19FA                                            u5040 176A  
                                          u4400 12A0                                            u6000 2786  
                                          u5200 2F04                                            u4320 2DBA  
                                          u5121 19F6                                            u5041 1766  
                                          u4401 129C                                            u6001 2782  
                                          u5201 2F00                                            u4321 2DB6  
                                          u5210 2BD6                                            u5130 1A0E  
                                          u5050 17A0                                            u4410 12B2  
                                          u6010 2794                                            u4330 2DCA  
                                          u5211 2BD2                                            u5131 1A0A  
                                          u5051 179C                                            u4411 12AE  
                                          u6011 2790                                            u4331 2DC6  
                                          u5220 2C14                                            u5140 1A28  
                                          u5060 17B0                                            u4500 13FA  
                                          u4420 12C2                                            u6020 27F0  
                                          u5300 2B2E                                            u4340 2DF0  
                                          u6100 32D4                                            u5221 2C10  
                                          u5141 1A24                                            u5061 17AC  
                                          u4501 13F6                                            u4421 12BE  
                                          u6021 27EC                                            u5301 2B2A  
                                          u4341 2DEC                                            u6101 32D0  
                                          u6110 3560                                            u5230 2C32  
                                          u5150 1A70                                            u5070 192A  
                                          u4510 1408                                            u4430 12FE  
                                          u6030 2846                                            u5310 2B56  
                                          u4350 2E22                                            u6111 355C  
                                          u5231 2C2E                                            u5151 1A6C  
                                          u4511 1404                                            u4431 12FA  
                                          u6031 2842                                            u5311 2B52  
                                          u4351 2E1E                                            u6120 356E  
                                          u5240 2C52                                            u5160 1A9E  
                                          u5080 1984                                            u4600 1566  
                                          u4520 1418                                            u4440 130C  
                                          u4360 1226                                            u6040 2890  
                                          u5320 2B76                                            u6200 1F64  
                                          u6121 356A                                            u5241 2C4E  
                                          u5161 1A9A                                            u5081 1980  
                                          u4601 1562                                            u4521 1414  
                                          u4441 1308                                            u4361 1222  
                                          u6041 288C                                            u5321 2B72  
                                          u6201 1F60                                            u6130 34F4  
                                          u5250 2CA2                                            u5170 1AD8  
                                          u5090 19A4                                            u4610 1576  
                                          u4530 144A                                            u4450 137A  
                                          u4370 1238                                            u6050 28AE  
                                          u5330 2B86                                            u5410 2D96  
                                          u6210 1F96                                            u6131 34F0  
                                          u5251 2C9E                                            u5171 1AD4  
                                          u5091 19A0                                            u5075 1920  
                                          u4611 1572                                            u4531 1446  
                                          u4451 1376                                            u4371 1234  
                                          u6051 28AA                                            u5331 2B82  
                                          u5411 2D90                                            u6211 1F92  
                                          u4700 165A                                            u4620 1592  
                                          u4540 1458                                            u4460 1392  
                                          u4380 1248                                            u6060 28BE  
                                          u6140 35F8                                            u5180 2E92  
                                          u5260 34A4                                            u5420 2D98  
                                          u5500 229E                                            u5340 3036  
                                          u6300 2162                                            u6220 1FC0  
                                          u4701 1656                                            u4621 158E  
                                          u4541 1454                                            u4461 138C  
                                          u4381 1244                                            u6061 28BA  
                                          u6141 35F4                                            u5181 2E8E  
                                          u5261 34A0                                            u5405 2D6E  
                                          u5341 3032                                            u6301 215E  
                                          u6221 1FBC                                            u4710 166A  
                                          u4630 15A2                                            u4550 1476  
                                          u4470 1394                                            u4390 128A  
                                          u6070 28CC                                            u6150 26A4  
                                          u5190 2ED0                                            u5270 2AB8  
                                          u5510 22BA                                            u5350 307C  
                                          u5430 3418                                            u6230 2000  
                                          u4711 1666                                            u4631 159E  
                                          u4551 1472                                            u4391 1286  
                                          u6071 28C8                                            u6151 26A0  
                                          u5191 2ECC                                            u5271 2AB4  
                                          u5511 22B6                                            u5351 3078  
                                          u5431 3414                                            u6231 1FFC  
                                          u4800 1B88                                            u4720 168A  
                                          u4640 15B4                                            u4560 14AE  
                                          u4480 13BC                                            u6080 2906  
                                          u6160 26E6                                            u5280 2AEC  
                                          u5360 2CEC                                            u5520 230E  
                                          u5440 309C                                            u5600 0848  
                                          u6240 2032                                            u4801 1B84  
                                          u4721 1686                                            u4641 15B0  
                                          u4561 14AA                                            u4481 13B8  
                                          u6081 2902                                            u6161 26E2  
                                          u5505 2294                                            u5441 3098  
                                          u5601 0844                                            u6241 202E  
                                          u4810 1B98                                            u4730 169C  
                                          u4650 15CA                                            u4570 14F4  
                                          u4490 13DA                                            u6090 2914  
                                          u6170 271A                                            u5290 2B1A  
                                          u5370 2D0A                                            u5530 232A  
                                          u5450 21BA                                            u5610 0892  
                                          u6250 205C                                            u4811 1B94  
                                          u4731 1698                                            u4651 15C6  
                                          u4571 14F0                                            u4491 13D6  
                                          u6091 2910                                            u6171 2716  
                                          u5291 2B16                                            u5371 2D06  
                                          u5531 2326                                            u5611 088E  
                                          u6251 2058                                            u4900 1D52  
                                          u4820 1BD8                                            u4740 16B8  
                                          u4660 15E0                                            u4580 152A  
                                          u5380 2D32                                            u5540 2366  
                                          u5460 21EA                                            u5700 0AE8  
                                          u5620 08A2                                            u6260 209C  
                                          u6180 1EC2                                            u6340 2A28  
                                          u4901 1D4E                                            u4821 1BD4  
                                          u4741 16B4                                            u4661 15DC  
                                          u4581 1526                                            u5285 2AE2  
                                          u5381 2D2E                                            u5365 2CE2  
                                          u5541 2362                                            u5525 2304  
                                          u5461 21E6                                            u5701 0AE4  
                                          u5621 089E                                            u6261 2098  
                                          u6181 1EBE                                            u6341 2A24  
                                          u4910 1D64                                            u4830 1C18  
                                          u4670 15F4                                            u4590 153A  
                                          u5390 2D5C                                            u5470 220C  
                                          u5550 3132                                            u4750 335E  
                                          u5710 0B74                                            u5630 08E0  
                                          u6270 20CE                                            u6190 1F0A  
                                          u6350 2A4C                                            u4911 1D60  
                                          u4831 1C14                                            u4671 15F0  
                                          u4591 1536                                            u5391 2D58  
                                          u5471 2208                                            u5455 21B0  
                                          u5551 312E                                            u4751 335A  
                                          u5711 0B70                                            u5631 08DC  
                                          u6271 20CA                                            u6191 1F06  
                                          u6407 2A8C                                            u6351 2A48  
                                          u4920 1D92                                            u4840 1C8E  
                                          u4760 1B10                                            u4680 160E  
                                          u5560 3238                                            u5800 0E32  
                                          u5720 0BAA                                            u5640 08F2  
                                          u6280 20F8                                            u6360 2A64  
                                          u4921 1D8E                                            u4841 1C8A  
                                          u4761 1B0C                                            u4681 160A  
                                          u5561 3234                                            u5801 0E2E  
                                          u5721 0BA6                                            u5641 08EE  
                                          u6281 20F4                                            u6417 1F26  
                                          u6361 2A60                                            u4930 1DA8  
                                          u4850 1CB0                                            u4770 1B22  
                                          u4690 1648                                            u5570 3254  
                                          u5490 227A                                            u5810 0ECC  
                                          u5730 0BC2                                            u5650 0964  
                                          u6290 2138                                            u4931 1DA4  
                                          u4851 1CAC                                            u4771 1B1E  
                                          u4691 1644                                            u6507 31B2  
                                          u5571 3250                                            u6427 366A  
                                          u5491 2276                                            u5811 0EC8  
                                          u5731 0BBE                                            u5651 0960  
                                          u6291 2134                                            u4940 1DBC  
                                          u4860 1CDA                                            u4780 1B32  
                                          u5580 319A                                            u5900 11BC  
                                          u5820 0F1A                                            u5740 0BF4  
                                          u5660 0976                                            u4941 1DB8  
                                          u4861 1CD6                                            u4781 1B2E  
                                          u5581 3196                                            u6437 3634  
                                          u5485 2220                                            u5821 0F16  
                                          u5741 0BF0                                            u5661 0972  
                                          u4950 1DD6                                            u4870 1CFE  
                                          u4790 1B76                                            u5590 31C8  
                                          u5486 222A                                            u5910 11D0  
                                          u5830 0FC8                                            u5750 0C02  
                                          u5670 09EC                                            u4951 1DD2  
                                          u4871 1CFA                                            u4791 1B72  
                                          u5591 31C4                                            u6447 3226  
                                          u5487 223A                                            u5911 11CC  
                                          u5831 0FC4                                            u5751 0BFE  
                                          u5671 09E8                                            u4960 1E1E  
                                          u4880 1D14                                            u5840 1004  
                                          u5760 0C2C                                            u5680 0A78  
                                          u5920 2F38                                            u4961 1E1A  
                                          u4881 1D10                                            u6457 323E  
                                          u5841 1000                                            u5761 0C28  
                                          u5681 0A74                                            u5921 2F34  
                                          u6377 2954                                            u4970 1E4E  
                                          u4890 1D32                                            u5850 1012  
                                          u5770 0D74                                            u5690 0AAA  
                                          u5930 2FAA                                            u4971 1E4A  
                                          u4891 1D2E                                            u6467 339A  
                                          u5851 100E                                            u5771 0D70  
                                          u5691 0AA6                                            u5931 2FA6  
                                          u6387 2970                                            u4980 1E7C  
                                          u5860 1066                                            u5780 0DDA  
                                          u5940 23AC                                            u4981 1E78  
                                          u6477 3652                                            u5861 1062  
                                          u5781 0DD6                                            u5941 23A8  
                                          u6397 2A72                                            u4990 16E6  
                                          u5870 1138                                            u5790 0E22  
                                          u5950 23E6                                            u4991 16E2  
                                          u6487 36DA                                            u5871 1134  
                                          u5791 0E1E                                            u5951 23E2  
                                          u5880 1154                                            u5960 2484  
                                          u6497 31AA                                            u5881 1150  
                                          u5961 2480                                            u5970 35E2  
                                          u5890 11BA                                            u5971 35DE  
                                          u5891 11B4                                            u5980 3440  
                                          u5981 343C                                            u5990 3396  
                                          u5991 3392                                            _TMR1 0FCE  
                                          _WPUB 0F85                                   _EUSART1_Write 36B6  
                                          _dbuf 0104                         __end_of_CCP2_Initialize 36EE  
                                          _labs 308E                                            _main 2928  
                                          _prec 00E3                                            pad@i 001B  
                                          pad@p 0018                                            fsr1h 0FE2  
                                          fsr2h 0FDA                                            indf2 0FDF  
                                          fsr1l 0FE1                                            fsr2l 0FD9  
                                          btemp 005B                                   ___fpclassifyf 2CAC  
                                          prodh 0FF4                                            prodl 0FF3  
                                          start 004C                                 ___fldiv@new_exp 0045  
                              nrf2401_write@reg 0008                      ??_TMR1_SetInterruptHandler 0007  
                                  ?_flush_TX_RX 0001                                    ___param_bank 0000  
                                         ??_pad 001A                 __end_of_nrf2401_direccion_TX_RX 33A0  
                     get_corriente_AC@corriente 0062                   __end_of_OSCILLATOR_Initialize 35E4  
                                 ___fltol@sign1 000D                                           ?_labs 0005  
                               __end_of___fladd 16CC                                           ?_main 0001  
                               __end_of___fldiv 1E90                                 __end_of___flneg 34C6  
                               __end_of___flmul 1AF6                                 __end_of___flsub 329E  
                               __end_of___fltol 2BA8                            nrf2401_recibe@valor_ 0007  
                  __end_of_EUSART1_Write_string 34F6                                           _T1CON 0FCD  
                                         _LATA5 7C4D                                           i2l304 3738  
                                         i2l232 0040                                           i2l294 348C  
                                         i2l279 359C                                           i2l298 3210  
                                  vfpfcnvrt@fmt 009F                                           _TMR1H 0FCF  
                                         _TMR1L 0FCE                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _I_max 00D5                                           _I_min 00D1  
                                         _I_rms 0100                                __end_of_TMR1_ISR 348E  
                                         _flags 00FD                             read_prec_or_width@c 000D  
                           read_prec_or_width@n 000E                                           _fputc 2DAA  
                                         _fputs 3320                                           _valor 00ED  
                                         labs@a 0005                                           pad@fp 0015  
                                         _width 00E1                                           _putch 36FA  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 354E  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         status 0FD8                                           wtemp8 005C  
                               __end_of_sprintf 3320                                  ?___fpclassifyf 0005  
            _EUSART1_DefaultFramingErrorHandler 0000                                 _TMR1_WriteTimer 3576  
                               __initialization 3134                                    __end_of_labs 30E4  
                    __end_of_EUSART1_Initialize 33E0                                    __end_of_main 2AA2  
                              spi_s_read@cont_s 0006                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_labs 0009                                          ??_main 016E  
                                 __activetblptr 0002                         __end_of_nrF2401_init_RX 3028  
                    __end_of_read_prec_or_width 2FB4                            __end_of_nrf2401_read 363C  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0007  
                                        _ACTCON 0FB5                                          ?_fputs 000F  
                                        _ADRESH 0FC4                                          _ADRESL 0FC3  
                                        _CCPR2H 0F91                                          _CCPR2L 0F90  
                                        _ANSELA 0F5B                                          ?_putch 0001  
                                        _ANSELB 0F5C                                          _ANSELC 0F5D  
                                        _T1GCON 0FCC                         TMR1_WriteTimer@timerVal 0001  
                          __end_of_direccion_rx 0806                            __end_of_direccion_tx 080F  
                                        i2l4111 3586                                          i2l4121 31CA  
                                        i2l4113 358A                                          i2l4123 31F6  
                                        i2l4115 358E                                          i2l4107 3576  
                                        i2l4109 3584                                          i2l4117 3594  
                                        i2l4119 3598                                          i2l4251 3454  
                                        i2l4411 0020                                          i2l4253 3456  
                                        i2l4413 002E                                          i2l4255 3462  
                                        i2l4415 003C                                          i2l4257 347E  
                                        i2l4409 0012                                          i2l4259 3482  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                          _PLLRDY 7E97  
                                        _SPBRG1 0FAF                                ?_CCP2_Initialize 0001  
                                        _TXREG1 0FAD                                __end_of___xxtofl 2928  
                                        _TXSTA1 0FAC            __end_of_TMR1_DefaultInterruptHandler 373A  
                  _TMR1_DefaultInterruptHandler 3738                                    vfprintf@cfmt 00AC  
                                        ___flge 2BA8                                          ___fleq 2E64  
                               _nrf2401_comando 36CC                                       ??___fladd 000D  
                                        ___wmul 359E                                       ??___fldiv 003C  
                                     ??___flneg 0009                                       ??___flmul 001B  
                                     ??___flsub 0034                                       ??___fltol 0009  
                                        _efgtoa 0824                                          _conteo 00DD  
                      ?_EUSART1_SetErrorHandler 0005                                          _floorf 2172  
                                        _memcpy 30E4                            read_prec_or_width@ap 000C  
                                        _offset 0162                                          clear_0 315A  
                                        clear_1 3166                                          isa$std 0001  
                                        pad@buf 0016                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          _strcpy 33E0  
                                        fputc@c 0007                                          fputs@c 0012  
                                        fputs@i 0013                                          fputs@s 000F  
                               ___fpclassifyf@e 000D                                 ___fpclassifyf@u 000F  
                               ___fpclassifyf@x 0005                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                        ADC_GetConversion@channel 0009  
                              __end_of_vfprintf 32E0                                 ??_EUSART1_Write 0005  
      TMR1_SetInterruptHandler@InterruptHandler 0005                                       ??_sprintf 0057  
                       __end_of_TMR1_WriteTimer 359E                           __end_of_TMR1_CallBack 3212  
                                    ___flge@ff1 002C                                      ___flge@ff2 0030  
                               ??___fpclassifyf 0009                                ?_TMR1_Initialize 0001  
                                  ___xxtofl@arg 000F                                    ___xxtofl@exp 000E  
                             _SYSTEM_Initialize 3602                                    ___xxtofl@val 0005  
                                    ___fleq@ff1 0005                                      ___fleq@ff2 0009  
                          nrF2401_init_RX@canal 000B                                      __accesstop 0060  
                       __end_of__initialization 3174                                      ___flneg@f1 0005  
                                  ?_spi_s_write 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 0001                                      ___fltol@f1 0005  
                          _EUSART1_Write_string 34C6                              nrf2401_write@valor 0007  
                                __pcstackCOMRAM 0001                                    __pidataBANK1 36EE  
                           ??_SYSTEM_Initialize 0007                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 2E64                                   __end_of_fputs 3360  
                                 __end_of_putch 3704                                ?_nrF2401_init_RX 0001  
                                       ??_fputc 000A                       __end_of_SYSTEM_Initialize 3620  
                                       ??_fputs 0012                                         ??_putch 0006  
                                    __pbssBANK0 00C1                                      __pbssBANK1 0100  
                       __end_of_nrf2401_comando 36E0                           ?_EUSART1_Write_string 0006  
                              _get_corriente_AC 2598                 __end_of_EUSART1_SetErrorHandler 372C  
                        nrf2401_comando@comando 0007                           __end_of_nrf2401_write 3658  
                                       ?___flge 002C                                         ?___fleq 0005  
                                       ?___wmul 0005                                      ??_TMR1_ISR 0003  
                                       ?_efgtoa 006A                                         _CCP2CON 0F97  
                                       ?_floorf 004D                                         ?_memcpy 0005  
                                       ?_strcpy 0005          __end_of_EUSART1_SetFramingErrorHandler 3722  
                _EUSART1_SetFramingErrorHandler 3718                                      _get_Status 372C  
                                     ?___xxtofl 0005                                         _OSCCON2 0FD2  
                      ?_nrf2401_direccion_TX_RX 0007                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0FB0                   nrf2401_direccion_TX_RX@cont_s 000A  
                              ?_TMR1_WriteTimer 0001                            _ADC_InterruptHandler 00F5  
                                       __Hparam 0000                                         __Lparam 0000  
                                  _nrf2401_read 3620                                         ___fladd 120C  
                                       ___fldiv 1AF6                                         ___flneg 348E  
                                       ___flmul 16CC                                         ___flsub 3258  
                                       ___fltol 2AA2                                _nrf2401_haydatos 35E4  
                                     ?_vfprintf 00A9                                    __psmallconst 0800  
                                    _currentSeg 00CD                                    _direccion_rx 0801  
                                  _direccion_tx 080A                                         __pcinit 3134  
                                       __ramtop 0800                             _EUSART1_is_tx_ready 354E  
                                       __ptext0 2928                                         __ptext1 1E90  
                                       __ptext2 32E0                                         __ptext3 329E  
                                       __ptext4 2388                                         __ptext5 2F0E  
                                       __ptext6 359E                                         __ptext7 0824  
                                       __ptext8 33E0                                         __ptext9 3028  
                ??_TMR1_DefaultInterruptHandler 0001                                       _T1CONbits 0FCD  
                              spi_s_write@dato_ 0005                           _OSCILLATOR_Initialize 35C4  
                         read_prec_or_width@fmt 000B                                      ??___xxtofl 0009  
                            _EUSART1_Initialize 33A0                        ??_PIN_MANAGER_Initialize 0005  
                     ?_TMR1_SetInterruptHandler 0005                                         efgtoa@c 006F  
                                       efgtoa@d 007D                                         efgtoa@e 0081  
                                       efgtoa@f 006B                                         efgtoa@g 0094  
                                       efgtoa@h 008B                                         efgtoa@i 0089  
                                       efgtoa@l 008F                                         efgtoa@m 007F  
                                       efgtoa@n 0098                                         efgtoa@p 0074  
                                       efgtoa@t 0076                                         efgtoa@u 009A  
                                       efgtoa@w 0083                        EUSART1_Write_string@data 0006  
                             __end_of_intervalo 080A                                         _sprintf 32E0  
                                       _voltaje 00D9               nrf2401_direccion_TX_RX@direccion_ 0007  
                          end_of_initialization 3174                                         floorf@e 0064  
                                       floorf@m 0060                                         floorf@u 0066  
                                       floorf@x 004D                             ?_EUSART1_Initialize 0001  
                          ?_EUSART1_is_tx_ready 0001                                         memcpy@d 000C  
                                       memcpy@n 0009                                         memcpy@s 000E  
                                       fputc@fp 0009                          ??_EUSART1_Write_string 0008  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00F9  
                                       fputs@fp 0011                                ?_nrf2401_comando 0001  
                            _read_prec_or_width 2F0E                               __end_of_vfpfcnvrt 2598  
                                    efgtoa@mode 007B                                      efgtoa@sign 0093  
                                       postdec1 0FE5                                         postdec2 0FDD  
                           ?_read_prec_or_width 000B                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 00A3                                      ??_vfprintf 0057  
                          ??_EUSART1_Initialize 0007                                         strcpy@d 0009  
                                     _PORTBbits 0F81                                     ?_get_Status 0001  
                                    _spi_s_init 368A                                      _spi_s_read 3212  
                                   ___fladd@grs 0014                                   ___xxtofl@sign 000D  
                               nrf2401_read@reg 0007                                       _TRISBbits 0F93  
                                     _TRISCbits 0F94                            ??_read_prec_or_width 000D  
                                   ___fldiv@grs 0047                                     ___fldiv@rem 0040  
                           _trip_protec_current 1E90                             EUSART1_Write@txData 0005  
                         ??_EUSART1_is_tx_ready 0005                                     ___flmul@grs 0021  
                          ?_trip_protec_current 0001                    __end_of_INTERRUPT_Initialize 3738  
                                __end_of___flge 2CAC                                  __end_of___fleq 2F0E  
                                   vfpfcnvrt@ap 00A0                                     vfpfcnvrt@cp 00A8  
                                   vfpfcnvrt@fp 009E                                  __end_of___wmul 35C4  
                                __end_of_efgtoa 120C                                  _ADC_Initialize 36A0  
                                __end_of_floorf 2388                                  __end_of_memcpy 3134  
                        ?_OSCILLATOR_Initialize 0001                                      floorf@F521 00C1  
                                __end_of_strcpy 341A                             start_initialization 3134  
                      __end_of_get_corriente_AC 2774                                     __end_of_pad 308E  
                               spi_s_read@dato_ 0005                                     putch@txData 0006  
                         __end_of_EUSART1_Write 36CC                           __end_of___fpclassifyf 2DAA  
                                 ??_flush_TX_RX 0009                                     vfprintf@fmt 00AA  
                         ??_trip_protec_current 0038                                        ??___flge 0034  
                                      ??___fleq 000D                                  _nrf2401_recibe 3658  
                                      ??___wmul 0009                                        ??_efgtoa 0070  
                        __end_of_ADC_Initialize 36B6                                     __pdataBANK1 0162  
                                      ??_floorf 0051                                        ??_memcpy 000B  
                                      ??_strcpy 0008                                       ___fladd@a 0009  
                                     ___fladd@b 0005                                     ?_spi_s_init 0001  
                                   ?_spi_s_read 0001                                       ___fldiv@a 0038  
                                     ___fldiv@b 0034                           TMR1_ISR@CountCallBack 00EF  
                                     ___flmul@a 0017                                       ___flmul@b 0013  
                                   __pbssCOMRAM 0057                                       ___flsub@a 0030  
                                     ___flsub@b 002C                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 016E                               get_corriente_AC@i 0060  
                      __end_of_nrf2401_haydatos 3602                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                     _efgtoa$1965 0078  
                                     _main$2367 0170                          __end_of_nrf2401_recibe 3672  
                        _PIN_MANAGER_Initialize 34F6                         _EUSART1_is_tx_ready$282 0005  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 370E  
                                   _dato_serial 00FE                                        ?___fladd 0005  
                                      ?___fldiv 0034                                        ?___flneg 0005  
                                      ?___flmul 0013                                        ?___flsub 002C  
                                      ?___fltol 0005                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0003                             __end_of_flush_TX_RX 368A  
                                   __smallconst 0800                               ??_CCP2_Initialize 0005  
               nrf2401_direccion_TX_RX@registro 0008                                        _BAUDCON1 0FB8  
            _EUSART1_DefaultOverrunErrorHandler 0000                            _EUSART1_ErrorHandler 00F7  
                       _EUSART1_SetErrorHandler 3722                                        ?_sprintf 00AD  
                          _INTERRUPT_Initialize 3734                                   _TMR1_CallBack 31CA  
                                     _intervalo 0806                                  ___wmul@product 0009  
       EUSART1_SetErrorHandler@interruptHandler 0005                                        _LATBbits 0F8A  
                                      _LATCbits 0F8B                                        _PIE1bits 0F9D  
                                      i2u404_40 347E                                        i2u404_41 347A  
                                      i2u422_40 0020                                        i2u422_41 001C  
                               ?_nrf2401_recibe 0001                                        i2u423_40 002E  
                                      i2u423_41 002A                                        i2u424_40 003C  
                                      i2u424_41 0038                                        _PIR1bits 0F9E  
                                      i2u384_40 3584                                        i2u384_41 3580  
                                      i2u385_40 31F6                                        i2u385_41 31F2  
                                      i2u386_48 31FC                                        i2u386_49 3210  
                                      _RCONbits 0FD0                                        _TMR1_ISR 3454  
                                     _vfpfcnvrt 2388                               ??_TMR1_Initialize 0007  
                                    _ADCON0bits 0FC2                               ___wmul@multiplier 0005  
                                  ??_get_Status 0009                                      vfpfcnvrt@c 00A7  
                                   _INTCON2bits 0FF1                                       copy_data0 3148  
                    get_corriente_AC@n_muestras 004D                           ?_INTERRUPT_Initialize 0001  
                                ?_TMR1_CallBack 0001                                   ??_spi_s_write 0005  
                                      __Hrparam 0000                              __end_of_get_Status 3734  
                             ??_nrF2401_init_RX 000B                                       memcpy@tmp 000B  
                                    vfprintf@ap 00AB                                        __Lrparam 0000  
                                    vfprintf@fp 00A9                               _ADC_GetConversion 341A  
                                   _flush_TX_RX 3672                                   _nrf2401_write 363C  
                       ??_OSCILLATOR_Initialize 0005                              ?_ADC_GetConversion 0005  
                                    ?_vfpfcnvrt 009E                        _TMR1_SetInterruptHandler 3704  
                            ___fpclassifyf@F465 00C5                           _TMR1_InterruptHandler 00F1  
                     ??_EUSART1_SetErrorHandler 0007                     _EUSART1_DefaultErrorHandler 0000  
                           ??_ADC_GetConversion 0007                                      sprintf@fmt 00AF  
                                      ___xxtofl 2774                     __end_of_EUSART1_is_tx_ready 3576  
                             ?_get_corriente_AC 004D                                        __ptext10 3320  
                                      __ptext11 2DAA                                        __ptext20 368A  
                                      __ptext12 36FA                                        __ptext21 3658  
                                      __ptext13 30E4                                      _T1GCONbits 0FCC  
                                      __ptext30 36CC                                        __ptext22 35E4  
                                      __ptext14 308E                                        __ptext31 3182  
                                      __ptext23 372C                                        __ptext15 2172  
                                      __ptext40 3602                                        __ptext32 2598  
                                      __ptext24 3620                                        __ptext16 2CAC  
                                      __ptext41 3524                                        __ptext33 2774  
                                      __ptext25 3212                                        __ptext17 2AA2  
                                      __ptext50 36E0                                        __ptext42 3704  
                                      __ptext34 3258                                        __ptext26 2FB4  
                                      __ptext18 348E                                        __ptext51 36A0  
                                      __ptext43 34F6                                        __ptext35 120C  
                                      __ptext27 3360                                        __ptext19 2E64  
                                      __ptext60 0000                                        __ptext52 354E  
                                      __ptext44 35C4                                        __ptext36 16CC  
                                      __ptext28 3672                                        __ptext53 34C6  
                                      __ptext45 3734                                        __ptext37 2BA8  
                                      __ptext29 363C                                        __ptext54 36B6  
                                      __ptext46 33A0                                        __ptext38 1AF6  
                                      __ptext47 370E                                        __ptext39 341A  
                                      __ptext56 3454                                        __ptext48 3718  
                                      __ptext57 3576                                        __ptext49 3722  
                                      __ptext58 31CA                                        __ptext59 3738  
                            ??_get_corriente_AC 0051                                      strcpy@dest 0005  
                             spi_s_write@cont_s 0006                         _nrf2401_direccion_TX_RX 3360  
                                _previousMillis 00C9                       __end_of_ADC_GetConversion 3454  
                                      _relacion 0166                                        efgtoa@fp 006A  
                                      efgtoa@ne 0072                                        efgtoa@pp 007A  
                                      efgtoa@ou 0085  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      isa$xinst 0000                                  ?_nrf2401_write 0007  
                           __end_of_spi_s_write 31CA                                        int$flags 005B  
                                      _vfprintf 329E              __end_of_INTERRUPT_InterruptManager 004C  
                    _INTERRUPT_InterruptManager 0008                               ??_TMR1_WriteTimer 0003  
                   _EUSART1_FramingErrorHandler 00FB                                    _sensibilidad 016A  
                                  ??_spi_s_init 0005                                    ??_spi_s_read 0005  
                                    _INTCONbits 0FF2                                        memcpy@d1 0005  
                                      memcpy@s1 0007                          ??_INTERRUPT_Initialize 0005  
                               ??_TMR1_CallBack 0001                                        intlevel2 0000  
                                     sprintf@ap 00B4                               ?_nrf2401_haydatos 0001  
                                  _valor_string 0154                         ?_PIN_MANAGER_Initialize 0001  
                   __end_of_trip_protec_current 2172                              ??_nrf2401_haydatos 0009  
        __end_of_EUSART1_SetOverrunErrorHandler 3718                  _EUSART1_SetOverrunErrorHandler 370E  
                                     strcpy@src 0007                                      _RCSTA1bits 0FAB  
                              ??_ADC_Initialize 0005                                   ?_nrf2401_read 0001  
                            __end_of_spi_s_init 36A0                              __end_of_spi_s_read 3258  
                               _CCP2_Initialize 36E0                                     efgtoa@nmode 007C  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                                     ??_vfpfcnvrt 00A1  
                            _eusart1RxLastError 00FF                                        sprintf@f 00B5  
                                      sprintf@s 00AD                               ??_nrf2401_comando 0007  
                                 ___fladd@signs 0011                       ??_nrf2401_direccion_TX_RX 0009  
                __end_of_PIN_MANAGER_Initialize 3524                                ??_nrf2401_recibe 0007  
                                  ___fladd@aexp 0012                                    ___fladd@bexp 0013  
                             nrf2401_read@dato_ 0008                                     _spi_s_write 3182  
                               _TMR1_Initialize 3524                                 ??_nrf2401_write 0008  
                                ??_nrf2401_read 0007  
