

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jun 19 23:22:25 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Generated 09/02/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F25K50 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    71  0000                     
    72 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    73  0000                     
    74 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    75  0000                     
    76                           	psect	smallconst
    77  000800                     __psmallconst:
    78                           	callstack 0
    79  000800  00                 	db	0
    80  000801                     _direccion_rx:
    81                           	callstack 0
    82  000801  11                 	db	17
    83  000802  11                 	db	17
    84  000803  11                 	db	17
    85  000804  11                 	db	17
    86  000805  11                 	db	17
    87  000806                     __end_of_direccion_rx:
    88                           	callstack 0
    89  000806                     _direccion_tx:
    90                           	callstack 0
    91  000806  11                 	db	17
    92  000807  11                 	db	17
    93  000808  11                 	db	17
    94  000809  11                 	db	17
    95  00080A  11                 	db	17
    96  00080B                     __end_of_direccion_tx:
    97                           	callstack 0
    98  0000                     _TMR0L	set	4054
    99  0000                     _TMR0H	set	4055
   100  0000                     _TXREG1	set	4013
   101  0000                     _RCREG1	set	4014
   102  0000                     _SPBRG1	set	4015
   103  0000                     _TXSTA1	set	4012
   104  0000                     _T0CON	set	4053
   105  0000                     _LATCbits	set	3979
   106  0000                     _LATBbits	set	3978
   107  0000                     _TRISBbits	set	3987
   108  0000                     _TRISCbits	set	3988
   109  0000                     _RCSTA1bits	set	4011
   110  0000                     _TXSTA1bits	set	4012
   111  0000                     _PLLRDY	set	32407
   112  0000                     _ANSELA	set	3931
   113  0000                     _ANSELB	set	3932
   114  0000                     _ANSELC	set	3933
   115  0000                     _LATA	set	3977
   116  0000                     _OSCTUNE	set	3995
   117  0000                     _PIR1bits	set	3998
   118  0000                     _RCSTA1	set	4011
   119  0000                     _BAUDCON1	set	4024
   120  0000                     _RCONbits	set	4048
   121  0000                     _OSCCON2	set	4050
   122  0000                     _OSCCON	set	4051
   123  0000                     _ACTCON	set	4021
   124  0000                     _SPBRGH1	set	4016
   125  0000                     _T0CONbits	set	4053
   126  0000                     _INTCON2bits	set	4081
   127  0000                     _TRISA	set	3986
   128  0000                     _LATC	set	3979
   129  0000                     _LATB	set	3978
   130  0000                     _TRISC	set	3988
   131  0000                     _TRISB	set	3987
   132  0000                     _PORTBbits	set	3969
   133  0000                     _WPUB	set	3973
   134  0000                     _INTCONbits	set	4082
   135  0000                     _INTCON3bits	set	4080
   136  00080B  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141  000952                     __pcinit:
   142                           	callstack 0
   143  000952                     start_initialization:
   144                           	callstack 0
   145  000952                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Clear objects allocated to COMRAM (76 bytes)
   149  000952  EE00  F001         	lfsr	0,__pbssCOMRAM
   150  000956  0E4C               	movlw	76
   151  000958                     clear_0:
   152  000958  6AEE               	clrf	postinc0,c
   153  00095A  06E8               	decf	wreg,f,c
   154  00095C  E1FD               	bnz	clear_0
   155  00095E                     end_of_initialization:
   156                           	callstack 0
   157  00095E                     __end_of__initialization:
   158                           	callstack 0
   159  00095E  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   160  000960  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   161  000962  0E00               	movlw	low (__Lmediumconst shr (0+16))
   162  000964  6EF8               	movwf	tblptru,c
   163  000966  0100               	movlb	0
   164  000968  EF9A  F004         	goto	_main	;jump to C main() function
   165                           
   166                           	psect	bssCOMRAM
   167  000001                     __pbssCOMRAM:
   168                           	callstack 0
   169  000001                     _trama:
   170                           	callstack 0
   171  000001                     	ds	30
   172  00001F                     _procesa:
   173                           	callstack 0
   174  00001F                     	ds	30
   175  00003D                     _INT1_InterruptHandler:
   176                           	callstack 0
   177  00003D                     	ds	2
   178  00003F                     _timer0ReloadVal:
   179                           	callstack 0
   180  00003F                     	ds	2
   181  000041                     _TMR0_InterruptHandler:
   182                           	callstack 0
   183  000041                     	ds	2
   184  000043                     _EUSART1_ErrorHandler:
   185                           	callstack 0
   186  000043                     	ds	2
   187  000045                     _EUSART1_OverrunErrorHandler:
   188                           	callstack 0
   189  000045                     	ds	2
   190  000047                     _EUSART1_FramingErrorHandler:
   191                           	callstack 0
   192  000047                     	ds	2
   193  000049                     _flag_rx:
   194                           	callstack 0
   195  000049                     	ds	1
   196  00004A                     _datorx:
   197                           	callstack 0
   198  00004A                     	ds	1
   199  00004B                     _puntero:
   200                           	callstack 0
   201  00004B                     	ds	1
   202  00004C                     _eusart1RxLastError:
   203                           	callstack 0
   204  00004C                     	ds	1
   205                           
   206                           	psect	cstackCOMRAM
   207  00004D                     __pcstackCOMRAM:
   208                           	callstack 0
   209  00004D                     ??_INTERRUPT_InterruptManager:
   210  00004D                     
   211                           ; 1 bytes @ 0x0
   212  00004D                     	ds	2
   213  00004F                     EUSART1_SetFramingErrorHandler@interruptHandler:
   214                           	callstack 0
   215  00004F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   216                           	callstack 0
   217  00004F                     EUSART1_SetErrorHandler@interruptHandler:
   218                           	callstack 0
   219  00004F                     TMR0_SetInterruptHandler@InterruptHandler:
   220                           	callstack 0
   221  00004F                     INT1_SetInterruptHandler@InterruptHandler:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x2
   225  00004F                     	ds	2
   226  000051                     ??_TMR0_Initialize:
   227  000051                     
   228                           ; 1 bytes @ 0x4
   229  000051                     	ds	2
   230  000053                     
   231                           ; 1 bytes @ 0x6
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 137 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   251 ;;      Params:         0       0       0       0       0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels required when called: 7
   257 ;; This function calls:
   258 ;;		_SYSTEM_Initialize
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text0
   265  000934                     __ptext0:
   266                           	callstack 0
   267  000934                     _main:
   268                           	callstack 24
   269  000934                     
   270                           ;main.c: 140: SYSTEM_Initialize();
   271  000934  ECB6  F004         	call	_SYSTEM_Initialize	;wreg free
   272  000938                     
   273                           ;main.c: 148: (INTCONbits.GIE = 1);
   274  000938  8EF2               	bsf	242,7,c	;volatile
   275  00093A                     
   276                           ;main.c: 154: (INTCONbits.PEIE = 1);
   277  00093A  8CF2               	bsf	242,6,c	;volatile
   278  00093C                     
   279                           ;main.c: 159: ANSELA = 0b00000111;
   280  00093C  0E07               	movlw	7
   281  00093E  010F               	movlb	15	; () banked
   282  000940  6F5B               	movwf	91,b	;volatile
   283  000942                     
   284                           ; BSR set to: 15
   285                           ;main.c: 160: ANSELB = 0b00000000;
   286  000942  0E00               	movlw	0
   287  000944  6F5C               	movwf	92,b	;volatile
   288  000946                     
   289                           ; BSR set to: 15
   290                           ;main.c: 161: ANSELC = 0x00;
   291  000946  0E00               	movlw	0
   292  000948  6F5D               	movwf	93,b	;volatile
   293  00094A                     l271:
   294  00094A  EFA5  F004         	goto	l271
   295  00094E  EF2F  F000         	goto	start
   296  000952                     __end_of_main:
   297                           	callstack 0
   298                           
   299 ;; *************** function _SYSTEM_Initialize *****************
   300 ;; Defined at:
   301 ;;		line 50 in file "mcc_generated_files/mcc.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; Hardware stack levels required when called: 6
   322 ;; This function calls:
   323 ;;		_EUSART1_Initialize
   324 ;;		_EXT_INT_Initialize
   325 ;;		_INTERRUPT_Initialize
   326 ;;		_OSCILLATOR_Initialize
   327 ;;		_PIN_MANAGER_Initialize
   328 ;;		_TMR0_Initialize
   329 ;; This function is called by:
   330 ;;		_main
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text1
   335  00096C                     __ptext1:
   336                           	callstack 0
   337  00096C                     _SYSTEM_Initialize:
   338                           	callstack 24
   339  00096C                     
   340                           ;mcc.c: 53: INTERRUPT_Initialize();
   341  00096C  ECEA  F004         	call	_INTERRUPT_Initialize	;wreg free
   342  000970                     
   343                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   344  000970  EC5C  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   345  000974                     
   346                           ;mcc.c: 55: OSCILLATOR_Initialize();
   347  000974  EC8A  F004         	call	_OSCILLATOR_Initialize	;wreg free
   348  000978                     
   349                           ;mcc.c: 56: EXT_INT_Initialize();
   350  000978  ECC3  F004         	call	_EXT_INT_Initialize	;wreg free
   351  00097C                     
   352                           ;mcc.c: 57: TMR0_Initialize();
   353  00097C  EC41  F004         	call	_TMR0_Initialize	;wreg free
   354  000980                     
   355                           ;mcc.c: 58: EUSART1_Initialize();
   356  000980  EC06  F004         	call	_EUSART1_Initialize	;wreg free
   357  000984  0012               	return		;funcret
   358  000986                     __end_of_SYSTEM_Initialize:
   359                           	callstack 0
   360                           
   361 ;; *************** function _TMR0_Initialize *****************
   362 ;; Defined at:
   363 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   377 ;;      Params:         0       0       0       0       0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0       0       0
   379 ;;      Temps:          2       0       0       0       0       0       0       0       0
   380 ;;      Totals:         2       0       0       0       0       0       0       0       0
   381 ;;Total ram usage:        2 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; Hardware stack levels required when called: 5
   384 ;; This function calls:
   385 ;;		_TMR0_SetInterruptHandler
   386 ;; This function is called by:
   387 ;;		_SYSTEM_Initialize
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text2
   392  000882                     __ptext2:
   393                           	callstack 0
   394  000882                     _TMR0_Initialize:
   395                           	callstack 24
   396  000882                     
   397                           ;tmr0.c: 72: T0CONbits.T08BIT = 0;
   398  000882  9CD5               	bcf	213,6,c	;volatile
   399  000884                     
   400                           ;tmr0.c: 75: TMR0H = 0x15;
   401  000884  0E15               	movlw	21
   402  000886  6ED7               	movwf	215,c	;volatile
   403                           
   404                           ;tmr0.c: 78: TMR0L = 0x9F;
   405  000888  0E9F               	movlw	159
   406  00088A  6ED6               	movwf	214,c	;volatile
   407  00088C                     
   408                           ;tmr0.c: 82: timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   409  00088C  50D6               	movf	214,w,c	;volatile
   410  00088E  CFD7 F051          	movff	4055,??_TMR0_Initialize	;volatile
   411  000892  6A52               	clrf	(??_TMR0_Initialize+1)^0,c
   412  000894  C051  F052         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   413  000898  6A51               	clrf	??_TMR0_Initialize^0,c
   414  00089A  1051               	iorwf	??_TMR0_Initialize^0,w,c
   415  00089C  6E3F               	movwf	_timer0ReloadVal^0,c	;volatile
   416  00089E  5052               	movf	(??_TMR0_Initialize+1)^0,w,c
   417  0008A0  6E40               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
   418  0008A2                     
   419                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
   420  0008A2  94F2               	bcf	242,2,c	;volatile
   421  0008A4                     
   422                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
   423  0008A4  8AF2               	bsf	242,5,c	;volatile
   424  0008A6                     
   425                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   426  0008A6  0ED8               	movlw	low _TMR0_DefaultInterruptHandler
   427  0008A8  6E4F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   428  0008AA  0E09               	movlw	high _TMR0_DefaultInterruptHandler
   429  0008AC  6E50               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   430  0008AE  ECCD  F004         	call	_TMR0_SetInterruptHandler	;wreg free
   431  0008B2                     
   432                           ;tmr0.c: 94: T0CON = 0x90;
   433  0008B2  0E90               	movlw	144
   434  0008B4  6ED5               	movwf	213,c	;volatile
   435  0008B6  0012               	return		;funcret
   436  0008B8                     __end_of_TMR0_Initialize:
   437                           	callstack 0
   438                           
   439 ;; *************** function _TMR0_SetInterruptHandler *****************
   440 ;; Defined at:
   441 ;;		line 157 in file "mcc_generated_files/tmr0.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   444 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   456 ;;      Params:         2       0       0       0       0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0
   459 ;;      Totals:         2       0       0       0       0       0       0       0       0
   460 ;;Total ram usage:        2 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 4
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_TMR0_Initialize
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text3
   471  00099A                     __ptext3:
   472                           	callstack 0
   473  00099A                     _TMR0_SetInterruptHandler:
   474                           	callstack 24
   475  00099A                     
   476                           ;tmr0.c: 158: TMR0_InterruptHandler = InterruptHandler;
   477  00099A  C04F  F041         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   478  00099E  C050  F042         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   479  0009A2  0012               	return		;funcret
   480  0009A4                     __end_of_TMR0_SetInterruptHandler:
   481                           	callstack 0
   482                           
   483 ;; *************** function _PIN_MANAGER_Initialize *****************
   484 ;; Defined at:
   485 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   499 ;;      Params:         0       0       0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 4
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_SYSTEM_Initialize
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text4
   514  0008B8                     __ptext4:
   515                           	callstack 0
   516  0008B8                     _PIN_MANAGER_Initialize:
   517                           	callstack 25
   518  0008B8                     
   519                           ;pin_manager.c: 60: LATA = 0x00;
   520  0008B8  0E00               	movlw	0
   521  0008BA  6E89               	movwf	137,c	;volatile
   522                           
   523                           ;pin_manager.c: 61: LATB = 0x00;
   524  0008BC  0E00               	movlw	0
   525  0008BE  6E8A               	movwf	138,c	;volatile
   526                           
   527                           ;pin_manager.c: 62: LATC = 0x00;
   528  0008C0  0E00               	movlw	0
   529  0008C2  6E8B               	movwf	139,c	;volatile
   530                           
   531                           ;pin_manager.c: 67: TRISA = 0xC7;
   532  0008C4  0EC7               	movlw	199
   533  0008C6  6E92               	movwf	146,c	;volatile
   534                           
   535                           ;pin_manager.c: 68: TRISB = 0xFE;
   536  0008C8  0EFE               	movlw	254
   537  0008CA  6E93               	movwf	147,c	;volatile
   538                           
   539                           ;pin_manager.c: 69: TRISC = 0x87;
   540  0008CC  0E87               	movlw	135
   541  0008CE  6E94               	movwf	148,c	;volatile
   542                           
   543                           ;pin_manager.c: 74: ANSELC = 0x04;
   544  0008D0  0E04               	movlw	4
   545  0008D2  010F               	movlb	15	; () banked
   546  0008D4  6F5D               	movwf	93,b	;volatile
   547                           
   548                           ;pin_manager.c: 75: ANSELB = 0x3C;
   549  0008D6  0E3C               	movlw	60
   550  0008D8  6F5C               	movwf	92,b	;volatile
   551                           
   552                           ;pin_manager.c: 76: ANSELA = 0x07;
   553  0008DA  0E07               	movlw	7
   554  0008DC  6F5B               	movwf	91,b	;volatile
   555                           
   556                           ;pin_manager.c: 81: WPUB = 0x00;
   557  0008DE  0E00               	movlw	0
   558  0008E0  6E85               	movwf	133,c	;volatile
   559  0008E2                     
   560                           ; BSR set to: 15
   561                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
   562  0008E2  8EF1               	bsf	241,7,c	;volatile
   563  0008E4                     
   564                           ; BSR set to: 15
   565  0008E4  0012               	return		;funcret
   566  0008E6                     __end_of_PIN_MANAGER_Initialize:
   567                           	callstack 0
   568                           
   569 ;; *************** function _OSCILLATOR_Initialize *****************
   570 ;; Defined at:
   571 ;;		line 61 in file "mcc_generated_files/mcc.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   585 ;;      Params:         0       0       0       0       0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 4
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_SYSTEM_Initialize
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text5
   600  000914                     __ptext5:
   601                           	callstack 0
   602  000914                     _OSCILLATOR_Initialize:
   603                           	callstack 25
   604  000914                     
   605                           ;mcc.c: 64: OSCCON = 0x70;
   606  000914  0E70               	movlw	112
   607  000916  6ED3               	movwf	211,c	;volatile
   608                           
   609                           ;mcc.c: 66: OSCCON2 = 0x00;
   610  000918  0E00               	movlw	0
   611  00091A  6ED2               	movwf	210,c	;volatile
   612                           
   613                           ;mcc.c: 68: OSCTUNE = 0x80;
   614  00091C  0E80               	movlw	128
   615  00091E  6E9B               	movwf	155,c	;volatile
   616                           
   617                           ;mcc.c: 70: ACTCON = 0x00;
   618  000920  0E00               	movlw	0
   619  000922  6EB5               	movwf	181,c	;volatile
   620  000924                     l122:
   621  000924  AED2               	btfss	4050,7,c	;volatile
   622  000926  EF97  F004         	goto	u51
   623  00092A  EF99  F004         	goto	u50
   624  00092E                     u51:
   625  00092E  EF92  F004         	goto	l122
   626  000932                     u50:
   627  000932  0012               	return		;funcret
   628  000934                     __end_of_OSCILLATOR_Initialize:
   629                           	callstack 0
   630                           
   631 ;; *************** function _INTERRUPT_Initialize *****************
   632 ;; Defined at:
   633 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		None
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   647 ;;      Params:         0       0       0       0       0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 4
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_SYSTEM_Initialize
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text6
   662  0009D4                     __ptext6:
   663                           	callstack 0
   664  0009D4                     _INTERRUPT_Initialize:
   665                           	callstack 25
   666  0009D4                     
   667                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   668  0009D4  9ED0               	bcf	208,7,c	;volatile
   669  0009D6  0012               	return		;funcret
   670  0009D8                     __end_of_INTERRUPT_Initialize:
   671                           	callstack 0
   672                           
   673 ;; *************** function _EXT_INT_Initialize *****************
   674 ;; Defined at:
   675 ;;		line 60 in file "mcc_generated_files/ext_int.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   689 ;;      Params:         0       0       0       0       0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; Hardware stack levels required when called: 5
   696 ;; This function calls:
   697 ;;		_INT1_SetInterruptHandler
   698 ;; This function is called by:
   699 ;;		_SYSTEM_Initialize
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text7
   704  000986                     __ptext7:
   705                           	callstack 0
   706  000986                     _EXT_INT_Initialize:
   707                           	callstack 24
   708  000986                     
   709                           ;ext_int.c: 65: (INTCON3bits.INT1IF = 0);
   710  000986  90F0               	bcf	240,0,c	;volatile
   711                           
   712                           ;ext_int.c: 66: (INTCON2bits.INTEDG1 = 1);
   713  000988  8AF1               	bsf	241,5,c	;volatile
   714  00098A                     
   715                           ;ext_int.c: 68: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
   716  00098A  0EDA               	movlw	low _INT1_DefaultInterruptHandler
   717  00098C  6E4F               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
   718  00098E  0E09               	movlw	high _INT1_DefaultInterruptHandler
   719  000990  6E50               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
   720  000992  ECD2  F004         	call	_INT1_SetInterruptHandler	;wreg free
   721  000996                     
   722                           ;ext_int.c: 69: (INTCON3bits.INT1IE = 1);
   723  000996  86F0               	bsf	240,3,c	;volatile
   724  000998  0012               	return		;funcret
   725  00099A                     __end_of_EXT_INT_Initialize:
   726                           	callstack 0
   727                           
   728 ;; *************** function _INT1_SetInterruptHandler *****************
   729 ;; Defined at:
   730 ;;		line 51 in file "mcc_generated_files/ext_int.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   733 ;;		 -> INT1_DefaultInterruptHandler(1), 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   745 ;;      Params:         2       0       0       0       0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0
   748 ;;      Totals:         2       0       0       0       0       0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 4
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_EXT_INT_Initialize
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text8
   760  0009A4                     __ptext8:
   761                           	callstack 0
   762  0009A4                     _INT1_SetInterruptHandler:
   763                           	callstack 24
   764  0009A4                     
   765                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
   766  0009A4  C04F  F03D         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   767  0009A8  C050  F03E         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   768  0009AC  0012               	return		;funcret
   769  0009AE                     __end_of_INT1_SetInterruptHandler:
   770                           	callstack 0
   771                           
   772 ;; *************** function _EUSART1_Initialize *****************
   773 ;; Defined at:
   774 ;;		line 66 in file "mcc_generated_files/eusart1.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   788 ;;      Params:         0       0       0       0       0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 5
   795 ;; This function calls:
   796 ;;		_EUSART1_SetErrorHandler
   797 ;;		_EUSART1_SetFramingErrorHandler
   798 ;;		_EUSART1_SetOverrunErrorHandler
   799 ;; This function is called by:
   800 ;;		_SYSTEM_Initialize
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text9
   805  00080C                     __ptext9:
   806                           	callstack 0
   807  00080C                     _EUSART1_Initialize:
   808                           	callstack 24
   809  00080C                     
   810                           ;eusart1.c: 71: BAUDCON1 = 0x08;
   811  00080C  0E08               	movlw	8
   812  00080E  6EB8               	movwf	184,c	;volatile
   813                           
   814                           ;eusart1.c: 74: RCSTA1 = 0x90;
   815  000810  0E90               	movlw	144
   816  000812  6EAB               	movwf	171,c	;volatile
   817                           
   818                           ;eusart1.c: 77: TXSTA1 = 0x24;
   819  000814  0E24               	movlw	36
   820  000816  6EAC               	movwf	172,c	;volatile
   821                           
   822                           ;eusart1.c: 80: SPBRG1 = 0xE1;
   823  000818  0EE1               	movlw	225
   824  00081A  6EAF               	movwf	175,c	;volatile
   825                           
   826                           ;eusart1.c: 83: SPBRGH1 = 0x04;
   827  00081C  0E04               	movlw	4
   828  00081E  6EB0               	movwf	176,c	;volatile
   829  000820                     
   830                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
   831  000820  0E00               	movlw	0
   832  000822  6E4F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   833  000824  0E00               	movlw	0
   834  000826  6E50               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   835  000828  ECDC  F004         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   836  00082C                     
   837                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
   838  00082C  0E00               	movlw	0
   839  00082E  6E4F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   840  000830  0E00               	movlw	0
   841  000832  6E50               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   842  000834  ECD7  F004         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   843  000838                     
   844                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
   845  000838  0E00               	movlw	0
   846  00083A  6E4F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   847  00083C  0E00               	movlw	0
   848  00083E  6E50               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   849  000840  ECE1  F004         	call	_EUSART1_SetErrorHandler	;wreg free
   850  000844                     
   851                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
   852  000844  0E00               	movlw	0
   853  000846  6E4C               	movwf	_eusart1RxLastError^0,c	;volatile
   854  000848  0012               	return		;funcret
   855  00084A                     __end_of_EUSART1_Initialize:
   856                           	callstack 0
   857                           
   858 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   859 ;; Defined at:
   860 ;;		line 170 in file "mcc_generated_files/eusart1.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
   863 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         2       0       0       0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0
   878 ;;      Totals:         2       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:        2 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 4
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_EUSART1_Initialize
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text10
   890  0009AE                     __ptext10:
   891                           	callstack 0
   892  0009AE                     _EUSART1_SetOverrunErrorHandler:
   893                           	callstack 24
   894  0009AE                     
   895                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
   896  0009AE  C04F  F045         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   897  0009B2  C050  F046         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   898  0009B6  0012               	return		;funcret
   899  0009B8                     __end_of_EUSART1_SetOverrunErrorHandler:
   900                           	callstack 0
   901                           
   902 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   903 ;; Defined at:
   904 ;;		line 166 in file "mcc_generated_files/eusart1.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
   907 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         2       0       0       0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0
   922 ;;      Totals:         2       0       0       0       0       0       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 4
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_EUSART1_Initialize
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text11
   934  0009B8                     __ptext11:
   935                           	callstack 0
   936  0009B8                     _EUSART1_SetFramingErrorHandler:
   937                           	callstack 24
   938  0009B8                     
   939                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
   940  0009B8  C04F  F047         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
   941  0009BC  C050  F048         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
   942  0009C0  0012               	return		;funcret
   943  0009C2                     __end_of_EUSART1_SetFramingErrorHandler:
   944                           	callstack 0
   945                           
   946 ;; *************** function _EUSART1_SetErrorHandler *****************
   947 ;; Defined at:
   948 ;;		line 174 in file "mcc_generated_files/eusart1.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
   951 ;;		 -> EUSART1_DefaultErrorHandler(1), 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         2       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0
   966 ;;      Totals:         2       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        2 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 4
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_EUSART1_Initialize
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text12
   978  0009C2                     __ptext12:
   979                           	callstack 0
   980  0009C2                     _EUSART1_SetErrorHandler:
   981                           	callstack 24
   982  0009C2                     
   983                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
   984  0009C2  C04F  F043         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
   985  0009C6  C050  F044         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
   986  0009CA  0012               	return		;funcret
   987  0009CC                     __end_of_EUSART1_SetErrorHandler:
   988                           	callstack 0
   989                           
   990 ;; *************** function _INTERRUPT_InterruptManager *****************
   991 ;; Defined at:
   992 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1008 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1009 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 3
  1013 ;; This function calls:
  1014 ;;		_INT1_ISR
  1015 ;;		_TMR0_ISR
  1016 ;; This function is called by:
  1017 ;;		Interrupt level 2
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	intcode
  1022  000008                     __pintcode:
  1023                           	callstack 0
  1024  000008                     _INTERRUPT_InterruptManager:
  1025                           	callstack 24
  1026                           
  1027                           ;incstack = 0
  1028  000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1029  00000A  CFFA F04D          	movff	pclath,??_INTERRUPT_InterruptManager
  1030  00000E  CFFB F04E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1031  000012                     
  1032                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1033  000012  AAF2               	btfss	242,5,c	;volatile
  1034  000014  EF0E  F000         	goto	i2u19_41
  1035  000018  EF10  F000         	goto	i2u19_40
  1036  00001C                     i2u19_41:
  1037  00001C  EF19  F000         	goto	i2l1464
  1038  000020                     i2u19_40:
  1039  000020  A4F2               	btfss	242,2,c	;volatile
  1040  000022  EF15  F000         	goto	i2u20_41
  1041  000026  EF17  F000         	goto	i2u20_40
  1042  00002A                     i2u20_41:
  1043  00002A  EF19  F000         	goto	i2l1464
  1044  00002E                     i2u20_40:
  1045  00002E                     
  1046                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  1047  00002E  EC25  F004         	call	_TMR0_ISR	;wreg free
  1048  000032                     i2l1464:
  1049                           
  1050                           ;interrupt_manager.c: 64: };interrupt_manager.c: 65: if(INTCON3bits.INT1IE == 1 && INTCO
      +                          N3bits.INT1IF == 1)
  1051  000032  A6F0               	btfss	240,3,c	;volatile
  1052  000034  EF1E  F000         	goto	i2u21_41
  1053  000038  EF20  F000         	goto	i2u21_40
  1054  00003C                     i2u21_41:
  1055  00003C  EF29  F000         	goto	i2l340
  1056  000040                     i2u21_40:
  1057  000040  A0F0               	btfss	240,0,c	;volatile
  1058  000042  EF25  F000         	goto	i2u22_41
  1059  000046  EF27  F000         	goto	i2u22_40
  1060  00004A                     i2u22_41:
  1061  00004A  EF29  F000         	goto	i2l340
  1062  00004E                     i2u22_40:
  1063  00004E                     
  1064                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: INT1_ISR();
  1065  00004E  ECE6  F004         	call	_INT1_ISR	;wreg free
  1066  000052                     i2l340:
  1067  000052  C04E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1068  000056  C04D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1069  00005A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1070  00005C  0011               	retfie		f
  1071  00005E                     __end_of_INTERRUPT_InterruptManager:
  1072                           	callstack 0
  1073                           
  1074 ;; *************** function _TMR0_ISR *****************
  1075 ;; Defined at:
  1076 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1093 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 1
  1097 ;; This function calls:
  1098 ;;		Absolute function
  1099 ;;		_TMR0_DefaultInterruptHandler
  1100 ;; This function is called by:
  1101 ;;		_INTERRUPT_InterruptManager
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text14
  1106  00084A                     __ptext14:
  1107                           	callstack 0
  1108  00084A                     _TMR0_ISR:
  1109                           	callstack 25
  1110  00084A                     
  1111                           ;tmr0.c: 140: INTCONbits.TMR0IF = 0;
  1112  00084A  94F2               	bcf	242,2,c	;volatile
  1113  00084C                     
  1114                           ;tmr0.c: 144: TMR0H = timer0ReloadVal >> 8;
  1115  00084C  5040               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  1116  00084E  6ED7               	movwf	215,c	;volatile
  1117  000850                     
  1118                           ;tmr0.c: 145: TMR0L = (uint8_t) timer0ReloadVal;
  1119  000850  C03F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1120  000854                     
  1121                           ;tmr0.c: 147: if(TMR0_InterruptHandler)
  1122  000854  5041               	movf	_TMR0_InterruptHandler^0,w,c
  1123  000856  1042               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1124  000858  B4D8               	btfsc	status,2,c
  1125  00085A  EF31  F004         	goto	i2u12_41
  1126  00085E  EF33  F004         	goto	i2u12_40
  1127  000862                     i2u12_41:
  1128  000862  EF40  F004         	goto	i2l314
  1129  000866                     i2u12_40:
  1130  000866                     
  1131                           ;tmr0.c: 148: {;tmr0.c: 149: TMR0_InterruptHandler();
  1132  000866  D802               	call	i2u13_48
  1133  000868  EF40  F004         	goto	i2u13_49
  1134  00086C                     i2u13_48:
  1135  00086C  0005               	push	
  1136  00086E  6EFA               	movwf	pclath,c
  1137  000870  5041               	movf	_TMR0_InterruptHandler^0,w,c
  1138  000872  6EFD               	movwf	tosl,c
  1139  000874  5042               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1140  000876  6EFE               	movwf	tosh,c
  1141  000878  50F8               	movf	tblptru,w,c
  1142  00087A  6EFF               	movwf	tosu,c
  1143  00087C  50FA               	movf	pclath,w,c
  1144  00087E  0012               	return		;indir
  1145  000880                     i2u13_49:
  1146  000880                     i2l314:
  1147  000880  0012               	return		;funcret
  1148  000882                     __end_of_TMR0_ISR:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1152 ;; Defined at:
  1153 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		None
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1167 ;;      Params:         0       0       0       0       0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1170 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_TMR0_Initialize
  1177 ;;		_TMR0_ISR
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text15
  1182  0009D8                     __ptext15:
  1183                           	callstack 0
  1184  0009D8                     _TMR0_DefaultInterruptHandler:
  1185                           	callstack 25
  1186  0009D8  0012               	return		;funcret
  1187  0009DA                     __end_of_TMR0_DefaultInterruptHandler:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _INT1_ISR *****************
  1191 ;; Defined at:
  1192 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 2
  1213 ;; This function calls:
  1214 ;;		_INT1_CallBack
  1215 ;; This function is called by:
  1216 ;;		_INTERRUPT_InterruptManager
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text16
  1221  0009CC                     __ptext16:
  1222                           	callstack 0
  1223  0009CC                     _INT1_ISR:
  1224                           	callstack 24
  1225  0009CC                     
  1226                           ;ext_int.c: 34: (INTCON3bits.INT1IF = 0);
  1227  0009CC  90F0               	bcf	240,0,c	;volatile
  1228  0009CE                     
  1229                           ;ext_int.c: 37: INT1_CallBack();
  1230  0009CE  EC73  F004         	call	_INT1_CallBack	;wreg free
  1231  0009D2  0012               	return		;funcret
  1232  0009D4                     __end_of_INT1_ISR:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _INT1_CallBack *****************
  1236 ;; Defined at:
  1237 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1254 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 1
  1258 ;; This function calls:
  1259 ;;		Absolute function
  1260 ;;		_INT1_DefaultInterruptHandler
  1261 ;; This function is called by:
  1262 ;;		_INT1_ISR
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text17
  1267  0008E6                     __ptext17:
  1268                           	callstack 0
  1269  0008E6                     _INT1_CallBack:
  1270                           	callstack 24
  1271  0008E6                     
  1272                           ;ext_int.c: 45: if(INT1_InterruptHandler)
  1273  0008E6  503D               	movf	_INT1_InterruptHandler^0,w,c
  1274  0008E8  103E               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  1275  0008EA  B4D8               	btfsc	status,2,c
  1276  0008EC  EF7A  F004         	goto	i2u6_41
  1277  0008F0  EF7C  F004         	goto	i2u6_40
  1278  0008F4                     i2u6_41:
  1279  0008F4  EF89  F004         	goto	i2l355
  1280  0008F8                     i2u6_40:
  1281  0008F8                     
  1282                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
  1283  0008F8  D802               	call	i2u7_48
  1284  0008FA  EF89  F004         	goto	i2u7_49
  1285  0008FE                     i2u7_48:
  1286  0008FE  0005               	push	
  1287  000900  6EFA               	movwf	pclath,c
  1288  000902  503D               	movf	_INT1_InterruptHandler^0,w,c
  1289  000904  6EFD               	movwf	tosl,c
  1290  000906  503E               	movf	(_INT1_InterruptHandler+1)^0,w,c
  1291  000908  6EFE               	movwf	tosh,c
  1292  00090A  50F8               	movf	tblptru,w,c
  1293  00090C  6EFF               	movwf	tosu,c
  1294  00090E  50FA               	movf	pclath,w,c
  1295  000910  0012               	return		;indir
  1296  000912                     i2u7_49:
  1297  000912                     i2l355:
  1298  000912  0012               	return		;funcret
  1299  000914                     __end_of_INT1_CallBack:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _INT1_DefaultInterruptHandler *****************
  1303 ;; Defined at:
  1304 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		None
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_EXT_INT_Initialize
  1328 ;;		_INT1_CallBack
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text18
  1333  0009DA                     __ptext18:
  1334                           	callstack 0
  1335  0009DA                     _INT1_DefaultInterruptHandler:
  1336                           	callstack 24
  1337  0009DA  0012               	return		;funcret
  1338  0009DC                     __end_of_INT1_DefaultInterruptHandler:
  1339                           	callstack 0
  1340                           
  1341                           	psect	text19
  1342  000000                     __ptext19:
  1343                           	callstack 0
  1344  000000                     
  1345                           	psect	rparam
  1346  0000                     
  1347                           	psect	temp
  1348  000053                     btemp:
  1349                           	callstack 0
  1350  000053                     	ds	1
  1351  0000                     int$flags	set	btemp
  1352  0000                     wtemp8	set	btemp+1
  1353  0000                     ttemp5	set	btemp+1
  1354  0000                     ttemp6	set	btemp+4
  1355  0000                     ttemp7	set	btemp+8
  1356                           
  1357                           	psect	idloc
  1358                           
  1359                           ;Config register IDLOC0 @ 0x200000
  1360                           ;	unspecified, using default values
  1361  200000                     	org	2097152
  1362  200000  FF                 	db	255
  1363                           
  1364                           ;Config register IDLOC1 @ 0x200001
  1365                           ;	unspecified, using default values
  1366  200001                     	org	2097153
  1367  200001  FF                 	db	255
  1368                           
  1369                           ;Config register IDLOC2 @ 0x200002
  1370                           ;	unspecified, using default values
  1371  200002                     	org	2097154
  1372  200002  FF                 	db	255
  1373                           
  1374                           ;Config register IDLOC3 @ 0x200003
  1375                           ;	unspecified, using default values
  1376  200003                     	org	2097155
  1377  200003  FF                 	db	255
  1378                           
  1379                           ;Config register IDLOC4 @ 0x200004
  1380                           ;	unspecified, using default values
  1381  200004                     	org	2097156
  1382  200004  FF                 	db	255
  1383                           
  1384                           ;Config register IDLOC5 @ 0x200005
  1385                           ;	unspecified, using default values
  1386  200005                     	org	2097157
  1387  200005  FF                 	db	255
  1388                           
  1389                           ;Config register IDLOC6 @ 0x200006
  1390                           ;	unspecified, using default values
  1391  200006                     	org	2097158
  1392  200006  FF                 	db	255
  1393                           
  1394                           ;Config register IDLOC7 @ 0x200007
  1395                           ;	unspecified, using default values
  1396  200007                     	org	2097159
  1397  200007  FF                 	db	255
  1398                           
  1399                           	psect	config
  1400                           
  1401                           ;Config register CONFIG1L @ 0x300000
  1402                           ;	PLL Selection
  1403                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1404                           ;	PLL Enable Configuration bit
  1405                           ;	CFGPLLEN = ON, PLL Enabled
  1406                           ;	CPU System Clock Postscaler
  1407                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1408                           ;	Low Speed USB mode with 48 MHz system clock
  1409                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1410  300000                     	org	3145728
  1411  300000  23                 	db	35
  1412                           
  1413                           ;Config register CONFIG1H @ 0x300001
  1414                           ;	Oscillator Selection
  1415                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  1416                           ;	Primary Oscillator Shutdown
  1417                           ;	PCLKEN = ON, Primary oscillator enabled
  1418                           ;	Fail-Safe Clock Monitor
  1419                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1420                           ;	Internal/External Oscillator Switchover
  1421                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1422  300001                     	org	3145729
  1423  300001  22                 	db	34
  1424                           
  1425                           ;Config register CONFIG2L @ 0x300002
  1426                           ;	Power-up Timer Enable
  1427                           ;	nPWRTEN = ON, Power up timer enabled
  1428                           ;	Brown-out Reset Enable
  1429                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1430                           ;	Brown-out Reset Voltage
  1431                           ;	BORV = 190, BOR set to 1.9V nominal
  1432                           ;	Low-Power Brown-out Reset
  1433                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1434  300002                     	org	3145730
  1435  300002  5E                 	db	94
  1436                           
  1437                           ;Config register CONFIG2H @ 0x300003
  1438                           ;	Watchdog Timer Enable bits
  1439                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1440                           ;	Watchdog Timer Postscaler
  1441                           ;	WDTPS = 32768, 1:32768
  1442  300003                     	org	3145731
  1443  300003  3C                 	db	60
  1444                           
  1445                           ; Padding undefined space
  1446  300004                     	org	3145732
  1447  300004  FF                 	db	255
  1448                           
  1449                           ;Config register CONFIG3H @ 0x300005
  1450                           ;	CCP2 MUX bit
  1451                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1452                           ;	PORTB A/D Enable bit
  1453                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1454                           ;	Timer3 Clock Input MUX bit
  1455                           ;	T3CMX = RC0, T3CKI function is on RC0
  1456                           ;	SDO Output MUX bit
  1457                           ;	SDOMX = RB3, SDO function is on RB3
  1458                           ;	Master Clear Reset Pin Enable
  1459                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1460  300005                     	org	3145733
  1461  300005  D1                 	db	209
  1462                           
  1463                           ;Config register CONFIG4L @ 0x300006
  1464                           ;	Stack Full/Underflow Reset
  1465                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1466                           ;	Single-Supply ICSP Enable bit
  1467                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1468                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1469                           ;	ICPRT = OFF, ICPORT disabled
  1470                           ;	Extended Instruction Set Enable bit
  1471                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1472                           ;	Background Debugger Enable bit
  1473                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1474  300006                     	org	3145734
  1475  300006  85                 	db	133
  1476                           
  1477                           ; Padding undefined space
  1478  300007                     	org	3145735
  1479  300007  FF                 	db	255
  1480                           
  1481                           ;Config register CONFIG5L @ 0x300008
  1482                           ;	Block 0 Code Protect
  1483                           ;	CP0 = OFF, Block 0 is not code-protected
  1484                           ;	Block 1 Code Protect
  1485                           ;	CP1 = OFF, Block 1 is not code-protected
  1486                           ;	Block 2 Code Protect
  1487                           ;	CP2 = OFF, Block 2 is not code-protected
  1488                           ;	Block 3 Code Protect
  1489                           ;	CP3 = OFF, Block 3 is not code-protected
  1490  300008                     	org	3145736
  1491  300008  0F                 	db	15
  1492                           
  1493                           ;Config register CONFIG5H @ 0x300009
  1494                           ;	Boot Block Code Protect
  1495                           ;	CPB = OFF, Boot block is not code-protected
  1496                           ;	Data EEPROM Code Protect
  1497                           ;	CPD = OFF, Data EEPROM is not code-protected
  1498  300009                     	org	3145737
  1499  300009  C0                 	db	192
  1500                           
  1501                           ;Config register CONFIG6L @ 0x30000A
  1502                           ;	Block 0 Write Protect
  1503                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1504                           ;	Block 1 Write Protect
  1505                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1506                           ;	Block 2 Write Protect
  1507                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1508                           ;	Block 3 Write Protect
  1509                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1510  30000A                     	org	3145738
  1511  30000A  0F                 	db	15
  1512                           
  1513                           ;Config register CONFIG6H @ 0x30000B
  1514                           ;	Configuration Registers Write Protect
  1515                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1516                           ;	Boot Block Write Protect
  1517                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1518                           ;	Data EEPROM Write Protect
  1519                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1520  30000B                     	org	3145739
  1521  30000B  E0                 	db	224
  1522                           
  1523                           ;Config register CONFIG7L @ 0x30000C
  1524                           ;	Block 0 Table Read Protect
  1525                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1526                           ;	Block 1 Table Read Protect
  1527                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1528                           ;	Block 2 Table Read Protect
  1529                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1530                           ;	Block 3 Table Read Protect
  1531                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1532  30000C                     	org	3145740
  1533  30000C  0F                 	db	15
  1534                           
  1535                           ;Config register CONFIG7H @ 0x30000D
  1536                           ;	Boot Block Table Read Protect
  1537                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1538  30000D                     	org	3145741
  1539  30000D  40                 	db	64
  1540                           tosu	equ	0xFFF
  1541                           tosh	equ	0xFFE
  1542                           tosl	equ	0xFFD
  1543                           stkptr	equ	0xFFC
  1544                           pclatu	equ	0xFFB
  1545                           pclath	equ	0xFFA
  1546                           pcl	equ	0xFF9
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           indf0	equ	0xFEF
  1554                           postinc0	equ	0xFEE
  1555                           postdec0	equ	0xFED
  1556                           preinc0	equ	0xFEC
  1557                           plusw0	equ	0xFEB
  1558                           fsr0h	equ	0xFEA
  1559                           fsr0l	equ	0xFE9
  1560                           wreg	equ	0xFE8
  1561                           indf1	equ	0xFE7
  1562                           postinc1	equ	0xFE6
  1563                           postdec1	equ	0xFE5
  1564                           preinc1	equ	0xFE4
  1565                           plusw1	equ	0xFE3
  1566                           fsr1h	equ	0xFE2
  1567                           fsr1l	equ	0xFE1
  1568                           bsr	equ	0xFE0
  1569                           indf2	equ	0xFDF
  1570                           postinc2	equ	0xFDE
  1571                           postdec2	equ	0xFDD
  1572                           preinc2	equ	0xFDC
  1573                           plusw2	equ	0xFDB
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      82
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     490
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      52       1       87.2%
BITBIGSFRlllllh     23      0       0      33        0.0%
BITBIGSFRhhlhh      18      0       0      21        0.0%
BITBIGSFRhll        17      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      34        0.0%
BITBIGSFRllllhh      6      0       0      29        0.0%
BITBIGSFRllllhl      6      0       0      30        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      32        0.0%
BITBIGSFRlllllh      3      0       0      31        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRhlh         1      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      35        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jun 19 23:22:25 2023

                                            l43 0848                                              l91 09B6  
                                            l94 09CA                                              l88 09C0  
                                            u50 0932                                              u51 092E  
                               _timer0ReloadVal 003F                                             l122 0924  
                                           l125 0932                                             l119 0984  
                                           l152 08E4                                             l333 09D6  
                                           l317 09A2                                             l271 094A  
                                           l272 094A                                             l364 0998  
                                           l358 09AC                                             l295 08B6  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                   _INT1_CallBack 08E6  
                                          l1500 088C                                            l1182 09D4  
                                          l1502 08A2                                            l1510 096C  
                                          l1184 08B8                                            l1504 08A4  
                                          l1520 0980                                            l1512 0970  
                                          l1186 08E2                                            l1506 08A6  
                                          l1514 0974                                            l1530 0942  
                                          l1522 0934                                            l1188 0914  
                                          l1508 08B2                                            l1516 0978  
                                          l1532 0946                                            l1524 0938  
                                          l1470 09B8                                            l1518 097C  
                                          l1526 093A                                            l1472 09AE  
                                          l1480 080C                                            l1528 093C  
                                          l1474 09C2                                            l1482 0820  
                                          l1490 0986                                            l1484 082C  
                                          l1492 098A                                            l1476 099A  
                                          l1486 0838                                            l1478 09A4  
                                          l1494 0996                                            l1488 0844  
                                          l1496 0882                                            l1498 0884  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _WPUB 000F85  
                                          _main 0934                                            btemp 0053  
                                          start 005E                                    ___param_bank 000000  
                       __end_of_TMR0_Initialize 08B8                                __end_of_INT1_ISR 09D4  
                ??_TMR0_DefaultInterruptHandler 004D                   __end_of_OSCILLATOR_Initialize 0934  
                                         ?_main 004D                                           _T0CON 000FD5  
                                         i2l320 09D8                                           i2l314 0880  
                                         i2l340 0052                                           i2l351 09D2  
                                         i2l361 09DA                                           i2l355 0912  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                       ?_TMR0_SetInterruptHandler 004F  
                              __end_of_TMR0_ISR 0882                                  ?_INT1_CallBack 004D  
                ??_INT1_DefaultInterruptHandler 004D                                           _trama 0001  
                      _INT1_SetInterruptHandler 09A4                                           pclath 000FFA  
                                         pclatu 000FFB                                           ttemp5 0054  
                                         ttemp6 0057                                           ttemp7 005B  
                                         status 000FD8                                           wtemp8 0054  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 0952  
                    __end_of_EUSART1_Initialize 084A                                    __end_of_main 0952  
                   ?_INTERRUPT_InterruptManager 004D                                          ??_main 0053  
                                 __activetblptr 000002                                          _ACTCON 000FB5  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                            __end_of_direccion_rx 0806  
                          __end_of_direccion_tx 080B                                          i2l1242 08E6  
                                        i2l1244 08F8                                          i2l1340 0854  
                                        i2l1342 0866                                          i2l1334 084A  
                                        i2l1344 09CC                                          i2l1336 084C  
                                        i2l1346 09CE                                          i2l1338 0850  
                                        i2l1460 0020                                          i2l1462 002E  
                                        i2l1464 0032                                          i2l1466 0040  
                                        i2l1458 0012                                          i2l1468 004E  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          i2u6_40 08F8  
                                        i2u6_41 08F4                                          i2u7_48 08FE  
                                        i2u7_49 0912                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                          _datorx 004A  
                      ?_EUSART1_SetErrorHandler 004F                                ?_TMR0_Initialize 004D  
                                        clear_0 0958                                          isa$std 000001  
              ??_EUSART1_SetOverrunErrorHandler 0051                 ?_EUSART1_SetOverrunErrorHandler 004F  
                               ??_INT1_CallBack 004D                                    __mediumconst 0000  
                                        tblptru 000FF8        INT1_SetInterruptHandler@InterruptHandler 004F  
      TMR0_SetInterruptHandler@InterruptHandler 004F                               _SYSTEM_Initialize 096C  
                                    __accesstop 0060                         __end_of__initialization 095E  
                                     ?_INT1_ISR 004D                              ?_SYSTEM_Initialize 004D  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 004D  
                           ??_SYSTEM_Initialize 0053                                       ?_TMR0_ISR 004D  
                     __end_of_SYSTEM_Initialize 0986                                      ??_INT1_ISR 004D  
               __end_of_EUSART1_SetErrorHandler 09CC                __end_of_TMR0_SetInterruptHandler 09A4  
                                    ??_TMR0_ISR 004D          __end_of_EUSART1_SetFramingErrorHandler 09C2  
                _EUSART1_SetFramingErrorHandler 09B8                      ??_INT1_SetInterruptHandler 0051  
                                       _OSCCON2 000FD2                                         i2u12_40 0866  
                                       i2u20_40 002E                                         i2u12_41 0862  
                                       i2u20_41 002A                                         i2u21_40 0040  
                                       i2u21_41 003C                                         i2u13_48 086C  
                                       i2u22_40 004E                                         i2u13_49 0880  
                                       i2u22_41 004A                                         i2u19_40 0020  
                                       i2u19_41 001C                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         __Hparam 0000  
                                       __Lparam 0000                                    __psmallconst 0800  
                                  _direccion_rx 0801                                    _direccion_tx 0806  
                                       __pcinit 0952                                         __ramtop 0800  
                                       __ptext0 0934                                         _flag_rx 0049  
                                       __ptext1 096C                                         __ptext2 0882  
                                       __ptext3 099A                                         __ptext4 08B8  
                                       __ptext5 0914                                         __ptext6 09D4  
                                       __ptext7 0986                                         __ptext8 09A4  
                                       __ptext9 080C                                       _T0CONbits 000FD5  
                         _OSCILLATOR_Initialize 0914                              _EUSART1_Initialize 080C  
                      ??_PIN_MANAGER_Initialize 004F                                         _procesa 001F  
                                       _puntero 004B                            end_of_initialization 095E  
                           ?_EUSART1_Initialize 004D                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0045                                         postinc0 000FEE  
                          ??_EUSART1_Initialize 0051                        _TMR0_SetInterruptHandler 099A  
                         _INT1_InterruptHandler 003D                                       _PORTBbits 000F81  
                                     _TRISBbits 000F93                                       _TRISCbits 000F94  
                  __end_of_INTERRUPT_Initialize 09D8                          ?_OSCILLATOR_Initialize 004D  
                           start_initialization 0952                           __end_of_INT1_CallBack 0914  
                    __end_of_EXT_INT_Initialize 099A                                     __pbssCOMRAM 0001  
              ??_EUSART1_SetFramingErrorHandler 0051                 ?_EUSART1_SetFramingErrorHandler 004F  
                         _TMR0_InterruptHandler 0041                          _PIN_MANAGER_Initialize 08B8  
                                     __pintcode 0008                    ??_INTERRUPT_InterruptManager 004D  
                                   __smallconst 0800                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 0043  
                       _EUSART1_SetErrorHandler 09C2                            _INTERRUPT_Initialize 09D4  
                             ??_TMR0_Initialize 0051                                        _INT1_ISR 09CC  
       EUSART1_SetErrorHandler@interruptHandler 004F                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                       ?_INT1_SetInterruptHandler 004F  
                    ??_TMR0_SetInterruptHandler 0051                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 084A  
                                   _INTCON2bits 000FF1                                     _INTCON3bits 000FF0  
                         ?_INTERRUPT_Initialize 004D                                        __Hrparam 0000  
                                      __Lrparam 0000                         ??_OSCILLATOR_Initialize 004F  
                     ??_EUSART1_SetErrorHandler 0051                     _EUSART1_DefaultErrorHandler 000000  
                                      __ptext10 09AE                                        __ptext11 09B8  
                                      __ptext12 09C2                                        __ptext14 084A  
                                      __ptext15 09D8                                        __ptext16 09CC  
                                      __ptext17 08E6                                        __ptext18 09DA  
                                      __ptext19 0000            __end_of_TMR0_DefaultInterruptHandler 09DA  
                  _TMR0_DefaultInterruptHandler 09D8  EUSART1_SetOverrunErrorHandler@interruptHandler 004F  
                                      isa$xinst 000000                                        int$flags 0053  
            __end_of_INTERRUPT_InterruptManager 005E                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 0047            __end_of_INT1_DefaultInterruptHandler 09DC  
                  _INT1_DefaultInterruptHandler 09DA                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 004F                              _EXT_INT_Initialize 0986  
                                      intlevel2 0000                         ?_PIN_MANAGER_Initialize 004D  
                           ?_EXT_INT_Initialize 004D          __end_of_EUSART1_SetOverrunErrorHandler 09B8  
                _EUSART1_SetOverrunErrorHandler 09AE                                      _RCSTA1bits 000FAB  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 004D  
EUSART1_SetFramingErrorHandler@interruptHandler 004F                              _eusart1RxLastError 004C  
                          ??_EXT_INT_Initialize 0051                 fp__INT1_DefaultInterruptHandler 0000  
                 ?_INT1_DefaultInterruptHandler 004D                                 _TMR0_Initialize 0882  
              __end_of_INT1_SetInterruptHandler 09AE                  __end_of_PIN_MANAGER_Initialize 08E6  
