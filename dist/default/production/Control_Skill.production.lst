

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 20 13:04:59 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Generated 09/02/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F25K50 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    84  0000                     
    85 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    86  0000                     
    87 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    88  0000                     
    89                           	psect	smallconst
    90  000800                     __psmallconst:
    91                           	callstack 0
    92  000800  00                 	db	0
    93  000801                     _hexpowers:
    94                           	callstack 0
    95  000801  0001               	dw	1
    96  000803  0000               	dw	0
    97  000805  0010               	dw	16
    98  000807  0000               	dw	0
    99  000809  0100               	dw	256
   100  00080B  0000               	dw	0
   101  00080D  1000               	dw	4096
   102  00080F  0000               	dw	0
   103  000811  0000               	dw	0
   104  000813  0001               	dw	1
   105  000815  0000               	dw	0
   106  000817  0010               	dw	16
   107  000819  0000               	dw	0
   108  00081B  0100               	dw	256
   109  00081D  0000               	dw	0
   110  00081F  1000               	dw	4096
   111  000821                     __end_of_hexpowers:
   112                           	callstack 0
   113  0000                     _TMR0L	set	4054
   114  0000                     _TMR0H	set	4055
   115  0000                     _TXREG1	set	4013
   116  0000                     _RCREG1	set	4014
   117  0000                     _SPBRG1	set	4015
   118  0000                     _TXSTA1	set	4012
   119  0000                     _TMR0	set	4054
   120  0000                     _TRISBbits	set	3987
   121  0000                     _T0CON	set	4053
   122  0000                     _RCSTA1bits	set	4011
   123  0000                     _TXSTA1bits	set	4012
   124  0000                     _LATB0	set	31824
   125  0000                     _LATA5	set	31821
   126  0000                     _LATA4	set	31820
   127  0000                     _LATA3	set	31819
   128  0000                     _INT1E	set	32643
   129  0000                     _TMR0IF	set	32658
   130  0000                     _INTEDG1	set	32653
   131  0000                     _INT1IF	set	32640
   132  0000                     _PLLRDY	set	32407
   133  0000                     _ANSELA	set	3931
   134  0000                     _ANSELB	set	3932
   135  0000                     _ANSELC	set	3933
   136  0000                     _LATA	set	3977
   137  0000                     _OSCTUNE	set	3995
   138  0000                     _PIR1bits	set	3998
   139  0000                     _RCSTA1	set	4011
   140  0000                     _BAUDCON1	set	4024
   141  0000                     _RCONbits	set	4048
   142  0000                     _OSCCON2	set	4050
   143  0000                     _OSCCON	set	4051
   144  0000                     _ACTCON	set	4021
   145  0000                     _SPBRGH1	set	4016
   146  0000                     _T0CONbits	set	4053
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _TRISA	set	3986
   149  0000                     _LATC	set	3979
   150  0000                     _LATB	set	3978
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISB	set	3987
   153  0000                     _WPUB	set	3973
   154  0000                     _INTCONbits	set	4082
   155  0000                     _INTCON3bits	set	4080
   156  000821                     STR_12:
   157  000821  30                 	db	48	;'0'
   158  000822  31                 	db	49	;'1'
   159  000823  32                 	db	50	;'2'
   160  000824  33                 	db	51	;'3'
   161  000825  34                 	db	52	;'4'
   162  000826  35                 	db	53	;'5'
   163  000827  36                 	db	54	;'6'
   164  000828  37                 	db	55	;'7'
   165  000829  38                 	db	56	;'8'
   166  00082A  39                 	db	57	;'9'
   167  00082B  61                 	db	97	;'a'
   168  00082C  62                 	db	98	;'b'
   169  00082D  63                 	db	99	;'c'
   170  00082E  64                 	db	100	;'d'
   171  00082F  65                 	db	101	;'e'
   172  000830  66                 	db	102	;'f'
   173  000831  00                 	db	0
   174  000832                     STR_5:
   175  000832  43                 	db	67	;'C'
   176  000833  4F                 	db	79	;'O'
   177  000834  44                 	db	68	;'D'
   178  000835  49                 	db	73	;'I'
   179  000836  47                 	db	71	;'G'
   180  000837  4F                 	db	79	;'O'
   181  000838  20                 	db	32
   182  000839  49                 	db	73	;'I'
   183  00083A  52                 	db	82	;'R'
   184  00083B  20                 	db	32
   185  00083C  3D                 	db	61	;'='
   186  00083D  20                 	db	32
   187  00083E  00                 	db	0
   188  00083F                     STR_8:
   189  00083F  43                 	db	67	;'C'
   190  000840  4F                 	db	79	;'O'
   191  000841  4D                 	db	77	;'M'
   192  000842  41                 	db	65	;'A'
   193  000843  4E                 	db	78	;'N'
   194  000844  44                 	db	68	;'D'
   195  000845  4F                 	db	79	;'O'
   196  000846  31                 	db	49	;'1'
   197  000847  00                 	db	0
   198  000848                     STR_9:
   199  000848  43                 	db	67	;'C'
   200  000849  4F                 	db	79	;'O'
   201  00084A  4D                 	db	77	;'M'
   202  00084B  41                 	db	65	;'A'
   203  00084C  4E                 	db	78	;'N'
   204  00084D  44                 	db	68	;'D'
   205  00084E  4F                 	db	79	;'O'
   206  00084F  32                 	db	50	;'2'
   207  000850  00                 	db	0
   208  000851                     STR_10:
   209  000851  43                 	db	67	;'C'
   210  000852  4F                 	db	79	;'O'
   211  000853  4D                 	db	77	;'M'
   212  000854  41                 	db	65	;'A'
   213  000855  4E                 	db	78	;'N'
   214  000856  44                 	db	68	;'D'
   215  000857  4F                 	db	79	;'O'
   216  000858  33                 	db	51	;'3'
   217  000859  00                 	db	0
   218  00085A                     STR_1:
   219  00085A  53                 	db	83	;'S'
   220  00085B  6F                 	db	111	;'o'
   221  00085C  6E                 	db	110	;'n'
   222  00085D  3A                 	db	58	;':'
   223  00085E  20                 	db	32
   224  00085F  00                 	db	0
   225  000860                     STR_4:
   226  000860  25                 	db	37
   227  000861  6C                 	db	108	;'l'
   228  000862  78                 	db	120	;'x'
   229  000863  00                 	db	0
   230  000864                     STR_3:
   231  000864  0A                 	db	10
   232  000865  00                 	db	0
   233  000866                     STR_2:
   234  000866  0D                 	db	13
   235  000867  00                 	db	0
   236  000868  00                 	db	0	; dummy byte at the end
   237  0000                     
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241  001908                     __pcinit:
   242                           	callstack 0
   243  001908                     start_initialization:
   244                           	callstack 0
   245  001908                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Clear objects allocated to BANK0 (70 bytes)
   249  001908  EE00  F060         	lfsr	0,__pbssBANK0
   250  00190C  0E46               	movlw	70
   251  00190E                     clear_0:
   252  00190E  6AEE               	clrf	postinc0,c
   253  001910  06E8               	decf	wreg,f,c
   254  001912  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to COMRAM (32 bytes)
   257  001914  EE00  F03B         	lfsr	0,__pbssCOMRAM
   258  001918  0E20               	movlw	32
   259  00191A                     clear_1:
   260  00191A  6AEE               	clrf	postinc0,c
   261  00191C  06E8               	decf	wreg,f,c
   262  00191E  E1FD               	bnz	clear_1
   263  001920                     end_of_initialization:
   264                           	callstack 0
   265  001920                     __end_of__initialization:
   266                           	callstack 0
   267  001920  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  001922  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  001924  0E00               	movlw	low (__Lmediumconst shr (0+16))
   270  001926  6EF8               	movwf	tblptru,c
   271  001928  0100               	movlb	0
   272  00192A  EF4A  F006         	goto	_main	;jump to C main() function
   273                           
   274                           	psect	bssCOMRAM
   275  00003B                     __pbssCOMRAM:
   276                           	callstack 0
   277  00003B                     _codigo_ir:
   278                           	callstack 0
   279  00003B                     	ds	4
   280  00003F                     _INT1_InterruptHandler:
   281                           	callstack 0
   282  00003F                     	ds	2
   283  000041                     _timer0ReloadVal:
   284                           	callstack 0
   285  000041                     	ds	2
   286  000043                     _TMR0_InterruptHandler:
   287                           	callstack 0
   288  000043                     	ds	2
   289  000045                     _cuenta:
   290                           	callstack 0
   291  000045                     	ds	2
   292  000047                     _EUSART1_ErrorHandler:
   293                           	callstack 0
   294  000047                     	ds	2
   295  000049                     _EUSART1_OverrunErrorHandler:
   296                           	callstack 0
   297  000049                     	ds	2
   298  00004B                     _EUSART1_FramingErrorHandler:
   299                           	callstack 0
   300  00004B                     	ds	2
   301  00004D                     _timer_aux:
   302                           	callstack 0
   303  00004D                     	ds	1
   304  00004E                     _cont:
   305                           	callstack 0
   306  00004E                     	ds	1
   307  00004F                     _flag_codigo:
   308                           	callstack 0
   309  00004F                     	ds	1
   310  000050                     _eusart1RxLastError:
   311                           	callstack 0
   312  000050                     	ds	1
   313  000051                     _texto:
   314                           	callstack 0
   315  000051                     	ds	10
   316                           
   317                           	psect	bssBANK0
   318  000060                     __pbssBANK0:
   319                           	callstack 0
   320  000060                     _tiempo:
   321                           	callstack 0
   322  000060                     	ds	70
   323                           
   324                           	psect	cstackBANK0
   325  0000A6                     __pcstackBANK0:
   326                           	callstack 0
   327  0000A6                     ??_normaliza:
   328                           
   329                           ; 1 bytes @ 0x0
   330  0000A6                     	ds	4
   331                           
   332                           	psect	cstackCOMRAM
   333  000001                     __pcstackCOMRAM:
   334                           	callstack 0
   335  000001                     ??_INTERRUPT_InterruptManager:
   336  000001                     
   337                           ; 1 bytes @ 0x0
   338  000001                     	ds	4
   339  000005                     ?___lmul:
   340                           	callstack 0
   341  000005                     ?___lldiv:
   342                           	callstack 0
   343  000005                     ?___xxtofl:
   344                           	callstack 0
   345  000005                     EUSART1_Write@txData:
   346                           	callstack 0
   347  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   348                           	callstack 0
   349  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   350                           	callstack 0
   351  000005                     EUSART1_SetErrorHandler@interruptHandler:
   352                           	callstack 0
   353  000005                     TMR0_SetInterruptHandler@InterruptHandler:
   354                           	callstack 0
   355  000005                     INT1_SetInterruptHandler@InterruptHandler:
   356                           	callstack 0
   357  000005                     memcpy@d1:
   358                           	callstack 0
   359  000005                     ___lmul@multiplier:
   360                           	callstack 0
   361  000005                     ___lldiv@dividend:
   362                           	callstack 0
   363  000005                     ___xxtofl@val:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x4
   367  000005                     	ds	1
   368  000006                     EUSART1_Write_string@data:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x5
   372  000006                     	ds	1
   373  000007                     ??_TMR0_Initialize:
   374  000007                     memcpy@s1:
   375                           	callstack 0
   376                           
   377                           ; 3 bytes @ 0x6
   378  000007                     	ds	1
   379  000008                     
   380                           ; 1 bytes @ 0x7
   381  000008                     	ds	1
   382  000009                     ??___xxtofl:
   383  000009                     ___lmul@multiplicand:
   384                           	callstack 0
   385  000009                     ___lldiv@divisor:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x8
   389  000009                     	ds	1
   390  00000A                     memcpy@n:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x9
   394  00000A                     	ds	2
   395  00000C                     memcpy@s:
   396                           	callstack 0
   397                           
   398                           ; 3 bytes @ 0xB
   399  00000C                     	ds	1
   400  00000D                     ___xxtofl@sign:
   401                           	callstack 0
   402  00000D                     ___lmul@product:
   403                           	callstack 0
   404  00000D                     ___lldiv@quotient:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0xC
   408  00000D                     	ds	1
   409  00000E                     ___xxtofl@exp:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0xD
   413  00000E                     	ds	1
   414  00000F                     memcpy@d:
   415                           	callstack 0
   416  00000F                     ___xxtofl@arg:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0xE
   420  00000F                     	ds	2
   421  000011                     ?_Hash_algoritmo:
   422                           	callstack 0
   423  000011                     ___lldiv@counter:
   424                           	callstack 0
   425  000011                     memcpy@tmp:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x10
   429  000011                     	ds	1
   430  000012                     ?_sprintf:
   431                           	callstack 0
   432  000012                     sprintf@sp:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x11
   436  000012                     	ds	1
   437  000013                     ?___flmul:
   438                           	callstack 0
   439  000013                     ___flmul@b:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x12
   443  000013                     	ds	1
   444  000014                     sprintf@f:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x13
   448  000014                     	ds	1
   449  000015                     ??_Hash_algoritmo:
   450                           
   451                           ; 1 bytes @ 0x14
   452  000015                     	ds	2
   453  000017                     ___flmul@a:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x16
   457  000017                     	ds	3
   458  00001A                     ??_sprintf:
   459                           
   460                           ; 1 bytes @ 0x19
   461  00001A                     	ds	1
   462  00001B                     ??___flmul:
   463  00001B                     Hash_algoritmo@hash_acum:
   464                           	callstack 0
   465                           
   466                           ; 4 bytes @ 0x1A
   467  00001B                     	ds	1
   468  00001C                     sprintf@idx:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x1B
   472  00001C                     	ds	1
   473  00001D                     sprintf@flag:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x1C
   477  00001D                     	ds	1
   478  00001E                     sprintf@prec:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1D
   482  00001E                     	ds	1
   483  00001F                     ___flmul@sign:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1E
   487  00001F                     	ds	1
   488  000020                     sprintf@val:
   489                           	callstack 0
   490  000020                     ___flmul@grs:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x1F
   494  000020                     	ds	4
   495  000024                     ___flmul@aexp:
   496                           	callstack 0
   497  000024                     sprintf@ap:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x23
   501  000024                     	ds	1
   502  000025                     ___flmul@bexp:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x24
   506  000025                     	ds	1
   507  000026                     sprintf@c:
   508                           	callstack 0
   509  000026                     ___flmul@prod:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x25
   513  000026                     	ds	4
   514  00002A                     ___flmul@temp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x29
   518  00002A                     	ds	2
   519  00002C                     ___flge@ff1:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x2B
   523  00002C                     	ds	4
   524  000030                     ___flge@ff2:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x2F
   528  000030                     	ds	4
   529  000034                     ??___flge:
   530                           
   531                           ; 1 bytes @ 0x33
   532  000034                     	ds	4
   533  000038                     ??_main:
   534                           
   535                           ; 1 bytes @ 0x37
   536  000038                     	ds	3
   537                           
   538 ;;
   539 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   540 ;;
   541 ;; *************** function _main *****************
   542 ;; Defined at:
   543 ;;		line 198 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0
   559 ;;      Temps:          3       0       0       0       0       0       0       0       0
   560 ;;      Totals:         3       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        3 bytes
   562 ;; Hardware stack levels required when called: 7
   563 ;; This function calls:
   564 ;;		_EUSART1_Write_string
   565 ;;		_Hash_algoritmo
   566 ;;		_SYSTEM_Initialize
   567 ;;		_memcpy
   568 ;;		_normaliza
   569 ;;		_sprintf
   570 ;; This function is called by:
   571 ;;		Startup code after reset
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text0
   576  000C94                     __ptext0:
   577                           	callstack 0
   578  000C94                     _main:
   579                           	callstack 24
   580  000C94                     
   581                           ;main.c: 201: SYSTEM_Initialize();
   582  000C94  ECA7  F00C         	call	_SYSTEM_Initialize	;wreg free
   583  000C98                     
   584                           ;main.c: 203: ANSELA = 0b00000111;
   585  000C98  0E07               	movlw	7
   586  000C9A  010F               	movlb	15	; () banked
   587  000C9C  6F5B               	movwf	91,b	;volatile
   588  000C9E                     
   589                           ; BSR set to: 15
   590                           ;main.c: 204: ANSELB = 0b01000000;
   591  000C9E  0E40               	movlw	64
   592  000CA0  6F5C               	movwf	92,b	;volatile
   593  000CA2                     
   594                           ; BSR set to: 15
   595                           ;main.c: 205: ANSELC = 0x00;
   596  000CA2  0E00               	movlw	0
   597  000CA4  6F5D               	movwf	93,b	;volatile
   598  000CA6                     
   599                           ; BSR set to: 15
   600                           ;main.c: 206: TRISBbits.TRISB1 = 1;
   601  000CA6  8293               	bsf	147,1,c	;volatile
   602  000CA8                     
   603                           ; BSR set to: 15
   604                           ;main.c: 213: (INTCONbits.GIE = 1);
   605  000CA8  8EF2               	bsf	242,7,c	;volatile
   606  000CAA                     
   607                           ; BSR set to: 15
   608                           ;main.c: 219: (INTCONbits.PEIE = 1);
   609  000CAA  8CF2               	bsf	242,6,c	;volatile
   610  000CAC                     l2305:
   611                           
   612                           ;main.c: 229: {;main.c: 231: if (flag_codigo == 1)
   613  000CAC  044F               	decf	_flag_codigo^0,w,c
   614  000CAE  A4D8               	btfss	status,2,c
   615  000CB0  EF5C  F006         	goto	u1661
   616  000CB4  EF5E  F006         	goto	u1660
   617  000CB8                     u1661:
   618  000CB8  EF44  F007         	goto	l2361
   619  000CBC                     u1660:
   620  000CBC                     
   621                           ;main.c: 232: {;main.c: 235: normaliza();
   622  000CBC  EC2A  F009         	call	_normaliza	;wreg free
   623  000CC0                     
   624                           ;main.c: 236: codigo_ir = Hash_algoritmo();
   625  000CC0  ECDD  F00A         	call	_Hash_algoritmo	;wreg free
   626  000CC4  C011  F03B         	movff	?_Hash_algoritmo,_codigo_ir
   627  000CC8  C012  F03C         	movff	?_Hash_algoritmo+1,_codigo_ir+1
   628  000CCC  C013  F03D         	movff	?_Hash_algoritmo+2,_codigo_ir+2
   629  000CD0  C014  F03E         	movff	?_Hash_algoritmo+3,_codigo_ir+3
   630  000CD4                     
   631                           ;main.c: 237: EUSART1_Write_string("Son: ");
   632  000CD4  0E5A               	movlw	low STR_1
   633  000CD6  6E06               	movwf	EUSART1_Write_string@data^0,c
   634  000CD8  0E08               	movlw	high STR_1
   635  000CDA  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   636  000CDC  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   637  000CE0                     
   638                           ;main.c: 238: memcpy(texto, cuenta, sizeof(cuenta));
   639  000CE0  0E51               	movlw	low _texto
   640  000CE2  6E05               	movwf	memcpy@d1^0,c
   641  000CE4  0E00               	movlw	high _texto
   642  000CE6  6E06               	movwf	(memcpy@d1+1)^0,c
   643  000CE8  C045  F038         	movff	_cuenta,??_main
   644  000CEC  C046  F039         	movff	_cuenta+1,??_main+1
   645  000CF0  6A3A               	clrf	(??_main+2)^0,c
   646  000CF2  C038  F007         	movff	??_main,memcpy@s1
   647  000CF6  C039  F008         	movff	??_main+1,memcpy@s1+1
   648  000CFA  C03A  F009         	movff	??_main+2,memcpy@s1+2
   649  000CFE  0E00               	movlw	0
   650  000D00  6E0B               	movwf	(memcpy@n+1)^0,c
   651  000D02  0E02               	movlw	2
   652  000D04  6E0A               	movwf	memcpy@n^0,c
   653  000D06  ECB7  F00B         	call	_memcpy	;wreg free
   654  000D0A                     
   655                           ;main.c: 239: EUSART1_Write_string(texto);
   656  000D0A  0E51               	movlw	low _texto
   657  000D0C  6E06               	movwf	EUSART1_Write_string@data^0,c
   658  000D0E  0E00               	movlw	high _texto
   659  000D10  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   660  000D12  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   661  000D16                     
   662                           ;main.c: 240: EUSART1_Write_string("\r");
   663  000D16  0E66               	movlw	low STR_2
   664  000D18  6E06               	movwf	EUSART1_Write_string@data^0,c
   665  000D1A  0E08               	movlw	high STR_2
   666  000D1C  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   667  000D1E  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   668  000D22                     
   669                           ;main.c: 241: EUSART1_Write_string("\n");
   670  000D22  0E64               	movlw	low STR_3
   671  000D24  6E06               	movwf	EUSART1_Write_string@data^0,c
   672  000D26  0E08               	movlw	high STR_3
   673  000D28  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   674  000D2A  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   675                           
   676                           ;main.c: 242: sprintf(texto, "%lx", codigo_ir);
   677  000D2E  0E51               	movlw	low _texto
   678  000D30  6E12               	movwf	sprintf@sp^0,c
   679  000D32  0E00               	movlw	high _texto
   680  000D34  6E13               	movwf	(sprintf@sp+1)^0,c
   681  000D36  0E60               	movlw	low STR_4
   682  000D38  6E14               	movwf	sprintf@f^0,c
   683  000D3A  0E08               	movlw	high STR_4
   684  000D3C  6E15               	movwf	(sprintf@f+1)^0,c
   685  000D3E  C03B  F016         	movff	_codigo_ir,?_sprintf+4
   686  000D42  C03C  F017         	movff	_codigo_ir+1,?_sprintf+5
   687  000D46  C03D  F018         	movff	_codigo_ir+2,?_sprintf+6
   688  000D4A  C03E  F019         	movff	_codigo_ir+3,?_sprintf+7
   689  000D4E  EC62  F007         	call	_sprintf	;wreg free
   690  000D52                     
   691                           ;main.c: 243: EUSART1_Write_string("CODIGO IR = ");
   692  000D52  0E32               	movlw	low STR_5
   693  000D54  6E06               	movwf	EUSART1_Write_string@data^0,c
   694  000D56  0E08               	movlw	high STR_5
   695  000D58  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   696  000D5A  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   697  000D5E                     
   698                           ;main.c: 244: EUSART1_Write_string(texto);
   699  000D5E  0E51               	movlw	low _texto
   700  000D60  6E06               	movwf	EUSART1_Write_string@data^0,c
   701  000D62  0E00               	movlw	high _texto
   702  000D64  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   703  000D66  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   704  000D6A                     
   705                           ;main.c: 245: EUSART1_Write_string("\r");
   706  000D6A  0E66               	movlw	low STR_2
   707  000D6C  6E06               	movwf	EUSART1_Write_string@data^0,c
   708  000D6E  0E08               	movlw	high STR_2
   709  000D70  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   710  000D72  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   711  000D76                     
   712                           ;main.c: 246: EUSART1_Write_string("\n");
   713  000D76  0E64               	movlw	low STR_3
   714  000D78  6E06               	movwf	EUSART1_Write_string@data^0,c
   715  000D7A  0E08               	movlw	high STR_3
   716  000D7C  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   717  000D7E  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   718  000D82                     
   719                           ;main.c: 248: if (codigo_ir == 0xBF681DA0)
   720  000D82  0EA0               	movlw	160
   721  000D84  183B               	xorwf	_codigo_ir^0,w,c
   722  000D86  E10D               	bnz	u1671
   723  000D88  0E1D               	movlw	29
   724  000D8A  183C               	xorwf	(_codigo_ir+1)^0,w,c
   725  000D8C  E10A               	bnz	u1671
   726  000D8E  0E68               	movlw	104
   727  000D90  183D               	xorwf	(_codigo_ir+2)^0,w,c
   728  000D92  E107               	bnz	u1671
   729  000D94  0EBF               	movlw	191
   730  000D96  183E               	xorwf	(_codigo_ir+3)^0,w,c
   731  000D98  A4D8               	btfss	status,2,c
   732  000D9A  EFD1  F006         	goto	u1671
   733  000D9E  EFD3  F006         	goto	u1670
   734  000DA2                     u1671:
   735  000DA2  EFE4  F006         	goto	l2335
   736  000DA6                     u1670:
   737  000DA6                     
   738                           ;main.c: 249: {;main.c: 250: LATA3 =~ LATA3;
   739  000DA6  A689               	btfss	3977,3,c	;volatile
   740  000DA8  EFD8  F006         	goto	u1681
   741  000DAC  EFDB  F006         	goto	u1680
   742  000DB0                     u1681:
   743  000DB0  8689               	bsf	3977,3,c	;volatile
   744  000DB2  EFDC  F006         	goto	u1695
   745  000DB6                     u1680:
   746  000DB6  9689               	bcf	3977,3,c	;volatile
   747  000DB8                     u1695:
   748  000DB8                     
   749                           ;main.c: 251: EUSART1_Write_string("COMANDO1");
   750  000DB8  0E3F               	movlw	low STR_8
   751  000DBA  6E06               	movwf	EUSART1_Write_string@data^0,c
   752  000DBC  0E08               	movlw	high STR_8
   753  000DBE  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   754  000DC0  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   755                           
   756                           ;main.c: 253: }
   757  000DC4  EF28  F007         	goto	l2347
   758  000DC8                     l2335:
   759                           
   760                           ;main.c: 254: else if (codigo_ir == 0xBF681DA0)
   761  000DC8  0EA0               	movlw	160
   762  000DCA  183B               	xorwf	_codigo_ir^0,w,c
   763  000DCC  E10D               	bnz	u1701
   764  000DCE  0E1D               	movlw	29
   765  000DD0  183C               	xorwf	(_codigo_ir+1)^0,w,c
   766  000DD2  E10A               	bnz	u1701
   767  000DD4  0E68               	movlw	104
   768  000DD6  183D               	xorwf	(_codigo_ir+2)^0,w,c
   769  000DD8  E107               	bnz	u1701
   770  000DDA  0EBF               	movlw	191
   771  000DDC  183E               	xorwf	(_codigo_ir+3)^0,w,c
   772  000DDE  A4D8               	btfss	status,2,c
   773  000DE0  EFF4  F006         	goto	u1701
   774  000DE4  EFF6  F006         	goto	u1700
   775  000DE8                     u1701:
   776  000DE8  EF07  F007         	goto	l2341
   777  000DEC                     u1700:
   778  000DEC                     
   779                           ;main.c: 255: {;main.c: 256: LATA4 =~ LATA4;
   780  000DEC  A889               	btfss	3977,4,c	;volatile
   781  000DEE  EFFB  F006         	goto	u1711
   782  000DF2  EFFE  F006         	goto	u1710
   783  000DF6                     u1711:
   784  000DF6  8889               	bsf	3977,4,c	;volatile
   785  000DF8  EFFF  F006         	goto	u1725
   786  000DFC                     u1710:
   787  000DFC  9889               	bcf	3977,4,c	;volatile
   788  000DFE                     u1725:
   789  000DFE                     
   790                           ;main.c: 257: EUSART1_Write_string("COMANDO2");
   791  000DFE  0E48               	movlw	low STR_9
   792  000E00  6E06               	movwf	EUSART1_Write_string@data^0,c
   793  000E02  0E08               	movlw	high STR_9
   794  000E04  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   795  000E06  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   796                           
   797                           ;main.c: 258: }
   798  000E0A  EF28  F007         	goto	l2347
   799  000E0E                     l2341:
   800                           
   801                           ;main.c: 260: else if (codigo_ir == 0xBF681DA0)
   802  000E0E  0EA0               	movlw	160
   803  000E10  183B               	xorwf	_codigo_ir^0,w,c
   804  000E12  E10D               	bnz	u1731
   805  000E14  0E1D               	movlw	29
   806  000E16  183C               	xorwf	(_codigo_ir+1)^0,w,c
   807  000E18  E10A               	bnz	u1731
   808  000E1A  0E68               	movlw	104
   809  000E1C  183D               	xorwf	(_codigo_ir+2)^0,w,c
   810  000E1E  E107               	bnz	u1731
   811  000E20  0EBF               	movlw	191
   812  000E22  183E               	xorwf	(_codigo_ir+3)^0,w,c
   813  000E24  A4D8               	btfss	status,2,c
   814  000E26  EF17  F007         	goto	u1731
   815  000E2A  EF19  F007         	goto	u1730
   816  000E2E                     u1731:
   817  000E2E  EF28  F007         	goto	l2347
   818  000E32                     u1730:
   819  000E32                     
   820                           ;main.c: 261: {;main.c: 262: LATA5 =~ LATA5;
   821  000E32  AA89               	btfss	3977,5,c	;volatile
   822  000E34  EF1E  F007         	goto	u1741
   823  000E38  EF21  F007         	goto	u1740
   824  000E3C                     u1741:
   825  000E3C  8A89               	bsf	3977,5,c	;volatile
   826  000E3E  EF22  F007         	goto	u1755
   827  000E42                     u1740:
   828  000E42  9A89               	bcf	3977,5,c	;volatile
   829  000E44                     u1755:
   830  000E44                     
   831                           ;main.c: 263: EUSART1_Write_string("COMANDO3");
   832  000E44  0E51               	movlw	low STR_10
   833  000E46  6E06               	movwf	EUSART1_Write_string@data^0,c
   834  000E48  0E08               	movlw	high STR_10
   835  000E4A  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   836  000E4C  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   837  000E50                     l2347:
   838                           
   839                           ;main.c: 264: };main.c: 265: codigo_ir = 0;
   840  000E50  0E00               	movlw	0
   841  000E52  6E3B               	movwf	_codigo_ir^0,c
   842  000E54  0E00               	movlw	0
   843  000E56  6E3C               	movwf	(_codigo_ir+1)^0,c
   844  000E58  0E00               	movlw	0
   845  000E5A  6E3D               	movwf	(_codigo_ir+2)^0,c
   846  000E5C  0E00               	movlw	0
   847  000E5E  6E3E               	movwf	(_codigo_ir+3)^0,c
   848  000E60                     
   849                           ;main.c: 267: _delay((unsigned long)((2000)*(48000000/4000.0)));
   850  000E60  0E7A               	movlw	122
   851  000E62  6E39               	movwf	(??_main+1)^0,c
   852  000E64  0EC1               	movlw	193
   853  000E66  6E38               	movwf	??_main^0,c
   854  000E68  0E82               	movlw	130
   855  000E6A                     u1787:
   856  000E6A  2EE8               	decfsz	wreg,f,c
   857  000E6C  D7FE               	bra	u1787
   858  000E6E  2E38               	decfsz	??_main^0,f,c
   859  000E70  D7FC               	bra	u1787
   860  000E72  2E39               	decfsz	(??_main+1)^0,f,c
   861  000E74  D7FA               	bra	u1787
   862  000E76                     
   863                           ;main.c: 269: flag_codigo = 0;
   864  000E76  0E00               	movlw	0
   865  000E78  6E4F               	movwf	_flag_codigo^0,c
   866  000E7A                     
   867                           ;main.c: 270: cuenta = 0;
   868  000E7A  0E00               	movlw	0
   869  000E7C  6E46               	movwf	(_cuenta+1)^0,c
   870  000E7E  0E00               	movlw	0
   871  000E80  6E45               	movwf	_cuenta^0,c
   872  000E82                     
   873                           ;main.c: 271: INTEDG1 = 0;
   874  000E82  9AF1               	bcf	4081,5,c	;volatile
   875  000E84                     
   876                           ;main.c: 272: INT1IF = 0;
   877  000E84  90F0               	bcf	4080,0,c	;volatile
   878  000E86                     
   879                           ;main.c: 273: INT1E = 1;
   880  000E86  86F0               	bsf	4080,3,c	;volatile
   881  000E88                     l2361:
   882                           
   883                           ;main.c: 274: };main.c: 275: _delay((unsigned long)((80)*(48000000/4000.0)));
   884  000E88  0E05               	movlw	5
   885  000E8A  6E39               	movwf	(??_main+1)^0,c
   886  000E8C  0EDF               	movlw	223
   887  000E8E  6E38               	movwf	??_main^0,c
   888  000E90  0EBC               	movlw	188
   889  000E92                     u1797:
   890  000E92  2EE8               	decfsz	wreg,f,c
   891  000E94  D7FE               	bra	u1797
   892  000E96  2E38               	decfsz	??_main^0,f,c
   893  000E98  D7FC               	bra	u1797
   894  000E9A  2E39               	decfsz	(??_main+1)^0,f,c
   895  000E9C  D7FA               	bra	u1797
   896  000E9E                     
   897                           ;main.c: 276: LATB0 =~ LATB0;
   898  000E9E  A08A               	btfss	3978,0,c	;volatile
   899  000EA0  EF54  F007         	goto	u1761
   900  000EA4  EF57  F007         	goto	u1760
   901  000EA8                     u1761:
   902  000EA8  808A               	bsf	3978,0,c	;volatile
   903  000EAA  EF58  F007         	goto	u1775
   904  000EAE                     u1760:
   905  000EAE  908A               	bcf	3978,0,c	;volatile
   906  000EB0                     u1775:
   907  000EB0                     
   908                           ;main.c: 277: EUSART1_Write_string("Son: ");
   909  000EB0  0E5A               	movlw	low STR_1
   910  000EB2  6E06               	movwf	EUSART1_Write_string@data^0,c
   911  000EB4  0E08               	movlw	high STR_1
   912  000EB6  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
   913  000EB8  ECE8  F00B         	call	_EUSART1_Write_string	;wreg free
   914  000EBC  EF56  F006         	goto	l2305
   915  000EC0  EF37  F000         	goto	start
   916  000EC4                     __end_of_main:
   917                           	callstack 0
   918                           
   919 ;; *************** function _sprintf *****************
   920 ;; Defined at:
   921 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  sp              2   17[COMRAM] PTR unsigned char 
   924 ;;		 -> texto(10), 
   925 ;;  f               2   19[COMRAM] PTR const unsigned char 
   926 ;;		 -> STR_4(4), 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  idx             1   27[COMRAM] unsigned char 
   929 ;;  val             4   31[COMRAM] unsigned long 
   930 ;;  tmpval          4    0        struct .
   931 ;;  cp              3    0        PTR const unsigned char 
   932 ;;  ap              2   35[COMRAM] PTR void [1]
   933 ;;		 -> ?_sprintf(2), 
   934 ;;  prec            2   29[COMRAM] int 
   935 ;;  len             2    0        unsigned int 
   936 ;;  c               1   37[COMRAM] unsigned char 
   937 ;;  flag            1   28[COMRAM] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2   17[COMRAM] int 
   940 ;; Registers used:
   941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         8       0       0       0       0       0       0       0       0
   948 ;;      Locals:        11       0       0       0       0       0       0       0       0
   949 ;;      Temps:          2       0       0       0       0       0       0       0       0
   950 ;;      Totals:        21       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:       21 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 5
   954 ;; This function calls:
   955 ;;		___lldiv
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text1
   962  000EC4                     __ptext1:
   963                           	callstack 0
   964  000EC4                     _sprintf:
   965                           	callstack 25
   966  000EC4                     
   967                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
   968  000EC4  0E16               	movlw	low (?_sprintf+4)
   969  000EC6  6E24               	movwf	sprintf@ap^0,c
   970  000EC8  0E00               	movlw	high (?_sprintf+4)
   971  000ECA  6E25               	movwf	(sprintf@ap+1)^0,c
   972                           
   973                           ;doprnt.c: 553: while((c = *f++)) {
   974  000ECC  EF38  F008         	goto	l2181
   975  000ED0                     l2135:
   976                           
   977                           ;doprnt.c: 555: if(c != '%')
   978  000ED0  0E25               	movlw	37
   979  000ED2  1826               	xorwf	sprintf@c^0,w,c
   980  000ED4  B4D8               	btfsc	status,2,c
   981  000ED6  EF6F  F007         	goto	u1411
   982  000EDA  EF71  F007         	goto	u1410
   983  000EDE                     u1411:
   984  000EDE  EF7B  F007         	goto	l2141
   985  000EE2                     u1410:
   986  000EE2                     
   987                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   988  000EE2  C012  FFD9         	movff	sprintf@sp,fsr2l
   989  000EE6  C013  FFDA         	movff	sprintf@sp+1,fsr2h
   990  000EEA  C026  FFDF         	movff	sprintf@c,indf2
   991  000EEE  4A12               	infsnz	sprintf@sp^0,f,c
   992  000EF0  2A13               	incf	(sprintf@sp+1)^0,f,c
   993                           
   994                           ;doprnt.c: 559: continue;
   995  000EF2  EF38  F008         	goto	l2181
   996  000EF6                     l2141:
   997                           
   998                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   999  000EF6  0E00               	movlw	0
  1000  000EF8  6E1D               	movwf	sprintf@flag^0,c
  1001  000EFA  EF80  F007         	goto	l2147
  1002  000EFE                     l2143:
  1003                           
  1004                           ;doprnt.c: 669: flag |= 0x10;
  1005  000EFE  881D               	bsf	sprintf@flag^0,4,c
  1006  000F00                     l2147:
  1007  000F00  C014  FFF6         	movff	sprintf@f,tblptrl
  1008  000F04  C015  FFF7         	movff	sprintf@f+1,tblptrh
  1009  000F08  4A14               	infsnz	sprintf@f^0,f,c
  1010  000F0A  2A15               	incf	(sprintf@f+1)^0,f,c
  1011  000F0C                     	if	0	;tblptru may be non-zero
  1012  000F0C                     	endif
  1013  000F0C                     	if	0	;tblptru may be non-zero
  1014  000F0C                     	endif
  1015  000F0C  0008               	tblrd		*
  1016  000F0E  CFF5 F026          	movff	tablat,sprintf@c
  1017  000F12  5026               	movf	sprintf@c^0,w,c
  1018                           
  1019                           ; Switch size 1, requested type "simple"
  1020                           ; Number of cases is 3, Range of values is 0 to 120
  1021                           ; switch strategies available:
  1022                           ; Name         Instructions Cycles
  1023                           ; simple_byte           10     6 (average)
  1024                           ;	Chosen strategy is simple_byte
  1025  000F14  0A00               	xorlw	0	; case 0
  1026  000F16  B4D8               	btfsc	status,2,c
  1027  000F18  EF49  F008         	goto	l2183
  1028  000F1C  0A6C               	xorlw	108	; case 108
  1029  000F1E  B4D8               	btfsc	status,2,c
  1030  000F20  EF7F  F007         	goto	l2143
  1031  000F24  0A14               	xorlw	20	; case 120
  1032  000F26  B4D8               	btfsc	status,2,c
  1033  000F28  EF98  F007         	goto	l404
  1034  000F2C  EF38  F008         	goto	l2181
  1035  000F30                     l404:
  1036                           
  1037                           ;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  1038  000F30  A81D               	btfss	sprintf@flag^0,4,c
  1039  000F32  EF9D  F007         	goto	u1421
  1040  000F36  EF9F  F007         	goto	u1420
  1041  000F3A                     u1421:
  1042  000F3A  EFB1  F007         	goto	l2153
  1043  000F3E                     u1420:
  1044  000F3E                     
  1045                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1046  000F3E  C024  FFD9         	movff	sprintf@ap,fsr2l
  1047  000F42  C025  FFDA         	movff	sprintf@ap+1,fsr2h
  1048  000F46  CFDE F020          	movff	postinc2,sprintf@val
  1049  000F4A  CFDE F021          	movff	postinc2,sprintf@val+1
  1050  000F4E  CFDE F022          	movff	postinc2,sprintf@val+2
  1051  000F52  CFDE F023          	movff	postinc2,sprintf@val+3
  1052  000F56  0E04               	movlw	4
  1053  000F58  2624               	addwf	sprintf@ap^0,f,c
  1054  000F5A  0E00               	movlw	0
  1055  000F5C  2225               	addwfc	(sprintf@ap+1)^0,f,c
  1056  000F5E  EFC3  F007         	goto	l2157
  1057  000F62                     l2153:
  1058                           
  1059                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  1060  000F62  C024  FFD9         	movff	sprintf@ap,fsr2l
  1061  000F66  C025  FFDA         	movff	sprintf@ap+1,fsr2h
  1062  000F6A  CFDE F01A          	movff	postinc2,??_sprintf
  1063  000F6E  CFDD F01B          	movff	postdec2,??_sprintf+1
  1064  000F72  C01A  F020         	movff	??_sprintf,sprintf@val
  1065  000F76  C01B  F021         	movff	??_sprintf+1,sprintf@val+1
  1066  000F7A  6A22               	clrf	(sprintf@val+2)^0,c
  1067  000F7C  6A23               	clrf	(sprintf@val+3)^0,c
  1068  000F7E  0E02               	movlw	2
  1069  000F80  2624               	addwf	sprintf@ap^0,f,c
  1070  000F82  0E00               	movlw	0
  1071  000F84  2225               	addwfc	(sprintf@ap+1)^0,f,c
  1072  000F86                     l2157:
  1073                           
  1074                           ;doprnt.c: 1313: };doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0]
      +                           ; c++)
  1075  000F86  0E01               	movlw	1
  1076  000F88  6E26               	movwf	sprintf@c^0,c
  1077  000F8A                     l2163:
  1078                           
  1079                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1080  000F8A  5026               	movf	sprintf@c^0,w,c
  1081  000F8C  0D04               	mullw	4
  1082  000F8E  0E01               	movlw	low _hexpowers
  1083  000F90  24F3               	addwf	243,w,c
  1084  000F92  6EF6               	movwf	tblptrl,c
  1085  000F94  0E08               	movlw	high _hexpowers
  1086  000F96  20F4               	addwfc	244,w,c
  1087  000F98  6EF7               	movwf	tblptrh,c
  1088  000F9A                     	if	0	;There are less than 3 active tblptr bytes
  1089  000F9A                     	endif
  1090  000F9A  0009               	tblrd		*+
  1091  000F9C  50F5               	movf	tablat,w,c
  1092  000F9E  5C20               	subwf	sprintf@val^0,w,c
  1093  000FA0  0009               	tblrd		*+
  1094  000FA2  50F5               	movf	tablat,w,c
  1095  000FA4  5821               	subwfb	(sprintf@val+1)^0,w,c
  1096  000FA6  0009               	tblrd		*+
  1097  000FA8  50F5               	movf	tablat,w,c
  1098  000FAA  5822               	subwfb	(sprintf@val+2)^0,w,c
  1099  000FAC  0009               	tblrd		*+
  1100  000FAE  50F5               	movf	tablat,w,c
  1101  000FB0  5823               	subwfb	(sprintf@val+3)^0,w,c
  1102  000FB2  B0D8               	btfsc	status,0,c
  1103  000FB4  EFDE  F007         	goto	u1431
  1104  000FB8  EFE0  F007         	goto	u1430
  1105  000FBC                     u1431:
  1106  000FBC  EFE2  F007         	goto	l2167
  1107  000FC0                     u1430:
  1108  000FC0  EFEC  F007         	goto	l409
  1109  000FC4                     l2167:
  1110  000FC4  2A26               	incf	sprintf@c^0,f,c
  1111  000FC6  0E08               	movlw	8
  1112  000FC8  1826               	xorwf	sprintf@c^0,w,c
  1113  000FCA  A4D8               	btfss	status,2,c
  1114  000FCC  EFEA  F007         	goto	u1441
  1115  000FD0  EFEC  F007         	goto	u1440
  1116  000FD4                     u1441:
  1117  000FD4  EFC5  F007         	goto	l2163
  1118  000FD8                     u1440:
  1119  000FD8                     l409:
  1120                           
  1121                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1122  000FD8  C026  F01E         	movff	sprintf@c,sprintf@prec
  1123  000FDC  6A1F               	clrf	(sprintf@prec+1)^0,c
  1124                           
  1125                           ;doprnt.c: 1500: while(prec--) {
  1126  000FDE  EF2B  F008         	goto	l2179
  1127  000FE2                     l2171:
  1128                           
  1129                           ;doprnt.c: 1504: {;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpower
      +                          s[(unsigned int)prec]) & 0xF;
  1130  000FE2  C020  F005         	movff	sprintf@val,___lldiv@dividend
  1131  000FE6  C021  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  1132  000FEA  C022  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  1133  000FEE  C023  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  1134  000FF2  C01E  F01A         	movff	sprintf@prec,??_sprintf
  1135  000FF6  C01F  F01B         	movff	sprintf@prec+1,??_sprintf+1
  1136  000FFA  90D8               	bcf	status,0,c
  1137  000FFC  361A               	rlcf	??_sprintf^0,f,c
  1138  000FFE  361B               	rlcf	(??_sprintf+1)^0,f,c
  1139  001000  90D8               	bcf	status,0,c
  1140  001002  361A               	rlcf	??_sprintf^0,f,c
  1141  001004  361B               	rlcf	(??_sprintf+1)^0,f,c
  1142  001006  0E01               	movlw	low _hexpowers
  1143  001008  241A               	addwf	??_sprintf^0,w,c
  1144  00100A  6EF6               	movwf	tblptrl,c
  1145  00100C  0E08               	movlw	high _hexpowers
  1146  00100E  201B               	addwfc	(??_sprintf+1)^0,w,c
  1147  001010  6EF7               	movwf	tblptrh,c
  1148  001012                     	if	0	;There are less than 3 active tblptr bytes
  1149  001012                     	endif
  1150  001012  0009               	tblrd		*+
  1151  001014  CFF5 F009          	movff	tablat,___lldiv@divisor
  1152  001018  0009               	tblrd		*+
  1153  00101A  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  1154  00101E  0009               	tblrd		*+
  1155  001020  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  1156  001024  000A               	tblrd		*-
  1157  001026  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  1158  00102A  EC30  F00B         	call	___lldiv	;wreg free
  1159  00102E  5005               	movf	?___lldiv^0,w,c
  1160  001030  0B0F               	andlw	15
  1161  001032  6E1C               	movwf	sprintf@idx^0,c
  1162  001034                     
  1163                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  1164  001034  0E21               	movlw	low STR_12
  1165  001036  241C               	addwf	sprintf@idx^0,w,c
  1166  001038  6EF6               	movwf	tblptrl,c
  1167  00103A  6AF7               	clrf	tblptrh,c
  1168  00103C  0E08               	movlw	high STR_12
  1169  00103E  22F7               	addwfc	tblptrh,f,c
  1170  001040                     	if	0	;There are less than 3 active tblptr bytes
  1171  001040                     	endif
  1172  001040  0008               	tblrd		*
  1173  001042  CFF5 F026          	movff	tablat,sprintf@c
  1174  001046                     
  1175                           ;doprnt.c: 1534: };doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1176  001046  C012  FFD9         	movff	sprintf@sp,fsr2l
  1177  00104A  C013  FFDA         	movff	sprintf@sp+1,fsr2h
  1178  00104E  C026  FFDF         	movff	sprintf@c,indf2
  1179  001052  4A12               	infsnz	sprintf@sp^0,f,c
  1180  001054  2A13               	incf	(sprintf@sp+1)^0,f,c
  1181  001056                     l2179:
  1182  001056  061E               	decf	sprintf@prec^0,f,c
  1183  001058  A0D8               	btfss	status,0,c
  1184  00105A  061F               	decf	(sprintf@prec+1)^0,f,c
  1185  00105C  281E               	incf	sprintf@prec^0,w,c
  1186  00105E  E106               	bnz	u1451
  1187  001060  281F               	incf	(sprintf@prec+1)^0,w,c
  1188  001062  A4D8               	btfss	status,2,c
  1189  001064  EF36  F008         	goto	u1451
  1190  001068  EF38  F008         	goto	u1450
  1191  00106C                     u1451:
  1192  00106C  EFF1  F007         	goto	l2171
  1193  001070                     u1450:
  1194  001070                     l2181:
  1195  001070  C014  FFF6         	movff	sprintf@f,tblptrl
  1196  001074  C015  FFF7         	movff	sprintf@f+1,tblptrh
  1197  001078  4A14               	infsnz	sprintf@f^0,f,c
  1198  00107A  2A15               	incf	(sprintf@f+1)^0,f,c
  1199  00107C                     	if	0	;tblptru may be non-zero
  1200  00107C                     	endif
  1201  00107C                     	if	0	;tblptru may be non-zero
  1202  00107C                     	endif
  1203  00107C  0008               	tblrd		*
  1204  00107E  CFF5 F026          	movff	tablat,sprintf@c
  1205  001082  5026               	movf	sprintf@c^0,w,c
  1206  001084  A4D8               	btfss	status,2,c
  1207  001086  EF47  F008         	goto	u1461
  1208  00108A  EF49  F008         	goto	u1460
  1209  00108E                     u1461:
  1210  00108E  EF68  F007         	goto	l2135
  1211  001092                     u1460:
  1212  001092                     l2183:
  1213                           
  1214                           ;doprnt.c: 1564: *sp = 0;
  1215  001092  C012  FFD9         	movff	sprintf@sp,fsr2l
  1216  001096  C013  FFDA         	movff	sprintf@sp+1,fsr2h
  1217  00109A  0E00               	movlw	0
  1218  00109C  6EDF               	movwf	indf2,c
  1219  00109E  0012               	return		;funcret
  1220  0010A0                     __end_of_sprintf:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function ___lldiv *****************
  1224 ;; Defined at:
  1225 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  dividend        4    4[COMRAM] unsigned long 
  1228 ;;  divisor         4    8[COMRAM] unsigned long 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  quotient        4   12[COMRAM] unsigned long 
  1231 ;;  counter         1   16[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  4    4[COMRAM] unsigned long 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1241 ;;      Params:         8       0       0       0       0       0       0       0       0
  1242 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1244 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1245 ;;Total ram usage:       13 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 4
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_sprintf
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text2
  1256  001660                     __ptext2:
  1257                           	callstack 0
  1258  001660                     ___lldiv:
  1259                           	callstack 25
  1260  001660  0E00               	movlw	0
  1261  001662  6E0D               	movwf	___lldiv@quotient^0,c
  1262  001664  0E00               	movlw	0
  1263  001666  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  1264  001668  0E00               	movlw	0
  1265  00166A  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  1266  00166C  0E00               	movlw	0
  1267  00166E  6E10               	movwf	(___lldiv@quotient+3)^0,c
  1268  001670  5009               	movf	___lldiv@divisor^0,w,c
  1269  001672  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  1270  001674  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  1271  001676  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  1272  001678  B4D8               	btfsc	status,2,c
  1273  00167A  EF41  F00B         	goto	u961
  1274  00167E  EF43  F00B         	goto	u960
  1275  001682                     u961:
  1276  001682  EF79  F00B         	goto	l445
  1277  001686                     u960:
  1278  001686  0E01               	movlw	1
  1279  001688  6E11               	movwf	___lldiv@counter^0,c
  1280  00168A  EF4D  F00B         	goto	l1861
  1281  00168E                     l1859:
  1282  00168E  90D8               	bcf	status,0,c
  1283  001690  3609               	rlcf	___lldiv@divisor^0,f,c
  1284  001692  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  1285  001694  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  1286  001696  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  1287  001698  2A11               	incf	___lldiv@counter^0,f,c
  1288  00169A                     l1861:
  1289  00169A  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  1290  00169C  EF52  F00B         	goto	u971
  1291  0016A0  EF54  F00B         	goto	u970
  1292  0016A4                     u971:
  1293  0016A4  EF47  F00B         	goto	l1859
  1294  0016A8                     u970:
  1295  0016A8                     l1863:
  1296  0016A8  90D8               	bcf	status,0,c
  1297  0016AA  360D               	rlcf	___lldiv@quotient^0,f,c
  1298  0016AC  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  1299  0016AE  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  1300  0016B0  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  1301  0016B2  5009               	movf	___lldiv@divisor^0,w,c
  1302  0016B4  5C05               	subwf	___lldiv@dividend^0,w,c
  1303  0016B6  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1304  0016B8  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  1305  0016BA  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1306  0016BC  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  1307  0016BE  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1308  0016C0  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  1309  0016C2  A0D8               	btfss	status,0,c
  1310  0016C4  EF66  F00B         	goto	u981
  1311  0016C8  EF68  F00B         	goto	u980
  1312  0016CC                     u981:
  1313  0016CC  EF71  F00B         	goto	l1871
  1314  0016D0                     u980:
  1315  0016D0  5009               	movf	___lldiv@divisor^0,w,c
  1316  0016D2  5E05               	subwf	___lldiv@dividend^0,f,c
  1317  0016D4  500A               	movf	(___lldiv@divisor+1)^0,w,c
  1318  0016D6  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  1319  0016D8  500B               	movf	(___lldiv@divisor+2)^0,w,c
  1320  0016DA  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  1321  0016DC  500C               	movf	(___lldiv@divisor+3)^0,w,c
  1322  0016DE  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  1323  0016E0  800D               	bsf	___lldiv@quotient^0,0,c
  1324  0016E2                     l1871:
  1325  0016E2  90D8               	bcf	status,0,c
  1326  0016E4  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  1327  0016E6  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  1328  0016E8  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  1329  0016EA  3209               	rrcf	___lldiv@divisor^0,f,c
  1330  0016EC  2E11               	decfsz	___lldiv@counter^0,f,c
  1331  0016EE  EF54  F00B         	goto	l1863
  1332  0016F2                     l445:
  1333  0016F2  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  1334  0016F6  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  1335  0016FA  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  1336  0016FE  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  1337  001702  0012               	return		;funcret
  1338  001704                     __end_of___lldiv:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _normaliza *****************
  1342 ;; Defined at:
  1343 ;;		line 108 in file "main.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1360 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        4 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 5
  1364 ;; This function calls:
  1365 ;;		___flge
  1366 ;;		___flmul
  1367 ;;		___xxtofl
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text3
  1374  001254                     __ptext3:
  1375                           	callstack 0
  1376  001254                     _normaliza:
  1377                           	callstack 25
  1378  001254                     
  1379                           ;main.c: 113: for (cont=0;cont<cuenta-1+2;cont++)
  1380  001254  0E00               	movlw	0
  1381  001256  6E4E               	movwf	_cont^0,c
  1382  001258  EFE4  F009         	goto	l2289
  1383  00125C                     l2277:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;main.c: 114: {;main.c: 115: if (tiempo[cont+2] <(float)tiempo[cont] * .8) tiempo[cont]=
      +                          0 ;
  1387  00125C  0E62               	movlw	low (_tiempo+2)
  1388  00125E  244E               	addwf	_cont^0,w,c
  1389  001260  6ED9               	movwf	fsr2l,c
  1390  001262  6ADA               	clrf	fsr2h,c
  1391  001264  0E00               	movlw	high (_tiempo+2)
  1392  001266  22DA               	addwfc	fsr2h,f,c
  1393  001268  50DF               	movf	indf2,w,c
  1394  00126A  6FA6               	movwf	??_normaliza& (0+255),b
  1395  00126C  51A6               	movf	??_normaliza& (0+255),w,b
  1396  00126E  6E05               	movwf	___xxtofl@val^0,c
  1397  001270  6A06               	clrf	(___xxtofl@val+1)^0,c
  1398  001272  6A07               	clrf	(___xxtofl@val+2)^0,c
  1399  001274  6A08               	clrf	(___xxtofl@val+3)^0,c
  1400  001276  0E00               	movlw	0
  1401  001278  EC50  F008         	call	___xxtofl
  1402  00127C  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1403  001280  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1404  001284  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1405  001288  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1406  00128C  0ECD               	movlw	205
  1407  00128E  6E17               	movwf	___flmul@a^0,c
  1408  001290  0ECC               	movlw	204
  1409  001292  6E18               	movwf	(___flmul@a+1)^0,c
  1410  001294  0E4C               	movlw	76
  1411  001296  6E19               	movwf	(___flmul@a+2)^0,c
  1412  001298  0E3F               	movlw	63
  1413  00129A  6E1A               	movwf	(___flmul@a+3)^0,c
  1414  00129C  0E60               	movlw	low _tiempo
  1415  00129E  244E               	addwf	_cont^0,w,c
  1416  0012A0  6ED9               	movwf	fsr2l,c
  1417  0012A2  6ADA               	clrf	fsr2h,c
  1418  0012A4  0E00               	movlw	high _tiempo
  1419  0012A6  22DA               	addwfc	fsr2h,f,c
  1420  0012A8  50DF               	movf	indf2,w,c
  1421  0012AA  0100               	movlb	0	; () banked
  1422  0012AC  6FA7               	movwf	(??_normaliza+1)& (0+255),b
  1423  0012AE  51A7               	movf	(??_normaliza+1)& (0+255),w,b
  1424  0012B0  6E05               	movwf	___xxtofl@val^0,c
  1425  0012B2  6A06               	clrf	(___xxtofl@val+1)^0,c
  1426  0012B4  6A07               	clrf	(___xxtofl@val+2)^0,c
  1427  0012B6  6A08               	clrf	(___xxtofl@val+3)^0,c
  1428  0012B8  0E00               	movlw	0
  1429  0012BA  EC50  F008         	call	___xxtofl
  1430  0012BE  C005  F013         	movff	?___xxtofl,___flmul@b
  1431  0012C2  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1432  0012C6  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1433  0012CA  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1434  0012CE  EC35  F004         	call	___flmul	;wreg free
  1435  0012D2  C013  F030         	movff	?___flmul,___flge@ff2
  1436  0012D6  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1437  0012DA  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1438  0012DE  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1439  0012E2  ECFA  F009         	call	___flge	;wreg free
  1440  0012E6  B0D8               	btfsc	status,0,c
  1441  0012E8  EF78  F009         	goto	u1631
  1442  0012EC  EF7A  F009         	goto	u1630
  1443  0012F0                     u1631:
  1444  0012F0  EF84  F009         	goto	l2281
  1445  0012F4                     u1630:
  1446  0012F4  0E60               	movlw	low _tiempo
  1447  0012F6  244E               	addwf	_cont^0,w,c
  1448  0012F8  6ED9               	movwf	fsr2l,c
  1449  0012FA  6ADA               	clrf	fsr2h,c
  1450  0012FC  0E00               	movlw	high _tiempo
  1451  0012FE  22DA               	addwfc	fsr2h,f,c
  1452  001300  0E00               	movlw	0
  1453  001302  6EDF               	movwf	indf2,c
  1454  001304  EFE3  F009         	goto	l2287
  1455  001308                     l2281:
  1456                           
  1457                           ;main.c: 116: else if (tiempo[cont] <(float)tiempo[cont+2] * .8) tiempo[cont]= 2 ;
  1458  001308  0E60               	movlw	low _tiempo
  1459  00130A  244E               	addwf	_cont^0,w,c
  1460  00130C  6ED9               	movwf	fsr2l,c
  1461  00130E  6ADA               	clrf	fsr2h,c
  1462  001310  0E00               	movlw	high _tiempo
  1463  001312  22DA               	addwfc	fsr2h,f,c
  1464  001314  50DF               	movf	indf2,w,c
  1465  001316  0100               	movlb	0	; () banked
  1466  001318  6FA6               	movwf	??_normaliza& (0+255),b
  1467  00131A  51A6               	movf	??_normaliza& (0+255),w,b
  1468  00131C  6E05               	movwf	___xxtofl@val^0,c
  1469  00131E  6A06               	clrf	(___xxtofl@val+1)^0,c
  1470  001320  6A07               	clrf	(___xxtofl@val+2)^0,c
  1471  001322  6A08               	clrf	(___xxtofl@val+3)^0,c
  1472  001324  0E00               	movlw	0
  1473  001326  EC50  F008         	call	___xxtofl
  1474  00132A  C005  F02C         	movff	?___xxtofl,___flge@ff1
  1475  00132E  C006  F02D         	movff	?___xxtofl+1,___flge@ff1+1
  1476  001332  C007  F02E         	movff	?___xxtofl+2,___flge@ff1+2
  1477  001336  C008  F02F         	movff	?___xxtofl+3,___flge@ff1+3
  1478  00133A  0ECD               	movlw	205
  1479  00133C  6E17               	movwf	___flmul@a^0,c
  1480  00133E  0ECC               	movlw	204
  1481  001340  6E18               	movwf	(___flmul@a+1)^0,c
  1482  001342  0E4C               	movlw	76
  1483  001344  6E19               	movwf	(___flmul@a+2)^0,c
  1484  001346  0E3F               	movlw	63
  1485  001348  6E1A               	movwf	(___flmul@a+3)^0,c
  1486  00134A  0E62               	movlw	low (_tiempo+2)
  1487  00134C  244E               	addwf	_cont^0,w,c
  1488  00134E  6ED9               	movwf	fsr2l,c
  1489  001350  6ADA               	clrf	fsr2h,c
  1490  001352  0E00               	movlw	high (_tiempo+2)
  1491  001354  22DA               	addwfc	fsr2h,f,c
  1492  001356  50DF               	movf	indf2,w,c
  1493  001358  0100               	movlb	0	; () banked
  1494  00135A  6FA7               	movwf	(??_normaliza+1)& (0+255),b
  1495  00135C  51A7               	movf	(??_normaliza+1)& (0+255),w,b
  1496  00135E  6E05               	movwf	___xxtofl@val^0,c
  1497  001360  6A06               	clrf	(___xxtofl@val+1)^0,c
  1498  001362  6A07               	clrf	(___xxtofl@val+2)^0,c
  1499  001364  6A08               	clrf	(___xxtofl@val+3)^0,c
  1500  001366  0E00               	movlw	0
  1501  001368  EC50  F008         	call	___xxtofl
  1502  00136C  C005  F013         	movff	?___xxtofl,___flmul@b
  1503  001370  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1504  001374  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1505  001378  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1506  00137C  EC35  F004         	call	___flmul	;wreg free
  1507  001380  C013  F030         	movff	?___flmul,___flge@ff2
  1508  001384  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  1509  001388  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  1510  00138C  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  1511  001390  ECFA  F009         	call	___flge	;wreg free
  1512  001394  B0D8               	btfsc	status,0,c
  1513  001396  EFCF  F009         	goto	u1641
  1514  00139A  EFD1  F009         	goto	u1640
  1515  00139E                     u1641:
  1516  00139E  EFDB  F009         	goto	l2285
  1517  0013A2                     u1640:
  1518  0013A2  0E60               	movlw	low _tiempo
  1519  0013A4  244E               	addwf	_cont^0,w,c
  1520  0013A6  6ED9               	movwf	fsr2l,c
  1521  0013A8  6ADA               	clrf	fsr2h,c
  1522  0013AA  0E00               	movlw	high _tiempo
  1523  0013AC  22DA               	addwfc	fsr2h,f,c
  1524  0013AE  0E02               	movlw	2
  1525  0013B0  6EDF               	movwf	indf2,c
  1526  0013B2  EFE3  F009         	goto	l2287
  1527  0013B6                     l2285:
  1528                           
  1529                           ;main.c: 117: else tiempo[cont]=1 ;
  1530  0013B6  0E60               	movlw	low _tiempo
  1531  0013B8  244E               	addwf	_cont^0,w,c
  1532  0013BA  6ED9               	movwf	fsr2l,c
  1533  0013BC  6ADA               	clrf	fsr2h,c
  1534  0013BE  0E00               	movlw	high _tiempo
  1535  0013C0  22DA               	addwfc	fsr2h,f,c
  1536  0013C2  0E01               	movlw	1
  1537  0013C4  6EDF               	movwf	indf2,c
  1538  0013C6                     l2287:
  1539  0013C6  2A4E               	incf	_cont^0,f,c
  1540  0013C8                     l2289:
  1541  0013C8  0E01               	movlw	1
  1542  0013CA  2445               	addwf	_cuenta^0,w,c
  1543  0013CC  0100               	movlb	0	; () banked
  1544  0013CE  6FA6               	movwf	??_normaliza& (0+255),b
  1545  0013D0  0E00               	movlw	0
  1546  0013D2  2046               	addwfc	(_cuenta+1)^0,w,c
  1547  0013D4  6FA7               	movwf	(??_normaliza+1)& (0+255),b
  1548  0013D6  504E               	movf	_cont^0,w,c
  1549  0013D8  6FA8               	movwf	(??_normaliza+2)& (0+255),b
  1550  0013DA  6BA9               	clrf	(??_normaliza+3)& (0+255),b
  1551  0013DC  51A6               	movf	??_normaliza& (0+255),w,b
  1552  0013DE  5DA8               	subwf	(??_normaliza+2)& (0+255),w,b
  1553  0013E0  51A7               	movf	(??_normaliza+1)& (0+255),w,b
  1554  0013E2  59A9               	subwfb	(??_normaliza+3)& (0+255),w,b
  1555  0013E4  A0D8               	btfss	status,0,c
  1556  0013E6  EFF7  F009         	goto	u1651
  1557  0013EA  EFF9  F009         	goto	u1650
  1558  0013EE                     u1651:
  1559  0013EE  EF2E  F009         	goto	l2277
  1560  0013F2                     u1650:
  1561  0013F2                     
  1562                           ; BSR set to: 0
  1563  0013F2  0012               	return		;funcret
  1564  0013F4                     __end_of_normaliza:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function ___xxtofl *****************
  1568 ;; Defined at:
  1569 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  sign            1    wreg     unsigned char 
  1572 ;;  val             4    4[COMRAM] long 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  sign            1   12[COMRAM] unsigned char 
  1575 ;;  arg             4   14[COMRAM] unsigned long 
  1576 ;;  exp             1   13[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  4    4[COMRAM] unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1586 ;;      Params:         4       0       0       0       0       0       0       0       0
  1587 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1588 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1589 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1590 ;;Total ram usage:       14 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 4
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_normaliza
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text4
  1601  0010A0                     __ptext4:
  1602                           	callstack 0
  1603  0010A0                     ___xxtofl:
  1604                           	callstack 25
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;incstack = 0
  1608                           ;___xxtofl@sign stored from wreg
  1609  0010A0  6E0D               	movwf	___xxtofl@sign^0,c
  1610  0010A2  500D               	movf	___xxtofl@sign^0,w,c
  1611  0010A4  B4D8               	btfsc	status,2,c
  1612  0010A6  EF57  F008         	goto	u1231
  1613  0010AA  EF59  F008         	goto	u1230
  1614  0010AE                     u1231:
  1615  0010AE  EF7B  F008         	goto	l1061
  1616  0010B2                     u1230:
  1617  0010B2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  1618  0010B4  EF60  F008         	goto	u1240
  1619  0010B8  EF5E  F008         	goto	u1241
  1620  0010BC                     u1241:
  1621  0010BC  EF7B  F008         	goto	l1061
  1622  0010C0                     u1240:
  1623  0010C0  C005  F009         	movff	___xxtofl@val,??___xxtofl
  1624  0010C4  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  1625  0010C8  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  1626  0010CC  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  1627  0010D0  1E09               	comf	??___xxtofl^0,f,c
  1628  0010D2  1E0A               	comf	(??___xxtofl+1)^0,f,c
  1629  0010D4  1E0B               	comf	(??___xxtofl+2)^0,f,c
  1630  0010D6  1E0C               	comf	(??___xxtofl+3)^0,f,c
  1631  0010D8  2A09               	incf	??___xxtofl^0,f,c
  1632  0010DA  0E00               	movlw	0
  1633  0010DC  220A               	addwfc	(??___xxtofl+1)^0,f,c
  1634  0010DE  220B               	addwfc	(??___xxtofl+2)^0,f,c
  1635  0010E0  220C               	addwfc	(??___xxtofl+3)^0,f,c
  1636  0010E2  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  1637  0010E6  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  1638  0010EA  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  1639  0010EE  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  1640  0010F2  EF83  F008         	goto	l2033
  1641  0010F6                     l1061:
  1642  0010F6  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  1643  0010FA  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1644  0010FE  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1645  001102  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1646  001106                     l2033:
  1647  001106  5005               	movf	___xxtofl@val^0,w,c
  1648  001108  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  1649  00110A  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  1650  00110C  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  1651  00110E  A4D8               	btfss	status,2,c
  1652  001110  EF8C  F008         	goto	u1251
  1653  001114  EF8E  F008         	goto	u1250
  1654  001118                     u1251:
  1655  001118  EF98  F008         	goto	l2039
  1656  00111C                     u1250:
  1657  00111C  0E00               	movlw	0
  1658  00111E  6E05               	movwf	?___xxtofl^0,c
  1659  001120  0E00               	movlw	0
  1660  001122  6E06               	movwf	(?___xxtofl+1)^0,c
  1661  001124  0E00               	movlw	0
  1662  001126  6E07               	movwf	(?___xxtofl+2)^0,c
  1663  001128  0E00               	movlw	0
  1664  00112A  6E08               	movwf	(?___xxtofl+3)^0,c
  1665  00112C  EF29  F009         	goto	l1064
  1666  001130                     l2039:
  1667  001130  0E96               	movlw	150
  1668  001132  6E0E               	movwf	___xxtofl@exp^0,c
  1669  001134  EFA2  F008         	goto	l2043
  1670  001138                     l2041:
  1671  001138  2A0E               	incf	___xxtofl@exp^0,f,c
  1672  00113A  90D8               	bcf	status,0,c
  1673  00113C  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  1674  00113E  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  1675  001140  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  1676  001142  320F               	rrcf	___xxtofl@arg^0,f,c
  1677  001144                     l2043:
  1678  001144  0E00               	movlw	0
  1679  001146  140F               	andwf	___xxtofl@arg^0,w,c
  1680  001148  6E09               	movwf	??___xxtofl^0,c
  1681  00114A  0E00               	movlw	0
  1682  00114C  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  1683  00114E  6E0A               	movwf	(??___xxtofl+1)^0,c
  1684  001150  0E00               	movlw	0
  1685  001152  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  1686  001154  6E0B               	movwf	(??___xxtofl+2)^0,c
  1687  001156  0EFE               	movlw	254
  1688  001158  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  1689  00115A  6E0C               	movwf	(??___xxtofl+3)^0,c
  1690  00115C  5009               	movf	??___xxtofl^0,w,c
  1691  00115E  100A               	iorwf	(??___xxtofl+1)^0,w,c
  1692  001160  100B               	iorwf	(??___xxtofl+2)^0,w,c
  1693  001162  100C               	iorwf	(??___xxtofl+3)^0,w,c
  1694  001164  A4D8               	btfss	status,2,c
  1695  001166  EFB7  F008         	goto	u1261
  1696  00116A  EFB9  F008         	goto	u1260
  1697  00116E                     u1261:
  1698  00116E  EF9C  F008         	goto	l2041
  1699  001172                     u1260:
  1700  001172  EFC7  F008         	goto	l1068
  1701  001176                     l2045:
  1702  001176  2A0E               	incf	___xxtofl@exp^0,f,c
  1703  001178  0E01               	movlw	1
  1704  00117A  260F               	addwf	___xxtofl@arg^0,f,c
  1705  00117C  0E00               	movlw	0
  1706  00117E  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  1707  001180  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  1708  001182  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  1709  001184  90D8               	bcf	status,0,c
  1710  001186  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  1711  001188  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  1712  00118A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  1713  00118C  320F               	rrcf	___xxtofl@arg^0,f,c
  1714  00118E                     l1068:
  1715  00118E  0E00               	movlw	0
  1716  001190  140F               	andwf	___xxtofl@arg^0,w,c
  1717  001192  6E09               	movwf	??___xxtofl^0,c
  1718  001194  0E00               	movlw	0
  1719  001196  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  1720  001198  6E0A               	movwf	(??___xxtofl+1)^0,c
  1721  00119A  0E00               	movlw	0
  1722  00119C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  1723  00119E  6E0B               	movwf	(??___xxtofl+2)^0,c
  1724  0011A0  0EFF               	movlw	255
  1725  0011A2  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  1726  0011A4  6E0C               	movwf	(??___xxtofl+3)^0,c
  1727  0011A6  5009               	movf	??___xxtofl^0,w,c
  1728  0011A8  100A               	iorwf	(??___xxtofl+1)^0,w,c
  1729  0011AA  100B               	iorwf	(??___xxtofl+2)^0,w,c
  1730  0011AC  100C               	iorwf	(??___xxtofl+3)^0,w,c
  1731  0011AE  A4D8               	btfss	status,2,c
  1732  0011B0  EFDC  F008         	goto	u1271
  1733  0011B4  EFDE  F008         	goto	u1270
  1734  0011B8                     u1271:
  1735  0011B8  EFBB  F008         	goto	l2045
  1736  0011BC                     u1270:
  1737  0011BC  EFE6  F008         	goto	l2053
  1738  0011C0                     l2051:
  1739  0011C0  060E               	decf	___xxtofl@exp^0,f,c
  1740  0011C2  90D8               	bcf	status,0,c
  1741  0011C4  360F               	rlcf	___xxtofl@arg^0,f,c
  1742  0011C6  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  1743  0011C8  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  1744  0011CA  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  1745  0011CC                     l2053:
  1746  0011CC  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  1747  0011CE  EFEB  F008         	goto	u1281
  1748  0011D2  EFED  F008         	goto	u1280
  1749  0011D6                     u1281:
  1750  0011D6  EFF5  F008         	goto	l1075
  1751  0011DA                     u1280:
  1752  0011DA  0E02               	movlw	2
  1753  0011DC  600E               	cpfslt	___xxtofl@exp^0,c
  1754  0011DE  EFF3  F008         	goto	u1291
  1755  0011E2  EFF5  F008         	goto	u1290
  1756  0011E6                     u1291:
  1757  0011E6  EFE0  F008         	goto	l2051
  1758  0011EA                     u1290:
  1759  0011EA                     l1075:
  1760  0011EA  B00E               	btfsc	___xxtofl@exp^0,0,c
  1761  0011EC  EFFA  F008         	goto	u1301
  1762  0011F0  EFFC  F008         	goto	u1300
  1763  0011F4                     u1301:
  1764  0011F4  EFFD  F008         	goto	l2059
  1765  0011F8                     u1300:
  1766  0011F8  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  1767  0011FA                     l2059:
  1768  0011FA  90D8               	bcf	status,0,c
  1769  0011FC  320E               	rrcf	___xxtofl@exp^0,f,c
  1770  0011FE  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  1771  001202  6A0A               	clrf	(??___xxtofl+1)^0,c
  1772  001204  6A0B               	clrf	(??___xxtofl+2)^0,c
  1773  001206  6A0C               	clrf	(??___xxtofl+3)^0,c
  1774  001208  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  1775  00120C  6A0B               	clrf	(??___xxtofl+2)^0,c
  1776  00120E  6A0A               	clrf	(??___xxtofl+1)^0,c
  1777  001210  6A09               	clrf	??___xxtofl^0,c
  1778  001212  5009               	movf	??___xxtofl^0,w,c
  1779  001214  120F               	iorwf	___xxtofl@arg^0,f,c
  1780  001216  500A               	movf	(??___xxtofl+1)^0,w,c
  1781  001218  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  1782  00121A  500B               	movf	(??___xxtofl+2)^0,w,c
  1783  00121C  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  1784  00121E  500C               	movf	(??___xxtofl+3)^0,w,c
  1785  001220  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  1786  001222  500D               	movf	___xxtofl@sign^0,w,c
  1787  001224  B4D8               	btfsc	status,2,c
  1788  001226  EF17  F009         	goto	u1311
  1789  00122A  EF19  F009         	goto	u1310
  1790  00122E                     u1311:
  1791  00122E  EF21  F009         	goto	l2069
  1792  001232                     u1310:
  1793  001232  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  1794  001234  EF20  F009         	goto	u1320
  1795  001238  EF1E  F009         	goto	u1321
  1796  00123C                     u1321:
  1797  00123C  EF21  F009         	goto	l2069
  1798  001240                     u1320:
  1799  001240  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  1800  001242                     l2069:
  1801  001242  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  1802  001246  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  1803  00124A  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  1804  00124E  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  1805  001252                     l1064:
  1806  001252  0012               	return		;funcret
  1807  001254                     __end_of___xxtofl:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function ___flmul *****************
  1811 ;; Defined at:
  1812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  b               4   18[COMRAM] unsigned char 
  1815 ;;  a               4   22[COMRAM] unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  prod            4   37[COMRAM] struct .
  1818 ;;  grs             4   31[COMRAM] unsigned long 
  1819 ;;  temp            2   41[COMRAM] struct .
  1820 ;;  bexp            1   36[COMRAM] unsigned char 
  1821 ;;  aexp            1   35[COMRAM] unsigned char 
  1822 ;;  sign            1   30[COMRAM] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  4   18[COMRAM] unsigned char 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, prodl, prodh
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1832 ;;      Params:         8       0       0       0       0       0       0       0       0
  1833 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1834 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1835 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1836 ;;Total ram usage:       25 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 4
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_normaliza
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text5
  1847  00086A                     __ptext5:
  1848                           	callstack 0
  1849  00086A                     ___flmul:
  1850                           	callstack 25
  1851  00086A  5016               	movf	(___flmul@b+3)^0,w,c
  1852  00086C  0B80               	andlw	128
  1853  00086E  6E1F               	movwf	___flmul@sign^0,c
  1854  000870  5016               	movf	(___flmul@b+3)^0,w,c
  1855  000872  2416               	addwf	(___flmul@b+3)^0,w,c
  1856  000874  6E25               	movwf	___flmul@bexp^0,c
  1857  000876  AE15               	btfss	(___flmul@b+2)^0,7,c
  1858  000878  EF40  F004         	goto	u991
  1859  00087C  EF42  F004         	goto	u990
  1860  000880                     u991:
  1861  000880  EF43  F004         	goto	l1881
  1862  000884                     u990:
  1863  000884  8025               	bsf	___flmul@bexp^0,0,c
  1864  000886                     l1881:
  1865  000886  5025               	movf	___flmul@bexp^0,w,c
  1866  000888  B4D8               	btfsc	status,2,c
  1867  00088A  EF49  F004         	goto	u1001
  1868  00088E  EF4B  F004         	goto	u1000
  1869  000892                     u1001:
  1870  000892  EF5E  F004         	goto	l1889
  1871  000896                     u1000:
  1872  000896  2825               	incf	___flmul@bexp^0,w,c
  1873  000898  A4D8               	btfss	status,2,c
  1874  00089A  EF51  F004         	goto	u1011
  1875  00089E  EF53  F004         	goto	u1010
  1876  0008A2                     u1011:
  1877  0008A2  EF5B  F004         	goto	l1887
  1878  0008A6                     u1010:
  1879  0008A6  0E00               	movlw	0
  1880  0008A8  6E13               	movwf	___flmul@b^0,c
  1881  0008AA  0E00               	movlw	0
  1882  0008AC  6E14               	movwf	(___flmul@b+1)^0,c
  1883  0008AE  0E00               	movlw	0
  1884  0008B0  6E15               	movwf	(___flmul@b+2)^0,c
  1885  0008B2  0E00               	movlw	0
  1886  0008B4  6E16               	movwf	(___flmul@b+3)^0,c
  1887  0008B6                     l1887:
  1888  0008B6  8E15               	bsf	(___flmul@b+2)^0,7,c
  1889  0008B8  EF66  F004         	goto	l1891
  1890  0008BC                     l1889:
  1891  0008BC  0E00               	movlw	0
  1892  0008BE  6E13               	movwf	___flmul@b^0,c
  1893  0008C0  0E00               	movlw	0
  1894  0008C2  6E14               	movwf	(___flmul@b+1)^0,c
  1895  0008C4  0E00               	movlw	0
  1896  0008C6  6E15               	movwf	(___flmul@b+2)^0,c
  1897  0008C8  0E00               	movlw	0
  1898  0008CA  6E16               	movwf	(___flmul@b+3)^0,c
  1899  0008CC                     l1891:
  1900  0008CC  501A               	movf	(___flmul@a+3)^0,w,c
  1901  0008CE  0B80               	andlw	128
  1902  0008D0  1A1F               	xorwf	___flmul@sign^0,f,c
  1903  0008D2  501A               	movf	(___flmul@a+3)^0,w,c
  1904  0008D4  241A               	addwf	(___flmul@a+3)^0,w,c
  1905  0008D6  6E24               	movwf	___flmul@aexp^0,c
  1906  0008D8  AE19               	btfss	(___flmul@a+2)^0,7,c
  1907  0008DA  EF71  F004         	goto	u1021
  1908  0008DE  EF73  F004         	goto	u1020
  1909  0008E2                     u1021:
  1910  0008E2  EF74  F004         	goto	l1899
  1911  0008E6                     u1020:
  1912  0008E6  8024               	bsf	___flmul@aexp^0,0,c
  1913  0008E8                     l1899:
  1914  0008E8  5024               	movf	___flmul@aexp^0,w,c
  1915  0008EA  B4D8               	btfsc	status,2,c
  1916  0008EC  EF7A  F004         	goto	u1031
  1917  0008F0  EF7C  F004         	goto	u1030
  1918  0008F4                     u1031:
  1919  0008F4  EF8F  F004         	goto	l1907
  1920  0008F8                     u1030:
  1921  0008F8  2824               	incf	___flmul@aexp^0,w,c
  1922  0008FA  A4D8               	btfss	status,2,c
  1923  0008FC  EF82  F004         	goto	u1041
  1924  000900  EF84  F004         	goto	u1040
  1925  000904                     u1041:
  1926  000904  EF8C  F004         	goto	l1905
  1927  000908                     u1040:
  1928  000908  0E00               	movlw	0
  1929  00090A  6E17               	movwf	___flmul@a^0,c
  1930  00090C  0E00               	movlw	0
  1931  00090E  6E18               	movwf	(___flmul@a+1)^0,c
  1932  000910  0E00               	movlw	0
  1933  000912  6E19               	movwf	(___flmul@a+2)^0,c
  1934  000914  0E00               	movlw	0
  1935  000916  6E1A               	movwf	(___flmul@a+3)^0,c
  1936  000918                     l1905:
  1937  000918  8E19               	bsf	(___flmul@a+2)^0,7,c
  1938  00091A  EF97  F004         	goto	l1020
  1939  00091E                     l1907:
  1940  00091E  0E00               	movlw	0
  1941  000920  6E17               	movwf	___flmul@a^0,c
  1942  000922  0E00               	movlw	0
  1943  000924  6E18               	movwf	(___flmul@a+1)^0,c
  1944  000926  0E00               	movlw	0
  1945  000928  6E19               	movwf	(___flmul@a+2)^0,c
  1946  00092A  0E00               	movlw	0
  1947  00092C  6E1A               	movwf	(___flmul@a+3)^0,c
  1948  00092E                     l1020:
  1949  00092E  5024               	movf	___flmul@aexp^0,w,c
  1950  000930  B4D8               	btfsc	status,2,c
  1951  000932  EF9D  F004         	goto	u1051
  1952  000936  EF9F  F004         	goto	u1050
  1953  00093A                     u1051:
  1954  00093A  EFA7  F004         	goto	l1911
  1955  00093E                     u1050:
  1956  00093E  5025               	movf	___flmul@bexp^0,w,c
  1957  000940  A4D8               	btfss	status,2,c
  1958  000942  EFA5  F004         	goto	u1061
  1959  000946  EFA7  F004         	goto	u1060
  1960  00094A                     u1061:
  1961  00094A  EFB1  F004         	goto	l1915
  1962  00094E                     u1060:
  1963  00094E                     l1911:
  1964  00094E  0E00               	movlw	0
  1965  000950  6E13               	movwf	?___flmul^0,c
  1966  000952  0E00               	movlw	0
  1967  000954  6E14               	movwf	(?___flmul+1)^0,c
  1968  000956  0E00               	movlw	0
  1969  000958  6E15               	movwf	(?___flmul+2)^0,c
  1970  00095A  0E00               	movlw	0
  1971  00095C  6E16               	movwf	(?___flmul+3)^0,c
  1972  00095E  EF49  F006         	goto	l1024
  1973  000962                     l1915:
  1974  000962  5019               	movf	(___flmul@a+2)^0,w,c
  1975  000964  0213               	mulwf	___flmul@b^0,c
  1976  000966  CFF3 F02A          	movff	prodl,___flmul@temp
  1977  00096A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  1978  00096E  502A               	movf	___flmul@temp^0,w,c
  1979  000970  6E20               	movwf	___flmul@grs^0,c
  1980  000972  6A21               	clrf	(___flmul@grs+1)^0,c
  1981  000974  6A22               	clrf	(___flmul@grs+2)^0,c
  1982  000976  6A23               	clrf	(___flmul@grs+3)^0,c
  1983  000978  502B               	movf	(___flmul@temp+1)^0,w,c
  1984  00097A  6E26               	movwf	___flmul@prod^0,c
  1985  00097C  6A27               	clrf	(___flmul@prod+1)^0,c
  1986  00097E  6A28               	clrf	(___flmul@prod+2)^0,c
  1987  000980  6A29               	clrf	(___flmul@prod+3)^0,c
  1988  000982  5018               	movf	(___flmul@a+1)^0,w,c
  1989  000984  0214               	mulwf	(___flmul@b+1)^0,c
  1990  000986  CFF3 F02A          	movff	prodl,___flmul@temp
  1991  00098A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  1992  00098E  502A               	movf	___flmul@temp^0,w,c
  1993  000990  2620               	addwf	___flmul@grs^0,f,c
  1994  000992  0E00               	movlw	0
  1995  000994  2221               	addwfc	(___flmul@grs+1)^0,f,c
  1996  000996  2222               	addwfc	(___flmul@grs+2)^0,f,c
  1997  000998  2223               	addwfc	(___flmul@grs+3)^0,f,c
  1998  00099A  502B               	movf	(___flmul@temp+1)^0,w,c
  1999  00099C  2626               	addwf	___flmul@prod^0,f,c
  2000  00099E  0E00               	movlw	0
  2001  0009A0  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2002  0009A2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2003  0009A4  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2004  0009A6  5017               	movf	___flmul@a^0,w,c
  2005  0009A8  0215               	mulwf	(___flmul@b+2)^0,c
  2006  0009AA  CFF3 F02A          	movff	prodl,___flmul@temp
  2007  0009AE  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2008  0009B2  502A               	movf	___flmul@temp^0,w,c
  2009  0009B4  2620               	addwf	___flmul@grs^0,f,c
  2010  0009B6  0E00               	movlw	0
  2011  0009B8  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2012  0009BA  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2013  0009BC  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2014  0009BE  502B               	movf	(___flmul@temp+1)^0,w,c
  2015  0009C0  2626               	addwf	___flmul@prod^0,f,c
  2016  0009C2  0E00               	movlw	0
  2017  0009C4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2018  0009C6  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2019  0009C8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2020  0009CA  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2021  0009CE  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2022  0009D2  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2023  0009D6  6A20               	clrf	___flmul@grs^0,c
  2024  0009D8  5017               	movf	___flmul@a^0,w,c
  2025  0009DA  0214               	mulwf	(___flmul@b+1)^0,c
  2026  0009DC  CFF3 F02A          	movff	prodl,___flmul@temp
  2027  0009E0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2028  0009E4  502A               	movf	___flmul@temp^0,w,c
  2029  0009E6  2620               	addwf	___flmul@grs^0,f,c
  2030  0009E8  502B               	movf	(___flmul@temp+1)^0,w,c
  2031  0009EA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2032  0009EC  0E00               	movlw	0
  2033  0009EE  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2034  0009F0  0E00               	movlw	0
  2035  0009F2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2036  0009F4  5018               	movf	(___flmul@a+1)^0,w,c
  2037  0009F6  0213               	mulwf	___flmul@b^0,c
  2038  0009F8  CFF3 F02A          	movff	prodl,___flmul@temp
  2039  0009FC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2040  000A00  502A               	movf	___flmul@temp^0,w,c
  2041  000A02  2620               	addwf	___flmul@grs^0,f,c
  2042  000A04  502B               	movf	(___flmul@temp+1)^0,w,c
  2043  000A06  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2044  000A08  0E00               	movlw	0
  2045  000A0A  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2046  000A0C  0E00               	movlw	0
  2047  000A0E  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2048  000A10  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2049  000A14  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2050  000A18  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2051  000A1C  6A20               	clrf	___flmul@grs^0,c
  2052  000A1E  5017               	movf	___flmul@a^0,w,c
  2053  000A20  0213               	mulwf	___flmul@b^0,c
  2054  000A22  CFF3 F02A          	movff	prodl,___flmul@temp
  2055  000A26  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2056  000A2A  502A               	movf	___flmul@temp^0,w,c
  2057  000A2C  2620               	addwf	___flmul@grs^0,f,c
  2058  000A2E  502B               	movf	(___flmul@temp+1)^0,w,c
  2059  000A30  2221               	addwfc	(___flmul@grs+1)^0,f,c
  2060  000A32  0E00               	movlw	0
  2061  000A34  2222               	addwfc	(___flmul@grs+2)^0,f,c
  2062  000A36  0E00               	movlw	0
  2063  000A38  2223               	addwfc	(___flmul@grs+3)^0,f,c
  2064  000A3A  5019               	movf	(___flmul@a+2)^0,w,c
  2065  000A3C  0214               	mulwf	(___flmul@b+1)^0,c
  2066  000A3E  CFF3 F02A          	movff	prodl,___flmul@temp
  2067  000A42  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2068  000A46  502A               	movf	___flmul@temp^0,w,c
  2069  000A48  2626               	addwf	___flmul@prod^0,f,c
  2070  000A4A  502B               	movf	(___flmul@temp+1)^0,w,c
  2071  000A4C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2072  000A4E  0E00               	movlw	0
  2073  000A50  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2074  000A52  0E00               	movlw	0
  2075  000A54  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2076  000A56  5018               	movf	(___flmul@a+1)^0,w,c
  2077  000A58  0215               	mulwf	(___flmul@b+2)^0,c
  2078  000A5A  CFF3 F02A          	movff	prodl,___flmul@temp
  2079  000A5E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2080  000A62  502A               	movf	___flmul@temp^0,w,c
  2081  000A64  2626               	addwf	___flmul@prod^0,f,c
  2082  000A66  502B               	movf	(___flmul@temp+1)^0,w,c
  2083  000A68  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2084  000A6A  0E00               	movlw	0
  2085  000A6C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2086  000A6E  0E00               	movlw	0
  2087  000A70  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2088  000A72  5019               	movf	(___flmul@a+2)^0,w,c
  2089  000A74  0215               	mulwf	(___flmul@b+2)^0,c
  2090  000A76  CFF3 F02A          	movff	prodl,___flmul@temp
  2091  000A7A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2092  000A7E  502A               	movf	___flmul@temp^0,w,c
  2093  000A80  6E1B               	movwf	??___flmul^0,c
  2094  000A82  502B               	movf	(___flmul@temp+1)^0,w,c
  2095  000A84  6E1C               	movwf	(??___flmul+1)^0,c
  2096  000A86  6A1D               	clrf	(??___flmul+2)^0,c
  2097  000A88  6A1E               	clrf	(??___flmul+3)^0,c
  2098  000A8A  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  2099  000A8E  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  2100  000A92  C01B  F01C         	movff	??___flmul,??___flmul+1
  2101  000A96  6A1B               	clrf	??___flmul^0,c
  2102  000A98  501B               	movf	??___flmul^0,w,c
  2103  000A9A  2626               	addwf	___flmul@prod^0,f,c
  2104  000A9C  501C               	movf	(??___flmul+1)^0,w,c
  2105  000A9E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2106  000AA0  501D               	movf	(??___flmul+2)^0,w,c
  2107  000AA2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2108  000AA4  501E               	movf	(??___flmul+3)^0,w,c
  2109  000AA6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2110  000AA8  C020  F01B         	movff	___flmul@grs,??___flmul
  2111  000AAC  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  2112  000AB0  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  2113  000AB4  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  2114  000AB8  0E19               	movlw	25
  2115  000ABA  EF64  F005         	goto	u1070
  2116  000ABE                     u1075:
  2117  000ABE  90D8               	bcf	status,0,c
  2118  000AC0  321E               	rrcf	(??___flmul+3)^0,f,c
  2119  000AC2  321D               	rrcf	(??___flmul+2)^0,f,c
  2120  000AC4  321C               	rrcf	(??___flmul+1)^0,f,c
  2121  000AC6  321B               	rrcf	??___flmul^0,f,c
  2122  000AC8                     u1070:
  2123  000AC8  2EE8               	decfsz	wreg,f,c
  2124  000ACA  EF5F  F005         	goto	u1075
  2125  000ACE  501B               	movf	??___flmul^0,w,c
  2126  000AD0  2626               	addwf	___flmul@prod^0,f,c
  2127  000AD2  501C               	movf	(??___flmul+1)^0,w,c
  2128  000AD4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2129  000AD6  501D               	movf	(??___flmul+2)^0,w,c
  2130  000AD8  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2131  000ADA  501E               	movf	(??___flmul+3)^0,w,c
  2132  000ADC  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2133  000ADE  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2134  000AE2  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2135  000AE6  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2136  000AEA  6A20               	clrf	___flmul@grs^0,c
  2137  000AEC  5024               	movf	___flmul@aexp^0,w,c
  2138  000AEE  C025  F01B         	movff	___flmul@bexp,??___flmul
  2139  000AF2  6A1C               	clrf	(??___flmul+1)^0,c
  2140  000AF4  261B               	addwf	??___flmul^0,f,c
  2141  000AF6  0E00               	movlw	0
  2142  000AF8  221C               	addwfc	(??___flmul+1)^0,f,c
  2143  000AFA  0E82               	movlw	130
  2144  000AFC  241B               	addwf	??___flmul^0,w,c
  2145  000AFE  6E2A               	movwf	___flmul@temp^0,c
  2146  000B00  0EFF               	movlw	255
  2147  000B02  201C               	addwfc	(??___flmul+1)^0,w,c
  2148  000B04  6E2B               	movwf	(___flmul@temp+1)^0,c
  2149  000B06  EF9A  F005         	goto	l1963
  2150  000B0A                     l1957:
  2151  000B0A  90D8               	bcf	status,0,c
  2152  000B0C  3626               	rlcf	___flmul@prod^0,f,c
  2153  000B0E  3627               	rlcf	(___flmul@prod+1)^0,f,c
  2154  000B10  3628               	rlcf	(___flmul@prod+2)^0,f,c
  2155  000B12  3629               	rlcf	(___flmul@prod+3)^0,f,c
  2156  000B14  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2157  000B16  EF8F  F005         	goto	u1081
  2158  000B1A  EF91  F005         	goto	u1080
  2159  000B1E                     u1081:
  2160  000B1E  EF92  F005         	goto	l1027
  2161  000B22                     u1080:
  2162  000B22  8026               	bsf	___flmul@prod^0,0,c
  2163  000B24                     l1027:
  2164  000B24  90D8               	bcf	status,0,c
  2165  000B26  3620               	rlcf	___flmul@grs^0,f,c
  2166  000B28  3621               	rlcf	(___flmul@grs+1)^0,f,c
  2167  000B2A  3622               	rlcf	(___flmul@grs+2)^0,f,c
  2168  000B2C  3623               	rlcf	(___flmul@grs+3)^0,f,c
  2169  000B2E  062A               	decf	___flmul@temp^0,f,c
  2170  000B30  A0D8               	btfss	status,0,c
  2171  000B32  062B               	decf	(___flmul@temp+1)^0,f,c
  2172  000B34                     l1963:
  2173  000B34  AE28               	btfss	(___flmul@prod+2)^0,7,c
  2174  000B36  EF9F  F005         	goto	u1091
  2175  000B3A  EFA1  F005         	goto	u1090
  2176  000B3E                     u1091:
  2177  000B3E  EF85  F005         	goto	l1957
  2178  000B42                     u1090:
  2179  000B42  0E00               	movlw	0
  2180  000B44  6E24               	movwf	___flmul@aexp^0,c
  2181  000B46  AE23               	btfss	(___flmul@grs+3)^0,7,c
  2182  000B48  EFA8  F005         	goto	u1101
  2183  000B4C  EFAA  F005         	goto	u1100
  2184  000B50                     u1101:
  2185  000B50  EFCE  F005         	goto	l1029
  2186  000B54                     u1100:
  2187  000B54  0EFF               	movlw	255
  2188  000B56  1420               	andwf	___flmul@grs^0,w,c
  2189  000B58  6E1B               	movwf	??___flmul^0,c
  2190  000B5A  0EFF               	movlw	255
  2191  000B5C  1421               	andwf	(___flmul@grs+1)^0,w,c
  2192  000B5E  6E1C               	movwf	(??___flmul+1)^0,c
  2193  000B60  0EFF               	movlw	255
  2194  000B62  1422               	andwf	(___flmul@grs+2)^0,w,c
  2195  000B64  6E1D               	movwf	(??___flmul+2)^0,c
  2196  000B66  0E7F               	movlw	127
  2197  000B68  1423               	andwf	(___flmul@grs+3)^0,w,c
  2198  000B6A  6E1E               	movwf	(??___flmul+3)^0,c
  2199  000B6C  501B               	movf	??___flmul^0,w,c
  2200  000B6E  101C               	iorwf	(??___flmul+1)^0,w,c
  2201  000B70  101D               	iorwf	(??___flmul+2)^0,w,c
  2202  000B72  101E               	iorwf	(??___flmul+3)^0,w,c
  2203  000B74  B4D8               	btfsc	status,2,c
  2204  000B76  EFBF  F005         	goto	u1111
  2205  000B7A  EFC1  F005         	goto	u1110
  2206  000B7E                     u1111:
  2207  000B7E  EFC5  F005         	goto	l1030
  2208  000B82                     u1110:
  2209  000B82                     l1971:
  2210  000B82  0E01               	movlw	1
  2211  000B84  6E24               	movwf	___flmul@aexp^0,c
  2212  000B86  EFCE  F005         	goto	l1029
  2213  000B8A                     l1030:
  2214  000B8A  A026               	btfss	___flmul@prod^0,0,c
  2215  000B8C  EFCA  F005         	goto	u1121
  2216  000B90  EFCC  F005         	goto	u1120
  2217  000B94                     u1121:
  2218  000B94  EFCE  F005         	goto	l1029
  2219  000B98                     u1120:
  2220  000B98  EFC1  F005         	goto	l1971
  2221  000B9C                     l1029:
  2222  000B9C  5024               	movf	___flmul@aexp^0,w,c
  2223  000B9E  B4D8               	btfsc	status,2,c
  2224  000BA0  EFD4  F005         	goto	u1131
  2225  000BA4  EFD6  F005         	goto	u1130
  2226  000BA8                     u1131:
  2227  000BA8  EFFA  F005         	goto	l1983
  2228  000BAC                     u1130:
  2229  000BAC  0E01               	movlw	1
  2230  000BAE  2626               	addwf	___flmul@prod^0,f,c
  2231  000BB0  0E00               	movlw	0
  2232  000BB2  2227               	addwfc	(___flmul@prod+1)^0,f,c
  2233  000BB4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  2234  000BB6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  2235  000BB8  A029               	btfss	(___flmul@prod+3)^0,0,c
  2236  000BBA  EFE1  F005         	goto	u1141
  2237  000BBE  EFE3  F005         	goto	u1140
  2238  000BC2                     u1141:
  2239  000BC2  EFFA  F005         	goto	l1983
  2240  000BC6                     u1140:
  2241  000BC6  C026  F01B         	movff	___flmul@prod,??___flmul
  2242  000BCA  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  2243  000BCE  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  2244  000BD2  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  2245  000BD6  341E               	rlcf	(??___flmul+3)^0,w,c
  2246  000BD8  321E               	rrcf	(??___flmul+3)^0,f,c
  2247  000BDA  321D               	rrcf	(??___flmul+2)^0,f,c
  2248  000BDC  321C               	rrcf	(??___flmul+1)^0,f,c
  2249  000BDE  321B               	rrcf	??___flmul^0,f,c
  2250  000BE0  C01B  F026         	movff	??___flmul,___flmul@prod
  2251  000BE4  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  2252  000BE8  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  2253  000BEC  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  2254  000BF0  4A2A               	infsnz	___flmul@temp^0,f,c
  2255  000BF2  2A2B               	incf	(___flmul@temp+1)^0,f,c
  2256  000BF4                     l1983:
  2257  000BF4  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2258  000BF6  EF05  F006         	goto	u1151
  2259  000BFA  502B               	movf	(___flmul@temp+1)^0,w,c
  2260  000BFC  E108               	bnz	u1150
  2261  000BFE  282A               	incf	___flmul@temp^0,w,c
  2262  000C00  A0D8               	btfss	status,0,c
  2263  000C02  EF05  F006         	goto	u1151
  2264  000C06  EF07  F006         	goto	u1150
  2265  000C0A                     u1151:
  2266  000C0A  EF11  F006         	goto	l1987
  2267  000C0E                     u1150:
  2268  000C0E  0E00               	movlw	0
  2269  000C10  6E26               	movwf	___flmul@prod^0,c
  2270  000C12  0E00               	movlw	0
  2271  000C14  6E27               	movwf	(___flmul@prod+1)^0,c
  2272  000C16  0E80               	movlw	128
  2273  000C18  6E28               	movwf	(___flmul@prod+2)^0,c
  2274  000C1A  0E7F               	movlw	127
  2275  000C1C  6E29               	movwf	(___flmul@prod+3)^0,c
  2276  000C1E  EF3F  F006         	goto	l1999
  2277  000C22                     l1987:
  2278  000C22  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  2279  000C24  EF1E  F006         	goto	u1160
  2280  000C28  502B               	movf	(___flmul@temp+1)^0,w,c
  2281  000C2A  E106               	bnz	u1161
  2282  000C2C  042A               	decf	___flmul@temp^0,w,c
  2283  000C2E  B0D8               	btfsc	status,0,c
  2284  000C30  EF1C  F006         	goto	u1161
  2285  000C34  EF1E  F006         	goto	u1160
  2286  000C38                     u1161:
  2287  000C38  EF2A  F006         	goto	l1037
  2288  000C3C                     u1160:
  2289  000C3C  0E00               	movlw	0
  2290  000C3E  6E26               	movwf	___flmul@prod^0,c
  2291  000C40  0E00               	movlw	0
  2292  000C42  6E27               	movwf	(___flmul@prod+1)^0,c
  2293  000C44  0E00               	movlw	0
  2294  000C46  6E28               	movwf	(___flmul@prod+2)^0,c
  2295  000C48  0E00               	movlw	0
  2296  000C4A  6E29               	movwf	(___flmul@prod+3)^0,c
  2297  000C4C  0E00               	movlw	0
  2298  000C4E  6E1F               	movwf	___flmul@sign^0,c
  2299  000C50  EF3F  F006         	goto	l1999
  2300  000C54                     l1037:
  2301  000C54  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  2302  000C58  0EFF               	movlw	255
  2303  000C5A  1626               	andwf	___flmul@prod^0,f,c
  2304  000C5C  0EFF               	movlw	255
  2305  000C5E  1627               	andwf	(___flmul@prod+1)^0,f,c
  2306  000C60  0E7F               	movlw	127
  2307  000C62  1628               	andwf	(___flmul@prod+2)^0,f,c
  2308  000C64  0E00               	movlw	0
  2309  000C66  1629               	andwf	(___flmul@prod+3)^0,f,c
  2310  000C68  A025               	btfss	___flmul@bexp^0,0,c
  2311  000C6A  EF39  F006         	goto	u1171
  2312  000C6E  EF3B  F006         	goto	u1170
  2313  000C72                     u1171:
  2314  000C72  EF3C  F006         	goto	l1997
  2315  000C76                     u1170:
  2316  000C76  8E28               	bsf	(___flmul@prod+2)^0,7,c
  2317  000C78                     l1997:
  2318  000C78  90D8               	bcf	status,0,c
  2319  000C7A  3025               	rrcf	___flmul@bexp^0,w,c
  2320  000C7C  6E29               	movwf	(___flmul@prod+3)^0,c
  2321  000C7E                     l1999:
  2322  000C7E  501F               	movf	___flmul@sign^0,w,c
  2323  000C80  1229               	iorwf	(___flmul@prod+3)^0,f,c
  2324  000C82  C026  F013         	movff	___flmul@prod,?___flmul
  2325  000C86  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  2326  000C8A  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  2327  000C8E  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  2328  000C92                     l1024:
  2329  000C92  0012               	return		;funcret
  2330  000C94                     __end_of___flmul:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function ___flge *****************
  2334 ;; Defined at:
  2335 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  ff1             4   43[COMRAM] unsigned char 
  2338 ;;  ff2             4   47[COMRAM] unsigned char 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;		None               void
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2350 ;;      Params:         8       0       0       0       0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2352 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2353 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2354 ;;Total ram usage:       12 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 4
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_normaliza
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text6
  2365  0013F4                     __ptext6:
  2366                           	callstack 0
  2367  0013F4                     ___flge:
  2368                           	callstack 25
  2369  0013F4  0E00               	movlw	0
  2370  0013F6  142C               	andwf	___flge@ff1^0,w,c
  2371  0013F8  6E34               	movwf	??___flge^0,c
  2372  0013FA  0E00               	movlw	0
  2373  0013FC  142D               	andwf	(___flge@ff1+1)^0,w,c
  2374  0013FE  6E35               	movwf	(??___flge+1)^0,c
  2375  001400  0E80               	movlw	128
  2376  001402  142E               	andwf	(___flge@ff1+2)^0,w,c
  2377  001404  6E36               	movwf	(??___flge+2)^0,c
  2378  001406  0E7F               	movlw	127
  2379  001408  142F               	andwf	(___flge@ff1+3)^0,w,c
  2380  00140A  6E37               	movwf	(??___flge+3)^0,c
  2381  00140C  5034               	movf	??___flge^0,w,c
  2382  00140E  1035               	iorwf	(??___flge+1)^0,w,c
  2383  001410  1036               	iorwf	(??___flge+2)^0,w,c
  2384  001412  1037               	iorwf	(??___flge+3)^0,w,c
  2385  001414  A4D8               	btfss	status,2,c
  2386  001416  EF0F  F00A         	goto	u1181
  2387  00141A  EF11  F00A         	goto	u1180
  2388  00141E                     u1181:
  2389  00141E  EF19  F00A         	goto	l2009
  2390  001422                     u1180:
  2391  001422  0E00               	movlw	0
  2392  001424  6E2C               	movwf	___flge@ff1^0,c
  2393  001426  0E00               	movlw	0
  2394  001428  6E2D               	movwf	(___flge@ff1+1)^0,c
  2395  00142A  0E00               	movlw	0
  2396  00142C  6E2E               	movwf	(___flge@ff1+2)^0,c
  2397  00142E  0E00               	movlw	0
  2398  001430  6E2F               	movwf	(___flge@ff1+3)^0,c
  2399  001432                     l2009:
  2400  001432  0E00               	movlw	0
  2401  001434  1430               	andwf	___flge@ff2^0,w,c
  2402  001436  6E34               	movwf	??___flge^0,c
  2403  001438  0E00               	movlw	0
  2404  00143A  1431               	andwf	(___flge@ff2+1)^0,w,c
  2405  00143C  6E35               	movwf	(??___flge+1)^0,c
  2406  00143E  0E80               	movlw	128
  2407  001440  1432               	andwf	(___flge@ff2+2)^0,w,c
  2408  001442  6E36               	movwf	(??___flge+2)^0,c
  2409  001444  0E7F               	movlw	127
  2410  001446  1433               	andwf	(___flge@ff2+3)^0,w,c
  2411  001448  6E37               	movwf	(??___flge+3)^0,c
  2412  00144A  5034               	movf	??___flge^0,w,c
  2413  00144C  1035               	iorwf	(??___flge+1)^0,w,c
  2414  00144E  1036               	iorwf	(??___flge+2)^0,w,c
  2415  001450  1037               	iorwf	(??___flge+3)^0,w,c
  2416  001452  A4D8               	btfss	status,2,c
  2417  001454  EF2E  F00A         	goto	u1191
  2418  001458  EF30  F00A         	goto	u1190
  2419  00145C                     u1191:
  2420  00145C  EF38  F00A         	goto	l2013
  2421  001460                     u1190:
  2422  001460  0E00               	movlw	0
  2423  001462  6E30               	movwf	___flge@ff2^0,c
  2424  001464  0E00               	movlw	0
  2425  001466  6E31               	movwf	(___flge@ff2+1)^0,c
  2426  001468  0E00               	movlw	0
  2427  00146A  6E32               	movwf	(___flge@ff2+2)^0,c
  2428  00146C  0E00               	movlw	0
  2429  00146E  6E33               	movwf	(___flge@ff2+3)^0,c
  2430  001470                     l2013:
  2431  001470  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  2432  001472  EF3D  F00A         	goto	u1201
  2433  001476  EF3F  F00A         	goto	u1200
  2434  00147A                     u1201:
  2435  00147A  EF48  F00A         	goto	l2017
  2436  00147E                     u1200:
  2437  00147E  6C2C               	negf	___flge@ff1^0,c
  2438  001480  1E2D               	comf	(___flge@ff1+1)^0,f,c
  2439  001482  B0D8               	btfsc	status,0,c
  2440  001484  2A2D               	incf	(___flge@ff1+1)^0,f,c
  2441  001486  1E2E               	comf	(___flge@ff1+2)^0,f,c
  2442  001488  B0D8               	btfsc	status,0,c
  2443  00148A  2A2E               	incf	(___flge@ff1+2)^0,f,c
  2444  00148C  0E80               	movlw	128
  2445  00148E  562F               	subfwb	(___flge@ff1+3)^0,f,c
  2446  001490                     l2017:
  2447  001490  AE33               	btfss	(___flge@ff2+3)^0,7,c
  2448  001492  EF4D  F00A         	goto	u1211
  2449  001496  EF4F  F00A         	goto	u1210
  2450  00149A                     u1211:
  2451  00149A  EF58  F00A         	goto	l679
  2452  00149E                     u1210:
  2453  00149E  6C30               	negf	___flge@ff2^0,c
  2454  0014A0  1E31               	comf	(___flge@ff2+1)^0,f,c
  2455  0014A2  B0D8               	btfsc	status,0,c
  2456  0014A4  2A31               	incf	(___flge@ff2+1)^0,f,c
  2457  0014A6  1E32               	comf	(___flge@ff2+2)^0,f,c
  2458  0014A8  B0D8               	btfsc	status,0,c
  2459  0014AA  2A32               	incf	(___flge@ff2+2)^0,f,c
  2460  0014AC  0E80               	movlw	128
  2461  0014AE  5633               	subfwb	(___flge@ff2+3)^0,f,c
  2462  0014B0                     l679:
  2463  0014B0  0E00               	movlw	0
  2464  0014B2  1A2C               	xorwf	___flge@ff1^0,f,c
  2465  0014B4  0E00               	movlw	0
  2466  0014B6  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  2467  0014B8  0E00               	movlw	0
  2468  0014BA  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  2469  0014BC  0E80               	movlw	128
  2470  0014BE  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  2471  0014C0  0E00               	movlw	0
  2472  0014C2  1A30               	xorwf	___flge@ff2^0,f,c
  2473  0014C4  0E00               	movlw	0
  2474  0014C6  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  2475  0014C8  0E00               	movlw	0
  2476  0014CA  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  2477  0014CC  0E80               	movlw	128
  2478  0014CE  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  2479  0014D0  5030               	movf	___flge@ff2^0,w,c
  2480  0014D2  5C2C               	subwf	___flge@ff1^0,w,c
  2481  0014D4  5031               	movf	(___flge@ff2+1)^0,w,c
  2482  0014D6  582D               	subwfb	(___flge@ff1+1)^0,w,c
  2483  0014D8  5032               	movf	(___flge@ff2+2)^0,w,c
  2484  0014DA  582E               	subwfb	(___flge@ff1+2)^0,w,c
  2485  0014DC  5033               	movf	(___flge@ff2+3)^0,w,c
  2486  0014DE  582F               	subwfb	(___flge@ff1+3)^0,w,c
  2487  0014E0  B0D8               	btfsc	status,0,c
  2488  0014E2  EF75  F00A         	goto	u1221
  2489  0014E6  EF77  F00A         	goto	u1220
  2490  0014EA                     u1221:
  2491  0014EA  EF7A  F00A         	goto	l2023
  2492  0014EE                     u1220:
  2493  0014EE  90D8               	bcf	status,0,c
  2494  0014F0  EF7B  F00A         	goto	l680
  2495  0014F4                     l2023:
  2496  0014F4  80D8               	bsf	status,0,c
  2497  0014F6                     l680:
  2498  0014F6  0012               	return		;funcret
  2499  0014F8                     __end_of___flge:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _memcpy *****************
  2503 ;; Defined at:
  2504 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memcpy.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  d1              2    4[COMRAM] PTR void 
  2507 ;;		 -> texto(10), 
  2508 ;;  s1              3    6[COMRAM] PTR const void 
  2509 ;;		 -> ROM(32767), 
  2510 ;;  n               2    9[COMRAM] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  s               3   11[COMRAM] PTR const unsigned char 
  2513 ;;		 -> ROM(32767), 
  2514 ;;  d               2   14[COMRAM] PTR unsigned char 
  2515 ;;		 -> texto(10), 
  2516 ;;  tmp             1   16[COMRAM] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  2    4[COMRAM] PTR void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2526 ;;      Params:         7       0       0       0       0       0       0       0       0
  2527 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2529 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2530 ;;Total ram usage:       13 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 4
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text7
  2541  00176E                     __ptext7:
  2542                           	callstack 0
  2543  00176E                     _memcpy:
  2544                           	callstack 26
  2545  00176E  C007  F00C         	movff	memcpy@s1,memcpy@s
  2546  001772  C008  F00D         	movff	memcpy@s1+1,memcpy@s+1
  2547  001776  C009  F00E         	movff	memcpy@s1+2,memcpy@s+2
  2548  00177A  C005  F00F         	movff	memcpy@d1,memcpy@d
  2549  00177E  C006  F010         	movff	memcpy@d1+1,memcpy@d+1
  2550  001782  EFDA  F00B         	goto	l2131
  2551  001786                     l2123:
  2552  001786  C00C  FFF6         	movff	memcpy@s,tblptrl
  2553  00178A  C00D  FFF7         	movff	memcpy@s+1,tblptrh
  2554  00178E  C00E  FFF8         	movff	memcpy@s+2,tblptru
  2555  001792  0008               	tblrd		*
  2556  001794  CFF5 F011          	movff	tablat,memcpy@tmp
  2557  001798  0E01               	movlw	1
  2558  00179A  260C               	addwf	memcpy@s^0,f,c
  2559  00179C  0E00               	movlw	0
  2560  00179E  220D               	addwfc	(memcpy@s+1)^0,f,c
  2561  0017A0  0E00               	movlw	0
  2562  0017A2  220E               	addwfc	(memcpy@s+2)^0,f,c
  2563  0017A4  C00F  FFD9         	movff	memcpy@d,fsr2l
  2564  0017A8  C010  FFDA         	movff	memcpy@d+1,fsr2h
  2565  0017AC  C011  FFDF         	movff	memcpy@tmp,indf2
  2566  0017B0  4A0F               	infsnz	memcpy@d^0,f,c
  2567  0017B2  2A10               	incf	(memcpy@d+1)^0,f,c
  2568  0017B4                     l2131:
  2569  0017B4  060A               	decf	memcpy@n^0,f,c
  2570  0017B6  A0D8               	btfss	status,0,c
  2571  0017B8  060B               	decf	(memcpy@n+1)^0,f,c
  2572  0017BA  280A               	incf	memcpy@n^0,w,c
  2573  0017BC  E106               	bnz	u1401
  2574  0017BE  280B               	incf	(memcpy@n+1)^0,w,c
  2575  0017C0  A4D8               	btfss	status,2,c
  2576  0017C2  EFE5  F00B         	goto	u1401
  2577  0017C6  EFE7  F00B         	goto	u1400
  2578  0017CA                     u1401:
  2579  0017CA  EFC3  F00B         	goto	l2123
  2580  0017CE                     u1400:
  2581  0017CE  0012               	return		;funcret
  2582  0017D0                     __end_of_memcpy:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _SYSTEM_Initialize *****************
  2586 ;; Defined at:
  2587 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 6
  2608 ;; This function calls:
  2609 ;;		_EUSART1_Initialize
  2610 ;;		_EXT_INT_Initialize
  2611 ;;		_INTERRUPT_Initialize
  2612 ;;		_OSCILLATOR_Initialize
  2613 ;;		_PIN_MANAGER_Initialize
  2614 ;;		_TMR0_Initialize
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text8
  2621  00194E                     __ptext8:
  2622                           	callstack 0
  2623  00194E                     _SYSTEM_Initialize:
  2624                           	callstack 24
  2625  00194E                     
  2626                           ;mcc.c: 53: INTERRUPT_Initialize();
  2627  00194E  ECE6  F00C         	call	_INTERRUPT_Initialize	;wreg free
  2628  001952                     
  2629                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2630  001952  EC6D  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2631  001956                     
  2632                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2633  001956  EC97  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  2634  00195A                     
  2635                           ;mcc.c: 56: EXT_INT_Initialize();
  2636  00195A  ECBF  F00C         	call	_EXT_INT_Initialize	;wreg free
  2637  00195E                     
  2638                           ;mcc.c: 57: TMR0_Initialize();
  2639  00195E  EC52  F00C         	call	_TMR0_Initialize	;wreg free
  2640  001962                     
  2641                           ;mcc.c: 58: EUSART1_Initialize();
  2642  001962  EC17  F00C         	call	_EUSART1_Initialize	;wreg free
  2643  001966  0012               	return		;funcret
  2644  001968                     __end_of_SYSTEM_Initialize:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _TMR0_Initialize *****************
  2648 ;; Defined at:
  2649 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2665 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2666 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2667 ;;Total ram usage:        2 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 5
  2670 ;; This function calls:
  2671 ;;		_TMR0_SetInterruptHandler
  2672 ;; This function is called by:
  2673 ;;		_SYSTEM_Initialize
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text9
  2678  0018A4                     __ptext9:
  2679                           	callstack 0
  2680  0018A4                     _TMR0_Initialize:
  2681                           	callstack 24
  2682  0018A4                     
  2683                           ;tmr0.c: 72: T0CONbits.T08BIT = 0;
  2684  0018A4  9CD5               	bcf	213,6,c	;volatile
  2685  0018A6                     
  2686                           ;tmr0.c: 75: TMR0H = 0x15;
  2687  0018A6  0E15               	movlw	21
  2688  0018A8  6ED7               	movwf	215,c	;volatile
  2689                           
  2690                           ;tmr0.c: 78: TMR0L = 0x9F;
  2691  0018AA  0E9F               	movlw	159
  2692  0018AC  6ED6               	movwf	214,c	;volatile
  2693  0018AE                     
  2694                           ;tmr0.c: 82: timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  2695  0018AE  50D6               	movf	214,w,c	;volatile
  2696  0018B0  CFD7 F007          	movff	4055,??_TMR0_Initialize	;volatile
  2697  0018B4  6A08               	clrf	(??_TMR0_Initialize+1)^0,c
  2698  0018B6  C007  F008         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2699  0018BA  6A07               	clrf	??_TMR0_Initialize^0,c
  2700  0018BC  1007               	iorwf	??_TMR0_Initialize^0,w,c
  2701  0018BE  6E41               	movwf	_timer0ReloadVal^0,c	;volatile
  2702  0018C0  5008               	movf	(??_TMR0_Initialize+1)^0,w,c
  2703  0018C2  6E42               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  2704  0018C4                     
  2705                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
  2706  0018C4  94F2               	bcf	242,2,c	;volatile
  2707  0018C6                     
  2708                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
  2709  0018C6  8AF2               	bsf	242,5,c	;volatile
  2710  0018C8                     
  2711                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2712  0018C8  0ED0               	movlw	low _TMR0_DefaultInterruptHandler
  2713  0018CA  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2714  0018CC  0E19               	movlw	high _TMR0_DefaultInterruptHandler
  2715  0018CE  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2716  0018D0  ECC9  F00C         	call	_TMR0_SetInterruptHandler	;wreg free
  2717  0018D4                     
  2718                           ;tmr0.c: 94: T0CON = 0x90;
  2719  0018D4  0E90               	movlw	144
  2720  0018D6  6ED5               	movwf	213,c	;volatile
  2721  0018D8  0012               	return		;funcret
  2722  0018DA                     __end_of_TMR0_Initialize:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _TMR0_SetInterruptHandler *****************
  2726 ;; Defined at:
  2727 ;;		line 157 in file "mcc_generated_files/tmr0.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  2730 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2742 ;;      Params:         2       0       0       0       0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2745 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2746 ;;Total ram usage:        2 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 4
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_TMR0_Initialize
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text10
  2757  001992                     __ptext10:
  2758                           	callstack 0
  2759  001992                     _TMR0_SetInterruptHandler:
  2760                           	callstack 24
  2761  001992                     
  2762                           ;tmr0.c: 158: TMR0_InterruptHandler = InterruptHandler;
  2763  001992  C005  F043         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2764  001996  C006  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2765  00199A  0012               	return		;funcret
  2766  00199C                     __end_of_TMR0_SetInterruptHandler:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _PIN_MANAGER_Initialize *****************
  2770 ;; Defined at:
  2771 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 4
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_SYSTEM_Initialize
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text11
  2800  0018DA                     __ptext11:
  2801                           	callstack 0
  2802  0018DA                     _PIN_MANAGER_Initialize:
  2803                           	callstack 25
  2804  0018DA                     
  2805                           ;pin_manager.c: 60: LATA = 0x00;
  2806  0018DA  0E00               	movlw	0
  2807  0018DC  6E89               	movwf	137,c	;volatile
  2808                           
  2809                           ;pin_manager.c: 61: LATB = 0x00;
  2810  0018DE  0E00               	movlw	0
  2811  0018E0  6E8A               	movwf	138,c	;volatile
  2812                           
  2813                           ;pin_manager.c: 62: LATC = 0x00;
  2814  0018E2  0E00               	movlw	0
  2815  0018E4  6E8B               	movwf	139,c	;volatile
  2816                           
  2817                           ;pin_manager.c: 67: TRISA = 0xC7;
  2818  0018E6  0EC7               	movlw	199
  2819  0018E8  6E92               	movwf	146,c	;volatile
  2820                           
  2821                           ;pin_manager.c: 68: TRISB = 0xFE;
  2822  0018EA  0EFE               	movlw	254
  2823  0018EC  6E93               	movwf	147,c	;volatile
  2824                           
  2825                           ;pin_manager.c: 69: TRISC = 0x87;
  2826  0018EE  0E87               	movlw	135
  2827  0018F0  6E94               	movwf	148,c	;volatile
  2828                           
  2829                           ;pin_manager.c: 74: ANSELC = 0x04;
  2830  0018F2  0E04               	movlw	4
  2831  0018F4  010F               	movlb	15	; () banked
  2832  0018F6  6F5D               	movwf	93,b	;volatile
  2833                           
  2834                           ;pin_manager.c: 75: ANSELB = 0x3C;
  2835  0018F8  0E3C               	movlw	60
  2836  0018FA  6F5C               	movwf	92,b	;volatile
  2837                           
  2838                           ;pin_manager.c: 76: ANSELA = 0x07;
  2839  0018FC  0E07               	movlw	7
  2840  0018FE  6F5B               	movwf	91,b	;volatile
  2841                           
  2842                           ;pin_manager.c: 81: WPUB = 0x00;
  2843  001900  0E00               	movlw	0
  2844  001902  6E85               	movwf	133,c	;volatile
  2845  001904                     
  2846                           ; BSR set to: 15
  2847                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  2848  001904  8EF1               	bsf	241,7,c	;volatile
  2849  001906                     
  2850                           ; BSR set to: 15
  2851  001906  0012               	return		;funcret
  2852  001908                     __end_of_PIN_MANAGER_Initialize:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _OSCILLATOR_Initialize *****************
  2856 ;; Defined at:
  2857 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2871 ;;      Params:         0       0       0       0       0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2874 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 4
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_SYSTEM_Initialize
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text12
  2886  00192E                     __ptext12:
  2887                           	callstack 0
  2888  00192E                     _OSCILLATOR_Initialize:
  2889                           	callstack 25
  2890  00192E                     
  2891                           ;mcc.c: 64: OSCCON = 0x70;
  2892  00192E  0E70               	movlw	112
  2893  001930  6ED3               	movwf	211,c	;volatile
  2894                           
  2895                           ;mcc.c: 66: OSCCON2 = 0x00;
  2896  001932  0E00               	movlw	0
  2897  001934  6ED2               	movwf	210,c	;volatile
  2898                           
  2899                           ;mcc.c: 68: OSCTUNE = 0x80;
  2900  001936  0E80               	movlw	128
  2901  001938  6E9B               	movwf	155,c	;volatile
  2902                           
  2903                           ;mcc.c: 70: ACTCON = 0x00;
  2904  00193A  0E00               	movlw	0
  2905  00193C  6EB5               	movwf	181,c	;volatile
  2906  00193E                     l142:
  2907  00193E  AED2               	btfss	4050,7,c	;volatile
  2908  001940  EFA4  F00C         	goto	u21
  2909  001944  EFA6  F00C         	goto	u20
  2910  001948                     u21:
  2911  001948  EF9F  F00C         	goto	l142
  2912  00194C                     u20:
  2913  00194C  0012               	return		;funcret
  2914  00194E                     __end_of_OSCILLATOR_Initialize:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _INTERRUPT_Initialize *****************
  2918 ;; Defined at:
  2919 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		None
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 4
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_SYSTEM_Initialize
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text13
  2948  0019CC                     __ptext13:
  2949                           	callstack 0
  2950  0019CC                     _INTERRUPT_Initialize:
  2951                           	callstack 25
  2952  0019CC                     
  2953                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2954  0019CC  9ED0               	bcf	208,7,c	;volatile
  2955  0019CE  0012               	return		;funcret
  2956  0019D0                     __end_of_INTERRUPT_Initialize:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _EXT_INT_Initialize *****************
  2960 ;; Defined at:
  2961 ;;		line 91 in file "mcc_generated_files/ext_int.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 5
  2982 ;; This function calls:
  2983 ;;		_INT1_SetInterruptHandler
  2984 ;; This function is called by:
  2985 ;;		_SYSTEM_Initialize
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text14
  2990  00197E                     __ptext14:
  2991                           	callstack 0
  2992  00197E                     _EXT_INT_Initialize:
  2993                           	callstack 24
  2994  00197E                     
  2995                           ;ext_int.c: 96: (INTCON3bits.INT1IF = 0);
  2996  00197E  90F0               	bcf	240,0,c	;volatile
  2997                           
  2998                           ;ext_int.c: 97: (INTCON2bits.INTEDG1 = 1);
  2999  001980  8AF1               	bsf	241,5,c	;volatile
  3000  001982                     
  3001                           ;ext_int.c: 99: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3002  001982  0ED2               	movlw	low _INT1_DefaultInterruptHandler
  3003  001984  6E05               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3004  001986  0E19               	movlw	high _INT1_DefaultInterruptHandler
  3005  001988  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3006  00198A  ECCE  F00C         	call	_INT1_SetInterruptHandler	;wreg free
  3007  00198E                     
  3008                           ;ext_int.c: 100: (INTCON3bits.INT1IE = 1);
  3009  00198E  86F0               	bsf	240,3,c	;volatile
  3010  001990  0012               	return		;funcret
  3011  001992                     __end_of_EXT_INT_Initialize:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _INT1_SetInterruptHandler *****************
  3015 ;; Defined at:
  3016 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  3019 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3031 ;;      Params:         2       0       0       0       0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3034 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3035 ;;Total ram usage:        2 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 4
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_EXT_INT_Initialize
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text15
  3046  00199C                     __ptext15:
  3047                           	callstack 0
  3048  00199C                     _INT1_SetInterruptHandler:
  3049                           	callstack 24
  3050  00199C                     
  3051                           ;ext_int.c: 83: INT1_InterruptHandler = InterruptHandler;
  3052  00199C  C005  F03F         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3053  0019A0  C006  F040         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3054  0019A4  0012               	return		;funcret
  3055  0019A6                     __end_of_INT1_SetInterruptHandler:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _EUSART1_Initialize *****************
  3059 ;; Defined at:
  3060 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used: 1
  3080 ;; Hardware stack levels required when called: 5
  3081 ;; This function calls:
  3082 ;;		_EUSART1_SetErrorHandler
  3083 ;;		_EUSART1_SetFramingErrorHandler
  3084 ;;		_EUSART1_SetOverrunErrorHandler
  3085 ;; This function is called by:
  3086 ;;		_SYSTEM_Initialize
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text16
  3091  00182E                     __ptext16:
  3092                           	callstack 0
  3093  00182E                     _EUSART1_Initialize:
  3094                           	callstack 24
  3095  00182E                     
  3096                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  3097  00182E  0E08               	movlw	8
  3098  001830  6EB8               	movwf	184,c	;volatile
  3099                           
  3100                           ;eusart1.c: 74: RCSTA1 = 0x90;
  3101  001832  0E90               	movlw	144
  3102  001834  6EAB               	movwf	171,c	;volatile
  3103                           
  3104                           ;eusart1.c: 77: TXSTA1 = 0x24;
  3105  001836  0E24               	movlw	36
  3106  001838  6EAC               	movwf	172,c	;volatile
  3107                           
  3108                           ;eusart1.c: 80: SPBRG1 = 0xE1;
  3109  00183A  0EE1               	movlw	225
  3110  00183C  6EAF               	movwf	175,c	;volatile
  3111                           
  3112                           ;eusart1.c: 83: SPBRGH1 = 0x04;
  3113  00183E  0E04               	movlw	4
  3114  001840  6EB0               	movwf	176,c	;volatile
  3115  001842                     
  3116                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3117  001842  0E00               	movlw	0
  3118  001844  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3119  001846  0E00               	movlw	0
  3120  001848  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3121  00184A  ECD8  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3122  00184E                     
  3123                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3124  00184E  0E00               	movlw	0
  3125  001850  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3126  001852  0E00               	movlw	0
  3127  001854  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3128  001856  ECD3  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3129  00185A                     
  3130                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3131  00185A  0E00               	movlw	0
  3132  00185C  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3133  00185E  0E00               	movlw	0
  3134  001860  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3135  001862  ECDD  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  3136  001866                     
  3137                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  3138  001866  0E00               	movlw	0
  3139  001868  6E50               	movwf	_eusart1RxLastError^0,c	;volatile
  3140  00186A  0012               	return		;funcret
  3141  00186C                     __end_of_EUSART1_Initialize:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3145 ;; Defined at:
  3146 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3149 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3161 ;;      Params:         2       0       0       0       0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3164 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3165 ;;Total ram usage:        2 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 4
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_EUSART1_Initialize
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text17
  3176  0019A6                     __ptext17:
  3177                           	callstack 0
  3178  0019A6                     _EUSART1_SetOverrunErrorHandler:
  3179                           	callstack 24
  3180  0019A6                     
  3181                           ;eusart1.c: 179: EUSART1_OverrunErrorHandler = interruptHandler;
  3182  0019A6  C005  F049         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3183  0019AA  C006  F04A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3184  0019AE  0012               	return		;funcret
  3185  0019B0                     __end_of_EUSART1_SetOverrunErrorHandler:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3189 ;; Defined at:
  3190 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3193 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         2       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        2 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 4
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_EUSART1_Initialize
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text18
  3220  0019B0                     __ptext18:
  3221                           	callstack 0
  3222  0019B0                     _EUSART1_SetFramingErrorHandler:
  3223                           	callstack 24
  3224  0019B0                     
  3225                           ;eusart1.c: 175: EUSART1_FramingErrorHandler = interruptHandler;
  3226  0019B0  C005  F04B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3227  0019B4  C006  F04C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3228  0019B8  0012               	return		;funcret
  3229  0019BA                     __end_of_EUSART1_SetFramingErrorHandler:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _EUSART1_SetErrorHandler *****************
  3233 ;; Defined at:
  3234 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3237 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3249 ;;      Params:         2       0       0       0       0       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3252 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3253 ;;Total ram usage:        2 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 4
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_EUSART1_Initialize
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text19
  3264  0019BA                     __ptext19:
  3265                           	callstack 0
  3266  0019BA                     _EUSART1_SetErrorHandler:
  3267                           	callstack 24
  3268  0019BA                     
  3269                           ;eusart1.c: 183: EUSART1_ErrorHandler = interruptHandler;
  3270  0019BA  C005  F047         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3271  0019BE  C006  F048         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3272  0019C2  0012               	return		;funcret
  3273  0019C4                     __end_of_EUSART1_SetErrorHandler:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _Hash_algoritmo *****************
  3277 ;; Defined at:
  3278 ;;		line 129 in file "main.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  hash_acum       4   26[COMRAM] unsigned long 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  4   16[COMRAM] unsigned long 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3292 ;;      Params:         4       0       0       0       0       0       0       0       0
  3293 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3294 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3295 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3296 ;;Total ram usage:       14 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 5
  3299 ;; This function calls:
  3300 ;;		___lmul
  3301 ;; This function is called by:
  3302 ;;		_main
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text20
  3307  0015BA                     __ptext20:
  3308                           	callstack 0
  3309  0015BA                     _Hash_algoritmo:
  3310                           	callstack 25
  3311  0015BA                     
  3312                           ;main.c: 131: unsigned long hash_acum = 2166136261;
  3313  0015BA  0EC5               	movlw	197
  3314  0015BC  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3315  0015BE  0E9D               	movlw	157
  3316  0015C0  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3317  0015C2  0E1C               	movlw	28
  3318  0015C4  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3319  0015C6  0E81               	movlw	129
  3320  0015C8  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3321                           
  3322                           ;main.c: 132: for (cont = 0; cont < cuenta - 1; cont++)
  3323  0015CA  0E00               	movlw	0
  3324  0015CC  6E4E               	movwf	_cont^0,c
  3325  0015CE  EF0D  F00B         	goto	l2119
  3326  0015D2                     l2115:
  3327                           
  3328                           ;main.c: 133: {;main.c: 134: hash_acum = (hash_acum * 16777619) ^ tiempo[cont];
  3329  0015D2  C01B  F005         	movff	Hash_algoritmo@hash_acum,___lmul@multiplier
  3330  0015D6  C01C  F006         	movff	Hash_algoritmo@hash_acum+1,___lmul@multiplier+1
  3331  0015DA  C01D  F007         	movff	Hash_algoritmo@hash_acum+2,___lmul@multiplier+2
  3332  0015DE  C01E  F008         	movff	Hash_algoritmo@hash_acum+3,___lmul@multiplier+3
  3333  0015E2  0E93               	movlw	147
  3334  0015E4  6E09               	movwf	___lmul@multiplicand^0,c
  3335  0015E6  0E01               	movlw	1
  3336  0015E8  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  3337  0015EA  0E00               	movlw	0
  3338  0015EC  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  3339  0015EE  0E01               	movlw	1
  3340  0015F0  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  3341  0015F2  EC82  F00B         	call	___lmul	;wreg free
  3342  0015F6  0E60               	movlw	low _tiempo
  3343  0015F8  244E               	addwf	_cont^0,w,c
  3344  0015FA  6ED9               	movwf	fsr2l,c
  3345  0015FC  6ADA               	clrf	fsr2h,c
  3346  0015FE  0E00               	movlw	high _tiempo
  3347  001600  22DA               	addwfc	fsr2h,f,c
  3348  001602  50DF               	movf	indf2,w,c
  3349  001604  6E15               	movwf	??_Hash_algoritmo^0,c
  3350  001606  5015               	movf	??_Hash_algoritmo^0,w,c
  3351  001608  1805               	xorwf	?___lmul^0,w,c
  3352  00160A  6E1B               	movwf	Hash_algoritmo@hash_acum^0,c
  3353  00160C  5006               	movf	(?___lmul+1)^0,w,c
  3354  00160E  6E1C               	movwf	(Hash_algoritmo@hash_acum+1)^0,c
  3355  001610  5007               	movf	(?___lmul+2)^0,w,c
  3356  001612  6E1D               	movwf	(Hash_algoritmo@hash_acum+2)^0,c
  3357  001614  5008               	movf	(?___lmul+3)^0,w,c
  3358  001616  6E1E               	movwf	(Hash_algoritmo@hash_acum+3)^0,c
  3359  001618  2A4E               	incf	_cont^0,f,c
  3360  00161A                     l2119:
  3361  00161A  0EFF               	movlw	255
  3362  00161C  6E15               	movwf	??_Hash_algoritmo^0,c
  3363  00161E  0EFF               	movlw	255
  3364  001620  6E16               	movwf	(??_Hash_algoritmo+1)^0,c
  3365  001622  C045  F017         	movff	_cuenta,??_Hash_algoritmo+2
  3366  001626  C046  F018         	movff	_cuenta+1,??_Hash_algoritmo+3
  3367  00162A  5015               	movf	??_Hash_algoritmo^0,w,c
  3368  00162C  2617               	addwf	(??_Hash_algoritmo+2)^0,f,c
  3369  00162E  5016               	movf	(??_Hash_algoritmo+1)^0,w,c
  3370  001630  2218               	addwfc	(??_Hash_algoritmo+3)^0,f,c
  3371  001632  504E               	movf	_cont^0,w,c
  3372  001634  6E19               	movwf	(??_Hash_algoritmo+4)^0,c
  3373  001636  6A1A               	clrf	(??_Hash_algoritmo+5)^0,c
  3374  001638  5017               	movf	(??_Hash_algoritmo+2)^0,w,c
  3375  00163A  5C19               	subwf	(??_Hash_algoritmo+4)^0,w,c
  3376  00163C  5018               	movf	(??_Hash_algoritmo+3)^0,w,c
  3377  00163E  581A               	subwfb	(??_Hash_algoritmo+5)^0,w,c
  3378  001640  A0D8               	btfss	status,0,c
  3379  001642  EF25  F00B         	goto	u1391
  3380  001646  EF27  F00B         	goto	u1390
  3381  00164A                     u1391:
  3382  00164A  EFE9  F00A         	goto	l2115
  3383  00164E                     u1390:
  3384  00164E                     
  3385                           ;main.c: 135: };main.c: 136: return (hash_acum);
  3386  00164E  C01B  F011         	movff	Hash_algoritmo@hash_acum,?_Hash_algoritmo
  3387  001652  C01C  F012         	movff	Hash_algoritmo@hash_acum+1,?_Hash_algoritmo+1
  3388  001656  C01D  F013         	movff	Hash_algoritmo@hash_acum+2,?_Hash_algoritmo+2
  3389  00165A  C01E  F014         	movff	Hash_algoritmo@hash_acum+3,?_Hash_algoritmo+3
  3390  00165E  0012               	return		;funcret
  3391  001660                     __end_of_Hash_algoritmo:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function ___lmul *****************
  3395 ;; Defined at:
  3396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  multiplier      4    4[COMRAM] unsigned long 
  3399 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  product         4   12[COMRAM] unsigned long 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  4    4[COMRAM] unsigned long 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3411 ;;      Params:         8       0       0       0       0       0       0       0       0
  3412 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3414 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3415 ;;Total ram usage:       12 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 4
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_Hash_algoritmo
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text21
  3426  001704                     __ptext21:
  3427                           	callstack 0
  3428  001704                     ___lmul:
  3429                           	callstack 25
  3430  001704  0E00               	movlw	0
  3431  001706  6E0D               	movwf	___lmul@product^0,c
  3432  001708  0E00               	movlw	0
  3433  00170A  6E0E               	movwf	(___lmul@product+1)^0,c
  3434  00170C  0E00               	movlw	0
  3435  00170E  6E0F               	movwf	(___lmul@product+2)^0,c
  3436  001710  0E00               	movlw	0
  3437  001712  6E10               	movwf	(___lmul@product+3)^0,c
  3438  001714                     l1845:
  3439  001714  A005               	btfss	___lmul@multiplier^0,0,c
  3440  001716  EF8F  F00B         	goto	u941
  3441  00171A  EF91  F00B         	goto	u940
  3442  00171E                     u941:
  3443  00171E  EF99  F00B         	goto	l1849
  3444  001722                     u940:
  3445  001722  5009               	movf	___lmul@multiplicand^0,w,c
  3446  001724  260D               	addwf	___lmul@product^0,f,c
  3447  001726  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  3448  001728  220E               	addwfc	(___lmul@product+1)^0,f,c
  3449  00172A  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  3450  00172C  220F               	addwfc	(___lmul@product+2)^0,f,c
  3451  00172E  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  3452  001730  2210               	addwfc	(___lmul@product+3)^0,f,c
  3453  001732                     l1849:
  3454  001732  90D8               	bcf	status,0,c
  3455  001734  3609               	rlcf	___lmul@multiplicand^0,f,c
  3456  001736  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3457  001738  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3458  00173A  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3459  00173C  90D8               	bcf	status,0,c
  3460  00173E  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  3461  001740  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  3462  001742  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  3463  001744  3205               	rrcf	___lmul@multiplier^0,f,c
  3464  001746  5005               	movf	___lmul@multiplier^0,w,c
  3465  001748  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  3466  00174A  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  3467  00174C  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  3468  00174E  A4D8               	btfss	status,2,c
  3469  001750  EFAC  F00B         	goto	u951
  3470  001754  EFAE  F00B         	goto	u950
  3471  001758                     u951:
  3472  001758  EF8A  F00B         	goto	l1845
  3473  00175C                     u950:
  3474  00175C  C00D  F005         	movff	___lmul@product,?___lmul
  3475  001760  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  3476  001764  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  3477  001768  C010  F008         	movff	___lmul@product+3,?___lmul+3
  3478  00176C  0012               	return		;funcret
  3479  00176E                     __end_of___lmul:
  3480                           	callstack 0
  3481                           
  3482 ;; *************** function _EUSART1_Write_string *****************
  3483 ;; Defined at:
  3484 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  data            2    5[COMRAM] PTR const unsigned char 
  3487 ;;		 -> STR_11(6), STR_10(9), STR_9(9), STR_8(9), 
  3488 ;;		 -> STR_7(2), STR_6(2), STR_5(13), STR_3(2), 
  3489 ;;		 -> STR_2(2), texto(10), STR_1(6), 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3504 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 5
  3508 ;; This function calls:
  3509 ;;		_EUSART1_Write
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text22
  3516  0017D0                     __ptext22:
  3517                           	callstack 0
  3518  0017D0                     _EUSART1_Write_string:
  3519                           	callstack 25
  3520  0017D0                     
  3521                           ;eusart1.c: 143: while(*data != 0)
  3522  0017D0  EFFE  F00B         	goto	l2079
  3523  0017D4                     l2075:
  3524                           
  3525                           ;eusart1.c: 144: {;eusart1.c: 145: EUSART1_Write(*data++);
  3526  0017D4  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3527  0017D8  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3528  0017DC  6AF8               	clrf	tblptru,c
  3529  0017DE  0E07               	movlw	(high __ramtop+-1)
  3530  0017E0  64F7               	cpfsgt	tblptrh,c
  3531  0017E2  D003               	bra	u1337
  3532  0017E4  0008               	tblrd		*
  3533  0017E6  50F5               	movf	tablat,w,c
  3534  0017E8  D005               	bra	u1330
  3535  0017EA                     u1337:
  3536  0017EA  CFF6 FFD9          	movff	tblptrl,fsr2l
  3537  0017EE  CFF7 FFDA          	movff	tblptrh,fsr2h
  3538  0017F2  50DF               	movf	indf2,w,c
  3539  0017F4                     u1330:
  3540  0017F4  ECB4  F00C         	call	_EUSART1_Write
  3541  0017F8  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  3542  0017FA  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  3543  0017FC                     l2079:
  3544  0017FC  C006  FFF6         	movff	EUSART1_Write_string@data,tblptrl
  3545  001800  C007  FFF7         	movff	EUSART1_Write_string@data+1,tblptrh
  3546  001804  6AF8               	clrf	tblptru,c
  3547  001806  0E07               	movlw	(high __ramtop+-1)
  3548  001808  64F7               	cpfsgt	tblptrh,c
  3549  00180A  D003               	bra	u1347
  3550  00180C  0008               	tblrd		*
  3551  00180E  50F5               	movf	tablat,w,c
  3552  001810  D005               	bra	u1340
  3553  001812                     u1347:
  3554  001812  CFF6 FFD9          	movff	tblptrl,fsr2l
  3555  001816  CFF7 FFDA          	movff	tblptrh,fsr2h
  3556  00181A  50DF               	movf	indf2,w,c
  3557  00181C                     u1340:
  3558  00181C  0900               	iorlw	0
  3559  00181E  A4D8               	btfss	status,2,c
  3560  001820  EF14  F00C         	goto	u1351
  3561  001824  EF16  F00C         	goto	u1350
  3562  001828                     u1351:
  3563  001828  EFEA  F00B         	goto	l2075
  3564  00182C                     u1350:
  3565  00182C  0012               	return		;funcret
  3566  00182E                     __end_of_EUSART1_Write_string:
  3567                           	callstack 0
  3568                           
  3569 ;; *************** function _EUSART1_Write *****************
  3570 ;; Defined at:
  3571 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  txData          1    wreg     unsigned char 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  txData          1    4[COMRAM] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0
  3586 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3588 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        1 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 4
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_EUSART1_Write_string
  3596 ;;		_putch
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text23
  3601  001968                     __ptext23:
  3602                           	callstack 0
  3603  001968                     _EUSART1_Write:
  3604                           	callstack 25
  3605                           
  3606                           ;incstack = 0
  3607                           ;EUSART1_Write@txData stored from wreg
  3608  001968  6E05               	movwf	EUSART1_Write@txData^0,c
  3609  00196A                     l67:
  3610  00196A  A89E               	btfss	158,4,c	;volatile
  3611  00196C  EFBA  F00C         	goto	u11
  3612  001970  EFBC  F00C         	goto	u10
  3613  001974                     u11:
  3614  001974  EFB5  F00C         	goto	l67
  3615  001978                     u10:
  3616  001978                     
  3617                           ;eusart1.c: 136: };eusart1.c: 138: TXREG1 = txData;
  3618  001978  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3619  00197C  0012               	return		;funcret
  3620  00197E                     __end_of_EUSART1_Write:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _INTERRUPT_InterruptManager *****************
  3624 ;; Defined at:
  3625 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3641 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3642 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3643 ;;Total ram usage:        4 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 3
  3646 ;; This function calls:
  3647 ;;		_INT1_ISR
  3648 ;;		_TMR0_ISR
  3649 ;; This function is called by:
  3650 ;;		Interrupt level 2
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	intcode
  3655  000008                     __pintcode:
  3656                           	callstack 0
  3657  000008                     _INTERRUPT_InterruptManager:
  3658                           	callstack 24
  3659                           
  3660                           ;incstack = 0
  3661  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3662  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3663  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3664  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3665  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3666  00001A                     
  3667                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3668  00001A  AAF2               	btfss	242,5,c	;volatile
  3669  00001C  EF12  F000         	goto	i2u147_41
  3670  000020  EF14  F000         	goto	i2u147_40
  3671  000024                     i2u147_41:
  3672  000024  EF1D  F000         	goto	i2l2193
  3673  000028                     i2u147_40:
  3674  000028  A4F2               	btfss	242,2,c	;volatile
  3675  00002A  EF19  F000         	goto	i2u148_41
  3676  00002E  EF1B  F000         	goto	i2u148_40
  3677  000032                     i2u148_41:
  3678  000032  EF1D  F000         	goto	i2l2193
  3679  000036                     i2u148_40:
  3680  000036                     
  3681                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  3682  000036  EC36  F00C         	call	_TMR0_ISR	;wreg free
  3683  00003A                     i2l2193:
  3684                           
  3685                           ;interrupt_manager.c: 64: };interrupt_manager.c: 65: if(INTCON3bits.INT1IE == 1 && INTCO
      +                          N3bits.INT1IF == 1)
  3686  00003A  A6F0               	btfss	240,3,c	;volatile
  3687  00003C  EF22  F000         	goto	i2u149_41
  3688  000040  EF24  F000         	goto	i2u149_40
  3689  000044                     i2u149_41:
  3690  000044  EF2D  F000         	goto	i2l255
  3691  000048                     i2u149_40:
  3692  000048  A0F0               	btfss	240,0,c	;volatile
  3693  00004A  EF29  F000         	goto	i2u150_41
  3694  00004E  EF2B  F000         	goto	i2u150_40
  3695  000052                     i2u150_41:
  3696  000052  EF2D  F000         	goto	i2l255
  3697  000056                     i2u150_40:
  3698  000056                     
  3699                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: INT1_ISR();
  3700  000056  ECE2  F00C         	call	_INT1_ISR	;wreg free
  3701  00005A                     i2l255:
  3702  00005A  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3703  00005E  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3704  000062  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3705  000066  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3706  00006A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3707  00006C  0011               	retfie		f
  3708  00006E                     __end_of_INTERRUPT_InterruptManager:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _TMR0_ISR *****************
  3712 ;; Defined at:
  3713 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 1
  3734 ;; This function calls:
  3735 ;;		Absolute function
  3736 ;;		_TMR0_DefaultInterruptHandler
  3737 ;; This function is called by:
  3738 ;;		_INTERRUPT_InterruptManager
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text25
  3743  00186C                     __ptext25:
  3744                           	callstack 0
  3745  00186C                     _TMR0_ISR:
  3746                           	callstack 25
  3747  00186C                     
  3748                           ;tmr0.c: 140: INTCONbits.TMR0IF = 0;
  3749  00186C  94F2               	bcf	242,2,c	;volatile
  3750  00186E                     
  3751                           ;tmr0.c: 144: TMR0H = timer0ReloadVal >> 8;
  3752  00186E  5042               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  3753  001870  6ED7               	movwf	215,c	;volatile
  3754  001872                     
  3755                           ;tmr0.c: 145: TMR0L = (uint8_t) timer0ReloadVal;
  3756  001872  C041  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  3757  001876                     
  3758                           ;tmr0.c: 147: if(TMR0_InterruptHandler)
  3759  001876  5043               	movf	_TMR0_InterruptHandler^0,w,c
  3760  001878  1044               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  3761  00187A  B4D8               	btfsc	status,2,c
  3762  00187C  EF42  F00C         	goto	i2u55_41
  3763  001880  EF44  F00C         	goto	i2u55_40
  3764  001884                     i2u55_41:
  3765  001884  EF51  F00C         	goto	i2l215
  3766  001888                     i2u55_40:
  3767  001888                     
  3768                           ;tmr0.c: 148: {;tmr0.c: 149: TMR0_InterruptHandler();
  3769  001888  D802               	call	i2u56_48
  3770  00188A  EF51  F00C         	goto	i2u56_49
  3771  00188E                     i2u56_48:
  3772  00188E  0005               	push	
  3773  001890  6EFA               	movwf	pclath,c
  3774  001892  5043               	movf	_TMR0_InterruptHandler^0,w,c
  3775  001894  6EFD               	movwf	tosl,c
  3776  001896  5044               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  3777  001898  6EFE               	movwf	tosh,c
  3778  00189A  50F8               	movf	tblptru,w,c
  3779  00189C  6EFF               	movwf	tosu,c
  3780  00189E  50FA               	movf	pclath,w,c
  3781  0018A0  0012               	return		;indir
  3782  0018A2                     i2u56_49:
  3783  0018A2                     i2l215:
  3784  0018A2  0012               	return		;funcret
  3785  0018A4                     __end_of_TMR0_ISR:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3789 ;; Defined at:
  3790 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		None
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_TMR0_Initialize
  3814 ;;		_TMR0_ISR
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text26
  3819  0019D0                     __ptext26:
  3820                           	callstack 0
  3821  0019D0                     _TMR0_DefaultInterruptHandler:
  3822                           	callstack 25
  3823  0019D0  0012               	return		;funcret
  3824  0019D2                     __end_of_TMR0_DefaultInterruptHandler:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _INT1_ISR *****************
  3828 ;; Defined at:
  3829 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 2
  3850 ;; This function calls:
  3851 ;;		_INT1_CallBack
  3852 ;; This function is called by:
  3853 ;;		_INTERRUPT_InterruptManager
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text27
  3858  0019C4                     __ptext27:
  3859                           	callstack 0
  3860  0019C4                     _INT1_ISR:
  3861                           	callstack 24
  3862  0019C4                     
  3863                           ;ext_int.c: 34: (INTCON3bits.INT1IF = 0);
  3864  0019C4  90F0               	bcf	240,0,c	;volatile
  3865  0019C6                     
  3866                           ;ext_int.c: 37: INT1_CallBack();
  3867  0019C6  EC7C  F00A         	call	_INT1_CallBack	;wreg free
  3868  0019CA  0012               	return		;funcret
  3869  0019CC                     __end_of_INT1_ISR:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _INT1_CallBack *****************
  3873 ;; Defined at:
  3874 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3888 ;;      Params:         0       0       0       0       0       0       0       0       0
  3889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3891 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3892 ;;Total ram usage:        0 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 1
  3895 ;; This function calls:
  3896 ;;		Absolute function
  3897 ;;		_INT1_DefaultInterruptHandler
  3898 ;; This function is called by:
  3899 ;;		_INT1_ISR
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text28
  3904  0014F8                     __ptext28:
  3905                           	callstack 0
  3906  0014F8                     _INT1_CallBack:
  3907                           	callstack 24
  3908  0014F8                     
  3909                           ;ext_int.c: 44: if (INT1IF == 1)
  3910  0014F8  A0F0               	btfss	4080,0,c	;volatile
  3911  0014FA  EF81  F00A         	goto	i2u86_41
  3912  0014FE  EF83  F00A         	goto	i2u86_40
  3913  001502                     i2u86_41:
  3914  001502  EFC5  F00A         	goto	i2l1837
  3915  001506                     i2u86_40:
  3916  001506                     
  3917                           ;ext_int.c: 45: {;ext_int.c: 49: if (flag_codigo == 0)
  3918  001506  504F               	movf	_flag_codigo^0,w,c
  3919  001508  A4D8               	btfss	status,2,c
  3920  00150A  EF89  F00A         	goto	i2u87_41
  3921  00150E  EF8B  F00A         	goto	i2u87_40
  3922  001512                     i2u87_41:
  3923  001512  EFC5  F00A         	goto	i2l1837
  3924  001516                     i2u87_40:
  3925  001516                     
  3926                           ;ext_int.c: 50: {;ext_int.c: 51: if (cuenta != 0)
  3927  001516  5045               	movf	_cuenta^0,w,c
  3928  001518  1046               	iorwf	(_cuenta+1)^0,w,c
  3929  00151A  B4D8               	btfsc	status,2,c
  3930  00151C  EF92  F00A         	goto	i2u88_41
  3931  001520  EF94  F00A         	goto	i2u88_40
  3932  001524                     i2u88_41:
  3933  001524  EFBC  F00A         	goto	i2l295
  3934  001528                     i2u88_40:
  3935  001528                     
  3936                           ;ext_int.c: 52: {;ext_int.c: 53: timer_aux = TMR0;
  3937  001528  CFD6 F04D          	movff	4054,_timer_aux	;volatile
  3938  00152C                     
  3939                           ;ext_int.c: 54: TMR0 = 0;
  3940  00152C  0E00               	movlw	0
  3941  00152E  6ED7               	movwf	215,c	;volatile
  3942  001530  0E00               	movlw	0
  3943  001532  6ED6               	movwf	214,c	;volatile
  3944  001534                     
  3945                           ;ext_int.c: 55: tiempo[cuenta - 1] = timer_aux;
  3946  001534  0E5F               	movlw	low (_tiempo+65535)
  3947  001536  2445               	addwf	_cuenta^0,w,c
  3948  001538  6ED9               	movwf	fsr2l,c
  3949  00153A  0E00               	movlw	high (_tiempo+65535)
  3950  00153C  2046               	addwfc	(_cuenta+1)^0,w,c
  3951  00153E  6EDA               	movwf	fsr2h,c
  3952  001540  C04D  FFDF         	movff	_timer_aux,indf2
  3953  001544                     
  3954                           ;ext_int.c: 56: cuenta++;
  3955  001544  4A45               	infsnz	_cuenta^0,f,c
  3956  001546  2A46               	incf	(_cuenta+1)^0,f,c
  3957  001548                     
  3958                           ;ext_int.c: 57: INTEDG1 = !INTEDG1;
  3959  001548  AAF1               	btfss	4081,5,c	;volatile
  3960  00154A  EFA9  F00A         	goto	i2u89_41
  3961  00154E  EFAC  F00A         	goto	i2u89_40
  3962  001552                     i2u89_41:
  3963  001552  8AF1               	bsf	4081,5,c	;volatile
  3964  001554  EFAD  F00A         	goto	i2u90_45
  3965  001558                     i2u89_40:
  3966  001558  9AF1               	bcf	4081,5,c	;volatile
  3967  00155A                     i2u90_45:
  3968  00155A                     
  3969                           ;ext_int.c: 59: if (TMR0IF == 1)
  3970  00155A  A4F2               	btfss	4082,2,c	;volatile
  3971  00155C  EFB2  F00A         	goto	i2u91_41
  3972  001560  EFB4  F00A         	goto	i2u91_40
  3973  001564                     i2u91_41:
  3974  001564  EFC5  F00A         	goto	i2l294
  3975  001568                     i2u91_40:
  3976  001568                     
  3977                           ;ext_int.c: 60: {;ext_int.c: 61: cuenta--;
  3978  001568  0645               	decf	_cuenta^0,f,c
  3979  00156A  A0D8               	btfss	status,0,c
  3980  00156C  0646               	decf	(_cuenta+1)^0,f,c
  3981  00156E                     
  3982                           ;ext_int.c: 62: flag_codigo = 1;
  3983  00156E  0E01               	movlw	1
  3984  001570  6E4F               	movwf	_flag_codigo^0,c
  3985  001572                     
  3986                           ;ext_int.c: 63: INT1E = 0;
  3987  001572  96F0               	bcf	4080,3,c	;volatile
  3988  001574  EFC5  F00A         	goto	i2l1837
  3989  001578                     i2l295:
  3990                           
  3991                           ;ext_int.c: 66: else;ext_int.c: 67: {;ext_int.c: 68: TMR0IF = 0;
  3992  001578  94F2               	bcf	4082,2,c	;volatile
  3993  00157A                     
  3994                           ;ext_int.c: 69: TMR0 = 0;
  3995  00157A  0E00               	movlw	0
  3996  00157C  6ED7               	movwf	215,c	;volatile
  3997  00157E  0E00               	movlw	0
  3998  001580  6ED6               	movwf	214,c	;volatile
  3999  001582                     
  4000                           ;ext_int.c: 70: cuenta++;
  4001  001582  4A45               	infsnz	_cuenta^0,f,c
  4002  001584  2A46               	incf	(_cuenta+1)^0,f,c
  4003  001586  EFC5  F00A         	goto	i2l1837
  4004  00158A                     i2l294:
  4005  00158A                     i2l1837:
  4006                           
  4007                           ;ext_int.c: 71: };ext_int.c: 72: };ext_int.c: 73: };ext_int.c: 74: INT1IF = 0;
  4008  00158A  90F0               	bcf	4080,0,c	;volatile
  4009  00158C                     
  4010                           ;ext_int.c: 76: if(INT1_InterruptHandler)
  4011  00158C  503F               	movf	_INT1_InterruptHandler^0,w,c
  4012  00158E  1040               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  4013  001590  B4D8               	btfsc	status,2,c
  4014  001592  EFCD  F00A         	goto	i2u92_41
  4015  001596  EFCF  F00A         	goto	i2u92_40
  4016  00159A                     i2u92_41:
  4017  00159A  EFDC  F00A         	goto	i2l299
  4018  00159E                     i2u92_40:
  4019  00159E                     
  4020                           ;ext_int.c: 77: {;ext_int.c: 78: INT1_InterruptHandler();
  4021  00159E  D802               	call	i2u93_48
  4022  0015A0  EFDC  F00A         	goto	i2u93_49
  4023  0015A4                     i2u93_48:
  4024  0015A4  0005               	push	
  4025  0015A6  6EFA               	movwf	pclath,c
  4026  0015A8  503F               	movf	_INT1_InterruptHandler^0,w,c
  4027  0015AA  6EFD               	movwf	tosl,c
  4028  0015AC  5040               	movf	(_INT1_InterruptHandler+1)^0,w,c
  4029  0015AE  6EFE               	movwf	tosh,c
  4030  0015B0  50F8               	movf	tblptru,w,c
  4031  0015B2  6EFF               	movwf	tosu,c
  4032  0015B4  50FA               	movf	pclath,w,c
  4033  0015B6  0012               	return		;indir
  4034  0015B8                     i2u93_49:
  4035  0015B8                     i2l299:
  4036  0015B8  0012               	return		;funcret
  4037  0015BA                     __end_of_INT1_CallBack:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function _INT1_DefaultInterruptHandler *****************
  4041 ;; Defined at:
  4042 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		None
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4059 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_EXT_INT_Initialize
  4066 ;;		_INT1_CallBack
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text29
  4071  0019D2                     __ptext29:
  4072                           	callstack 0
  4073  0019D2                     _INT1_DefaultInterruptHandler:
  4074                           	callstack 24
  4075  0019D2  0012               	return		;funcret
  4076  0019D4                     __end_of_INT1_DefaultInterruptHandler:
  4077                           	callstack 0
  4078                           
  4079                           	psect	text30
  4080  000000                     __ptext30:
  4081                           	callstack 0
  4082  000000                     
  4083                           	psect	rparam
  4084  0000                     
  4085                           	psect	temp
  4086  00005B                     btemp:
  4087                           	callstack 0
  4088  00005B                     	ds	1
  4089  0000                     int$flags	set	btemp
  4090  0000                     wtemp8	set	btemp+1
  4091  0000                     ttemp5	set	btemp+1
  4092  0000                     ttemp6	set	btemp+4
  4093  0000                     ttemp7	set	btemp+8
  4094                           
  4095                           	psect	idloc
  4096                           
  4097                           ;Config register IDLOC0 @ 0x200000
  4098                           ;	unspecified, using default values
  4099  200000                     	org	2097152
  4100  200000  FF                 	db	255
  4101                           
  4102                           ;Config register IDLOC1 @ 0x200001
  4103                           ;	unspecified, using default values
  4104  200001                     	org	2097153
  4105  200001  FF                 	db	255
  4106                           
  4107                           ;Config register IDLOC2 @ 0x200002
  4108                           ;	unspecified, using default values
  4109  200002                     	org	2097154
  4110  200002  FF                 	db	255
  4111                           
  4112                           ;Config register IDLOC3 @ 0x200003
  4113                           ;	unspecified, using default values
  4114  200003                     	org	2097155
  4115  200003  FF                 	db	255
  4116                           
  4117                           ;Config register IDLOC4 @ 0x200004
  4118                           ;	unspecified, using default values
  4119  200004                     	org	2097156
  4120  200004  FF                 	db	255
  4121                           
  4122                           ;Config register IDLOC5 @ 0x200005
  4123                           ;	unspecified, using default values
  4124  200005                     	org	2097157
  4125  200005  FF                 	db	255
  4126                           
  4127                           ;Config register IDLOC6 @ 0x200006
  4128                           ;	unspecified, using default values
  4129  200006                     	org	2097158
  4130  200006  FF                 	db	255
  4131                           
  4132                           ;Config register IDLOC7 @ 0x200007
  4133                           ;	unspecified, using default values
  4134  200007                     	org	2097159
  4135  200007  FF                 	db	255
  4136                           
  4137                           	psect	config
  4138                           
  4139                           ;Config register CONFIG1L @ 0x300000
  4140                           ;	PLL Selection
  4141                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4142                           ;	PLL Enable Configuration bit
  4143                           ;	CFGPLLEN = ON, PLL Enabled
  4144                           ;	CPU System Clock Postscaler
  4145                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4146                           ;	Low Speed USB mode with 48 MHz system clock
  4147                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4148  300000                     	org	3145728
  4149  300000  23                 	db	35
  4150                           
  4151                           ;Config register CONFIG1H @ 0x300001
  4152                           ;	Oscillator Selection
  4153                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  4154                           ;	Primary Oscillator Shutdown
  4155                           ;	PCLKEN = ON, Primary oscillator enabled
  4156                           ;	Fail-Safe Clock Monitor
  4157                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4158                           ;	Internal/External Oscillator Switchover
  4159                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4160  300001                     	org	3145729
  4161  300001  22                 	db	34
  4162                           
  4163                           ;Config register CONFIG2L @ 0x300002
  4164                           ;	Power-up Timer Enable
  4165                           ;	nPWRTEN = ON, Power up timer enabled
  4166                           ;	Brown-out Reset Enable
  4167                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4168                           ;	Brown-out Reset Voltage
  4169                           ;	BORV = 190, BOR set to 1.9V nominal
  4170                           ;	Low-Power Brown-out Reset
  4171                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4172  300002                     	org	3145730
  4173  300002  5E                 	db	94
  4174                           
  4175                           ;Config register CONFIG2H @ 0x300003
  4176                           ;	Watchdog Timer Enable bits
  4177                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4178                           ;	Watchdog Timer Postscaler
  4179                           ;	WDTPS = 32768, 1:32768
  4180  300003                     	org	3145731
  4181  300003  3C                 	db	60
  4182                           
  4183                           ; Padding undefined space
  4184  300004                     	org	3145732
  4185  300004  FF                 	db	255
  4186                           
  4187                           ;Config register CONFIG3H @ 0x300005
  4188                           ;	CCP2 MUX bit
  4189                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4190                           ;	PORTB A/D Enable bit
  4191                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4192                           ;	Timer3 Clock Input MUX bit
  4193                           ;	T3CMX = RC0, T3CKI function is on RC0
  4194                           ;	SDO Output MUX bit
  4195                           ;	SDOMX = RB3, SDO function is on RB3
  4196                           ;	Master Clear Reset Pin Enable
  4197                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4198  300005                     	org	3145733
  4199  300005  D1                 	db	209
  4200                           
  4201                           ;Config register CONFIG4L @ 0x300006
  4202                           ;	Stack Full/Underflow Reset
  4203                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4204                           ;	Single-Supply ICSP Enable bit
  4205                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4206                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4207                           ;	ICPRT = OFF, ICPORT disabled
  4208                           ;	Extended Instruction Set Enable bit
  4209                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4210                           ;	Background Debugger Enable bit
  4211                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4212  300006                     	org	3145734
  4213  300006  85                 	db	133
  4214                           
  4215                           ; Padding undefined space
  4216  300007                     	org	3145735
  4217  300007  FF                 	db	255
  4218                           
  4219                           ;Config register CONFIG5L @ 0x300008
  4220                           ;	Block 0 Code Protect
  4221                           ;	CP0 = OFF, Block 0 is not code-protected
  4222                           ;	Block 1 Code Protect
  4223                           ;	CP1 = OFF, Block 1 is not code-protected
  4224                           ;	Block 2 Code Protect
  4225                           ;	CP2 = OFF, Block 2 is not code-protected
  4226                           ;	Block 3 Code Protect
  4227                           ;	CP3 = OFF, Block 3 is not code-protected
  4228  300008                     	org	3145736
  4229  300008  0F                 	db	15
  4230                           
  4231                           ;Config register CONFIG5H @ 0x300009
  4232                           ;	Boot Block Code Protect
  4233                           ;	CPB = OFF, Boot block is not code-protected
  4234                           ;	Data EEPROM Code Protect
  4235                           ;	CPD = OFF, Data EEPROM is not code-protected
  4236  300009                     	org	3145737
  4237  300009  C0                 	db	192
  4238                           
  4239                           ;Config register CONFIG6L @ 0x30000A
  4240                           ;	Block 0 Write Protect
  4241                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4242                           ;	Block 1 Write Protect
  4243                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4244                           ;	Block 2 Write Protect
  4245                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4246                           ;	Block 3 Write Protect
  4247                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4248  30000A                     	org	3145738
  4249  30000A  0F                 	db	15
  4250                           
  4251                           ;Config register CONFIG6H @ 0x30000B
  4252                           ;	Configuration Registers Write Protect
  4253                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4254                           ;	Boot Block Write Protect
  4255                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4256                           ;	Data EEPROM Write Protect
  4257                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4258  30000B                     	org	3145739
  4259  30000B  E0                 	db	224
  4260                           
  4261                           ;Config register CONFIG7L @ 0x30000C
  4262                           ;	Block 0 Table Read Protect
  4263                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4264                           ;	Block 1 Table Read Protect
  4265                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4266                           ;	Block 2 Table Read Protect
  4267                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4268                           ;	Block 3 Table Read Protect
  4269                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4270  30000C                     	org	3145740
  4271  30000C  0F                 	db	15
  4272                           
  4273                           ;Config register CONFIG7H @ 0x30000D
  4274                           ;	Boot Block Table Read Protect
  4275                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4276  30000D                     	org	3145741
  4277  30000D  40                 	db	64
  4278                           tosu	equ	0xFFF
  4279                           tosh	equ	0xFFE
  4280                           tosl	equ	0xFFD
  4281                           stkptr	equ	0xFFC
  4282                           pclatu	equ	0xFFB
  4283                           pclath	equ	0xFFA
  4284                           pcl	equ	0xFF9
  4285                           tblptru	equ	0xFF8
  4286                           tblptrh	equ	0xFF7
  4287                           tblptrl	equ	0xFF6
  4288                           tablat	equ	0xFF5
  4289                           prodh	equ	0xFF4
  4290                           prodl	equ	0xFF3
  4291                           indf0	equ	0xFEF
  4292                           postinc0	equ	0xFEE
  4293                           postdec0	equ	0xFED
  4294                           preinc0	equ	0xFEC
  4295                           plusw0	equ	0xFEB
  4296                           fsr0h	equ	0xFEA
  4297                           fsr0l	equ	0xFE9
  4298                           wreg	equ	0xFE8
  4299                           indf1	equ	0xFE7
  4300                           postinc1	equ	0xFE6
  4301                           postdec1	equ	0xFE5
  4302                           preinc1	equ	0xFE4
  4303                           plusw1	equ	0xFE3
  4304                           fsr1h	equ	0xFE2
  4305                           fsr1l	equ	0xFE1
  4306                           bsr	equ	0xFE0
  4307                           indf2	equ	0xFDF
  4308                           postinc2	equ	0xFDE
  4309                           postdec2	equ	0xFDD
  4310                           preinc2	equ	0xFDC
  4311                           plusw2	equ	0xFDB
  4312                           fsr2h	equ	0xFDA
  4313                           fsr2l	equ	0xFD9
  4314                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    32
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      90
    BANK0           160      4      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    memcpy@s1	PTR const void  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 10
		 -> texto(COMRAM[10]), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[6]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[9]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[13]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), texto(COMRAM[10]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _sprintf->___lldiv
    _normaliza->___flge
    ___flmul->___xxtofl
    ___flge->___flmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Hash_algoritmo->___lmul
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_normaliza

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6179
                                             55 COMRAM     3     3      0
               _EUSART1_Write_string
                     _Hash_algoritmo
                  _SYSTEM_Initialize
                             _memcpy
                          _normaliza
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    22      8     922
                                             17 COMRAM    21    13      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _normaliza                                            4     4      0    3008
                                              0 BANK0      4     4      0
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              13     6      7     371
                                              4 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              6 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Hash_algoritmo                                      14    10      4     416
                                             16 COMRAM    14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     972
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _Hash_algoritmo
     ___lmul
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _memcpy
   _normaliza
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _sprintf
     ___lldiv

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      4A       5       46.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      5A       1       95.7%
BITBIGSFRlllllh     27      0       0      32        0.0%
BITBIGSFRhhlhh      18      0       0      21        0.0%
BITBIGSFRhll        17      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      33        0.0%
BITBIGSFRllllhh      6      0       0      29        0.0%
BITBIGSFRllllhl      6      0       0      30        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      31        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRhlh         1      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      34        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 20 13:04:59 2023

                                            l43 186A                                              l70 197C  
                                            l67 196A                                              l76 182C  
                                            l94 19B8                                              l97 19AE  
                                            u10 1978                                              u11 1974  
                                            u20 194C                                              u21 1948  
                               _timer0ReloadVal 0041                                             l100 19C2  
                                           l302 19A4                                             l142 193E  
                                           l145 194C                                             l218 199A  
                                           l139 1966                                             l308 1990  
                                           l172 1906                                             l404 0F30  
                                           l430 176C                                             l415 109E  
                                           l248 19CE                                             l409 0FD8  
                                           l371 164E                                             l372 165E  
                                           l196 18D8                                             l452 1702  
                                           l429 175C                                             l445 16F2  
                                           l366 13F2                                             l680 14F6  
                                           l679 14B0                                             u940 1722  
                                           u941 171E                                             u950 175C  
                                           u951 1758                                             u960 1686  
                                           u961 1682                                             u970 16A8  
                                           u971 16A4                                             u980 16D0  
                                           u981 16CC                                             u990 0884  
                                           u991 0880                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 0024                                    ___flmul@bexp 0025  
                                  ___flmul@sign 001F                                    ___flmul@temp 002A  
                                  ___flmul@prod 0026                                   _INT1_CallBack 14F8  
                                          l1020 092E                                            l1030 0B8A  
                                          l1024 0C92                                            l1201 196A  
                                          l2001 0C82                                            l1203 1978  
                                          l1211 192E                                            l2011 1460  
                                          l1027 0B24                                            l1205 19CC  
                                          l2021 14EE                                            l2013 1470  
                                          l2005 13F4                                            l1037 0C54  
                                          l1029 0B9C                                            l1061 10F6  
                                          l1207 18DA                                            l2023 14F4  
                                          l2015 147E                                            l2007 1422  
                                          l2031 10C0                                            l1064 1252  
                                          l2113 15BA                                            l1209 1904  
                                          l2121 176E                                            l2017 1490  
                                          l2009 1432                                            l2041 1138  
                                          l2033 1106                                            l2115 15D2  
                                          l1083 17CE                                            l2123 1786  
                                          l2131 17B4                                            l2019 149E  
                                          l1075 11EA                                            l2051 11C0  
                                          l2043 1144                                            l2035 111C  
                                          l2027 10A2                                            l1068 118E  
                                          l2117 1618                                            l2125 1798  
                                          l2061 11FE                                            l2053 11CC  
                                          l2045 1176                                            l2029 10B2  
                                          l2141 0EF6                                            l2133 0EC4  
                                          l2301 0CA8                                            l2119 161A  
                                          l2127 17A4                                            l2063 1222  
                                          l2055 11DA                                            l2047 1178  
                                          l2039 1130                                            l2151 0F56  
                                          l2143 0EFE                                            l2135 0ED0  
                                          l2311 0CD4                                            l2303 0CAA  
                                          l2073 17D0                                            l2081 194E  
                                          l2129 17B0                                            l2065 1232  
                                          l2057 11F8                                            l2049 1184  
                                          l2153 0F62                                            l2137 0EE2  
                                          l2321 0D52                                            l2313 0CE0  
                                          l2305 0CAC                                            l2075 17D4  
                                          l2091 1962                                            l2083 1952  
                                          l2067 1240                                            l2059 11FA  
                                          l2171 0FE2                                            l2163 0F8A  
                                          l2155 0F7E                                            l2147 0F00  
                                          l2139 0EEE                                            l2331 0DA6  
                                          l2323 0D5E                                            l2315 0D0A  
                                          l2307 0CBC                                            l2077 17F8  
                                          l2085 1956                                            l2069 1242  
                                          l2173 1034                                            l2157 0F86  
                                          l2149 0F3E                                            l2181 1070  
                                          l2341 0E0E                                            l2333 0DB8  
                                          l2325 0D6A                                            l2317 0D16  
                                          l2309 0CC0                                            l2079 17FC  
                                          l2087 195A                                            l2175 1046  
                                          l2167 0FC4                                            l2183 1092  
                                          l2351 0E76                                            l2343 0E32  
                                          l2335 0DC8                                            l2327 0D76  
                                          l2319 0D22                                            l1801 18C4  
                                          l2089 195E                                            l2281 1308  
                                          l2177 1052                                            l2169 0FC6  
                                          l2353 0E7A                                            l2345 0E44  
                                          l2337 0DEC                                            l2329 0D82  
                                          l2361 0E88                                            l1803 18C6  
                                          l2283 13A2                                            l2275 1254  
                                          l2179 1056                                            l2363 0E9E  
                                          l2355 0E82                                            l2339 0DFE  
                                          l2347 0E50                                            l2291 0C94  
                                          l1805 18C8                                            l1901 08F8  
                                          l2285 13B6                                            l2277 125C  
                                          l2365 0EB0                                            l2357 0E84  
                                          l2349 0E60                                            l2293 0C98  
                                          l1807 18D4                                            l1911 094E  
                                          l1903 0908                                            l2287 13C6  
                                          l2279 12F4                                            l2359 0E86  
                                          l2295 0C9E                                            l1921 098E  
                                          l1905 0918                                            l2289 13C8  
                                          l2297 0CA2                                            l1851 173C  
                                          l1843 1704                                            l1771 19A6  
                                          l1931 09D8                                            l1923 099A  
                                          l1915 0962                                            l1907 091E  
                                          l2299 0CA6                                            l1845 1714  
                                          l1773 19BA                                            l1781 1842  
                                          l1941 0A2A                                            l1933 09E4  
                                          l1925 09B2                                            l1917 096E  
                                          l1909 093E                                            l1861 169A  
                                          l1853 1660                                            l1847 1722  
                                          l1783 184E                                            l1791 1982  
                                          l1775 1992                                            l1951 0AA8  
                                          l1943 0A3A                                            l1935 09F4  
                                          l1927 09BE                                            l1919 0978  
                                          l1871 16E2                                            l1863 16A8  
                                          l1855 1670                                            l1849 1732  
                                          l1769 19B0                                            l1785 185A  
                                          l1777 199C                                            l1793 198E  
                                          l1961 0B22                                            l1953 0ADE  
                                          l1945 0A56                                            l1937 0A00  
                                          l1929 09CA                                            l1881 0886  
                                          l1873 16EC                                            l1865 16B2  
                                          l1857 1686                                            l1787 1866  
                                          l1779 182E                                            l1795 18A4  
                                          l1971 0B82                                            l1963 0B34  
                                          l1955 0AEC                                            l1947 0A62  
                                          l1939 0A10                                            l1891 08CC  
                                          l1883 0896                                            l1875 086A  
                                          l1867 16D0                                            l1859 168E  
                                          l1789 197E                                            l1797 18A6  
                                          l1981 0BF0                                            l1965 0B42  
                                          l1957 0B0A                                            l1949 0A7E  
                                          l1893 08D2                                            l1885 08A6  
                                          l1877 0876                                            l1869 16E0  
                                          l1799 18AE                                            l1991 0C58  
                                          l1975 0BAC                                            l1983 0BF4  
                                          l1967 0B46                                            l1959 0B14  
                                          l1895 08D8                                            l1887 08B6  
                                          l1879 0884                                            l1993 0C68  
                                          l1985 0C0E                                            l1977 0BB8  
                                          l1969 0B54                                            l1897 08E6  
                                          l1889 08BC                                            l1995 0C76  
                                          l1987 0C22                                            l1979 0BC6  
                                          l1899 08E8                                            l1997 0C78  
                                          l1989 0C3C                                            l1999 0C7E  
                                          STR_1 085A                                            STR_2 0866  
                                          STR_3 0864                                            STR_4 0860  
                                          STR_5 0832                                            STR_6 0866  
                                          STR_7 0864                                            STR_8 083F  
                                          STR_9 0848                                            u1000 0896  
                                          u1001 0892                                            u1010 08A6  
                                          u1011 08A2                                            u1100 0B54  
                                          u1020 08E6                                            u1101 0B50  
                                          u1021 08E2                                            u1110 0B82  
                                          u1030 08F8                                            u1111 0B7E  
                                          u1031 08F4                                            u1200 147E  
                                          u1120 0B98                                            u1040 0908  
                                          u1201 147A                                            u1121 0B94  
                                          u1041 0904                                            u1210 149E  
                                          u1130 0BAC                                            u1050 093E  
                                          u1211 149A                                            u1131 0BA8  
                                          u1051 093A                                            u1220 14EE  
                                          u1140 0BC6                                            u1060 094E  
                                          u1300 11F8                                            u1221 14EA  
                                          u1141 0BC2                                            u1061 094A  
                                          u1301 11F4                                            u1150 0C0E  
                                          u1070 0AC8                                            u1310 1232  
                                          u1230 10B2                                            u1151 0C0A  
                                          u1311 122E                                            u1231 10AE  
                                          u1400 17CE                                            u1160 0C3C  
                                          u1080 0B22                                            u1320 1240  
                                          u1240 10C0                                            u1401 17CA  
                                          u1161 0C38                                            u1081 0B1E  
                                          u1321 123C                                            u1241 10BC  
                                          u1330 17F4                                            u1170 0C76  
                                          u1090 0B42                                            u1250 111C  
                                          u1410 0EE2                                            u1171 0C72  
                                          u1091 0B3E                                            u1075 0ABE  
                                          u1251 1118                                            u1411 0EDE  
                                          u1340 181C                                            u1180 1422  
                                          u1260 1172                                            u1420 0F3E  
                                          u1181 141E                                            u1261 116E  
                                          u1421 0F3A                                            _LATA 000F89  
                                          u1350 182C                                            u1190 1460  
                                          u1270 11BC                                            u1430 0FC0  
                                          _LATB 000F8A                                            u1351 1828  
                                          u1191 145C                                            u1271 11B8  
                                          u1431 0FBC                                            _LATC 000F8B  
                                          u1280 11DA                                            u1440 0FD8  
                                          u1337 17EA                                            u1281 11D6  
                                          u1441 0FD4                                            u1290 11EA  
                                          u1450 1070                                            u1347 1812  
                                          u1291 11E6                                            u1451 106C  
                                          u1460 1092                                            u1700 0DEC  
                                          u1461 108E                                            u1701 0DE8  
                                          u1390 164E                                            u1630 12F4  
                                          u1710 0DFC                                            u1391 164A  
                                          u1631 12F0                                            u1711 0DF6  
                                          u1640 13A2                                            u1641 139E  
                                          u1650 13F2                                            u1730 0E32  
                                          u1651 13EE                                            u1731 0E2E  
                                          u1740 0E42                                            u1660 0CBC  
                                          u1741 0E3C                                            u1725 0DFE  
                                          u1661 0CB8                                            u1670 0DA6  
                                          u1671 0DA2                                            u1760 0EAE  
                                          u1680 0DB6                                            u1761 0EA8  
                                          u1681 0DB0                                            u1755 0E44  
                                          u1775 0EB0                                            u1695 0DB8  
                                          u1787 0E6A                                            u1797 0E92  
                                          _TMR0 000FD6                                            _WPUB 000F85  
                                 _EUSART1_Write 1968                                            _cont 004E  
                                          _main 0C94                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          btemp 005B                                            prodh 000FF4  
                                          prodl 000FF3                                            start 006E  
                                  ___param_bank 000000                         __end_of_TMR0_Initialize 18DA  
                              __end_of_INT1_ISR 19CC                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 194E                                           ?_main 0001  
                                         STR_10 0851                                           STR_11 085A  
                                         STR_12 0821                                 __end_of___flmul 0C94  
                               __end_of___lldiv 1704                                           _T0CON 000FD5  
                  __end_of_EUSART1_Write_string 182E                                           _LATB0 007C50  
                                         _LATA3 007C4B                                           _LATA4 007C4C  
                                         _LATA5 007C4D                                           _INT1E 007F83  
                                         i2l221 19D0                                           i2l215 18A2  
                                         i2l305 19D2                                           i2l255 005A  
                                         i2l290 19CA                                           i2l294 158A  
                                         i2l295 1578                                           i2l299 15B8  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                             ___lmul@multiplicand 0009  
                     ?_TMR0_SetInterruptHandler 0005                                __end_of_TMR0_ISR 18A4  
                                ?_INT1_CallBack 0001                  ??_INT1_DefaultInterruptHandler 0001  
                                         _texto 0051                        _INT1_SetInterruptHandler 199C  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                 __end_of_sprintf 10A0  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 1908  
                    __end_of_EUSART1_Initialize 186C                                    __end_of_main 0EC4  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0038  
                                 __activetblptr 000002                                          _ACTCON 000FB5  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          _INT1IF 007F80  
                                        i2l1531 186E                                          i2l2093 19C4  
                                        i2l1533 1872                                          i2l2095 19C6  
                                        i2l1535 1876                                          i2l2191 0036  
                                        i2l1537 1888                                          i2l1529 186C  
                                        i2l2193 003A                                          i2l1811 1506  
                                        i2l2195 0048                                          i2l2187 001A  
                                        i2l1821 1544                                          i2l1813 1516  
                                        i2l2197 0056                                          i2l2189 0028  
                                        i2l1831 1572                                          i2l1823 1548  
                                        i2l1815 1528                                          i2l1841 159E  
                                        i2l1833 157A                                          i2l1825 155A  
                                        i2l1817 152C                                          i2l1809 14F8  
                                        i2l1835 1582                                          i2l1827 1568  
                                        i2l1819 1534                                          i2l1829 156E  
                                        i2l1837 158A                                          i2l1839 158C  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TMR0IF 007F92  
                                        _TXREG1 000FAD                                __end_of___xxtofl 1254  
                                        _TXSTA1 000FAC                                          ___flge 13F4  
                                        ___lmul 1704                                       ??___flmul 001B  
                                     ??___lldiv 000D                                          _cuenta 0045  
                      ?_EUSART1_SetErrorHandler 0005                                          _memcpy 176E  
                              ?_TMR0_Initialize 0001                                          clear_0 190E  
                                        clear_1 191A                                          isa$std 000001  
                                        _tiempo 0060                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                 ??_INT1_CallBack 0001  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_EUSART1_Write 0005        INT1_SetInterruptHandler@InterruptHandler 0005  
      TMR0_SetInterruptHandler@InterruptHandler 0005                                       ??_sprintf 001A  
                                    ___flge@ff1 002C                                      ___flge@ff2 0030  
                                  ___xxtofl@arg 000F                                    ___xxtofl@exp 000E  
                             _SYSTEM_Initialize 194E                                    ___xxtofl@val 0005  
                                    __accesstop 0060                         __end_of__initialization 1920  
                                     ?_INT1_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                            _EUSART1_Write_string 17D0  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0009  
                                     ?_TMR0_ISR 0001                       __end_of_SYSTEM_Initialize 1968  
                                    __pbssBANK0 0060                                      ??_INT1_ISR 0001  
                         ?_EUSART1_Write_string 0006                 __end_of_EUSART1_SetErrorHandler 19C4  
                                       ?___flge 002C                __end_of_TMR0_SetInterruptHandler 199C  
                                       ?___lmul 0005                                      ??_TMR0_ISR 0001  
                                       ?_memcpy 0005                                  ___lmul@product 000D  
        __end_of_EUSART1_SetFramingErrorHandler 19BA                  _EUSART1_SetFramingErrorHandler 19B0  
                    ??_INT1_SetInterruptHandler 0007                                         _INTEDG1 007F8D  
                                     ?___xxtofl 0005                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         i2u55_40 1888  
                                       i2u55_41 1884                                         i2u56_48 188E  
                                       i2u56_49 18A2                                         i2u90_45 155A  
                                       i2u91_40 1568                                         i2u91_41 1564  
                                       _SPBRGH1 000FB0                                         i2u92_40 159E  
                                       i2u92_41 159A                                         i2u93_48 15A4  
                                       i2u86_40 1506                                         i2u93_49 15B8  
                                       i2u86_41 1502                                         i2u87_40 1516  
                                       i2u87_41 1512                                         i2u88_40 1528  
                                       i2u88_41 1524                                         i2u89_40 1558  
                                       i2u89_41 1552                                  _Hash_algoritmo 15BA  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___flmul 086A                                         ___lldiv 1660  
                                  __psmallconst 0800                                         __pcinit 1908  
                                       __ramtop 0800                                         __ptext0 0C94  
                                       __ptext1 0EC4                                         __ptext2 1660  
                                       __ptext3 1254                                         __ptext4 10A0  
                                       __ptext5 086A                                         __ptext6 13F4  
                                       __ptext7 176E                                         __ptext8 194E  
                                       __ptext9 18A4                                       _T0CONbits 000FD5  
                             __end_of_hexpowers 0821                           _OSCILLATOR_Initialize 192E  
                                    ??___xxtofl 0009                          __end_of_Hash_algoritmo 1660  
                            _EUSART1_Initialize 182E                        ??_PIN_MANAGER_Initialize 0005  
                      EUSART1_Write_string@data 0006                                         _sprintf 0EC4  
                          end_of_initialization 1920                             ?_EUSART1_Initialize 0001  
                                       memcpy@d 000F                                         memcpy@n 000A  
                                       memcpy@s 000C                          ??_EUSART1_Write_string 0008  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0049  
                             __end_of_normaliza 13F4                                 ___lldiv@divisor 0009  
                               ___lldiv@counter 0011                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                          ??_EUSART1_Initialize 0007                        _TMR0_SetInterruptHandler 1992  
                         _INT1_InterruptHandler 003F                                   ___xxtofl@sign 000D  
                               ?_Hash_algoritmo 0011                                       _TRISBbits 000F93  
                           EUSART1_Write@txData 0005                                     ___flmul@grs 0020  
                  __end_of_INTERRUPT_Initialize 19D0                                  __end_of___flge 14F8  
                                __end_of___lmul 176E                                  __end_of_memcpy 17D0  
                        ?_OSCILLATOR_Initialize 0001                             start_initialization 1908  
                         __end_of_INT1_CallBack 15BA                           __end_of_EUSART1_Write 197E  
                                      ??___flge 0034                                        ??___lmul 000D  
                                      ??_memcpy 000C                      __end_of_EXT_INT_Initialize 1992  
                                     ___flmul@a 0017                                       ___flmul@b 0013  
                                   __pbssCOMRAM 003B                                   __pcstackBANK0 00A6  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                                   sprintf@flag 001D                                     sprintf@prec 001E  
                         _TMR0_InterruptHandler 0043                          _PIN_MANAGER_Initialize 18DA  
                                     __pintcode 0008                                        ?___flmul 0013  
                                     _codigo_ir 003B                                        ?___lldiv 0005  
                       Hash_algoritmo@hash_acum 001B                    ??_INTERRUPT_InterruptManager 0001  
                                   __smallconst 0800                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                     _flag_codigo 004F  
                          _EUSART1_ErrorHandler 0047                         _EUSART1_SetErrorHandler 19BA  
                                     _hexpowers 0801                                        ?_sprintf 0012  
                          _INTERRUPT_Initialize 19CC                               ??_TMR0_Initialize 0007  
                                      _INT1_ISR 19C4         EUSART1_SetErrorHandler@interruptHandler 0005  
                     ?_INT1_SetInterruptHandler 0005                                        i2u150_40 0056  
                                      i2u150_41 0052                                        i2u147_40 0028  
                                      i2u147_41 0024                                        i2u148_40 0036  
                                      i2u148_41 0032                                        i2u149_40 0048  
                    ??_TMR0_SetInterruptHandler 0007                                        i2u149_41 0044  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                     _normaliza 1254                                        _TMR0_ISR 186C  
                                     _timer_aux 004D                                ??_Hash_algoritmo 0015  
                             ___lmul@multiplier 0005                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                           ?_INTERRUPT_Initialize 0001  
                                      __Hrparam 0000                                       memcpy@tmp 0011  
                                      __Lrparam 0000                                      ?_normaliza 0001  
                       ??_OSCILLATOR_Initialize 0005                       ??_EUSART1_SetErrorHandler 0007  
                   _EUSART1_DefaultErrorHandler 000000                                      sprintf@idx 001C  
                                    sprintf@val 0020                                        ___xxtofl 10A0  
                                      __ptext10 1992                                        __ptext11 18DA  
                                      __ptext20 15BA                                        __ptext12 192E  
                                      __ptext21 1704                                        __ptext13 19CC  
                                      __ptext30 0000                                        __ptext22 17D0  
                                      __ptext14 197E                                        __ptext23 1968  
                                      __ptext15 199C                                        __ptext16 182E  
                                      __ptext25 186C                                        __ptext17 19A6  
                                      __ptext26 19D0                                        __ptext18 19B0  
                                      __ptext27 19C4                                        __ptext19 19BA  
                                      __ptext28 14F8                                        __ptext29 19D2  
          __end_of_TMR0_DefaultInterruptHandler 19D2                    _TMR0_DefaultInterruptHandler 19D0  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                      int$flags 005B              __end_of_INTERRUPT_InterruptManager 006E  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 004B  
          __end_of_INT1_DefaultInterruptHandler 19D4                    _INT1_DefaultInterruptHandler 19D2  
                                    _INTCONbits 000FF2                                        memcpy@d1 0005  
                                      memcpy@s1 0007                          ??_INTERRUPT_Initialize 0005  
                            _EXT_INT_Initialize 197E                                        intlevel2 0000  
                                     sprintf@ap 0024                                       sprintf@sp 0012  
                              ___lldiv@dividend 0005                         ?_PIN_MANAGER_Initialize 0001  
                           ?_EXT_INT_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 19B0  
                _EUSART1_SetOverrunErrorHandler 19A6                                      _RCSTA1bits 000FAB  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                   ??_normaliza 00A6  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                            _eusart1RxLastError 0050                            ??_EXT_INT_Initialize 0007  
                                      sprintf@c 0026                                        sprintf@f 0014  
               fp__INT1_DefaultInterruptHandler 0000                   ?_INT1_DefaultInterruptHandler 0001  
                              ___lldiv@quotient 000D                                 _TMR0_Initialize 18A4  
              __end_of_INT1_SetInterruptHandler 19A6                  __end_of_PIN_MANAGER_Initialize 1908  
