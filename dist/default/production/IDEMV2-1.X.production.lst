

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 04 17:58:30 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F25K50 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    67  0000                     
    68 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    69  0000                     
    70 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    71  0000                     
    72                           	psect	smallconst
    73  000800                     __psmallconst:
    74                           	callstack 0
    75  000800  00                 	db	0
    76  000801                     _direccion_rx:
    77                           	callstack 0
    78  000801  11                 	db	17
    79  000802  11                 	db	17
    80  000803  11                 	db	17
    81  000804  11                 	db	17
    82  000805  11                 	db	17
    83  000806                     __end_of_direccion_rx:
    84                           	callstack 0
    85  000806                     _direccion_tx:
    86                           	callstack 0
    87  000806  11                 	db	17
    88  000807  11                 	db	17
    89  000808  11                 	db	17
    90  000809  11                 	db	17
    91  00080A  11                 	db	17
    92  00080B                     __end_of_direccion_tx:
    93                           	callstack 0
    94  0000                     _ANSELA	set	3931
    95  0000                     _ANSELB	set	3932
    96  0000                     _ANSELC	set	3933
    97  0000                     _PORTAbits	set	3968
    98  0000                     _PORTBbits	set	3969
    99  0000                     _LATCbits	set	3979
   100  0000                     _LATBbits	set	3978
   101  0000                     _TRISBbits	set	3987
   102  0000                     _TRISCbits	set	3988
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _ADCON0	set	4034
   105  0000                     _ADRESH	set	4036
   106  0000                     _ADRESL	set	4035
   107  0000                     _ADCON2	set	4032
   108  0000                     _ADCON1	set	4033
   109  0000                     _CCPR2H	set	3985
   110  0000                     _CCPR2L	set	3984
   111  0000                     _CCP2CON	set	3991
   112  0000                     _INTCONbits	set	4082
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _WPUB	set	3973
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISB	set	3987
   117  0000                     _TRISA	set	3986
   118  0000                     _LATC	set	3979
   119  0000                     _LATB	set	3978
   120  0000                     _LATA	set	3977
   121  0000                     _ACTCON	set	4021
   122  0000                     _OSCTUNE	set	3995
   123  0000                     _OSCCON2	set	4050
   124  0000                     _OSCCON	set	4051
   125  0000                     _TXREG1	set	4013
   126  0000                     _RCREG1	set	4014
   127  0000                     _RCSTA1bits	set	4011
   128  0000                     _TXSTA1bits	set	4012
   129  0000                     _PIR1bits	set	3998
   130  0000                     _SPBRGH1	set	4016
   131  0000                     _SPBRG1	set	4015
   132  0000                     _TXSTA1	set	4012
   133  0000                     _RCSTA1	set	4011
   134  0000                     _BAUDCON1	set	4024
   135  0000                     _LATA5	set	31821
   136  0000                     _LATB0	set	31824
   137  0000                     _PLLRDY	set	32407
   138  00080B                     STR_1:
   139  00080B  63                 	db	99	;'c'
   140  00080C  69                 	db	105	;'i'
   141  00080D  65                 	db	101	;'e'
   142  00080E  72                 	db	114	;'r'
   143  00080F  3D                 	db	61	;'='
   144  000810  00                 	db	0
   145  000811                     STR_5:
   146  000811  61                 	db	97	;'a'
   147  000812  70                 	db	112	;'p'
   148  000813  65                 	db	101	;'e'
   149  000814  72                 	db	114	;'r'
   150  000815  3D                 	db	61	;'='
   151  000816  00                 	db	0
   152  000817                     STR_3:
   153  000817  6F                 	db	111	;'o'
   154  000818  6E                 	db	110	;'n'
   155  000819  00                 	db	0
   156  00081A  00                 	db	0	; dummy byte at the end
   157  0000                     
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161  000A26                     __pcinit:
   162                           	callstack 0
   163  000A26                     start_initialization:
   164                           	callstack 0
   165  000A26                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Clear objects allocated to BANK0 (30 bytes)
   169  000A26  EE00  F060         	lfsr	0,__pbssBANK0
   170  000A2A  0E1E               	movlw	30
   171  000A2C                     clear_0:
   172  000A2C  6AEE               	clrf	postinc0,c
   173  000A2E  06E8               	decf	wreg,f,c
   174  000A30  E1FD               	bnz	clear_0
   175                           
   176                           ; Clear objects allocated to COMRAM (63 bytes)
   177  000A32  EE00  F001         	lfsr	0,__pbssCOMRAM
   178  000A36  0E3F               	movlw	63
   179  000A38                     clear_1:
   180  000A38  6AEE               	clrf	postinc0,c
   181  000A3A  06E8               	decf	wreg,f,c
   182  000A3C  E1FD               	bnz	clear_1
   183  000A3E                     end_of_initialization:
   184                           	callstack 0
   185  000A3E                     __end_of__initialization:
   186                           	callstack 0
   187  000A3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  000A40  6EF8               	movwf	tblptru,c
   189  000A42  0100               	movlb	0
   190  000A44  EF0E  F004         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMRAM
   193  000001                     __pbssCOMRAM:
   194                           	callstack 0
   195  000001                     _texto:
   196                           	callstack 0
   197  000001                     	ds	20
   198  000015                     _ADC_InterruptHandler:
   199                           	callstack 0
   200  000015                     	ds	2
   201  000017                     _EUSART1_ErrorHandler:
   202                           	callstack 0
   203  000017                     	ds	2
   204  000019                     _EUSART1_OverrunErrorHandler:
   205                           	callstack 0
   206  000019                     	ds	2
   207  00001B                     _EUSART1_FramingErrorHandler:
   208                           	callstack 0
   209  00001B                     	ds	2
   210  00001D                     _flag_rx:
   211                           	callstack 0
   212  00001D                     	ds	1
   213  00001E                     _datorx:
   214                           	callstack 0
   215  00001E                     	ds	1
   216  00001F                     _puntero:
   217                           	callstack 0
   218  00001F                     	ds	1
   219  000020                     _dato_serial:
   220                           	callstack 0
   221  000020                     	ds	1
   222  000021                     _eusart1RxLastError:
   223                           	callstack 0
   224  000021                     	ds	1
   225  000022                     _trama:
   226                           	callstack 0
   227  000022                     	ds	30
   228                           
   229                           	psect	bssBANK0
   230  000060                     __pbssBANK0:
   231                           	callstack 0
   232  000060                     _procesa:
   233                           	callstack 0
   234  000060                     	ds	30
   235                           
   236                           	psect	cstackCOMRAM
   237  000040                     __pcstackCOMRAM:
   238                           	callstack 0
   239  000040                     spi_s_write@dato_:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x0
   243  000040                     	ds	1
   244  000041                     spi_s_write@cont_s:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x1
   248  000041                     	ds	1
   249  000042                     nrf2401_write@valor:
   250                           	callstack 0
   251  000042                     nrf2401_comando@comando:
   252                           	callstack 0
   253  000042                     nrf2401_direccion_TX_RX@direccion_:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x2
   257  000042                     	ds	1
   258  000043                     nrf2401_write@reg:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x3
   262  000043                     	ds	1
   263  000044                     nrf2401_direccion_TX_RX@registro:
   264                           	callstack 0
   265  000044                     nrf2401_envia@dato_tx:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x4
   269  000044                     	ds	1
   270  000045                     ??_nrf2401_direccion_TX_RX:
   271                           
   272                           ; 1 bytes @ 0x5
   273  000045                     	ds	2
   274  000047                     nrf2401_direccion_TX_RX@cont_s:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x7
   278  000047                     	ds	1
   279  000048                     nrF2401_init_TX@canal:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x8
   283  000048                     	ds	1
   284  000049                     ??_main:
   285                           
   286                           ; 1 bytes @ 0x9
   287  000049                     	ds	2
   288                           
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 144 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   308 ;;      Params:         0       0       0       0       0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0       0       0       0       0
   310 ;;      Temps:          2       0       0       0       0       0       0       0       0
   311 ;;      Totals:         2       0       0       0       0       0       0       0       0
   312 ;;Total ram usage:        2 bytes
   313 ;; Hardware stack levels required when called: 4
   314 ;; This function calls:
   315 ;;		_SYSTEM_Initialize
   316 ;;		_nrF2401_init_TX
   317 ;;		_nrf2401_envia
   318 ;;		_spi_s_init
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text0
   325  00081C                     __ptext0:
   326                           	callstack 0
   327  00081C                     _main:
   328                           	callstack 27
   329  00081C                     
   330                           ;main.c: 147:     SYSTEM_Initialize();
   331  00081C  EC77  F005         	call	_SYSTEM_Initialize	;wreg free
   332  000820                     
   333                           ;main.c: 166:     ANSELA = 0b00000111;
   334  000820  0E07               	movlw	7
   335  000822  010F               	movlb	15	; () banked
   336  000824  6F5B               	movwf	91,b	;volatile
   337  000826                     
   338                           ; BSR set to: 15
   339                           ;main.c: 167:     ANSELB = 0b00000000;
   340  000826  0E00               	movlw	0
   341  000828  6F5C               	movwf	92,b	;volatile
   342  00082A                     
   343                           ; BSR set to: 15
   344                           ;main.c: 168:     ANSELC = 0x00;
   345  00082A  0E00               	movlw	0
   346  00082C  6F5D               	movwf	93,b	;volatile
   347  00082E                     
   348                           ; BSR set to: 15
   349                           ;main.c: 175:     PORTAbits.RA5 = 1;
   350  00082E  8A80               	bsf	128,5,c	;volatile
   351  000830                     
   352                           ; BSR set to: 15
   353                           ;main.c: 176:     _delay((unsigned long)((500)*(48000000/4000.0)));
   354  000830  0E1F               	movlw	31
   355  000832  6E4A               	movwf	(??_main+1)^0,c
   356  000834  0E71               	movlw	113
   357  000836  6E49               	movwf	??_main^0,c
   358  000838  0E1E               	movlw	30
   359  00083A                     u307:
   360  00083A  2EE8               	decfsz	wreg,f,c
   361  00083C  D7FE               	bra	u307
   362  00083E  2E49               	decfsz	??_main^0,f,c
   363  000840  D7FC               	bra	u307
   364  000842  2E4A               	decfsz	(??_main+1)^0,f,c
   365  000844  D7FA               	bra	u307
   366  000846  D000               	nop2	
   367  000848                     
   368                           ;main.c: 177:     PORTAbits.RA5 = 0;
   369  000848  9A80               	bcf	128,5,c	;volatile
   370  00084A                     
   371                           ;main.c: 180:     spi_s_init();
   372  00084A  EC4E  F005         	call	_spi_s_init	;wreg free
   373  00084E                     
   374                           ;main.c: 181:     nrF2401_init_TX(17);
   375  00084E  0E11               	movlw	17
   376  000850  EC66  F004         	call	_nrF2401_init_TX
   377  000854                     l1516:
   378                           
   379                           ;main.c: 186:     {;main.c: 190:         if(PORTAbits.RA3 == 1)
   380  000854  A680               	btfss	128,3,c	;volatile
   381  000856  EF2F  F004         	goto	u271
   382  00085A  EF31  F004         	goto	u270
   383  00085E                     u271:
   384  00085E  EF4F  F004         	goto	l1522
   385  000862                     u270:
   386  000862                     
   387                           ;main.c: 191:         {;main.c: 194:             PORTAbits.RA5 = ~PORTAbits.RA5;
   388  000862  BA80               	btfsc	128,5,c	;volatile
   389  000864  EF36  F004         	goto	u281
   390  000868  EF39  F004         	goto	u280
   391  00086C                     u281:
   392  00086C  0E01               	movlw	1
   393  00086E  EF3A  F004         	goto	u286
   394  000872                     u280:
   395  000872  0E00               	movlw	0
   396  000874                     u286:
   397  000874  0AFF               	xorlw	255
   398  000876  6E49               	movwf	??_main^0,c
   399  000878  3A49               	swapf	??_main^0,f,c
   400  00087A  4649               	rlncf	??_main^0,f,c
   401  00087C  5080               	movf	128,w,c	;volatile
   402  00087E  1849               	xorwf	??_main^0,w,c
   403  000880  0BDF               	andlw	-33
   404  000882  1849               	xorwf	??_main^0,w,c
   405  000884  6E80               	movwf	128,c	;volatile
   406  000886                     
   407                           ;main.c: 195:             _delay((unsigned long)((300)*(48000000/4000.0)));
   408  000886  0E13               	movlw	19
   409  000888  6E4A               	movwf	(??_main+1)^0,c
   410  00088A  0E44               	movlw	68
   411  00088C  6E49               	movwf	??_main^0,c
   412  00088E  0E44               	movlw	68
   413  000890                     u317:
   414  000890  2EE8               	decfsz	wreg,f,c
   415  000892  D7FE               	bra	u317
   416  000894  2E49               	decfsz	??_main^0,f,c
   417  000896  D7FC               	bra	u317
   418  000898  2E4A               	decfsz	(??_main+1)^0,f,c
   419  00089A  D7FA               	bra	u317
   420  00089C  D000               	nop2	
   421  00089E                     l1522:
   422                           
   423                           ;main.c: 198:         if(PORTAbits.RA5 == 1)
   424  00089E  AA80               	btfss	128,5,c	;volatile
   425  0008A0  EF54  F004         	goto	u291
   426  0008A4  EF56  F004         	goto	u290
   427  0008A8                     u291:
   428  0008A8  EF5D  F004         	goto	l1528
   429  0008AC                     u290:
   430  0008AC                     
   431                           ;main.c: 199:         {;main.c: 200:             dato_serial = 1;
   432  0008AC  0E01               	movlw	1
   433  0008AE  6E20               	movwf	_dato_serial^0,c
   434  0008B0                     
   435                           ;main.c: 201:             nrf2401_envia(dato_serial);
   436  0008B0  0E01               	movlw	1
   437  0008B2  ECE1  F004         	call	_nrf2401_envia
   438                           
   439                           ;main.c: 202:         }
   440  0008B6  EF2A  F004         	goto	l1516
   441  0008BA                     l1528:
   442                           
   443                           ;main.c: 204:         {;main.c: 205:             dato_serial = 0;
   444  0008BA  0E00               	movlw	0
   445  0008BC  6E20               	movwf	_dato_serial^0,c
   446  0008BE                     
   447                           ;main.c: 206:             nrf2401_envia(dato_serial);
   448  0008BE  0E00               	movlw	0
   449  0008C0  ECE1  F004         	call	_nrf2401_envia
   450  0008C4  EF2A  F004         	goto	l1516
   451  0008C8  EF00  F000         	goto	start
   452  0008CC                     __end_of_main:
   453                           	callstack 0
   454                           
   455 ;; *************** function _spi_s_init *****************
   456 ;; Defined at:
   457 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		None
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   471 ;;      Params:         0       0       0       0       0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used: 1
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text1
   485  000A9C                     __ptext1:
   486                           	callstack 0
   487  000A9C                     _spi_s_init:
   488                           	callstack 30
   489  000A9C                     
   490                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
   491  000A9C  9294               	bcf	148,1,c	;volatile
   492                           
   493                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
   494  000A9E  9493               	bcf	147,2,c	;volatile
   495                           
   496                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
   497  000AA0  9494               	bcf	148,2,c	;volatile
   498                           
   499                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
   500  000AA2  8693               	bsf	147,3,c	;volatile
   501                           
   502                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
   503  000AA4  9293               	bcf	147,1,c	;volatile
   504                           
   505                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
   506  000AA6  8094               	bsf	148,0,c	;volatile
   507                           
   508                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
   509  000AA8  948A               	bcf	138,2,c	;volatile
   510                           
   511                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
   512  000AAA  948B               	bcf	139,2,c	;volatile
   513                           
   514                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
   515  000AAC  928B               	bcf	139,1,c	;volatile
   516                           
   517                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
   518  000AAE  928A               	bcf	138,1,c	;volatile
   519  000AB0  0012               	return		;funcret
   520  000AB2                     __end_of_spi_s_init:
   521                           	callstack 0
   522                           
   523 ;; *************** function _nrf2401_envia *****************
   524 ;; Defined at:
   525 ;;		line 151 in file "./Librerias/nRF24L01_2.h"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  dato_tx         1    wreg     unsigned char 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  dato_tx         1    4[COMRAM] unsigned char 
   530 ;;  cont_           1    0        unsigned char 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   540 ;;      Params:         0       0       0       0       0       0       0       0       0
   541 ;;      Locals:         1       0       0       0       0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0
   543 ;;      Totals:         1       0       0       0       0       0       0       0       0
   544 ;;Total ram usage:        1 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; Hardware stack levels required when called: 3
   547 ;; This function calls:
   548 ;;		_flush_TX
   549 ;;		_nrf2401_write
   550 ;;		_spi_s_write
   551 ;; This function is called by:
   552 ;;		_main
   553 ;;		_nrf2401_envia_Text
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text2
   558  0009C2                     __ptext2:
   559                           	callstack 0
   560  0009C2                     _nrf2401_envia:
   561                           	callstack 27
   562                           
   563                           ;incstack = 0
   564                           ;nrf2401_envia@dato_tx stored from wreg
   565  0009C2  6E44               	movwf	nrf2401_envia@dato_tx^0,c
   566  0009C4                     
   567                           ;./Librerias/nRF24L01_2.h: 155:     flush_TX();
   568  0009C4  EC6E  F005         	call	_flush_TX	;wreg free
   569  0009C8                     
   570                           ;./Librerias/nRF24L01_2.h: 156:     nrf2401_write(0x00, 0x02 +0x04 + 0x08);
   571  0009C8  0E0E               	movlw	14
   572  0009CA  6E42               	movwf	nrf2401_write@valor^0,c
   573  0009CC  0E00               	movlw	0
   574  0009CE  EC34  F005         	call	_nrf2401_write
   575  0009D2                     
   576                           ;./Librerias/nRF24L01_2.h: 159:     LATCbits.LATC2 = 0;
   577  0009D2  948B               	bcf	139,2,c	;volatile
   578  0009D4                     
   579                           ;./Librerias/nRF24L01_2.h: 160:     spi_s_write(0xA0);
   580  0009D4  0EA0               	movlw	160
   581  0009D6  EC9A  F004         	call	_spi_s_write
   582  0009DA                     
   583                           ;./Librerias/nRF24L01_2.h: 161:     spi_s_write(dato_tx);
   584  0009DA  5044               	movf	nrf2401_envia@dato_tx^0,w,c
   585  0009DC  EC9A  F004         	call	_spi_s_write
   586  0009E0                     
   587                           ;./Librerias/nRF24L01_2.h: 162:     LATCbits.LATC2 = 1;
   588  0009E0  848B               	bsf	139,2,c	;volatile
   589  0009E2                     
   590                           ;./Librerias/nRF24L01_2.h: 163:     LATBbits.LATB1 = 1;
   591  0009E2  828A               	bsf	138,1,c	;volatile
   592  0009E4                     
   593                           ;./Librerias/nRF24L01_2.h: 164:     _delay((unsigned long)((15)*(48000000/4000000.0)));
   594  0009E4  0E3C               	movlw	60
   595  0009E6                     u327:
   596  0009E6  2EE8               	decfsz	wreg,f,c
   597  0009E8  D7FE               	bra	u327
   598  0009EA                     
   599                           ;./Librerias/nRF24L01_2.h: 165:     LATBbits.LATB1 = 0;
   600  0009EA  928A               	bcf	138,1,c	;volatile
   601  0009EC                     
   602                           ;./Librerias/nRF24L01_2.h: 166:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
   603  0009EC  0E0F               	movlw	15
   604  0009EE  6E42               	movwf	nrf2401_write@valor^0,c
   605  0009F0  0E00               	movlw	0
   606  0009F2  EC34  F005         	call	_nrf2401_write
   607  0009F6  0012               	return		;funcret
   608  0009F8                     __end_of_nrf2401_envia:
   609                           	callstack 0
   610                           
   611 ;; *************** function _flush_TX *****************
   612 ;; Defined at:
   613 ;;		line 135 in file "./Librerias/nRF24L01_2.h"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   627 ;;      Params:         0       0       0       0       0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 2
   634 ;; This function calls:
   635 ;;		_nrf2401_comando
   636 ;;		_nrf2401_write
   637 ;; This function is called by:
   638 ;;		_nrf2401_envia
   639 ;;		_nrf2401_envia_Text
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text3
   644  000ADC                     __ptext3:
   645                           	callstack 0
   646  000ADC                     _flush_TX:
   647                           	callstack 27
   648  000ADC                     
   649                           ;./Librerias/nRF24L01_2.h: 137:     nrf2401_write(0x07, 0x70);
   650  000ADC  0E70               	movlw	112
   651  000ADE  6E42               	movwf	nrf2401_write@valor^0,c
   652  000AE0  0E07               	movlw	7
   653  000AE2  EC34  F005         	call	_nrf2401_write
   654                           
   655                           ;./Librerias/nRF24L01_2.h: 138:     nrf2401_comando(0xE2);
   656  000AE6  0EE2               	movlw	226
   657  000AE8  EC64  F005         	call	_nrf2401_comando
   658  000AEC  0012               	return		;funcret
   659  000AEE                     __end_of_flush_TX:
   660                           	callstack 0
   661                           
   662 ;; *************** function _nrF2401_init_TX *****************
   663 ;; Defined at:
   664 ;;		line 201 in file "./Librerias/nRF24L01_2.h"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  canal           1    wreg     unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  canal           1    8[COMRAM] unsigned char 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   678 ;;      Params:         0       0       0       0       0       0       0       0       0
   679 ;;      Locals:         1       0       0       0       0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0
   681 ;;      Totals:         1       0       0       0       0       0       0       0       0
   682 ;;Total ram usage:        1 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 3
   685 ;; This function calls:
   686 ;;		_flush_TX_RX
   687 ;;		_nrf2401_direccion_TX_RX
   688 ;;		_nrf2401_write
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text4
   695  0008CC                     __ptext4:
   696                           	callstack 0
   697  0008CC                     _nrF2401_init_TX:
   698                           	callstack 27
   699                           
   700                           ;incstack = 0
   701                           ;nrF2401_init_TX@canal stored from wreg
   702  0008CC  6E48               	movwf	nrF2401_init_TX@canal^0,c
   703  0008CE                     
   704                           ;./Librerias/nRF24L01_2.h: 201: void nrF2401_init_TX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 202: {;./Librerias/nRF24L01_2.h: 203:     LATBbits.LATB1 = 0;
   705  0008CE  928A               	bcf	138,1,c	;volatile
   706  0008D0                     
   707                           ;./Librerias/nRF24L01_2.h: 204:     nrf2401_write(0x04, 0x00);
   708  0008D0  0E00               	movlw	0
   709  0008D2  6E42               	movwf	nrf2401_write@valor^0,c
   710  0008D4  0E04               	movlw	4
   711  0008D6  EC34  F005         	call	_nrf2401_write
   712                           
   713                           ;./Librerias/nRF24L01_2.h: 206:     nrf2401_write(0x03, 0x03);
   714  0008DA  0E03               	movlw	3
   715  0008DC  6E42               	movwf	nrf2401_write@valor^0,c
   716  0008DE  0E03               	movlw	3
   717  0008E0  EC34  F005         	call	_nrf2401_write
   718                           
   719                           ;./Librerias/nRF24L01_2.h: 207:     nrf2401_write(0x06, 0x08 + 0x06);
   720  0008E4  0E0E               	movlw	14
   721  0008E6  6E42               	movwf	nrf2401_write@valor^0,c
   722  0008E8  0E06               	movlw	6
   723  0008EA  EC34  F005         	call	_nrf2401_write
   724                           
   725                           ;./Librerias/nRF24L01_2.h: 208:     nrf2401_write(0x05, canal);
   726  0008EE  C048  F042         	movff	nrF2401_init_TX@canal,nrf2401_write@valor
   727  0008F2  0E05               	movlw	5
   728  0008F4  EC34  F005         	call	_nrf2401_write
   729                           
   730                           ;./Librerias/nRF24L01_2.h: 209:     nrf2401_write(0x01, 0);
   731  0008F8  0E00               	movlw	0
   732  0008FA  6E42               	movwf	nrf2401_write@valor^0,c
   733  0008FC  0E01               	movlw	1
   734  0008FE  EC34  F005         	call	_nrf2401_write
   735                           
   736                           ;./Librerias/nRF24L01_2.h: 210:     nrf2401_write(0x00, 0x02 +0x04 + 0x08);
   737  000902  0E0E               	movlw	14
   738  000904  6E42               	movwf	nrf2401_write@valor^0,c
   739  000906  0E00               	movlw	0
   740  000908  EC34  F005         	call	_nrf2401_write
   741  00090C                     
   742                           ;./Librerias/nRF24L01_2.h: 211:     nrf2401_direccion_TX_RX(direccion_tx, 0x10);
   743  00090C  0E06               	movlw	low _direccion_tx
   744  00090E  6E42               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   745  000910  0E08               	movlw	high _direccion_tx
   746  000912  6E43               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   747  000914  0E10               	movlw	16
   748  000916  6E44               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   749  000918  ECBE  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   750  00091C                     
   751                           ;./Librerias/nRF24L01_2.h: 212:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
   752  00091C  0E06               	movlw	low _direccion_tx
   753  00091E  6E42               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   754  000920  0E08               	movlw	high _direccion_tx
   755  000922  6E43               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   756  000924  0E0A               	movlw	10
   757  000926  6E44               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   758  000928  ECBE  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   759                           
   760                           ;./Librerias/nRF24L01_2.h: 213:     flush_TX_RX();
   761  00092C  EC42  F005         	call	_flush_TX_RX	;wreg free
   762  000930                     
   763                           ;./Librerias/nRF24L01_2.h: 214:     LATBbits.LATB1 = 1;
   764  000930  828A               	bsf	138,1,c	;volatile
   765  000932  0012               	return		;funcret
   766  000934                     __end_of_nrF2401_init_TX:
   767                           	callstack 0
   768                           
   769 ;; *************** function _nrf2401_direccion_TX_RX *****************
   770 ;; Defined at:
   771 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  direccion_      2    2[COMRAM] PTR const unsigned char 
   774 ;;		 -> direccion_tx(5), 
   775 ;;  registro        1    4[COMRAM] unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  cont_s          1    7[COMRAM] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         3       0       0       0       0       0       0       0       0
   788 ;;      Locals:         1       0       0       0       0       0       0       0       0
   789 ;;      Temps:          2       0       0       0       0       0       0       0       0
   790 ;;      Totals:         6       0       0       0       0       0       0       0       0
   791 ;;Total ram usage:        6 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 1
   794 ;; This function calls:
   795 ;;		_spi_s_write
   796 ;; This function is called by:
   797 ;;		_nrF2401_init_TX
   798 ;;		_nrF2401_init_RX
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text5
   803  00097C                     __ptext5:
   804                           	callstack 0
   805  00097C                     _nrf2401_direccion_TX_RX:
   806                           	callstack 28
   807  00097C                     
   808                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
   809  00097C  948B               	bcf	139,2,c	;volatile
   810  00097E                     
   811                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
   812  00097E  5044               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
   813  000980  0920               	iorlw	32
   814  000982  EC9A  F004         	call	_spi_s_write
   815  000986                     
   816                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
   817  000986  0E00               	movlw	0
   818  000988  6E47               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
   819  00098A                     l1420:
   820                           
   821                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
   822  00098A  5047               	movf	nrf2401_direccion_TX_RX@cont_s^0,w,c
   823  00098C  2442               	addwf	nrf2401_direccion_TX_RX@direccion_^0,w,c
   824  00098E  6E45               	movwf	??_nrf2401_direccion_TX_RX^0,c
   825  000990  0E00               	movlw	0
   826  000992  2043               	addwfc	(nrf2401_direccion_TX_RX@direccion_+1)^0,w,c
   827  000994  6E46               	movwf	(??_nrf2401_direccion_TX_RX+1)^0,c
   828  000996  C045  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
   829  00099A  C046  FFF7         	movff	??_nrf2401_direccion_TX_RX+1,tblptrh
   830  00099E                     	if	0	;tblptru may be non-zero
   831  00099E                     	endif
   832  00099E                     	if	0	;tblptru may be non-zero
   833  00099E                     	endif
   834  00099E  0008               	tblrd		*
   835  0009A0  50F5               	movf	tablat,w,c
   836  0009A2  EC9A  F004         	call	_spi_s_write
   837  0009A6                     
   838                           ;./Librerias/nRF24L01_2.h: 120:     }
   839  0009A6  2A47               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
   840  0009A8  0E04               	movlw	4
   841  0009AA  6447               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
   842  0009AC  EFDA  F004         	goto	u231
   843  0009B0  EFDC  F004         	goto	u230
   844  0009B4                     u231:
   845  0009B4  EFC5  F004         	goto	l1420
   846  0009B8                     u230:
   847  0009B8                     
   848                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
   849  0009B8  848B               	bsf	139,2,c	;volatile
   850  0009BA                     
   851                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   852  0009BA  0E14               	movlw	20
   853  0009BC                     u337:
   854  0009BC  2EE8               	decfsz	wreg,f,c
   855  0009BE  D7FE               	bra	u337
   856  0009C0  0012               	return		;funcret
   857  0009C2                     __end_of_nrf2401_direccion_TX_RX:
   858                           	callstack 0
   859                           
   860 ;; *************** function _flush_TX_RX *****************
   861 ;; Defined at:
   862 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         0       0       0       0       0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 2
   883 ;; This function calls:
   884 ;;		_nrf2401_comando
   885 ;;		_nrf2401_write
   886 ;; This function is called by:
   887 ;;		_nrF2401_init_TX
   888 ;;		_nrF2401_init_RX
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text6
   893  000A84                     __ptext6:
   894                           	callstack 0
   895  000A84                     _flush_TX_RX:
   896                           	callstack 27
   897  000A84                     
   898                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
   899  000A84  0E70               	movlw	112
   900  000A86  6E42               	movwf	nrf2401_write@valor^0,c
   901  000A88  0E07               	movlw	7
   902  000A8A  EC34  F005         	call	_nrf2401_write
   903                           
   904                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
   905  000A8E  0EE1               	movlw	225
   906  000A90  EC64  F005         	call	_nrf2401_comando
   907                           
   908                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
   909  000A94  0EE2               	movlw	226
   910  000A96  EC64  F005         	call	_nrf2401_comando
   911  000A9A  0012               	return		;funcret
   912  000A9C                     __end_of_flush_TX_RX:
   913                           	callstack 0
   914                           
   915 ;; *************** function _nrf2401_write *****************
   916 ;; Defined at:
   917 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  reg             1    wreg     unsigned char 
   920 ;;  valor           1    2[COMRAM] unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  reg             1    3[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         1       0       0       0       0       0       0       0       0
   933 ;;      Locals:         1       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0
   935 ;;      Totals:         2       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:        2 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 1
   939 ;; This function calls:
   940 ;;		_spi_s_write
   941 ;; This function is called by:
   942 ;;		_flush_TX
   943 ;;		_flush_TX_RX
   944 ;;		_nrf2401_envia
   945 ;;		_nrF2401_init_TX
   946 ;;		_flush_RX
   947 ;;		_nrF2401_init_RX
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text7
   952  000A68                     __ptext7:
   953                           	callstack 0
   954  000A68                     _nrf2401_write:
   955                           	callstack 28
   956                           
   957                           ;incstack = 0
   958                           ;nrf2401_write@reg stored from wreg
   959  000A68  6E43               	movwf	nrf2401_write@reg^0,c
   960  000A6A                     
   961                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
   962  000A6A  948B               	bcf	139,2,c	;volatile
   963  000A6C                     
   964                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
   965  000A6C  5043               	movf	nrf2401_write@reg^0,w,c
   966  000A6E  0920               	iorlw	32
   967  000A70  EC9A  F004         	call	_spi_s_write
   968                           
   969                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
   970  000A74  5042               	movf	nrf2401_write@valor^0,w,c
   971  000A76  EC9A  F004         	call	_spi_s_write
   972  000A7A                     
   973                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
   974  000A7A  848B               	bsf	139,2,c	;volatile
   975  000A7C                     
   976                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   977  000A7C  0E14               	movlw	20
   978  000A7E                     u347:
   979  000A7E  2EE8               	decfsz	wreg,f,c
   980  000A80  D7FE               	bra	u347
   981  000A82  0012               	return		;funcret
   982  000A84                     __end_of_nrf2401_write:
   983                           	callstack 0
   984                           
   985 ;; *************** function _nrf2401_comando *****************
   986 ;; Defined at:
   987 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  comando         1    wreg     unsigned char 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  comando         1    2[COMRAM] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1001 ;;      Params:         0       0       0       0       0       0       0       0       0
  1002 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1004 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1005 ;;Total ram usage:        1 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 1
  1008 ;; This function calls:
  1009 ;;		_spi_s_write
  1010 ;; This function is called by:
  1011 ;;		_flush_TX
  1012 ;;		_flush_TX_RX
  1013 ;;		_flush_RX
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text8
  1018  000AC8                     __ptext8:
  1019                           	callstack 0
  1020  000AC8                     _nrf2401_comando:
  1021                           	callstack 27
  1022                           
  1023                           ;incstack = 0
  1024                           ;nrf2401_comando@comando stored from wreg
  1025  000AC8  6E42               	movwf	nrf2401_comando@comando^0,c
  1026  000ACA                     
  1027                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  1028  000ACA  948B               	bcf	139,2,c	;volatile
  1029  000ACC                     
  1030                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  1031  000ACC  5042               	movf	nrf2401_comando@comando^0,w,c
  1032  000ACE  EC9A  F004         	call	_spi_s_write
  1033  000AD2                     
  1034                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  1035  000AD2  848B               	bsf	139,2,c	;volatile
  1036  000AD4                     
  1037                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1038  000AD4  0E14               	movlw	20
  1039  000AD6                     u357:
  1040  000AD6  2EE8               	decfsz	wreg,f,c
  1041  000AD8  D7FE               	bra	u357
  1042  000ADA  0012               	return		;funcret
  1043  000ADC                     __end_of_nrf2401_comando:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _spi_s_write *****************
  1047 ;; Defined at:
  1048 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  dato_           1    wreg     unsigned char 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  dato_           1    0[COMRAM] unsigned char 
  1053 ;;  cont_s          1    1[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0
  1064 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1066 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_nrf2401_write
  1073 ;;		_nrf2401_comando
  1074 ;;		_nrf2401_direccion_TX_RX
  1075 ;;		_nrf2401_envia
  1076 ;;		_nrf2401_read
  1077 ;;		_nrf2401_recibe
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text9
  1082  000934                     __ptext9:
  1083                           	callstack 0
  1084  000934                     _spi_s_write:
  1085                           	callstack 29
  1086                           
  1087                           ;incstack = 0
  1088                           ;spi_s_write@dato_ stored from wreg
  1089  000934  6E40               	movwf	spi_s_write@dato_^0,c
  1090  000936                     
  1091                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  1092  000936  0E00               	movlw	0
  1093  000938  6E41               	movwf	spi_s_write@cont_s^0,c
  1094                           
  1095                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  1096  00093A  0E00               	movlw	0
  1097  00093C  6E41               	movwf	spi_s_write@cont_s^0,c
  1098  00093E                     l246:
  1099                           
  1100                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  1101  00093E  AE40               	btfss	spi_s_write@dato_^0,7,c
  1102  000940  EFA4  F004         	goto	u11
  1103  000944  EFA6  F004         	goto	u10
  1104  000948                     u11:
  1105  000948  EFA9  F004         	goto	l248
  1106  00094C                     u10:
  1107  00094C  828B               	bsf	139,1,c	;volatile
  1108  00094E  EFAA  F004         	goto	l1064
  1109  000952                     l248:
  1110  000952  928B               	bcf	139,1,c	;volatile
  1111  000954                     l1064:
  1112                           
  1113                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  1114  000954  90D8               	bcf	status,0,c
  1115  000956  3640               	rlcf	spi_s_write@dato_^0,f,c
  1116  000958                     
  1117                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  1118  000958  848A               	bsf	138,2,c	;volatile
  1119  00095A                     
  1120                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1121  00095A  0E14               	movlw	20
  1122  00095C                     u367:
  1123  00095C  2EE8               	decfsz	wreg,f,c
  1124  00095E  D7FE               	bra	u367
  1125  000960                     
  1126                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  1127  000960  948A               	bcf	138,2,c	;volatile
  1128  000962                     
  1129                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1130  000962  0E14               	movlw	20
  1131  000964                     u377:
  1132  000964  2EE8               	decfsz	wreg,f,c
  1133  000966  D7FE               	bra	u377
  1134  000968                     
  1135                           ;./Librerias/nRF24L01_2.h: 76:     }
  1136  000968  2A41               	incf	spi_s_write@cont_s^0,f,c
  1137  00096A  0E07               	movlw	7
  1138  00096C  6441               	cpfsgt	spi_s_write@cont_s^0,c
  1139  00096E  EFBB  F004         	goto	u21
  1140  000972  EFBD  F004         	goto	u20
  1141  000976                     u21:
  1142  000976  EF9F  F004         	goto	l246
  1143  00097A                     u20:
  1144  00097A  0012               	return		;funcret
  1145  00097C                     __end_of_spi_s_write:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _SYSTEM_Initialize *****************
  1149 ;; Defined at:
  1150 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 1
  1171 ;; This function calls:
  1172 ;;		_ADC_Initialize
  1173 ;;		_CCP2_Initialize
  1174 ;;		_OSCILLATOR_Initialize
  1175 ;;		_PIN_MANAGER_Initialize
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text10
  1182  000AEE                     __ptext10:
  1183                           	callstack 0
  1184  000AEE                     _SYSTEM_Initialize:
  1185                           	callstack 29
  1186  000AEE                     
  1187                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1188  000AEE  ECFC  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1189                           
  1190                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1191  000AF2  EC24  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1192                           
  1193                           ;mcc_generated_files/mcc.c: 55:     CCP2_Initialize();
  1194  000AF6  EC80  F005         	call	_CCP2_Initialize	;wreg free
  1195                           
  1196                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  1197  000AFA  EC59  F005         	call	_ADC_Initialize	;wreg free
  1198  000AFE  0012               	return		;funcret
  1199  000B00                     __end_of_SYSTEM_Initialize:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _PIN_MANAGER_Initialize *****************
  1203 ;; Defined at:
  1204 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1218 ;;      Params:         0       0       0       0       0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_SYSTEM_Initialize
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text11
  1232  0009F8                     __ptext11:
  1233                           	callstack 0
  1234  0009F8                     _PIN_MANAGER_Initialize:
  1235                           	callstack 29
  1236  0009F8                     
  1237                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1238  0009F8  0E00               	movlw	0
  1239  0009FA  6E89               	movwf	137,c	;volatile
  1240                           
  1241                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1242  0009FC  0E00               	movlw	0
  1243  0009FE  6E8A               	movwf	138,c	;volatile
  1244                           
  1245                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1246  000A00  0E00               	movlw	0
  1247  000A02  6E8B               	movwf	139,c	;volatile
  1248                           
  1249                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
  1250  000A04  0EC7               	movlw	199
  1251  000A06  6E92               	movwf	146,c	;volatile
  1252                           
  1253                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
  1254  000A08  0EFE               	movlw	254
  1255  000A0A  6E93               	movwf	147,c	;volatile
  1256                           
  1257                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
  1258  000A0C  0E87               	movlw	135
  1259  000A0E  6E94               	movwf	148,c	;volatile
  1260                           
  1261                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  1262  000A10  0E04               	movlw	4
  1263  000A12  010F               	movlb	15	; () banked
  1264  000A14  6F5D               	movwf	93,b	;volatile
  1265                           
  1266                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  1267  000A16  0E3E               	movlw	62
  1268  000A18  6F5C               	movwf	92,b	;volatile
  1269                           
  1270                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  1271  000A1A  0E07               	movlw	7
  1272  000A1C  6F5B               	movwf	91,b	;volatile
  1273                           
  1274                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1275  000A1E  0E00               	movlw	0
  1276  000A20  6E85               	movwf	133,c	;volatile
  1277  000A22                     
  1278                           ; BSR set to: 15
  1279                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1280  000A22  8EF1               	bsf	241,7,c	;volatile
  1281  000A24                     
  1282                           ; BSR set to: 15
  1283  000A24  0012               	return		;funcret
  1284  000A26                     __end_of_PIN_MANAGER_Initialize:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _OSCILLATOR_Initialize *****************
  1288 ;; Defined at:
  1289 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_SYSTEM_Initialize
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text12
  1317  000A48                     __ptext12:
  1318                           	callstack 0
  1319  000A48                     _OSCILLATOR_Initialize:
  1320                           	callstack 29
  1321  000A48                     
  1322                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  1323  000A48  0E70               	movlw	112
  1324  000A4A  6ED3               	movwf	211,c	;volatile
  1325                           
  1326                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  1327  000A4C  0E00               	movlw	0
  1328  000A4E  6ED2               	movwf	210,c	;volatile
  1329                           
  1330                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x80;
  1331  000A50  0E80               	movlw	128
  1332  000A52  6E9B               	movwf	155,c	;volatile
  1333                           
  1334                           ;mcc_generated_files/mcc.c: 69:     ACTCON = 0x00;
  1335  000A54  0E00               	movlw	0
  1336  000A56  6EB5               	movwf	181,c	;volatile
  1337  000A58                     l118:
  1338                           
  1339                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  1340  000A58  AED2               	btfss	4050,7,c	;volatile
  1341  000A5A  EF31  F005         	goto	u51
  1342  000A5E  EF33  F005         	goto	u50
  1343  000A62                     u51:
  1344  000A62  EF2C  F005         	goto	l118
  1345  000A66                     u50:
  1346  000A66  0012               	return		;funcret
  1347  000A68                     __end_of_OSCILLATOR_Initialize:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _CCP2_Initialize *****************
  1351 ;; Defined at:
  1352 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_SYSTEM_Initialize
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text13
  1380  000B00                     __ptext13:
  1381                           	callstack 0
  1382  000B00                     _CCP2_Initialize:
  1383                           	callstack 29
  1384  000B00                     
  1385                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  1386  000B00  0E00               	movlw	0
  1387  000B02  6E97               	movwf	151,c	;volatile
  1388                           
  1389                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  1390  000B04  0E00               	movlw	0
  1391  000B06  6E90               	movwf	144,c	;volatile
  1392                           
  1393                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  1394  000B08  0E00               	movlw	0
  1395  000B0A  6E91               	movwf	145,c	;volatile
  1396  000B0C  0012               	return		;funcret
  1397  000B0E                     __end_of_CCP2_Initialize:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _ADC_Initialize *****************
  1401 ;; Defined at:
  1402 ;;		line 62 in file "mcc_generated_files/adc.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_SYSTEM_Initialize
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text14
  1430  000AB2                     __ptext14:
  1431                           	callstack 0
  1432  000AB2                     _ADC_Initialize:
  1433                           	callstack 29
  1434  000AB2                     
  1435                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1436  000AB2  0E00               	movlw	0
  1437  000AB4  6EC1               	movwf	193,c	;volatile
  1438                           
  1439                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
  1440  000AB6  0E87               	movlw	135
  1441  000AB8  6EC0               	movwf	192,c	;volatile
  1442                           
  1443                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1444  000ABA  0E00               	movlw	0
  1445  000ABC  6EC3               	movwf	195,c	;volatile
  1446                           
  1447                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1448  000ABE  0E00               	movlw	0
  1449  000AC0  6EC4               	movwf	196,c	;volatile
  1450                           
  1451                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  1452  000AC2  0E01               	movlw	1
  1453  000AC4  6EC2               	movwf	194,c	;volatile
  1454  000AC6  0012               	return		;funcret
  1455  000AC8                     __end_of_ADC_Initialize:
  1456                           	callstack 0
  1457                           
  1458                           	psect	rparam
  1459  0000                     
  1460                           	psect	idloc
  1461                           
  1462                           ;Config register IDLOC0 @ 0x200000
  1463                           ;	unspecified, using default values
  1464  200000                     	org	2097152
  1465  200000  FF                 	db	255
  1466                           
  1467                           ;Config register IDLOC1 @ 0x200001
  1468                           ;	unspecified, using default values
  1469  200001                     	org	2097153
  1470  200001  FF                 	db	255
  1471                           
  1472                           ;Config register IDLOC2 @ 0x200002
  1473                           ;	unspecified, using default values
  1474  200002                     	org	2097154
  1475  200002  FF                 	db	255
  1476                           
  1477                           ;Config register IDLOC3 @ 0x200003
  1478                           ;	unspecified, using default values
  1479  200003                     	org	2097155
  1480  200003  FF                 	db	255
  1481                           
  1482                           ;Config register IDLOC4 @ 0x200004
  1483                           ;	unspecified, using default values
  1484  200004                     	org	2097156
  1485  200004  FF                 	db	255
  1486                           
  1487                           ;Config register IDLOC5 @ 0x200005
  1488                           ;	unspecified, using default values
  1489  200005                     	org	2097157
  1490  200005  FF                 	db	255
  1491                           
  1492                           ;Config register IDLOC6 @ 0x200006
  1493                           ;	unspecified, using default values
  1494  200006                     	org	2097158
  1495  200006  FF                 	db	255
  1496                           
  1497                           ;Config register IDLOC7 @ 0x200007
  1498                           ;	unspecified, using default values
  1499  200007                     	org	2097159
  1500  200007  FF                 	db	255
  1501                           
  1502                           	psect	config
  1503                           
  1504                           ;Config register CONFIG1L @ 0x300000
  1505                           ;	PLL Selection
  1506                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1507                           ;	PLL Enable Configuration bit
  1508                           ;	CFGPLLEN = ON, PLL Enabled
  1509                           ;	CPU System Clock Postscaler
  1510                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1511                           ;	Low Speed USB mode with 48 MHz system clock
  1512                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1513  300000                     	org	3145728
  1514  300000  23                 	db	35
  1515                           
  1516                           ;Config register CONFIG1H @ 0x300001
  1517                           ;	Oscillator Selection
  1518                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  1519                           ;	Primary Oscillator Shutdown
  1520                           ;	PCLKEN = ON, Primary oscillator enabled
  1521                           ;	Fail-Safe Clock Monitor
  1522                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1523                           ;	Internal/External Oscillator Switchover
  1524                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1525  300001                     	org	3145729
  1526  300001  22                 	db	34
  1527                           
  1528                           ;Config register CONFIG2L @ 0x300002
  1529                           ;	Power-up Timer Enable
  1530                           ;	nPWRTEN = ON, Power up timer enabled
  1531                           ;	Brown-out Reset Enable
  1532                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1533                           ;	Brown-out Reset Voltage
  1534                           ;	BORV = 190, BOR set to 1.9V nominal
  1535                           ;	Low-Power Brown-out Reset
  1536                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1537  300002                     	org	3145730
  1538  300002  5E                 	db	94
  1539                           
  1540                           ;Config register CONFIG2H @ 0x300003
  1541                           ;	Watchdog Timer Enable bits
  1542                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1543                           ;	Watchdog Timer Postscaler
  1544                           ;	WDTPS = 32768, 1:32768
  1545  300003                     	org	3145731
  1546  300003  3C                 	db	60
  1547                           
  1548                           ; Padding undefined space
  1549  300004                     	org	3145732
  1550  300004  FF                 	db	255
  1551                           
  1552                           ;Config register CONFIG3H @ 0x300005
  1553                           ;	CCP2 MUX bit
  1554                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1555                           ;	PORTB A/D Enable bit
  1556                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1557                           ;	Timer3 Clock Input MUX bit
  1558                           ;	T3CMX = RC0, T3CKI function is on RC0
  1559                           ;	SDO Output MUX bit
  1560                           ;	SDOMX = RB3, SDO function is on RB3
  1561                           ;	Master Clear Reset Pin Enable
  1562                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1563  300005                     	org	3145733
  1564  300005  D1                 	db	209
  1565                           
  1566                           ;Config register CONFIG4L @ 0x300006
  1567                           ;	Stack Full/Underflow Reset
  1568                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1569                           ;	Single-Supply ICSP Enable bit
  1570                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1571                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1572                           ;	ICPRT = OFF, ICPORT disabled
  1573                           ;	Extended Instruction Set Enable bit
  1574                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1575                           ;	Background Debugger Enable bit
  1576                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1577  300006                     	org	3145734
  1578  300006  85                 	db	133
  1579                           
  1580                           ; Padding undefined space
  1581  300007                     	org	3145735
  1582  300007  FF                 	db	255
  1583                           
  1584                           ;Config register CONFIG5L @ 0x300008
  1585                           ;	Block 0 Code Protect
  1586                           ;	CP0 = OFF, Block 0 is not code-protected
  1587                           ;	Block 1 Code Protect
  1588                           ;	CP1 = OFF, Block 1 is not code-protected
  1589                           ;	Block 2 Code Protect
  1590                           ;	CP2 = OFF, Block 2 is not code-protected
  1591                           ;	Block 3 Code Protect
  1592                           ;	CP3 = OFF, Block 3 is not code-protected
  1593  300008                     	org	3145736
  1594  300008  0F                 	db	15
  1595                           
  1596                           ;Config register CONFIG5H @ 0x300009
  1597                           ;	Boot Block Code Protect
  1598                           ;	CPB = OFF, Boot block is not code-protected
  1599                           ;	Data EEPROM Code Protect
  1600                           ;	CPD = OFF, Data EEPROM is not code-protected
  1601  300009                     	org	3145737
  1602  300009  C0                 	db	192
  1603                           
  1604                           ;Config register CONFIG6L @ 0x30000A
  1605                           ;	Block 0 Write Protect
  1606                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1607                           ;	Block 1 Write Protect
  1608                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1609                           ;	Block 2 Write Protect
  1610                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1611                           ;	Block 3 Write Protect
  1612                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1613  30000A                     	org	3145738
  1614  30000A  0F                 	db	15
  1615                           
  1616                           ;Config register CONFIG6H @ 0x30000B
  1617                           ;	Configuration Registers Write Protect
  1618                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1619                           ;	Boot Block Write Protect
  1620                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1621                           ;	Data EEPROM Write Protect
  1622                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1623  30000B                     	org	3145739
  1624  30000B  E0                 	db	224
  1625                           
  1626                           ;Config register CONFIG7L @ 0x30000C
  1627                           ;	Block 0 Table Read Protect
  1628                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1629                           ;	Block 1 Table Read Protect
  1630                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1631                           ;	Block 2 Table Read Protect
  1632                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1633                           ;	Block 3 Table Read Protect
  1634                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1635  30000C                     	org	3145740
  1636  30000C  0F                 	db	15
  1637                           
  1638                           ;Config register CONFIG7H @ 0x30000D
  1639                           ;	Boot Block Table Read Protect
  1640                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1641  30000D                     	org	3145741
  1642  30000D  40                 	db	64
  1643                           tosu	equ	0xFFF
  1644                           tosh	equ	0xFFE
  1645                           tosl	equ	0xFFD
  1646                           stkptr	equ	0xFFC
  1647                           pclatu	equ	0xFFB
  1648                           pclath	equ	0xFFA
  1649                           pcl	equ	0xFF9
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           prodh	equ	0xFF4
  1655                           prodl	equ	0xFF3
  1656                           indf0	equ	0xFEF
  1657                           postinc0	equ	0xFEE
  1658                           postdec0	equ	0xFED
  1659                           preinc0	equ	0xFEC
  1660                           plusw0	equ	0xFEB
  1661                           fsr0h	equ	0xFEA
  1662                           fsr0l	equ	0xFE9
  1663                           wreg	equ	0xFE8
  1664                           indf1	equ	0xFE7
  1665                           postinc1	equ	0xFE6
  1666                           postdec1	equ	0xFE5
  1667                           preinc1	equ	0xFE4
  1668                           plusw1	equ	0xFE3
  1669                           fsr1h	equ	0xFE2
  1670                           fsr1l	equ	0xFE1
  1671                           bsr	equ	0xFE0
  1672                           indf2	equ	0xFDF
  1673                           postinc2	equ	0xFDE
  1674                           postdec2	equ	0xFDD
  1675                           preinc2	equ	0xFDC
  1676                           plusw2	equ	0xFDB
  1677                           fsr2h	equ	0xFDA
  1678                           fsr2l	equ	0xFD9
  1679                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      74
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(2) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_nrF2401_init_TX
    _nrf2401_envia->_nrf2401_write
    _flush_TX->_nrf2401_write
    _nrF2401_init_TX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7107
                                              9 COMRAM     2     2      0
                  _SYSTEM_Initialize
                    _nrF2401_init_TX
                      _nrf2401_envia
                         _spi_s_init
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf2401_envia                                        2     2      0    3194
                                              4 COMRAM     1     1      0
                           _flush_TX
                      _nrf2401_write
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX                                             0     0      0    1593
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_TX                                      1     1      0    3913
                                              8 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              6     3      3     765
                                              2 COMRAM     6     3      3
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    1593
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1533
                                              2 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0      60
                                              2 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_write                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _nrF2401_init_TX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _nrf2401_envia
     _flush_TX
       _nrf2401_comando
       _nrf2401_write
     _nrf2401_write
     _spi_s_write
   _spi_s_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      4A       1       77.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68       6        0.0%
DATA                 0      0      68       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 04 17:58:30 2022

                                u10 094C                                  u11 0948  
                                u20 097A                                  u21 0976  
                                u50 0A66                                  u51 0A62  
                               l121 0A66                                 l115 0AFE  
                               l118 0A58                                 l160 0B0C  
                               l250 097A                                 l148 0A24  
                               l253 0A82                                 l237 0AB0  
                               l246 093E                                 l270 0AEC  
                               l263 09B8                                 l248 0952  
                               l256 0ADA                                 l264 09C0  
                               l273 0A9A                                 l179 0AC6  
                               l276 09F6                                 l285 0932  
                               u230 09B8                                 u231 09B4  
                               u307 083A                                 u317 0890  
                               u270 0862                                 u327 09E6  
                               u271 085E                                 u280 0872  
                               u337 09BC                                 u281 086C  
                               u290 08AC                                 u347 0A7E  
                               u291 08A8                                 u357 0AD6  
                               u286 0874                                 u367 095C  
                               u377 0964                                 wreg 000FE8  
                        _TXSTA1bits 000FAC                     _nrF2401_init_TX 08CC  
                              l1120 0AD4                                l1130 0AB2  
                              l1122 09F8                                l1114 0ACA  
                              l1124 0A22                                l1116 0ACC  
                              l1126 0A48                                l1070 0960  
                              l1062 094C                                l1118 0AD2  
                              l1128 0B00                                l1072 0962  
                              l1064 0954                                l1056 0936  
                              l1074 0968                                l1066 0958  
                              l1402 0A6A                                l1410 097C  
                              l1076 096A                                l1068 095A  
                              l1404 0A6C                                l1420 098A  
                              l1412 097E                                l1500 0820  
                              l1406 0A7A                                l1430 0A84  
                              l1422 09A6                                l1414 0986  
                              l1510 0848                                l1502 0826  
                              l1184 0AEE                                l1408 0A7C  
                              l1424 09A8                                l1440 09D2  
                              l1520 0886                                l1512 084A  
                              l1504 082A                                l1426 09BA  
                              l1450 09E4                                l1442 09D4  
                              l1434 09C4                                l1186 0A9C  
                              l1530 08BE                                l1522 089E  
                              l1514 084E                                l1506 082E  
                              l1460 090C                                l1428 0ADC  
                              l1452 09EA                                l1444 09DA  
                              l1436 09C4                                l1524 08AC  
                              l1516 0854                                l1508 0830  
                              l1462 091C                                l1454 09EC  
                              l1446 09E0                                l1438 09C8  
                              l1526 08B0                                l1518 0862  
                              l1464 0930                                l1456 08CE  
                              l1448 09E2                                l1528 08BA  
                              l1458 08D0                                l1498 081C  
                              STR_1 080B                                STR_3 0817  
                              STR_5 0811                                _LATA 000F89  
                              _LATB 000F8A                                _LATC 000F8B  
                              _WPUB 000F85             __end_of_CCP2_Initialize 0B0E  
                              _main 081C                                start 0000  
                  nrf2401_write@reg 0043                        ?_flush_TX_RX 0040  
                      ___param_bank 000000     __end_of_nrf2401_direccion_TX_RX 09C2  
    __size_of_OSCILLATOR_Initialize 0020       __end_of_OSCILLATOR_Initialize 0A68  
                             ?_main 0040                               _LATB0 007C50  
                             _LATA5 007C4D                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _trama 0022                               _texto 0001  
                             tablat 000FF5                               status 000FD8  
_EUSART1_DefaultFramingErrorHandler 000000                     __initialization 0A26  
                      __end_of_main 08CC                              ??_main 0049  
                     __activetblptr 000002             __end_of_nrF2401_init_TX 0934  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ACTCON 000FB5  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR2H 000F91                              _CCPR2L 000F90  
                            _ANSELA 000F5B                              _ANSELB 000F5C  
                            _ANSELC 000F5D                __end_of_direccion_rx 0806  
              __end_of_direccion_tx 080B                              _RCREG1 000FAE  
                            _RCSTA1 000FAB                              _OSCCON 000FD3  
                            _PLLRDY 007E97                              _SPBRG1 000FAF  
                  ?_CCP2_Initialize 0040                              _TXREG1 000FAD  
                            _TXSTA1 000FAC                     _nrf2401_comando 0AC8  
                            _datorx 001E                    __end_of_flush_TX 0AEE  
                            clear_0 0A2C                              clear_1 0A38  
                            isa$std 000001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                   _SYSTEM_Initialize 0AEE  
                        __accesstop 0060             __end_of__initialization 0A3E  
              nrF2401_init_TX@canal 0048                        ?_spi_s_write 0040  
                ?_SYSTEM_Initialize 0040                       ___rparam_used 000001  
                nrf2401_write@valor 0042                      __pcstackCOMRAM 0040  
               ??_SYSTEM_Initialize 0040                __size_of_flush_TX_RX 0018  
                  ?_nrF2401_init_TX 0040           __end_of_SYSTEM_Initialize 0B00  
                        __pbssBANK0 0060             __end_of_nrf2401_comando 0ADC  
             __end_of_nrf2401_envia 09F8              nrf2401_comando@comando 0042  
             __end_of_nrf2401_write 0A84                             _CCP2CON 000F97  
           __size_of_ADC_Initialize 0016                             _OSCCON2 000FD2  
          ?_nrf2401_direccion_TX_RX 0042                             _OSCTUNE 000F9B  
                           _SPBRGH1 000FB0       nrf2401_direccion_TX_RX@cont_s 0047  
                         ?_flush_TX 0040                _ADC_InterruptHandler 0015  
                           __Hparam 0000                             __Lparam 0000  
                      __psmallconst 0800                        _direccion_rx 0801  
                      _direccion_tx 0806                             __pcinit 0A26  
                           __ramtop 0800                             __ptext0 081C  
                           _flag_rx 001D                             __ptext1 0A9C  
                           __ptext2 09C2                             __ptext3 0ADC  
                           __ptext4 08CC                             __ptext5 097C  
                           __ptext6 0A84                             __ptext7 0A68  
                           __ptext8 0AC8                             __ptext9 0934  
                  spi_s_write@dato_ 0040               _OSCILLATOR_Initialize 0A48  
          ??_PIN_MANAGER_Initialize 0040                             _procesa 0060  
                           _puntero 001F          __size_of_SYSTEM_Initialize 0012  
 nrf2401_direccion_TX_RX@direccion_ 0042                end_of_initialization 0A3E  
                        ??_flush_TX 0044                       __Lmediumconst 0000  
       _EUSART1_OverrunErrorHandler 0019                    ?_nrf2401_comando 0040  
              __size_of_spi_s_write 0048                             postinc0 000FEE  
                         _PORTAbits 000F80                           _PORTBbits 000F81  
                        _spi_s_init 0A9C                           _TRISBbits 000F93  
                         _TRISCbits 000F94            __size_of_CCP2_Initialize 000E  
                    _ADC_Initialize 0AB2              ?_OSCILLATOR_Initialize 0040  
               start_initialization 0A26     __size_of_PIN_MANAGER_Initialize 002E  
                     ??_flush_TX_RX 0044              __end_of_ADC_Initialize 0AC8  
                       ?_spi_s_init 0040                         __pbssCOMRAM 0001  
          __size_of_nrF2401_init_TX 0068                   __size_of_flush_TX 0012  
  __size_of_nrf2401_direccion_TX_RX 0046              _PIN_MANAGER_Initialize 09F8  
                       _dato_serial 0020                     ?_ADC_Initialize 0040  
               __end_of_flush_TX_RX 0A9C                         __smallconst 0800  
                 ??_CCP2_Initialize 0040     nrf2401_direccion_TX_RX@registro 0044  
                          _BAUDCON1 000FB8  _EUSART1_DefaultOverrunErrorHandler 000000  
              _EUSART1_ErrorHandler 0017              __size_of_nrf2401_envia 0036  
            __size_of_nrf2401_write 001C                            _LATBbits 000F8A  
                          _LATCbits 000F8B                 __size_of_spi_s_init 0016  
                          _PIR1bits 000F9E                          _ADCON0bits 000FC2  
                       _INTCON2bits 000FF1                nrf2401_envia@dato_tx 0044  
                     ??_spi_s_write 0040                            __Hrparam 0000  
                 ??_nrF2401_init_TX 0048                            __Lrparam 0000  
                       _flush_TX_RX 0A84                       _nrf2401_envia 09C2  
                     _nrf2401_write 0A68             ??_OSCILLATOR_Initialize 0040  
          __size_of_nrf2401_comando 0014         _EUSART1_DefaultErrorHandler 000000  
                          __ptext10 0AEE                            __ptext11 09F8  
                          __ptext12 0A48                            __ptext13 0B00  
                          __ptext14 0AB2                            _flush_TX 0ADC  
                 spi_s_write@cont_s 0041                       __size_of_main 00B0  
           _nrf2401_direccion_TX_RX 097C                      ?_nrf2401_envia 0040  
                          isa$xinst 000000                      ?_nrf2401_write 0042  
               __end_of_spi_s_write 097C         _EUSART1_FramingErrorHandler 001B  
                      ??_spi_s_init 0040                          _INTCONbits 000FF2  
           ?_PIN_MANAGER_Initialize 0040                          _RCSTA1bits 000FAB  
                  ??_ADC_Initialize 0040                  __end_of_spi_s_init 0AB2  
                   _CCP2_Initialize 0B00                  _eusart1RxLastError 0021  
                 ??_nrf2401_comando 0042           ??_nrf2401_direccion_TX_RX 0045  
    __end_of_PIN_MANAGER_Initialize 0A26                         _spi_s_write 0934  
                   ??_nrf2401_envia 0044                     ??_nrf2401_write 0043  
