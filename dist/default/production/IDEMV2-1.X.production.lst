

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 08 19:39:14 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.40
    89                           ; Generated 17/11/2021 GMT
    90                           ; 
    91                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F25K50 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   125  0000                     
   126 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   127  0000                     
   128 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   129  0000                     
   130                           	psect	idataBANK1
   131  00408A                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for _offset
   135                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;;main.c: 85: double re
      +                          lacion = 0.100;;main.c: 86: double I = 0.0;;main.c: 87: double I_max = 0.0;;main.c: 88: 
      +                          double I_min = 0.0;;main.c: 89: double I_rms = 0.0;;main.c: 90: double offset = 0.100;
   136  00408A  CCCD               	dw	52429
   137  00408C  3DCC               	dw	15820
   138                           
   139                           ;initializer for _relacion
   140                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;;main.c: 85: double re
      +                          lacion = 0.100;
   141  00408E  CCCD               	dw	52429
   142  004090  3DCC               	dw	15820
   143                           
   144                           ;initializer for _sensibilidad
   145                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;
   146  004092  624E               	dw	25166
   147  004094  3E90               	dw	16016
   148                           
   149                           	psect	smallconst
   150  000800                     __psmallconst:
   151                           	callstack 0
   152  000800  00                 	db	0
   153  000801                     _direccion_rx:
   154                           	callstack 0
   155  000801  11                 	db	17
   156  000802  11                 	db	17
   157  000803  11                 	db	17
   158  000804  11                 	db	17
   159  000805  11                 	db	17
   160  000806                     __end_of_direccion_rx:
   161                           	callstack 0
   162  000806  3840               	dw	14400
   163  000808  0000               	dw	0
   164  00080A                     __end_of_intervalo:
   165                           	callstack 0
   166  00080A                     _direccion_tx:
   167                           	callstack 0
   168  00080A  11                 	db	17
   169  00080B  11                 	db	17
   170  00080C  11                 	db	17
   171  00080D  11                 	db	17
   172  00080E  11                 	db	17
   173  00080F                     __end_of_direccion_tx:
   174                           	callstack 0
   175  0000                     _ANSELA	set	3931
   176  0000                     _ANSELB	set	3932
   177  0000                     _ANSELC	set	3933
   178  0000                     _TMR1	set	4046
   179  0000                     _T1GCONbits	set	4044
   180  0000                     _T1CONbits	set	4045
   181  0000                     _T1CON	set	4045
   182  0000                     _TMR1L	set	4046
   183  0000                     _TMR1H	set	4047
   184  0000                     _T1GCON	set	4044
   185  0000                     _PIE1bits	set	3997
   186  0000                     _RCONbits	set	4048
   187  0000                     _PORTBbits	set	3969
   188  0000                     _LATCbits	set	3979
   189  0000                     _LATBbits	set	3978
   190  0000                     _TRISBbits	set	3987
   191  0000                     _TRISCbits	set	3988
   192  0000                     _ADCON0bits	set	4034
   193  0000                     _ADCON0	set	4034
   194  0000                     _ADRESH	set	4036
   195  0000                     _ADRESL	set	4035
   196  0000                     _ADCON2	set	4032
   197  0000                     _ADCON1	set	4033
   198  0000                     _CCPR2H	set	3985
   199  0000                     _CCPR2L	set	3984
   200  0000                     _CCP2CON	set	3991
   201  0000                     _INTCONbits	set	4082
   202  0000                     _INTCON2bits	set	4081
   203  0000                     _WPUB	set	3973
   204  0000                     _TRISC	set	3988
   205  0000                     _TRISB	set	3987
   206  0000                     _TRISA	set	3986
   207  0000                     _LATC	set	3979
   208  0000                     _LATB	set	3978
   209  0000                     _LATA	set	3977
   210  0000                     _ACTCON	set	4021
   211  0000                     _OSCTUNE	set	3995
   212  0000                     _OSCCON2	set	4050
   213  0000                     _OSCCON	set	4051
   214  0000                     _TXREG1	set	4013
   215  0000                     _RCREG1	set	4014
   216  0000                     _RCSTA1bits	set	4011
   217  0000                     _TXSTA1bits	set	4012
   218  0000                     _PIR1bits	set	3998
   219  0000                     _SPBRGH1	set	4016
   220  0000                     _SPBRG1	set	4015
   221  0000                     _TXSTA1	set	4012
   222  0000                     _RCSTA1	set	4011
   223  0000                     _BAUDCON1	set	4024
   224  0000                     _LATA5	set	31821
   225  0000                     _PLLRDY	set	32407
   226  00080F                     STR_1:
   227  00080F  25                 	db	37
   228  000810  2E                 	db	46
   229  000811  33                 	db	51	;'3'
   230  000812  66                 	db	102	;'f'
   231  000813  20                 	db	32
   232  000814  41                 	db	65	;'A'
   233  000815  6D                 	db	109	;'m'
   234  000816  70                 	db	112	;'p'
   235  000817  2E                 	db	46
   236  000818  0A                 	db	10
   237  000819  0D                 	db	13
   238  00081A  00                 	db	0
   239  00081B                     STR_2:
   240  00081B  49                 	db	73	;'I'
   241  00081C  4E                 	db	78	;'N'
   242  00081D  46                 	db	70	;'F'
   243  00081E  00                 	db	0
   244  00081F                     STR_6:
   245  00081F  4E                 	db	78	;'N'
   246  000820  41                 	db	65	;'A'
   247  000821  4E                 	db	78	;'N'
   248  000822  00                 	db	0
   249  000823                     STR_3:
   250  000823  69                 	db	105	;'i'
   251  000824  6E                 	db	110	;'n'
   252  000825  66                 	db	102	;'f'
   253  000826  00                 	db	0
   254  000827                     STR_7:
   255  000827  6E                 	db	110	;'n'
   256  000828  61                 	db	97	;'a'
   257  000829  6E                 	db	110	;'n'
   258  00082A  00                 	db	0
   259  00082B                     STR_10:
   260  00082B  6C                 	db	108	;'l'
   261  00082C  66                 	db	102	;'f'
   262  00082D  00                 	db	0
   263  00082E  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           ; #config settings
   266                           
   267                           	psect	cinit
   268  003ADA                     __pcinit:
   269                           	callstack 0
   270  003ADA                     start_initialization:
   271                           	callstack 0
   272  003ADA                     __initialization:
   273                           	callstack 0
   274                           
   275                           ; Initialize objects allocated to BANK1 (12 bytes)
   276                           ; load TBLPTR registers with __pidataBANK1
   277  003ADA  0E8A               	movlw	low __pidataBANK1
   278  003ADC  6EF6               	movwf	tblptrl,c
   279  003ADE  0E40               	movlw	high __pidataBANK1
   280  003AE0  6EF7               	movwf	tblptrh,c
   281  003AE2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   282  003AE4  6EF8               	movwf	tblptru,c
   283  003AE6  EE01  F082         	lfsr	0,__pdataBANK1
   284  003AEA  EE10 F00C          	lfsr	1,12
   285  003AEE                     copy_data0:
   286  003AEE  0009               	tblrd		*+
   287  003AF0  CFF5 FFEE          	movff	tablat,postinc0
   288  003AF4  50E5               	movf	postdec1,w,c
   289  003AF6  50E1               	movf	fsr1l,w,c
   290  003AF8  E1FA               	bnz	copy_data0
   291                           
   292                           ; Clear objects allocated to BANK1 (130 bytes)
   293  003AFA  EE01  F000         	lfsr	0,__pbssBANK1
   294  003AFE  0E82               	movlw	130
   295  003B00                     clear_0:
   296  003B00  6AEE               	clrf	postinc0,c
   297  003B02  06E8               	decf	wreg,f,c
   298  003B04  E1FD               	bnz	clear_0
   299                           
   300                           ; Clear objects allocated to BANK0 (34 bytes)
   301  003B06  EE00  F0DE         	lfsr	0,__pbssBANK0
   302  003B0A  0E22               	movlw	34
   303  003B0C                     clear_1:
   304  003B0C  6AEE               	clrf	postinc0,c
   305  003B0E  06E8               	decf	wreg,f,c
   306  003B10  E1FD               	bnz	clear_1
   307                           
   308                           ; Clear objects allocated to COMRAM (4 bytes)
   309  003B12  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   310  003B14  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   311  003B16  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   312  003B18  6A57               	clrf	__pbssCOMRAM& (0+255),c
   313  003B1A                     end_of_initialization:
   314                           	callstack 0
   315  003B1A                     __end_of__initialization:
   316                           	callstack 0
   317  003B1A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   318  003B1C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   319  003B1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   320  003B20  6EF8               	movwf	tblptru,c
   321  003B22  0100               	movlb	0
   322  003B24  EFC9  F017         	goto	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMRAM
   325  000057                     __pbssCOMRAM:
   326                           	callstack 0
   327  000057                     _I:
   328                           	callstack 0
   329  000057                     	ds	4
   330                           
   331                           	psect	bssBANK0
   332  0000DE                     __pbssBANK0:
   333                           	callstack 0
   334  0000DE                     _I_min:
   335                           	callstack 0
   336  0000DE                     	ds	4
   337  0000E2                     _I_max:
   338                           	callstack 0
   339  0000E2                     	ds	4
   340  0000E6                     _nout:
   341                           	callstack 0
   342  0000E6                     	ds	2
   343  0000E8                     _width:
   344                           	callstack 0
   345  0000E8                     	ds	2
   346  0000EA                     _prec:
   347                           	callstack 0
   348  0000EA                     	ds	2
   349  0000EC                     _flags:
   350                           	callstack 0
   351  0000EC                     	ds	2
   352  0000EE                     TMR1_ISR@CountCallBack:
   353                           	callstack 0
   354  0000EE                     	ds	2
   355  0000F0                     _TMR1_InterruptHandler:
   356                           	callstack 0
   357  0000F0                     	ds	2
   358  0000F2                     _timer1ReloadVal:
   359                           	callstack 0
   360  0000F2                     	ds	2
   361  0000F4                     _l:
   362                           	callstack 0
   363  0000F4                     	ds	2
   364  0000F6                     _k:
   365                           	callstack 0
   366  0000F6                     	ds	2
   367  0000F8                     _j:
   368                           	callstack 0
   369  0000F8                     	ds	2
   370  0000FA                     _i:
   371                           	callstack 0
   372  0000FA                     	ds	2
   373  0000FC                     _valor:
   374                           	callstack 0
   375  0000FC                     	ds	2
   376  0000FE                     _dato_serial:
   377                           	callstack 0
   378  0000FE                     	ds	1
   379  0000FF                     _eusart1RxLastError:
   380                           	callstack 0
   381  0000FF                     	ds	1
   382                           
   383                           	psect	bssBANK1
   384  000100                     __pbssBANK1:
   385                           	callstack 0
   386  000100                     floorf@F527:
   387                           	callstack 0
   388  000100                     	ds	4
   389  000104                     ___fpclassifyf@F465:
   390                           	callstack 0
   391  000104                     	ds	4
   392  000108                     _previousMillis:
   393                           	callstack 0
   394  000108                     	ds	4
   395  00010C                     _currentSeg:
   396                           	callstack 0
   397  00010C                     	ds	4
   398  000110                     _conteo:
   399                           	callstack 0
   400  000110                     	ds	4
   401  000114                     _I_rms:
   402                           	callstack 0
   403  000114                     	ds	4
   404  000118                     _voltaje:
   405                           	callstack 0
   406  000118                     	ds	4
   407  00011C                     _ADC_InterruptHandler:
   408                           	callstack 0
   409  00011C                     	ds	2
   410  00011E                     _EUSART1_ErrorHandler:
   411                           	callstack 0
   412  00011E                     	ds	2
   413  000120                     _EUSART1_OverrunErrorHandler:
   414                           	callstack 0
   415  000120                     	ds	2
   416  000122                     _EUSART1_FramingErrorHandler:
   417                           	callstack 0
   418  000122                     	ds	2
   419  000124                     _dbuf:
   420                           	callstack 0
   421  000124                     	ds	80
   422  000174                     _valor_string:
   423                           	callstack 0
   424  000174                     	ds	14
   425                           
   426                           	psect	dataBANK1
   427  000182                     __pdataBANK1:
   428                           	callstack 0
   429  000182                     _offset:
   430                           	callstack 0
   431  000182                     	ds	4
   432  000186                     _relacion:
   433                           	callstack 0
   434  000186                     	ds	4
   435  00018A                     _sensibilidad:
   436                           	callstack 0
   437  00018A                     	ds	4
   438                           
   439                           	psect	cstackBANK1
   440  00018E                     __pcstackBANK1:
   441                           	callstack 0
   442  00018E                     _main$2426:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x0
   446  00018E                     	ds	4
   447                           
   448                           	psect	cstackBANK0
   449  000060                     __pcstackBANK0:
   450                           	callstack 0
   451  000060                     get_corriente_AC@i:
   452                           	callstack 0
   453  000060                     floorf@m:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x0
   457  000060                     	ds	2
   458  000062                     get_corriente_AC@corriente:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x2
   462  000062                     	ds	2
   463  000064                     floorf@e:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x4
   467  000064                     	ds	2
   468  000066                     floorf@u:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x6
   472  000066                     	ds	4
   473  00006A                     ?_efgtoa:
   474                           	callstack 0
   475  00006A                     efgtoa@fp:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xA
   479  00006A                     	ds	2
   480  00006C                     efgtoa@f:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0xC
   484  00006C                     	ds	4
   485  000070                     efgtoa@c:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x10
   489  000070                     	ds	1
   490  000071                     ??_efgtoa:
   491                           
   492                           ; 1 bytes @ 0x11
   493  000071                     	ds	5
   494  000076                     _efgtoa$1965:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x16
   498  000076                     	ds	2
   499  000078                     _efgtoa$1966:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x18
   503  000078                     	ds	2
   504  00007A                     _efgtoa$1971:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x1A
   508  00007A                     	ds	2
   509  00007C                     _efgtoa$1975:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x1C
   513  00007C                     	ds	2
   514  00007E                     _efgtoa$1976:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x1E
   518  00007E                     	ds	2
   519  000080                     _efgtoa$1977:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523  000080                     	ds	2
   524  000082                     efgtoa@t:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x22
   528  000082                     	ds	2
   529  000084                     efgtoa@pp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x24
   533  000084                     	ds	2
   534  000086                     efgtoa@ne:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x26
   538  000086                     	ds	2
   539  000088                     efgtoa@m:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x28
   543  000088                     	ds	2
   544  00008A                     efgtoa@ou:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x2A
   548  00008A                     	ds	4
   549  00008E                     efgtoa@d:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2E
   553  00008E                     	ds	2
   554  000090                     efgtoa@sign:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x30
   558  000090                     	ds	2
   559  000092                     efgtoa@p:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x32
   563  000092                     	ds	2
   564  000094                     efgtoa@w:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x34
   568  000094                     	ds	2
   569  000096                     efgtoa@nmode:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x36
   573  000096                     	ds	1
   574  000097                     efgtoa@mode:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x37
   578  000097                     	ds	1
   579  000098                     efgtoa@h:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x38
   583  000098                     	ds	4
   584  00009C                     efgtoa@l:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x3C
   588  00009C                     	ds	4
   589  0000A0                     efgtoa@i:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x40
   593  0000A0                     	ds	2
   594  0000A2                     efgtoa@g:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x42
   598  0000A2                     	ds	4
   599  0000A6                     efgtoa@e:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x46
   603  0000A6                     	ds	2
   604  0000A8                     efgtoa@n:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x48
   608  0000A8                     	ds	2
   609  0000AA                     efgtoa@u:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x4A
   613  0000AA                     	ds	4
   614  0000AE                     ?_vfpfcnvrt:
   615                           	callstack 0
   616  0000AE                     vfpfcnvrt@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x4E
   620  0000AE                     	ds	2
   621  0000B0                     vfpfcnvrt@fmt:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x50
   625  0000B0                     	ds	2
   626  0000B2                     vfpfcnvrt@ap:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x52
   630  0000B2                     	ds	2
   631  0000B4                     ??_vfpfcnvrt:
   632                           
   633                           ; 1 bytes @ 0x54
   634  0000B4                     	ds	4
   635  0000B8                     _vfpfcnvrt$1991:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x58
   639  0000B8                     	ds	2
   640  0000BA                     _vfpfcnvrt$1995:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x5A
   644  0000BA                     	ds	2
   645  0000BC                     vfpfcnvrt@f:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x5C
   649  0000BC                     	ds	4
   650  0000C0                     vfpfcnvrt@ct:
   651                           	callstack 0
   652                           
   653                           ; 3 bytes @ 0x60
   654  0000C0                     	ds	3
   655  0000C3                     vfpfcnvrt@c:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x63
   659  0000C3                     	ds	1
   660  0000C4                     ?_vfprintf:
   661                           	callstack 0
   662  0000C4                     vfprintf@fp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x64
   666  0000C4                     	ds	2
   667  0000C6                     vfprintf@fmt:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x66
   671  0000C6                     	ds	2
   672  0000C8                     vfprintf@ap:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x68
   676  0000C8                     	ds	2
   677  0000CA                     vfprintf@cfmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x6A
   681  0000CA                     	ds	2
   682  0000CC                     ?_sprintf:
   683                           	callstack 0
   684  0000CC                     sprintf@s:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x6C
   688  0000CC                     	ds	2
   689  0000CE                     sprintf@fmt:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x6E
   693  0000CE                     	ds	6
   694  0000D4                     sprintf@ap:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x74
   698  0000D4                     	ds	2
   699  0000D6                     sprintf@f:
   700                           	callstack 0
   701                           
   702                           ; 6 bytes @ 0x76
   703  0000D6                     	ds	6
   704  0000DC                     ??_main:
   705                           
   706                           ; 1 bytes @ 0x7C
   707  0000DC                     	ds	2
   708                           
   709                           	psect	cstackCOMRAM
   710  000001                     __pcstackCOMRAM:
   711                           	callstack 0
   712  000001                     TMR1_WriteTimer@timerVal:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x0
   716  000001                     	ds	2
   717  000003                     ??_INTERRUPT_InterruptManager:
   718  000003                     
   719                           ; 1 bytes @ 0x2
   720  000003                     	ds	2
   721  000005                     ?_strlen:
   722                           	callstack 0
   723  000005                     ?___fpclassifyf:
   724                           	callstack 0
   725  000005                     ?_isupper:
   726                           	callstack 0
   727  000005                     ?_isdigit:
   728                           	callstack 0
   729  000005                     ?_strncmp:
   730                           	callstack 0
   731  000005                     ?_isspace:
   732                           	callstack 0
   733  000005                     ?_ADC_GetConversion:
   734                           	callstack 0
   735  000005                     ?___wmul:
   736                           	callstack 0
   737  000005                     ?___awdiv:
   738                           	callstack 0
   739  000005                     ?___awmod:
   740                           	callstack 0
   741  000005                     ?___fladd:
   742                           	callstack 0
   743  000005                     ?___flneg:
   744                           	callstack 0
   745  000005                     ?___fltol:
   746                           	callstack 0
   747  000005                     ?___xxtofl:
   748                           	callstack 0
   749  000005                     _EUSART1_is_tx_ready$282:
   750                           	callstack 0
   751  000005                     EUSART1_Write@txData:
   752                           	callstack 0
   753  000005                     spi_s_read@dato_:
   754                           	callstack 0
   755  000005                     spi_s_write@dato_:
   756                           	callstack 0
   757  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   758                           	callstack 0
   759  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   760                           	callstack 0
   761  000005                     EUSART1_SetErrorHandler@interruptHandler:
   762                           	callstack 0
   763  000005                     TMR1_SetInterruptHandler@InterruptHandler:
   764                           	callstack 0
   765  000005                     ___wmul@multiplier:
   766                           	callstack 0
   767  000005                     ___awdiv@dividend:
   768                           	callstack 0
   769  000005                     ___awmod@dividend:
   770                           	callstack 0
   771  000005                     isdigit@c:
   772                           	callstack 0
   773  000005                     isspace@c:
   774                           	callstack 0
   775  000005                     isupper@c:
   776                           	callstack 0
   777  000005                     strcpy@dest:
   778                           	callstack 0
   779  000005                     strlen@s:
   780                           	callstack 0
   781  000005                     strncmp@_l:
   782                           	callstack 0
   783  000005                     ___fleq@ff1:
   784                           	callstack 0
   785  000005                     ___flneg@f1:
   786                           	callstack 0
   787  000005                     ___fltol@f1:
   788                           	callstack 0
   789  000005                     ___fladd@b:
   790                           	callstack 0
   791  000005                     ___xxtofl@val:
   792                           	callstack 0
   793  000005                     ___fpclassifyf@x:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x4
   797  000005                     	ds	1
   798  000006                     putch@txData:
   799                           	callstack 0
   800  000006                     spi_s_read@cont_s:
   801                           	callstack 0
   802  000006                     spi_s_write@cont_s:
   803                           	callstack 0
   804  000006                     EUSART1_Write_string@data:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x5
   808  000006                     	ds	1
   809  000007                     ??_isupper:
   810  000007                     ??_isdigit:
   811  000007                     ??_isspace:
   812  000007                     ??_ADC_GetConversion:
   813  000007                     nrf2401_write@valor:
   814                           	callstack 0
   815  000007                     nrf2401_comando@comando:
   816                           	callstack 0
   817  000007                     nrf2401_read@reg:
   818                           	callstack 0
   819  000007                     nrf2401_recibe@valor_:
   820                           	callstack 0
   821  000007                     nrf2401_direccion_TX_RX@direccion_:
   822                           	callstack 0
   823  000007                     ___wmul@multiplicand:
   824                           	callstack 0
   825  000007                     ___awdiv@divisor:
   826                           	callstack 0
   827  000007                     ___awmod@divisor:
   828                           	callstack 0
   829  000007                     fputc@c:
   830                           	callstack 0
   831  000007                     strcpy@src:
   832                           	callstack 0
   833  000007                     strlen@a:
   834                           	callstack 0
   835  000007                     strncmp@_r:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x6
   839  000007                     	ds	1
   840  000008                     nrf2401_write@reg:
   841                           	callstack 0
   842  000008                     nrf2401_read@dato_:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x7
   846  000008                     	ds	1
   847  000009                     ??___fpclassifyf:
   848  000009                     ??_strcpy:
   849  000009                     ??___fltol:
   850  000009                     ??___xxtofl:
   851  000009                     ADC_GetConversion@channel:
   852                           	callstack 0
   853  000009                     nrf2401_direccion_TX_RX@registro:
   854                           	callstack 0
   855  000009                     ___awdiv@counter:
   856                           	callstack 0
   857  000009                     ___awmod@counter:
   858                           	callstack 0
   859  000009                     ___wmul@product:
   860                           	callstack 0
   861  000009                     fputc@fp:
   862                           	callstack 0
   863  000009                     strncmp@n:
   864                           	callstack 0
   865  000009                     ___fleq@ff2:
   866                           	callstack 0
   867  000009                     ___fladd@a:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x8
   871  000009                     	ds	1
   872  00000A                     ??_nrf2401_direccion_TX_RX:
   873  00000A                     ___awdiv@sign:
   874                           	callstack 0
   875  00000A                     ___awmod@sign:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x9
   879  00000A                     	ds	1
   880  00000B                     ??_fputc:
   881  00000B                     ??_strncmp:
   882  00000B                     ?_tolower:
   883                           	callstack 0
   884  00000B                     _isspace$2060:
   885                           	callstack 0
   886  00000B                     ___awdiv@quotient:
   887                           	callstack 0
   888  00000B                     strcpy@s:
   889                           	callstack 0
   890  00000B                     tolower@c:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0xA
   894  00000B                     	ds	1
   895  00000C                     ?_atoi:
   896                           	callstack 0
   897  00000C                     nrf2401_direccion_TX_RX@cont_s:
   898                           	callstack 0
   899  00000C                     atoi@s:
   900                           	callstack 0
   901  00000C                     strncmp@l:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0xB
   905  00000C                     	ds	1
   906  00000D                     ??___fladd:
   907  00000D                     ??_tolower:
   908  00000D                     ??___fleq:
   909  00000D                     nrF2401_init_RX@canal:
   910                           	callstack 0
   911  00000D                     ___fltol@sign1:
   912                           	callstack 0
   913  00000D                     ___xxtofl@sign:
   914                           	callstack 0
   915  00000D                     ___fpclassifyf@e:
   916                           	callstack 0
   917  00000D                     strcpy@d:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0xC
   921  00000D                     	ds	1
   922  00000E                     ??_atoi:
   923  00000E                     ___fltol@exp1:
   924                           	callstack 0
   925  00000E                     ___xxtofl@exp:
   926                           	callstack 0
   927  00000E                     strncmp@r:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0xD
   931  00000E                     	ds	1
   932  00000F                     ___xxtofl@arg:
   933                           	callstack 0
   934  00000F                     ___fpclassifyf@u:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0xE
   938  00000F                     	ds	1
   939  000010                     fputs@s:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0xF
   943  000010                     	ds	1
   944  000011                     ___fladd@signs:
   945                           	callstack 0
   946  000011                     _tolower$2119:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x10
   950  000011                     	ds	1
   951  000012                     ___fladd@aexp:
   952                           	callstack 0
   953  000012                     atoi@neg:
   954                           	callstack 0
   955  000012                     fputs@fp:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x11
   959  000012                     	ds	1
   960  000013                     ?___flmul:
   961                           	callstack 0
   962  000013                     ___fladd@bexp:
   963                           	callstack 0
   964  000013                     ___flmul@b:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x12
   968  000013                     	ds	1
   969  000014                     ___fladd@grs:
   970                           	callstack 0
   971  000014                     fputs@c:
   972                           	callstack 0
   973  000014                     _atoi$2029:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x13
   977  000014                     	ds	1
   978  000015                     fputs@i:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x14
   982  000015                     	ds	1
   983  000016                     _atoi$2031:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x15
   987  000016                     	ds	1
   988  000017                     ?_pad:
   989                           	callstack 0
   990  000017                     pad@fp:
   991                           	callstack 0
   992  000017                     ___flmul@a:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x16
   996  000017                     	ds	1
   997  000018                     _atoi$2030:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x17
  1001  000018                     	ds	1
  1002  000019                     pad@buf:
  1003                           	callstack 0
  1004  000019                     atoi@n:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x18
  1008  000019                     	ds	2
  1009  00001B                     ??___flmul:
  1010  00001B                     pad@p:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x1A
  1014  00001B                     	ds	2
  1015  00001D                     ??_pad:
  1016                           
  1017                           ; 1 bytes @ 0x1C
  1018  00001D                     	ds	1
  1019  00001E                     pad@i:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x1D
  1023  00001E                     	ds	1
  1024  00001F                     ___flmul@sign:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x1E
  1028  00001F                     	ds	1
  1029  000020                     ___flmul@aexp:
  1030                           	callstack 0
  1031  000020                     pad@w:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x1F
  1035  000020                     	ds	1
  1036  000021                     ___flmul@grs:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x20
  1040  000021                     	ds	4
  1041  000025                     ___flmul@bexp:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x24
  1045  000025                     	ds	1
  1046  000026                     ___flmul@prod:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x25
  1050  000026                     	ds	4
  1051  00002A                     ___flmul@temp:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x29
  1055  00002A                     	ds	2
  1056  00002C                     ?___flsub:
  1057                           	callstack 0
  1058  00002C                     ___flge@ff1:
  1059                           	callstack 0
  1060  00002C                     ___flsub@b:
  1061                           	callstack 0
  1062                           
  1063                           ; 4 bytes @ 0x2B
  1064  00002C                     	ds	4
  1065  000030                     ___flge@ff2:
  1066                           	callstack 0
  1067  000030                     ___flsub@a:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x2F
  1071  000030                     	ds	4
  1072  000034                     ??___flge:
  1073  000034                     ?___fldiv:
  1074                           	callstack 0
  1075  000034                     ___fldiv@b:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x33
  1079  000034                     	ds	4
  1080  000038                     ??_trip_protec_current:
  1081  000038                     ___fldiv@a:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x37
  1085  000038                     	ds	4
  1086  00003C                     ??___fldiv:
  1087                           
  1088                           ; 1 bytes @ 0x3B
  1089  00003C                     	ds	4
  1090  000040                     ___fldiv@rem:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x3F
  1094  000040                     	ds	4
  1095  000044                     ___fldiv@sign:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x43
  1099  000044                     	ds	1
  1100  000045                     ___fldiv@new_exp:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x44
  1104  000045                     	ds	2
  1105  000047                     ___fldiv@grs:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x46
  1109  000047                     	ds	4
  1110  00004B                     ___fldiv@bexp:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x4A
  1114  00004B                     	ds	1
  1115  00004C                     ___fldiv@aexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x4B
  1119  00004C                     	ds	1
  1120  00004D                     ?_floorf:
  1121                           	callstack 0
  1122  00004D                     ?_get_corriente_AC:
  1123                           	callstack 0
  1124  00004D                     get_corriente_AC@n_muestras:
  1125                           	callstack 0
  1126  00004D                     floorf@x:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x4C
  1130  00004D                     	ds	4
  1131  000051                     ??_floorf:
  1132  000051                     ??_get_corriente_AC:
  1133                           
  1134                           ; 1 bytes @ 0x50
  1135  000051                     	ds	6
  1136  000057                     
  1137                           ; 1 bytes @ 0x56
  1138 ;;
  1139 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1140 ;;
  1141 ;; *************** function _main *****************
  1142 ;; Defined at:
  1143 ;;		line 251 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1159 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1160 ;;      Totals:         0       2       4       0       0       0       0       0       0
  1161 ;;Total ram usage:        6 bytes
  1162 ;; Hardware stack levels required when called: 13
  1163 ;; This function calls:
  1164 ;;		_EUSART1_Write_string
  1165 ;;		_EUSART1_is_tx_ready
  1166 ;;		_SYSTEM_Initialize
  1167 ;;		___fladd
  1168 ;;		___fldiv
  1169 ;;		_get_corriente_AC
  1170 ;;		_nrF2401_init_RX
  1171 ;;		_nrf2401_haydatos
  1172 ;;		_nrf2401_recibe
  1173 ;;		_spi_s_init
  1174 ;;		_sprintf
  1175 ;;		_trip_protec_current
  1176 ;; This function is called by:
  1177 ;;		Startup code after reset
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text0
  1182  002F92                     __ptext0:
  1183                           	callstack 0
  1184  002F92                     _main:
  1185                           	callstack 18
  1186  002F92                     
  1187                           ;main.c: 254:     SYSTEM_Initialize();
  1188  002F92  ECCF  F01F         	call	_SYSTEM_Initialize	;wreg free
  1189  002F96                     
  1190                           ;main.c: 262:     (INTCONbits.GIE = 1);
  1191  002F96  8EF2               	bsf	242,7,c	;volatile
  1192  002F98                     
  1193                           ;main.c: 268:     (INTCONbits.PEIE = 1);
  1194  002F98  8CF2               	bsf	242,6,c	;volatile
  1195  002F9A                     
  1196                           ;main.c: 273:     ANSELA = 0b00000111;
  1197  002F9A  0E07               	movlw	7
  1198  002F9C  010F               	movlb	15	; () banked
  1199  002F9E  6F5B               	movwf	91,b	;volatile
  1200  002FA0                     
  1201                           ; BSR set to: 15
  1202                           ;main.c: 274:     ANSELB = 0b00000000;
  1203  002FA0  0E00               	movlw	0
  1204  002FA2  6F5C               	movwf	92,b	;volatile
  1205  002FA4                     
  1206                           ; BSR set to: 15
  1207                           ;main.c: 275:     ANSELC = 0x00;
  1208  002FA4  0E00               	movlw	0
  1209  002FA6  6F5D               	movwf	93,b	;volatile
  1210  002FA8                     
  1211                           ; BSR set to: 15
  1212                           ;main.c: 283:     spi_s_init();
  1213  002FA8  EC13  F020         	call	_spi_s_init	;wreg free
  1214  002FAC                     
  1215                           ;main.c: 285:     nrF2401_init_RX(17);
  1216  002FAC  0E11               	movlw	17
  1217  002FAE  EC4E  F01C         	call	_nrF2401_init_RX
  1218  002FB2                     
  1219                           ;main.c: 289:     _delay((unsigned long)((2000)*(48000000/4000.0)));
  1220  002FB2  0E7A               	movlw	122
  1221  002FB4  0100               	movlb	0	; () banked
  1222  002FB6  6FDD               	movwf	(??_main+1)& (0+255),b
  1223  002FB8  0EC1               	movlw	193
  1224  002FBA  6FDC               	movwf	??_main& (0+255),b
  1225  002FBC  0E81               	movlw	129
  1226  002FBE                     u8357:
  1227  002FBE  2EE8               	decfsz	wreg,f,c
  1228  002FC0  D7FE               	bra	u8357
  1229  002FC2  2FDC               	decfsz	??_main& (0+255),f,b
  1230  002FC4  D7FC               	bra	u8357
  1231  002FC6  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  1232  002FC8  D7FA               	bra	u8357
  1233  002FCA  D000               	nop2	
  1234  002FCC                     
  1235                           ;main.c: 290:     LATA5 = 1;
  1236  002FCC  8A89               	bsf	3977,5,c	;volatile
  1237  002FCE                     
  1238                           ;main.c: 291:     _delay((unsigned long)((3000)*(48000000/4000.0)));
  1239  002FCE  0EB7               	movlw	183
  1240  002FD0  0100               	movlb	0	; () banked
  1241  002FD2  6FDD               	movwf	(??_main+1)& (0+255),b
  1242  002FD4  0EA1               	movlw	161
  1243  002FD6  6FDC               	movwf	??_main& (0+255),b
  1244  002FD8  0EC3               	movlw	195
  1245  002FDA                     u8367:
  1246  002FDA  2EE8               	decfsz	wreg,f,c
  1247  002FDC  D7FE               	bra	u8367
  1248  002FDE  2FDC               	decfsz	??_main& (0+255),f,b
  1249  002FE0  D7FC               	bra	u8367
  1250  002FE2  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  1251  002FE4  D7FA               	bra	u8367
  1252  002FE6  D000               	nop2	
  1253  002FE8                     l6825:
  1254                           
  1255                           ;main.c: 294:     {;main.c: 298:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1256  002FE8  0E07               	movlw	7
  1257  002FEA  6E4E               	movwf	(get_corriente_AC@n_muestras+1)^0,c
  1258  002FEC  0ED0               	movlw	208
  1259  002FEE  6E4D               	movwf	get_corriente_AC@n_muestras^0,c
  1260  002FF0  EC39  F015         	call	_get_corriente_AC	;wreg free
  1261  002FF4  C04D  F18E         	movff	?_get_corriente_AC,_main$2426
  1262  002FF8  C04E  F18F         	movff	?_get_corriente_AC+1,_main$2426+1
  1263  002FFC  C04F  F190         	movff	?_get_corriente_AC+2,_main$2426+2
  1264  003000  C050  F191         	movff	?_get_corriente_AC+3,_main$2426+3
  1265  003004                     
  1266                           ;main.c: 294:     {;main.c: 298:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1267  003004  0ECD               	movlw	205
  1268  003006  6E09               	movwf	___fladd@a^0,c
  1269  003008  0ECC               	movlw	204
  1270  00300A  6E0A               	movwf	(___fladd@a+1)^0,c
  1271  00300C  0ECC               	movlw	204
  1272  00300E  6E0B               	movwf	(___fladd@a+2)^0,c
  1273  003010  0EBD               	movlw	189
  1274  003012  6E0C               	movwf	(___fladd@a+3)^0,c
  1275  003014  C18E  F005         	movff	_main$2426,___fladd@b
  1276  003018  C18F  F006         	movff	_main$2426+1,___fladd@b+1
  1277  00301C  C190  F007         	movff	_main$2426+2,___fladd@b+2
  1278  003020  C191  F008         	movff	_main$2426+3,___fladd@b+3
  1279  003024  EC44  F00A         	call	___fladd	;wreg free
  1280  003028  C005  F034         	movff	?___fladd,___fldiv@b
  1281  00302C  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  1282  003030  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  1283  003034  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  1284  003038  0ECD               	movlw	205
  1285  00303A  6E38               	movwf	___fldiv@a^0,c
  1286  00303C  0ECC               	movlw	204
  1287  00303E  6E39               	movwf	(___fldiv@a+1)^0,c
  1288  003040  0ECC               	movlw	204
  1289  003042  6E3A               	movwf	(___fldiv@a+2)^0,c
  1290  003044  0E3D               	movlw	61
  1291  003046  6E3B               	movwf	(___fldiv@a+3)^0,c
  1292  003048  ECF0  F010         	call	___fldiv	;wreg free
  1293  00304C  C034  F057         	movff	?___fldiv,_I
  1294  003050  C035  F058         	movff	?___fldiv+1,_I+1
  1295  003054  C036  F059         	movff	?___fldiv+2,_I+2
  1296  003058  C037  F05A         	movff	?___fldiv+3,_I+3
  1297  00305C                     
  1298                           ;main.c: 299:         sprintf(valor_string, "%.3f Amp.\n\r", I);
  1299  00305C  0E74               	movlw	low _valor_string
  1300  00305E  0100               	movlb	0	; () banked
  1301  003060  6FCC               	movwf	sprintf@s& (0+255),b
  1302  003062  0E01               	movlw	high _valor_string
  1303  003064  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1304  003066  0E0F               	movlw	low STR_1
  1305  003068  6FCE               	movwf	sprintf@fmt& (0+255),b
  1306  00306A  0E08               	movlw	high STR_1
  1307  00306C  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1308  00306E  C057  F0D0         	movff	_I,?_sprintf+4
  1309  003072  C058  F0D1         	movff	_I+1,?_sprintf+5
  1310  003076  C059  F0D2         	movff	_I+2,?_sprintf+6
  1311  00307A  C05A  F0D3         	movff	_I+3,?_sprintf+7
  1312  00307E  EC1B  F01D         	call	_sprintf	;wreg free
  1313  003082                     
  1314                           ;main.c: 300:         if (EUSART1_is_tx_ready()) EUSART1_Write_string(valor_string);
  1315  003082  EC75  F01F         	call	_EUSART1_is_tx_ready	;wreg free
  1316  003086  0900               	iorlw	0
  1317  003088  B4D8               	btfsc	status,2,c
  1318  00308A  EF49  F018         	goto	u8321
  1319  00308E  EF4B  F018         	goto	u8320
  1320  003092                     u8321:
  1321  003092  EF51  F018         	goto	l6835
  1322  003096                     u8320:
  1323  003096  0E74               	movlw	low _valor_string
  1324  003098  6E06               	movwf	EUSART1_Write_string@data^0,c
  1325  00309A  0E01               	movlw	high _valor_string
  1326  00309C  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
  1327  00309E  EC31  F01F         	call	_EUSART1_Write_string	;wreg free
  1328  0030A2                     l6835:
  1329                           
  1330                           ;main.c: 302:         trip_protec_current();
  1331  0030A2  ECBD  F012         	call	_trip_protec_current	;wreg free
  1332  0030A6                     
  1333                           ;main.c: 304:         if(nrf2401_haydatos() == 1)
  1334  0030A6  ECC0  F01F         	call	_nrf2401_haydatos	;wreg free
  1335  0030AA  06E8               	decf	wreg,f,c
  1336  0030AC  A4D8               	btfss	status,2,c
  1337  0030AE  EF5B  F018         	goto	u8331
  1338  0030B2  EF5D  F018         	goto	u8330
  1339  0030B6                     u8331:
  1340  0030B6  EF77  F018         	goto	l403
  1341  0030BA                     u8330:
  1342  0030BA                     
  1343                           ;main.c: 305:         {;main.c: 306:             dato_serial = nrf2401_recibe();
  1344  0030BA  ECFA  F01F         	call	_nrf2401_recibe	;wreg free
  1345  0030BE  0100               	movlb	0	; () banked
  1346  0030C0  6FFE               	movwf	_dato_serial& (0+255),b
  1347  0030C2                     
  1348                           ; BSR set to: 0
  1349                           ;main.c: 307:             if (dato_serial == 1)
  1350  0030C2  05FE               	decf	_dato_serial& (0+255),w,b
  1351  0030C4  A4D8               	btfss	status,2,c
  1352  0030C6  EF67  F018         	goto	u8341
  1353  0030CA  EF69  F018         	goto	u8340
  1354  0030CE                     u8341:
  1355  0030CE  EF77  F018         	goto	l403
  1356  0030D2                     u8340:
  1357  0030D2                     
  1358                           ; BSR set to: 0
  1359                           ;main.c: 308:             {;main.c: 309:                 LATA5 = 1;
  1360  0030D2  8A89               	bsf	3977,5,c	;volatile
  1361  0030D4                     
  1362                           ; BSR set to: 0
  1363                           ;main.c: 310:                 _delay((unsigned long)((3000)*(48000000/4000.0)));
  1364  0030D4  0EB7               	movlw	183
  1365  0030D6  0100               	movlb	0	; () banked
  1366  0030D8  6FDD               	movwf	(??_main+1)& (0+255),b
  1367  0030DA  0EA1               	movlw	161
  1368  0030DC  6FDC               	movwf	??_main& (0+255),b
  1369  0030DE  0EC3               	movlw	195
  1370  0030E0                     u8377:
  1371  0030E0  2EE8               	decfsz	wreg,f,c
  1372  0030E2  D7FE               	bra	u8377
  1373  0030E4  2FDC               	decfsz	??_main& (0+255),f,b
  1374  0030E6  D7FC               	bra	u8377
  1375  0030E8  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  1376  0030EA  D7FA               	bra	u8377
  1377  0030EC  D000               	nop2	
  1378  0030EE                     l403:
  1379                           
  1380                           ;main.c: 314:         _delay((unsigned long)((100)*(48000000/4000.0)));
  1381  0030EE  0E07               	movlw	7
  1382  0030F0  0100               	movlb	0	; () banked
  1383  0030F2  6FDD               	movwf	(??_main+1)& (0+255),b
  1384  0030F4  0E17               	movlw	23
  1385  0030F6  6FDC               	movwf	??_main& (0+255),b
  1386  0030F8  0E6A               	movlw	106
  1387  0030FA                     u8387:
  1388  0030FA  2EE8               	decfsz	wreg,f,c
  1389  0030FC  D7FE               	bra	u8387
  1390  0030FE  2FDC               	decfsz	??_main& (0+255),f,b
  1391  003100  D7FC               	bra	u8387
  1392  003102  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  1393  003104  D7FA               	bra	u8387
  1394  003106  F000               	nop	
  1395  003108  EFF4  F017         	goto	l6825
  1396  00310C  EF26  F000         	goto	start
  1397  003110                     __end_of_main:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _trip_protec_current *****************
  1401 ;; Defined at:
  1402 ;;		line 196 in file "main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1418 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1419 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 5
  1423 ;; This function calls:
  1424 ;;		___flge
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text1
  1431  00257A                     __ptext1:
  1432                           	callstack 0
  1433  00257A                     _trip_protec_current:
  1434                           	callstack 25
  1435  00257A                     
  1436                           ;main.c: 198:     if (I <= 9)
  1437  00257A  0E00               	movlw	0
  1438  00257C  6E2C               	movwf	___flge@ff1^0,c
  1439  00257E  0E00               	movlw	0
  1440  002580  6E2D               	movwf	(___flge@ff1+1)^0,c
  1441  002582  0E10               	movlw	16
  1442  002584  6E2E               	movwf	(___flge@ff1+2)^0,c
  1443  002586  0E41               	movlw	65
  1444  002588  6E2F               	movwf	(___flge@ff1+3)^0,c
  1445  00258A  C057  F030         	movff	_I,___flge@ff2
  1446  00258E  C058  F031         	movff	_I+1,___flge@ff2+1
  1447  002592  C059  F032         	movff	_I+2,___flge@ff2+2
  1448  002596  C05A  F033         	movff	_I+3,___flge@ff2+3
  1449  00259A  EC0B  F019         	call	___flge	;wreg free
  1450  00259E  A0D8               	btfss	status,0,c
  1451  0025A0  EFD4  F012         	goto	u8161
  1452  0025A4  EFD6  F012         	goto	u8160
  1453  0025A8                     u8161:
  1454  0025A8  EF0E  F013         	goto	l6717
  1455  0025AC                     u8160:
  1456  0025AC                     
  1457                           ;main.c: 199:     {;main.c: 200:         LATA5 = 0;
  1458  0025AC  9A89               	bcf	3977,5,c	;volatile
  1459                           
  1460                           ;main.c: 201:         currentSeg = conteo;
  1461  0025AE  C110  F10C         	movff	_conteo,_currentSeg
  1462  0025B2  C111  F10D         	movff	_conteo+1,_currentSeg+1
  1463  0025B6  C112  F10E         	movff	_conteo+2,_currentSeg+2
  1464  0025BA  C113  F10F         	movff	_conteo+3,_currentSeg+3
  1465  0025BE                     
  1466                           ;main.c: 202:         if (currentSeg - previousMillis >= intervalo)
  1467  0025BE  0101               	movlb	1	; () banked
  1468  0025C0  5108               	movf	_previousMillis& (0+255),w,b
  1469  0025C2  5D0C               	subwf	_currentSeg& (0+255),w,b
  1470  0025C4  6E38               	movwf	??_trip_protec_current^0,c
  1471  0025C6  5109               	movf	(_previousMillis+1)& (0+255),w,b
  1472  0025C8  590D               	subwfb	(_currentSeg+1)& (0+255),w,b
  1473  0025CA  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1474  0025CC  510A               	movf	(_previousMillis+2)& (0+255),w,b
  1475  0025CE  590E               	subwfb	(_currentSeg+2)& (0+255),w,b
  1476  0025D0  6E3A               	movwf	(??_trip_protec_current+2)^0,c
  1477  0025D2  510B               	movf	(_previousMillis+3)& (0+255),w,b
  1478  0025D4  590F               	subwfb	(_currentSeg+3)& (0+255),w,b
  1479  0025D6  6E3B               	movwf	(??_trip_protec_current+3)^0,c
  1480  0025D8  503B               	movf	(??_trip_protec_current+3)^0,w,c
  1481  0025DA  103A               	iorwf	(??_trip_protec_current+2)^0,w,c
  1482  0025DC  E10B               	bnz	u8170
  1483  0025DE  0E40               	movlw	64
  1484  0025E0  5C38               	subwf	??_trip_protec_current^0,w,c
  1485  0025E2  0E38               	movlw	56
  1486  0025E4  5839               	subwfb	(??_trip_protec_current+1)^0,w,c
  1487  0025E6  A0D8               	btfss	status,0,c
  1488  0025E8  EFF8  F012         	goto	u8171
  1489  0025EC  EFFA  F012         	goto	u8170
  1490  0025F0                     u8171:
  1491  0025F0  EF0E  F013         	goto	l6717
  1492  0025F4                     u8170:
  1493  0025F4                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 203:         {;main.c: 204:             previousMillis = currentSeg;
  1496  0025F4  C10C  F108         	movff	_currentSeg,_previousMillis
  1497  0025F8  C10D  F109         	movff	_currentSeg+1,_previousMillis+1
  1498  0025FC  C10E  F10A         	movff	_currentSeg+2,_previousMillis+2
  1499  002600  C10F  F10B         	movff	_currentSeg+3,_previousMillis+3
  1500                           
  1501                           ;main.c: 205:             LATA5 = 1;
  1502  002604  8A89               	bsf	3977,5,c	;volatile
  1503  002606                     
  1504                           ; BSR set to: 1
  1505                           ;main.c: 206:             _delay((unsigned long)((3000)*(48000000/4000.0)));
  1506  002606  0EB7               	movlw	183
  1507  002608  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1508  00260A  0EA1               	movlw	161
  1509  00260C  6E38               	movwf	??_trip_protec_current^0,c
  1510  00260E  0EC4               	movlw	196
  1511  002610                     u8397:
  1512  002610  2EE8               	decfsz	wreg,f,c
  1513  002612  D7FE               	bra	u8397
  1514  002614  2E38               	decfsz	??_trip_protec_current^0,f,c
  1515  002616  D7FC               	bra	u8397
  1516  002618  2E39               	decfsz	(??_trip_protec_current+1)^0,f,c
  1517  00261A  D7FA               	bra	u8397
  1518  00261C                     l6717:
  1519                           
  1520                           ;main.c: 209:     if (I >= 16 && I < 17)
  1521  00261C  C057  F02C         	movff	_I,___flge@ff1
  1522  002620  C058  F02D         	movff	_I+1,___flge@ff1+1
  1523  002624  C059  F02E         	movff	_I+2,___flge@ff1+2
  1524  002628  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1525  00262C  0E00               	movlw	0
  1526  00262E  6E30               	movwf	___flge@ff2^0,c
  1527  002630  0E00               	movlw	0
  1528  002632  6E31               	movwf	(___flge@ff2+1)^0,c
  1529  002634  0E80               	movlw	128
  1530  002636  6E32               	movwf	(___flge@ff2+2)^0,c
  1531  002638  0E41               	movlw	65
  1532  00263A  6E33               	movwf	(___flge@ff2+3)^0,c
  1533  00263C  EC0B  F019         	call	___flge	;wreg free
  1534  002640  A0D8               	btfss	status,0,c
  1535  002642  EF25  F013         	goto	u8181
  1536  002646  EF27  F013         	goto	u8180
  1537  00264A                     u8181:
  1538  00264A  EF5C  F013         	goto	l6727
  1539  00264E                     u8180:
  1540  00264E  C057  F02C         	movff	_I,___flge@ff1
  1541  002652  C058  F02D         	movff	_I+1,___flge@ff1+1
  1542  002656  C059  F02E         	movff	_I+2,___flge@ff1+2
  1543  00265A  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1544  00265E  0E00               	movlw	0
  1545  002660  6E30               	movwf	___flge@ff2^0,c
  1546  002662  0E00               	movlw	0
  1547  002664  6E31               	movwf	(___flge@ff2+1)^0,c
  1548  002666  0E88               	movlw	136
  1549  002668  6E32               	movwf	(___flge@ff2+2)^0,c
  1550  00266A  0E41               	movlw	65
  1551  00266C  6E33               	movwf	(___flge@ff2+3)^0,c
  1552  00266E  EC0B  F019         	call	___flge	;wreg free
  1553  002672  B0D8               	btfsc	status,0,c
  1554  002674  EF3E  F013         	goto	u8191
  1555  002678  EF40  F013         	goto	u8190
  1556  00267C                     u8191:
  1557  00267C  EF5C  F013         	goto	l6727
  1558  002680                     u8190:
  1559  002680                     
  1560                           ;main.c: 210:     {;main.c: 211:         i = i + 1;
  1561  002680  0E01               	movlw	1
  1562  002682  0100               	movlb	0	; () banked
  1563  002684  25FA               	addwf	_i& (0+255),w,b
  1564  002686  6FFA               	movwf	_i& (0+255),b
  1565  002688  0E00               	movlw	0
  1566  00268A  21FB               	addwfc	(_i+1)& (0+255),w,b
  1567  00268C  6FFB               	movwf	(_i+1)& (0+255),b
  1568                           
  1569                           ;main.c: 212:         if (i > 600)
  1570  00268E  BFFB               	btfsc	(_i+1)& (0+255),7,b
  1571  002690  EF53  F013         	goto	u8201
  1572  002694  0E59               	movlw	89
  1573  002696  5DFA               	subwf	_i& (0+255),w,b
  1574  002698  0E02               	movlw	2
  1575  00269A  59FB               	subwfb	(_i+1)& (0+255),w,b
  1576  00269C  A0D8               	btfss	status,0,c
  1577  00269E  EF53  F013         	goto	u8201
  1578  0026A2  EF55  F013         	goto	u8200
  1579  0026A6                     u8201:
  1580  0026A6  EF5C  F013         	goto	l6727
  1581  0026AA                     u8200:
  1582  0026AA                     
  1583                           ; BSR set to: 0
  1584                           ;main.c: 213:         {;main.c: 214:             i = 0;
  1585  0026AA  0E00               	movlw	0
  1586  0026AC  6FFB               	movwf	(_i+1)& (0+255),b
  1587  0026AE  0E00               	movlw	0
  1588  0026B0  6FFA               	movwf	_i& (0+255),b
  1589  0026B2                     
  1590                           ; BSR set to: 0
  1591                           ;main.c: 215:             LATA5 = 0;
  1592  0026B2  9A89               	bcf	3977,5,c	;volatile
  1593  0026B4                     l378:
  1594  0026B4  EF5A  F013         	goto	l378
  1595  0026B8                     l6727:
  1596                           
  1597                           ;main.c: 219:     if (I >= 17 && I < 18)
  1598  0026B8  C057  F02C         	movff	_I,___flge@ff1
  1599  0026BC  C058  F02D         	movff	_I+1,___flge@ff1+1
  1600  0026C0  C059  F02E         	movff	_I+2,___flge@ff1+2
  1601  0026C4  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1602  0026C8  0E00               	movlw	0
  1603  0026CA  6E30               	movwf	___flge@ff2^0,c
  1604  0026CC  0E00               	movlw	0
  1605  0026CE  6E31               	movwf	(___flge@ff2+1)^0,c
  1606  0026D0  0E88               	movlw	136
  1607  0026D2  6E32               	movwf	(___flge@ff2+2)^0,c
  1608  0026D4  0E41               	movlw	65
  1609  0026D6  6E33               	movwf	(___flge@ff2+3)^0,c
  1610  0026D8  EC0B  F019         	call	___flge	;wreg free
  1611  0026DC  A0D8               	btfss	status,0,c
  1612  0026DE  EF73  F013         	goto	u8211
  1613  0026E2  EF75  F013         	goto	u8210
  1614  0026E6                     u8211:
  1615  0026E6  EFAA  F013         	goto	l6737
  1616  0026EA                     u8210:
  1617  0026EA  C057  F02C         	movff	_I,___flge@ff1
  1618  0026EE  C058  F02D         	movff	_I+1,___flge@ff1+1
  1619  0026F2  C059  F02E         	movff	_I+2,___flge@ff1+2
  1620  0026F6  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1621  0026FA  0E00               	movlw	0
  1622  0026FC  6E30               	movwf	___flge@ff2^0,c
  1623  0026FE  0E00               	movlw	0
  1624  002700  6E31               	movwf	(___flge@ff2+1)^0,c
  1625  002702  0E90               	movlw	144
  1626  002704  6E32               	movwf	(___flge@ff2+2)^0,c
  1627  002706  0E41               	movlw	65
  1628  002708  6E33               	movwf	(___flge@ff2+3)^0,c
  1629  00270A  EC0B  F019         	call	___flge	;wreg free
  1630  00270E  B0D8               	btfsc	status,0,c
  1631  002710  EF8C  F013         	goto	u8221
  1632  002714  EF8E  F013         	goto	u8220
  1633  002718                     u8221:
  1634  002718  EFAA  F013         	goto	l6737
  1635  00271C                     u8220:
  1636  00271C                     
  1637                           ;main.c: 220:     {;main.c: 221:         j = j + 1;
  1638  00271C  0E01               	movlw	1
  1639  00271E  0100               	movlb	0	; () banked
  1640  002720  25F8               	addwf	_j& (0+255),w,b
  1641  002722  6FF8               	movwf	_j& (0+255),b
  1642  002724  0E00               	movlw	0
  1643  002726  21F9               	addwfc	(_j+1)& (0+255),w,b
  1644  002728  6FF9               	movwf	(_j+1)& (0+255),b
  1645                           
  1646                           ;main.c: 222:         if ( j > 300)
  1647  00272A  BFF9               	btfsc	(_j+1)& (0+255),7,b
  1648  00272C  EFA1  F013         	goto	u8231
  1649  002730  0E2D               	movlw	45
  1650  002732  5DF8               	subwf	_j& (0+255),w,b
  1651  002734  0E01               	movlw	1
  1652  002736  59F9               	subwfb	(_j+1)& (0+255),w,b
  1653  002738  A0D8               	btfss	status,0,c
  1654  00273A  EFA1  F013         	goto	u8231
  1655  00273E  EFA3  F013         	goto	u8230
  1656  002742                     u8231:
  1657  002742  EFAA  F013         	goto	l6737
  1658  002746                     u8230:
  1659  002746                     
  1660                           ; BSR set to: 0
  1661                           ;main.c: 223:         {;main.c: 224:             j = 0;
  1662  002746  0E00               	movlw	0
  1663  002748  6FF9               	movwf	(_j+1)& (0+255),b
  1664  00274A  0E00               	movlw	0
  1665  00274C  6FF8               	movwf	_j& (0+255),b
  1666  00274E                     
  1667                           ; BSR set to: 0
  1668                           ;main.c: 225:             LATA5 = 0;
  1669  00274E  9A89               	bcf	3977,5,c	;volatile
  1670  002750                     l383:
  1671  002750  EFA8  F013         	goto	l383
  1672  002754                     l6737:
  1673                           
  1674                           ;main.c: 229:     if (I >= 18 && I < 19)
  1675  002754  C057  F02C         	movff	_I,___flge@ff1
  1676  002758  C058  F02D         	movff	_I+1,___flge@ff1+1
  1677  00275C  C059  F02E         	movff	_I+2,___flge@ff1+2
  1678  002760  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1679  002764  0E00               	movlw	0
  1680  002766  6E30               	movwf	___flge@ff2^0,c
  1681  002768  0E00               	movlw	0
  1682  00276A  6E31               	movwf	(___flge@ff2+1)^0,c
  1683  00276C  0E90               	movlw	144
  1684  00276E  6E32               	movwf	(___flge@ff2+2)^0,c
  1685  002770  0E41               	movlw	65
  1686  002772  6E33               	movwf	(___flge@ff2+3)^0,c
  1687  002774  EC0B  F019         	call	___flge	;wreg free
  1688  002778  A0D8               	btfss	status,0,c
  1689  00277A  EFC1  F013         	goto	u8241
  1690  00277E  EFC3  F013         	goto	u8240
  1691  002782                     u8241:
  1692  002782  EFF8  F013         	goto	l6747
  1693  002786                     u8240:
  1694  002786  C057  F02C         	movff	_I,___flge@ff1
  1695  00278A  C058  F02D         	movff	_I+1,___flge@ff1+1
  1696  00278E  C059  F02E         	movff	_I+2,___flge@ff1+2
  1697  002792  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1698  002796  0E00               	movlw	0
  1699  002798  6E30               	movwf	___flge@ff2^0,c
  1700  00279A  0E00               	movlw	0
  1701  00279C  6E31               	movwf	(___flge@ff2+1)^0,c
  1702  00279E  0E98               	movlw	152
  1703  0027A0  6E32               	movwf	(___flge@ff2+2)^0,c
  1704  0027A2  0E41               	movlw	65
  1705  0027A4  6E33               	movwf	(___flge@ff2+3)^0,c
  1706  0027A6  EC0B  F019         	call	___flge	;wreg free
  1707  0027AA  B0D8               	btfsc	status,0,c
  1708  0027AC  EFDA  F013         	goto	u8251
  1709  0027B0  EFDC  F013         	goto	u8250
  1710  0027B4                     u8251:
  1711  0027B4  EFF8  F013         	goto	l6747
  1712  0027B8                     u8250:
  1713  0027B8                     
  1714                           ;main.c: 230:     {;main.c: 231:         k = k + 1;
  1715  0027B8  0E01               	movlw	1
  1716  0027BA  0100               	movlb	0	; () banked
  1717  0027BC  25F6               	addwf	_k& (0+255),w,b
  1718  0027BE  6FF6               	movwf	_k& (0+255),b
  1719  0027C0  0E00               	movlw	0
  1720  0027C2  21F7               	addwfc	(_k+1)& (0+255),w,b
  1721  0027C4  6FF7               	movwf	(_k+1)& (0+255),b
  1722                           
  1723                           ;main.c: 232:         if (k > 120)
  1724  0027C6  BFF7               	btfsc	(_k+1)& (0+255),7,b
  1725  0027C8  EFEF  F013         	goto	u8261
  1726  0027CC  51F7               	movf	(_k+1)& (0+255),w,b
  1727  0027CE  E109               	bnz	u8260
  1728  0027D0  0E79               	movlw	121
  1729  0027D2  5DF6               	subwf	_k& (0+255),w,b
  1730  0027D4  A0D8               	btfss	status,0,c
  1731  0027D6  EFEF  F013         	goto	u8261
  1732  0027DA  EFF1  F013         	goto	u8260
  1733  0027DE                     u8261:
  1734  0027DE  EFF8  F013         	goto	l6747
  1735  0027E2                     u8260:
  1736  0027E2                     
  1737                           ; BSR set to: 0
  1738                           ;main.c: 233:         {;main.c: 234:             k = 0;
  1739  0027E2  0E00               	movlw	0
  1740  0027E4  6FF7               	movwf	(_k+1)& (0+255),b
  1741  0027E6  0E00               	movlw	0
  1742  0027E8  6FF6               	movwf	_k& (0+255),b
  1743  0027EA                     
  1744                           ; BSR set to: 0
  1745                           ;main.c: 235:             LATA5 = 0;
  1746  0027EA  9A89               	bcf	3977,5,c	;volatile
  1747  0027EC                     l388:
  1748  0027EC  EFF6  F013         	goto	l388
  1749  0027F0                     l6747:
  1750                           
  1751                           ;main.c: 239:     if (I >= 19)
  1752  0027F0  C057  F02C         	movff	_I,___flge@ff1
  1753  0027F4  C058  F02D         	movff	_I+1,___flge@ff1+1
  1754  0027F8  C059  F02E         	movff	_I+2,___flge@ff1+2
  1755  0027FC  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1756  002800  0E00               	movlw	0
  1757  002802  6E30               	movwf	___flge@ff2^0,c
  1758  002804  0E00               	movlw	0
  1759  002806  6E31               	movwf	(___flge@ff2+1)^0,c
  1760  002808  0E98               	movlw	152
  1761  00280A  6E32               	movwf	(___flge@ff2+2)^0,c
  1762  00280C  0E41               	movlw	65
  1763  00280E  6E33               	movwf	(___flge@ff2+3)^0,c
  1764  002810  EC0B  F019         	call	___flge	;wreg free
  1765  002814  A0D8               	btfss	status,0,c
  1766  002816  EF0F  F014         	goto	u8271
  1767  00281A  EF11  F014         	goto	u8270
  1768  00281E                     u8271:
  1769  00281E  EF2D  F014         	goto	l396
  1770  002822                     u8270:
  1771  002822                     
  1772                           ;main.c: 240:     {;main.c: 241:         l = l + 1;
  1773  002822  0E01               	movlw	1
  1774  002824  0100               	movlb	0	; () banked
  1775  002826  25F4               	addwf	_l& (0+255),w,b
  1776  002828  6FF4               	movwf	_l& (0+255),b
  1777  00282A  0E00               	movlw	0
  1778  00282C  21F5               	addwfc	(_l+1)& (0+255),w,b
  1779  00282E  6FF5               	movwf	(_l+1)& (0+255),b
  1780                           
  1781                           ;main.c: 242:         if (l > 15)
  1782  002830  BFF5               	btfsc	(_l+1)& (0+255),7,b
  1783  002832  EF24  F014         	goto	u8281
  1784  002836  51F5               	movf	(_l+1)& (0+255),w,b
  1785  002838  E109               	bnz	u8280
  1786  00283A  0E10               	movlw	16
  1787  00283C  5DF4               	subwf	_l& (0+255),w,b
  1788  00283E  A0D8               	btfss	status,0,c
  1789  002840  EF24  F014         	goto	u8281
  1790  002844  EF26  F014         	goto	u8280
  1791  002848                     u8281:
  1792  002848  EF2D  F014         	goto	l396
  1793  00284C                     u8280:
  1794  00284C                     
  1795                           ; BSR set to: 0
  1796                           ;main.c: 243:         {;main.c: 244:             l = 0;
  1797  00284C  0E00               	movlw	0
  1798  00284E  6FF5               	movwf	(_l+1)& (0+255),b
  1799  002850  0E00               	movlw	0
  1800  002852  6FF4               	movwf	_l& (0+255),b
  1801  002854                     
  1802                           ; BSR set to: 0
  1803                           ;main.c: 245:             LATA5 = 0;
  1804  002854  9A89               	bcf	3977,5,c	;volatile
  1805  002856                     l393:
  1806  002856  EF2B  F014         	goto	l393
  1807  00285A                     l396:
  1808  00285A  0012               	return		;funcret
  1809  00285C                     __end_of_trip_protec_current:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _sprintf *****************
  1813 ;; Defined at:
  1814 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  s               2  108[BANK0 ] PTR unsigned char 
  1817 ;;		 -> valor_string(14), 
  1818 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  1819 ;;		 -> STR_1(12), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  f               6  118[BANK0 ] struct _IO_FILE
  1822 ;;  ap              2  116[BANK0 ] PTR void [1]
  1823 ;;		 -> ?_sprintf(2), 
  1824 ;;  ret             2    0        int 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2  108[BANK0 ] int 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1834 ;;      Params:         0       8       0       0       0       0       0       0       0
  1835 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1837 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1838 ;;Total ram usage:       16 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 12
  1841 ;; This function calls:
  1842 ;;		_vfprintf
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text2
  1849  003A36                     __ptext2:
  1850                           	callstack 0
  1851  003A36                     _sprintf:
  1852                           	callstack 18
  1853  003A36  0ED0               	movlw	low (?_sprintf+4)
  1854  003A38  0100               	movlb	0	; () banked
  1855  003A3A  6FD4               	movwf	sprintf@ap& (0+255),b
  1856  003A3C  0E00               	movlw	high (?_sprintf+4)
  1857  003A3E  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  1858  003A40  C0CC  F0D6         	movff	sprintf@s,sprintf@f
  1859  003A44  C0CD  F0D7         	movff	sprintf@s+1,sprintf@f+1
  1860  003A48                     
  1861                           ; BSR set to: 0
  1862  003A48  0E00               	movlw	0
  1863  003A4A  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  1864  003A4C  0E00               	movlw	0
  1865  003A4E  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  1866  003A50                     
  1867                           ; BSR set to: 0
  1868  003A50  0E00               	movlw	0
  1869  003A52  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  1870  003A54  0E00               	movlw	0
  1871  003A56  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  1872  003A58                     
  1873                           ; BSR set to: 0
  1874  003A58  0ED6               	movlw	low sprintf@f
  1875  003A5A  6FC4               	movwf	vfprintf@fp& (0+255),b
  1876  003A5C  0E00               	movlw	high sprintf@f
  1877  003A5E  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  1878  003A60  C0CE  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  1879  003A64  C0CF  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1880  003A68  0ED4               	movlw	low sprintf@ap
  1881  003A6A  6FC8               	movwf	vfprintf@ap& (0+255),b
  1882  003A6C  0E00               	movlw	high sprintf@ap
  1883  003A6E  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  1884  003A70  EC8C  F01C         	call	_vfprintf	;wreg free
  1885  003A74  0100               	movlb	0	; () banked
  1886  003A76  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  1887  003A78  25CC               	addwf	sprintf@s& (0+255),w,b
  1888  003A7A  6ED9               	movwf	fsr2l,c
  1889  003A7C  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  1890  003A7E  21CD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1891  003A80  6EDA               	movwf	fsr2h,c
  1892  003A82  0E00               	movlw	0
  1893  003A84  6EDF               	movwf	indf2,c
  1894  003A86                     
  1895                           ; BSR set to: 0
  1896  003A86  0012               	return		;funcret
  1897  003A88                     __end_of_sprintf:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _vfprintf *****************
  1901 ;; Defined at:
  1902 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  1905 ;;		 -> sprintf@f(6), 
  1906 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  1907 ;;		 -> STR_1(12), 
  1908 ;;  ap              2  104[BANK0 ] PTR PTR void 
  1909 ;;		 -> sprintf@ap(2), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  1912 ;;		 -> STR_1(12), 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2  100[BANK0 ] int 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1922 ;;      Params:         0       6       0       0       0       0       0       0       0
  1923 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1925 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1926 ;;Total ram usage:        8 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 11
  1929 ;; This function calls:
  1930 ;;		_vfpfcnvrt
  1931 ;; This function is called by:
  1932 ;;		_sprintf
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text3
  1937  003918                     __ptext3:
  1938                           	callstack 0
  1939  003918                     _vfprintf:
  1940                           	callstack 18
  1941  003918                     
  1942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1943  003918  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  1944  00391C  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1945  003920                     
  1946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1947  003920  0E00               	movlw	0
  1948  003922  0100               	movlb	0	; () banked
  1949  003924  6FE7               	movwf	(_nout+1)& (0+255),b
  1950  003926  0E00               	movlw	0
  1951  003928  6FE6               	movwf	_nout& (0+255),b
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1954  00392A  EFAA  F01C         	goto	l6589
  1955  00392E                     l6587:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1959  00392E  C0C4  F0AE         	movff	vfprintf@fp,vfpfcnvrt@fp
  1960  003932  C0C5  F0AF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1961  003936  0ECA               	movlw	low vfprintf@cfmt
  1962  003938  6FB0               	movwf	vfpfcnvrt@fmt& (0+255),b
  1963  00393A  0E00               	movlw	high vfprintf@cfmt
  1964  00393C  6FB1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1965  00393E  C0C8  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  1966  003942  C0C9  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1967  003946  ECA4  F00C         	call	_vfpfcnvrt	;wreg free
  1968  00394A  0100               	movlb	0	; () banked
  1969  00394C  51AE               	movf	?_vfpfcnvrt& (0+255),w,b
  1970  00394E  27E6               	addwf	_nout& (0+255),f,b
  1971  003950  51AF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1972  003952  23E7               	addwfc	(_nout+1)& (0+255),f,b
  1973  003954                     l6589:
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1977  003954  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  1978  003958  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1979  00395C                     	if	0	;tblptru may be non-zero
  1980  00395C                     	endif
  1981  00395C                     	if	0	;tblptru may be non-zero
  1982  00395C                     	endif
  1983  00395C  0008               	tblrd		*
  1984  00395E  50F5               	movf	tablat,w,c
  1985  003960  0900               	iorlw	0
  1986  003962  A4D8               	btfss	status,2,c
  1987  003964  EFB6  F01C         	goto	u8081
  1988  003968  EFB8  F01C         	goto	u8080
  1989  00396C                     u8081:
  1990  00396C  EF97  F01C         	goto	l6587
  1991  003970                     u8080:
  1992  003970                     
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1995  003970  C0E6  F0C4         	movff	_nout,?_vfprintf
  1996  003974  C0E7  F0C5         	movff	_nout+1,?_vfprintf+1
  1997  003978                     
  1998                           ; BSR set to: 0
  1999  003978  0012               	return		;funcret
  2000  00397A                     __end_of_vfprintf:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _vfpfcnvrt *****************
  2004 ;; Defined at:
  2005 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  2008 ;;		 -> sprintf@f(6), 
  2009 ;;  fmt             2   80[BANK0 ] PTR PTR unsigned char 
  2010 ;;		 -> vfprintf@cfmt(2), 
  2011 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2012 ;;		 -> sprintf@ap(2), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  llu             8    0        unsigned long long 
  2015 ;;  ll              8    0        long long 
  2016 ;;  f               4   92[BANK0 ] long long 
  2017 ;;  ct              3   96[BANK0 ] unsigned char [3]
  2018 ;;  vp              3    0        PTR void 
  2019 ;;  cp              3    0        PTR unsigned char 
  2020 ;;  i               2    0        int 
  2021 ;;  done            2    0        int 
  2022 ;;  c               1   99[BANK0 ] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2   78[BANK0 ] int 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2032 ;;      Params:         0       6       0       0       0       0       0       0       0
  2033 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2034 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2035 ;;      Totals:         0      22       0       0       0       0       0       0       0
  2036 ;;Total ram usage:       22 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 10
  2039 ;; This function calls:
  2040 ;;		_atoi
  2041 ;;		_efgtoa
  2042 ;;		_fputc
  2043 ;;		_isdigit
  2044 ;;		_isupper
  2045 ;;		_strncmp
  2046 ;;		_tolower
  2047 ;; This function is called by:
  2048 ;;		_vfprintf
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text4
  2053  001948                     __ptext4:
  2054                           	callstack 0
  2055  001948                     _vfpfcnvrt:
  2056                           	callstack 18
  2057  001948                     
  2058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2059  001948  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2060  00194C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2061  001950  CFDE FFF6          	movff	postinc2,tblptrl
  2062  001954  CFDD FFF7          	movff	postdec2,tblptrh
  2063  001958                     	if	0	;tblptru may be non-zero
  2064  001958                     	endif
  2065  001958                     	if	0	;tblptru may be non-zero
  2066  001958                     	endif
  2067  001958  0008               	tblrd		*
  2068  00195A  50F5               	movf	tablat,w,c
  2069  00195C  0A25               	xorlw	37
  2070  00195E  A4D8               	btfss	status,2,c
  2071  001960  EFB4  F00C         	goto	u7811
  2072  001964  EFB6  F00C         	goto	u7810
  2073  001968                     u7811:
  2074  001968  EFBF  F00E         	goto	l6459
  2075  00196C                     u7810:
  2076  00196C                     
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2078  00196C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2079  001970  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2080  001974  2ADE               	incf	postinc2,f,c
  2081  001976  0E00               	movlw	0
  2082  001978  22DD               	addwfc	postdec2,f,c
  2083  00197A                     
  2084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2085  00197A  0E00               	movlw	0
  2086  00197C  0100               	movlb	0	; () banked
  2087  00197E  6FE9               	movwf	(_width+1)& (0+255),b
  2088  001980  0E00               	movlw	0
  2089  001982  6FE8               	movwf	_width& (0+255),b
  2090  001984  C0E8  F0EC         	movff	_width,_flags
  2091  001988  C0E9  F0ED         	movff	_width+1,_flags+1
  2092  00198C                     
  2093                           ; BSR set to: 0
  2094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2095  00198C  69EA               	setf	_prec& (0+255),b
  2096  00198E  69EB               	setf	(_prec+1)& (0+255),b
  2097  001990                     
  2098                           ; BSR set to: 0
  2099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2100  001990  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2101  001994  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2102  001998  CFDE FFF6          	movff	postinc2,tblptrl
  2103  00199C  CFDD FFF7          	movff	postdec2,tblptrh
  2104  0019A0                     	if	0	;tblptru may be non-zero
  2105  0019A0                     	endif
  2106  0019A0                     	if	0	;tblptru may be non-zero
  2107  0019A0                     	endif
  2108  0019A0  0008               	tblrd		*
  2109  0019A2  50F5               	movf	tablat,w,c
  2110  0019A4  0A2E               	xorlw	46
  2111  0019A6  A4D8               	btfss	status,2,c
  2112  0019A8  EFD8  F00C         	goto	u7821
  2113  0019AC  EFDA  F00C         	goto	u7820
  2114  0019B0                     u7821:
  2115  0019B0  EF58  F00D         	goto	l6405
  2116  0019B4                     u7820:
  2117  0019B4                     
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2120  0019B4  0E00               	movlw	0
  2121  0019B6  6FEB               	movwf	(_prec+1)& (0+255),b
  2122  0019B8  0E00               	movlw	0
  2123  0019BA  6FEA               	movwf	_prec& (0+255),b
  2124  0019BC                     
  2125                           ; BSR set to: 0
  2126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2127  0019BC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2128  0019C0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2129  0019C4  2ADE               	incf	postinc2,f,c
  2130  0019C6  0E00               	movlw	0
  2131  0019C8  22DD               	addwfc	postdec2,f,c
  2132  0019CA                     
  2133                           ; BSR set to: 0
  2134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2135  0019CA  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2136  0019CE  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2137  0019D2  CFDE FFF6          	movff	postinc2,tblptrl
  2138  0019D6  CFDD FFF7          	movff	postdec2,tblptrh
  2139  0019DA                     	if	0	;tblptru may be non-zero
  2140  0019DA                     	endif
  2141  0019DA                     	if	0	;tblptru may be non-zero
  2142  0019DA                     	endif
  2143  0019DA  0008               	tblrd		*
  2144  0019DC  50F5               	movf	tablat,w,c
  2145  0019DE  0A2A               	xorlw	42
  2146  0019E0  A4D8               	btfss	status,2,c
  2147  0019E2  EFF5  F00C         	goto	u7831
  2148  0019E6  EFF7  F00C         	goto	u7830
  2149  0019EA                     u7831:
  2150  0019EA  EF14  F00D         	goto	l6395
  2151  0019EE                     u7830:
  2152  0019EE                     
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2155  0019EE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2156  0019F2  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2157  0019F6  2ADE               	incf	postinc2,f,c
  2158  0019F8  0E00               	movlw	0
  2159  0019FA  22DD               	addwfc	postdec2,f,c
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2162  0019FC  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2163  001A00  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2164  001A04  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2165  001A08  0E02               	movlw	2
  2166  001A0A  26DE               	addwf	postinc2,f,c
  2167  001A0C  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2168  001A10  0E00               	movlw	0
  2169  001A12  22DD               	addwfc	postdec2,f,c
  2170  001A14  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2171  001A18  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2172  001A1C  CFDE F0EA          	movff	postinc2,_prec
  2173  001A20  CFDD F0EB          	movff	postdec2,_prec+1
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2176  001A24  EF58  F00D         	goto	l6405
  2177  001A28                     l6395:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2181  001A28  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2182  001A2C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2183  001A30  CFDE F00C          	movff	postinc2,atoi@s
  2184  001A34  CFDD F00D          	movff	postdec2,atoi@s+1
  2185  001A38  EC01  F017         	call	_atoi	;wreg free
  2186  001A3C  C00C  F0EA         	movff	?_atoi,_prec
  2187  001A40  C00D  F0EB         	movff	?_atoi+1,_prec+1
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2190  001A44  EF2B  F00D         	goto	l6399
  2191  001A48                     l6397:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2195  001A48  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2196  001A4C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2197  001A50  2ADE               	incf	postinc2,f,c
  2198  001A52  0E00               	movlw	0
  2199  001A54  22DD               	addwfc	postdec2,f,c
  2200  001A56                     l6399:
  2201  001A56  0ED0               	movlw	208
  2202  001A58  0100               	movlb	0	; () banked
  2203  001A5A  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2204  001A5C  0EFF               	movlw	255
  2205  001A5E  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2206  001A60  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2207  001A64  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2208  001A68  CFDE FFF6          	movff	postinc2,tblptrl
  2209  001A6C  CFDD FFF7          	movff	postdec2,tblptrh
  2210  001A70                     	if	0	;tblptru may be non-zero
  2211  001A70                     	endif
  2212  001A70                     	if	0	;tblptru may be non-zero
  2213  001A70                     	endif
  2214  001A70  0008               	tblrd		*
  2215  001A72  50F5               	movf	tablat,w,c
  2216  001A74  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2217  001A76  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2218  001A78  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2219  001A7A  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2220  001A7C  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2221  001A7E  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2222  001A80  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2223  001A82  E10A               	bnz	u7840
  2224  001A84  0E0A               	movlw	10
  2225  001A86  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2226  001A88  A0D8               	btfss	status,0,c
  2227  001A8A  EF49  F00D         	goto	u7841
  2228  001A8E  EF4C  F00D         	goto	u7840
  2229  001A92                     u7841:
  2230  001A92  0E01               	movlw	1
  2231  001A94  EF4D  F00D         	goto	u7850
  2232  001A98                     u7840:
  2233  001A98  0E00               	movlw	0
  2234  001A9A                     u7850:
  2235  001A9A  6FB8               	movwf	_vfpfcnvrt$1991& (0+255),b
  2236  001A9C  6BB9               	clrf	(_vfpfcnvrt$1991+1)& (0+255),b
  2237  001A9E                     
  2238                           ; BSR set to: 0
  2239  001A9E  51B8               	movf	_vfpfcnvrt$1991& (0+255),w,b
  2240  001AA0  11B9               	iorwf	(_vfpfcnvrt$1991+1)& (0+255),w,b
  2241  001AA2  A4D8               	btfss	status,2,c
  2242  001AA4  EF56  F00D         	goto	u7861
  2243  001AA8  EF58  F00D         	goto	u7860
  2244  001AAC                     u7861:
  2245  001AAC  EF24  F00D         	goto	l6397
  2246  001AB0                     u7860:
  2247  001AB0                     l6405:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2251  001AB0  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  001AB4  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  001AB8  CFDE FFF6          	movff	postinc2,tblptrl
  2254  001ABC  CFDD FFF7          	movff	postdec2,tblptrh
  2255  001AC0                     	if	0	;tblptru may be non-zero
  2256  001AC0                     	endif
  2257  001AC0                     	if	0	;tblptru may be non-zero
  2258  001AC0                     	endif
  2259  001AC0  0008               	tblrd		*
  2260  001AC2  50F5               	movf	tablat,w,c
  2261  001AC4  6E0B               	movwf	tolower@c^0,c
  2262  001AC6  6A0C               	clrf	(tolower@c+1)^0,c
  2263  001AC8  ECBD  F01C         	call	_tolower	;wreg free
  2264  001ACC  500B               	movf	?_tolower^0,w,c
  2265  001ACE  0100               	movlb	0	; () banked
  2266  001AD0  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  2267  001AD2                     
  2268                           ; BSR set to: 0
  2269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2270  001AD2  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  2271  001AD4  B4D8               	btfsc	status,2,c
  2272  001AD6  EF6F  F00D         	goto	u7871
  2273  001ADA  EF71  F00D         	goto	u7870
  2274  001ADE                     u7871:
  2275  001ADE  EFAB  F00D         	goto	l6415
  2276  001AE2                     u7870:
  2277  001AE2                     
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2280  001AE2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  001AE6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  001AEA  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2283  001AEE  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2284  001AF2  0E01               	movlw	1
  2285  001AF4  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2286  001AF6  0E00               	movlw	0
  2287  001AF8  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2288  001AFA  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2289  001AFE  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2290  001B02                     	if	0	;tblptru may be non-zero
  2291  001B02                     	endif
  2292  001B02                     	if	0	;tblptru may be non-zero
  2293  001B02                     	endif
  2294  001B02  0008               	tblrd		*
  2295  001B04  50F5               	movf	tablat,w,c
  2296  001B06  6E0B               	movwf	tolower@c^0,c
  2297  001B08  6A0C               	clrf	(tolower@c+1)^0,c
  2298  001B0A  ECBD  F01C         	call	_tolower	;wreg free
  2299  001B0E  500B               	movf	?_tolower^0,w,c
  2300  001B10  0100               	movlb	0	; () banked
  2301  001B12  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2302  001B14                     
  2303                           ; BSR set to: 0
  2304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2305  001B14  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2306  001B16  B4D8               	btfsc	status,2,c
  2307  001B18  EF90  F00D         	goto	u7881
  2308  001B1C  EF92  F00D         	goto	u7880
  2309  001B20                     u7881:
  2310  001B20  EFAB  F00D         	goto	l6415
  2311  001B24                     u7880:
  2312  001B24                     
  2313                           ; BSR set to: 0
  2314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2315  001B24  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  001B28  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  001B2C  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2318  001B30  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2319  001B34  0E02               	movlw	2
  2320  001B36  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2321  001B38  0E00               	movlw	0
  2322  001B3A  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2323  001B3C  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2324  001B40  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2325  001B44                     	if	0	;tblptru may be non-zero
  2326  001B44                     	endif
  2327  001B44                     	if	0	;tblptru may be non-zero
  2328  001B44                     	endif
  2329  001B44  0008               	tblrd		*
  2330  001B46  50F5               	movf	tablat,w,c
  2331  001B48  6E0B               	movwf	tolower@c^0,c
  2332  001B4A  6A0C               	clrf	(tolower@c+1)^0,c
  2333  001B4C  ECBD  F01C         	call	_tolower	;wreg free
  2334  001B50  500B               	movf	?_tolower^0,w,c
  2335  001B52  0100               	movlb	0	; () banked
  2336  001B54  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2337  001B56                     l6415:
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2341  001B56  0E66               	movlw	102
  2342  001B58  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2343  001B5A  A4D8               	btfss	status,2,c
  2344  001B5C  EFB2  F00D         	goto	u7891
  2345  001B60  EFB4  F00D         	goto	u7890
  2346  001B64                     u7891:
  2347  001B64  EFF4  F00D         	goto	l6427
  2348  001B68                     u7890:
  2349  001B68                     
  2350                           ; BSR set to: 0
  2351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2352  001B68  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2353  001B6C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2354  001B70  CFDE FFF6          	movff	postinc2,tblptrl
  2355  001B74  CFDD FFF7          	movff	postdec2,tblptrh
  2356  001B78                     	if	0	;tblptru may be non-zero
  2357  001B78                     	endif
  2358  001B78                     	if	0	;tblptru may be non-zero
  2359  001B78                     	endif
  2360  001B78  0008               	tblrd		*
  2361  001B7A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  2362  001B7E                     
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2365  001B7E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2366  001B82  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2367  001B86  2ADE               	incf	postinc2,f,c
  2368  001B88  0E00               	movlw	0
  2369  001B8A  22DD               	addwfc	postdec2,f,c
  2370  001B8C                     
  2371                           ; BSR set to: 0
  2372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2373  001B8C  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2374  001B90  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2375  001B94  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2376  001B98  0E04               	movlw	4
  2377  001B9A  26DE               	addwf	postinc2,f,c
  2378  001B9C  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2379  001BA0  0E00               	movlw	0
  2380  001BA2  22DD               	addwfc	postdec2,f,c
  2381  001BA4  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2382  001BA8  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2383  001BAC  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  2384  001BB0  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  2385  001BB4  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  2386  001BB8  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  2387  001BBC                     l6423:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2391  001BBC  C0AE  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2392  001BC0  C0AF  F06B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2393  001BC4  C0BC  F06C         	movff	vfpfcnvrt@f,efgtoa@f
  2394  001BC8  C0BD  F06D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2395  001BCC  C0BE  F06E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2396  001BD0  C0BF  F06F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2397  001BD4  C0C3  F070         	movff	vfpfcnvrt@c,efgtoa@c
  2398  001BD8  EC18  F004         	call	_efgtoa	;wreg free
  2399  001BDC  C06A  F0AE         	movff	?_efgtoa,?_vfpfcnvrt
  2400  001BE0  C06B  F0AF         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2401  001BE4  EFDA  F00E         	goto	l1336
  2402  001BE8                     l6427:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2406  001BE8  0EC0               	movlw	low vfpfcnvrt@ct
  2407  001BEA  6E05               	movwf	strncmp@_l^0,c
  2408  001BEC  0E00               	movlw	high vfpfcnvrt@ct
  2409  001BEE  6E06               	movwf	(strncmp@_l+1)^0,c
  2410  001BF0  0E2B               	movlw	low STR_10
  2411  001BF2  6E07               	movwf	strncmp@_r^0,c
  2412  001BF4  0E08               	movlw	high STR_10
  2413  001BF6  6E08               	movwf	(strncmp@_r+1)^0,c
  2414  001BF8  0E00               	movlw	0
  2415  001BFA  6E0A               	movwf	(strncmp@n+1)^0,c
  2416  001BFC  0E02               	movlw	2
  2417  001BFE  6E09               	movwf	strncmp@n^0,c
  2418  001C00  EC0C  F01A         	call	_strncmp	;wreg free
  2419  001C04  5005               	movf	?_strncmp^0,w,c
  2420  001C06  1006               	iorwf	(?_strncmp+1)^0,w,c
  2421  001C08  A4D8               	btfss	status,2,c
  2422  001C0A  EF09  F00E         	goto	u7901
  2423  001C0E  EF0B  F00E         	goto	u7900
  2424  001C12                     u7901:
  2425  001C12  EF87  F00E         	goto	l6443
  2426  001C16                     u7900:
  2427  001C16                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2429  001C16  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2430  001C1A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2431  001C1E  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2432  001C22  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2433  001C26  0E01               	movlw	1
  2434  001C28  0100               	movlb	0	; () banked
  2435  001C2A  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2436  001C2C  0E00               	movlw	0
  2437  001C2E  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2438  001C30  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2439  001C34  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2440  001C38                     	if	0	;tblptru may be non-zero
  2441  001C38                     	endif
  2442  001C38                     	if	0	;tblptru may be non-zero
  2443  001C38                     	endif
  2444  001C38  0008               	tblrd		*
  2445  001C3A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  2446  001C3E  0EBF               	movlw	191
  2447  001C40  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2448  001C42  0EFF               	movlw	255
  2449  001C44  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2450  001C46  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2451  001C4A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2452  001C4E  CFDE FFF6          	movff	postinc2,tblptrl
  2453  001C52  CFDD FFF7          	movff	postdec2,tblptrh
  2454  001C56                     	if	0	;tblptru may be non-zero
  2455  001C56                     	endif
  2456  001C56                     	if	0	;tblptru may be non-zero
  2457  001C56                     	endif
  2458  001C56  0008               	tblrd		*
  2459  001C58  50F5               	movf	tablat,w,c
  2460  001C5A  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2461  001C5C  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2462  001C5E  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2463  001C60  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2464  001C62  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2465  001C64  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2466  001C66  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2467  001C68  E10A               	bnz	u7910
  2468  001C6A  0E1A               	movlw	26
  2469  001C6C  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2470  001C6E  A0D8               	btfss	status,0,c
  2471  001C70  EF3C  F00E         	goto	u7911
  2472  001C74  EF3F  F00E         	goto	u7910
  2473  001C78                     u7911:
  2474  001C78  0E01               	movlw	1
  2475  001C7A  EF40  F00E         	goto	u7920
  2476  001C7E                     u7910:
  2477  001C7E  0E00               	movlw	0
  2478  001C80                     u7920:
  2479  001C80  6FBA               	movwf	_vfpfcnvrt$1995& (0+255),b
  2480  001C82  6BBB               	clrf	(_vfpfcnvrt$1995+1)& (0+255),b
  2481  001C84                     
  2482                           ; BSR set to: 0
  2483  001C84  51BA               	movf	_vfpfcnvrt$1995& (0+255),w,b
  2484  001C86  11BB               	iorwf	(_vfpfcnvrt$1995+1)& (0+255),w,b
  2485  001C88  B4D8               	btfsc	status,2,c
  2486  001C8A  EF49  F00E         	goto	u7931
  2487  001C8E  EF4B  F00E         	goto	u7930
  2488  001C92                     u7931:
  2489  001C92  EF65  F00E         	goto	l6437
  2490  001C96                     u7930:
  2491  001C96                     
  2492                           ; BSR set to: 0
  2493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2494  001C96  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2495  001C9A  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2496  001C9E  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2497  001CA2  0E04               	movlw	4
  2498  001CA4  26DE               	addwf	postinc2,f,c
  2499  001CA6  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2500  001CAA  0E00               	movlw	0
  2501  001CAC  22DD               	addwfc	postdec2,f,c
  2502  001CAE  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2503  001CB2  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2504  001CB6  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  2505  001CBA  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  2506  001CBE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  2507  001CC2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2510  001CC6  EF7D  F00E         	goto	l1343
  2511  001CCA                     l6437:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2515  001CCA  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2516  001CCE  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2517  001CD2  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2518  001CD6  0E04               	movlw	4
  2519  001CD8  26DE               	addwf	postinc2,f,c
  2520  001CDA  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2521  001CDE  0E00               	movlw	0
  2522  001CE0  22DD               	addwfc	postdec2,f,c
  2523  001CE2  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2524  001CE6  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2525  001CEA  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  2526  001CEE  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  2527  001CF2  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  2528  001CF6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  2529  001CFA                     l1343:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2533  001CFA  0E02               	movlw	2
  2534  001CFC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535  001D00  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536  001D04  26DE               	addwf	postinc2,f,c
  2537  001D06  0E00               	movlw	0
  2538  001D08  22DD               	addwfc	postdec2,f,c
  2539  001D0A  EFDE  F00D         	goto	l6423
  2540  001D0E                     l6443:
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2543  001D0E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2544  001D12  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2545  001D16  CFDE FFF6          	movff	postinc2,tblptrl
  2546  001D1A  CFDD FFF7          	movff	postdec2,tblptrh
  2547  001D1E                     	if	0	;tblptru may be non-zero
  2548  001D1E                     	endif
  2549  001D1E                     	if	0	;tblptru may be non-zero
  2550  001D1E                     	endif
  2551  001D1E  0008               	tblrd		*
  2552  001D20  50F5               	movf	tablat,w,c
  2553  001D22  0A25               	xorlw	37
  2554  001D24  A4D8               	btfss	status,2,c
  2555  001D26  EF97  F00E         	goto	u7941
  2556  001D2A  EF99  F00E         	goto	u7940
  2557  001D2E                     u7941:
  2558  001D2E  EFB1  F00E         	goto	l6453
  2559  001D32                     u7940:
  2560  001D32                     
  2561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2562  001D32  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2563  001D36  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2564  001D3A  2ADE               	incf	postinc2,f,c
  2565  001D3C  0E00               	movlw	0
  2566  001D3E  22DD               	addwfc	postdec2,f,c
  2567  001D40                     
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2569  001D40  0E00               	movlw	0
  2570  001D42  6E08               	movwf	(fputc@c+1)^0,c
  2571  001D44  0E25               	movlw	37
  2572  001D46  6E07               	movwf	fputc@c^0,c
  2573  001D48  C0AE  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2574  001D4C  C0AF  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2575  001D50  EC77  F01A         	call	_fputc	;wreg free
  2576  001D54                     l6449:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2579  001D54  0E00               	movlw	0
  2580  001D56  0100               	movlb	0	; () banked
  2581  001D58  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2582  001D5A  0E01               	movlw	1
  2583  001D5C  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2584  001D5E  EFDA  F00E         	goto	l1336
  2585  001D62                     l6453:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2588  001D62  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2589  001D66  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2590  001D6A  2ADE               	incf	postinc2,f,c
  2591  001D6C  0E00               	movlw	0
  2592  001D6E  22DD               	addwfc	postdec2,f,c
  2593  001D70                     
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2595  001D70  0E00               	movlw	0
  2596  001D72  0100               	movlb	0	; () banked
  2597  001D74  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2598  001D76  0E00               	movlw	0
  2599  001D78  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2600  001D7A  EFDA  F00E         	goto	l1336
  2601  001D7E                     l6459:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2604  001D7E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2605  001D82  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2606  001D86  CFDE FFF6          	movff	postinc2,tblptrl
  2607  001D8A  CFDD FFF7          	movff	postdec2,tblptrh
  2608  001D8E                     	if	0	;tblptru may be non-zero
  2609  001D8E                     	endif
  2610  001D8E                     	if	0	;tblptru may be non-zero
  2611  001D8E                     	endif
  2612  001D8E  0008               	tblrd		*
  2613  001D90  50F5               	movf	tablat,w,c
  2614  001D92  6E07               	movwf	fputc@c^0,c
  2615  001D94  6A08               	clrf	(fputc@c+1)^0,c
  2616  001D96  C0AE  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2617  001D9A  C0AF  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2618  001D9E  EC77  F01A         	call	_fputc	;wreg free
  2619  001DA2                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2621  001DA2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  001DA6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  001DAA  2ADE               	incf	postinc2,f,c
  2624  001DAC  0E00               	movlw	0
  2625  001DAE  22DD               	addwfc	postdec2,f,c
  2626  001DB0  EFAA  F00E         	goto	l6449
  2627  001DB4                     l1336:
  2628  001DB4  0012               	return		;funcret
  2629  001DB6                     __end_of_vfpfcnvrt:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _strncmp *****************
  2633 ;; Defined at:
  2634 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2637 ;;		 -> vfpfcnvrt@ct(3), 
  2638 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2639 ;;		 -> STR_12(3), 
  2640 ;;  n               2    8[COMRAM] unsigned int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2643 ;;		 -> STR_12(3), 
  2644 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2645 ;;		 -> vfpfcnvrt@ct(3), 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  2    4[COMRAM] int 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2655 ;;      Params:         6       0       0       0       0       0       0       0       0
  2656 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2657 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2658 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2659 ;;Total ram usage:       11 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 4
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_vfpfcnvrt
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text5
  2670  003418                     __ptext5:
  2671                           	callstack 0
  2672  003418                     _strncmp:
  2673                           	callstack 23
  2674  003418  C005  F00C         	movff	strncmp@_l,strncmp@l
  2675  00341C  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2676  003420  C007  F00E         	movff	strncmp@_r,strncmp@r
  2677  003424  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2678  003428  0609               	decf	strncmp@n^0,f,c
  2679  00342A  A0D8               	btfss	status,0,c
  2680  00342C  060A               	decf	(strncmp@n+1)^0,f,c
  2681  00342E  2809               	incf	strncmp@n^0,w,c
  2682  003430  E106               	bnz	u7761
  2683  003432  280A               	incf	(strncmp@n+1)^0,w,c
  2684  003434  A4D8               	btfss	status,2,c
  2685  003436  EF1F  F01A         	goto	u7761
  2686  00343A  EF21  F01A         	goto	u7760
  2687  00343E                     u7761:
  2688  00343E  EF2E  F01A         	goto	l6327
  2689  003442                     u7760:
  2690  003442  0E00               	movlw	0
  2691  003444  6E06               	movwf	(?_strncmp+1)^0,c
  2692  003446  0E00               	movlw	0
  2693  003448  6E05               	movwf	?_strncmp^0,c
  2694  00344A  EF76  F01A         	goto	l1461
  2695  00344E                     l6325:
  2696  00344E  4A0C               	infsnz	strncmp@l^0,f,c
  2697  003450  2A0D               	incf	(strncmp@l+1)^0,f,c
  2698  003452  4A0E               	infsnz	strncmp@r^0,f,c
  2699  003454  2A0F               	incf	(strncmp@r+1)^0,f,c
  2700  003456  0609               	decf	strncmp@n^0,f,c
  2701  003458  A0D8               	btfss	status,0,c
  2702  00345A  060A               	decf	(strncmp@n+1)^0,f,c
  2703  00345C                     l6327:
  2704  00345C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2705  003460  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2706  003464  50DF               	movf	indf2,w,c
  2707  003466  B4D8               	btfsc	status,2,c
  2708  003468  EF38  F01A         	goto	u7771
  2709  00346C  EF3A  F01A         	goto	u7770
  2710  003470                     u7771:
  2711  003470  EF65  F01A         	goto	l6335
  2712  003474                     u7770:
  2713  003474  C00E  FFF6         	movff	strncmp@r,tblptrl
  2714  003478  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2715  00347C                     	if	0	;tblptru may be non-zero
  2716  00347C                     	endif
  2717  00347C                     	if	0	;tblptru may be non-zero
  2718  00347C                     	endif
  2719  00347C  0008               	tblrd		*
  2720  00347E  50F5               	movf	tablat,w,c
  2721  003480  0900               	iorlw	0
  2722  003482  B4D8               	btfsc	status,2,c
  2723  003484  EF46  F01A         	goto	u7781
  2724  003488  EF48  F01A         	goto	u7780
  2725  00348C                     u7781:
  2726  00348C  EF65  F01A         	goto	l6335
  2727  003490                     u7780:
  2728  003490  5009               	movf	strncmp@n^0,w,c
  2729  003492  100A               	iorwf	(strncmp@n+1)^0,w,c
  2730  003494  B4D8               	btfsc	status,2,c
  2731  003496  EF4F  F01A         	goto	u7791
  2732  00349A  EF51  F01A         	goto	u7790
  2733  00349E                     u7791:
  2734  00349E  EF65  F01A         	goto	l6335
  2735  0034A2                     u7790:
  2736  0034A2  C00C  FFD9         	movff	strncmp@l,fsr2l
  2737  0034A6  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2738  0034AA  50DF               	movf	indf2,w,c
  2739  0034AC  6E0B               	movwf	??_strncmp^0,c
  2740  0034AE  C00E  FFF6         	movff	strncmp@r,tblptrl
  2741  0034B2  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2742  0034B6                     	if	0	;tblptru may be non-zero
  2743  0034B6                     	endif
  2744  0034B6                     	if	0	;tblptru may be non-zero
  2745  0034B6                     	endif
  2746  0034B6  0008               	tblrd		*
  2747  0034B8  50F5               	movf	tablat,w,c
  2748  0034BA  180B               	xorwf	??_strncmp^0,w,c
  2749  0034BC  B4D8               	btfsc	status,2,c
  2750  0034BE  EF63  F01A         	goto	u7801
  2751  0034C2  EF65  F01A         	goto	u7800
  2752  0034C6                     u7801:
  2753  0034C6  EF27  F01A         	goto	l6325
  2754  0034CA                     u7800:
  2755  0034CA                     l6335:
  2756  0034CA  C00C  FFD9         	movff	strncmp@l,fsr2l
  2757  0034CE  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2758  0034D2  50DF               	movf	indf2,w,c
  2759  0034D4  6E0B               	movwf	??_strncmp^0,c
  2760  0034D6  C00E  FFF6         	movff	strncmp@r,tblptrl
  2761  0034DA  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2762  0034DE                     	if	0	;tblptru may be non-zero
  2763  0034DE                     	endif
  2764  0034DE                     	if	0	;tblptru may be non-zero
  2765  0034DE                     	endif
  2766  0034DE  0008               	tblrd		*
  2767  0034E0  50F5               	movf	tablat,w,c
  2768  0034E2  5C0B               	subwf	??_strncmp^0,w,c
  2769  0034E4  6E05               	movwf	?_strncmp^0,c
  2770  0034E6  6A06               	clrf	(?_strncmp+1)^0,c
  2771  0034E8  A0D8               	btfss	status,0,c
  2772  0034EA  0606               	decf	(?_strncmp+1)^0,f,c
  2773  0034EC                     l1461:
  2774  0034EC  0012               	return		;funcret
  2775  0034EE                     __end_of_strncmp:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _efgtoa *****************
  2779 ;; Defined at:
  2780 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  2783 ;;		 -> sprintf@f(6), 
  2784 ;;  f               4   12[BANK0 ] PTR struct _IO_FILE
  2785 ;;  c               1   16[BANK0 ] unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  u               4   74[BANK0 ] unsigned char 
  2788 ;;  g               4   66[BANK0 ] unsigned char 
  2789 ;;  l               4   60[BANK0 ] unsigned char 
  2790 ;;  h               4   56[BANK0 ] unsigned char 
  2791 ;;  ou              4   42[BANK0 ] unsigned char 
  2792 ;;  n               2   72[BANK0 ] int 
  2793 ;;  e               2   70[BANK0 ] int 
  2794 ;;  i               2   64[BANK0 ] int 
  2795 ;;  w               2   52[BANK0 ] int 
  2796 ;;  p               2   50[BANK0 ] int 
  2797 ;;  sign            2   48[BANK0 ] int 
  2798 ;;  d               2   46[BANK0 ] int 
  2799 ;;  m               2   40[BANK0 ] int 
  2800 ;;  ne              2   38[BANK0 ] int 
  2801 ;;  pp              2   36[BANK0 ] int 
  2802 ;;  t               2   34[BANK0 ] int 
  2803 ;;  mode            1   55[BANK0 ] unsigned char 
  2804 ;;  nmode           1   54[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2   10[BANK0 ] int 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2814 ;;      Params:         0       7       0       0       0       0       0       0       0
  2815 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2816 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2817 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2818 ;;Total ram usage:       68 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 9
  2821 ;; This function calls:
  2822 ;;		___awdiv
  2823 ;;		___awmod
  2824 ;;		___fladd
  2825 ;;		___fldiv
  2826 ;;		___fleq
  2827 ;;		___flge
  2828 ;;		___flmul
  2829 ;;		___flneg
  2830 ;;		___flsub
  2831 ;;		___fltol
  2832 ;;		___fpclassifyf
  2833 ;;		_floorf
  2834 ;;		_isupper
  2835 ;;		_pad
  2836 ;;		_strcpy
  2837 ;;		_tolower
  2838 ;; This function is called by:
  2839 ;;		_vfpfcnvrt
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text6
  2844  000830                     __ptext6:
  2845                           	callstack 0
  2846  000830                     _efgtoa:
  2847                           	callstack 18
  2848  000830                     
  2849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2850  000830  0E00               	movlw	0
  2851  000832  0100               	movlb	0	; () banked
  2852  000834  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  2853  000836  0E00               	movlw	0
  2854  000838  6F90               	movwf	efgtoa@sign& (0+255),b
  2855  00083A                     
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2858  00083A  C06C  F0A2         	movff	efgtoa@f,efgtoa@g
  2859  00083E  C06D  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  2860  000842  C06E  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  2861  000846  C06F  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  2862  00084A                     
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2865  00084A  BFA5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2866  00084C  EF2C  F004         	goto	u7150
  2867  000850  EF2A  F004         	goto	u7151
  2868  000854                     u7151:
  2869  000854  EF42  F004         	goto	l5979
  2870  000858                     u7150:
  2871  000858                     
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2874  000858  0E00               	movlw	0
  2875  00085A  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  2876  00085C  0E01               	movlw	1
  2877  00085E  6F90               	movwf	efgtoa@sign& (0+255),b
  2878  000860                     
  2879                           ; BSR set to: 0
  2880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2881  000860  C0A2  F005         	movff	efgtoa@g,___flneg@f1
  2882  000864  C0A3  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2883  000868  C0A4  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2884  00086C  C0A5  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2885  000870  ECDE  F01E         	call	___flneg	;wreg free
  2886  000874  C005  F0A2         	movff	?___flneg,efgtoa@g
  2887  000878  C006  F0A3         	movff	?___flneg+1,efgtoa@g+1
  2888  00087C  C007  F0A4         	movff	?___flneg+2,efgtoa@g+2
  2889  000880  C008  F0A5         	movff	?___flneg+3,efgtoa@g+3
  2890  000884                     l5979:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2893  000884  0E00               	movlw	0
  2894  000886  0100               	movlb	0	; () banked
  2895  000888  6FA9               	movwf	(efgtoa@n+1)& (0+255),b
  2896  00088A  0E00               	movlw	0
  2897  00088C  6FA8               	movwf	efgtoa@n& (0+255),b
  2898  00088E                     
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2901  00088E  C0E8  F094         	movff	_width,efgtoa@w
  2902  000892  C0E9  F095         	movff	_width+1,efgtoa@w+1
  2903  000896                     
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2906  000896  5190               	movf	efgtoa@sign& (0+255),w,b
  2907  000898  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2908  00089A  A4D8               	btfss	status,2,c
  2909  00089C  EF52  F004         	goto	u7161
  2910  0008A0  EF54  F004         	goto	u7160
  2911  0008A4                     u7161:
  2912  0008A4  EF5B  F004         	goto	l5987
  2913  0008A8                     u7160:
  2914  0008A8                     
  2915                           ; BSR set to: 0
  2916  0008A8  A5EC               	btfss	_flags& (0+255),2,b
  2917  0008AA  EF59  F004         	goto	u7171
  2918  0008AE  EF5B  F004         	goto	u7170
  2919  0008B2                     u7171:
  2920  0008B2  EF75  F004         	goto	l5999
  2921  0008B6                     u7170:
  2922  0008B6                     l5987:
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2926  0008B6  5190               	movf	efgtoa@sign& (0+255),w,b
  2927  0008B8  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2928  0008BA  A4D8               	btfss	status,2,c
  2929  0008BC  EF62  F004         	goto	u7181
  2930  0008C0  EF64  F004         	goto	u7180
  2931  0008C4                     u7181:
  2932  0008C4  EF6A  F004         	goto	l5991
  2933  0008C8                     u7180:
  2934  0008C8                     
  2935                           ; BSR set to: 0
  2936  0008C8  0E00               	movlw	0
  2937  0008CA  6F77               	movwf	(_efgtoa$1965+1)& (0+255),b
  2938  0008CC  0E2B               	movlw	43
  2939  0008CE  6F76               	movwf	_efgtoa$1965& (0+255),b
  2940  0008D0  EF6E  F004         	goto	l5993
  2941  0008D4                     l5991:
  2942                           
  2943                           ; BSR set to: 0
  2944  0008D4  0E00               	movlw	0
  2945  0008D6  6F77               	movwf	(_efgtoa$1965+1)& (0+255),b
  2946  0008D8  0E2D               	movlw	45
  2947  0008DA  6F76               	movwf	_efgtoa$1965& (0+255),b
  2948  0008DC                     l5993:
  2949                           
  2950                           ; BSR set to: 0
  2951  0008DC  C076  F124         	movff	_efgtoa$1965,_dbuf
  2952  0008E0                     
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2955  0008E0  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  2956  0008E2  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  2957  0008E4                     
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2960  0008E4  0794               	decf	efgtoa@w& (0+255),f,b
  2961  0008E6  A0D8               	btfss	status,0,c
  2962  0008E8  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  2963  0008EA                     l5999:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2967  0008EA  C0A2  F005         	movff	efgtoa@g,___fpclassifyf@x
  2968  0008EE  C0A3  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2969  0008F2  C0A4  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2970  0008F6  C0A5  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2971  0008FA  EC8D  F019         	call	___fpclassifyf	;wreg free
  2972  0008FE  0405               	decf	?___fpclassifyf^0,w,c
  2973  000900  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2974  000902  A4D8               	btfss	status,2,c
  2975  000904  EF86  F004         	goto	u7191
  2976  000908  EF88  F004         	goto	u7190
  2977  00090C                     u7191:
  2978  00090C  EFDF  F004         	goto	l6017
  2979  000910                     u7190:
  2980  000910  0EBF               	movlw	191
  2981  000912  0100               	movlb	0	; () banked
  2982  000914  6F71               	movwf	??_efgtoa& (0+255),b
  2983  000916  0EFF               	movlw	255
  2984  000918  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  2985  00091A  5170               	movf	efgtoa@c& (0+255),w,b
  2986  00091C  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  2987  00091E  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  2988  000920  5171               	movf	??_efgtoa& (0+255),w,b
  2989  000922  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  2990  000924  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  2991  000926  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2992  000928  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  2993  00092A  E10A               	bnz	u7200
  2994  00092C  0E1A               	movlw	26
  2995  00092E  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  2996  000930  A0D8               	btfss	status,0,c
  2997  000932  EF9D  F004         	goto	u7201
  2998  000936  EFA0  F004         	goto	u7200
  2999  00093A                     u7201:
  3000  00093A  0E01               	movlw	1
  3001  00093C  EFA1  F004         	goto	u7210
  3002  000940                     u7200:
  3003  000940  0E00               	movlw	0
  3004  000942                     u7210:
  3005  000942  6F78               	movwf	_efgtoa$1966& (0+255),b
  3006  000944  6B79               	clrf	(_efgtoa$1966+1)& (0+255),b
  3007  000946                     
  3008                           ; BSR set to: 0
  3009  000946  5178               	movf	_efgtoa$1966& (0+255),w,b
  3010  000948  1179               	iorwf	(_efgtoa$1966+1)& (0+255),w,b
  3011  00094A  B4D8               	btfsc	status,2,c
  3012  00094C  EFAA  F004         	goto	u7221
  3013  000950  EFAC  F004         	goto	u7220
  3014  000954                     u7221:
  3015  000954  EFBA  F004         	goto	l6009
  3016  000958                     u7220:
  3017  000958                     
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3020  000958  0E24               	movlw	low _dbuf
  3021  00095A  25A8               	addwf	efgtoa@n& (0+255),w,b
  3022  00095C  6E05               	movwf	strcpy@dest^0,c
  3023  00095E  0E01               	movlw	high _dbuf
  3024  000960  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3025  000962  6E06               	movwf	(strcpy@dest+1)^0,c
  3026  000964  0E1B               	movlw	low STR_2
  3027  000966  6E07               	movwf	strcpy@src^0,c
  3028  000968  0E08               	movlw	high STR_2
  3029  00096A  6E08               	movwf	(strcpy@src+1)^0,c
  3030  00096C  ECED  F01C         	call	_strcpy	;wreg free
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3033  000970  EFC6  F004         	goto	l6011
  3034  000974                     l6009:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3038  000974  0E24               	movlw	low _dbuf
  3039  000976  25A8               	addwf	efgtoa@n& (0+255),w,b
  3040  000978  6E05               	movwf	strcpy@dest^0,c
  3041  00097A  0E01               	movlw	high _dbuf
  3042  00097C  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3043  00097E  6E06               	movwf	(strcpy@dest+1)^0,c
  3044  000980  0E23               	movlw	low STR_3
  3045  000982  6E07               	movwf	strcpy@src^0,c
  3046  000984  0E08               	movlw	high STR_3
  3047  000986  6E08               	movwf	(strcpy@src+1)^0,c
  3048  000988  ECED  F01C         	call	_strcpy	;wreg free
  3049  00098C                     l6011:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3052  00098C  0100               	movlb	0	; () banked
  3053  00098E  0EFD               	movlw	253
  3054  000990  2794               	addwf	efgtoa@w& (0+255),f,b
  3055  000992  0EFF               	movlw	255
  3056  000994  2395               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3057  000996                     l6013:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3060  000996  C06A  F017         	movff	efgtoa@fp,pad@fp
  3061  00099A  C06B  F018         	movff	efgtoa@fp+1,pad@fp+1
  3062  00099E  0E24               	movlw	low _dbuf
  3063  0009A0  6E19               	movwf	pad@buf^0,c
  3064  0009A2  0E01               	movlw	high _dbuf
  3065  0009A4  6E1A               	movwf	(pad@buf+1)^0,c
  3066  0009A6  C094  F01B         	movff	efgtoa@w,pad@p
  3067  0009AA  C095  F01C         	movff	efgtoa@w+1,pad@p+1
  3068  0009AE  ECDC  F01A         	call	_pad	;wreg free
  3069  0009B2  C017  F06A         	movff	?_pad,?_efgtoa
  3070  0009B6  C018  F06B         	movff	?_pad+1,?_efgtoa+1
  3071  0009BA  EF43  F00A         	goto	l1244
  3072  0009BE                     l6017:
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3075  0009BE  C0A2  F005         	movff	efgtoa@g,___fpclassifyf@x
  3076  0009C2  C0A3  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3077  0009C6  C0A4  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3078  0009CA  C0A5  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3079  0009CE  EC8D  F019         	call	___fpclassifyf	;wreg free
  3080  0009D2  5005               	movf	?___fpclassifyf^0,w,c
  3081  0009D4  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3082  0009D6  A4D8               	btfss	status,2,c
  3083  0009D8  EFF0  F004         	goto	u7231
  3084  0009DC  EFF2  F004         	goto	u7230
  3085  0009E0                     u7231:
  3086  0009E0  EF32  F005         	goto	l6035
  3087  0009E4                     u7230:
  3088  0009E4  0EBF               	movlw	191
  3089  0009E6  0100               	movlb	0	; () banked
  3090  0009E8  6F71               	movwf	??_efgtoa& (0+255),b
  3091  0009EA  0EFF               	movlw	255
  3092  0009EC  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3093  0009EE  5170               	movf	efgtoa@c& (0+255),w,b
  3094  0009F0  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  3095  0009F2  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  3096  0009F4  5171               	movf	??_efgtoa& (0+255),w,b
  3097  0009F6  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3098  0009F8  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3099  0009FA  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3100  0009FC  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3101  0009FE  E10A               	bnz	u7240
  3102  000A00  0E1A               	movlw	26
  3103  000A02  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3104  000A04  A0D8               	btfss	status,0,c
  3105  000A06  EF07  F005         	goto	u7241
  3106  000A0A  EF0A  F005         	goto	u7240
  3107  000A0E                     u7241:
  3108  000A0E  0E01               	movlw	1
  3109  000A10  EF0B  F005         	goto	u7250
  3110  000A14                     u7240:
  3111  000A14  0E00               	movlw	0
  3112  000A16                     u7250:
  3113  000A16  6F7A               	movwf	_efgtoa$1971& (0+255),b
  3114  000A18  6B7B               	clrf	(_efgtoa$1971+1)& (0+255),b
  3115  000A1A                     
  3116                           ; BSR set to: 0
  3117  000A1A  517A               	movf	_efgtoa$1971& (0+255),w,b
  3118  000A1C  117B               	iorwf	(_efgtoa$1971+1)& (0+255),w,b
  3119  000A1E  B4D8               	btfsc	status,2,c
  3120  000A20  EF14  F005         	goto	u7261
  3121  000A24  EF16  F005         	goto	u7260
  3122  000A28                     u7261:
  3123  000A28  EF24  F005         	goto	l6027
  3124  000A2C                     u7260:
  3125  000A2C                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3128  000A2C  0E24               	movlw	low _dbuf
  3129  000A2E  25A8               	addwf	efgtoa@n& (0+255),w,b
  3130  000A30  6E05               	movwf	strcpy@dest^0,c
  3131  000A32  0E01               	movlw	high _dbuf
  3132  000A34  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3133  000A36  6E06               	movwf	(strcpy@dest+1)^0,c
  3134  000A38  0E1F               	movlw	low STR_6
  3135  000A3A  6E07               	movwf	strcpy@src^0,c
  3136  000A3C  0E08               	movlw	high STR_6
  3137  000A3E  6E08               	movwf	(strcpy@src+1)^0,c
  3138  000A40  ECED  F01C         	call	_strcpy	;wreg free
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3141  000A44  EFC6  F004         	goto	l6011
  3142  000A48                     l6027:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3146  000A48  0E24               	movlw	low _dbuf
  3147  000A4A  25A8               	addwf	efgtoa@n& (0+255),w,b
  3148  000A4C  6E05               	movwf	strcpy@dest^0,c
  3149  000A4E  0E01               	movlw	high _dbuf
  3150  000A50  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3151  000A52  6E06               	movwf	(strcpy@dest+1)^0,c
  3152  000A54  0E27               	movlw	low STR_7
  3153  000A56  6E07               	movwf	strcpy@src^0,c
  3154  000A58  0E08               	movlw	high STR_7
  3155  000A5A  6E08               	movwf	(strcpy@src+1)^0,c
  3156  000A5C  ECED  F01C         	call	_strcpy	;wreg free
  3157  000A60  EFC6  F004         	goto	l6011
  3158  000A64                     l6035:
  3159                           
  3160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3161  000A64  0E00               	movlw	0
  3162  000A66  0100               	movlb	0	; () banked
  3163  000A68  6FAA               	movwf	efgtoa@u& (0+255),b
  3164  000A6A  0E00               	movlw	0
  3165  000A6C  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  3166  000A6E  0E80               	movlw	128
  3167  000A70  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  3168  000A72  0E3F               	movlw	63
  3169  000A74  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3172  000A76  0E00               	movlw	0
  3173  000A78  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  3174  000A7A  0E00               	movlw	0
  3175  000A7C  6FA6               	movwf	efgtoa@e& (0+255),b
  3176  000A7E                     
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3179  000A7E  C0A2  F005         	movff	efgtoa@g,___fleq@ff1
  3180  000A82  C0A3  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  3181  000A86  C0A4  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  3182  000A8A  C0A5  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  3183  000A8E  0E00               	movlw	0
  3184  000A90  6E09               	movwf	___fleq@ff2^0,c
  3185  000A92  0E00               	movlw	0
  3186  000A94  6E0A               	movwf	(___fleq@ff2+1)^0,c
  3187  000A96  0E00               	movlw	0
  3188  000A98  6E0B               	movwf	(___fleq@ff2+2)^0,c
  3189  000A9A  0E00               	movlw	0
  3190  000A9C  6E0C               	movwf	(___fleq@ff2+3)^0,c
  3191  000A9E  ECF9  F01B         	call	___fleq	;wreg free
  3192  000AA2  B0D8               	btfsc	status,0,c
  3193  000AA4  EF56  F005         	goto	u7271
  3194  000AA8  EF58  F005         	goto	u7270
  3195  000AAC                     u7271:
  3196  000AAC  EFDB  F005         	goto	l6053
  3197  000AB0                     u7270:
  3198  000AB0  EF77  F005         	goto	l6045
  3199  000AB4                     l6041:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3202  000AB4  C0AA  F013         	movff	efgtoa@u,___flmul@b
  3203  000AB8  C0AB  F014         	movff	efgtoa@u+1,___flmul@b+1
  3204  000ABC  C0AC  F015         	movff	efgtoa@u+2,___flmul@b+2
  3205  000AC0  C0AD  F016         	movff	efgtoa@u+3,___flmul@b+3
  3206  000AC4  0E00               	movlw	0
  3207  000AC6  6E17               	movwf	___flmul@a^0,c
  3208  000AC8  0E00               	movlw	0
  3209  000ACA  6E18               	movwf	(___flmul@a+1)^0,c
  3210  000ACC  0E20               	movlw	32
  3211  000ACE  6E19               	movwf	(___flmul@a+2)^0,c
  3212  000AD0  0E41               	movlw	65
  3213  000AD2  6E1A               	movwf	(___flmul@a+3)^0,c
  3214  000AD4  ECDB  F00E         	call	___flmul	;wreg free
  3215  000AD8  C013  F0AA         	movff	?___flmul,efgtoa@u
  3216  000ADC  C014  F0AB         	movff	?___flmul+1,efgtoa@u+1
  3217  000AE0  C015  F0AC         	movff	?___flmul+2,efgtoa@u+2
  3218  000AE4  C016  F0AD         	movff	?___flmul+3,efgtoa@u+3
  3219  000AE8                     
  3220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3221  000AE8  0100               	movlb	0	; () banked
  3222  000AEA  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  3223  000AEC  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3224  000AEE                     l6045:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3227  000AEE  C0A2  F02C         	movff	efgtoa@g,___flge@ff1
  3228  000AF2  C0A3  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3229  000AF6  C0A4  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3230  000AFA  C0A5  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3231  000AFE  0E00               	movlw	0
  3232  000B00  6E17               	movwf	___flmul@a^0,c
  3233  000B02  0E00               	movlw	0
  3234  000B04  6E18               	movwf	(___flmul@a+1)^0,c
  3235  000B06  0E20               	movlw	32
  3236  000B08  6E19               	movwf	(___flmul@a+2)^0,c
  3237  000B0A  0E41               	movlw	65
  3238  000B0C  6E1A               	movwf	(___flmul@a+3)^0,c
  3239  000B0E  C0AA  F013         	movff	efgtoa@u,___flmul@b
  3240  000B12  C0AB  F014         	movff	efgtoa@u+1,___flmul@b+1
  3241  000B16  C0AC  F015         	movff	efgtoa@u+2,___flmul@b+2
  3242  000B1A  C0AD  F016         	movff	efgtoa@u+3,___flmul@b+3
  3243  000B1E  ECDB  F00E         	call	___flmul	;wreg free
  3244  000B22  C013  F030         	movff	?___flmul,___flge@ff2
  3245  000B26  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3246  000B2A  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3247  000B2E  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3248  000B32  EC0B  F019         	call	___flge	;wreg free
  3249  000B36  B0D8               	btfsc	status,0,c
  3250  000B38  EFA0  F005         	goto	u7281
  3251  000B3C  EFA2  F005         	goto	u7280
  3252  000B40                     u7281:
  3253  000B40  EF5A  F005         	goto	l6041
  3254  000B44                     u7280:
  3255  000B44  EFC2  F005         	goto	l6051
  3256  000B48                     l6047:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3259  000B48  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  3260  000B4C  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3261  000B50  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3262  000B54  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3263  000B58  0E00               	movlw	0
  3264  000B5A  6E38               	movwf	___fldiv@a^0,c
  3265  000B5C  0E00               	movlw	0
  3266  000B5E  6E39               	movwf	(___fldiv@a+1)^0,c
  3267  000B60  0E20               	movlw	32
  3268  000B62  6E3A               	movwf	(___fldiv@a+2)^0,c
  3269  000B64  0E41               	movlw	65
  3270  000B66  6E3B               	movwf	(___fldiv@a+3)^0,c
  3271  000B68  ECF0  F010         	call	___fldiv	;wreg free
  3272  000B6C  C034  F0AA         	movff	?___fldiv,efgtoa@u
  3273  000B70  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3274  000B74  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3275  000B78  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3276  000B7C                     
  3277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3278  000B7C  0100               	movlb	0	; () banked
  3279  000B7E  07A6               	decf	efgtoa@e& (0+255),f,b
  3280  000B80  A0D8               	btfss	status,0,c
  3281  000B82  07A7               	decf	(efgtoa@e+1)& (0+255),f,b
  3282  000B84                     l6051:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3285  000B84  C0A2  F02C         	movff	efgtoa@g,___flge@ff1
  3286  000B88  C0A3  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3287  000B8C  C0A4  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3288  000B90  C0A5  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3289  000B94  C0AA  F030         	movff	efgtoa@u,___flge@ff2
  3290  000B98  C0AB  F031         	movff	efgtoa@u+1,___flge@ff2+1
  3291  000B9C  C0AC  F032         	movff	efgtoa@u+2,___flge@ff2+2
  3292  000BA0  C0AD  F033         	movff	efgtoa@u+3,___flge@ff2+3
  3293  000BA4  EC0B  F019         	call	___flge	;wreg free
  3294  000BA8  A0D8               	btfss	status,0,c
  3295  000BAA  EFD9  F005         	goto	u7291
  3296  000BAE  EFDB  F005         	goto	u7290
  3297  000BB2                     u7291:
  3298  000BB2  EFA4  F005         	goto	l6047
  3299  000BB6                     u7290:
  3300  000BB6                     l6053:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3303  000BB6  C070  F00B         	movff	efgtoa@c,tolower@c
  3304  000BBA  6A0C               	clrf	(tolower@c+1)^0,c
  3305  000BBC  ECBD  F01C         	call	_tolower	;wreg free
  3306  000BC0  500B               	movf	?_tolower^0,w,c
  3307  000BC2  0100               	movlb	0	; () banked
  3308  000BC4  6F97               	movwf	efgtoa@mode& (0+255),b
  3309  000BC6                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3312  000BC6  C097  F096         	movff	efgtoa@mode,efgtoa@nmode
  3313  000BCA                     
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3316  000BCA  0E67               	movlw	103
  3317  000BCC  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3318  000BCE  A4D8               	btfss	status,2,c
  3319  000BD0  EFEC  F005         	goto	u7301
  3320  000BD4  EFEE  F005         	goto	u7300
  3321  000BD8                     u7301:
  3322  000BD8  EF14  F006         	goto	l6067
  3323  000BDC                     u7300:
  3324  000BDC                     
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3327  000BDC  51EA               	movf	_prec& (0+255),w,b
  3328  000BDE  11EB               	iorwf	(_prec+1)& (0+255),w,b
  3329  000BE0  A4D8               	btfss	status,2,c
  3330  000BE2  EFF5  F005         	goto	u7311
  3331  000BE6  EFF7  F005         	goto	u7310
  3332  000BEA                     u7311:
  3333  000BEA  EFFB  F005         	goto	l6063
  3334  000BEE                     u7310:
  3335  000BEE                     
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3338  000BEE  0E00               	movlw	0
  3339  000BF0  6FEB               	movwf	(_prec+1)& (0+255),b
  3340  000BF2  0E01               	movlw	1
  3341  000BF4  6FEA               	movwf	_prec& (0+255),b
  3342  000BF6                     l6063:
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3346  000BF6  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  3347  000BF8  EF08  F006         	goto	u7320
  3348  000BFC  51EB               	movf	(_prec+1)& (0+255),w,b
  3349  000BFE  E106               	bnz	u7321
  3350  000C00  05EA               	decf	_prec& (0+255),w,b
  3351  000C02  B0D8               	btfsc	status,0,c
  3352  000C04  EF06  F006         	goto	u7321
  3353  000C08  EF08  F006         	goto	u7320
  3354  000C0C                     u7321:
  3355  000C0C  EF0E  F006         	goto	l1262
  3356  000C10                     u7320:
  3357  000C10                     l6065:
  3358                           
  3359                           ; BSR set to: 0
  3360  000C10  0E00               	movlw	0
  3361  000C12  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  3362  000C14  0E06               	movlw	6
  3363  000C16  6F92               	movwf	efgtoa@p& (0+255),b
  3364  000C18  EF1D  F006         	goto	l6073
  3365  000C1C                     l1262:
  3366                           
  3367                           ; BSR set to: 0
  3368  000C1C  C0EA  F092         	movff	_prec,efgtoa@p
  3369  000C20  C0EB  F093         	movff	_prec+1,efgtoa@p+1
  3370  000C24  EF1D  F006         	goto	l6073
  3371  000C28                     l6067:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3375  000C28  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  3376  000C2A  EF19  F006         	goto	u7331
  3377  000C2E  EF1B  F006         	goto	u7330
  3378  000C32                     u7331:
  3379  000C32  EF08  F006         	goto	l6065
  3380  000C36                     u7330:
  3381  000C36  EF0E  F006         	goto	l1262
  3382  000C3A                     l6073:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3386  000C3A  0E67               	movlw	103
  3387  000C3C  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3388  000C3E  A4D8               	btfss	status,2,c
  3389  000C40  EF24  F006         	goto	u7341
  3390  000C44  EF26  F006         	goto	u7340
  3391  000C48                     u7341:
  3392  000C48  EF55  F006         	goto	l6083
  3393  000C4C                     u7340:
  3394  000C4C                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3397  000C4C  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3398  000C4E  EF34  F006         	goto	u7350
  3399  000C52  0EFC               	movlw	252
  3400  000C54  5DA6               	subwf	efgtoa@e& (0+255),w,b
  3401  000C56  0EFF               	movlw	255
  3402  000C58  59A7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3403  000C5A  A0D8               	btfss	status,0,c
  3404  000C5C  EF32  F006         	goto	u7351
  3405  000C60  EF34  F006         	goto	u7350
  3406  000C64                     u7351:
  3407  000C64  EF53  F006         	goto	l6081
  3408  000C68                     u7350:
  3409  000C68                     
  3410                           ; BSR set to: 0
  3411  000C68  0EFF               	movlw	255
  3412  000C6A  6F71               	movwf	??_efgtoa& (0+255),b
  3413  000C6C  0EFF               	movlw	255
  3414  000C6E  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3415  000C70  C092  F073         	movff	efgtoa@p,??_efgtoa+2
  3416  000C74  C093  F074         	movff	efgtoa@p+1,??_efgtoa+3
  3417  000C78  5171               	movf	??_efgtoa& (0+255),w,b
  3418  000C7A  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3419  000C7C  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3420  000C7E  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3421  000C80  51A6               	movf	efgtoa@e& (0+255),w,b
  3422  000C82  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3423  000C84  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3424  000C86  0A80               	xorlw	128
  3425  000C88  6F75               	movwf	(??_efgtoa+4)& (0+255),b
  3426  000C8A  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  3427  000C8C  0A80               	xorlw	128
  3428  000C8E  5975               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3429  000C90  A0D8               	btfss	status,0,c
  3430  000C92  EF4D  F006         	goto	u7361
  3431  000C96  EF4F  F006         	goto	u7360
  3432  000C9A                     u7361:
  3433  000C9A  EF53  F006         	goto	l6081
  3434  000C9E                     u7360:
  3435  000C9E                     
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3438  000C9E  0E66               	movlw	102
  3439  000CA0  6F96               	movwf	efgtoa@nmode& (0+255),b
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3442  000CA2  EF55  F006         	goto	l6083
  3443  000CA6                     l6081:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3447  000CA6  0E65               	movlw	101
  3448  000CA8  6F96               	movwf	efgtoa@nmode& (0+255),b
  3449  000CAA                     l6083:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3453  000CAA  C092  F088         	movff	efgtoa@p,efgtoa@m
  3454  000CAE  C093  F089         	movff	efgtoa@p+1,efgtoa@m+1
  3455  000CB2                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3458  000CB2  0E67               	movlw	103
  3459  000CB4  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3460  000CB6  A4D8               	btfss	status,2,c
  3461  000CB8  EF60  F006         	goto	u7371
  3462  000CBC  EF62  F006         	goto	u7370
  3463  000CC0                     u7371:
  3464  000CC0  EF72  F006         	goto	l6091
  3465  000CC4                     u7370:
  3466  000CC4                     
  3467                           ; BSR set to: 0
  3468  000CC4  0E66               	movlw	102
  3469  000CC6  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3470  000CC8  A4D8               	btfss	status,2,c
  3471  000CCA  EF69  F006         	goto	u7381
  3472  000CCE  EF6B  F006         	goto	u7380
  3473  000CD2                     u7381:
  3474  000CD2  EF74  F006         	goto	l6093
  3475  000CD6                     u7380:
  3476  000CD6                     
  3477                           ; BSR set to: 0
  3478  000CD6  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3479  000CD8  EF72  F006         	goto	u7390
  3480  000CDC  EF70  F006         	goto	u7391
  3481  000CE0                     u7391:
  3482  000CE0  EF74  F006         	goto	l6093
  3483  000CE4                     u7390:
  3484  000CE4                     l6091:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3488  000CE4  4B88               	infsnz	efgtoa@m& (0+255),f,b
  3489  000CE6  2B89               	incf	(efgtoa@m+1)& (0+255),f,b
  3490  000CE8                     l6093:
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3494  000CE8  0E66               	movlw	102
  3495  000CEA  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3496  000CEC  A4D8               	btfss	status,2,c
  3497  000CEE  EF7B  F006         	goto	u7401
  3498  000CF2  EF7D  F006         	goto	u7400
  3499  000CF6                     u7401:
  3500  000CF6  EF9D  F006         	goto	l6103
  3501  000CFA                     u7400:
  3502  000CFA                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3505  000CFA  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3506  000CFC  EF84  F006         	goto	u7410
  3507  000D00  EF82  F006         	goto	u7411
  3508  000D04                     u7411:
  3509  000D04  EF90  F006         	goto	l6099
  3510  000D08                     u7410:
  3511  000D08                     
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3514  000D08  0E00               	movlw	0
  3515  000D0A  6FAA               	movwf	efgtoa@u& (0+255),b
  3516  000D0C  0E00               	movlw	0
  3517  000D0E  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  3518  000D10  0E80               	movlw	128
  3519  000D12  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  3520  000D14  0E3F               	movlw	63
  3521  000D16  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3524  000D18  0E00               	movlw	0
  3525  000D1A  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  3526  000D1C  0E00               	movlw	0
  3527  000D1E  6FA6               	movwf	efgtoa@e& (0+255),b
  3528  000D20                     l6099:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3532  000D20  0E67               	movlw	103
  3533  000D22  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3534  000D24  B4D8               	btfsc	status,2,c
  3535  000D26  EF97  F006         	goto	u7421
  3536  000D2A  EF99  F006         	goto	u7420
  3537  000D2E                     u7421:
  3538  000D2E  EF9D  F006         	goto	l6103
  3539  000D32                     u7420:
  3540  000D32                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3543  000D32  51A6               	movf	efgtoa@e& (0+255),w,b
  3544  000D34  2788               	addwf	efgtoa@m& (0+255),f,b
  3545  000D36  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  3546  000D38  2389               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3547  000D3A                     l6103:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3551  000D3A  0E00               	movlw	0
  3552  000D3C  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3553  000D3E  0E00               	movlw	0
  3554  000D40  6FA0               	movwf	efgtoa@i& (0+255),b
  3555  000D42                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3558  000D42  C0A2  F098         	movff	efgtoa@g,efgtoa@h
  3559  000D46  C0A3  F099         	movff	efgtoa@g+1,efgtoa@h+1
  3560  000D4A  C0A4  F09A         	movff	efgtoa@g+2,efgtoa@h+2
  3561  000D4E  C0A5  F09B         	movff	efgtoa@g+3,efgtoa@h+3
  3562  000D52                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3565  000D52  C0AA  F08A         	movff	efgtoa@u,efgtoa@ou
  3566  000D56  C0AB  F08B         	movff	efgtoa@u+1,efgtoa@ou+1
  3567  000D5A  C0AC  F08C         	movff	efgtoa@u+2,efgtoa@ou+2
  3568  000D5E  C0AD  F08D         	movff	efgtoa@u+3,efgtoa@ou+3
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3571  000D62  EF2E  F007         	goto	l6117
  3572  000D66                     l6109:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3576  000D66  C098  F034         	movff	efgtoa@h,___fldiv@b
  3577  000D6A  C099  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3578  000D6E  C09A  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3579  000D72  C09B  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3580  000D76  C0AA  F038         	movff	efgtoa@u,___fldiv@a
  3581  000D7A  C0AB  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3582  000D7E  C0AC  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3583  000D82  C0AD  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3584  000D86  ECF0  F010         	call	___fldiv	;wreg free
  3585  000D8A  C034  F04D         	movff	?___fldiv,floorf@x
  3586  000D8E  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3587  000D92  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3588  000D96  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3589  000D9A  EC2E  F014         	call	_floorf	;wreg free
  3590  000D9E  C04D  F09C         	movff	?_floorf,efgtoa@l
  3591  000DA2  C04E  F09D         	movff	?_floorf+1,efgtoa@l+1
  3592  000DA6  C04F  F09E         	movff	?_floorf+2,efgtoa@l+2
  3593  000DAA  C050  F09F         	movff	?_floorf+3,efgtoa@l+3
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3596  000DAE  C09C  F005         	movff	efgtoa@l,___fltol@f1
  3597  000DB2  C09D  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3598  000DB6  C09E  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3599  000DBA  C09F  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3600  000DBE  EC88  F018         	call	___fltol	;wreg free
  3601  000DC2  C005  F08E         	movff	?___fltol,efgtoa@d
  3602  000DC6  C006  F08F         	movff	?___fltol+1,efgtoa@d+1
  3603  000DCA                     
  3604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3605  000DCA  C098  F02C         	movff	efgtoa@h,___flsub@b
  3606  000DCE  C099  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3607  000DD2  C09A  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3608  000DD6  C09B  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3609  000DDA  C0AA  F017         	movff	efgtoa@u,___flmul@a
  3610  000DDE  C0AB  F018         	movff	efgtoa@u+1,___flmul@a+1
  3611  000DE2  C0AC  F019         	movff	efgtoa@u+2,___flmul@a+2
  3612  000DE6  C0AD  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3613  000DEA  C09C  F013         	movff	efgtoa@l,___flmul@b
  3614  000DEE  C09D  F014         	movff	efgtoa@l+1,___flmul@b+1
  3615  000DF2  C09E  F015         	movff	efgtoa@l+2,___flmul@b+2
  3616  000DF6  C09F  F016         	movff	efgtoa@l+3,___flmul@b+3
  3617  000DFA  ECDB  F00E         	call	___flmul	;wreg free
  3618  000DFE  C013  F030         	movff	?___flmul,___flsub@a
  3619  000E02  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3620  000E06  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3621  000E0A  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3622  000E0E  EC23  F01E         	call	___flsub	;wreg free
  3623  000E12  C02C  F098         	movff	?___flsub,efgtoa@h
  3624  000E16  C02D  F099         	movff	?___flsub+1,efgtoa@h+1
  3625  000E1A  C02E  F09A         	movff	?___flsub+2,efgtoa@h+2
  3626  000E1E  C02F  F09B         	movff	?___flsub+3,efgtoa@h+3
  3627  000E22                     
  3628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3629  000E22  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  3630  000E26  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3631  000E2A  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3632  000E2E  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3633  000E32  0E00               	movlw	0
  3634  000E34  6E38               	movwf	___fldiv@a^0,c
  3635  000E36  0E00               	movlw	0
  3636  000E38  6E39               	movwf	(___fldiv@a+1)^0,c
  3637  000E3A  0E20               	movlw	32
  3638  000E3C  6E3A               	movwf	(___fldiv@a+2)^0,c
  3639  000E3E  0E41               	movlw	65
  3640  000E40  6E3B               	movwf	(___fldiv@a+3)^0,c
  3641  000E42  ECF0  F010         	call	___fldiv	;wreg free
  3642  000E46  C034  F0AA         	movff	?___fldiv,efgtoa@u
  3643  000E4A  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3644  000E4E  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3645  000E52  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3646  000E56                     
  3647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3648  000E56  0100               	movlb	0	; () banked
  3649  000E58  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  3650  000E5A  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  3651  000E5C                     l6117:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3655  000E5C  5188               	movf	efgtoa@m& (0+255),w,b
  3656  000E5E  5DA0               	subwf	efgtoa@i& (0+255),w,b
  3657  000E60  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  3658  000E62  0A80               	xorlw	128
  3659  000E64  6F71               	movwf	??_efgtoa& (0+255),b
  3660  000E66  5189               	movf	(efgtoa@m+1)& (0+255),w,b
  3661  000E68  0A80               	xorlw	128
  3662  000E6A  5971               	subwfb	??_efgtoa& (0+255),w,b
  3663  000E6C  A0D8               	btfss	status,0,c
  3664  000E6E  EF3B  F007         	goto	u7431
  3665  000E72  EF3D  F007         	goto	u7430
  3666  000E76                     u7431:
  3667  000E76  EFB3  F006         	goto	l6109
  3668  000E7A                     u7430:
  3669  000E7A                     
  3670                           ; BSR set to: 0
  3671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3672  000E7A  C0AA  F013         	movff	efgtoa@u,___flmul@b
  3673  000E7E  C0AB  F014         	movff	efgtoa@u+1,___flmul@b+1
  3674  000E82  C0AC  F015         	movff	efgtoa@u+2,___flmul@b+2
  3675  000E86  C0AD  F016         	movff	efgtoa@u+3,___flmul@b+3
  3676  000E8A  0E00               	movlw	0
  3677  000E8C  6E17               	movwf	___flmul@a^0,c
  3678  000E8E  0E00               	movlw	0
  3679  000E90  6E18               	movwf	(___flmul@a+1)^0,c
  3680  000E92  0EA0               	movlw	160
  3681  000E94  6E19               	movwf	(___flmul@a+2)^0,c
  3682  000E96  0E40               	movlw	64
  3683  000E98  6E1A               	movwf	(___flmul@a+3)^0,c
  3684  000E9A  ECDB  F00E         	call	___flmul	;wreg free
  3685  000E9E  C013  F09C         	movff	?___flmul,efgtoa@l
  3686  000EA2  C014  F09D         	movff	?___flmul+1,efgtoa@l+1
  3687  000EA6  C015  F09E         	movff	?___flmul+2,efgtoa@l+2
  3688  000EAA  C016  F09F         	movff	?___flmul+3,efgtoa@l+3
  3689  000EAE                     
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3691  000EAE  C098  F02C         	movff	efgtoa@h,___flge@ff1
  3692  000EB2  C099  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3693  000EB6  C09A  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3694  000EBA  C09B  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3695  000EBE  C09C  F030         	movff	efgtoa@l,___flge@ff2
  3696  000EC2  C09D  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3697  000EC6  C09E  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3698  000ECA  C09F  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3699  000ECE  EC0B  F019         	call	___flge	;wreg free
  3700  000ED2  B0D8               	btfsc	status,0,c
  3701  000ED4  EF6E  F007         	goto	u7441
  3702  000ED8  EF70  F007         	goto	u7440
  3703  000EDC                     u7441:
  3704  000EDC  EF7B  F007         	goto	l6125
  3705  000EE0                     u7440:
  3706  000EE0                     
  3707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3708  000EE0  0E00               	movlw	0
  3709  000EE2  0100               	movlb	0	; () banked
  3710  000EE4  6F9C               	movwf	efgtoa@l& (0+255),b
  3711  000EE6  0E00               	movlw	0
  3712  000EE8  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  3713  000EEA  0E00               	movlw	0
  3714  000EEC  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  3715  000EEE  0E00               	movlw	0
  3716  000EF0  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  3717                           
  3718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3719  000EF2  EFA4  F007         	goto	l6131
  3720  000EF6                     l6125:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3723  000EF6  C098  F005         	movff	efgtoa@h,___fleq@ff1
  3724  000EFA  C099  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3725  000EFE  C09A  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3726  000F02  C09B  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3727  000F06  C09C  F009         	movff	efgtoa@l,___fleq@ff2
  3728  000F0A  C09D  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3729  000F0E  C09E  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3730  000F12  C09F  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3731  000F16  ECF9  F01B         	call	___fleq	;wreg free
  3732  000F1A  A0D8               	btfss	status,0,c
  3733  000F1C  EF92  F007         	goto	u7451
  3734  000F20  EF94  F007         	goto	u7450
  3735  000F24                     u7451:
  3736  000F24  EFA4  F007         	goto	l6131
  3737  000F28                     u7450:
  3738  000F28  0100               	movlb	0	; () banked
  3739  000F2A  B18E               	btfsc	efgtoa@d& (0+255),0,b
  3740  000F2C  EF9A  F007         	goto	u7461
  3741  000F30  EF9C  F007         	goto	u7460
  3742  000F34                     u7461:
  3743  000F34  EFA4  F007         	goto	l6131
  3744  000F38                     u7460:
  3745  000F38                     
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3748  000F38  0E00               	movlw	0
  3749  000F3A  6F9C               	movwf	efgtoa@l& (0+255),b
  3750  000F3C  0E00               	movlw	0
  3751  000F3E  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  3752  000F40  0E00               	movlw	0
  3753  000F42  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  3754  000F44  0E00               	movlw	0
  3755  000F46  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  3756  000F48                     l6131:
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3759  000F48  C0A2  F005         	movff	efgtoa@g,___fladd@b
  3760  000F4C  C0A3  F006         	movff	efgtoa@g+1,___fladd@b+1
  3761  000F50  C0A4  F007         	movff	efgtoa@g+2,___fladd@b+2
  3762  000F54  C0A5  F008         	movff	efgtoa@g+3,___fladd@b+3
  3763  000F58  C09C  F009         	movff	efgtoa@l,___fladd@a
  3764  000F5C  C09D  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3765  000F60  C09E  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3766  000F64  C09F  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3767  000F68  EC44  F00A         	call	___fladd	;wreg free
  3768  000F6C  C005  F098         	movff	?___fladd,efgtoa@h
  3769  000F70  C006  F099         	movff	?___fladd+1,efgtoa@h+1
  3770  000F74  C007  F09A         	movff	?___fladd+2,efgtoa@h+2
  3771  000F78  C008  F09B         	movff	?___fladd+3,efgtoa@h+3
  3772  000F7C                     
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3774  000F7C  C098  F02C         	movff	efgtoa@h,___flge@ff1
  3775  000F80  C099  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3776  000F84  C09A  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3777  000F88  C09B  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3778  000F8C  0E00               	movlw	0
  3779  000F8E  6E17               	movwf	___flmul@a^0,c
  3780  000F90  0E00               	movlw	0
  3781  000F92  6E18               	movwf	(___flmul@a+1)^0,c
  3782  000F94  0E20               	movlw	32
  3783  000F96  6E19               	movwf	(___flmul@a+2)^0,c
  3784  000F98  0E41               	movlw	65
  3785  000F9A  6E1A               	movwf	(___flmul@a+3)^0,c
  3786  000F9C  C08A  F013         	movff	efgtoa@ou,___flmul@b
  3787  000FA0  C08B  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3788  000FA4  C08C  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3789  000FA8  C08D  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3790  000FAC  ECDB  F00E         	call	___flmul	;wreg free
  3791  000FB0  C013  F030         	movff	?___flmul,___flge@ff2
  3792  000FB4  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3793  000FB8  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3794  000FBC  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3795  000FC0  EC0B  F019         	call	___flge	;wreg free
  3796  000FC4  A0D8               	btfss	status,0,c
  3797  000FC6  EFE7  F007         	goto	u7471
  3798  000FCA  EFE9  F007         	goto	u7470
  3799  000FCE                     u7471:
  3800  000FCE  EF12  F008         	goto	l6143
  3801  000FD2                     u7470:
  3802  000FD2                     
  3803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3804  000FD2  0100               	movlb	0	; () banked
  3805  000FD4  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  3806  000FD6  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3807  000FD8                     
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3810  000FD8  C08A  F013         	movff	efgtoa@ou,___flmul@b
  3811  000FDC  C08B  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3812  000FE0  C08C  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3813  000FE4  C08D  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3814  000FE8  0E00               	movlw	0
  3815  000FEA  6E17               	movwf	___flmul@a^0,c
  3816  000FEC  0E00               	movlw	0
  3817  000FEE  6E18               	movwf	(___flmul@a+1)^0,c
  3818  000FF0  0E20               	movlw	32
  3819  000FF2  6E19               	movwf	(___flmul@a+2)^0,c
  3820  000FF4  0E41               	movlw	65
  3821  000FF6  6E1A               	movwf	(___flmul@a+3)^0,c
  3822  000FF8  ECDB  F00E         	call	___flmul	;wreg free
  3823  000FFC  C013  F08A         	movff	?___flmul,efgtoa@ou
  3824  001000  C014  F08B         	movff	?___flmul+1,efgtoa@ou+1
  3825  001004  C015  F08C         	movff	?___flmul+2,efgtoa@ou+2
  3826  001008  C016  F08D         	movff	?___flmul+3,efgtoa@ou+3
  3827  00100C                     
  3828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3829  00100C  0E66               	movlw	102
  3830  00100E  0100               	movlb	0	; () banked
  3831  001010  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3832  001012  A4D8               	btfss	status,2,c
  3833  001014  EF0E  F008         	goto	u7481
  3834  001018  EF10  F008         	goto	u7480
  3835  00101C                     u7481:
  3836  00101C  EF12  F008         	goto	l6143
  3837  001020                     u7480:
  3838  001020                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3841  001020  4B88               	infsnz	efgtoa@m& (0+255),f,b
  3842  001022  2B89               	incf	(efgtoa@m+1)& (0+255),f,b
  3843  001024                     l6143:
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3846  001024  C08A  F0AA         	movff	efgtoa@ou,efgtoa@u
  3847  001028  C08B  F0AB         	movff	efgtoa@ou+1,efgtoa@u+1
  3848  00102C  C08C  F0AC         	movff	efgtoa@ou+2,efgtoa@u+2
  3849  001030  C08D  F0AD         	movff	efgtoa@ou+3,efgtoa@u+3
  3850  001034                     
  3851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3852  001034  0E65               	movlw	101
  3853  001036  0100               	movlb	0	; () banked
  3854  001038  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3855  00103A  B4D8               	btfsc	status,2,c
  3856  00103C  EF22  F008         	goto	u7491
  3857  001040  EF24  F008         	goto	u7490
  3858  001044                     u7491:
  3859  001044  EF2A  F008         	goto	l6149
  3860  001048                     u7490:
  3861  001048                     
  3862                           ; BSR set to: 0
  3863  001048  C0A6  F086         	movff	efgtoa@e,efgtoa@ne
  3864  00104C  C0A7  F087         	movff	efgtoa@e+1,efgtoa@ne+1
  3865  001050  EF2E  F008         	goto	l1290
  3866  001054                     l6149:
  3867                           
  3868                           ; BSR set to: 0
  3869  001054  0E00               	movlw	0
  3870  001056  6F87               	movwf	(efgtoa@ne+1)& (0+255),b
  3871  001058  0E00               	movlw	0
  3872  00105A  6F86               	movwf	efgtoa@ne& (0+255),b
  3873  00105C                     l1290:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3877  00105C  0E00               	movlw	0
  3878  00105E  6F85               	movwf	(efgtoa@pp+1)& (0+255),b
  3879  001060  0E00               	movlw	0
  3880  001062  6F84               	movwf	efgtoa@pp& (0+255),b
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3883  001064  0E00               	movlw	0
  3884  001066  6F83               	movwf	(efgtoa@t+1)& (0+255),b
  3885  001068  0E00               	movlw	0
  3886  00106A  6F82               	movwf	efgtoa@t& (0+255),b
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3889  00106C  0E00               	movlw	0
  3890  00106E  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3891  001070  0E00               	movlw	0
  3892  001072  6FA0               	movwf	efgtoa@i& (0+255),b
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3895  001074  EF29  F009         	goto	l6199
  3896  001078                     l6151:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3900  001078  C098  F034         	movff	efgtoa@h,___fldiv@b
  3901  00107C  C099  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3902  001080  C09A  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3903  001084  C09B  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3904  001088  C0AA  F038         	movff	efgtoa@u,___fldiv@a
  3905  00108C  C0AB  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3906  001090  C0AC  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3907  001094  C0AD  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3908  001098  ECF0  F010         	call	___fldiv	;wreg free
  3909  00109C  C034  F04D         	movff	?___fldiv,floorf@x
  3910  0010A0  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3911  0010A4  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3912  0010A8  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3913  0010AC  EC2E  F014         	call	_floorf	;wreg free
  3914  0010B0  C04D  F09C         	movff	?_floorf,efgtoa@l
  3915  0010B4  C04E  F09D         	movff	?_floorf+1,efgtoa@l+1
  3916  0010B8  C04F  F09E         	movff	?_floorf+2,efgtoa@l+2
  3917  0010BC  C050  F09F         	movff	?_floorf+3,efgtoa@l+3
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3920  0010C0  C09C  F005         	movff	efgtoa@l,___fltol@f1
  3921  0010C4  C09D  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3922  0010C8  C09E  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3923  0010CC  C09F  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3924  0010D0  EC88  F018         	call	___fltol	;wreg free
  3925  0010D4  C005  F08E         	movff	?___fltol,efgtoa@d
  3926  0010D8  C006  F08F         	movff	?___fltol+1,efgtoa@d+1
  3927  0010DC                     
  3928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3929  0010DC  0100               	movlb	0	; () banked
  3930  0010DE  B9EC               	btfsc	_flags& (0+255),4,b
  3931  0010E0  EF74  F008         	goto	u7501
  3932  0010E4  EF76  F008         	goto	u7500
  3933  0010E8                     u7501:
  3934  0010E8  EF93  F008         	goto	l6163
  3935  0010EC                     u7500:
  3936  0010EC                     
  3937                           ; BSR set to: 0
  3938  0010EC  518E               	movf	efgtoa@d& (0+255),w,b
  3939  0010EE  118F               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3940  0010F0  A4D8               	btfss	status,2,c
  3941  0010F2  EF7D  F008         	goto	u7511
  3942  0010F6  EF7F  F008         	goto	u7510
  3943  0010FA                     u7511:
  3944  0010FA  EF93  F008         	goto	l6163
  3945  0010FE                     u7510:
  3946  0010FE                     
  3947                           ; BSR set to: 0
  3948  0010FE  0E67               	movlw	103
  3949  001100  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3950  001102  A4D8               	btfss	status,2,c
  3951  001104  EF86  F008         	goto	u7521
  3952  001108  EF88  F008         	goto	u7520
  3953  00110C                     u7521:
  3954  00110C  EF93  F008         	goto	l6163
  3955  001110                     u7520:
  3956  001110                     
  3957                           ; BSR set to: 0
  3958  001110  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3959  001112  EF8F  F008         	goto	u7530
  3960  001116  EF8D  F008         	goto	u7531
  3961  00111A                     u7531:
  3962  00111A  EF93  F008         	goto	l6163
  3963  00111E                     u7530:
  3964  00111E                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3967  00111E  4B82               	infsnz	efgtoa@t& (0+255),f,b
  3968  001120  2B83               	incf	(efgtoa@t+1)& (0+255),f,b
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3971  001122  EFDD  F008         	goto	l6191
  3972  001126                     l6163:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3976  001126  5184               	movf	efgtoa@pp& (0+255),w,b
  3977  001128  1185               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3978  00112A  A4D8               	btfss	status,2,c
  3979  00112C  EF9A  F008         	goto	u7541
  3980  001130  EF9C  F008         	goto	u7540
  3981  001134                     u7541:
  3982  001134  EFC6  F008         	goto	l6183
  3983  001138                     u7540:
  3984  001138                     
  3985                           ; BSR set to: 0
  3986  001138  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3987  00113A  EFA3  F008         	goto	u7550
  3988  00113E  EFA1  F008         	goto	u7551
  3989  001142                     u7551:
  3990  001142  EFC6  F008         	goto	l6183
  3991  001146                     u7550:
  3992  001146                     
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3995  001146  0E24               	movlw	low _dbuf
  3996  001148  25A8               	addwf	efgtoa@n& (0+255),w,b
  3997  00114A  6ED9               	movwf	fsr2l,c
  3998  00114C  0E01               	movlw	high _dbuf
  3999  00114E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4000  001150  6EDA               	movwf	fsr2h,c
  4001  001152  0E2E               	movlw	46
  4002  001154  6EDF               	movwf	indf2,c
  4003  001156                     
  4004                           ; BSR set to: 0
  4005  001156  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4006  001158  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4007  00115A                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4010  00115A  0794               	decf	efgtoa@w& (0+255),f,b
  4011  00115C  A0D8               	btfss	status,0,c
  4012  00115E  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  4013  001160                     
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4016  001160  0E00               	movlw	0
  4017  001162  6F85               	movwf	(efgtoa@pp+1)& (0+255),b
  4018  001164  0E01               	movlw	1
  4019  001166  6F84               	movwf	efgtoa@pp& (0+255),b
  4020  001168  EFC6  F008         	goto	l6183
  4021  00116C                     l6175:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4025  00116C  0E24               	movlw	low _dbuf
  4026  00116E  25A8               	addwf	efgtoa@n& (0+255),w,b
  4027  001170  6ED9               	movwf	fsr2l,c
  4028  001172  0E01               	movlw	high _dbuf
  4029  001174  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4030  001176  6EDA               	movwf	fsr2h,c
  4031  001178  0E30               	movlw	48
  4032  00117A  6EDF               	movwf	indf2,c
  4033  00117C                     
  4034                           ; BSR set to: 0
  4035  00117C  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4036  00117E  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4037  001180                     
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4040  001180  0794               	decf	efgtoa@w& (0+255),f,b
  4041  001182  A0D8               	btfss	status,0,c
  4042  001184  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  4043  001186                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4046  001186  0782               	decf	efgtoa@t& (0+255),f,b
  4047  001188  A0D8               	btfss	status,0,c
  4048  00118A  0783               	decf	(efgtoa@t+1)& (0+255),f,b
  4049  00118C                     l6183:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4053  00118C  5182               	movf	efgtoa@t& (0+255),w,b
  4054  00118E  1183               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4055  001190  A4D8               	btfss	status,2,c
  4056  001192  EFCD  F008         	goto	u7561
  4057  001196  EFCF  F008         	goto	u7560
  4058  00119A                     u7561:
  4059  00119A  EFB6  F008         	goto	l6175
  4060  00119E                     u7560:
  4061  00119E                     
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4064  00119E  0E24               	movlw	low _dbuf
  4065  0011A0  25A8               	addwf	efgtoa@n& (0+255),w,b
  4066  0011A2  6ED9               	movwf	fsr2l,c
  4067  0011A4  0E01               	movlw	high _dbuf
  4068  0011A6  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4069  0011A8  6EDA               	movwf	fsr2h,c
  4070  0011AA  518E               	movf	efgtoa@d& (0+255),w,b
  4071  0011AC  0F30               	addlw	48
  4072  0011AE  6EDF               	movwf	indf2,c
  4073  0011B0                     
  4074                           ; BSR set to: 0
  4075  0011B0  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4076  0011B2  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4077  0011B4                     
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4080  0011B4  0794               	decf	efgtoa@w& (0+255),f,b
  4081  0011B6  A0D8               	btfss	status,0,c
  4082  0011B8  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  4083  0011BA                     l6191:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4087  0011BA  C098  F02C         	movff	efgtoa@h,___flsub@b
  4088  0011BE  C099  F02D         	movff	efgtoa@h+1,___flsub@b+1
  4089  0011C2  C09A  F02E         	movff	efgtoa@h+2,___flsub@b+2
  4090  0011C6  C09B  F02F         	movff	efgtoa@h+3,___flsub@b+3
  4091  0011CA  C0AA  F017         	movff	efgtoa@u,___flmul@a
  4092  0011CE  C0AB  F018         	movff	efgtoa@u+1,___flmul@a+1
  4093  0011D2  C0AC  F019         	movff	efgtoa@u+2,___flmul@a+2
  4094  0011D6  C0AD  F01A         	movff	efgtoa@u+3,___flmul@a+3
  4095  0011DA  C09C  F013         	movff	efgtoa@l,___flmul@b
  4096  0011DE  C09D  F014         	movff	efgtoa@l+1,___flmul@b+1
  4097  0011E2  C09E  F015         	movff	efgtoa@l+2,___flmul@b+2
  4098  0011E6  C09F  F016         	movff	efgtoa@l+3,___flmul@b+3
  4099  0011EA  ECDB  F00E         	call	___flmul	;wreg free
  4100  0011EE  C013  F030         	movff	?___flmul,___flsub@a
  4101  0011F2  C014  F031         	movff	?___flmul+1,___flsub@a+1
  4102  0011F6  C015  F032         	movff	?___flmul+2,___flsub@a+2
  4103  0011FA  C016  F033         	movff	?___flmul+3,___flsub@a+3
  4104  0011FE  EC23  F01E         	call	___flsub	;wreg free
  4105  001202  C02C  F098         	movff	?___flsub,efgtoa@h
  4106  001206  C02D  F099         	movff	?___flsub+1,efgtoa@h+1
  4107  00120A  C02E  F09A         	movff	?___flsub+2,efgtoa@h+2
  4108  00120E  C02F  F09B         	movff	?___flsub+3,efgtoa@h+3
  4109  001212                     
  4110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4111  001212  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  4112  001216  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  4113  00121A  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  4114  00121E  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  4115  001222  0E00               	movlw	0
  4116  001224  6E38               	movwf	___fldiv@a^0,c
  4117  001226  0E00               	movlw	0
  4118  001228  6E39               	movwf	(___fldiv@a+1)^0,c
  4119  00122A  0E20               	movlw	32
  4120  00122C  6E3A               	movwf	(___fldiv@a+2)^0,c
  4121  00122E  0E41               	movlw	65
  4122  001230  6E3B               	movwf	(___fldiv@a+3)^0,c
  4123  001232  ECF0  F010         	call	___fldiv	;wreg free
  4124  001236  C034  F0AA         	movff	?___fldiv,efgtoa@u
  4125  00123A  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  4126  00123E  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  4127  001242  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  4128  001246                     
  4129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4130  001246  0100               	movlb	0	; () banked
  4131  001248  0786               	decf	efgtoa@ne& (0+255),f,b
  4132  00124A  A0D8               	btfss	status,0,c
  4133  00124C  0787               	decf	(efgtoa@ne+1)& (0+255),f,b
  4134  00124E                     
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4137  00124E  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  4138  001250  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  4139  001252                     l6199:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4143  001252  5188               	movf	efgtoa@m& (0+255),w,b
  4144  001254  5DA0               	subwf	efgtoa@i& (0+255),w,b
  4145  001256  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  4146  001258  0A80               	xorlw	128
  4147  00125A  6F71               	movwf	??_efgtoa& (0+255),b
  4148  00125C  5189               	movf	(efgtoa@m+1)& (0+255),w,b
  4149  00125E  0A80               	xorlw	128
  4150  001260  5971               	subwfb	??_efgtoa& (0+255),w,b
  4151  001262  B0D8               	btfsc	status,0,c
  4152  001264  EF36  F009         	goto	u7571
  4153  001268  EF38  F009         	goto	u7570
  4154  00126C                     u7571:
  4155  00126C  EF46  F009         	goto	l6203
  4156  001270                     u7570:
  4157  001270                     
  4158                           ; BSR set to: 0
  4159  001270  BFA9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4160  001272  EF44  F009         	goto	u7581
  4161  001276  51A9               	movf	(efgtoa@n+1)& (0+255),w,b
  4162  001278  E109               	bnz	u7580
  4163  00127A  0E4B               	movlw	75
  4164  00127C  5DA8               	subwf	efgtoa@n& (0+255),w,b
  4165  00127E  A0D8               	btfss	status,0,c
  4166  001280  EF44  F009         	goto	u7581
  4167  001284  EF46  F009         	goto	u7580
  4168  001288                     u7581:
  4169  001288  EF3C  F008         	goto	l6151
  4170  00128C                     u7580:
  4171  00128C                     l6203:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4175  00128C  5184               	movf	efgtoa@pp& (0+255),w,b
  4176  00128E  1185               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4177  001290  A4D8               	btfss	status,2,c
  4178  001292  EF4D  F009         	goto	u7591
  4179  001296  EF4F  F009         	goto	u7590
  4180  00129A                     u7591:
  4181  00129A  EF60  F009         	goto	l6211
  4182  00129E                     u7590:
  4183  00129E                     
  4184                           ; BSR set to: 0
  4185  00129E  A9EC               	btfss	_flags& (0+255),4,b
  4186  0012A0  EF54  F009         	goto	u7601
  4187  0012A4  EF56  F009         	goto	u7600
  4188  0012A8                     u7601:
  4189  0012A8  EF60  F009         	goto	l6211
  4190  0012AC                     u7600:
  4191  0012AC                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4194  0012AC  0E24               	movlw	low _dbuf
  4195  0012AE  25A8               	addwf	efgtoa@n& (0+255),w,b
  4196  0012B0  6ED9               	movwf	fsr2l,c
  4197  0012B2  0E01               	movlw	high _dbuf
  4198  0012B4  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4199  0012B6  6EDA               	movwf	fsr2h,c
  4200  0012B8  0E2E               	movlw	46
  4201  0012BA  6EDF               	movwf	indf2,c
  4202  0012BC                     
  4203                           ; BSR set to: 0
  4204  0012BC  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4205  0012BE  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4206  0012C0                     l6211:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4210  0012C0  0E24               	movlw	low _dbuf
  4211  0012C2  25A8               	addwf	efgtoa@n& (0+255),w,b
  4212  0012C4  6ED9               	movwf	fsr2l,c
  4213  0012C6  0E01               	movlw	high _dbuf
  4214  0012C8  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4215  0012CA  6EDA               	movwf	fsr2h,c
  4216  0012CC  0E00               	movlw	0
  4217  0012CE  6EDF               	movwf	indf2,c
  4218  0012D0                     
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4221  0012D0  0E65               	movlw	101
  4222  0012D2  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  4223  0012D4  A4D8               	btfss	status,2,c
  4224  0012D6  EF6F  F009         	goto	u7611
  4225  0012DA  EF71  F009         	goto	u7610
  4226  0012DE                     u7611:
  4227  0012DE  EFCB  F004         	goto	l6013
  4228  0012E2                     u7610:
  4229  0012E2                     
  4230                           ; BSR set to: 0
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4232  0012E2  0E00               	movlw	0
  4233  0012E4  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  4234  0012E6  0E4F               	movlw	79
  4235  0012E8  6FA0               	movwf	efgtoa@i& (0+255),b
  4236  0012EA                     
  4237                           ; BSR set to: 0
  4238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4239  0012EA  0E24               	movlw	low _dbuf
  4240  0012EC  25A0               	addwf	efgtoa@i& (0+255),w,b
  4241  0012EE  6ED9               	movwf	fsr2l,c
  4242  0012F0  0E01               	movlw	high _dbuf
  4243  0012F2  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4244  0012F4  6EDA               	movwf	fsr2h,c
  4245  0012F6  0E00               	movlw	0
  4246  0012F8  6EDF               	movwf	indf2,c
  4247  0012FA                     
  4248                           ; BSR set to: 0
  4249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4250  0012FA  0E00               	movlw	0
  4251  0012FC  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  4252  0012FE  0E00               	movlw	0
  4253  001300  6F90               	movwf	efgtoa@sign& (0+255),b
  4254  001302                     
  4255                           ; BSR set to: 0
  4256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4257  001302  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4258  001304  EF88  F009         	goto	u7620
  4259  001308  EF86  F009         	goto	u7621
  4260  00130C                     u7621:
  4261  00130C  EF90  F009         	goto	l6227
  4262  001310                     u7620:
  4263  001310                     
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4266  001310  0E00               	movlw	0
  4267  001312  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  4268  001314  0E01               	movlw	1
  4269  001316  6F90               	movwf	efgtoa@sign& (0+255),b
  4270  001318                     
  4271                           ; BSR set to: 0
  4272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4273  001318  6DA6               	negf	efgtoa@e& (0+255),b
  4274  00131A  1FA7               	comf	(efgtoa@e+1)& (0+255),f,b
  4275  00131C  B0D8               	btfsc	status,0,c
  4276  00131E  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  4277  001320                     l6227:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4281  001320  0E00               	movlw	0
  4282  001322  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  4283  001324  0E02               	movlw	2
  4284  001326  6F92               	movwf	efgtoa@p& (0+255),b
  4285                           
  4286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4287  001328  EFC1  F009         	goto	l6239
  4288  00132C                     l6229:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4292  00132C  07A0               	decf	efgtoa@i& (0+255),f,b
  4293  00132E  A0D8               	btfss	status,0,c
  4294  001330  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4295  001332                     
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4298  001332  0E24               	movlw	low _dbuf
  4299  001334  25A0               	addwf	efgtoa@i& (0+255),w,b
  4300  001336  6ED9               	movwf	fsr2l,c
  4301  001338  0E01               	movlw	high _dbuf
  4302  00133A  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4303  00133C  6EDA               	movwf	fsr2h,c
  4304  00133E  C0A6  F005         	movff	efgtoa@e,___awmod@dividend
  4305  001342  C0A7  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4306  001346  0E00               	movlw	0
  4307  001348  6E08               	movwf	(___awmod@divisor+1)^0,c
  4308  00134A  0E0A               	movlw	10
  4309  00134C  6E07               	movwf	___awmod@divisor^0,c
  4310  00134E  ECA1  F01B         	call	___awmod	;wreg free
  4311  001352  5005               	movf	?___awmod^0,w,c
  4312  001354  0F30               	addlw	48
  4313  001356  6EDF               	movwf	indf2,c
  4314  001358                     
  4315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4316  001358  C0A6  F005         	movff	efgtoa@e,___awdiv@dividend
  4317  00135C  C0A7  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4318  001360  0E00               	movlw	0
  4319  001362  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4320  001364  0E0A               	movlw	10
  4321  001366  6E07               	movwf	___awdiv@divisor^0,c
  4322  001368  EC3F  F01B         	call	___awdiv	;wreg free
  4323  00136C  C005  F0A6         	movff	?___awdiv,efgtoa@e
  4324  001370  C006  F0A7         	movff	?___awdiv+1,efgtoa@e+1
  4325  001374                     
  4326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4327  001374  0100               	movlb	0	; () banked
  4328  001376  0792               	decf	efgtoa@p& (0+255),f,b
  4329  001378  A0D8               	btfss	status,0,c
  4330  00137A  0793               	decf	(efgtoa@p+1)& (0+255),f,b
  4331  00137C                     
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4334  00137C  0794               	decf	efgtoa@w& (0+255),f,b
  4335  00137E  A0D8               	btfss	status,0,c
  4336  001380  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  4337  001382                     l6239:
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4341  001382  51A6               	movf	efgtoa@e& (0+255),w,b
  4342  001384  11A7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4343  001386  A4D8               	btfss	status,2,c
  4344  001388  EFC8  F009         	goto	u7631
  4345  00138C  EFCA  F009         	goto	u7630
  4346  001390                     u7631:
  4347  001390  EF96  F009         	goto	l6229
  4348  001394                     u7630:
  4349  001394                     
  4350                           ; BSR set to: 0
  4351  001394  BF93               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4352  001396  EFD7  F009         	goto	u7640
  4353  00139A  5193               	movf	(efgtoa@p+1)& (0+255),w,b
  4354  00139C  E106               	bnz	u7641
  4355  00139E  0592               	decf	efgtoa@p& (0+255),w,b
  4356  0013A0  B0D8               	btfsc	status,0,c
  4357  0013A2  EFD5  F009         	goto	u7641
  4358  0013A6  EFD7  F009         	goto	u7640
  4359  0013AA                     u7641:
  4360  0013AA  EF96  F009         	goto	l6229
  4361  0013AE                     u7640:
  4362  0013AE                     
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4365  0013AE  07A0               	decf	efgtoa@i& (0+255),f,b
  4366  0013B0  A0D8               	btfss	status,0,c
  4367  0013B2  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4368  0013B4                     
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4371  0013B4  5190               	movf	efgtoa@sign& (0+255),w,b
  4372  0013B6  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4373  0013B8  A4D8               	btfss	status,2,c
  4374  0013BA  EFE1  F009         	goto	u7651
  4375  0013BE  EFE3  F009         	goto	u7650
  4376  0013C2                     u7651:
  4377  0013C2  EFE9  F009         	goto	l6249
  4378  0013C6                     u7650:
  4379  0013C6                     
  4380                           ; BSR set to: 0
  4381  0013C6  0E00               	movlw	0
  4382  0013C8  6F7D               	movwf	(_efgtoa$1975+1)& (0+255),b
  4383  0013CA  0E2B               	movlw	43
  4384  0013CC  6F7C               	movwf	_efgtoa$1975& (0+255),b
  4385  0013CE  EFED  F009         	goto	l6251
  4386  0013D2                     l6249:
  4387                           
  4388                           ; BSR set to: 0
  4389  0013D2  0E00               	movlw	0
  4390  0013D4  6F7D               	movwf	(_efgtoa$1975+1)& (0+255),b
  4391  0013D6  0E2D               	movlw	45
  4392  0013D8  6F7C               	movwf	_efgtoa$1975& (0+255),b
  4393  0013DA                     l6251:
  4394                           
  4395                           ; BSR set to: 0
  4396  0013DA  0E24               	movlw	low _dbuf
  4397  0013DC  25A0               	addwf	efgtoa@i& (0+255),w,b
  4398  0013DE  6ED9               	movwf	fsr2l,c
  4399  0013E0  0E01               	movlw	high _dbuf
  4400  0013E2  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4401  0013E4  6EDA               	movwf	fsr2h,c
  4402  0013E6  C07C  FFDF         	movff	_efgtoa$1975,indf2
  4403  0013EA                     
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4406  0013EA  0794               	decf	efgtoa@w& (0+255),f,b
  4407  0013EC  A0D8               	btfss	status,0,c
  4408  0013EE  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  4409  0013F0                     
  4410                           ; BSR set to: 0
  4411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4412  0013F0  07A0               	decf	efgtoa@i& (0+255),f,b
  4413  0013F2  A0D8               	btfss	status,0,c
  4414  0013F4  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4415  0013F6                     
  4416                           ; BSR set to: 0
  4417  0013F6  0EBF               	movlw	191
  4418  0013F8  6F71               	movwf	??_efgtoa& (0+255),b
  4419  0013FA  0EFF               	movlw	255
  4420  0013FC  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  4421  0013FE  5170               	movf	efgtoa@c& (0+255),w,b
  4422  001400  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  4423  001402  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  4424  001404  5171               	movf	??_efgtoa& (0+255),w,b
  4425  001406  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  4426  001408  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  4427  00140A  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4428  00140C  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  4429  00140E  E10A               	bnz	u7660
  4430  001410  0E1A               	movlw	26
  4431  001412  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  4432  001414  A0D8               	btfss	status,0,c
  4433  001416  EF0F  F00A         	goto	u7661
  4434  00141A  EF12  F00A         	goto	u7660
  4435  00141E                     u7661:
  4436  00141E  0E01               	movlw	1
  4437  001420  EF13  F00A         	goto	u7670
  4438  001424                     u7660:
  4439  001424  0E00               	movlw	0
  4440  001426                     u7670:
  4441  001426  6F80               	movwf	_efgtoa$1977& (0+255),b
  4442  001428  6B81               	clrf	(_efgtoa$1977+1)& (0+255),b
  4443  00142A                     
  4444                           ; BSR set to: 0
  4445  00142A  5180               	movf	_efgtoa$1977& (0+255),w,b
  4446  00142C  1181               	iorwf	(_efgtoa$1977+1)& (0+255),w,b
  4447  00142E  A4D8               	btfss	status,2,c
  4448  001430  EF1C  F00A         	goto	u7681
  4449  001434  EF1E  F00A         	goto	u7680
  4450  001438                     u7681:
  4451  001438  EF24  F00A         	goto	l6265
  4452  00143C                     u7680:
  4453  00143C                     
  4454                           ; BSR set to: 0
  4455  00143C  0E00               	movlw	0
  4456  00143E  6F7F               	movwf	(_efgtoa$1976+1)& (0+255),b
  4457  001440  0E65               	movlw	101
  4458  001442  6F7E               	movwf	_efgtoa$1976& (0+255),b
  4459  001444  EF28  F00A         	goto	l6267
  4460  001448                     l6265:
  4461                           
  4462                           ; BSR set to: 0
  4463  001448  0E00               	movlw	0
  4464  00144A  6F7F               	movwf	(_efgtoa$1976+1)& (0+255),b
  4465  00144C  0E45               	movlw	69
  4466  00144E  6F7E               	movwf	_efgtoa$1976& (0+255),b
  4467  001450                     l6267:
  4468                           
  4469                           ; BSR set to: 0
  4470  001450  0E24               	movlw	low _dbuf
  4471  001452  25A0               	addwf	efgtoa@i& (0+255),w,b
  4472  001454  6ED9               	movwf	fsr2l,c
  4473  001456  0E01               	movlw	high _dbuf
  4474  001458  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4475  00145A  6EDA               	movwf	fsr2h,c
  4476  00145C  C07E  FFDF         	movff	_efgtoa$1976,indf2
  4477  001460                     
  4478                           ; BSR set to: 0
  4479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4480  001460  0794               	decf	efgtoa@w& (0+255),f,b
  4481  001462  A0D8               	btfss	status,0,c
  4482  001464  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  4483  001466                     
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4486  001466  0E24               	movlw	low _dbuf
  4487  001468  25A8               	addwf	efgtoa@n& (0+255),w,b
  4488  00146A  6E05               	movwf	strcpy@dest^0,c
  4489  00146C  0E01               	movlw	high _dbuf
  4490  00146E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4491  001470  6E06               	movwf	(strcpy@dest+1)^0,c
  4492  001472  0E24               	movlw	low _dbuf
  4493  001474  25A0               	addwf	efgtoa@i& (0+255),w,b
  4494  001476  6E07               	movwf	strcpy@src^0,c
  4495  001478  0E01               	movlw	high _dbuf
  4496  00147A  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4497  00147C  6E08               	movwf	(strcpy@src+1)^0,c
  4498  00147E  ECED  F01C         	call	_strcpy	;wreg free
  4499  001482  EFCB  F004         	goto	l6013
  4500  001486                     l1244:
  4501  001486  0012               	return		;funcret
  4502  001488                     __end_of_efgtoa:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _tolower *****************
  4506 ;; Defined at:
  4507 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  c               2   10[COMRAM] int 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  2   10[COMRAM] int 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         2       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        8 bytes
  4526 ;; Hardware stack levels used: 1
  4527 ;; Hardware stack levels required when called: 5
  4528 ;; This function calls:
  4529 ;;		_isupper
  4530 ;; This function is called by:
  4531 ;;		_efgtoa
  4532 ;;		_vfpfcnvrt
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text7
  4537  00397A                     __ptext7:
  4538                           	callstack 0
  4539  00397A                     _tolower:
  4540                           	callstack 22
  4541  00397A  0EBF               	movlw	191
  4542  00397C  6E0D               	movwf	??_tolower^0,c
  4543  00397E  0EFF               	movlw	255
  4544  003980  6E0E               	movwf	(??_tolower+1)^0,c
  4545  003982  C00B  F00F         	movff	tolower@c,??_tolower+2
  4546  003986  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4547  00398A  500D               	movf	??_tolower^0,w,c
  4548  00398C  260F               	addwf	(??_tolower+2)^0,f,c
  4549  00398E  500E               	movf	(??_tolower+1)^0,w,c
  4550  003990  2210               	addwfc	(??_tolower+3)^0,f,c
  4551  003992  5010               	movf	(??_tolower+3)^0,w,c
  4552  003994  E10A               	bnz	u6940
  4553  003996  0E1A               	movlw	26
  4554  003998  5C0F               	subwf	(??_tolower+2)^0,w,c
  4555  00399A  A0D8               	btfss	status,0,c
  4556  00399C  EFD2  F01C         	goto	u6941
  4557  0039A0  EFD5  F01C         	goto	u6940
  4558  0039A4                     u6941:
  4559  0039A4  0E01               	movlw	1
  4560  0039A6  EFD6  F01C         	goto	u6950
  4561  0039AA                     u6940:
  4562  0039AA  0E00               	movlw	0
  4563  0039AC                     u6950:
  4564  0039AC  6E11               	movwf	_tolower$2119^0,c
  4565  0039AE  6A12               	clrf	(_tolower$2119+1)^0,c
  4566  0039B0  5011               	movf	_tolower$2119^0,w,c
  4567  0039B2  1012               	iorwf	(_tolower$2119+1)^0,w,c
  4568  0039B4  B4D8               	btfsc	status,2,c
  4569  0039B6  EFDF  F01C         	goto	u6961
  4570  0039BA  EFE1  F01C         	goto	u6960
  4571  0039BE                     u6961:
  4572  0039BE  EFE8  F01C         	goto	l1471
  4573  0039C2                     u6960:
  4574  0039C2  0E20               	movlw	32
  4575  0039C4  100B               	iorwf	tolower@c^0,w,c
  4576  0039C6  6E0B               	movwf	?_tolower^0,c
  4577  0039C8  500C               	movf	(tolower@c+1)^0,w,c
  4578  0039CA  6E0C               	movwf	(?_tolower+1)^0,c
  4579  0039CC  EFEC  F01C         	goto	l1476
  4580  0039D0                     l1471:
  4581  0039D0  C00B  F00B         	movff	tolower@c,?_tolower
  4582  0039D4  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4583  0039D8                     l1476:
  4584  0039D8  0012               	return		;funcret
  4585  0039DA                     __end_of_tolower:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _isupper *****************
  4589 ;; Defined at:
  4590 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  c               2    4[COMRAM] int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    4[COMRAM] int 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4604 ;;      Params:         2       0       0       0       0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4606 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4607 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4608 ;;Total ram usage:        6 bytes
  4609 ;; Hardware stack levels used: 1
  4610 ;; Hardware stack levels required when called: 4
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_efgtoa
  4615 ;;		_vfpfcnvrt
  4616 ;;		_tolower
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text8
  4621  003D84                     __ptext8:
  4622                           	callstack 0
  4623  003D84                     _isupper:
  4624                           	callstack 22
  4625  003D84  0EBF               	movlw	191
  4626  003D86  6E07               	movwf	??_isupper^0,c
  4627  003D88  0EFF               	movlw	255
  4628  003D8A  6E08               	movwf	(??_isupper+1)^0,c
  4629  003D8C  C005  F009         	movff	isupper@c,??_isupper+2
  4630  003D90  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4631  003D94  5007               	movf	??_isupper^0,w,c
  4632  003D96  2609               	addwf	(??_isupper+2)^0,f,c
  4633  003D98  5008               	movf	(??_isupper+1)^0,w,c
  4634  003D9A  220A               	addwfc	(??_isupper+3)^0,f,c
  4635  003D9C  500A               	movf	(??_isupper+3)^0,w,c
  4636  003D9E  E10A               	bnz	u6090
  4637  003DA0  0E1A               	movlw	26
  4638  003DA2  5C09               	subwf	(??_isupper+2)^0,w,c
  4639  003DA4  A0D8               	btfss	status,0,c
  4640  003DA6  EFD7  F01E         	goto	u6091
  4641  003DAA  EFDA  F01E         	goto	u6090
  4642  003DAE                     u6091:
  4643  003DAE  0E01               	movlw	1
  4644  003DB0  EFDB  F01E         	goto	u6100
  4645  003DB4                     u6090:
  4646  003DB4  0E00               	movlw	0
  4647  003DB6                     u6100:
  4648  003DB6  6E05               	movwf	?_isupper^0,c
  4649  003DB8  6A06               	clrf	(?_isupper+1)^0,c
  4650  003DBA  0012               	return		;funcret
  4651  003DBC                     __end_of_isupper:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _strcpy *****************
  4655 ;; Defined at:
  4656 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4659 ;;		 -> dbuf(80), 
  4660 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4661 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4662 ;;		 -> dbuf(80), 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  d               2   12[COMRAM] PTR unsigned char 
  4665 ;;		 -> dbuf(80), 
  4666 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4667 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4668 ;;		 -> dbuf(80), 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2    4[COMRAM] PTR unsigned char 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         4       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4681 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:       10 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 4
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_efgtoa
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text9
  4693  0039DA                     __ptext9:
  4694                           	callstack 0
  4695  0039DA                     _strcpy:
  4696                           	callstack 22
  4697  0039DA  C007  F00B         	movff	strcpy@src,strcpy@s
  4698  0039DE  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4699  0039E2  C005  F00D         	movff	strcpy@dest,strcpy@d
  4700  0039E6  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4701  0039EA                     l5863:
  4702  0039EA  500B               	movf	strcpy@s^0,w,c
  4703  0039EC  6E09               	movwf	??_strcpy^0,c
  4704  0039EE  500C               	movf	(strcpy@s+1)^0,w,c
  4705  0039F0  6E0A               	movwf	(??_strcpy+1)^0,c
  4706  0039F2  4A0B               	infsnz	strcpy@s^0,f,c
  4707  0039F4  2A0C               	incf	(strcpy@s+1)^0,f,c
  4708  0039F6  C009  FFF6         	movff	??_strcpy,tblptrl
  4709  0039FA  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4710  0039FE  6AF8               	clrf	tblptru,c
  4711  003A00  C00D  FFD9         	movff	strcpy@d,fsr2l
  4712  003A04  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4713  003A08  4A0D               	infsnz	strcpy@d^0,f,c
  4714  003A0A  2A0E               	incf	(strcpy@d+1)^0,f,c
  4715  003A0C  0E07               	movlw	(high __ramtop+-1)
  4716  003A0E  64F7               	cpfsgt	tblptrh,c
  4717  003A10  D003               	bra	u6927
  4718  003A12  0008               	tblrd		*
  4719  003A14  50F5               	movf	tablat,w,c
  4720  003A16  D005               	bra	u6920
  4721  003A18                     u6927:
  4722  003A18  CFF6 FFE1          	movff	tblptrl,fsr1l
  4723  003A1C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4724  003A20  50E7               	movf	indf1,w,c
  4725  003A22                     u6920:
  4726  003A22  6EDF               	movwf	indf2,c
  4727  003A24  50DF               	movf	indf2,w,c
  4728  003A26  A4D8               	btfss	status,2,c
  4729  003A28  EF18  F01D         	goto	u6931
  4730  003A2C  EF1A  F01D         	goto	u6930
  4731  003A30                     u6931:
  4732  003A30  EFF5  F01C         	goto	l5863
  4733  003A34                     u6930:
  4734  003A34  0012               	return		;funcret
  4735  003A36                     __end_of_strcpy:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _pad *****************
  4739 ;; Defined at:
  4740 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4743 ;;		 -> sprintf@f(6), 
  4744 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4745 ;;		 -> dbuf(80), 
  4746 ;;  p               2   26[COMRAM] int 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  w               2   31[COMRAM] int 
  4749 ;;  i               2   29[COMRAM] int 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  2   22[COMRAM] int 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         6       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4761 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4762 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4763 ;;Total ram usage:       11 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; Hardware stack levels required when called: 8
  4766 ;; This function calls:
  4767 ;;		_fputc
  4768 ;;		_fputs
  4769 ;;		_strlen
  4770 ;; This function is called by:
  4771 ;;		_efgtoa
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text10
  4776  0035B8                     __ptext10:
  4777                           	callstack 0
  4778  0035B8                     _pad:
  4779                           	callstack 18
  4780  0035B8                     
  4781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4782  0035B8  0100               	movlb	0	; () banked
  4783  0035BA  A1EC               	btfss	_flags& (0+255),0,b
  4784  0035BC  EFE2  F01A         	goto	u6811
  4785  0035C0  EFE4  F01A         	goto	u6810
  4786  0035C4                     u6811:
  4787  0035C4  EFEE  F01A         	goto	l5821
  4788  0035C8                     u6810:
  4789  0035C8                     
  4790                           ; BSR set to: 0
  4791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4792  0035C8  C019  F010         	movff	pad@buf,fputs@s
  4793  0035CC  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4794  0035D0  C017  F012         	movff	pad@fp,fputs@fp
  4795  0035D4  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4796  0035D8  EC46  F01E         	call	_fputs	;wreg free
  4797  0035DC                     l5821:
  4798                           
  4799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4800  0035DC  BE1C               	btfsc	(pad@p+1)^0,7,c
  4801  0035DE  EFF3  F01A         	goto	u6821
  4802  0035E2  EFF5  F01A         	goto	u6820
  4803  0035E6                     u6821:
  4804  0035E6  EFFB  F01A         	goto	l5825
  4805  0035EA                     u6820:
  4806  0035EA  C01B  F020         	movff	pad@p,pad@w
  4807  0035EE  C01C  F021         	movff	pad@p+1,pad@w+1
  4808  0035F2  EFFF  F01A         	goto	l1221
  4809  0035F6                     l5825:
  4810  0035F6  0E00               	movlw	0
  4811  0035F8  6E21               	movwf	(pad@w+1)^0,c
  4812  0035FA  0E00               	movlw	0
  4813  0035FC  6E20               	movwf	pad@w^0,c
  4814  0035FE                     l1221:
  4815                           
  4816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4817  0035FE  0E00               	movlw	0
  4818  003600  6E1F               	movwf	(pad@i+1)^0,c
  4819  003602  0E00               	movlw	0
  4820  003604  6E1E               	movwf	pad@i^0,c
  4821                           
  4822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4823  003606  EF11  F01B         	goto	l5831
  4824  00360A                     l5827:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4827  00360A  0E00               	movlw	0
  4828  00360C  6E08               	movwf	(fputc@c+1)^0,c
  4829  00360E  0E20               	movlw	32
  4830  003610  6E07               	movwf	fputc@c^0,c
  4831  003612  C017  F009         	movff	pad@fp,fputc@fp
  4832  003616  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4833  00361A  EC77  F01A         	call	_fputc	;wreg free
  4834  00361E                     
  4835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4836  00361E  4A1E               	infsnz	pad@i^0,f,c
  4837  003620  2A1F               	incf	(pad@i+1)^0,f,c
  4838  003622                     l5831:
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4841  003622  5020               	movf	pad@w^0,w,c
  4842  003624  5C1E               	subwf	pad@i^0,w,c
  4843  003626  501F               	movf	(pad@i+1)^0,w,c
  4844  003628  0A80               	xorlw	128
  4845  00362A  6E1D               	movwf	??_pad^0,c
  4846  00362C  5021               	movf	(pad@w+1)^0,w,c
  4847  00362E  0A80               	xorlw	128
  4848  003630  581D               	subwfb	??_pad^0,w,c
  4849  003632  A0D8               	btfss	status,0,c
  4850  003634  EF1E  F01B         	goto	u6831
  4851  003638  EF20  F01B         	goto	u6830
  4852  00363C                     u6831:
  4853  00363C  EF05  F01B         	goto	l5827
  4854  003640                     u6830:
  4855  003640                     
  4856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4857  003640  0100               	movlb	0	; () banked
  4858  003642  B1EC               	btfsc	_flags& (0+255),0,b
  4859  003644  EF26  F01B         	goto	u6841
  4860  003648  EF28  F01B         	goto	u6840
  4861  00364C                     u6841:
  4862  00364C  EF32  F01B         	goto	l5835
  4863  003650                     u6840:
  4864  003650                     
  4865                           ; BSR set to: 0
  4866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4867  003650  C019  F010         	movff	pad@buf,fputs@s
  4868  003654  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4869  003658  C017  F012         	movff	pad@fp,fputs@fp
  4870  00365C  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4871  003660  EC46  F01E         	call	_fputs	;wreg free
  4872  003664                     l5835:
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4875  003664  C019  F005         	movff	pad@buf,strlen@s
  4876  003668  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4877  00366C  EC16  F01F         	call	_strlen	;wreg free
  4878  003670  5020               	movf	pad@w^0,w,c
  4879  003672  2405               	addwf	?_strlen^0,w,c
  4880  003674  6E17               	movwf	?_pad^0,c
  4881  003676  5021               	movf	(pad@w+1)^0,w,c
  4882  003678  2006               	addwfc	(?_strlen+1)^0,w,c
  4883  00367A  6E18               	movwf	(?_pad+1)^0,c
  4884  00367C  0012               	return		;funcret
  4885  00367E                     __end_of_pad:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _strlen *****************
  4889 ;; Defined at:
  4890 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4893 ;;		 -> dbuf(80), 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4896 ;;		 -> dbuf(80), 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  2    4[COMRAM] unsigned int 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4906 ;;      Params:         2       0       0       0       0       0       0       0       0
  4907 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4909 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4910 ;;Total ram usage:        4 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 4
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_pad
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text11
  4921  003E2C                     __ptext11:
  4922                           	callstack 0
  4923  003E2C                     _strlen:
  4924                           	callstack 21
  4925  003E2C  C005  F007         	movff	strlen@s,strlen@a
  4926  003E30  C006  F008         	movff	strlen@s+1,strlen@a+1
  4927  003E34  EF1E  F01F         	goto	l5357
  4928  003E38                     l5355:
  4929  003E38  4A05               	infsnz	strlen@s^0,f,c
  4930  003E3A  2A06               	incf	(strlen@s+1)^0,f,c
  4931  003E3C                     l5357:
  4932  003E3C  C005  FFD9         	movff	strlen@s,fsr2l
  4933  003E40  C006  FFDA         	movff	strlen@s+1,fsr2h
  4934  003E44  50DF               	movf	indf2,w,c
  4935  003E46  A4D8               	btfss	status,2,c
  4936  003E48  EF28  F01F         	goto	u6081
  4937  003E4C  EF2A  F01F         	goto	u6080
  4938  003E50                     u6081:
  4939  003E50  EF1C  F01F         	goto	l5355
  4940  003E54                     u6080:
  4941  003E54  5007               	movf	strlen@a^0,w,c
  4942  003E56  5C05               	subwf	strlen@s^0,w,c
  4943  003E58  6E05               	movwf	?_strlen^0,c
  4944  003E5A  5008               	movf	(strlen@a+1)^0,w,c
  4945  003E5C  5806               	subwfb	(strlen@s+1)^0,w,c
  4946  003E5E  6E06               	movwf	(?_strlen+1)^0,c
  4947  003E60  0012               	return		;funcret
  4948  003E62                     __end_of_strlen:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _fputs *****************
  4952 ;; Defined at:
  4953 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4956 ;;		 -> dbuf(80), 
  4957 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4958 ;;		 -> sprintf@f(6), 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  i               2   20[COMRAM] int 
  4961 ;;  c               1   19[COMRAM] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  2   15[COMRAM] int 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4971 ;;      Params:         4       0       0       0       0       0       0       0       0
  4972 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4974 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4975 ;;Total ram usage:        7 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; Hardware stack levels required when called: 7
  4978 ;; This function calls:
  4979 ;;		_fputc
  4980 ;; This function is called by:
  4981 ;;		_pad
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text12
  4986  003C8C                     __ptext12:
  4987                           	callstack 0
  4988  003C8C                     _fputs:
  4989                           	callstack 18
  4990  003C8C  0E00               	movlw	0
  4991  003C8E  6E16               	movwf	(fputs@i+1)^0,c
  4992  003C90  0E00               	movlw	0
  4993  003C92  6E15               	movwf	fputs@i^0,c
  4994  003C94  EF57  F01E         	goto	l5351
  4995  003C98                     l5347:
  4996  003C98  C014  F007         	movff	fputs@c,fputc@c
  4997  003C9C  6A08               	clrf	(fputc@c+1)^0,c
  4998  003C9E  C012  F009         	movff	fputs@fp,fputc@fp
  4999  003CA2  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  5000  003CA6  EC77  F01A         	call	_fputc	;wreg free
  5001  003CAA  4A15               	infsnz	fputs@i^0,f,c
  5002  003CAC  2A16               	incf	(fputs@i+1)^0,f,c
  5003  003CAE                     l5351:
  5004  003CAE  5015               	movf	fputs@i^0,w,c
  5005  003CB0  2410               	addwf	fputs@s^0,w,c
  5006  003CB2  6ED9               	movwf	fsr2l,c
  5007  003CB4  5016               	movf	(fputs@i+1)^0,w,c
  5008  003CB6  2011               	addwfc	(fputs@s+1)^0,w,c
  5009  003CB8  6EDA               	movwf	fsr2h,c
  5010  003CBA  50DF               	movf	indf2,w,c
  5011  003CBC  6E14               	movwf	fputs@c^0,c
  5012  003CBE  5014               	movf	fputs@c^0,w,c
  5013  003CC0  A4D8               	btfss	status,2,c
  5014  003CC2  EF65  F01E         	goto	u6071
  5015  003CC6  EF67  F01E         	goto	u6070
  5016  003CCA                     u6071:
  5017  003CCA  EF4C  F01E         	goto	l5347
  5018  003CCE                     u6070:
  5019  003CCE  0012               	return		;funcret
  5020  003CD0                     __end_of_fputs:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _fputc *****************
  5024 ;; Defined at:
  5025 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  c               2    6[COMRAM] int 
  5028 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  5029 ;;		 -> sprintf@f(6), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  2    6[COMRAM] int 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5041 ;;      Params:         4       0       0       0       0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5043 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5044 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5045 ;;Total ram usage:        9 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 6
  5048 ;; This function calls:
  5049 ;;		_putch
  5050 ;; This function is called by:
  5051 ;;		_pad
  5052 ;;		_vfpfcnvrt
  5053 ;;		_fputs
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text13
  5058  0034EE                     __ptext13:
  5059                           	callstack 0
  5060  0034EE                     _fputc:
  5061                           	callstack 21
  5062  0034EE  5009               	movf	fputc@fp^0,w,c
  5063  0034F0  100A               	iorwf	(fputc@fp+1)^0,w,c
  5064  0034F2  B4D8               	btfsc	status,2,c
  5065  0034F4  EF7E  F01A         	goto	u5641
  5066  0034F8  EF80  F01A         	goto	u5640
  5067  0034FC                     u5641:
  5068  0034FC  EF89  F01A         	goto	l5133
  5069  003500                     u5640:
  5070  003500  5009               	movf	fputc@fp^0,w,c
  5071  003502  100A               	iorwf	(fputc@fp+1)^0,w,c
  5072  003504  A4D8               	btfss	status,2,c
  5073  003506  EF87  F01A         	goto	u5651
  5074  00350A  EF89  F01A         	goto	u5650
  5075  00350E                     u5651:
  5076  00350E  EF8E  F01A         	goto	l5135
  5077  003512                     u5650:
  5078  003512                     l5133:
  5079  003512  5007               	movf	fputc@c^0,w,c
  5080  003514  EC4B  F020         	call	_putch
  5081  003518  EFDB  F01A         	goto	l1437
  5082  00351C                     l5135:
  5083  00351C  EE20 F004          	lfsr	2,4
  5084  003520  5009               	movf	fputc@fp^0,w,c
  5085  003522  26D9               	addwf	fsr2l,f,c
  5086  003524  500A               	movf	(fputc@fp+1)^0,w,c
  5087  003526  22DA               	addwfc	fsr2h,f,c
  5088  003528  50DE               	movf	postinc2,w,c
  5089  00352A  10DE               	iorwf	postinc2,w,c
  5090  00352C  B4D8               	btfsc	status,2,c
  5091  00352E  EF9B  F01A         	goto	u5661
  5092  003532  EF9D  F01A         	goto	u5660
  5093  003536                     u5661:
  5094  003536  EFB8  F01A         	goto	l5139
  5095  00353A                     u5660:
  5096  00353A  EE20 F004          	lfsr	2,4
  5097  00353E  5009               	movf	fputc@fp^0,w,c
  5098  003540  26D9               	addwf	fsr2l,f,c
  5099  003542  500A               	movf	(fputc@fp+1)^0,w,c
  5100  003544  22DA               	addwfc	fsr2h,f,c
  5101  003546  EE10 F002          	lfsr	1,2
  5102  00354A  5009               	movf	fputc@fp^0,w,c
  5103  00354C  26E1               	addwf	fsr1l,f,c
  5104  00354E  500A               	movf	(fputc@fp+1)^0,w,c
  5105  003550  22E2               	addwfc	fsr1h,f,c
  5106  003552  50DE               	movf	postinc2,w,c
  5107  003554  5CE6               	subwf	postinc1,w,c
  5108  003556  50E6               	movf	postinc1,w,c
  5109  003558  0A80               	xorlw	128
  5110  00355A  6E0F               	movwf	(??_fputc+4)^0,c
  5111  00355C  50DE               	movf	postinc2,w,c
  5112  00355E  0A80               	xorlw	128
  5113  003560  580F               	subwfb	(??_fputc+4)^0,w,c
  5114  003562  B0D8               	btfsc	status,0,c
  5115  003564  EFB6  F01A         	goto	u5671
  5116  003568  EFB8  F01A         	goto	u5670
  5117  00356C                     u5671:
  5118  00356C  EFDB  F01A         	goto	l1437
  5119  003570                     u5670:
  5120  003570                     l5139:
  5121  003570  EE20 F002          	lfsr	2,2
  5122  003574  5009               	movf	fputc@fp^0,w,c
  5123  003576  26D9               	addwf	fsr2l,f,c
  5124  003578  500A               	movf	(fputc@fp+1)^0,w,c
  5125  00357A  22DA               	addwfc	fsr2h,f,c
  5126  00357C  CFDE F00B          	movff	postinc2,??_fputc
  5127  003580  CFDD F00C          	movff	postdec2,??_fputc+1
  5128  003584  C009  FFD9         	movff	fputc@fp,fsr2l
  5129  003588  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  5130  00358C  CFDE F00D          	movff	postinc2,??_fputc+2
  5131  003590  CFDD F00E          	movff	postdec2,??_fputc+3
  5132  003594  500B               	movf	??_fputc^0,w,c
  5133  003596  240D               	addwf	(??_fputc+2)^0,w,c
  5134  003598  6ED9               	movwf	fsr2l,c
  5135  00359A  500C               	movf	(??_fputc+1)^0,w,c
  5136  00359C  200E               	addwfc	(??_fputc+3)^0,w,c
  5137  00359E  6EDA               	movwf	fsr2h,c
  5138  0035A0  C007  FFDF         	movff	fputc@c,indf2
  5139  0035A4  EE20 F002          	lfsr	2,2
  5140  0035A8  5009               	movf	fputc@fp^0,w,c
  5141  0035AA  26D9               	addwf	fsr2l,f,c
  5142  0035AC  500A               	movf	(fputc@fp+1)^0,w,c
  5143  0035AE  22DA               	addwfc	fsr2h,f,c
  5144  0035B0  2ADE               	incf	postinc2,f,c
  5145  0035B2  0E00               	movlw	0
  5146  0035B4  22DD               	addwfc	postdec2,f,c
  5147  0035B6                     l1437:
  5148  0035B6  0012               	return		;funcret
  5149  0035B8                     __end_of_fputc:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _putch *****************
  5153 ;; Defined at:
  5154 ;;		line 154 in file "mcc_generated_files/eusart1.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  txData          1    wreg     unsigned char 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  txData          1    5[COMRAM] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0
  5169 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5171 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5172 ;;Total ram usage:        1 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 5
  5175 ;; This function calls:
  5176 ;;		_EUSART1_Write
  5177 ;; This function is called by:
  5178 ;;		_fputc
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text14
  5183  004096                     __ptext14:
  5184                           	callstack 0
  5185  004096                     _putch:
  5186                           	callstack 21
  5187                           
  5188                           ;incstack = 0
  5189                           ;putch@txData stored from wreg
  5190  004096  6E06               	movwf	putch@txData^0,c
  5191  004098                     
  5192                           ;mcc_generated_files/eusart1.c: 154: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 155: {;mcc_generated_files/eusart1.c: 156:     EUSART1_Write(txData);
  5193  004098  5006               	movf	putch@txData^0,w,c
  5194  00409A  EC29  F020         	call	_EUSART1_Write
  5195  00409E  0012               	return		;funcret
  5196  0040A0                     __end_of_putch:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _floorf *****************
  5200 ;; Defined at:
  5201 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  x               4   76[COMRAM] float 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  u               4    6[BANK0 ] struct .
  5206 ;;  m               4    0[BANK0 ] unsigned long 
  5207 ;;  e               2    4[BANK0 ] int 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  4   76[COMRAM] float 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5217 ;;      Params:         4       0       0       0       0       0       0       0       0
  5218 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5219 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5220 ;;      Totals:        10      10       0       0       0       0       0       0       0
  5221 ;;Total ram usage:       20 bytes
  5222 ;; Hardware stack levels used: 1
  5223 ;; Hardware stack levels required when called: 4
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_efgtoa
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text15
  5232  00285C                     __ptext15:
  5233                           	callstack 0
  5234  00285C                     _floorf:
  5235                           	callstack 22
  5236  00285C  C100  F066         	movff	floorf@F527,floorf@u
  5237  002860  C101  F067         	movff	floorf@F527+1,floorf@u+1
  5238  002864  C102  F068         	movff	floorf@F527+2,floorf@u+2
  5239  002868  C103  F069         	movff	floorf@F527+3,floorf@u+3
  5240  00286C  C04D  F066         	movff	floorf@x,floorf@u
  5241  002870  C04E  F067         	movff	floorf@x+1,floorf@u+1
  5242  002874  C04F  F068         	movff	floorf@x+2,floorf@u+2
  5243  002878  C050  F069         	movff	floorf@x+3,floorf@u+3
  5244  00287C  0E81               	movlw	129
  5245  00287E  6E51               	movwf	??_floorf^0,c
  5246  002880  0EFF               	movlw	255
  5247  002882  6E52               	movwf	(??_floorf+1)^0,c
  5248  002884  C066  F053         	movff	floorf@u,??_floorf+2
  5249  002888  C067  F054         	movff	floorf@u+1,??_floorf+3
  5250  00288C  C068  F055         	movff	floorf@u+2,??_floorf+4
  5251  002890  C069  F056         	movff	floorf@u+3,??_floorf+5
  5252  002894  0E18               	movlw	24
  5253  002896  EF52  F014         	goto	u6970
  5254  00289A                     u6975:
  5255  00289A  90D8               	bcf	status,0,c
  5256  00289C  3256               	rrcf	(??_floorf+5)^0,f,c
  5257  00289E  3255               	rrcf	(??_floorf+4)^0,f,c
  5258  0028A0  3254               	rrcf	(??_floorf+3)^0,f,c
  5259  0028A2  3253               	rrcf	(??_floorf+2)^0,f,c
  5260  0028A4                     u6970:
  5261  0028A4  2EE8               	decfsz	wreg,f,c
  5262  0028A6  EF4D  F014         	goto	u6975
  5263  0028AA  5053               	movf	(??_floorf+2)^0,w,c
  5264  0028AC  2451               	addwf	??_floorf^0,w,c
  5265  0028AE  0100               	movlb	0	; () banked
  5266  0028B0  6F64               	movwf	floorf@e& (0+255),b
  5267  0028B2  0E00               	movlw	0
  5268  0028B4  2052               	addwfc	(??_floorf+1)^0,w,c
  5269  0028B6  6F65               	movwf	(floorf@e+1)& (0+255),b
  5270  0028B8  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5271  0028BA  EF68  F014         	goto	u6981
  5272  0028BE  5165               	movf	(floorf@e+1)& (0+255),w,b
  5273  0028C0  E109               	bnz	u6980
  5274  0028C2  0E17               	movlw	23
  5275  0028C4  5D64               	subwf	floorf@e& (0+255),w,b
  5276  0028C6  A0D8               	btfss	status,0,c
  5277  0028C8  EF68  F014         	goto	u6981
  5278  0028CC  EF6A  F014         	goto	u6980
  5279  0028D0                     u6981:
  5280  0028D0  EF74  F014         	goto	l5881
  5281  0028D4                     u6980:
  5282  0028D4                     l5879:
  5283                           
  5284                           ; BSR set to: 0
  5285  0028D4  C04D  F04D         	movff	floorf@x,?_floorf
  5286  0028D8  C04E  F04E         	movff	floorf@x+1,?_floorf+1
  5287  0028DC  C04F  F04F         	movff	floorf@x+2,?_floorf+2
  5288  0028E0  C050  F050         	movff	floorf@x+3,?_floorf+3
  5289  0028E4  EF38  F015         	goto	l1398
  5290  0028E8                     l5881:
  5291                           
  5292                           ; BSR set to: 0
  5293  0028E8  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5294  0028EA  EF79  F014         	goto	u6991
  5295  0028EE  EF7B  F014         	goto	u6990
  5296  0028F2                     u6991:
  5297  0028F2  EFEC  F014         	goto	l5891
  5298  0028F6                     u6990:
  5299  0028F6                     
  5300                           ; BSR set to: 0
  5301  0028F6  C064  F051         	movff	floorf@e,??_floorf
  5302  0028FA  0EFF               	movlw	255
  5303  0028FC  6E52               	movwf	(??_floorf+1)^0,c
  5304  0028FE  0EFF               	movlw	255
  5305  002900  6E53               	movwf	(??_floorf+2)^0,c
  5306  002902  0E7F               	movlw	127
  5307  002904  6E54               	movwf	(??_floorf+3)^0,c
  5308  002906  0E00               	movlw	0
  5309  002908  6E55               	movwf	(??_floorf+4)^0,c
  5310  00290A                     u7005:
  5311  00290A  6651               	tstfsz	??_floorf^0,c
  5312  00290C  EF8A  F014         	goto	u7006
  5313  002910  EF92  F014         	goto	u7007
  5314  002914                     u7006:
  5315  002914  3455               	rlcf	(??_floorf+4)^0,w,c
  5316  002916  3255               	rrcf	(??_floorf+4)^0,f,c
  5317  002918  3254               	rrcf	(??_floorf+3)^0,f,c
  5318  00291A  3253               	rrcf	(??_floorf+2)^0,f,c
  5319  00291C  3252               	rrcf	(??_floorf+1)^0,f,c
  5320  00291E  2E51               	decfsz	??_floorf^0,f,c
  5321  002920  EF85  F014         	goto	u7005
  5322  002924                     u7007:
  5323  002924  C052  F060         	movff	??_floorf+1,floorf@m
  5324  002928  C053  F061         	movff	??_floorf+2,floorf@m+1
  5325  00292C  C054  F062         	movff	??_floorf+3,floorf@m+2
  5326  002930  C055  F063         	movff	??_floorf+4,floorf@m+3
  5327  002934  0100               	movlb	0	; () banked
  5328  002936  5160               	movf	floorf@m& (0+255),w,b
  5329  002938  1566               	andwf	floorf@u& (0+255),w,b
  5330  00293A  6E51               	movwf	??_floorf^0,c
  5331  00293C  5161               	movf	(floorf@m+1)& (0+255),w,b
  5332  00293E  1567               	andwf	(floorf@u+1)& (0+255),w,b
  5333  002940  6E52               	movwf	(??_floorf+1)^0,c
  5334  002942  5162               	movf	(floorf@m+2)& (0+255),w,b
  5335  002944  1568               	andwf	(floorf@u+2)& (0+255),w,b
  5336  002946  6E53               	movwf	(??_floorf+2)^0,c
  5337  002948  5163               	movf	(floorf@m+3)& (0+255),w,b
  5338  00294A  1569               	andwf	(floorf@u+3)& (0+255),w,b
  5339  00294C  6E54               	movwf	(??_floorf+3)^0,c
  5340  00294E  5051               	movf	??_floorf^0,w,c
  5341  002950  1052               	iorwf	(??_floorf+1)^0,w,c
  5342  002952  1053               	iorwf	(??_floorf+2)^0,w,c
  5343  002954  1054               	iorwf	(??_floorf+3)^0,w,c
  5344  002956  A4D8               	btfss	status,2,c
  5345  002958  EFB0  F014         	goto	u7011
  5346  00295C  EFB2  F014         	goto	u7010
  5347  002960                     u7011:
  5348  002960  EFB4  F014         	goto	l5887
  5349  002964                     u7010:
  5350  002964  EF6A  F014         	goto	l5879
  5351  002968                     l5887:
  5352                           
  5353                           ; BSR set to: 0
  5354  002968  C066  F051         	movff	floorf@u,??_floorf
  5355  00296C  C067  F052         	movff	floorf@u+1,??_floorf+1
  5356  002970  C068  F053         	movff	floorf@u+2,??_floorf+2
  5357  002974  C069  F054         	movff	floorf@u+3,??_floorf+3
  5358  002978  0E20               	movlw	32
  5359  00297A  EFC4  F014         	goto	u7020
  5360  00297E                     u7025:
  5361  00297E  90D8               	bcf	status,0,c
  5362  002980  3254               	rrcf	(??_floorf+3)^0,f,c
  5363  002982  3253               	rrcf	(??_floorf+2)^0,f,c
  5364  002984  3252               	rrcf	(??_floorf+1)^0,f,c
  5365  002986  3251               	rrcf	??_floorf^0,f,c
  5366  002988                     u7020:
  5367  002988  2EE8               	decfsz	wreg,f,c
  5368  00298A  EFBF  F014         	goto	u7025
  5369  00298E  5051               	movf	??_floorf^0,w,c
  5370  002990  1052               	iorwf	(??_floorf+1)^0,w,c
  5371  002992  1053               	iorwf	(??_floorf+2)^0,w,c
  5372  002994  1054               	iorwf	(??_floorf+3)^0,w,c
  5373  002996  B4D8               	btfsc	status,2,c
  5374  002998  EFD0  F014         	goto	u7031
  5375  00299C  EFD2  F014         	goto	u7030
  5376  0029A0                     u7031:
  5377  0029A0  EFDA  F014         	goto	l1401
  5378  0029A4                     u7030:
  5379  0029A4                     
  5380                           ; BSR set to: 0
  5381  0029A4  5160               	movf	floorf@m& (0+255),w,b
  5382  0029A6  2766               	addwf	floorf@u& (0+255),f,b
  5383  0029A8  5161               	movf	(floorf@m+1)& (0+255),w,b
  5384  0029AA  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  5385  0029AC  5162               	movf	(floorf@m+2)& (0+255),w,b
  5386  0029AE  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  5387  0029B0  5163               	movf	(floorf@m+3)& (0+255),w,b
  5388  0029B2  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  5389  0029B4                     l1401:
  5390                           
  5391                           ; BSR set to: 0
  5392  0029B4  1D60               	comf	floorf@m& (0+255),w,b
  5393  0029B6  6E51               	movwf	??_floorf^0,c
  5394  0029B8  1D61               	comf	(floorf@m+1)& (0+255),w,b
  5395  0029BA  6E52               	movwf	(??_floorf+1)^0,c
  5396  0029BC  1D62               	comf	(floorf@m+2)& (0+255),w,b
  5397  0029BE  6E53               	movwf	(??_floorf+2)^0,c
  5398  0029C0  1D63               	comf	(floorf@m+3)& (0+255),w,b
  5399  0029C2  6E54               	movwf	(??_floorf+3)^0,c
  5400  0029C4  5051               	movf	??_floorf^0,w,c
  5401  0029C6  1766               	andwf	floorf@u& (0+255),f,b
  5402  0029C8  5052               	movf	(??_floorf+1)^0,w,c
  5403  0029CA  1767               	andwf	(floorf@u+1)& (0+255),f,b
  5404  0029CC  5053               	movf	(??_floorf+2)^0,w,c
  5405  0029CE  1768               	andwf	(floorf@u+2)& (0+255),f,b
  5406  0029D0  5054               	movf	(??_floorf+3)^0,w,c
  5407  0029D2  1769               	andwf	(floorf@u+3)& (0+255),f,b
  5408  0029D4  EF30  F015         	goto	l5899
  5409  0029D8                     l5891:
  5410                           
  5411                           ; BSR set to: 0
  5412  0029D8  C066  F051         	movff	floorf@u,??_floorf
  5413  0029DC  C067  F052         	movff	floorf@u+1,??_floorf+1
  5414  0029E0  C068  F053         	movff	floorf@u+2,??_floorf+2
  5415  0029E4  C069  F054         	movff	floorf@u+3,??_floorf+3
  5416  0029E8  0E20               	movlw	32
  5417  0029EA  EFFC  F014         	goto	u7040
  5418  0029EE                     u7045:
  5419  0029EE  90D8               	bcf	status,0,c
  5420  0029F0  3254               	rrcf	(??_floorf+3)^0,f,c
  5421  0029F2  3253               	rrcf	(??_floorf+2)^0,f,c
  5422  0029F4  3252               	rrcf	(??_floorf+1)^0,f,c
  5423  0029F6  3251               	rrcf	??_floorf^0,f,c
  5424  0029F8                     u7040:
  5425  0029F8  2EE8               	decfsz	wreg,f,c
  5426  0029FA  EFF7  F014         	goto	u7045
  5427  0029FE  5051               	movf	??_floorf^0,w,c
  5428  002A00  1052               	iorwf	(??_floorf+1)^0,w,c
  5429  002A02  1053               	iorwf	(??_floorf+2)^0,w,c
  5430  002A04  1054               	iorwf	(??_floorf+3)^0,w,c
  5431  002A06  A4D8               	btfss	status,2,c
  5432  002A08  EF08  F015         	goto	u7051
  5433  002A0C  EF0A  F015         	goto	u7050
  5434  002A10                     u7051:
  5435  002A10  EF14  F015         	goto	l5895
  5436  002A14                     u7050:
  5437  002A14                     
  5438                           ; BSR set to: 0
  5439  002A14  0E00               	movlw	0
  5440  002A16  6F66               	movwf	floorf@u& (0+255),b
  5441  002A18  0E00               	movlw	0
  5442  002A1A  6F67               	movwf	(floorf@u+1)& (0+255),b
  5443  002A1C  0E00               	movlw	0
  5444  002A1E  6F68               	movwf	(floorf@u+2)& (0+255),b
  5445  002A20  0E00               	movlw	0
  5446  002A22  6F69               	movwf	(floorf@u+3)& (0+255),b
  5447  002A24  EF30  F015         	goto	l5899
  5448  002A28                     l5895:
  5449                           
  5450                           ; BSR set to: 0
  5451  002A28  90D8               	bcf	status,0,c
  5452  002A2A  3566               	rlcf	floorf@u& (0+255),w,b
  5453  002A2C  6E51               	movwf	??_floorf^0,c
  5454  002A2E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  5455  002A30  6E52               	movwf	(??_floorf+1)^0,c
  5456  002A32  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  5457  002A34  6E53               	movwf	(??_floorf+2)^0,c
  5458  002A36  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  5459  002A38  6E54               	movwf	(??_floorf+3)^0,c
  5460  002A3A  5051               	movf	??_floorf^0,w,c
  5461  002A3C  1052               	iorwf	(??_floorf+1)^0,w,c
  5462  002A3E  1053               	iorwf	(??_floorf+2)^0,w,c
  5463  002A40  1054               	iorwf	(??_floorf+3)^0,w,c
  5464  002A42  B4D8               	btfsc	status,2,c
  5465  002A44  EF26  F015         	goto	u7061
  5466  002A48  EF28  F015         	goto	u7060
  5467  002A4C                     u7061:
  5468  002A4C  EF30  F015         	goto	l5899
  5469  002A50                     u7060:
  5470  002A50                     
  5471                           ; BSR set to: 0
  5472  002A50  0E00               	movlw	0
  5473  002A52  6F66               	movwf	floorf@u& (0+255),b
  5474  002A54  0E00               	movlw	0
  5475  002A56  6F67               	movwf	(floorf@u+1)& (0+255),b
  5476  002A58  0E80               	movlw	128
  5477  002A5A  6F68               	movwf	(floorf@u+2)& (0+255),b
  5478  002A5C  0EBF               	movlw	191
  5479  002A5E  6F69               	movwf	(floorf@u+3)& (0+255),b
  5480  002A60                     l5899:
  5481                           
  5482                           ; BSR set to: 0
  5483  002A60  C066  F04D         	movff	floorf@u,?_floorf
  5484  002A64  C067  F04E         	movff	floorf@u+1,?_floorf+1
  5485  002A68  C068  F04F         	movff	floorf@u+2,?_floorf+2
  5486  002A6C  C069  F050         	movff	floorf@u+3,?_floorf+3
  5487  002A70                     l1398:
  5488                           
  5489                           ; BSR set to: 0
  5490  002A70  0012               	return		;funcret
  5491  002A72                     __end_of_floorf:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function ___fpclassifyf *****************
  5495 ;; Defined at:
  5496 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  x               4    4[COMRAM] float 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  u               4   14[COMRAM] struct .
  5501 ;;  e               2   12[COMRAM] int 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  2    4[COMRAM] int 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5511 ;;      Params:         4       0       0       0       0       0       0       0       0
  5512 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5513 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5514 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5515 ;;Total ram usage:       14 bytes
  5516 ;; Hardware stack levels used: 1
  5517 ;; Hardware stack levels required when called: 4
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_efgtoa
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text16
  5526  00331A                     __ptext16:
  5527                           	callstack 0
  5528  00331A                     ___fpclassifyf:
  5529                           	callstack 22
  5530  00331A  C104  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5531  00331E  C105  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5532  003322  C106  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5533  003326  C107  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5534  00332A  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5535  00332E  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5536  003332  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5537  003336  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5538  00333A  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5539  00333E  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5540  003342  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5541  003346  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5542  00334A  0E18               	movlw	24
  5543  00334C  EFAD  F019         	goto	u6850
  5544  003350                     u6855:
  5545  003350  90D8               	bcf	status,0,c
  5546  003352  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5547  003354  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5548  003356  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5549  003358  3209               	rrcf	??___fpclassifyf^0,f,c
  5550  00335A                     u6850:
  5551  00335A  2EE8               	decfsz	wreg,f,c
  5552  00335C  EFA8  F019         	goto	u6855
  5553  003360  5009               	movf	??___fpclassifyf^0,w,c
  5554  003362  6E0D               	movwf	___fpclassifyf@e^0,c
  5555  003364  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5556  003366  500D               	movf	___fpclassifyf@e^0,w,c
  5557  003368  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5558  00336A  A4D8               	btfss	status,2,c
  5559  00336C  EFBA  F019         	goto	u6861
  5560  003370  EFBC  F019         	goto	u6860
  5561  003374                     u6861:
  5562  003374  EFDC  F019         	goto	l5851
  5563  003378                     u6860:
  5564  003378  90D8               	bcf	status,0,c
  5565  00337A  340F               	rlcf	___fpclassifyf@u^0,w,c
  5566  00337C  6E09               	movwf	??___fpclassifyf^0,c
  5567  00337E  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5568  003380  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5569  003382  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5570  003384  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5571  003386  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5572  003388  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5573  00338A  5009               	movf	??___fpclassifyf^0,w,c
  5574  00338C  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5575  00338E  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5576  003390  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5577  003392  A4D8               	btfss	status,2,c
  5578  003394  EFCE  F019         	goto	u6871
  5579  003398  EFD0  F019         	goto	u6870
  5580  00339C                     u6871:
  5581  00339C  EFD6  F019         	goto	l5847
  5582  0033A0                     u6870:
  5583  0033A0  0E00               	movlw	0
  5584  0033A2  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5585  0033A4  0E02               	movlw	2
  5586  0033A6  6E05               	movwf	?___fpclassifyf^0,c
  5587  0033A8  EF0B  F01A         	goto	l1360
  5588  0033AC                     l5847:
  5589  0033AC  0E00               	movlw	0
  5590  0033AE  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5591  0033B0  0E03               	movlw	3
  5592  0033B2  6E05               	movwf	?___fpclassifyf^0,c
  5593  0033B4  EF0B  F01A         	goto	l1360
  5594  0033B8                     l5851:
  5595  0033B8  280D               	incf	___fpclassifyf@e^0,w,c
  5596  0033BA  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5597  0033BC  A4D8               	btfss	status,2,c
  5598  0033BE  EFE3  F019         	goto	u6881
  5599  0033C2  EFE5  F019         	goto	u6880
  5600  0033C6                     u6881:
  5601  0033C6  EF07  F01A         	goto	l5857
  5602  0033CA                     u6880:
  5603  0033CA  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5604  0033CE  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5605  0033D2  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5606  0033D6  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5607  0033DA  0E09               	movlw	9
  5608  0033DC                     u6895:
  5609  0033DC  90D8               	bcf	status,0,c
  5610  0033DE  3609               	rlcf	??___fpclassifyf^0,f,c
  5611  0033E0  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5612  0033E2  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5613  0033E4  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5614  0033E6  2EE8               	decfsz	wreg,f,c
  5615  0033E8  EFEE  F019         	goto	u6895
  5616  0033EC  5009               	movf	??___fpclassifyf^0,w,c
  5617  0033EE  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5618  0033F0  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5619  0033F2  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5620  0033F4  B4D8               	btfsc	status,2,c
  5621  0033F6  EFFF  F019         	goto	u6901
  5622  0033FA  EF02  F01A         	goto	u6900
  5623  0033FE                     u6901:
  5624  0033FE  0E01               	movlw	1
  5625  003400  EF03  F01A         	goto	u6910
  5626  003404                     u6900:
  5627  003404  0E00               	movlw	0
  5628  003406                     u6910:
  5629  003406  6E05               	movwf	?___fpclassifyf^0,c
  5630  003408  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5631  00340A  EF0B  F01A         	goto	l1360
  5632  00340E                     l5857:
  5633  00340E  0E00               	movlw	0
  5634  003410  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5635  003412  0E04               	movlw	4
  5636  003414  6E05               	movwf	?___fpclassifyf^0,c
  5637  003416                     l1360:
  5638  003416  0012               	return		;funcret
  5639  003418                     __end_of___fpclassifyf:
  5640                           	callstack 0
  5641                           
  5642 ;; *************** function ___fltol *****************
  5643 ;; Defined at:
  5644 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  f1              4    4[COMRAM] int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  exp1            1   13[COMRAM] unsigned char 
  5649 ;;  sign1           1   12[COMRAM] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  4    4[COMRAM] long 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5659 ;;      Params:         4       0       0       0       0       0       0       0       0
  5660 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5661 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5662 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5663 ;;Total ram usage:       10 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 4
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_efgtoa
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text17
  5674  003110                     __ptext17:
  5675                           	callstack 0
  5676  003110                     ___fltol:
  5677                           	callstack 22
  5678  003110  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5679  003112  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5680  003114  6E0E               	movwf	___fltol@exp1^0,c
  5681  003116  500E               	movf	___fltol@exp1^0,w,c
  5682  003118  A4D8               	btfss	status,2,c
  5683  00311A  EF91  F018         	goto	u6741
  5684  00311E  EF93  F018         	goto	u6740
  5685  003122                     u6741:
  5686  003122  EF9D  F018         	goto	l5779
  5687  003126                     u6740:
  5688  003126                     l5775:
  5689  003126  0E00               	movlw	0
  5690  003128  6E05               	movwf	?___fltol^0,c
  5691  00312A  0E00               	movlw	0
  5692  00312C  6E06               	movwf	(?___fltol+1)^0,c
  5693  00312E  0E00               	movlw	0
  5694  003130  6E07               	movwf	(?___fltol+2)^0,c
  5695  003132  0E00               	movlw	0
  5696  003134  6E08               	movwf	(?___fltol+3)^0,c
  5697  003136  EF0A  F019         	goto	l799
  5698  00313A                     l5779:
  5699  00313A  C005  F009         	movff	___fltol@f1,??___fltol
  5700  00313E  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5701  003142  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5702  003146  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5703  00314A  0E20               	movlw	32
  5704  00314C  EFAD  F018         	goto	u6750
  5705  003150                     u6755:
  5706  003150  90D8               	bcf	status,0,c
  5707  003152  320C               	rrcf	(??___fltol+3)^0,f,c
  5708  003154  320B               	rrcf	(??___fltol+2)^0,f,c
  5709  003156  320A               	rrcf	(??___fltol+1)^0,f,c
  5710  003158  3209               	rrcf	??___fltol^0,f,c
  5711  00315A                     u6750:
  5712  00315A  2EE8               	decfsz	wreg,f,c
  5713  00315C  EFA8  F018         	goto	u6755
  5714  003160  5009               	movf	??___fltol^0,w,c
  5715  003162  6E0D               	movwf	___fltol@sign1^0,c
  5716  003164  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5717  003166  0EFF               	movlw	255
  5718  003168  1605               	andwf	___fltol@f1^0,f,c
  5719  00316A  0EFF               	movlw	255
  5720  00316C  1606               	andwf	(___fltol@f1+1)^0,f,c
  5721  00316E  0EFF               	movlw	255
  5722  003170  1607               	andwf	(___fltol@f1+2)^0,f,c
  5723  003172  0E00               	movlw	0
  5724  003174  1608               	andwf	(___fltol@f1+3)^0,f,c
  5725  003176  0E96               	movlw	150
  5726  003178  5E0E               	subwf	___fltol@exp1^0,f,c
  5727  00317A  BE0E               	btfsc	___fltol@exp1^0,7,c
  5728  00317C  EFC4  F018         	goto	u6760
  5729  003180  EFC2  F018         	goto	u6761
  5730  003184                     u6761:
  5731  003184  EFDA  F018         	goto	l5799
  5732  003188                     u6760:
  5733  003188  500E               	movf	___fltol@exp1^0,w,c
  5734  00318A  0A80               	xorlw	128
  5735  00318C  0F97               	addlw	151
  5736  00318E  B0D8               	btfsc	status,0,c
  5737  003190  EFCC  F018         	goto	u6771
  5738  003194  EFCE  F018         	goto	u6770
  5739  003198                     u6771:
  5740  003198  EFD0  F018         	goto	l5795
  5741  00319C                     u6770:
  5742  00319C  EF93  F018         	goto	l5775
  5743  0031A0                     l5795:
  5744  0031A0  90D8               	bcf	status,0,c
  5745  0031A2  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5746  0031A4  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5747  0031A6  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5748  0031A8  3205               	rrcf	___fltol@f1^0,f,c
  5749  0031AA  3E0E               	incfsz	___fltol@exp1^0,f,c
  5750  0031AC  EFD0  F018         	goto	l5795
  5751  0031B0  EFF2  F018         	goto	l5809
  5752  0031B4                     l5799:
  5753  0031B4  0E1F               	movlw	31
  5754  0031B6  640E               	cpfsgt	___fltol@exp1^0,c
  5755  0031B8  EFE0  F018         	goto	u6781
  5756  0031BC  EFE2  F018         	goto	u6780
  5757  0031C0                     u6781:
  5758  0031C0  EFEA  F018         	goto	l5807
  5759  0031C4                     u6780:
  5760  0031C4  EF93  F018         	goto	l5775
  5761  0031C8                     l5805:
  5762  0031C8  90D8               	bcf	status,0,c
  5763  0031CA  3605               	rlcf	___fltol@f1^0,f,c
  5764  0031CC  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5765  0031CE  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5766  0031D0  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5767  0031D2  060E               	decf	___fltol@exp1^0,f,c
  5768  0031D4                     l5807:
  5769  0031D4  500E               	movf	___fltol@exp1^0,w,c
  5770  0031D6  A4D8               	btfss	status,2,c
  5771  0031D8  EFF0  F018         	goto	u6791
  5772  0031DC  EFF2  F018         	goto	u6790
  5773  0031E0                     u6791:
  5774  0031E0  EFE4  F018         	goto	l5805
  5775  0031E4                     u6790:
  5776  0031E4                     l5809:
  5777  0031E4  500D               	movf	___fltol@sign1^0,w,c
  5778  0031E6  B4D8               	btfsc	status,2,c
  5779  0031E8  EFF8  F018         	goto	u6801
  5780  0031EC  EFFA  F018         	goto	u6800
  5781  0031F0                     u6801:
  5782  0031F0  EF02  F019         	goto	l5813
  5783  0031F4                     u6800:
  5784  0031F4  1E08               	comf	(___fltol@f1+3)^0,f,c
  5785  0031F6  1E07               	comf	(___fltol@f1+2)^0,f,c
  5786  0031F8  1E06               	comf	(___fltol@f1+1)^0,f,c
  5787  0031FA  6C05               	negf	___fltol@f1^0,c
  5788  0031FC  0E00               	movlw	0
  5789  0031FE  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5790  003200  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5791  003202  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5792  003204                     l5813:
  5793  003204  C005  F005         	movff	___fltol@f1,?___fltol
  5794  003208  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5795  00320C  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5796  003210  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5797  003214                     l799:
  5798  003214  0012               	return		;funcret
  5799  003216                     __end_of___fltol:
  5800                           	callstack 0
  5801                           
  5802 ;; *************** function ___flneg *****************
  5803 ;; Defined at:
  5804 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  f1              4    4[COMRAM] long 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  4    4[COMRAM] long 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5818 ;;      Params:         4       0       0       0       0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5821 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5822 ;;Total ram usage:        4 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 4
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_efgtoa
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text18
  5833  003DBC                     __ptext18:
  5834                           	callstack 0
  5835  003DBC                     ___flneg:
  5836                           	callstack 22
  5837  003DBC  5005               	movf	___flneg@f1^0,w,c
  5838  003DBE  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5839  003DC0  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5840  003DC2  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5841  003DC4  B4D8               	btfsc	status,2,c
  5842  003DC6  EFE7  F01E         	goto	u6731
  5843  003DCA  EFE9  F01E         	goto	u6730
  5844  003DCE                     u6731:
  5845  003DCE  EFF1  F01E         	goto	l5769
  5846  003DD2                     u6730:
  5847  003DD2  0E00               	movlw	0
  5848  003DD4  1A05               	xorwf	___flneg@f1^0,f,c
  5849  003DD6  0E00               	movlw	0
  5850  003DD8  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5851  003DDA  0E00               	movlw	0
  5852  003DDC  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5853  003DDE  0E80               	movlw	128
  5854  003DE0  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5855  003DE2                     l5769:
  5856  003DE2  C005  F005         	movff	___flneg@f1,?___flneg
  5857  003DE6  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5858  003DEA  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5859  003DEE  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5860  003DF2  0012               	return		;funcret
  5861  003DF4                     __end_of___flneg:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function ___fleq *****************
  5865 ;; Defined at:
  5866 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  ff1             4    4[COMRAM] long 
  5869 ;;  ff2             4    8[COMRAM] long 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;		None               void
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5881 ;;      Params:         8       0       0       0       0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5883 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5884 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5885 ;;Total ram usage:       12 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 4
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_efgtoa
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text19
  5896  0037F2                     __ptext19:
  5897                           	callstack 0
  5898  0037F2                     ___fleq:
  5899                           	callstack 22
  5900  0037F2  0E00               	movlw	0
  5901  0037F4  1405               	andwf	___fleq@ff1^0,w,c
  5902  0037F6  6E0D               	movwf	??___fleq^0,c
  5903  0037F8  0E00               	movlw	0
  5904  0037FA  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5905  0037FC  6E0E               	movwf	(??___fleq+1)^0,c
  5906  0037FE  0E80               	movlw	128
  5907  003800  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5908  003802  6E0F               	movwf	(??___fleq+2)^0,c
  5909  003804  0E7F               	movlw	127
  5910  003806  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5911  003808  6E10               	movwf	(??___fleq+3)^0,c
  5912  00380A  500D               	movf	??___fleq^0,w,c
  5913  00380C  100E               	iorwf	(??___fleq+1)^0,w,c
  5914  00380E  100F               	iorwf	(??___fleq+2)^0,w,c
  5915  003810  1010               	iorwf	(??___fleq+3)^0,w,c
  5916  003812  A4D8               	btfss	status,2,c
  5917  003814  EF0E  F01C         	goto	u6651
  5918  003818  EF10  F01C         	goto	u6650
  5919  00381C                     u6651:
  5920  00381C  EF18  F01C         	goto	l5731
  5921  003820                     u6650:
  5922  003820  0E00               	movlw	0
  5923  003822  6E05               	movwf	___fleq@ff1^0,c
  5924  003824  0E00               	movlw	0
  5925  003826  6E06               	movwf	(___fleq@ff1+1)^0,c
  5926  003828  0E00               	movlw	0
  5927  00382A  6E07               	movwf	(___fleq@ff1+2)^0,c
  5928  00382C  0E00               	movlw	0
  5929  00382E  6E08               	movwf	(___fleq@ff1+3)^0,c
  5930  003830                     l5731:
  5931  003830  0E00               	movlw	0
  5932  003832  1409               	andwf	___fleq@ff2^0,w,c
  5933  003834  6E0D               	movwf	??___fleq^0,c
  5934  003836  0E00               	movlw	0
  5935  003838  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5936  00383A  6E0E               	movwf	(??___fleq+1)^0,c
  5937  00383C  0E80               	movlw	128
  5938  00383E  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5939  003840  6E0F               	movwf	(??___fleq+2)^0,c
  5940  003842  0E7F               	movlw	127
  5941  003844  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5942  003846  6E10               	movwf	(??___fleq+3)^0,c
  5943  003848  500D               	movf	??___fleq^0,w,c
  5944  00384A  100E               	iorwf	(??___fleq+1)^0,w,c
  5945  00384C  100F               	iorwf	(??___fleq+2)^0,w,c
  5946  00384E  1010               	iorwf	(??___fleq+3)^0,w,c
  5947  003850  A4D8               	btfss	status,2,c
  5948  003852  EF2D  F01C         	goto	u6661
  5949  003856  EF2F  F01C         	goto	u6660
  5950  00385A                     u6661:
  5951  00385A  EF37  F01C         	goto	l5735
  5952  00385E                     u6660:
  5953  00385E  0E00               	movlw	0
  5954  003860  6E09               	movwf	___fleq@ff2^0,c
  5955  003862  0E00               	movlw	0
  5956  003864  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5957  003866  0E00               	movlw	0
  5958  003868  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5959  00386A  0E00               	movlw	0
  5960  00386C  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5961  00386E                     l5735:
  5962  00386E  5009               	movf	___fleq@ff2^0,w,c
  5963  003870  1805               	xorwf	___fleq@ff1^0,w,c
  5964  003872  E10F               	bnz	u6670
  5965  003874  500A               	movf	(___fleq@ff2+1)^0,w,c
  5966  003876  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5967  003878  E10C               	bnz	u6670
  5968  00387A  500B               	movf	(___fleq@ff2+2)^0,w,c
  5969  00387C  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5970  00387E  E109               	bnz	u6670
  5971  003880  500C               	movf	(___fleq@ff2+3)^0,w,c
  5972  003882  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5973  003884  B4D8               	btfsc	status,2,c
  5974  003886  EF47  F01C         	goto	u6671
  5975  00388A  EF49  F01C         	goto	u6670
  5976  00388E                     u6671:
  5977  00388E  EF4C  F01C         	goto	l5739
  5978  003892                     u6670:
  5979  003892  90D8               	bcf	status,0,c
  5980  003894  EF4D  F01C         	goto	l761
  5981  003898                     l5739:
  5982  003898  80D8               	bsf	status,0,c
  5983  00389A                     l761:
  5984  00389A  0012               	return		;funcret
  5985  00389C                     __end_of___fleq:
  5986                           	callstack 0
  5987                           
  5988 ;; *************** function ___awmod *****************
  5989 ;; Defined at:
  5990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  dividend        2    4[COMRAM] int 
  5993 ;;  divisor         2    6[COMRAM] int 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  sign            1    9[COMRAM] unsigned char 
  5996 ;;  counter         1    8[COMRAM] unsigned char 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2    4[COMRAM] int 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6006 ;;      Params:         4       0       0       0       0       0       0       0       0
  6007 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6009 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6010 ;;Total ram usage:        6 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 4
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_efgtoa
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text20
  6021  003742                     __ptext20:
  6022                           	callstack 0
  6023  003742                     ___awmod:
  6024                           	callstack 22
  6025  003742  0E00               	movlw	0
  6026  003744  6E0A               	movwf	___awmod@sign^0,c
  6027  003746  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  6028  003748  EFAA  F01B         	goto	u6590
  6029  00374C  EFA8  F01B         	goto	u6591
  6030  003750                     u6591:
  6031  003750  EFB0  F01B         	goto	l5699
  6032  003754                     u6590:
  6033  003754  6C05               	negf	___awmod@dividend^0,c
  6034  003756  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6035  003758  B0D8               	btfsc	status,0,c
  6036  00375A  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6037  00375C  0E01               	movlw	1
  6038  00375E  6E0A               	movwf	___awmod@sign^0,c
  6039  003760                     l5699:
  6040  003760  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  6041  003762  EFB7  F01B         	goto	u6600
  6042  003766  EFB5  F01B         	goto	u6601
  6043  00376A                     u6601:
  6044  00376A  EFBB  F01B         	goto	l5703
  6045  00376E                     u6600:
  6046  00376E  6C07               	negf	___awmod@divisor^0,c
  6047  003770  1E08               	comf	(___awmod@divisor+1)^0,f,c
  6048  003772  B0D8               	btfsc	status,0,c
  6049  003774  2A08               	incf	(___awmod@divisor+1)^0,f,c
  6050  003776                     l5703:
  6051  003776  5007               	movf	___awmod@divisor^0,w,c
  6052  003778  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  6053  00377A  B4D8               	btfsc	status,2,c
  6054  00377C  EFC2  F01B         	goto	u6611
  6055  003780  EFC4  F01B         	goto	u6610
  6056  003784                     u6611:
  6057  003784  EFE8  F01B         	goto	l5719
  6058  003788                     u6610:
  6059  003788  0E01               	movlw	1
  6060  00378A  6E09               	movwf	___awmod@counter^0,c
  6061  00378C  EFCC  F01B         	goto	l5709
  6062  003790                     l5707:
  6063  003790  90D8               	bcf	status,0,c
  6064  003792  3607               	rlcf	___awmod@divisor^0,f,c
  6065  003794  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  6066  003796  2A09               	incf	___awmod@counter^0,f,c
  6067  003798                     l5709:
  6068  003798  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  6069  00379A  EFD1  F01B         	goto	u6621
  6070  00379E  EFD3  F01B         	goto	u6620
  6071  0037A2                     u6621:
  6072  0037A2  EFC8  F01B         	goto	l5707
  6073  0037A6                     u6620:
  6074  0037A6                     l5711:
  6075  0037A6  5007               	movf	___awmod@divisor^0,w,c
  6076  0037A8  5C05               	subwf	___awmod@dividend^0,w,c
  6077  0037AA  5008               	movf	(___awmod@divisor+1)^0,w,c
  6078  0037AC  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  6079  0037AE  A0D8               	btfss	status,0,c
  6080  0037B0  EFDC  F01B         	goto	u6631
  6081  0037B4  EFDE  F01B         	goto	u6630
  6082  0037B8                     u6631:
  6083  0037B8  EFE2  F01B         	goto	l5715
  6084  0037BC                     u6630:
  6085  0037BC  5007               	movf	___awmod@divisor^0,w,c
  6086  0037BE  5E05               	subwf	___awmod@dividend^0,f,c
  6087  0037C0  5008               	movf	(___awmod@divisor+1)^0,w,c
  6088  0037C2  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  6089  0037C4                     l5715:
  6090  0037C4  90D8               	bcf	status,0,c
  6091  0037C6  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  6092  0037C8  3207               	rrcf	___awmod@divisor^0,f,c
  6093  0037CA  2E09               	decfsz	___awmod@counter^0,f,c
  6094  0037CC  EFD3  F01B         	goto	l5711
  6095  0037D0                     l5719:
  6096  0037D0  500A               	movf	___awmod@sign^0,w,c
  6097  0037D2  B4D8               	btfsc	status,2,c
  6098  0037D4  EFEE  F01B         	goto	u6641
  6099  0037D8  EFF0  F01B         	goto	u6640
  6100  0037DC                     u6641:
  6101  0037DC  EFF4  F01B         	goto	l5723
  6102  0037E0                     u6640:
  6103  0037E0  6C05               	negf	___awmod@dividend^0,c
  6104  0037E2  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6105  0037E4  B0D8               	btfsc	status,0,c
  6106  0037E6  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6107  0037E8                     l5723:
  6108  0037E8  C005  F005         	movff	___awmod@dividend,?___awmod
  6109  0037EC  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  6110  0037F0  0012               	return		;funcret
  6111  0037F2                     __end_of___awmod:
  6112                           	callstack 0
  6113                           
  6114 ;; *************** function ___awdiv *****************
  6115 ;; Defined at:
  6116 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  dividend        2    4[COMRAM] int 
  6119 ;;  divisor         2    6[COMRAM] int 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  quotient        2   10[COMRAM] int 
  6122 ;;  sign            1    9[COMRAM] unsigned char 
  6123 ;;  counter         1    8[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2    4[COMRAM] int 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6133 ;;      Params:         4       0       0       0       0       0       0       0       0
  6134 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6136 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6137 ;;Total ram usage:        8 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 4
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_efgtoa
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text21
  6148  00367E                     __ptext21:
  6149                           	callstack 0
  6150  00367E                     ___awdiv:
  6151                           	callstack 22
  6152  00367E  0E00               	movlw	0
  6153  003680  6E0A               	movwf	___awdiv@sign^0,c
  6154  003682  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6155  003684  EF48  F01B         	goto	u6530
  6156  003688  EF46  F01B         	goto	u6531
  6157  00368C                     u6531:
  6158  00368C  EF4E  F01B         	goto	l5655
  6159  003690                     u6530:
  6160  003690  6C07               	negf	___awdiv@divisor^0,c
  6161  003692  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6162  003694  B0D8               	btfsc	status,0,c
  6163  003696  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6164  003698  0E01               	movlw	1
  6165  00369A  6E0A               	movwf	___awdiv@sign^0,c
  6166  00369C                     l5655:
  6167  00369C  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6168  00369E  EF55  F01B         	goto	u6540
  6169  0036A2  EF53  F01B         	goto	u6541
  6170  0036A6                     u6541:
  6171  0036A6  EF5B  F01B         	goto	l5661
  6172  0036AA                     u6540:
  6173  0036AA  6C05               	negf	___awdiv@dividend^0,c
  6174  0036AC  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6175  0036AE  B0D8               	btfsc	status,0,c
  6176  0036B0  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6177  0036B2  0E01               	movlw	1
  6178  0036B4  1A0A               	xorwf	___awdiv@sign^0,f,c
  6179  0036B6                     l5661:
  6180  0036B6  0E00               	movlw	0
  6181  0036B8  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6182  0036BA  0E00               	movlw	0
  6183  0036BC  6E0B               	movwf	___awdiv@quotient^0,c
  6184  0036BE  5007               	movf	___awdiv@divisor^0,w,c
  6185  0036C0  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6186  0036C2  B4D8               	btfsc	status,2,c
  6187  0036C4  EF66  F01B         	goto	u6551
  6188  0036C8  EF68  F01B         	goto	u6550
  6189  0036CC                     u6551:
  6190  0036CC  EF90  F01B         	goto	l5683
  6191  0036D0                     u6550:
  6192  0036D0  0E01               	movlw	1
  6193  0036D2  6E09               	movwf	___awdiv@counter^0,c
  6194  0036D4  EF70  F01B         	goto	l5669
  6195  0036D8                     l5667:
  6196  0036D8  90D8               	bcf	status,0,c
  6197  0036DA  3607               	rlcf	___awdiv@divisor^0,f,c
  6198  0036DC  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6199  0036DE  2A09               	incf	___awdiv@counter^0,f,c
  6200  0036E0                     l5669:
  6201  0036E0  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6202  0036E2  EF75  F01B         	goto	u6561
  6203  0036E6  EF77  F01B         	goto	u6560
  6204  0036EA                     u6561:
  6205  0036EA  EF6C  F01B         	goto	l5667
  6206  0036EE                     u6560:
  6207  0036EE                     l5671:
  6208  0036EE  90D8               	bcf	status,0,c
  6209  0036F0  360B               	rlcf	___awdiv@quotient^0,f,c
  6210  0036F2  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6211  0036F4  5007               	movf	___awdiv@divisor^0,w,c
  6212  0036F6  5C05               	subwf	___awdiv@dividend^0,w,c
  6213  0036F8  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6214  0036FA  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6215  0036FC  A0D8               	btfss	status,0,c
  6216  0036FE  EF83  F01B         	goto	u6571
  6217  003702  EF85  F01B         	goto	u6570
  6218  003706                     u6571:
  6219  003706  EF8A  F01B         	goto	l5679
  6220  00370A                     u6570:
  6221  00370A  5007               	movf	___awdiv@divisor^0,w,c
  6222  00370C  5E05               	subwf	___awdiv@dividend^0,f,c
  6223  00370E  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6224  003710  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6225  003712  800B               	bsf	___awdiv@quotient^0,0,c
  6226  003714                     l5679:
  6227  003714  90D8               	bcf	status,0,c
  6228  003716  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6229  003718  3207               	rrcf	___awdiv@divisor^0,f,c
  6230  00371A  2E09               	decfsz	___awdiv@counter^0,f,c
  6231  00371C  EF77  F01B         	goto	l5671
  6232  003720                     l5683:
  6233  003720  500A               	movf	___awdiv@sign^0,w,c
  6234  003722  B4D8               	btfsc	status,2,c
  6235  003724  EF96  F01B         	goto	u6581
  6236  003728  EF98  F01B         	goto	u6580
  6237  00372C                     u6581:
  6238  00372C  EF9C  F01B         	goto	l5687
  6239  003730                     u6580:
  6240  003730  6C0B               	negf	___awdiv@quotient^0,c
  6241  003732  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6242  003734  B0D8               	btfsc	status,0,c
  6243  003736  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6244  003738                     l5687:
  6245  003738  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6246  00373C  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6247  003740  0012               	return		;funcret
  6248  003742                     __end_of___awdiv:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function _atoi *****************
  6252 ;; Defined at:
  6253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6256 ;;		 -> STR_1(12), 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  n               2   24[COMRAM] int 
  6259 ;;  neg             2   17[COMRAM] int 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  2   11[COMRAM] int 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6269 ;;      Params:         2       0       0       0       0       0       0       0       0
  6270 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6271 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6272 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6273 ;;Total ram usage:       15 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; Hardware stack levels required when called: 5
  6276 ;; This function calls:
  6277 ;;		___wmul
  6278 ;;		_isdigit
  6279 ;;		_isspace
  6280 ;; This function is called by:
  6281 ;;		_vfpfcnvrt
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text22
  6286  002E02                     __ptext22:
  6287                           	callstack 0
  6288  002E02                     _atoi:
  6289                           	callstack 22
  6290  002E02  0E00               	movlw	0
  6291  002E04  6E1A               	movwf	(atoi@n+1)^0,c
  6292  002E06  0E00               	movlw	0
  6293  002E08  6E19               	movwf	atoi@n^0,c
  6294  002E0A  0E00               	movlw	0
  6295  002E0C  6E13               	movwf	(atoi@neg+1)^0,c
  6296  002E0E  0E00               	movlw	0
  6297  002E10  6E12               	movwf	atoi@neg^0,c
  6298  002E12  EF0D  F017         	goto	l6281
  6299  002E16                     l6279:
  6300  002E16  4A0C               	infsnz	atoi@s^0,f,c
  6301  002E18  2A0D               	incf	(atoi@s+1)^0,f,c
  6302  002E1A                     l6281:
  6303  002E1A  0E01               	movlw	1
  6304  002E1C  6E18               	movwf	_atoi$2030^0,c
  6305  002E1E  C00C  FFF6         	movff	atoi@s,tblptrl
  6306  002E22  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6307  002E26                     	if	0	;tblptru may be non-zero
  6308  002E26                     	endif
  6309  002E26                     	if	0	;tblptru may be non-zero
  6310  002E26                     	endif
  6311  002E26  0008               	tblrd		*
  6312  002E28  50F5               	movf	tablat,w,c
  6313  002E2A  0A20               	xorlw	32
  6314  002E2C  B4D8               	btfsc	status,2,c
  6315  002E2E  EF1B  F017         	goto	u7691
  6316  002E32  EF1D  F017         	goto	u7690
  6317  002E36                     u7691:
  6318  002E36  EF3A  F017         	goto	l6289
  6319  002E3A                     u7690:
  6320  002E3A  0EF7               	movlw	247
  6321  002E3C  6E0E               	movwf	??_atoi^0,c
  6322  002E3E  0EFF               	movlw	255
  6323  002E40  6E0F               	movwf	(??_atoi+1)^0,c
  6324  002E42  C00C  FFF6         	movff	atoi@s,tblptrl
  6325  002E46  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6326  002E4A                     	if	0	;tblptru may be non-zero
  6327  002E4A                     	endif
  6328  002E4A                     	if	0	;tblptru may be non-zero
  6329  002E4A                     	endif
  6330  002E4A  0008               	tblrd		*
  6331  002E4C  50F5               	movf	tablat,w,c
  6332  002E4E  6E10               	movwf	(??_atoi+2)^0,c
  6333  002E50  6A11               	clrf	(??_atoi+3)^0,c
  6334  002E52  500E               	movf	??_atoi^0,w,c
  6335  002E54  2610               	addwf	(??_atoi+2)^0,f,c
  6336  002E56  500F               	movf	(??_atoi+1)^0,w,c
  6337  002E58  2211               	addwfc	(??_atoi+3)^0,f,c
  6338  002E5A  5011               	movf	(??_atoi+3)^0,w,c
  6339  002E5C  E109               	bnz	u7700
  6340  002E5E  0E05               	movlw	5
  6341  002E60  5C10               	subwf	(??_atoi+2)^0,w,c
  6342  002E62  A0D8               	btfss	status,0,c
  6343  002E64  EF36  F017         	goto	u7701
  6344  002E68  EF38  F017         	goto	u7700
  6345  002E6C                     u7701:
  6346  002E6C  EF3A  F017         	goto	l6289
  6347  002E70                     u7700:
  6348  002E70  0E00               	movlw	0
  6349  002E72  6E18               	movwf	_atoi$2030^0,c
  6350  002E74                     l6289:
  6351  002E74  C018  F014         	movff	_atoi$2030,_atoi$2029
  6352  002E78  6A15               	clrf	(_atoi$2029+1)^0,c
  6353  002E7A  5014               	movf	_atoi$2029^0,w,c
  6354  002E7C  1015               	iorwf	(_atoi$2029+1)^0,w,c
  6355  002E7E  A4D8               	btfss	status,2,c
  6356  002E80  EF44  F017         	goto	u7711
  6357  002E84  EF46  F017         	goto	u7710
  6358  002E88                     u7711:
  6359  002E88  EF0B  F017         	goto	l6279
  6360  002E8C                     u7710:
  6361  002E8C  EF50  F017         	goto	l6299
  6362  002E90                     l6295:
  6363  002E90  0E00               	movlw	0
  6364  002E92  6E13               	movwf	(atoi@neg+1)^0,c
  6365  002E94  0E01               	movlw	1
  6366  002E96  6E12               	movwf	atoi@neg^0,c
  6367  002E98                     l6297:
  6368  002E98  4A0C               	infsnz	atoi@s^0,f,c
  6369  002E9A  2A0D               	incf	(atoi@s+1)^0,f,c
  6370  002E9C  EF85  F017         	goto	l6305
  6371  002EA0                     l6299:
  6372  002EA0  C00C  FFF6         	movff	atoi@s,tblptrl
  6373  002EA4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6374  002EA8                     	if	0	;tblptru may be non-zero
  6375  002EA8                     	endif
  6376  002EA8                     	if	0	;tblptru may be non-zero
  6377  002EA8                     	endif
  6378  002EA8  0008               	tblrd		*
  6379  002EAA  50F5               	movf	tablat,w,c
  6380  002EAC  6E0E               	movwf	??_atoi^0,c
  6381  002EAE  6A0F               	clrf	(??_atoi+1)^0,c
  6382                           
  6383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6384                           ; Switch size 1, requested type "simple"
  6385                           ; Number of cases is 1, Range of values is 0 to 0
  6386                           ; switch strategies available:
  6387                           ; Name         Instructions Cycles
  6388                           ; simple_byte            4     3 (average)
  6389                           ;	Chosen strategy is simple_byte
  6390  002EB0  500F               	movf	(??_atoi+1)^0,w,c
  6391  002EB2  0A00               	xorlw	0	; case 0
  6392  002EB4  B4D8               	btfsc	status,2,c
  6393  002EB6  EF5F  F017         	goto	l6867
  6394  002EBA  EF85  F017         	goto	l6305
  6395  002EBE                     l6867:
  6396                           
  6397                           ; Switch size 1, requested type "simple"
  6398                           ; Number of cases is 2, Range of values is 43 to 45
  6399                           ; switch strategies available:
  6400                           ; Name         Instructions Cycles
  6401                           ; simple_byte            7     4 (average)
  6402                           ;	Chosen strategy is simple_byte
  6403  002EBE  500E               	movf	??_atoi^0,w,c
  6404  002EC0  0A2B               	xorlw	43	; case 43
  6405  002EC2  B4D8               	btfsc	status,2,c
  6406  002EC4  EF4C  F017         	goto	l6297
  6407  002EC8  0A06               	xorlw	6	; case 45
  6408  002ECA  B4D8               	btfsc	status,2,c
  6409  002ECC  EF48  F017         	goto	l6295
  6410  002ED0  EF85  F017         	goto	l6305
  6411  002ED4                     l6301:
  6412  002ED4  C019  F005         	movff	atoi@n,___wmul@multiplier
  6413  002ED8  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  6414  002EDC  0E00               	movlw	0
  6415  002EDE  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  6416  002EE0  0E0A               	movlw	10
  6417  002EE2  6E07               	movwf	___wmul@multiplicand^0,c
  6418  002EE4  EC9D  F01F         	call	___wmul	;wreg free
  6419  002EE8  C00C  FFF6         	movff	atoi@s,tblptrl
  6420  002EEC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6421  002EF0                     	if	0	;tblptru may be non-zero
  6422  002EF0                     	endif
  6423  002EF0                     	if	0	;tblptru may be non-zero
  6424  002EF0                     	endif
  6425  002EF0  0008               	tblrd		*
  6426  002EF2  50F5               	movf	tablat,w,c
  6427  002EF4  5E05               	subwf	?___wmul^0,f,c
  6428  002EF6  0E00               	movlw	0
  6429  002EF8  5A06               	subwfb	(?___wmul+1)^0,f,c
  6430  002EFA  0E30               	movlw	48
  6431  002EFC  2405               	addwf	?___wmul^0,w,c
  6432  002EFE  6E19               	movwf	atoi@n^0,c
  6433  002F00  0E00               	movlw	0
  6434  002F02  2006               	addwfc	(?___wmul+1)^0,w,c
  6435  002F04  6E1A               	movwf	(atoi@n+1)^0,c
  6436  002F06  EF4C  F017         	goto	l6297
  6437  002F0A                     l6305:
  6438  002F0A  0ED0               	movlw	208
  6439  002F0C  6E0E               	movwf	??_atoi^0,c
  6440  002F0E  0EFF               	movlw	255
  6441  002F10  6E0F               	movwf	(??_atoi+1)^0,c
  6442  002F12  C00C  FFF6         	movff	atoi@s,tblptrl
  6443  002F16  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6444  002F1A                     	if	0	;tblptru may be non-zero
  6445  002F1A                     	endif
  6446  002F1A                     	if	0	;tblptru may be non-zero
  6447  002F1A                     	endif
  6448  002F1A  0008               	tblrd		*
  6449  002F1C  50F5               	movf	tablat,w,c
  6450  002F1E  6E10               	movwf	(??_atoi+2)^0,c
  6451  002F20  6A11               	clrf	(??_atoi+3)^0,c
  6452  002F22  500E               	movf	??_atoi^0,w,c
  6453  002F24  2610               	addwf	(??_atoi+2)^0,f,c
  6454  002F26  500F               	movf	(??_atoi+1)^0,w,c
  6455  002F28  2211               	addwfc	(??_atoi+3)^0,f,c
  6456  002F2A  5011               	movf	(??_atoi+3)^0,w,c
  6457  002F2C  E10A               	bnz	u7720
  6458  002F2E  0E0A               	movlw	10
  6459  002F30  5C10               	subwf	(??_atoi+2)^0,w,c
  6460  002F32  A0D8               	btfss	status,0,c
  6461  002F34  EF9E  F017         	goto	u7721
  6462  002F38  EFA1  F017         	goto	u7720
  6463  002F3C                     u7721:
  6464  002F3C  0E01               	movlw	1
  6465  002F3E  EFA2  F017         	goto	u7730
  6466  002F42                     u7720:
  6467  002F42  0E00               	movlw	0
  6468  002F44                     u7730:
  6469  002F44  6E16               	movwf	_atoi$2031^0,c
  6470  002F46  6A17               	clrf	(_atoi$2031+1)^0,c
  6471  002F48  5016               	movf	_atoi$2031^0,w,c
  6472  002F4A  1017               	iorwf	(_atoi$2031+1)^0,w,c
  6473  002F4C  A4D8               	btfss	status,2,c
  6474  002F4E  EFAB  F017         	goto	u7741
  6475  002F52  EFAD  F017         	goto	u7740
  6476  002F56                     u7741:
  6477  002F56  EF6A  F017         	goto	l6301
  6478  002F5A                     u7740:
  6479  002F5A  5012               	movf	atoi@neg^0,w,c
  6480  002F5C  1013               	iorwf	(atoi@neg+1)^0,w,c
  6481  002F5E  A4D8               	btfss	status,2,c
  6482  002F60  EFB4  F017         	goto	u7751
  6483  002F64  EFB6  F017         	goto	u7750
  6484  002F68                     u7751:
  6485  002F68  EFC4  F017         	goto	l1389
  6486  002F6C                     u7750:
  6487  002F6C  C019  F00E         	movff	atoi@n,??_atoi
  6488  002F70  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  6489  002F74  1E0E               	comf	??_atoi^0,f,c
  6490  002F76  1E0F               	comf	(??_atoi+1)^0,f,c
  6491  002F78  4A0E               	infsnz	??_atoi^0,f,c
  6492  002F7A  2A0F               	incf	(??_atoi+1)^0,f,c
  6493  002F7C  C00E  F00C         	movff	??_atoi,?_atoi
  6494  002F80  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  6495  002F84  EFC8  F017         	goto	l1392
  6496  002F88                     l1389:
  6497  002F88  C019  F00C         	movff	atoi@n,?_atoi
  6498  002F8C  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  6499  002F90                     l1392:
  6500  002F90  0012               	return		;funcret
  6501  002F92                     __end_of_atoi:
  6502                           	callstack 0
  6503                           
  6504 ;; *************** function _isspace *****************
  6505 ;; Defined at:
  6506 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  c               2    4[COMRAM] int 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2    4[COMRAM] int 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6520 ;;      Params:         2       0       0       0       0       0       0       0       0
  6521 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6522 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6523 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6524 ;;Total ram usage:        7 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 4
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_atoi
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text23
  6535  003A88                     __ptext23:
  6536                           	callstack 0
  6537  003A88                     _isspace:
  6538                           	callstack 22
  6539  003A88  0E01               	movlw	1
  6540  003A8A  6E0B               	movwf	_isspace$2060^0,c
  6541  003A8C  0E20               	movlw	32
  6542  003A8E  1805               	xorwf	isspace@c^0,w,c
  6543  003A90  1006               	iorwf	(isspace@c+1)^0,w,c
  6544  003A92  B4D8               	btfsc	status,2,c
  6545  003A94  EF4E  F01D         	goto	u7091
  6546  003A98  EF50  F01D         	goto	u7090
  6547  003A9C                     u7091:
  6548  003A9C  EF69  F01D         	goto	l5915
  6549  003AA0                     u7090:
  6550  003AA0  0EF7               	movlw	247
  6551  003AA2  6E07               	movwf	??_isspace^0,c
  6552  003AA4  0EFF               	movlw	255
  6553  003AA6  6E08               	movwf	(??_isspace+1)^0,c
  6554  003AA8  C005  F009         	movff	isspace@c,??_isspace+2
  6555  003AAC  C006  F00A         	movff	isspace@c+1,??_isspace+3
  6556  003AB0  5007               	movf	??_isspace^0,w,c
  6557  003AB2  2609               	addwf	(??_isspace+2)^0,f,c
  6558  003AB4  5008               	movf	(??_isspace+1)^0,w,c
  6559  003AB6  220A               	addwfc	(??_isspace+3)^0,f,c
  6560  003AB8  500A               	movf	(??_isspace+3)^0,w,c
  6561  003ABA  E109               	bnz	u7100
  6562  003ABC  0E05               	movlw	5
  6563  003ABE  5C09               	subwf	(??_isspace+2)^0,w,c
  6564  003AC0  A0D8               	btfss	status,0,c
  6565  003AC2  EF65  F01D         	goto	u7101
  6566  003AC6  EF67  F01D         	goto	u7100
  6567  003ACA                     u7101:
  6568  003ACA  EF69  F01D         	goto	l5915
  6569  003ACE                     u7100:
  6570  003ACE  0E00               	movlw	0
  6571  003AD0  6E0B               	movwf	_isspace$2060^0,c
  6572  003AD2                     l5915:
  6573  003AD2  C00B  F005         	movff	_isspace$2060,?_isspace
  6574  003AD6  6A06               	clrf	(?_isspace+1)^0,c
  6575  003AD8  0012               	return		;funcret
  6576  003ADA                     __end_of_isspace:
  6577                           	callstack 0
  6578                           
  6579 ;; *************** function _isdigit *****************
  6580 ;; Defined at:
  6581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  c               2    4[COMRAM] int 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  2    4[COMRAM] int 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6595 ;;      Params:         2       0       0       0       0       0       0       0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6597 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6598 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6599 ;;Total ram usage:        6 bytes
  6600 ;; Hardware stack levels used: 1
  6601 ;; Hardware stack levels required when called: 4
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_vfpfcnvrt
  6606 ;;		_atoi
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text24
  6611  003DF4                     __ptext24:
  6612                           	callstack 0
  6613  003DF4                     _isdigit:
  6614                           	callstack 23
  6615  003DF4  0ED0               	movlw	208
  6616  003DF6  6E07               	movwf	??_isdigit^0,c
  6617  003DF8  0EFF               	movlw	255
  6618  003DFA  6E08               	movwf	(??_isdigit+1)^0,c
  6619  003DFC  C005  F009         	movff	isdigit@c,??_isdigit+2
  6620  003E00  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  6621  003E04  5007               	movf	??_isdigit^0,w,c
  6622  003E06  2609               	addwf	(??_isdigit+2)^0,f,c
  6623  003E08  5008               	movf	(??_isdigit+1)^0,w,c
  6624  003E0A  220A               	addwfc	(??_isdigit+3)^0,f,c
  6625  003E0C  500A               	movf	(??_isdigit+3)^0,w,c
  6626  003E0E  E10A               	bnz	u7070
  6627  003E10  0E0A               	movlw	10
  6628  003E12  5C09               	subwf	(??_isdigit+2)^0,w,c
  6629  003E14  A0D8               	btfss	status,0,c
  6630  003E16  EF0F  F01F         	goto	u7071
  6631  003E1A  EF12  F01F         	goto	u7070
  6632  003E1E                     u7071:
  6633  003E1E  0E01               	movlw	1
  6634  003E20  EF13  F01F         	goto	u7080
  6635  003E24                     u7070:
  6636  003E24  0E00               	movlw	0
  6637  003E26                     u7080:
  6638  003E26  6E05               	movwf	?_isdigit^0,c
  6639  003E28  6A06               	clrf	(?_isdigit+1)^0,c
  6640  003E2A  0012               	return		;funcret
  6641  003E2C                     __end_of_isdigit:
  6642                           	callstack 0
  6643                           
  6644 ;; *************** function ___wmul *****************
  6645 ;; Defined at:
  6646 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  multiplier      2    4[COMRAM] unsigned int 
  6649 ;;  multiplicand    2    6[COMRAM] unsigned int 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  product         2    8[COMRAM] unsigned int 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  2    4[COMRAM] unsigned int 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2, status,0, prodl, prodh
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6661 ;;      Params:         4       0       0       0       0       0       0       0       0
  6662 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6664 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6665 ;;Total ram usage:        6 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; Hardware stack levels required when called: 4
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_atoi
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text25
  6676  003F3A                     __ptext25:
  6677                           	callstack 0
  6678  003F3A                     ___wmul:
  6679                           	callstack 22
  6680  003F3A  5005               	movf	___wmul@multiplier^0,w,c
  6681  003F3C  0207               	mulwf	___wmul@multiplicand^0,c
  6682  003F3E  CFF3 F009          	movff	prodl,___wmul@product
  6683  003F42  CFF4 F00A          	movff	prodh,___wmul@product+1
  6684  003F46  5005               	movf	___wmul@multiplier^0,w,c
  6685  003F48  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  6686  003F4A  50F3               	movf	243,w,c
  6687  003F4C  260A               	addwf	(___wmul@product+1)^0,f,c
  6688  003F4E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  6689  003F50  0207               	mulwf	___wmul@multiplicand^0,c
  6690  003F52  50F3               	movf	243,w,c
  6691  003F54  260A               	addwf	(___wmul@product+1)^0,f,c
  6692  003F56  C009  F005         	movff	___wmul@product,?___wmul
  6693  003F5A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  6694  003F5E  0012               	return		;funcret
  6695  003F60                     __end_of___wmul:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _spi_s_init *****************
  6699 ;; Defined at:
  6700 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      void 
  6707 ;; Registers used:
  6708 ;;		None
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6714 ;;      Params:         0       0       0       0       0       0       0       0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6717 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 4
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_main
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text26
  6729  004026                     __ptext26:
  6730                           	callstack 0
  6731  004026                     _spi_s_init:
  6732                           	callstack 26
  6733  004026                     
  6734                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
  6735  004026  9294               	bcf	148,1,c	;volatile
  6736                           
  6737                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
  6738  004028  9493               	bcf	147,2,c	;volatile
  6739                           
  6740                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
  6741  00402A  9494               	bcf	148,2,c	;volatile
  6742                           
  6743                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
  6744  00402C  8693               	bsf	147,3,c	;volatile
  6745                           
  6746                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
  6747  00402E  9293               	bcf	147,1,c	;volatile
  6748                           
  6749                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
  6750  004030  8094               	bsf	148,0,c	;volatile
  6751                           
  6752                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
  6753  004032  948A               	bcf	138,2,c	;volatile
  6754                           
  6755                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
  6756  004034  948B               	bcf	139,2,c	;volatile
  6757                           
  6758                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
  6759  004036  928B               	bcf	139,1,c	;volatile
  6760                           
  6761                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
  6762  004038  928A               	bcf	138,1,c	;volatile
  6763  00403A  0012               	return		;funcret
  6764  00403C                     __end_of_spi_s_init:
  6765                           	callstack 0
  6766                           
  6767 ;; *************** function _nrf2401_recibe *****************
  6768 ;; Defined at:
  6769 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;		None
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;  valor_          1    6[COMRAM] unsigned char 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      unsigned char 
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6783 ;;      Params:         0       0       0       0       0       0       0       0       0
  6784 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6786 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6787 ;;Total ram usage:        1 bytes
  6788 ;; Hardware stack levels used: 1
  6789 ;; Hardware stack levels required when called: 5
  6790 ;; This function calls:
  6791 ;;		_spi_s_read
  6792 ;;		_spi_s_write
  6793 ;; This function is called by:
  6794 ;;		_main
  6795 ;;		_nrf2401_recibe_Text
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text27
  6800  003FF4                     __ptext27:
  6801                           	callstack 0
  6802  003FF4                     _nrf2401_recibe:
  6803                           	callstack 25
  6804  003FF4                     
  6805                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
  6806  003FF4  948B               	bcf	139,2,c	;volatile
  6807  003FF6                     
  6808                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
  6809  003FF6  0E61               	movlw	97
  6810  003FF8  ECB9  F01D         	call	_spi_s_write
  6811                           
  6812                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
  6813  003FFC  ECDD  F01D         	call	_spi_s_read	;wreg free
  6814  004000  6E07               	movwf	nrf2401_recibe@valor_^0,c
  6815  004002                     
  6816                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
  6817  004002  848B               	bsf	139,2,c	;volatile
  6818  004004                     
  6819                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  6820  004004  0E14               	movlw	20
  6821  004006                     u8407:
  6822  004006  2EE8               	decfsz	wreg,f,c
  6823  004008  D7FE               	bra	u8407
  6824  00400A                     
  6825                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
  6826  00400A  5007               	movf	nrf2401_recibe@valor_^0,w,c
  6827  00400C  0012               	return		;funcret
  6828  00400E                     __end_of_nrf2401_recibe:
  6829                           	callstack 0
  6830                           
  6831 ;; *************** function _nrf2401_haydatos *****************
  6832 ;; Defined at:
  6833 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      unsigned char 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6847 ;;      Params:         0       0       0       0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6851 ;;Total ram usage:        0 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 7
  6854 ;; This function calls:
  6855 ;;		_get_Status
  6856 ;; This function is called by:
  6857 ;;		_main
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text28
  6862  003F80                     __ptext28:
  6863                           	callstack 0
  6864  003F80                     _nrf2401_haydatos:
  6865                           	callstack 23
  6866  003F80                     
  6867                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
  6868  003F80  EC64  F020         	call	_get_Status	;wreg free
  6869  003F84  0A40               	xorlw	64
  6870  003F86  A4D8               	btfss	status,2,c
  6871  003F88  EFC8  F01F         	goto	u8121
  6872  003F8C  EFCA  F01F         	goto	u8120
  6873  003F90                     u8121:
  6874  003F90  EFCD  F01F         	goto	l6679
  6875  003F94                     u8120:
  6876  003F94  0E01               	movlw	1
  6877  003F96  EFCE  F01F         	goto	l317
  6878  003F9A                     l6679:
  6879  003F9A  0E00               	movlw	0
  6880  003F9C                     l317:
  6881  003F9C  0012               	return		;funcret
  6882  003F9E                     __end_of_nrf2401_haydatos:
  6883                           	callstack 0
  6884                           
  6885 ;; *************** function _get_Status *****************
  6886 ;; Defined at:
  6887 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;		None
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      unsigned char 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6901 ;;      Params:         0       0       0       0       0       0       0       0       0
  6902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6904 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6905 ;;Total ram usage:        0 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 6
  6908 ;; This function calls:
  6909 ;;		_nrf2401_read
  6910 ;; This function is called by:
  6911 ;;		_nrf2401_haydatos
  6912 ;;		_nrf2401_recibe_Text
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text29
  6917  0040C8                     __ptext29:
  6918                           	callstack 0
  6919  0040C8                     _get_Status:
  6920                           	callstack 23
  6921  0040C8                     
  6922                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
  6923  0040C8  0E07               	movlw	7
  6924  0040CA  ECDE  F01F         	call	_nrf2401_read
  6925  0040CE  0012               	return		;funcret
  6926  0040D0                     __end_of_get_Status:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _nrf2401_read *****************
  6930 ;; Defined at:
  6931 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  reg             1    wreg     unsigned char 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  reg             1    6[COMRAM] unsigned char 
  6936 ;;  dato_           1    7[COMRAM] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      unsigned char 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0
  6947 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6949 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6950 ;;Total ram usage:        2 bytes
  6951 ;; Hardware stack levels used: 1
  6952 ;; Hardware stack levels required when called: 5
  6953 ;; This function calls:
  6954 ;;		_spi_s_read
  6955 ;;		_spi_s_write
  6956 ;; This function is called by:
  6957 ;;		_get_Status
  6958 ;;		_get_fifo_status
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text30
  6963  003FBC                     __ptext30:
  6964                           	callstack 0
  6965  003FBC                     _nrf2401_read:
  6966                           	callstack 23
  6967                           
  6968                           ;incstack = 0
  6969                           ;nrf2401_read@reg stored from wreg
  6970  003FBC  6E07               	movwf	nrf2401_read@reg^0,c
  6971  003FBE                     
  6972                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
  6973  003FBE  948B               	bcf	139,2,c	;volatile
  6974  003FC0                     
  6975                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
  6976  003FC0  5007               	movf	nrf2401_read@reg^0,w,c
  6977  003FC2  ECB9  F01D         	call	_spi_s_write
  6978  003FC6                     
  6979                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
  6980  003FC6  ECDD  F01D         	call	_spi_s_read	;wreg free
  6981  003FCA  6E08               	movwf	nrf2401_read@dato_^0,c
  6982  003FCC                     
  6983                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
  6984  003FCC  848B               	bsf	139,2,c	;volatile
  6985  003FCE                     
  6986                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  6987  003FCE  0E14               	movlw	20
  6988  003FD0                     u8417:
  6989  003FD0  2EE8               	decfsz	wreg,f,c
  6990  003FD2  D7FE               	bra	u8417
  6991                           
  6992                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
  6993  003FD4  5008               	movf	nrf2401_read@dato_^0,w,c
  6994  003FD6  0012               	return		;funcret
  6995  003FD8                     __end_of_nrf2401_read:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _spi_s_read *****************
  6999 ;; Defined at:
  7000 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  cont_s          1    5[COMRAM] unsigned char 
  7005 ;;  dato_           1    4[COMRAM] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      unsigned char 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0
  7016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7018 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7019 ;;Total ram usage:        2 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; Hardware stack levels required when called: 4
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_nrf2401_read
  7026 ;;		_nrf2401_recibe
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text31
  7031  003BBA                     __ptext31:
  7032                           	callstack 0
  7033  003BBA                     _spi_s_read:
  7034                           	callstack 25
  7035  003BBA                     
  7036                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
  7037  003BBA  0E00               	movlw	0
  7038  003BBC  6E06               	movwf	spi_s_read@cont_s^0,c
  7039                           
  7040                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
  7041  003BBE  0E00               	movlw	0
  7042  003BC0  6E05               	movwf	spi_s_read@dato_^0,c
  7043                           
  7044                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
  7045  003BC2  0E00               	movlw	0
  7046  003BC4  6E06               	movwf	spi_s_read@cont_s^0,c
  7047  003BC6                     l5925:
  7048                           
  7049                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
  7050  003BC6  90D8               	bcf	status,0,c
  7051  003BC8  3605               	rlcf	spi_s_read@dato_^0,f,c
  7052  003BCA                     
  7053                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
  7054  003BCA  848A               	bsf	138,2,c	;volatile
  7055  003BCC                     
  7056                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  7057  003BCC  0E04               	movlw	4
  7058  003BCE                     u8427:
  7059  003BCE  2EE8               	decfsz	wreg,f,c
  7060  003BD0  D7FE               	bra	u8427
  7061  003BD2                     
  7062                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
  7063  003BD2  A681               	btfss	129,3,c	;volatile
  7064  003BD4  EFEE  F01D         	goto	u7111
  7065  003BD8  EFF0  F01D         	goto	u7110
  7066  003BDC                     u7111:
  7067  003BDC  EFF1  F01D         	goto	l5935
  7068  003BE0                     u7110:
  7069  003BE0                     
  7070                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
  7071  003BE0  8005               	bsf	spi_s_read@dato_^0,0,c
  7072  003BE2                     l5935:
  7073                           
  7074                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
  7075  003BE2  948A               	bcf	138,2,c	;volatile
  7076  003BE4                     
  7077                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  7078  003BE4  0E04               	movlw	4
  7079  003BE6                     u8437:
  7080  003BE6  2EE8               	decfsz	wreg,f,c
  7081  003BE8  D7FE               	bra	u8437
  7082  003BEA                     
  7083                           ;./Librerias/nRF24L01_2.h: 57:     }
  7084  003BEA  2A06               	incf	spi_s_read@cont_s^0,f,c
  7085  003BEC  0E07               	movlw	7
  7086  003BEE  6406               	cpfsgt	spi_s_read@cont_s^0,c
  7087  003BF0  EFFC  F01D         	goto	u7121
  7088  003BF4  EFFE  F01D         	goto	u7120
  7089  003BF8                     u7121:
  7090  003BF8  EFE3  F01D         	goto	l5925
  7091  003BFC                     u7120:
  7092  003BFC                     
  7093                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
  7094  003BFC  5005               	movf	spi_s_read@dato_^0,w,c
  7095  003BFE  0012               	return		;funcret
  7096  003C00                     __end_of_spi_s_read:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function _nrF2401_init_RX *****************
  7100 ;; Defined at:
  7101 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  canal           1    wreg     unsigned char 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  canal           1   12[COMRAM] unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0
  7116 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7118 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7119 ;;Total ram usage:        1 bytes
  7120 ;; Hardware stack levels used: 1
  7121 ;; Hardware stack levels required when called: 7
  7122 ;; This function calls:
  7123 ;;		_flush_TX_RX
  7124 ;;		_nrf2401_direccion_TX_RX
  7125 ;;		_nrf2401_write
  7126 ;; This function is called by:
  7127 ;;		_main
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text32
  7132  00389C                     __ptext32:
  7133                           	callstack 0
  7134  00389C                     _nrF2401_init_RX:
  7135                           	callstack 23
  7136                           
  7137                           ;incstack = 0
  7138                           ;nrF2401_init_RX@canal stored from wreg
  7139  00389C  6E0D               	movwf	nrF2401_init_RX@canal^0,c
  7140  00389E                     
  7141                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
  7142  00389E  928A               	bcf	138,1,c	;volatile
  7143  0038A0                     
  7144                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
  7145  0038A0  0E0C               	movlw	12
  7146  0038A2  6E07               	movwf	nrf2401_write@valor^0,c
  7147  0038A4  0E00               	movlw	0
  7148  0038A6  ECEC  F01F         	call	_nrf2401_write
  7149                           
  7150                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
  7151  0038AA  0E00               	movlw	0
  7152  0038AC  6E07               	movwf	nrf2401_write@valor^0,c
  7153  0038AE  0E04               	movlw	4
  7154  0038B0  ECEC  F01F         	call	_nrf2401_write
  7155                           
  7156                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
  7157  0038B4  0E03               	movlw	3
  7158  0038B6  6E07               	movwf	nrf2401_write@valor^0,c
  7159  0038B8  0E03               	movlw	3
  7160  0038BA  ECEC  F01F         	call	_nrf2401_write
  7161                           
  7162                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x10 + 0x06);
  7163  0038BE  0E16               	movlw	22
  7164  0038C0  6E07               	movwf	nrf2401_write@valor^0,c
  7165  0038C2  0E06               	movlw	6
  7166  0038C4  ECEC  F01F         	call	_nrf2401_write
  7167                           
  7168                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
  7169  0038C8  C00D  F007         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
  7170  0038CC  0E05               	movlw	5
  7171  0038CE  ECEC  F01F         	call	_nrf2401_write
  7172                           
  7173                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
  7174  0038D2  0E00               	movlw	0
  7175  0038D4  6E07               	movwf	nrf2401_write@valor^0,c
  7176  0038D6  0E01               	movlw	1
  7177  0038D8  ECEC  F01F         	call	_nrf2401_write
  7178                           
  7179                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
  7180  0038DC  0E01               	movlw	1
  7181  0038DE  6E07               	movwf	nrf2401_write@valor^0,c
  7182  0038E0  0E11               	movlw	17
  7183  0038E2  ECEC  F01F         	call	_nrf2401_write
  7184                           
  7185                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
  7186  0038E6  0E0F               	movlw	15
  7187  0038E8  6E07               	movwf	nrf2401_write@valor^0,c
  7188  0038EA  0E00               	movlw	0
  7189  0038EC  ECEC  F01F         	call	_nrf2401_write
  7190  0038F0                     
  7191                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
  7192  0038F0  0E0A               	movlw	low _direccion_tx
  7193  0038F2  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  7194  0038F4  0E08               	movlw	high _direccion_tx
  7195  0038F6  6E08               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
  7196  0038F8  0E10               	movlw	16
  7197  0038FA  6E09               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  7198  0038FC  EC00  F01E         	call	_nrf2401_direccion_TX_RX	;wreg free
  7199  003900                     
  7200                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
  7201  003900  0E0A               	movlw	low _direccion_tx
  7202  003902  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  7203  003904  0E08               	movlw	high _direccion_tx
  7204  003906  6E08               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
  7205  003908  0E0A               	movlw	10
  7206  00390A  6E09               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  7207  00390C  EC00  F01E         	call	_nrf2401_direccion_TX_RX	;wreg free
  7208                           
  7209                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
  7210  003910  EC07  F020         	call	_flush_TX_RX	;wreg free
  7211  003914                     
  7212                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
  7213  003914  828A               	bsf	138,1,c	;volatile
  7214  003916  0012               	return		;funcret
  7215  003918                     __end_of_nrF2401_init_RX:
  7216                           	callstack 0
  7217                           
  7218 ;; *************** function _nrf2401_direccion_TX_RX *****************
  7219 ;; Defined at:
  7220 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  direccion_      2    6[COMRAM] PTR const unsigned char 
  7223 ;;		 -> direccion_tx(5), 
  7224 ;;  registro        1    8[COMRAM] unsigned char 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  cont_s          1   11[COMRAM] unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7236 ;;      Params:         3       0       0       0       0       0       0       0       0
  7237 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7238 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7239 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7240 ;;Total ram usage:        6 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; Hardware stack levels required when called: 5
  7243 ;; This function calls:
  7244 ;;		_spi_s_write
  7245 ;; This function is called by:
  7246 ;;		_nrF2401_init_RX
  7247 ;;		_nrF2401_init_TX
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text33
  7252  003C00                     __ptext33:
  7253                           	callstack 0
  7254  003C00                     _nrf2401_direccion_TX_RX:
  7255                           	callstack 24
  7256  003C00                     
  7257                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
  7258  003C00  948B               	bcf	139,2,c	;volatile
  7259  003C02                     
  7260                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
  7261  003C02  5009               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
  7262  003C04  0920               	iorlw	32
  7263  003C06  ECB9  F01D         	call	_spi_s_write
  7264  003C0A                     
  7265                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
  7266  003C0A  0E00               	movlw	0
  7267  003C0C  6E0C               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
  7268  003C0E                     l6521:
  7269                           
  7270                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
  7271  003C0E  500C               	movf	nrf2401_direccion_TX_RX@cont_s^0,w,c
  7272  003C10  2407               	addwf	nrf2401_direccion_TX_RX@direccion_^0,w,c
  7273  003C12  6E0A               	movwf	??_nrf2401_direccion_TX_RX^0,c
  7274  003C14  0E00               	movlw	0
  7275  003C16  2008               	addwfc	(nrf2401_direccion_TX_RX@direccion_+1)^0,w,c
  7276  003C18  6E0B               	movwf	(??_nrf2401_direccion_TX_RX+1)^0,c
  7277  003C1A  C00A  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
  7278  003C1E  C00B  FFF7         	movff	??_nrf2401_direccion_TX_RX+1,tblptrh
  7279  003C22                     	if	0	;tblptru may be non-zero
  7280  003C22                     	endif
  7281  003C22                     	if	0	;tblptru may be non-zero
  7282  003C22                     	endif
  7283  003C22  0008               	tblrd		*
  7284  003C24  50F5               	movf	tablat,w,c
  7285  003C26  ECB9  F01D         	call	_spi_s_write
  7286  003C2A                     
  7287                           ;./Librerias/nRF24L01_2.h: 120:     }
  7288  003C2A  2A0C               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
  7289  003C2C  0E04               	movlw	4
  7290  003C2E  640C               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
  7291  003C30  EF1C  F01E         	goto	u7971
  7292  003C34  EF1E  F01E         	goto	u7970
  7293  003C38                     u7971:
  7294  003C38  EF07  F01E         	goto	l6521
  7295  003C3C                     u7970:
  7296  003C3C                     
  7297                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
  7298  003C3C  848B               	bsf	139,2,c	;volatile
  7299  003C3E                     
  7300                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  7301  003C3E  0E14               	movlw	20
  7302  003C40                     u8447:
  7303  003C40  2EE8               	decfsz	wreg,f,c
  7304  003C42  D7FE               	bra	u8447
  7305  003C44  0012               	return		;funcret
  7306  003C46                     __end_of_nrf2401_direccion_TX_RX:
  7307                           	callstack 0
  7308                           
  7309 ;; *************** function _flush_TX_RX *****************
  7310 ;; Defined at:
  7311 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, status,0, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; Hardware stack levels required when called: 6
  7332 ;; This function calls:
  7333 ;;		_nrf2401_comando
  7334 ;;		_nrf2401_write
  7335 ;; This function is called by:
  7336 ;;		_nrF2401_init_RX
  7337 ;;		_nrF2401_init_TX
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text34
  7342  00400E                     __ptext34:
  7343                           	callstack 0
  7344  00400E                     _flush_TX_RX:
  7345                           	callstack 23
  7346  00400E                     
  7347                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
  7348  00400E  0E70               	movlw	112
  7349  004010  6E07               	movwf	nrf2401_write@valor^0,c
  7350  004012  0E07               	movlw	7
  7351  004014  ECEC  F01F         	call	_nrf2401_write
  7352                           
  7353                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
  7354  004018  0EE1               	movlw	225
  7355  00401A  EC34  F020         	call	_nrf2401_comando
  7356                           
  7357                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
  7358  00401E  0EE2               	movlw	226
  7359  004020  EC34  F020         	call	_nrf2401_comando
  7360  004024  0012               	return		;funcret
  7361  004026                     __end_of_flush_TX_RX:
  7362                           	callstack 0
  7363                           
  7364 ;; *************** function _nrf2401_write *****************
  7365 ;; Defined at:
  7366 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  reg             1    wreg     unsigned char 
  7369 ;;  valor           1    6[COMRAM] unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  reg             1    7[COMRAM] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7381 ;;      Params:         1       0       0       0       0       0       0       0       0
  7382 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7384 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7385 ;;Total ram usage:        2 bytes
  7386 ;; Hardware stack levels used: 1
  7387 ;; Hardware stack levels required when called: 5
  7388 ;; This function calls:
  7389 ;;		_spi_s_write
  7390 ;; This function is called by:
  7391 ;;		_flush_TX_RX
  7392 ;;		_nrF2401_init_RX
  7393 ;;		_flush_RX
  7394 ;;		_flush_TX
  7395 ;;		_nrf2401_envia
  7396 ;;		_nrF2401_init_TX
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text35
  7401  003FD8                     __ptext35:
  7402                           	callstack 0
  7403  003FD8                     _nrf2401_write:
  7404                           	callstack 24
  7405                           
  7406                           ;incstack = 0
  7407                           ;nrf2401_write@reg stored from wreg
  7408  003FD8  6E08               	movwf	nrf2401_write@reg^0,c
  7409  003FDA                     
  7410                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
  7411  003FDA  948B               	bcf	139,2,c	;volatile
  7412  003FDC                     
  7413                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
  7414  003FDC  5008               	movf	nrf2401_write@reg^0,w,c
  7415  003FDE  0920               	iorlw	32
  7416  003FE0  ECB9  F01D         	call	_spi_s_write
  7417                           
  7418                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
  7419  003FE4  5007               	movf	nrf2401_write@valor^0,w,c
  7420  003FE6  ECB9  F01D         	call	_spi_s_write
  7421  003FEA                     
  7422                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
  7423  003FEA  848B               	bsf	139,2,c	;volatile
  7424  003FEC                     
  7425                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  7426  003FEC  0E14               	movlw	20
  7427  003FEE                     u8457:
  7428  003FEE  2EE8               	decfsz	wreg,f,c
  7429  003FF0  D7FE               	bra	u8457
  7430  003FF2  0012               	return		;funcret
  7431  003FF4                     __end_of_nrf2401_write:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function _nrf2401_comando *****************
  7435 ;; Defined at:
  7436 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  comando         1    wreg     unsigned char 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  comando         1    6[COMRAM] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      void 
  7443 ;; Registers used:
  7444 ;;		wreg, status,2, status,0, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7450 ;;      Params:         0       0       0       0       0       0       0       0       0
  7451 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7453 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7454 ;;Total ram usage:        1 bytes
  7455 ;; Hardware stack levels used: 1
  7456 ;; Hardware stack levels required when called: 5
  7457 ;; This function calls:
  7458 ;;		_spi_s_write
  7459 ;; This function is called by:
  7460 ;;		_flush_TX_RX
  7461 ;;		_flush_RX
  7462 ;;		_flush_TX
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text36
  7467  004068                     __ptext36:
  7468                           	callstack 0
  7469  004068                     _nrf2401_comando:
  7470                           	callstack 23
  7471                           
  7472                           ;incstack = 0
  7473                           ;nrf2401_comando@comando stored from wreg
  7474  004068  6E07               	movwf	nrf2401_comando@comando^0,c
  7475  00406A                     
  7476                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  7477  00406A  948B               	bcf	139,2,c	;volatile
  7478  00406C                     
  7479                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  7480  00406C  5007               	movf	nrf2401_comando@comando^0,w,c
  7481  00406E  ECB9  F01D         	call	_spi_s_write
  7482  004072                     
  7483                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  7484  004072  848B               	bsf	139,2,c	;volatile
  7485  004074                     
  7486                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  7487  004074  0E14               	movlw	20
  7488  004076                     u8467:
  7489  004076  2EE8               	decfsz	wreg,f,c
  7490  004078  D7FE               	bra	u8467
  7491  00407A  0012               	return		;funcret
  7492  00407C                     __end_of_nrf2401_comando:
  7493                           	callstack 0
  7494                           
  7495 ;; *************** function _spi_s_write *****************
  7496 ;; Defined at:
  7497 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  dato_           1    wreg     unsigned char 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  dato_           1    4[COMRAM] unsigned char 
  7502 ;;  cont_s          1    5[COMRAM] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0
  7513 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7515 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7516 ;;Total ram usage:        2 bytes
  7517 ;; Hardware stack levels used: 1
  7518 ;; Hardware stack levels required when called: 4
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_nrf2401_write
  7523 ;;		_nrf2401_comando
  7524 ;;		_nrf2401_read
  7525 ;;		_nrf2401_direccion_TX_RX
  7526 ;;		_nrf2401_recibe
  7527 ;;		_nrf2401_envia
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text37
  7532  003B72                     __ptext37:
  7533                           	callstack 0
  7534  003B72                     _spi_s_write:
  7535                           	callstack 25
  7536                           
  7537                           ;incstack = 0
  7538                           ;spi_s_write@dato_ stored from wreg
  7539  003B72  6E05               	movwf	spi_s_write@dato_^0,c
  7540  003B74                     
  7541                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  7542  003B74  0E00               	movlw	0
  7543  003B76  6E06               	movwf	spi_s_write@cont_s^0,c
  7544                           
  7545                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  7546  003B78  0E00               	movlw	0
  7547  003B7A  6E06               	movwf	spi_s_write@cont_s^0,c
  7548  003B7C                     l262:
  7549                           
  7550                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  7551  003B7C  AE05               	btfss	spi_s_write@dato_^0,7,c
  7552  003B7E  EFC3  F01D         	goto	u7131
  7553  003B82  EFC5  F01D         	goto	u7130
  7554  003B86                     u7131:
  7555  003B86  EFC8  F01D         	goto	l264
  7556  003B8A                     u7130:
  7557  003B8A  828B               	bsf	139,1,c	;volatile
  7558  003B8C  EFC9  F01D         	goto	l5955
  7559  003B90                     l264:
  7560  003B90  928B               	bcf	139,1,c	;volatile
  7561  003B92                     l5955:
  7562                           
  7563                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  7564  003B92  90D8               	bcf	status,0,c
  7565  003B94  3605               	rlcf	spi_s_write@dato_^0,f,c
  7566  003B96                     
  7567                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  7568  003B96  848A               	bsf	138,2,c	;volatile
  7569  003B98                     
  7570                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  7571  003B98  0E14               	movlw	20
  7572  003B9A                     u8477:
  7573  003B9A  2EE8               	decfsz	wreg,f,c
  7574  003B9C  D7FE               	bra	u8477
  7575  003B9E                     
  7576                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  7577  003B9E  948A               	bcf	138,2,c	;volatile
  7578  003BA0                     
  7579                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  7580  003BA0  0E14               	movlw	20
  7581  003BA2                     u8487:
  7582  003BA2  2EE8               	decfsz	wreg,f,c
  7583  003BA4  D7FE               	bra	u8487
  7584  003BA6                     
  7585                           ;./Librerias/nRF24L01_2.h: 76:     }
  7586  003BA6  2A06               	incf	spi_s_write@cont_s^0,f,c
  7587  003BA8  0E07               	movlw	7
  7588  003BAA  6406               	cpfsgt	spi_s_write@cont_s^0,c
  7589  003BAC  EFDA  F01D         	goto	u7141
  7590  003BB0  EFDC  F01D         	goto	u7140
  7591  003BB4                     u7141:
  7592  003BB4  EFBE  F01D         	goto	l262
  7593  003BB8                     u7140:
  7594  003BB8  0012               	return		;funcret
  7595  003BBA                     __end_of_spi_s_write:
  7596                           	callstack 0
  7597                           
  7598 ;; *************** function _get_corriente_AC *****************
  7599 ;; Defined at:
  7600 ;;		line 135 in file "main.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  n_muestras      2   76[COMRAM] int 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  i               2    0[BANK0 ] int 
  7605 ;;  corriente       4    2[BANK0 ] int 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  4   76[COMRAM] int 
  7608 ;; Registers used:
  7609 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7615 ;;      Params:         4       0       0       0       0       0       0       0       0
  7616 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7617 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7618 ;;      Totals:         5       6       0       0       0       0       0       0       0
  7619 ;;Total ram usage:       11 bytes
  7620 ;; Hardware stack levels used: 1
  7621 ;; Hardware stack levels required when called: 6
  7622 ;; This function calls:
  7623 ;;		_ADC_GetConversion
  7624 ;;		___fladd
  7625 ;;		___fldiv
  7626 ;;		___flge
  7627 ;;		___flmul
  7628 ;;		___flsub
  7629 ;;		___xxtofl
  7630 ;; This function is called by:
  7631 ;;		_main
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text38
  7636  002A72                     __ptext38:
  7637                           	callstack 0
  7638  002A72                     _get_corriente_AC:
  7639                           	callstack 24
  7640  002A72                     
  7641                           ;main.c: 138:   I_max = 0.0;
  7642  002A72  0E00               	movlw	0
  7643  002A74  0100               	movlb	0	; () banked
  7644  002A76  6FE2               	movwf	_I_max& (0+255),b
  7645  002A78  0E00               	movlw	0
  7646  002A7A  6FE3               	movwf	(_I_max+1)& (0+255),b
  7647  002A7C  0E00               	movlw	0
  7648  002A7E  6FE4               	movwf	(_I_max+2)& (0+255),b
  7649  002A80  0E00               	movlw	0
  7650  002A82  6FE5               	movwf	(_I_max+3)& (0+255),b
  7651                           
  7652                           ;main.c: 139:   I_min = 0.0;
  7653  002A84  0E00               	movlw	0
  7654  002A86  6FDE               	movwf	_I_min& (0+255),b
  7655  002A88  0E00               	movlw	0
  7656  002A8A  6FDF               	movwf	(_I_min+1)& (0+255),b
  7657  002A8C  0E00               	movlw	0
  7658  002A8E  6FE0               	movwf	(_I_min+2)& (0+255),b
  7659  002A90  0E00               	movlw	0
  7660  002A92  6FE1               	movwf	(_I_min+3)& (0+255),b
  7661                           
  7662                           ;main.c: 140:   for(int i = 0; i < n_muestras; i++)
  7663  002A94  0E00               	movlw	0
  7664  002A96  6F61               	movwf	(get_corriente_AC@i+1)& (0+255),b
  7665  002A98  0E00               	movlw	0
  7666  002A9A  6F60               	movwf	get_corriente_AC@i& (0+255),b
  7667  002A9C  EFEB  F015         	goto	l6701
  7668  002AA0                     l6685:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;main.c: 141:   {;main.c: 142:       valor = ADC_GetConversion(0);
  7672  002AA0  0E00               	movlw	0
  7673  002AA2  EC88  F01E         	call	_ADC_GetConversion
  7674  002AA6  C005  F0FC         	movff	?_ADC_GetConversion,_valor
  7675  002AAA  C006  F0FD         	movff	?_ADC_GetConversion+1,_valor+1
  7676  002AAE                     
  7677                           ;main.c: 143:       voltaje = valor * (5.0 / 1023.0);
  7678  002AAE  C0FC  F005         	movff	_valor,___xxtofl@val
  7679  002AB2  C0FD  F006         	movff	_valor+1,___xxtofl@val+1
  7680  002AB6  6A07               	clrf	(___xxtofl@val+2)^0,c
  7681  002AB8  6A08               	clrf	(___xxtofl@val+3)^0,c
  7682  002ABA  0E00               	movlw	0
  7683  002ABC  EC27  F016         	call	___xxtofl
  7684  002AC0  C005  F013         	movff	?___xxtofl,___flmul@b
  7685  002AC4  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  7686  002AC8  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  7687  002ACC  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  7688  002AD0  0E0A               	movlw	10
  7689  002AD2  6E17               	movwf	___flmul@a^0,c
  7690  002AD4  0E28               	movlw	40
  7691  002AD6  6E18               	movwf	(___flmul@a+1)^0,c
  7692  002AD8  0EA0               	movlw	160
  7693  002ADA  6E19               	movwf	(___flmul@a+2)^0,c
  7694  002ADC  0E3B               	movlw	59
  7695  002ADE  6E1A               	movwf	(___flmul@a+3)^0,c
  7696  002AE0  ECDB  F00E         	call	___flmul	;wreg free
  7697  002AE4  C013  F118         	movff	?___flmul,_voltaje
  7698  002AE8  C014  F119         	movff	?___flmul+1,_voltaje+1
  7699  002AEC  C015  F11A         	movff	?___flmul+2,_voltaje+2
  7700  002AF0  C016  F11B         	movff	?___flmul+3,_voltaje+3
  7701  002AF4                     
  7702                           ;main.c: 144:       corriente = ((voltaje - 2.527) / sensibilidad);
  7703  002AF4  0E5E               	movlw	94
  7704  002AF6  6E09               	movwf	___fladd@a^0,c
  7705  002AF8  0EBA               	movlw	186
  7706  002AFA  6E0A               	movwf	(___fladd@a+1)^0,c
  7707  002AFC  0E21               	movlw	33
  7708  002AFE  6E0B               	movwf	(___fladd@a+2)^0,c
  7709  002B00  0EC0               	movlw	192
  7710  002B02  6E0C               	movwf	(___fladd@a+3)^0,c
  7711  002B04  C118  F005         	movff	_voltaje,___fladd@b
  7712  002B08  C119  F006         	movff	_voltaje+1,___fladd@b+1
  7713  002B0C  C11A  F007         	movff	_voltaje+2,___fladd@b+2
  7714  002B10  C11B  F008         	movff	_voltaje+3,___fladd@b+3
  7715  002B14  EC44  F00A         	call	___fladd	;wreg free
  7716  002B18  C005  F034         	movff	?___fladd,___fldiv@b
  7717  002B1C  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  7718  002B20  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  7719  002B24  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  7720  002B28  0E4E               	movlw	78
  7721  002B2A  6E38               	movwf	___fldiv@a^0,c
  7722  002B2C  0E62               	movlw	98
  7723  002B2E  6E39               	movwf	(___fldiv@a+1)^0,c
  7724  002B30  0E90               	movlw	144
  7725  002B32  6E3A               	movwf	(___fldiv@a+2)^0,c
  7726  002B34  0E3E               	movlw	62
  7727  002B36  6E3B               	movwf	(___fldiv@a+3)^0,c
  7728  002B38  ECF0  F010         	call	___fldiv	;wreg free
  7729  002B3C  C034  F062         	movff	?___fldiv,get_corriente_AC@corriente
  7730  002B40  C035  F063         	movff	?___fldiv+1,get_corriente_AC@corriente+1
  7731  002B44  C036  F064         	movff	?___fldiv+2,get_corriente_AC@corriente+2
  7732  002B48  C037  F065         	movff	?___fldiv+3,get_corriente_AC@corriente+3
  7733  002B4C                     
  7734                           ;main.c: 145:       if (corriente > I_max) I_max = corriente;
  7735  002B4C  C0E2  F02C         	movff	_I_max,___flge@ff1
  7736  002B50  C0E3  F02D         	movff	_I_max+1,___flge@ff1+1
  7737  002B54  C0E4  F02E         	movff	_I_max+2,___flge@ff1+2
  7738  002B58  C0E5  F02F         	movff	_I_max+3,___flge@ff1+3
  7739  002B5C  C062  F030         	movff	get_corriente_AC@corriente,___flge@ff2
  7740  002B60  C063  F031         	movff	get_corriente_AC@corriente+1,___flge@ff2+1
  7741  002B64  C064  F032         	movff	get_corriente_AC@corriente+2,___flge@ff2+2
  7742  002B68  C065  F033         	movff	get_corriente_AC@corriente+3,___flge@ff2+3
  7743  002B6C  EC0B  F019         	call	___flge	;wreg free
  7744  002B70  B0D8               	btfsc	status,0,c
  7745  002B72  EFBD  F015         	goto	u8131
  7746  002B76  EFBF  F015         	goto	u8130
  7747  002B7A                     u8131:
  7748  002B7A  EFC7  F015         	goto	l6695
  7749  002B7E                     u8130:
  7750  002B7E  C062  F0E2         	movff	get_corriente_AC@corriente,_I_max
  7751  002B82  C063  F0E3         	movff	get_corriente_AC@corriente+1,_I_max+1
  7752  002B86  C064  F0E4         	movff	get_corriente_AC@corriente+2,_I_max+2
  7753  002B8A  C065  F0E5         	movff	get_corriente_AC@corriente+3,_I_max+3
  7754  002B8E                     l6695:
  7755                           
  7756                           ;main.c: 146:       if (corriente < I_min) I_min = corriente;
  7757  002B8E  C062  F02C         	movff	get_corriente_AC@corriente,___flge@ff1
  7758  002B92  C063  F02D         	movff	get_corriente_AC@corriente+1,___flge@ff1+1
  7759  002B96  C064  F02E         	movff	get_corriente_AC@corriente+2,___flge@ff1+2
  7760  002B9A  C065  F02F         	movff	get_corriente_AC@corriente+3,___flge@ff1+3
  7761  002B9E  C0DE  F030         	movff	_I_min,___flge@ff2
  7762  002BA2  C0DF  F031         	movff	_I_min+1,___flge@ff2+1
  7763  002BA6  C0E0  F032         	movff	_I_min+2,___flge@ff2+2
  7764  002BAA  C0E1  F033         	movff	_I_min+3,___flge@ff2+3
  7765  002BAE  EC0B  F019         	call	___flge	;wreg free
  7766  002BB2  B0D8               	btfsc	status,0,c
  7767  002BB4  EFDE  F015         	goto	u8141
  7768  002BB8  EFE0  F015         	goto	u8140
  7769  002BBC                     u8141:
  7770  002BBC  EFE8  F015         	goto	l6699
  7771  002BC0                     u8140:
  7772  002BC0  C062  F0DE         	movff	get_corriente_AC@corriente,_I_min
  7773  002BC4  C063  F0DF         	movff	get_corriente_AC@corriente+1,_I_min+1
  7774  002BC8  C064  F0E0         	movff	get_corriente_AC@corriente+2,_I_min+2
  7775  002BCC  C065  F0E1         	movff	get_corriente_AC@corriente+3,_I_min+3
  7776  002BD0                     l6699:
  7777                           
  7778                           ;main.c: 147:   }
  7779  002BD0  0100               	movlb	0	; () banked
  7780  002BD2  4B60               	infsnz	get_corriente_AC@i& (0+255),f,b
  7781  002BD4  2B61               	incf	(get_corriente_AC@i+1)& (0+255),f,b
  7782  002BD6                     l6701:
  7783                           
  7784                           ; BSR set to: 0
  7785  002BD6  504D               	movf	get_corriente_AC@n_muestras^0,w,c
  7786  002BD8  5D60               	subwf	get_corriente_AC@i& (0+255),w,b
  7787  002BDA  5161               	movf	(get_corriente_AC@i+1)& (0+255),w,b
  7788  002BDC  0A80               	xorlw	128
  7789  002BDE  6E51               	movwf	??_get_corriente_AC^0,c
  7790  002BE0  504E               	movf	(get_corriente_AC@n_muestras+1)^0,w,c
  7791  002BE2  0A80               	xorlw	128
  7792  002BE4  5851               	subwfb	??_get_corriente_AC^0,w,c
  7793  002BE6  A0D8               	btfss	status,0,c
  7794  002BE8  EFF8  F015         	goto	u8151
  7795  002BEC  EFFA  F015         	goto	u8150
  7796  002BF0                     u8151:
  7797  002BF0  EF50  F015         	goto	l6685
  7798  002BF4                     u8150:
  7799  002BF4                     
  7800                           ; BSR set to: 0
  7801                           ;main.c: 150:   return(((I_max - I_min) / 2));
  7802  002BF4  C0DE  F030         	movff	_I_min,___flsub@a
  7803  002BF8  C0DF  F031         	movff	_I_min+1,___flsub@a+1
  7804  002BFC  C0E0  F032         	movff	_I_min+2,___flsub@a+2
  7805  002C00  C0E1  F033         	movff	_I_min+3,___flsub@a+3
  7806  002C04  C0E2  F02C         	movff	_I_max,___flsub@b
  7807  002C08  C0E3  F02D         	movff	_I_max+1,___flsub@b+1
  7808  002C0C  C0E4  F02E         	movff	_I_max+2,___flsub@b+2
  7809  002C10  C0E5  F02F         	movff	_I_max+3,___flsub@b+3
  7810  002C14  EC23  F01E         	call	___flsub	;wreg free
  7811  002C18  C02C  F034         	movff	?___flsub,___fldiv@b
  7812  002C1C  C02D  F035         	movff	?___flsub+1,___fldiv@b+1
  7813  002C20  C02E  F036         	movff	?___flsub+2,___fldiv@b+2
  7814  002C24  C02F  F037         	movff	?___flsub+3,___fldiv@b+3
  7815  002C28  0E00               	movlw	0
  7816  002C2A  6E38               	movwf	___fldiv@a^0,c
  7817  002C2C  0E00               	movlw	0
  7818  002C2E  6E39               	movwf	(___fldiv@a+1)^0,c
  7819  002C30  0E00               	movlw	0
  7820  002C32  6E3A               	movwf	(___fldiv@a+2)^0,c
  7821  002C34  0E40               	movlw	64
  7822  002C36  6E3B               	movwf	(___fldiv@a+3)^0,c
  7823  002C38  ECF0  F010         	call	___fldiv	;wreg free
  7824  002C3C  C034  F04D         	movff	?___fldiv,?_get_corriente_AC
  7825  002C40  C035  F04E         	movff	?___fldiv+1,?_get_corriente_AC+1
  7826  002C44  C036  F04F         	movff	?___fldiv+2,?_get_corriente_AC+2
  7827  002C48  C037  F050         	movff	?___fldiv+3,?_get_corriente_AC+3
  7828  002C4C  0012               	return		;funcret
  7829  002C4E                     __end_of_get_corriente_AC:
  7830                           	callstack 0
  7831                           
  7832 ;; *************** function ___xxtofl *****************
  7833 ;; Defined at:
  7834 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  sign            1    wreg     unsigned char 
  7837 ;;  val             4    4[COMRAM] long 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  sign            1   12[COMRAM] unsigned char 
  7840 ;;  arg             4   14[COMRAM] unsigned long 
  7841 ;;  exp             1   13[COMRAM] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  4    4[COMRAM] unsigned char 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7851 ;;      Params:         4       0       0       0       0       0       0       0       0
  7852 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7853 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7854 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7855 ;;Total ram usage:       14 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; Hardware stack levels required when called: 4
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_get_corriente_AC
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text39
  7866  002C4E                     __ptext39:
  7867                           	callstack 0
  7868  002C4E                     ___xxtofl:
  7869                           	callstack 25
  7870                           
  7871                           ;incstack = 0
  7872                           ;___xxtofl@sign stored from wreg
  7873  002C4E  6E0D               	movwf	___xxtofl@sign^0,c
  7874  002C50  500D               	movf	___xxtofl@sign^0,w,c
  7875  002C52  B4D8               	btfsc	status,2,c
  7876  002C54  EF2E  F016         	goto	u7981
  7877  002C58  EF30  F016         	goto	u7980
  7878  002C5C                     u7981:
  7879  002C5C  EF52  F016         	goto	l1157
  7880  002C60                     u7980:
  7881  002C60  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7882  002C62  EF37  F016         	goto	u7990
  7883  002C66  EF35  F016         	goto	u7991
  7884  002C6A                     u7991:
  7885  002C6A  EF52  F016         	goto	l1157
  7886  002C6E                     u7990:
  7887  002C6E  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7888  002C72  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7889  002C76  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7890  002C7A  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7891  002C7E  1E09               	comf	??___xxtofl^0,f,c
  7892  002C80  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7893  002C82  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7894  002C84  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7895  002C86  2A09               	incf	??___xxtofl^0,f,c
  7896  002C88  0E00               	movlw	0
  7897  002C8A  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7898  002C8C  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7899  002C8E  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7900  002C90  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7901  002C94  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7902  002C98  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7903  002C9C  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7904  002CA0  EF5A  F016         	goto	l6543
  7905  002CA4                     l1157:
  7906  002CA4  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7907  002CA8  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7908  002CAC  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7909  002CB0  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7910  002CB4                     l6543:
  7911  002CB4  5005               	movf	___xxtofl@val^0,w,c
  7912  002CB6  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7913  002CB8  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7914  002CBA  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7915  002CBC  A4D8               	btfss	status,2,c
  7916  002CBE  EF63  F016         	goto	u8001
  7917  002CC2  EF65  F016         	goto	u8000
  7918  002CC6                     u8001:
  7919  002CC6  EF6F  F016         	goto	l6549
  7920  002CCA                     u8000:
  7921  002CCA  0E00               	movlw	0
  7922  002CCC  6E05               	movwf	?___xxtofl^0,c
  7923  002CCE  0E00               	movlw	0
  7924  002CD0  6E06               	movwf	(?___xxtofl+1)^0,c
  7925  002CD2  0E00               	movlw	0
  7926  002CD4  6E07               	movwf	(?___xxtofl+2)^0,c
  7927  002CD6  0E00               	movlw	0
  7928  002CD8  6E08               	movwf	(?___xxtofl+3)^0,c
  7929  002CDA  EF00  F017         	goto	l1160
  7930  002CDE                     l6549:
  7931  002CDE  0E96               	movlw	150
  7932  002CE0  6E0E               	movwf	___xxtofl@exp^0,c
  7933  002CE2  EF79  F016         	goto	l6553
  7934  002CE6                     l6551:
  7935  002CE6  2A0E               	incf	___xxtofl@exp^0,f,c
  7936  002CE8  90D8               	bcf	status,0,c
  7937  002CEA  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7938  002CEC  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7939  002CEE  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7940  002CF0  320F               	rrcf	___xxtofl@arg^0,f,c
  7941  002CF2                     l6553:
  7942  002CF2  0E00               	movlw	0
  7943  002CF4  140F               	andwf	___xxtofl@arg^0,w,c
  7944  002CF6  6E09               	movwf	??___xxtofl^0,c
  7945  002CF8  0E00               	movlw	0
  7946  002CFA  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7947  002CFC  6E0A               	movwf	(??___xxtofl+1)^0,c
  7948  002CFE  0E00               	movlw	0
  7949  002D00  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7950  002D02  6E0B               	movwf	(??___xxtofl+2)^0,c
  7951  002D04  0EFE               	movlw	254
  7952  002D06  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7953  002D08  6E0C               	movwf	(??___xxtofl+3)^0,c
  7954  002D0A  5009               	movf	??___xxtofl^0,w,c
  7955  002D0C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7956  002D0E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7957  002D10  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7958  002D12  A4D8               	btfss	status,2,c
  7959  002D14  EF8E  F016         	goto	u8011
  7960  002D18  EF90  F016         	goto	u8010
  7961  002D1C                     u8011:
  7962  002D1C  EF73  F016         	goto	l6551
  7963  002D20                     u8010:
  7964  002D20  EF9E  F016         	goto	l1164
  7965  002D24                     l6555:
  7966  002D24  2A0E               	incf	___xxtofl@exp^0,f,c
  7967  002D26  0E01               	movlw	1
  7968  002D28  260F               	addwf	___xxtofl@arg^0,f,c
  7969  002D2A  0E00               	movlw	0
  7970  002D2C  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7971  002D2E  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7972  002D30  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7973  002D32  90D8               	bcf	status,0,c
  7974  002D34  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7975  002D36  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7976  002D38  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7977  002D3A  320F               	rrcf	___xxtofl@arg^0,f,c
  7978  002D3C                     l1164:
  7979  002D3C  0E00               	movlw	0
  7980  002D3E  140F               	andwf	___xxtofl@arg^0,w,c
  7981  002D40  6E09               	movwf	??___xxtofl^0,c
  7982  002D42  0E00               	movlw	0
  7983  002D44  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7984  002D46  6E0A               	movwf	(??___xxtofl+1)^0,c
  7985  002D48  0E00               	movlw	0
  7986  002D4A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7987  002D4C  6E0B               	movwf	(??___xxtofl+2)^0,c
  7988  002D4E  0EFF               	movlw	255
  7989  002D50  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7990  002D52  6E0C               	movwf	(??___xxtofl+3)^0,c
  7991  002D54  5009               	movf	??___xxtofl^0,w,c
  7992  002D56  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7993  002D58  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7994  002D5A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7995  002D5C  A4D8               	btfss	status,2,c
  7996  002D5E  EFB3  F016         	goto	u8021
  7997  002D62  EFB5  F016         	goto	u8020
  7998  002D66                     u8021:
  7999  002D66  EF92  F016         	goto	l6555
  8000  002D6A                     u8020:
  8001  002D6A  EFBD  F016         	goto	l6563
  8002  002D6E                     l6561:
  8003  002D6E  060E               	decf	___xxtofl@exp^0,f,c
  8004  002D70  90D8               	bcf	status,0,c
  8005  002D72  360F               	rlcf	___xxtofl@arg^0,f,c
  8006  002D74  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8007  002D76  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8008  002D78  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8009  002D7A                     l6563:
  8010  002D7A  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8011  002D7C  EFC2  F016         	goto	u8031
  8012  002D80  EFC4  F016         	goto	u8030
  8013  002D84                     u8031:
  8014  002D84  EFCC  F016         	goto	l1171
  8015  002D88                     u8030:
  8016  002D88  0E02               	movlw	2
  8017  002D8A  600E               	cpfslt	___xxtofl@exp^0,c
  8018  002D8C  EFCA  F016         	goto	u8041
  8019  002D90  EFCC  F016         	goto	u8040
  8020  002D94                     u8041:
  8021  002D94  EFB7  F016         	goto	l6561
  8022  002D98                     u8040:
  8023  002D98                     l1171:
  8024  002D98  B00E               	btfsc	___xxtofl@exp^0,0,c
  8025  002D9A  EFD1  F016         	goto	u8051
  8026  002D9E  EFD3  F016         	goto	u8050
  8027  002DA2                     u8051:
  8028  002DA2  EFD4  F016         	goto	l6569
  8029  002DA6                     u8050:
  8030  002DA6  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8031  002DA8                     l6569:
  8032  002DA8  90D8               	bcf	status,0,c
  8033  002DAA  320E               	rrcf	___xxtofl@exp^0,f,c
  8034  002DAC  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8035  002DB0  6A0A               	clrf	(??___xxtofl+1)^0,c
  8036  002DB2  6A0B               	clrf	(??___xxtofl+2)^0,c
  8037  002DB4  6A0C               	clrf	(??___xxtofl+3)^0,c
  8038  002DB6  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8039  002DBA  6A0B               	clrf	(??___xxtofl+2)^0,c
  8040  002DBC  6A0A               	clrf	(??___xxtofl+1)^0,c
  8041  002DBE  6A09               	clrf	??___xxtofl^0,c
  8042  002DC0  5009               	movf	??___xxtofl^0,w,c
  8043  002DC2  120F               	iorwf	___xxtofl@arg^0,f,c
  8044  002DC4  500A               	movf	(??___xxtofl+1)^0,w,c
  8045  002DC6  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8046  002DC8  500B               	movf	(??___xxtofl+2)^0,w,c
  8047  002DCA  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8048  002DCC  500C               	movf	(??___xxtofl+3)^0,w,c
  8049  002DCE  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8050  002DD0  500D               	movf	___xxtofl@sign^0,w,c
  8051  002DD2  B4D8               	btfsc	status,2,c
  8052  002DD4  EFEE  F016         	goto	u8061
  8053  002DD8  EFF0  F016         	goto	u8060
  8054  002DDC                     u8061:
  8055  002DDC  EFF8  F016         	goto	l6579
  8056  002DE0                     u8060:
  8057  002DE0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8058  002DE2  EFF7  F016         	goto	u8070
  8059  002DE6  EFF5  F016         	goto	u8071
  8060  002DEA                     u8071:
  8061  002DEA  EFF8  F016         	goto	l6579
  8062  002DEE                     u8070:
  8063  002DEE  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8064  002DF0                     l6579:
  8065  002DF0  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8066  002DF4  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8067  002DF8  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8068  002DFC  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8069  002E00                     l1160:
  8070  002E00  0012               	return		;funcret
  8071  002E02                     __end_of___xxtofl:
  8072                           	callstack 0
  8073                           
  8074 ;; *************** function ___flsub *****************
  8075 ;; Defined at:
  8076 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  b               4   43[COMRAM] unsigned char 
  8079 ;;  a               4   47[COMRAM] unsigned char 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;		None
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  4   43[COMRAM] unsigned char 
  8084 ;; Registers used:
  8085 ;;		wreg, status,2, status,0, cstack
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8091 ;;      Params:         8       0       0       0       0       0       0       0       0
  8092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8094 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8095 ;;Total ram usage:        8 bytes
  8096 ;; Hardware stack levels used: 1
  8097 ;; Hardware stack levels required when called: 5
  8098 ;; This function calls:
  8099 ;;		___fladd
  8100 ;; This function is called by:
  8101 ;;		_get_corriente_AC
  8102 ;;		_main
  8103 ;;		_efgtoa
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           	psect	text40
  8108  003C46                     __ptext40:
  8109                           	callstack 0
  8110  003C46                     ___flsub:
  8111                           	callstack 21
  8112  003C46  0E00               	movlw	0
  8113  003C48  1A30               	xorwf	___flsub@a^0,f,c
  8114  003C4A  0E00               	movlw	0
  8115  003C4C  1A31               	xorwf	(___flsub@a+1)^0,f,c
  8116  003C4E  0E00               	movlw	0
  8117  003C50  1A32               	xorwf	(___flsub@a+2)^0,f,c
  8118  003C52  0E80               	movlw	128
  8119  003C54  1A33               	xorwf	(___flsub@a+3)^0,f,c
  8120  003C56  C02C  F005         	movff	___flsub@b,___fladd@b
  8121  003C5A  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  8122  003C5E  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  8123  003C62  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  8124  003C66  C030  F009         	movff	___flsub@a,___fladd@a
  8125  003C6A  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  8126  003C6E  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  8127  003C72  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  8128  003C76  EC44  F00A         	call	___fladd	;wreg free
  8129  003C7A  C005  F02C         	movff	?___fladd,?___flsub
  8130  003C7E  C006  F02D         	movff	?___fladd+1,?___flsub+1
  8131  003C82  C007  F02E         	movff	?___fladd+2,?___flsub+2
  8132  003C86  C008  F02F         	movff	?___fladd+3,?___flsub+3
  8133  003C8A  0012               	return		;funcret
  8134  003C8C                     __end_of___flsub:
  8135                           	callstack 0
  8136                           
  8137 ;; *************** function ___fladd *****************
  8138 ;; Defined at:
  8139 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  b               4    4[COMRAM] unsigned char 
  8142 ;;  a               4    8[COMRAM] unsigned char 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  grs             1   19[COMRAM] unsigned char 
  8145 ;;  bexp            1   18[COMRAM] unsigned char 
  8146 ;;  aexp            1   17[COMRAM] unsigned char 
  8147 ;;  signs           1   16[COMRAM] unsigned char 
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  4    4[COMRAM] unsigned char 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8157 ;;      Params:         8       0       0       0       0       0       0       0       0
  8158 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8159 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8160 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8161 ;;Total ram usage:       16 bytes
  8162 ;; Hardware stack levels used: 1
  8163 ;; Hardware stack levels required when called: 4
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_get_corriente_AC
  8168 ;;		___flsub
  8169 ;;		_efgtoa
  8170 ;;		_main
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text41
  8175  001488                     __ptext41:
  8176                           	callstack 0
  8177  001488                     ___fladd:
  8178                           	callstack 21
  8179  001488  5008               	movf	(___fladd@b+3)^0,w,c
  8180  00148A  0B80               	andlw	128
  8181  00148C  6E11               	movwf	___fladd@signs^0,c
  8182  00148E  5008               	movf	(___fladd@b+3)^0,w,c
  8183  001490  2408               	addwf	(___fladd@b+3)^0,w,c
  8184  001492  6E13               	movwf	___fladd@bexp^0,c
  8185  001494  AE07               	btfss	(___fladd@b+2)^0,7,c
  8186  001496  EF4F  F00A         	goto	u5681
  8187  00149A  EF51  F00A         	goto	u5680
  8188  00149E                     u5681:
  8189  00149E  EF52  F00A         	goto	l5149
  8190  0014A2                     u5680:
  8191  0014A2  8013               	bsf	___fladd@bexp^0,0,c
  8192  0014A4                     l5149:
  8193  0014A4  5013               	movf	___fladd@bexp^0,w,c
  8194  0014A6  B4D8               	btfsc	status,2,c
  8195  0014A8  EF58  F00A         	goto	u5691
  8196  0014AC  EF5A  F00A         	goto	u5690
  8197  0014B0                     u5691:
  8198  0014B0  EF6F  F00A         	goto	l5159
  8199  0014B4                     u5690:
  8200  0014B4  2813               	incf	___fladd@bexp^0,w,c
  8201  0014B6  A4D8               	btfss	status,2,c
  8202  0014B8  EF60  F00A         	goto	u5701
  8203  0014BC  EF62  F00A         	goto	u5700
  8204  0014C0                     u5701:
  8205  0014C0  EF6A  F00A         	goto	l5155
  8206  0014C4                     u5700:
  8207  0014C4  0E00               	movlw	0
  8208  0014C6  6E05               	movwf	___fladd@b^0,c
  8209  0014C8  0E00               	movlw	0
  8210  0014CA  6E06               	movwf	(___fladd@b+1)^0,c
  8211  0014CC  0E00               	movlw	0
  8212  0014CE  6E07               	movwf	(___fladd@b+2)^0,c
  8213  0014D0  0E00               	movlw	0
  8214  0014D2  6E08               	movwf	(___fladd@b+3)^0,c
  8215  0014D4                     l5155:
  8216  0014D4  8E07               	bsf	(___fladd@b+2)^0,7,c
  8217  0014D6  0E00               	movlw	0
  8218  0014D8  6E08               	movwf	(___fladd@b+3)^0,c
  8219  0014DA  EF77  F00A         	goto	l5161
  8220  0014DE                     l5159:
  8221  0014DE  0E00               	movlw	0
  8222  0014E0  6E05               	movwf	___fladd@b^0,c
  8223  0014E2  0E00               	movlw	0
  8224  0014E4  6E06               	movwf	(___fladd@b+1)^0,c
  8225  0014E6  0E00               	movlw	0
  8226  0014E8  6E07               	movwf	(___fladd@b+2)^0,c
  8227  0014EA  0E00               	movlw	0
  8228  0014EC  6E08               	movwf	(___fladd@b+3)^0,c
  8229  0014EE                     l5161:
  8230  0014EE  500C               	movf	(___fladd@a+3)^0,w,c
  8231  0014F0  0B80               	andlw	128
  8232  0014F2  6E12               	movwf	___fladd@aexp^0,c
  8233  0014F4  5011               	movf	___fladd@signs^0,w,c
  8234  0014F6  1812               	xorwf	___fladd@aexp^0,w,c
  8235  0014F8  B4D8               	btfsc	status,2,c
  8236  0014FA  EF81  F00A         	goto	u5711
  8237  0014FE  EF83  F00A         	goto	u5710
  8238  001502                     u5711:
  8239  001502  EF84  F00A         	goto	l5167
  8240  001506                     u5710:
  8241  001506  8C11               	bsf	___fladd@signs^0,6,c
  8242  001508                     l5167:
  8243  001508  500C               	movf	(___fladd@a+3)^0,w,c
  8244  00150A  240C               	addwf	(___fladd@a+3)^0,w,c
  8245  00150C  6E12               	movwf	___fladd@aexp^0,c
  8246  00150E  AE0B               	btfss	(___fladd@a+2)^0,7,c
  8247  001510  EF8C  F00A         	goto	u5721
  8248  001514  EF8E  F00A         	goto	u5720
  8249  001518                     u5721:
  8250  001518  EF8F  F00A         	goto	l5173
  8251  00151C                     u5720:
  8252  00151C  8012               	bsf	___fladd@aexp^0,0,c
  8253  00151E                     l5173:
  8254  00151E  5012               	movf	___fladd@aexp^0,w,c
  8255  001520  B4D8               	btfsc	status,2,c
  8256  001522  EF95  F00A         	goto	u5731
  8257  001526  EF97  F00A         	goto	u5730
  8258  00152A                     u5731:
  8259  00152A  EFAC  F00A         	goto	l5183
  8260  00152E                     u5730:
  8261  00152E  2812               	incf	___fladd@aexp^0,w,c
  8262  001530  A4D8               	btfss	status,2,c
  8263  001532  EF9D  F00A         	goto	u5741
  8264  001536  EF9F  F00A         	goto	u5740
  8265  00153A                     u5741:
  8266  00153A  EFA7  F00A         	goto	l5179
  8267  00153E                     u5740:
  8268  00153E  0E00               	movlw	0
  8269  001540  6E09               	movwf	___fladd@a^0,c
  8270  001542  0E00               	movlw	0
  8271  001544  6E0A               	movwf	(___fladd@a+1)^0,c
  8272  001546  0E00               	movlw	0
  8273  001548  6E0B               	movwf	(___fladd@a+2)^0,c
  8274  00154A  0E00               	movlw	0
  8275  00154C  6E0C               	movwf	(___fladd@a+3)^0,c
  8276  00154E                     l5179:
  8277  00154E  8E0B               	bsf	(___fladd@a+2)^0,7,c
  8278  001550  0E00               	movlw	0
  8279  001552  6E0C               	movwf	(___fladd@a+3)^0,c
  8280  001554  EFB4  F00A         	goto	l5185
  8281  001558                     l5183:
  8282  001558  0E00               	movlw	0
  8283  00155A  6E09               	movwf	___fladd@a^0,c
  8284  00155C  0E00               	movlw	0
  8285  00155E  6E0A               	movwf	(___fladd@a+1)^0,c
  8286  001560  0E00               	movlw	0
  8287  001562  6E0B               	movwf	(___fladd@a+2)^0,c
  8288  001564  0E00               	movlw	0
  8289  001566  6E0C               	movwf	(___fladd@a+3)^0,c
  8290  001568                     l5185:
  8291  001568  5013               	movf	___fladd@bexp^0,w,c
  8292  00156A  5C12               	subwf	___fladd@aexp^0,w,c
  8293  00156C  B0D8               	btfsc	status,0,c
  8294  00156E  EFBB  F00A         	goto	u5751
  8295  001572  EFBD  F00A         	goto	u5750
  8296  001576                     u5751:
  8297  001576  EFE4  F00A         	goto	l5221
  8298  00157A                     u5750:
  8299  00157A  AC11               	btfss	___fladd@signs^0,6,c
  8300  00157C  EFC2  F00A         	goto	u5761
  8301  001580  EFC4  F00A         	goto	u5760
  8302  001584                     u5761:
  8303  001584  EFC6  F00A         	goto	l5191
  8304  001588                     u5760:
  8305  001588  0E80               	movlw	128
  8306  00158A  1A11               	xorwf	___fladd@signs^0,f,c
  8307  00158C                     l5191:
  8308  00158C  C013  F014         	movff	___fladd@bexp,___fladd@grs
  8309  001590  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8310  001594  C014  F012         	movff	___fladd@grs,___fladd@aexp
  8311  001598  C005  F014         	movff	___fladd@b,___fladd@grs
  8312  00159C  C009  F005         	movff	___fladd@a,___fladd@b
  8313  0015A0  C014  F009         	movff	___fladd@grs,___fladd@a
  8314  0015A4  C006  F014         	movff	___fladd@b+1,___fladd@grs
  8315  0015A8  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  8316  0015AC  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  8317  0015B0  C007  F014         	movff	___fladd@b+2,___fladd@grs
  8318  0015B4  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  8319  0015B8  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  8320  0015BC  C008  F014         	movff	___fladd@b+3,___fladd@grs
  8321  0015C0  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  8322  0015C4  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  8323  0015C8                     l5221:
  8324  0015C8  0E00               	movlw	0
  8325  0015CA  6E14               	movwf	___fladd@grs^0,c
  8326  0015CC  5013               	movf	___fladd@bexp^0,w,c
  8327  0015CE  C012  F00D         	movff	___fladd@aexp,??___fladd
  8328  0015D2  6A0E               	clrf	(??___fladd+1)^0,c
  8329  0015D4  5E0D               	subwf	??___fladd^0,f,c
  8330  0015D6  0E00               	movlw	0
  8331  0015D8  5A0E               	subwfb	(??___fladd+1)^0,f,c
  8332  0015DA  BE0E               	btfsc	(??___fladd+1)^0,7,c
  8333  0015DC  EFF9  F00A         	goto	u5771
  8334  0015E0  500E               	movf	(??___fladd+1)^0,w,c
  8335  0015E2  E109               	bnz	u5770
  8336  0015E4  0E1A               	movlw	26
  8337  0015E6  5C0D               	subwf	??___fladd^0,w,c
  8338  0015E8  A0D8               	btfss	status,0,c
  8339  0015EA  EFF9  F00A         	goto	u5771
  8340  0015EE  EFFB  F00A         	goto	u5770
  8341  0015F2                     u5771:
  8342  0015F2  EF32  F00B         	goto	l1031
  8343  0015F6                     u5770:
  8344  0015F6  5005               	movf	___fladd@b^0,w,c
  8345  0015F8  1006               	iorwf	(___fladd@b+1)^0,w,c
  8346  0015FA  1007               	iorwf	(___fladd@b+2)^0,w,c
  8347  0015FC  1008               	iorwf	(___fladd@b+3)^0,w,c
  8348  0015FE  A4D8               	btfss	status,2,c
  8349  001600  EF04  F00B         	goto	u5781
  8350  001604  EF07  F00B         	goto	u5780
  8351  001608                     u5781:
  8352  001608  0E01               	movlw	1
  8353  00160A  EF08  F00B         	goto	u5790
  8354  00160E                     u5780:
  8355  00160E  0E00               	movlw	0
  8356  001610                     u5790:
  8357  001610  6E14               	movwf	___fladd@grs^0,c
  8358  001612  0E00               	movlw	0
  8359  001614  6E05               	movwf	___fladd@b^0,c
  8360  001616  0E00               	movlw	0
  8361  001618  6E06               	movwf	(___fladd@b+1)^0,c
  8362  00161A  0E00               	movlw	0
  8363  00161C  6E07               	movwf	(___fladd@b+2)^0,c
  8364  00161E  0E00               	movlw	0
  8365  001620  6E08               	movwf	(___fladd@b+3)^0,c
  8366  001622  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8367  001626  EF3B  F00B         	goto	l1030
  8368  00162A                     l1032:
  8369  00162A  A014               	btfss	___fladd@grs^0,0,c
  8370  00162C  EF1A  F00B         	goto	u5801
  8371  001630  EF1C  F00B         	goto	u5800
  8372  001634                     u5801:
  8373  001634  EF22  F00B         	goto	l5233
  8374  001638                     u5800:
  8375  001638  90D8               	bcf	status,0,c
  8376  00163A  3014               	rrcf	___fladd@grs^0,w,c
  8377  00163C  0901               	iorlw	1
  8378  00163E  6E14               	movwf	___fladd@grs^0,c
  8379  001640  EF24  F00B         	goto	l5235
  8380  001644                     l5233:
  8381  001644  90D8               	bcf	status,0,c
  8382  001646  3214               	rrcf	___fladd@grs^0,f,c
  8383  001648                     l5235:
  8384  001648  A005               	btfss	___fladd@b^0,0,c
  8385  00164A  EF29  F00B         	goto	u5811
  8386  00164E  EF2B  F00B         	goto	u5810
  8387  001652                     u5811:
  8388  001652  EF2C  F00B         	goto	l5239
  8389  001656                     u5810:
  8390  001656  8E14               	bsf	___fladd@grs^0,7,c
  8391  001658                     l5239:
  8392  001658  3408               	rlcf	(___fladd@b+3)^0,w,c
  8393  00165A  3208               	rrcf	(___fladd@b+3)^0,f,c
  8394  00165C  3207               	rrcf	(___fladd@b+2)^0,f,c
  8395  00165E  3206               	rrcf	(___fladd@b+1)^0,f,c
  8396  001660  3205               	rrcf	___fladd@b^0,f,c
  8397  001662  2A13               	incf	___fladd@bexp^0,f,c
  8398  001664                     l1031:
  8399  001664  5012               	movf	___fladd@aexp^0,w,c
  8400  001666  5C13               	subwf	___fladd@bexp^0,w,c
  8401  001668  A0D8               	btfss	status,0,c
  8402  00166A  EF39  F00B         	goto	u5821
  8403  00166E  EF3B  F00B         	goto	u5820
  8404  001672                     u5821:
  8405  001672  EF15  F00B         	goto	l1032
  8406  001676                     u5820:
  8407  001676                     l1030:
  8408  001676  BC11               	btfsc	___fladd@signs^0,6,c
  8409  001678  EF40  F00B         	goto	u5831
  8410  00167C  EF42  F00B         	goto	u5830
  8411  001680                     u5831:
  8412  001680  EF82  F00B         	goto	l5267
  8413  001684                     u5830:
  8414  001684  5013               	movf	___fladd@bexp^0,w,c
  8415  001686  A4D8               	btfss	status,2,c
  8416  001688  EF48  F00B         	goto	u5841
  8417  00168C  EF4A  F00B         	goto	u5840
  8418  001690                     u5841:
  8419  001690  EF54  F00B         	goto	l5249
  8420  001694                     u5840:
  8421  001694  0E00               	movlw	0
  8422  001696  6E05               	movwf	?___fladd^0,c
  8423  001698  0E00               	movlw	0
  8424  00169A  6E06               	movwf	(?___fladd+1)^0,c
  8425  00169C  0E00               	movlw	0
  8426  00169E  6E07               	movwf	(?___fladd+2)^0,c
  8427  0016A0  0E00               	movlw	0
  8428  0016A2  6E08               	movwf	(?___fladd+3)^0,c
  8429  0016A4  EFA3  F00C         	goto	l1039
  8430  0016A8                     l5249:
  8431  0016A8  5009               	movf	___fladd@a^0,w,c
  8432  0016AA  2605               	addwf	___fladd@b^0,f,c
  8433  0016AC  500A               	movf	(___fladd@a+1)^0,w,c
  8434  0016AE  2206               	addwfc	(___fladd@b+1)^0,f,c
  8435  0016B0  500B               	movf	(___fladd@a+2)^0,w,c
  8436  0016B2  2207               	addwfc	(___fladd@b+2)^0,f,c
  8437  0016B4  500C               	movf	(___fladd@a+3)^0,w,c
  8438  0016B6  2208               	addwfc	(___fladd@b+3)^0,f,c
  8439  0016B8  A008               	btfss	(___fladd@b+3)^0,0,c
  8440  0016BA  EF61  F00B         	goto	u5851
  8441  0016BE  EF63  F00B         	goto	u5850
  8442  0016C2                     u5851:
  8443  0016C2  EF0F  F00C         	goto	l5303
  8444  0016C6                     u5850:
  8445  0016C6  A014               	btfss	___fladd@grs^0,0,c
  8446  0016C8  EF68  F00B         	goto	u5861
  8447  0016CC  EF6A  F00B         	goto	u5860
  8448  0016D0                     u5861:
  8449  0016D0  EF70  F00B         	goto	l5257
  8450  0016D4                     u5860:
  8451  0016D4  90D8               	bcf	status,0,c
  8452  0016D6  3014               	rrcf	___fladd@grs^0,w,c
  8453  0016D8  0901               	iorlw	1
  8454  0016DA  6E14               	movwf	___fladd@grs^0,c
  8455  0016DC  EF72  F00B         	goto	l5259
  8456  0016E0                     l5257:
  8457  0016E0  90D8               	bcf	status,0,c
  8458  0016E2  3214               	rrcf	___fladd@grs^0,f,c
  8459  0016E4                     l5259:
  8460  0016E4  A005               	btfss	___fladd@b^0,0,c
  8461  0016E6  EF77  F00B         	goto	u5871
  8462  0016EA  EF79  F00B         	goto	u5870
  8463  0016EE                     u5871:
  8464  0016EE  EF7A  F00B         	goto	l5263
  8465  0016F2                     u5870:
  8466  0016F2  8E14               	bsf	___fladd@grs^0,7,c
  8467  0016F4                     l5263:
  8468  0016F4  3408               	rlcf	(___fladd@b+3)^0,w,c
  8469  0016F6  3208               	rrcf	(___fladd@b+3)^0,f,c
  8470  0016F8  3207               	rrcf	(___fladd@b+2)^0,f,c
  8471  0016FA  3206               	rrcf	(___fladd@b+1)^0,f,c
  8472  0016FC  3205               	rrcf	___fladd@b^0,f,c
  8473  0016FE  2A13               	incf	___fladd@bexp^0,f,c
  8474  001700  EF0F  F00C         	goto	l5303
  8475  001704                     l5267:
  8476  001704  5009               	movf	___fladd@a^0,w,c
  8477  001706  5C05               	subwf	___fladd@b^0,w,c
  8478  001708  500A               	movf	(___fladd@a+1)^0,w,c
  8479  00170A  5806               	subwfb	(___fladd@b+1)^0,w,c
  8480  00170C  500B               	movf	(___fladd@a+2)^0,w,c
  8481  00170E  5807               	subwfb	(___fladd@b+2)^0,w,c
  8482  001710  5008               	movf	(___fladd@b+3)^0,w,c
  8483  001712  0A80               	xorlw	128
  8484  001714  6E0D               	movwf	??___fladd^0,c
  8485  001716  500C               	movf	(___fladd@a+3)^0,w,c
  8486  001718  0A80               	xorlw	128
  8487  00171A  580D               	subwfb	??___fladd^0,w,c
  8488  00171C  B0D8               	btfsc	status,0,c
  8489  00171E  EF93  F00B         	goto	u5881
  8490  001722  EF95  F00B         	goto	u5880
  8491  001726                     u5881:
  8492  001726  EFC0  F00B         	goto	l5277
  8493  00172A                     u5880:
  8494  00172A  5005               	movf	___fladd@b^0,w,c
  8495  00172C  5C09               	subwf	___fladd@a^0,w,c
  8496  00172E  6E0D               	movwf	??___fladd^0,c
  8497  001730  5006               	movf	(___fladd@b+1)^0,w,c
  8498  001732  580A               	subwfb	(___fladd@a+1)^0,w,c
  8499  001734  6E0E               	movwf	(??___fladd+1)^0,c
  8500  001736  5007               	movf	(___fladd@b+2)^0,w,c
  8501  001738  580B               	subwfb	(___fladd@a+2)^0,w,c
  8502  00173A  6E0F               	movwf	(??___fladd+2)^0,c
  8503  00173C  5008               	movf	(___fladd@b+3)^0,w,c
  8504  00173E  580C               	subwfb	(___fladd@a+3)^0,w,c
  8505  001740  6E10               	movwf	(??___fladd+3)^0,c
  8506  001742  0EFF               	movlw	255
  8507  001744  240D               	addwf	??___fladd^0,w,c
  8508  001746  6E05               	movwf	___fladd@b^0,c
  8509  001748  0EFF               	movlw	255
  8510  00174A  200E               	addwfc	(??___fladd+1)^0,w,c
  8511  00174C  6E06               	movwf	(___fladd@b+1)^0,c
  8512  00174E  0EFF               	movlw	255
  8513  001750  200F               	addwfc	(??___fladd+2)^0,w,c
  8514  001752  6E07               	movwf	(___fladd@b+2)^0,c
  8515  001754  0EFF               	movlw	255
  8516  001756  2010               	addwfc	(??___fladd+3)^0,w,c
  8517  001758  6E08               	movwf	(___fladd@b+3)^0,c
  8518  00175A  0E80               	movlw	128
  8519  00175C  1A11               	xorwf	___fladd@signs^0,f,c
  8520  00175E  6C14               	negf	___fladd@grs^0,c
  8521  001760  5014               	movf	___fladd@grs^0,w,c
  8522  001762  A4D8               	btfss	status,2,c
  8523  001764  EFB6  F00B         	goto	u5891
  8524  001768  EFB8  F00B         	goto	u5890
  8525  00176C                     u5891:
  8526  00176C  EFC8  F00B         	goto	l1047
  8527  001770                     u5890:
  8528  001770  0E01               	movlw	1
  8529  001772  2605               	addwf	___fladd@b^0,f,c
  8530  001774  0E00               	movlw	0
  8531  001776  2206               	addwfc	(___fladd@b+1)^0,f,c
  8532  001778  2207               	addwfc	(___fladd@b+2)^0,f,c
  8533  00177A  2208               	addwfc	(___fladd@b+3)^0,f,c
  8534  00177C  EFC8  F00B         	goto	l1047
  8535  001780                     l5277:
  8536  001780  5009               	movf	___fladd@a^0,w,c
  8537  001782  5E05               	subwf	___fladd@b^0,f,c
  8538  001784  500A               	movf	(___fladd@a+1)^0,w,c
  8539  001786  5A06               	subwfb	(___fladd@b+1)^0,f,c
  8540  001788  500B               	movf	(___fladd@a+2)^0,w,c
  8541  00178A  5A07               	subwfb	(___fladd@b+2)^0,f,c
  8542  00178C  500C               	movf	(___fladd@a+3)^0,w,c
  8543  00178E  5A08               	subwfb	(___fladd@b+3)^0,f,c
  8544  001790                     l1047:
  8545  001790  5005               	movf	___fladd@b^0,w,c
  8546  001792  1006               	iorwf	(___fladd@b+1)^0,w,c
  8547  001794  1007               	iorwf	(___fladd@b+2)^0,w,c
  8548  001796  1008               	iorwf	(___fladd@b+3)^0,w,c
  8549  001798  A4D8               	btfss	status,2,c
  8550  00179A  EFD1  F00B         	goto	u5901
  8551  00179E  EFD3  F00B         	goto	u5900
  8552  0017A2                     u5901:
  8553  0017A2  EF08  F00C         	goto	l5301
  8554  0017A6                     u5900:
  8555  0017A6  5014               	movf	___fladd@grs^0,w,c
  8556  0017A8  A4D8               	btfss	status,2,c
  8557  0017AA  EFD9  F00B         	goto	u5911
  8558  0017AE  EFDB  F00B         	goto	u5910
  8559  0017B2                     u5911:
  8560  0017B2  EF08  F00C         	goto	l5301
  8561  0017B6                     u5910:
  8562  0017B6  0E00               	movlw	0
  8563  0017B8  6E05               	movwf	?___fladd^0,c
  8564  0017BA  0E00               	movlw	0
  8565  0017BC  6E06               	movwf	(?___fladd+1)^0,c
  8566  0017BE  0E00               	movlw	0
  8567  0017C0  6E07               	movwf	(?___fladd+2)^0,c
  8568  0017C2  0E00               	movlw	0
  8569  0017C4  6E08               	movwf	(?___fladd+3)^0,c
  8570  0017C6  EFA3  F00C         	goto	l1039
  8571  0017CA                     l5285:
  8572  0017CA  90D8               	bcf	status,0,c
  8573  0017CC  3605               	rlcf	___fladd@b^0,f,c
  8574  0017CE  3606               	rlcf	(___fladd@b+1)^0,f,c
  8575  0017D0  3607               	rlcf	(___fladd@b+2)^0,f,c
  8576  0017D2  3608               	rlcf	(___fladd@b+3)^0,f,c
  8577  0017D4  AE14               	btfss	___fladd@grs^0,7,c
  8578  0017D6  EFEF  F00B         	goto	u5921
  8579  0017DA  EFF1  F00B         	goto	u5920
  8580  0017DE                     u5921:
  8581  0017DE  EFF2  F00B         	goto	l5291
  8582  0017E2                     u5920:
  8583  0017E2  8005               	bsf	___fladd@b^0,0,c
  8584  0017E4                     l5291:
  8585  0017E4  A014               	btfss	___fladd@grs^0,0,c
  8586  0017E6  EFF7  F00B         	goto	u5931
  8587  0017EA  EFF9  F00B         	goto	u5930
  8588  0017EE                     u5931:
  8589  0017EE  EFFD  F00B         	goto	l5295
  8590  0017F2                     u5930:
  8591  0017F2  80D8               	bsf	status,0,c
  8592  0017F4  3614               	rlcf	___fladd@grs^0,f,c
  8593  0017F6  EFFF  F00B         	goto	l5297
  8594  0017FA                     l5295:
  8595  0017FA  90D8               	bcf	status,0,c
  8596  0017FC  3614               	rlcf	___fladd@grs^0,f,c
  8597  0017FE                     l5297:
  8598  0017FE  5013               	movf	___fladd@bexp^0,w,c
  8599  001800  B4D8               	btfsc	status,2,c
  8600  001802  EF05  F00C         	goto	u5941
  8601  001806  EF07  F00C         	goto	u5940
  8602  00180A                     u5941:
  8603  00180A  EF08  F00C         	goto	l5301
  8604  00180E                     u5940:
  8605  00180E  0613               	decf	___fladd@bexp^0,f,c
  8606  001810                     l5301:
  8607  001810  AE07               	btfss	(___fladd@b+2)^0,7,c
  8608  001812  EF0D  F00C         	goto	u5951
  8609  001816  EF0F  F00C         	goto	u5950
  8610  00181A                     u5951:
  8611  00181A  EFE5  F00B         	goto	l5285
  8612  00181E                     u5950:
  8613  00181E                     l5303:
  8614  00181E  0E00               	movlw	0
  8615  001820  6E12               	movwf	___fladd@aexp^0,c
  8616  001822  AE14               	btfss	___fladd@grs^0,7,c
  8617  001824  EF16  F00C         	goto	u5961
  8618  001828  EF18  F00C         	goto	u5960
  8619  00182C                     u5961:
  8620  00182C  EF30  F00C         	goto	l1056
  8621  001830                     u5960:
  8622  001830  C014  F00D         	movff	___fladd@grs,??___fladd
  8623  001834  0E7F               	movlw	127
  8624  001836  160D               	andwf	??___fladd^0,f,c
  8625  001838  B4D8               	btfsc	status,2,c
  8626  00183A  EF21  F00C         	goto	u5971
  8627  00183E  EF23  F00C         	goto	u5970
  8628  001842                     u5971:
  8629  001842  EF27  F00C         	goto	l1057
  8630  001846                     u5970:
  8631  001846                     l5309:
  8632  001846  0E01               	movlw	1
  8633  001848  6E12               	movwf	___fladd@aexp^0,c
  8634  00184A  EF30  F00C         	goto	l1056
  8635  00184E                     l1057:
  8636  00184E  A005               	btfss	___fladd@b^0,0,c
  8637  001850  EF2C  F00C         	goto	u5981
  8638  001854  EF2E  F00C         	goto	u5980
  8639  001858                     u5981:
  8640  001858  EF30  F00C         	goto	l1056
  8641  00185C                     u5980:
  8642  00185C  EF23  F00C         	goto	l5309
  8643  001860                     l1056:
  8644  001860  5012               	movf	___fladd@aexp^0,w,c
  8645  001862  B4D8               	btfsc	status,2,c
  8646  001864  EF36  F00C         	goto	u5991
  8647  001868  EF38  F00C         	goto	u5990
  8648  00186C                     u5991:
  8649  00186C  EF63  F00C         	goto	l5321
  8650  001870                     u5990:
  8651  001870  0E01               	movlw	1
  8652  001872  2605               	addwf	___fladd@b^0,f,c
  8653  001874  0E00               	movlw	0
  8654  001876  2206               	addwfc	(___fladd@b+1)^0,f,c
  8655  001878  2207               	addwfc	(___fladd@b+2)^0,f,c
  8656  00187A  2208               	addwfc	(___fladd@b+3)^0,f,c
  8657  00187C  A008               	btfss	(___fladd@b+3)^0,0,c
  8658  00187E  EF43  F00C         	goto	u6001
  8659  001882  EF45  F00C         	goto	u6000
  8660  001886                     u6001:
  8661  001886  EF63  F00C         	goto	l5321
  8662  00188A                     u6000:
  8663  00188A  C005  F00D         	movff	___fladd@b,??___fladd
  8664  00188E  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  8665  001892  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  8666  001896  C008  F010         	movff	___fladd@b+3,??___fladd+3
  8667  00189A  3410               	rlcf	(??___fladd+3)^0,w,c
  8668  00189C  3210               	rrcf	(??___fladd+3)^0,f,c
  8669  00189E  320F               	rrcf	(??___fladd+2)^0,f,c
  8670  0018A0  320E               	rrcf	(??___fladd+1)^0,f,c
  8671  0018A2  320D               	rrcf	??___fladd^0,f,c
  8672  0018A4  C00D  F005         	movff	??___fladd,___fladd@b
  8673  0018A8  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  8674  0018AC  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  8675  0018B0  C010  F008         	movff	??___fladd+3,___fladd@b+3
  8676  0018B4  2813               	incf	___fladd@bexp^0,w,c
  8677  0018B6  B4D8               	btfsc	status,2,c
  8678  0018B8  EF60  F00C         	goto	u6011
  8679  0018BC  EF62  F00C         	goto	u6010
  8680  0018C0                     u6011:
  8681  0018C0  EF63  F00C         	goto	l5321
  8682  0018C4                     u6010:
  8683  0018C4  2A13               	incf	___fladd@bexp^0,f,c
  8684  0018C6                     l5321:
  8685  0018C6  2813               	incf	___fladd@bexp^0,w,c
  8686  0018C8  B4D8               	btfsc	status,2,c
  8687  0018CA  EF69  F00C         	goto	u6021
  8688  0018CE  EF6B  F00C         	goto	u6020
  8689  0018D2                     u6021:
  8690  0018D2  EF73  F00C         	goto	l5325
  8691  0018D6                     u6020:
  8692  0018D6  5013               	movf	___fladd@bexp^0,w,c
  8693  0018D8  A4D8               	btfss	status,2,c
  8694  0018DA  EF71  F00C         	goto	u6031
  8695  0018DE  EF73  F00C         	goto	u6030
  8696  0018E2                     u6031:
  8697  0018E2  EF85  F00C         	goto	l5329
  8698  0018E6                     u6030:
  8699  0018E6                     l5325:
  8700  0018E6  0E00               	movlw	0
  8701  0018E8  6E05               	movwf	___fladd@b^0,c
  8702  0018EA  0E00               	movlw	0
  8703  0018EC  6E06               	movwf	(___fladd@b+1)^0,c
  8704  0018EE  0E00               	movlw	0
  8705  0018F0  6E07               	movwf	(___fladd@b+2)^0,c
  8706  0018F2  0E00               	movlw	0
  8707  0018F4  6E08               	movwf	(___fladd@b+3)^0,c
  8708  0018F6  5013               	movf	___fladd@bexp^0,w,c
  8709  0018F8  A4D8               	btfss	status,2,c
  8710  0018FA  EF81  F00C         	goto	u6041
  8711  0018FE  EF83  F00C         	goto	u6040
  8712  001902                     u6041:
  8713  001902  EF85  F00C         	goto	l5329
  8714  001906                     u6040:
  8715  001906  0E00               	movlw	0
  8716  001908  6E11               	movwf	___fladd@signs^0,c
  8717  00190A                     l5329:
  8718  00190A  A013               	btfss	___fladd@bexp^0,0,c
  8719  00190C  EF8A  F00C         	goto	u6051
  8720  001910  EF8C  F00C         	goto	u6050
  8721  001914                     u6051:
  8722  001914  EF8F  F00C         	goto	l5333
  8723  001918                     u6050:
  8724  001918  8E07               	bsf	(___fladd@b+2)^0,7,c
  8725  00191A  EF90  F00C         	goto	l5335
  8726  00191E                     l5333:
  8727  00191E  9E07               	bcf	(___fladd@b+2)^0,7,c
  8728  001920                     l5335:
  8729  001920  90D8               	bcf	status,0,c
  8730  001922  3013               	rrcf	___fladd@bexp^0,w,c
  8731  001924  6E08               	movwf	(___fladd@b+3)^0,c
  8732  001926  AE11               	btfss	___fladd@signs^0,7,c
  8733  001928  EF98  F00C         	goto	u6061
  8734  00192C  EF9A  F00C         	goto	u6060
  8735  001930                     u6061:
  8736  001930  EF9B  F00C         	goto	l5341
  8737  001934                     u6060:
  8738  001934  8E08               	bsf	(___fladd@b+3)^0,7,c
  8739  001936                     l5341:
  8740  001936  C005  F005         	movff	___fladd@b,?___fladd
  8741  00193A  C006  F006         	movff	___fladd@b+1,?___fladd+1
  8742  00193E  C007  F007         	movff	___fladd@b+2,?___fladd+2
  8743  001942  C008  F008         	movff	___fladd@b+3,?___fladd+3
  8744  001946                     l1039:
  8745  001946  0012               	return		;funcret
  8746  001948                     __end_of___fladd:
  8747                           	callstack 0
  8748                           
  8749 ;; *************** function ___flmul *****************
  8750 ;; Defined at:
  8751 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  b               4   18[COMRAM] unsigned char 
  8754 ;;  a               4   22[COMRAM] unsigned char 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  prod            4   37[COMRAM] struct .
  8757 ;;  grs             4   32[COMRAM] unsigned long 
  8758 ;;  temp            2   41[COMRAM] struct .
  8759 ;;  bexp            1   36[COMRAM] unsigned char 
  8760 ;;  aexp            1   31[COMRAM] unsigned char 
  8761 ;;  sign            1   30[COMRAM] unsigned char 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  4   18[COMRAM] unsigned char 
  8764 ;; Registers used:
  8765 ;;		wreg, status,2, status,0, prodl, prodh
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8771 ;;      Params:         8       0       0       0       0       0       0       0       0
  8772 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8773 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8774 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8775 ;;Total ram usage:       25 bytes
  8776 ;; Hardware stack levels used: 1
  8777 ;; Hardware stack levels required when called: 4
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_get_corriente_AC
  8782 ;;		_efgtoa
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text42
  8787  001DB6                     __ptext42:
  8788                           	callstack 0
  8789  001DB6                     ___flmul:
  8790                           	callstack 22
  8791  001DB6  5016               	movf	(___flmul@b+3)^0,w,c
  8792  001DB8  0B80               	andlw	128
  8793  001DBA  6E1F               	movwf	___flmul@sign^0,c
  8794  001DBC  5016               	movf	(___flmul@b+3)^0,w,c
  8795  001DBE  2416               	addwf	(___flmul@b+3)^0,w,c
  8796  001DC0  6E25               	movwf	___flmul@bexp^0,c
  8797  001DC2  AE15               	btfss	(___flmul@b+2)^0,7,c
  8798  001DC4  EFE6  F00E         	goto	u6341
  8799  001DC8  EFE8  F00E         	goto	u6340
  8800  001DCC                     u6341:
  8801  001DCC  EFE9  F00E         	goto	l5517
  8802  001DD0                     u6340:
  8803  001DD0  8025               	bsf	___flmul@bexp^0,0,c
  8804  001DD2                     l5517:
  8805  001DD2  5025               	movf	___flmul@bexp^0,w,c
  8806  001DD4  B4D8               	btfsc	status,2,c
  8807  001DD6  EFEF  F00E         	goto	u6351
  8808  001DDA  EFF1  F00E         	goto	u6350
  8809  001DDE                     u6351:
  8810  001DDE  EF04  F00F         	goto	l5525
  8811  001DE2                     u6350:
  8812  001DE2  2825               	incf	___flmul@bexp^0,w,c
  8813  001DE4  A4D8               	btfss	status,2,c
  8814  001DE6  EFF7  F00E         	goto	u6361
  8815  001DEA  EFF9  F00E         	goto	u6360
  8816  001DEE                     u6361:
  8817  001DEE  EF01  F00F         	goto	l5523
  8818  001DF2                     u6360:
  8819  001DF2  0E00               	movlw	0
  8820  001DF4  6E13               	movwf	___flmul@b^0,c
  8821  001DF6  0E00               	movlw	0
  8822  001DF8  6E14               	movwf	(___flmul@b+1)^0,c
  8823  001DFA  0E00               	movlw	0
  8824  001DFC  6E15               	movwf	(___flmul@b+2)^0,c
  8825  001DFE  0E00               	movlw	0
  8826  001E00  6E16               	movwf	(___flmul@b+3)^0,c
  8827  001E02                     l5523:
  8828  001E02  8E15               	bsf	(___flmul@b+2)^0,7,c
  8829  001E04  EF0C  F00F         	goto	l5527
  8830  001E08                     l5525:
  8831  001E08  0E00               	movlw	0
  8832  001E0A  6E13               	movwf	___flmul@b^0,c
  8833  001E0C  0E00               	movlw	0
  8834  001E0E  6E14               	movwf	(___flmul@b+1)^0,c
  8835  001E10  0E00               	movlw	0
  8836  001E12  6E15               	movwf	(___flmul@b+2)^0,c
  8837  001E14  0E00               	movlw	0
  8838  001E16  6E16               	movwf	(___flmul@b+3)^0,c
  8839  001E18                     l5527:
  8840  001E18  501A               	movf	(___flmul@a+3)^0,w,c
  8841  001E1A  0B80               	andlw	128
  8842  001E1C  1A1F               	xorwf	___flmul@sign^0,f,c
  8843  001E1E  501A               	movf	(___flmul@a+3)^0,w,c
  8844  001E20  241A               	addwf	(___flmul@a+3)^0,w,c
  8845  001E22  6E20               	movwf	___flmul@aexp^0,c
  8846  001E24  AE19               	btfss	(___flmul@a+2)^0,7,c
  8847  001E26  EF17  F00F         	goto	u6371
  8848  001E2A  EF19  F00F         	goto	u6370
  8849  001E2E                     u6371:
  8850  001E2E  EF1A  F00F         	goto	l5535
  8851  001E32                     u6370:
  8852  001E32  8020               	bsf	___flmul@aexp^0,0,c
  8853  001E34                     l5535:
  8854  001E34  5020               	movf	___flmul@aexp^0,w,c
  8855  001E36  B4D8               	btfsc	status,2,c
  8856  001E38  EF20  F00F         	goto	u6381
  8857  001E3C  EF22  F00F         	goto	u6380
  8858  001E40                     u6381:
  8859  001E40  EF35  F00F         	goto	l5543
  8860  001E44                     u6380:
  8861  001E44  2820               	incf	___flmul@aexp^0,w,c
  8862  001E46  A4D8               	btfss	status,2,c
  8863  001E48  EF28  F00F         	goto	u6391
  8864  001E4C  EF2A  F00F         	goto	u6390
  8865  001E50                     u6391:
  8866  001E50  EF32  F00F         	goto	l5541
  8867  001E54                     u6390:
  8868  001E54  0E00               	movlw	0
  8869  001E56  6E17               	movwf	___flmul@a^0,c
  8870  001E58  0E00               	movlw	0
  8871  001E5A  6E18               	movwf	(___flmul@a+1)^0,c
  8872  001E5C  0E00               	movlw	0
  8873  001E5E  6E19               	movwf	(___flmul@a+2)^0,c
  8874  001E60  0E00               	movlw	0
  8875  001E62  6E1A               	movwf	(___flmul@a+3)^0,c
  8876  001E64                     l5541:
  8877  001E64  8E19               	bsf	(___flmul@a+2)^0,7,c
  8878  001E66  EF3D  F00F         	goto	l1116
  8879  001E6A                     l5543:
  8880  001E6A  0E00               	movlw	0
  8881  001E6C  6E17               	movwf	___flmul@a^0,c
  8882  001E6E  0E00               	movlw	0
  8883  001E70  6E18               	movwf	(___flmul@a+1)^0,c
  8884  001E72  0E00               	movlw	0
  8885  001E74  6E19               	movwf	(___flmul@a+2)^0,c
  8886  001E76  0E00               	movlw	0
  8887  001E78  6E1A               	movwf	(___flmul@a+3)^0,c
  8888  001E7A                     l1116:
  8889  001E7A  5020               	movf	___flmul@aexp^0,w,c
  8890  001E7C  B4D8               	btfsc	status,2,c
  8891  001E7E  EF43  F00F         	goto	u6401
  8892  001E82  EF45  F00F         	goto	u6400
  8893  001E86                     u6401:
  8894  001E86  EF4D  F00F         	goto	l5547
  8895  001E8A                     u6400:
  8896  001E8A  5025               	movf	___flmul@bexp^0,w,c
  8897  001E8C  A4D8               	btfss	status,2,c
  8898  001E8E  EF4B  F00F         	goto	u6411
  8899  001E92  EF4D  F00F         	goto	u6410
  8900  001E96                     u6411:
  8901  001E96  EF57  F00F         	goto	l5551
  8902  001E9A                     u6410:
  8903  001E9A                     l5547:
  8904  001E9A  0E00               	movlw	0
  8905  001E9C  6E13               	movwf	?___flmul^0,c
  8906  001E9E  0E00               	movlw	0
  8907  001EA0  6E14               	movwf	(?___flmul+1)^0,c
  8908  001EA2  0E00               	movlw	0
  8909  001EA4  6E15               	movwf	(?___flmul+2)^0,c
  8910  001EA6  0E00               	movlw	0
  8911  001EA8  6E16               	movwf	(?___flmul+3)^0,c
  8912  001EAA  EFEF  F010         	goto	l1120
  8913  001EAE                     l5551:
  8914  001EAE  5019               	movf	(___flmul@a+2)^0,w,c
  8915  001EB0  0213               	mulwf	___flmul@b^0,c
  8916  001EB2  CFF3 F02A          	movff	prodl,___flmul@temp
  8917  001EB6  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8918  001EBA  502A               	movf	___flmul@temp^0,w,c
  8919  001EBC  6E21               	movwf	___flmul@grs^0,c
  8920  001EBE  6A22               	clrf	(___flmul@grs+1)^0,c
  8921  001EC0  6A23               	clrf	(___flmul@grs+2)^0,c
  8922  001EC2  6A24               	clrf	(___flmul@grs+3)^0,c
  8923  001EC4  502B               	movf	(___flmul@temp+1)^0,w,c
  8924  001EC6  6E26               	movwf	___flmul@prod^0,c
  8925  001EC8  6A27               	clrf	(___flmul@prod+1)^0,c
  8926  001ECA  6A28               	clrf	(___flmul@prod+2)^0,c
  8927  001ECC  6A29               	clrf	(___flmul@prod+3)^0,c
  8928  001ECE  5018               	movf	(___flmul@a+1)^0,w,c
  8929  001ED0  0214               	mulwf	(___flmul@b+1)^0,c
  8930  001ED2  CFF3 F02A          	movff	prodl,___flmul@temp
  8931  001ED6  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8932  001EDA  502A               	movf	___flmul@temp^0,w,c
  8933  001EDC  2621               	addwf	___flmul@grs^0,f,c
  8934  001EDE  0E00               	movlw	0
  8935  001EE0  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8936  001EE2  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8937  001EE4  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8938  001EE6  502B               	movf	(___flmul@temp+1)^0,w,c
  8939  001EE8  2626               	addwf	___flmul@prod^0,f,c
  8940  001EEA  0E00               	movlw	0
  8941  001EEC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8942  001EEE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8943  001EF0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8944  001EF2  5017               	movf	___flmul@a^0,w,c
  8945  001EF4  0215               	mulwf	(___flmul@b+2)^0,c
  8946  001EF6  CFF3 F02A          	movff	prodl,___flmul@temp
  8947  001EFA  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8948  001EFE  502A               	movf	___flmul@temp^0,w,c
  8949  001F00  2621               	addwf	___flmul@grs^0,f,c
  8950  001F02  0E00               	movlw	0
  8951  001F04  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8952  001F06  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8953  001F08  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8954  001F0A  502B               	movf	(___flmul@temp+1)^0,w,c
  8955  001F0C  2626               	addwf	___flmul@prod^0,f,c
  8956  001F0E  0E00               	movlw	0
  8957  001F10  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8958  001F12  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8959  001F14  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8960  001F16  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8961  001F1A  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8962  001F1E  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8963  001F22  6A21               	clrf	___flmul@grs^0,c
  8964  001F24  5017               	movf	___flmul@a^0,w,c
  8965  001F26  0214               	mulwf	(___flmul@b+1)^0,c
  8966  001F28  CFF3 F02A          	movff	prodl,___flmul@temp
  8967  001F2C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8968  001F30  502A               	movf	___flmul@temp^0,w,c
  8969  001F32  2621               	addwf	___flmul@grs^0,f,c
  8970  001F34  502B               	movf	(___flmul@temp+1)^0,w,c
  8971  001F36  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8972  001F38  0E00               	movlw	0
  8973  001F3A  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8974  001F3C  0E00               	movlw	0
  8975  001F3E  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8976  001F40  5018               	movf	(___flmul@a+1)^0,w,c
  8977  001F42  0213               	mulwf	___flmul@b^0,c
  8978  001F44  CFF3 F02A          	movff	prodl,___flmul@temp
  8979  001F48  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8980  001F4C  502A               	movf	___flmul@temp^0,w,c
  8981  001F4E  2621               	addwf	___flmul@grs^0,f,c
  8982  001F50  502B               	movf	(___flmul@temp+1)^0,w,c
  8983  001F52  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8984  001F54  0E00               	movlw	0
  8985  001F56  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8986  001F58  0E00               	movlw	0
  8987  001F5A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8988  001F5C  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8989  001F60  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8990  001F64  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8991  001F68  6A21               	clrf	___flmul@grs^0,c
  8992  001F6A  5017               	movf	___flmul@a^0,w,c
  8993  001F6C  0213               	mulwf	___flmul@b^0,c
  8994  001F6E  CFF3 F02A          	movff	prodl,___flmul@temp
  8995  001F72  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8996  001F76  502A               	movf	___flmul@temp^0,w,c
  8997  001F78  2621               	addwf	___flmul@grs^0,f,c
  8998  001F7A  502B               	movf	(___flmul@temp+1)^0,w,c
  8999  001F7C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  9000  001F7E  0E00               	movlw	0
  9001  001F80  2223               	addwfc	(___flmul@grs+2)^0,f,c
  9002  001F82  0E00               	movlw	0
  9003  001F84  2224               	addwfc	(___flmul@grs+3)^0,f,c
  9004  001F86  5019               	movf	(___flmul@a+2)^0,w,c
  9005  001F88  0214               	mulwf	(___flmul@b+1)^0,c
  9006  001F8A  CFF3 F02A          	movff	prodl,___flmul@temp
  9007  001F8E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9008  001F92  502A               	movf	___flmul@temp^0,w,c
  9009  001F94  2626               	addwf	___flmul@prod^0,f,c
  9010  001F96  502B               	movf	(___flmul@temp+1)^0,w,c
  9011  001F98  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9012  001F9A  0E00               	movlw	0
  9013  001F9C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9014  001F9E  0E00               	movlw	0
  9015  001FA0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9016  001FA2  5018               	movf	(___flmul@a+1)^0,w,c
  9017  001FA4  0215               	mulwf	(___flmul@b+2)^0,c
  9018  001FA6  CFF3 F02A          	movff	prodl,___flmul@temp
  9019  001FAA  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9020  001FAE  502A               	movf	___flmul@temp^0,w,c
  9021  001FB0  2626               	addwf	___flmul@prod^0,f,c
  9022  001FB2  502B               	movf	(___flmul@temp+1)^0,w,c
  9023  001FB4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9024  001FB6  0E00               	movlw	0
  9025  001FB8  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9026  001FBA  0E00               	movlw	0
  9027  001FBC  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9028  001FBE  5019               	movf	(___flmul@a+2)^0,w,c
  9029  001FC0  0215               	mulwf	(___flmul@b+2)^0,c
  9030  001FC2  CFF3 F02A          	movff	prodl,___flmul@temp
  9031  001FC6  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9032  001FCA  502A               	movf	___flmul@temp^0,w,c
  9033  001FCC  6E1B               	movwf	??___flmul^0,c
  9034  001FCE  502B               	movf	(___flmul@temp+1)^0,w,c
  9035  001FD0  6E1C               	movwf	(??___flmul+1)^0,c
  9036  001FD2  6A1D               	clrf	(??___flmul+2)^0,c
  9037  001FD4  6A1E               	clrf	(??___flmul+3)^0,c
  9038  001FD6  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  9039  001FDA  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  9040  001FDE  C01B  F01C         	movff	??___flmul,??___flmul+1
  9041  001FE2  6A1B               	clrf	??___flmul^0,c
  9042  001FE4  501B               	movf	??___flmul^0,w,c
  9043  001FE6  2626               	addwf	___flmul@prod^0,f,c
  9044  001FE8  501C               	movf	(??___flmul+1)^0,w,c
  9045  001FEA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9046  001FEC  501D               	movf	(??___flmul+2)^0,w,c
  9047  001FEE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9048  001FF0  501E               	movf	(??___flmul+3)^0,w,c
  9049  001FF2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9050  001FF4  C021  F01B         	movff	___flmul@grs,??___flmul
  9051  001FF8  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  9052  001FFC  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  9053  002000  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  9054  002004  0E19               	movlw	25
  9055  002006  EF0A  F010         	goto	u6420
  9056  00200A                     u6425:
  9057  00200A  90D8               	bcf	status,0,c
  9058  00200C  321E               	rrcf	(??___flmul+3)^0,f,c
  9059  00200E  321D               	rrcf	(??___flmul+2)^0,f,c
  9060  002010  321C               	rrcf	(??___flmul+1)^0,f,c
  9061  002012  321B               	rrcf	??___flmul^0,f,c
  9062  002014                     u6420:
  9063  002014  2EE8               	decfsz	wreg,f,c
  9064  002016  EF05  F010         	goto	u6425
  9065  00201A  501B               	movf	??___flmul^0,w,c
  9066  00201C  2626               	addwf	___flmul@prod^0,f,c
  9067  00201E  501C               	movf	(??___flmul+1)^0,w,c
  9068  002020  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9069  002022  501D               	movf	(??___flmul+2)^0,w,c
  9070  002024  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9071  002026  501E               	movf	(??___flmul+3)^0,w,c
  9072  002028  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9073  00202A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  9074  00202E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  9075  002032  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  9076  002036  6A21               	clrf	___flmul@grs^0,c
  9077  002038  5020               	movf	___flmul@aexp^0,w,c
  9078  00203A  C025  F01B         	movff	___flmul@bexp,??___flmul
  9079  00203E  6A1C               	clrf	(??___flmul+1)^0,c
  9080  002040  261B               	addwf	??___flmul^0,f,c
  9081  002042  0E00               	movlw	0
  9082  002044  221C               	addwfc	(??___flmul+1)^0,f,c
  9083  002046  0E82               	movlw	130
  9084  002048  241B               	addwf	??___flmul^0,w,c
  9085  00204A  6E2A               	movwf	___flmul@temp^0,c
  9086  00204C  0EFF               	movlw	255
  9087  00204E  201C               	addwfc	(??___flmul+1)^0,w,c
  9088  002050  6E2B               	movwf	(___flmul@temp+1)^0,c
  9089  002052  EF40  F010         	goto	l5599
  9090  002056                     l5593:
  9091  002056  90D8               	bcf	status,0,c
  9092  002058  3626               	rlcf	___flmul@prod^0,f,c
  9093  00205A  3627               	rlcf	(___flmul@prod+1)^0,f,c
  9094  00205C  3628               	rlcf	(___flmul@prod+2)^0,f,c
  9095  00205E  3629               	rlcf	(___flmul@prod+3)^0,f,c
  9096  002060  AE24               	btfss	(___flmul@grs+3)^0,7,c
  9097  002062  EF35  F010         	goto	u6431
  9098  002066  EF37  F010         	goto	u6430
  9099  00206A                     u6431:
  9100  00206A  EF38  F010         	goto	l1123
  9101  00206E                     u6430:
  9102  00206E  8026               	bsf	___flmul@prod^0,0,c
  9103  002070                     l1123:
  9104  002070  90D8               	bcf	status,0,c
  9105  002072  3621               	rlcf	___flmul@grs^0,f,c
  9106  002074  3622               	rlcf	(___flmul@grs+1)^0,f,c
  9107  002076  3623               	rlcf	(___flmul@grs+2)^0,f,c
  9108  002078  3624               	rlcf	(___flmul@grs+3)^0,f,c
  9109  00207A  062A               	decf	___flmul@temp^0,f,c
  9110  00207C  A0D8               	btfss	status,0,c
  9111  00207E  062B               	decf	(___flmul@temp+1)^0,f,c
  9112  002080                     l5599:
  9113  002080  AE28               	btfss	(___flmul@prod+2)^0,7,c
  9114  002082  EF45  F010         	goto	u6441
  9115  002086  EF47  F010         	goto	u6440
  9116  00208A                     u6441:
  9117  00208A  EF2B  F010         	goto	l5593
  9118  00208E                     u6440:
  9119  00208E  0E00               	movlw	0
  9120  002090  6E20               	movwf	___flmul@aexp^0,c
  9121  002092  AE24               	btfss	(___flmul@grs+3)^0,7,c
  9122  002094  EF4E  F010         	goto	u6451
  9123  002098  EF50  F010         	goto	u6450
  9124  00209C                     u6451:
  9125  00209C  EF74  F010         	goto	l1125
  9126  0020A0                     u6450:
  9127  0020A0  0EFF               	movlw	255
  9128  0020A2  1421               	andwf	___flmul@grs^0,w,c
  9129  0020A4  6E1B               	movwf	??___flmul^0,c
  9130  0020A6  0EFF               	movlw	255
  9131  0020A8  1422               	andwf	(___flmul@grs+1)^0,w,c
  9132  0020AA  6E1C               	movwf	(??___flmul+1)^0,c
  9133  0020AC  0EFF               	movlw	255
  9134  0020AE  1423               	andwf	(___flmul@grs+2)^0,w,c
  9135  0020B0  6E1D               	movwf	(??___flmul+2)^0,c
  9136  0020B2  0E7F               	movlw	127
  9137  0020B4  1424               	andwf	(___flmul@grs+3)^0,w,c
  9138  0020B6  6E1E               	movwf	(??___flmul+3)^0,c
  9139  0020B8  501B               	movf	??___flmul^0,w,c
  9140  0020BA  101C               	iorwf	(??___flmul+1)^0,w,c
  9141  0020BC  101D               	iorwf	(??___flmul+2)^0,w,c
  9142  0020BE  101E               	iorwf	(??___flmul+3)^0,w,c
  9143  0020C0  B4D8               	btfsc	status,2,c
  9144  0020C2  EF65  F010         	goto	u6461
  9145  0020C6  EF67  F010         	goto	u6460
  9146  0020CA                     u6461:
  9147  0020CA  EF6B  F010         	goto	l1126
  9148  0020CE                     u6460:
  9149  0020CE                     l5607:
  9150  0020CE  0E01               	movlw	1
  9151  0020D0  6E20               	movwf	___flmul@aexp^0,c
  9152  0020D2  EF74  F010         	goto	l1125
  9153  0020D6                     l1126:
  9154  0020D6  A026               	btfss	___flmul@prod^0,0,c
  9155  0020D8  EF70  F010         	goto	u6471
  9156  0020DC  EF72  F010         	goto	u6470
  9157  0020E0                     u6471:
  9158  0020E0  EF74  F010         	goto	l1125
  9159  0020E4                     u6470:
  9160  0020E4  EF67  F010         	goto	l5607
  9161  0020E8                     l1125:
  9162  0020E8  5020               	movf	___flmul@aexp^0,w,c
  9163  0020EA  B4D8               	btfsc	status,2,c
  9164  0020EC  EF7A  F010         	goto	u6481
  9165  0020F0  EF7C  F010         	goto	u6480
  9166  0020F4                     u6481:
  9167  0020F4  EFA0  F010         	goto	l5619
  9168  0020F8                     u6480:
  9169  0020F8  0E01               	movlw	1
  9170  0020FA  2626               	addwf	___flmul@prod^0,f,c
  9171  0020FC  0E00               	movlw	0
  9172  0020FE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9173  002100  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9174  002102  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9175  002104  A029               	btfss	(___flmul@prod+3)^0,0,c
  9176  002106  EF87  F010         	goto	u6491
  9177  00210A  EF89  F010         	goto	u6490
  9178  00210E                     u6491:
  9179  00210E  EFA0  F010         	goto	l5619
  9180  002112                     u6490:
  9181  002112  C026  F01B         	movff	___flmul@prod,??___flmul
  9182  002116  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  9183  00211A  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  9184  00211E  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  9185  002122  341E               	rlcf	(??___flmul+3)^0,w,c
  9186  002124  321E               	rrcf	(??___flmul+3)^0,f,c
  9187  002126  321D               	rrcf	(??___flmul+2)^0,f,c
  9188  002128  321C               	rrcf	(??___flmul+1)^0,f,c
  9189  00212A  321B               	rrcf	??___flmul^0,f,c
  9190  00212C  C01B  F026         	movff	??___flmul,___flmul@prod
  9191  002130  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  9192  002134  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  9193  002138  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  9194  00213C  4A2A               	infsnz	___flmul@temp^0,f,c
  9195  00213E  2A2B               	incf	(___flmul@temp+1)^0,f,c
  9196  002140                     l5619:
  9197  002140  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  9198  002142  EFAB  F010         	goto	u6501
  9199  002146  502B               	movf	(___flmul@temp+1)^0,w,c
  9200  002148  E108               	bnz	u6500
  9201  00214A  282A               	incf	___flmul@temp^0,w,c
  9202  00214C  A0D8               	btfss	status,0,c
  9203  00214E  EFAB  F010         	goto	u6501
  9204  002152  EFAD  F010         	goto	u6500
  9205  002156                     u6501:
  9206  002156  EFB7  F010         	goto	l5623
  9207  00215A                     u6500:
  9208  00215A  0E00               	movlw	0
  9209  00215C  6E26               	movwf	___flmul@prod^0,c
  9210  00215E  0E00               	movlw	0
  9211  002160  6E27               	movwf	(___flmul@prod+1)^0,c
  9212  002162  0E80               	movlw	128
  9213  002164  6E28               	movwf	(___flmul@prod+2)^0,c
  9214  002166  0E7F               	movlw	127
  9215  002168  6E29               	movwf	(___flmul@prod+3)^0,c
  9216  00216A  EFE5  F010         	goto	l5635
  9217  00216E                     l5623:
  9218  00216E  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  9219  002170  EFC4  F010         	goto	u6510
  9220  002174  502B               	movf	(___flmul@temp+1)^0,w,c
  9221  002176  E106               	bnz	u6511
  9222  002178  042A               	decf	___flmul@temp^0,w,c
  9223  00217A  B0D8               	btfsc	status,0,c
  9224  00217C  EFC2  F010         	goto	u6511
  9225  002180  EFC4  F010         	goto	u6510
  9226  002184                     u6511:
  9227  002184  EFD0  F010         	goto	l1133
  9228  002188                     u6510:
  9229  002188  0E00               	movlw	0
  9230  00218A  6E26               	movwf	___flmul@prod^0,c
  9231  00218C  0E00               	movlw	0
  9232  00218E  6E27               	movwf	(___flmul@prod+1)^0,c
  9233  002190  0E00               	movlw	0
  9234  002192  6E28               	movwf	(___flmul@prod+2)^0,c
  9235  002194  0E00               	movlw	0
  9236  002196  6E29               	movwf	(___flmul@prod+3)^0,c
  9237  002198  0E00               	movlw	0
  9238  00219A  6E1F               	movwf	___flmul@sign^0,c
  9239  00219C  EFE5  F010         	goto	l5635
  9240  0021A0                     l1133:
  9241  0021A0  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  9242  0021A4  0EFF               	movlw	255
  9243  0021A6  1626               	andwf	___flmul@prod^0,f,c
  9244  0021A8  0EFF               	movlw	255
  9245  0021AA  1627               	andwf	(___flmul@prod+1)^0,f,c
  9246  0021AC  0E7F               	movlw	127
  9247  0021AE  1628               	andwf	(___flmul@prod+2)^0,f,c
  9248  0021B0  0E00               	movlw	0
  9249  0021B2  1629               	andwf	(___flmul@prod+3)^0,f,c
  9250  0021B4  A025               	btfss	___flmul@bexp^0,0,c
  9251  0021B6  EFDF  F010         	goto	u6521
  9252  0021BA  EFE1  F010         	goto	u6520
  9253  0021BE                     u6521:
  9254  0021BE  EFE2  F010         	goto	l5633
  9255  0021C2                     u6520:
  9256  0021C2  8E28               	bsf	(___flmul@prod+2)^0,7,c
  9257  0021C4                     l5633:
  9258  0021C4  90D8               	bcf	status,0,c
  9259  0021C6  3025               	rrcf	___flmul@bexp^0,w,c
  9260  0021C8  6E29               	movwf	(___flmul@prod+3)^0,c
  9261  0021CA                     l5635:
  9262  0021CA  501F               	movf	___flmul@sign^0,w,c
  9263  0021CC  1229               	iorwf	(___flmul@prod+3)^0,f,c
  9264  0021CE  C026  F013         	movff	___flmul@prod,?___flmul
  9265  0021D2  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  9266  0021D6  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  9267  0021DA  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  9268  0021DE                     l1120:
  9269  0021DE  0012               	return		;funcret
  9270  0021E0                     __end_of___flmul:
  9271                           	callstack 0
  9272                           
  9273 ;; *************** function ___flge *****************
  9274 ;; Defined at:
  9275 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  ff1             4   43[COMRAM] unsigned char 
  9278 ;;  ff2             4   47[COMRAM] unsigned char 
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;		None               void
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9290 ;;      Params:         8       0       0       0       0       0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9292 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9293 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9294 ;;Total ram usage:       12 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; Hardware stack levels required when called: 4
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		_get_corriente_AC
  9301 ;;		_trip_protec_current
  9302 ;;		_efgtoa
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text43
  9307  003216                     __ptext43:
  9308                           	callstack 0
  9309  003216                     ___flge:
  9310                           	callstack 25
  9311  003216  0E00               	movlw	0
  9312  003218  142C               	andwf	___flge@ff1^0,w,c
  9313  00321A  6E34               	movwf	??___flge^0,c
  9314  00321C  0E00               	movlw	0
  9315  00321E  142D               	andwf	(___flge@ff1+1)^0,w,c
  9316  003220  6E35               	movwf	(??___flge+1)^0,c
  9317  003222  0E80               	movlw	128
  9318  003224  142E               	andwf	(___flge@ff1+2)^0,w,c
  9319  003226  6E36               	movwf	(??___flge+2)^0,c
  9320  003228  0E7F               	movlw	127
  9321  00322A  142F               	andwf	(___flge@ff1+3)^0,w,c
  9322  00322C  6E37               	movwf	(??___flge+3)^0,c
  9323  00322E  5034               	movf	??___flge^0,w,c
  9324  003230  1035               	iorwf	(??___flge+1)^0,w,c
  9325  003232  1036               	iorwf	(??___flge+2)^0,w,c
  9326  003234  1037               	iorwf	(??___flge+3)^0,w,c
  9327  003236  A4D8               	btfss	status,2,c
  9328  003238  EF20  F019         	goto	u6681
  9329  00323C  EF22  F019         	goto	u6680
  9330  003240                     u6681:
  9331  003240  EF2A  F019         	goto	l5747
  9332  003244                     u6680:
  9333  003244  0E00               	movlw	0
  9334  003246  6E2C               	movwf	___flge@ff1^0,c
  9335  003248  0E00               	movlw	0
  9336  00324A  6E2D               	movwf	(___flge@ff1+1)^0,c
  9337  00324C  0E00               	movlw	0
  9338  00324E  6E2E               	movwf	(___flge@ff1+2)^0,c
  9339  003250  0E00               	movlw	0
  9340  003252  6E2F               	movwf	(___flge@ff1+3)^0,c
  9341  003254                     l5747:
  9342  003254  0E00               	movlw	0
  9343  003256  1430               	andwf	___flge@ff2^0,w,c
  9344  003258  6E34               	movwf	??___flge^0,c
  9345  00325A  0E00               	movlw	0
  9346  00325C  1431               	andwf	(___flge@ff2+1)^0,w,c
  9347  00325E  6E35               	movwf	(??___flge+1)^0,c
  9348  003260  0E80               	movlw	128
  9349  003262  1432               	andwf	(___flge@ff2+2)^0,w,c
  9350  003264  6E36               	movwf	(??___flge+2)^0,c
  9351  003266  0E7F               	movlw	127
  9352  003268  1433               	andwf	(___flge@ff2+3)^0,w,c
  9353  00326A  6E37               	movwf	(??___flge+3)^0,c
  9354  00326C  5034               	movf	??___flge^0,w,c
  9355  00326E  1035               	iorwf	(??___flge+1)^0,w,c
  9356  003270  1036               	iorwf	(??___flge+2)^0,w,c
  9357  003272  1037               	iorwf	(??___flge+3)^0,w,c
  9358  003274  A4D8               	btfss	status,2,c
  9359  003276  EF3F  F019         	goto	u6691
  9360  00327A  EF41  F019         	goto	u6690
  9361  00327E                     u6691:
  9362  00327E  EF49  F019         	goto	l5751
  9363  003282                     u6690:
  9364  003282  0E00               	movlw	0
  9365  003284  6E30               	movwf	___flge@ff2^0,c
  9366  003286  0E00               	movlw	0
  9367  003288  6E31               	movwf	(___flge@ff2+1)^0,c
  9368  00328A  0E00               	movlw	0
  9369  00328C  6E32               	movwf	(___flge@ff2+2)^0,c
  9370  00328E  0E00               	movlw	0
  9371  003290  6E33               	movwf	(___flge@ff2+3)^0,c
  9372  003292                     l5751:
  9373  003292  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  9374  003294  EF4E  F019         	goto	u6701
  9375  003298  EF50  F019         	goto	u6700
  9376  00329C                     u6701:
  9377  00329C  EF59  F019         	goto	l5755
  9378  0032A0                     u6700:
  9379  0032A0  6C2C               	negf	___flge@ff1^0,c
  9380  0032A2  1E2D               	comf	(___flge@ff1+1)^0,f,c
  9381  0032A4  B0D8               	btfsc	status,0,c
  9382  0032A6  2A2D               	incf	(___flge@ff1+1)^0,f,c
  9383  0032A8  1E2E               	comf	(___flge@ff1+2)^0,f,c
  9384  0032AA  B0D8               	btfsc	status,0,c
  9385  0032AC  2A2E               	incf	(___flge@ff1+2)^0,f,c
  9386  0032AE  0E80               	movlw	128
  9387  0032B0  562F               	subfwb	(___flge@ff1+3)^0,f,c
  9388  0032B2                     l5755:
  9389  0032B2  AE33               	btfss	(___flge@ff2+3)^0,7,c
  9390  0032B4  EF5E  F019         	goto	u6711
  9391  0032B8  EF60  F019         	goto	u6710
  9392  0032BC                     u6711:
  9393  0032BC  EF69  F019         	goto	l767
  9394  0032C0                     u6710:
  9395  0032C0  6C30               	negf	___flge@ff2^0,c
  9396  0032C2  1E31               	comf	(___flge@ff2+1)^0,f,c
  9397  0032C4  B0D8               	btfsc	status,0,c
  9398  0032C6  2A31               	incf	(___flge@ff2+1)^0,f,c
  9399  0032C8  1E32               	comf	(___flge@ff2+2)^0,f,c
  9400  0032CA  B0D8               	btfsc	status,0,c
  9401  0032CC  2A32               	incf	(___flge@ff2+2)^0,f,c
  9402  0032CE  0E80               	movlw	128
  9403  0032D0  5633               	subfwb	(___flge@ff2+3)^0,f,c
  9404  0032D2                     l767:
  9405  0032D2  0E00               	movlw	0
  9406  0032D4  1A2C               	xorwf	___flge@ff1^0,f,c
  9407  0032D6  0E00               	movlw	0
  9408  0032D8  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  9409  0032DA  0E00               	movlw	0
  9410  0032DC  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  9411  0032DE  0E80               	movlw	128
  9412  0032E0  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  9413  0032E2  0E00               	movlw	0
  9414  0032E4  1A30               	xorwf	___flge@ff2^0,f,c
  9415  0032E6  0E00               	movlw	0
  9416  0032E8  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  9417  0032EA  0E00               	movlw	0
  9418  0032EC  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  9419  0032EE  0E80               	movlw	128
  9420  0032F0  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  9421  0032F2  5030               	movf	___flge@ff2^0,w,c
  9422  0032F4  5C2C               	subwf	___flge@ff1^0,w,c
  9423  0032F6  5031               	movf	(___flge@ff2+1)^0,w,c
  9424  0032F8  582D               	subwfb	(___flge@ff1+1)^0,w,c
  9425  0032FA  5032               	movf	(___flge@ff2+2)^0,w,c
  9426  0032FC  582E               	subwfb	(___flge@ff1+2)^0,w,c
  9427  0032FE  5033               	movf	(___flge@ff2+3)^0,w,c
  9428  003300  582F               	subwfb	(___flge@ff1+3)^0,w,c
  9429  003302  B0D8               	btfsc	status,0,c
  9430  003304  EF86  F019         	goto	u6721
  9431  003308  EF88  F019         	goto	u6720
  9432  00330C                     u6721:
  9433  00330C  EF8B  F019         	goto	l5761
  9434  003310                     u6720:
  9435  003310  90D8               	bcf	status,0,c
  9436  003312  EF8C  F019         	goto	l772
  9437  003316                     l5761:
  9438  003316  80D8               	bsf	status,0,c
  9439  003318                     l772:
  9440  003318  0012               	return		;funcret
  9441  00331A                     __end_of___flge:
  9442                           	callstack 0
  9443                           
  9444 ;; *************** function ___fldiv *****************
  9445 ;; Defined at:
  9446 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  b               4   51[COMRAM] unsigned char 
  9449 ;;  a               4   55[COMRAM] unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;  grs             4   70[COMRAM] unsigned long 
  9452 ;;  rem             4   63[COMRAM] unsigned long 
  9453 ;;  new_exp         2   68[COMRAM] short 
  9454 ;;  aexp            1   75[COMRAM] unsigned char 
  9455 ;;  bexp            1   74[COMRAM] unsigned char 
  9456 ;;  sign            1   67[COMRAM] unsigned char 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  4   51[COMRAM] unsigned char 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9466 ;;      Params:         8       0       0       0       0       0       0       0       0
  9467 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9468 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9469 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9470 ;;Total ram usage:       25 bytes
  9471 ;; Hardware stack levels used: 1
  9472 ;; Hardware stack levels required when called: 4
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		_get_corriente_AC
  9477 ;;		_main
  9478 ;;		_efgtoa
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text44
  9483  0021E0                     __ptext44:
  9484                           	callstack 0
  9485  0021E0                     ___fldiv:
  9486                           	callstack 22
  9487  0021E0  5037               	movf	(___fldiv@b+3)^0,w,c
  9488  0021E2  0B80               	andlw	128
  9489  0021E4  6E44               	movwf	___fldiv@sign^0,c
  9490  0021E6  5037               	movf	(___fldiv@b+3)^0,w,c
  9491  0021E8  2437               	addwf	(___fldiv@b+3)^0,w,c
  9492  0021EA  6E4B               	movwf	___fldiv@bexp^0,c
  9493  0021EC  AE36               	btfss	(___fldiv@b+2)^0,7,c
  9494  0021EE  EFFB  F010         	goto	u6111
  9495  0021F2  EFFD  F010         	goto	u6110
  9496  0021F6                     u6111:
  9497  0021F6  EFFE  F010         	goto	l5379
  9498  0021FA                     u6110:
  9499  0021FA  804B               	bsf	___fldiv@bexp^0,0,c
  9500  0021FC                     l5379:
  9501  0021FC  504B               	movf	___fldiv@bexp^0,w,c
  9502  0021FE  B4D8               	btfsc	status,2,c
  9503  002200  EF04  F011         	goto	u6121
  9504  002204  EF06  F011         	goto	u6120
  9505  002208                     u6121:
  9506  002208  EF1B  F011         	goto	l5389
  9507  00220C                     u6120:
  9508  00220C  284B               	incf	___fldiv@bexp^0,w,c
  9509  00220E  A4D8               	btfss	status,2,c
  9510  002210  EF0C  F011         	goto	u6131
  9511  002214  EF0E  F011         	goto	u6130
  9512  002218                     u6131:
  9513  002218  EF16  F011         	goto	l5385
  9514  00221C                     u6130:
  9515  00221C  0E00               	movlw	0
  9516  00221E  6E34               	movwf	___fldiv@b^0,c
  9517  002220  0E00               	movlw	0
  9518  002222  6E35               	movwf	(___fldiv@b+1)^0,c
  9519  002224  0E00               	movlw	0
  9520  002226  6E36               	movwf	(___fldiv@b+2)^0,c
  9521  002228  0E00               	movlw	0
  9522  00222A  6E37               	movwf	(___fldiv@b+3)^0,c
  9523  00222C                     l5385:
  9524  00222C  8E36               	bsf	(___fldiv@b+2)^0,7,c
  9525  00222E  0E00               	movlw	0
  9526  002230  6E37               	movwf	(___fldiv@b+3)^0,c
  9527  002232  EF23  F011         	goto	l5391
  9528  002236                     l5389:
  9529  002236  0E00               	movlw	0
  9530  002238  6E34               	movwf	___fldiv@b^0,c
  9531  00223A  0E00               	movlw	0
  9532  00223C  6E35               	movwf	(___fldiv@b+1)^0,c
  9533  00223E  0E00               	movlw	0
  9534  002240  6E36               	movwf	(___fldiv@b+2)^0,c
  9535  002242  0E00               	movlw	0
  9536  002244  6E37               	movwf	(___fldiv@b+3)^0,c
  9537  002246                     l5391:
  9538  002246  503B               	movf	(___fldiv@a+3)^0,w,c
  9539  002248  0B80               	andlw	128
  9540  00224A  1A44               	xorwf	___fldiv@sign^0,f,c
  9541  00224C  503B               	movf	(___fldiv@a+3)^0,w,c
  9542  00224E  243B               	addwf	(___fldiv@a+3)^0,w,c
  9543  002250  6E4C               	movwf	___fldiv@aexp^0,c
  9544  002252  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  9545  002254  EF2E  F011         	goto	u6141
  9546  002258  EF30  F011         	goto	u6140
  9547  00225C                     u6141:
  9548  00225C  EF31  F011         	goto	l5399
  9549  002260                     u6140:
  9550  002260  804C               	bsf	___fldiv@aexp^0,0,c
  9551  002262                     l5399:
  9552  002262  504C               	movf	___fldiv@aexp^0,w,c
  9553  002264  B4D8               	btfsc	status,2,c
  9554  002266  EF37  F011         	goto	u6151
  9555  00226A  EF39  F011         	goto	u6150
  9556  00226E                     u6151:
  9557  00226E  EF4E  F011         	goto	l5409
  9558  002272                     u6150:
  9559  002272  284C               	incf	___fldiv@aexp^0,w,c
  9560  002274  A4D8               	btfss	status,2,c
  9561  002276  EF3F  F011         	goto	u6161
  9562  00227A  EF41  F011         	goto	u6160
  9563  00227E                     u6161:
  9564  00227E  EF49  F011         	goto	l5405
  9565  002282                     u6160:
  9566  002282  0E00               	movlw	0
  9567  002284  6E38               	movwf	___fldiv@a^0,c
  9568  002286  0E00               	movlw	0
  9569  002288  6E39               	movwf	(___fldiv@a+1)^0,c
  9570  00228A  0E00               	movlw	0
  9571  00228C  6E3A               	movwf	(___fldiv@a+2)^0,c
  9572  00228E  0E00               	movlw	0
  9573  002290  6E3B               	movwf	(___fldiv@a+3)^0,c
  9574  002292                     l5405:
  9575  002292  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  9576  002294  0E00               	movlw	0
  9577  002296  6E3B               	movwf	(___fldiv@a+3)^0,c
  9578  002298  EF56  F011         	goto	l5411
  9579  00229C                     l5409:
  9580  00229C  0E00               	movlw	0
  9581  00229E  6E38               	movwf	___fldiv@a^0,c
  9582  0022A0  0E00               	movlw	0
  9583  0022A2  6E39               	movwf	(___fldiv@a+1)^0,c
  9584  0022A4  0E00               	movlw	0
  9585  0022A6  6E3A               	movwf	(___fldiv@a+2)^0,c
  9586  0022A8  0E00               	movlw	0
  9587  0022AA  6E3B               	movwf	(___fldiv@a+3)^0,c
  9588  0022AC                     l5411:
  9589  0022AC  5038               	movf	___fldiv@a^0,w,c
  9590  0022AE  1039               	iorwf	(___fldiv@a+1)^0,w,c
  9591  0022B0  103A               	iorwf	(___fldiv@a+2)^0,w,c
  9592  0022B2  103B               	iorwf	(___fldiv@a+3)^0,w,c
  9593  0022B4  A4D8               	btfss	status,2,c
  9594  0022B6  EF5F  F011         	goto	u6171
  9595  0022BA  EF61  F011         	goto	u6170
  9596  0022BE                     u6171:
  9597  0022BE  EF79  F011         	goto	l5423
  9598  0022C2                     u6170:
  9599  0022C2  0E00               	movlw	0
  9600  0022C4  6E34               	movwf	___fldiv@b^0,c
  9601  0022C6  0E00               	movlw	0
  9602  0022C8  6E35               	movwf	(___fldiv@b+1)^0,c
  9603  0022CA  0E00               	movlw	0
  9604  0022CC  6E36               	movwf	(___fldiv@b+2)^0,c
  9605  0022CE  0E00               	movlw	0
  9606  0022D0  6E37               	movwf	(___fldiv@b+3)^0,c
  9607  0022D2  0E80               	movlw	128
  9608  0022D4  1236               	iorwf	(___fldiv@b+2)^0,f,c
  9609  0022D6  0E7F               	movlw	127
  9610  0022D8  1237               	iorwf	(___fldiv@b+3)^0,f,c
  9611  0022DA                     l5417:
  9612  0022DA  5044               	movf	___fldiv@sign^0,w,c
  9613  0022DC  1237               	iorwf	(___fldiv@b+3)^0,f,c
  9614  0022DE  C034  F034         	movff	___fldiv@b,?___fldiv
  9615  0022E2  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  9616  0022E6  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  9617  0022EA  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  9618  0022EE  EFBC  F012         	goto	l1084
  9619  0022F2                     l5423:
  9620  0022F2  504B               	movf	___fldiv@bexp^0,w,c
  9621  0022F4  A4D8               	btfss	status,2,c
  9622  0022F6  EF7F  F011         	goto	u6181
  9623  0022FA  EF81  F011         	goto	u6180
  9624  0022FE                     u6181:
  9625  0022FE  EF8B  F011         	goto	l5431
  9626  002302                     u6180:
  9627  002302  0E00               	movlw	0
  9628  002304  6E34               	movwf	?___fldiv^0,c
  9629  002306  0E00               	movlw	0
  9630  002308  6E35               	movwf	(?___fldiv+1)^0,c
  9631  00230A  0E00               	movlw	0
  9632  00230C  6E36               	movwf	(?___fldiv+2)^0,c
  9633  00230E  0E00               	movlw	0
  9634  002310  6E37               	movwf	(?___fldiv+3)^0,c
  9635  002312  EFBC  F012         	goto	l1084
  9636  002316                     l5431:
  9637  002316  504C               	movf	___fldiv@aexp^0,w,c
  9638  002318  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  9639  00231C  6A3D               	clrf	(??___fldiv+1)^0,c
  9640  00231E  5E3C               	subwf	??___fldiv^0,f,c
  9641  002320  0E00               	movlw	0
  9642  002322  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  9643  002324  0E7F               	movlw	127
  9644  002326  243C               	addwf	??___fldiv^0,w,c
  9645  002328  6E45               	movwf	___fldiv@new_exp^0,c
  9646  00232A  0E00               	movlw	0
  9647  00232C  203D               	addwfc	(??___fldiv+1)^0,w,c
  9648  00232E  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  9649  002330  C034  F040         	movff	___fldiv@b,___fldiv@rem
  9650  002334  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  9651  002338  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  9652  00233C  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  9653  002340  0E00               	movlw	0
  9654  002342  6E34               	movwf	___fldiv@b^0,c
  9655  002344  0E00               	movlw	0
  9656  002346  6E35               	movwf	(___fldiv@b+1)^0,c
  9657  002348  0E00               	movlw	0
  9658  00234A  6E36               	movwf	(___fldiv@b+2)^0,c
  9659  00234C  0E00               	movlw	0
  9660  00234E  6E37               	movwf	(___fldiv@b+3)^0,c
  9661  002350  0E00               	movlw	0
  9662  002352  6E47               	movwf	___fldiv@grs^0,c
  9663  002354  0E00               	movlw	0
  9664  002356  6E48               	movwf	(___fldiv@grs+1)^0,c
  9665  002358  0E00               	movlw	0
  9666  00235A  6E49               	movwf	(___fldiv@grs+2)^0,c
  9667  00235C  0E00               	movlw	0
  9668  00235E  6E4A               	movwf	(___fldiv@grs+3)^0,c
  9669  002360  0E00               	movlw	0
  9670  002362  6E4C               	movwf	___fldiv@aexp^0,c
  9671  002364  EFEC  F011         	goto	l1086
  9672  002368                     l5441:
  9673  002368  504C               	movf	___fldiv@aexp^0,w,c
  9674  00236A  B4D8               	btfsc	status,2,c
  9675  00236C  EFBA  F011         	goto	u6191
  9676  002370  EFBC  F011         	goto	u6190
  9677  002374                     u6191:
  9678  002374  EFD3  F011         	goto	l5449
  9679  002378                     u6190:
  9680  002378  90D8               	bcf	status,0,c
  9681  00237A  3640               	rlcf	___fldiv@rem^0,f,c
  9682  00237C  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  9683  00237E  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  9684  002380  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  9685  002382  90D8               	bcf	status,0,c
  9686  002384  3634               	rlcf	___fldiv@b^0,f,c
  9687  002386  3635               	rlcf	(___fldiv@b+1)^0,f,c
  9688  002388  3636               	rlcf	(___fldiv@b+2)^0,f,c
  9689  00238A  3637               	rlcf	(___fldiv@b+3)^0,f,c
  9690  00238C  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  9691  00238E  EFCB  F011         	goto	u6201
  9692  002392  EFCD  F011         	goto	u6200
  9693  002396                     u6201:
  9694  002396  EFCE  F011         	goto	l1089
  9695  00239A                     u6200:
  9696  00239A  8034               	bsf	___fldiv@b^0,0,c
  9697  00239C                     l1089:
  9698  00239C  90D8               	bcf	status,0,c
  9699  00239E  3647               	rlcf	___fldiv@grs^0,f,c
  9700  0023A0  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  9701  0023A2  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  9702  0023A4  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  9703  0023A6                     l5449:
  9704  0023A6  5038               	movf	___fldiv@a^0,w,c
  9705  0023A8  5C40               	subwf	___fldiv@rem^0,w,c
  9706  0023AA  5039               	movf	(___fldiv@a+1)^0,w,c
  9707  0023AC  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  9708  0023AE  503A               	movf	(___fldiv@a+2)^0,w,c
  9709  0023B0  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  9710  0023B2  503B               	movf	(___fldiv@a+3)^0,w,c
  9711  0023B4  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  9712  0023B6  A0D8               	btfss	status,0,c
  9713  0023B8  EFE0  F011         	goto	u6211
  9714  0023BC  EFE2  F011         	goto	u6210
  9715  0023C0                     u6211:
  9716  0023C0  EFEB  F011         	goto	l5455
  9717  0023C4                     u6210:
  9718  0023C4  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  9719  0023C6  5038               	movf	___fldiv@a^0,w,c
  9720  0023C8  5E40               	subwf	___fldiv@rem^0,f,c
  9721  0023CA  5039               	movf	(___fldiv@a+1)^0,w,c
  9722  0023CC  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  9723  0023CE  503A               	movf	(___fldiv@a+2)^0,w,c
  9724  0023D0  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  9725  0023D2  503B               	movf	(___fldiv@a+3)^0,w,c
  9726  0023D4  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  9727  0023D6                     l5455:
  9728  0023D6  2A4C               	incf	___fldiv@aexp^0,f,c
  9729  0023D8                     l1086:
  9730  0023D8  0E19               	movlw	25
  9731  0023DA  644C               	cpfsgt	___fldiv@aexp^0,c
  9732  0023DC  EFF2  F011         	goto	u6221
  9733  0023E0  EFF4  F011         	goto	u6220
  9734  0023E4                     u6221:
  9735  0023E4  EFB4  F011         	goto	l5441
  9736  0023E8                     u6220:
  9737  0023E8  5040               	movf	___fldiv@rem^0,w,c
  9738  0023EA  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  9739  0023EC  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  9740  0023EE  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  9741  0023F0  B4D8               	btfsc	status,2,c
  9742  0023F2  EFFD  F011         	goto	u6231
  9743  0023F6  EFFF  F011         	goto	u6230
  9744  0023FA                     u6231:
  9745  0023FA  EF17  F012         	goto	l5467
  9746  0023FE                     u6230:
  9747  0023FE  8047               	bsf	___fldiv@grs^0,0,c
  9748  002400  EF17  F012         	goto	l5467
  9749  002404                     l5461:
  9750  002404  90D8               	bcf	status,0,c
  9751  002406  3634               	rlcf	___fldiv@b^0,f,c
  9752  002408  3635               	rlcf	(___fldiv@b+1)^0,f,c
  9753  00240A  3636               	rlcf	(___fldiv@b+2)^0,f,c
  9754  00240C  3637               	rlcf	(___fldiv@b+3)^0,f,c
  9755  00240E  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  9756  002410  EF0C  F012         	goto	u6241
  9757  002414  EF0E  F012         	goto	u6240
  9758  002418                     u6241:
  9759  002418  EF0F  F012         	goto	l1095
  9760  00241C                     u6240:
  9761  00241C  8034               	bsf	___fldiv@b^0,0,c
  9762  00241E                     l1095:
  9763  00241E  90D8               	bcf	status,0,c
  9764  002420  3647               	rlcf	___fldiv@grs^0,f,c
  9765  002422  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  9766  002424  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  9767  002426  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  9768  002428  0645               	decf	___fldiv@new_exp^0,f,c
  9769  00242A  A0D8               	btfss	status,0,c
  9770  00242C  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  9771  00242E                     l5467:
  9772  00242E  AE36               	btfss	(___fldiv@b+2)^0,7,c
  9773  002430  EF1C  F012         	goto	u6251
  9774  002434  EF1E  F012         	goto	u6250
  9775  002438                     u6251:
  9776  002438  EF02  F012         	goto	l5461
  9777  00243C                     u6250:
  9778  00243C  0E00               	movlw	0
  9779  00243E  6E4C               	movwf	___fldiv@aexp^0,c
  9780  002440  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  9781  002442  EF25  F012         	goto	u6261
  9782  002446  EF27  F012         	goto	u6260
  9783  00244A                     u6261:
  9784  00244A  EF4B  F012         	goto	l1097
  9785  00244E                     u6260:
  9786  00244E  0EFF               	movlw	255
  9787  002450  1447               	andwf	___fldiv@grs^0,w,c
  9788  002452  6E3C               	movwf	??___fldiv^0,c
  9789  002454  0EFF               	movlw	255
  9790  002456  1448               	andwf	(___fldiv@grs+1)^0,w,c
  9791  002458  6E3D               	movwf	(??___fldiv+1)^0,c
  9792  00245A  0EFF               	movlw	255
  9793  00245C  1449               	andwf	(___fldiv@grs+2)^0,w,c
  9794  00245E  6E3E               	movwf	(??___fldiv+2)^0,c
  9795  002460  0E7F               	movlw	127
  9796  002462  144A               	andwf	(___fldiv@grs+3)^0,w,c
  9797  002464  6E3F               	movwf	(??___fldiv+3)^0,c
  9798  002466  503C               	movf	??___fldiv^0,w,c
  9799  002468  103D               	iorwf	(??___fldiv+1)^0,w,c
  9800  00246A  103E               	iorwf	(??___fldiv+2)^0,w,c
  9801  00246C  103F               	iorwf	(??___fldiv+3)^0,w,c
  9802  00246E  B4D8               	btfsc	status,2,c
  9803  002470  EF3C  F012         	goto	u6271
  9804  002474  EF3E  F012         	goto	u6270
  9805  002478                     u6271:
  9806  002478  EF42  F012         	goto	l1098
  9807  00247C                     u6270:
  9808  00247C                     l5475:
  9809  00247C  0E01               	movlw	1
  9810  00247E  6E4C               	movwf	___fldiv@aexp^0,c
  9811  002480  EF4B  F012         	goto	l1097
  9812  002484                     l1098:
  9813  002484  A034               	btfss	___fldiv@b^0,0,c
  9814  002486  EF47  F012         	goto	u6281
  9815  00248A  EF49  F012         	goto	u6280
  9816  00248E                     u6281:
  9817  00248E  EF4B  F012         	goto	l1097
  9818  002492                     u6280:
  9819  002492  EF3E  F012         	goto	l5475
  9820  002496                     l1097:
  9821  002496  504C               	movf	___fldiv@aexp^0,w,c
  9822  002498  B4D8               	btfsc	status,2,c
  9823  00249A  EF51  F012         	goto	u6291
  9824  00249E  EF53  F012         	goto	u6290
  9825  0024A2                     u6291:
  9826  0024A2  EF77  F012         	goto	l5487
  9827  0024A6                     u6290:
  9828  0024A6  0E01               	movlw	1
  9829  0024A8  2634               	addwf	___fldiv@b^0,f,c
  9830  0024AA  0E00               	movlw	0
  9831  0024AC  2235               	addwfc	(___fldiv@b+1)^0,f,c
  9832  0024AE  2236               	addwfc	(___fldiv@b+2)^0,f,c
  9833  0024B0  2237               	addwfc	(___fldiv@b+3)^0,f,c
  9834  0024B2  A037               	btfss	(___fldiv@b+3)^0,0,c
  9835  0024B4  EF5E  F012         	goto	u6301
  9836  0024B8  EF60  F012         	goto	u6300
  9837  0024BC                     u6301:
  9838  0024BC  EF77  F012         	goto	l5487
  9839  0024C0                     u6300:
  9840  0024C0  C034  F03C         	movff	___fldiv@b,??___fldiv
  9841  0024C4  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  9842  0024C8  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  9843  0024CC  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  9844  0024D0  343F               	rlcf	(??___fldiv+3)^0,w,c
  9845  0024D2  323F               	rrcf	(??___fldiv+3)^0,f,c
  9846  0024D4  323E               	rrcf	(??___fldiv+2)^0,f,c
  9847  0024D6  323D               	rrcf	(??___fldiv+1)^0,f,c
  9848  0024D8  323C               	rrcf	??___fldiv^0,f,c
  9849  0024DA  C03C  F034         	movff	??___fldiv,___fldiv@b
  9850  0024DE  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  9851  0024E2  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  9852  0024E6  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  9853  0024EA  4A45               	infsnz	___fldiv@new_exp^0,f,c
  9854  0024EC  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  9855  0024EE                     l5487:
  9856  0024EE  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9857  0024F0  EF82  F012         	goto	u6311
  9858  0024F4  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  9859  0024F6  E108               	bnz	u6310
  9860  0024F8  2845               	incf	___fldiv@new_exp^0,w,c
  9861  0024FA  A0D8               	btfss	status,0,c
  9862  0024FC  EF82  F012         	goto	u6311
  9863  002500  EF84  F012         	goto	u6310
  9864  002504                     u6311:
  9865  002504  EF8F  F012         	goto	l5491
  9866  002508                     u6310:
  9867  002508  0E00               	movlw	0
  9868  00250A  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  9869  00250C  6845               	setf	___fldiv@new_exp^0,c
  9870  00250E  0E00               	movlw	0
  9871  002510  6E34               	movwf	___fldiv@b^0,c
  9872  002512  0E00               	movlw	0
  9873  002514  6E35               	movwf	(___fldiv@b+1)^0,c
  9874  002516  0E00               	movlw	0
  9875  002518  6E36               	movwf	(___fldiv@b+2)^0,c
  9876  00251A  0E00               	movlw	0
  9877  00251C  6E37               	movwf	(___fldiv@b+3)^0,c
  9878  00251E                     l5491:
  9879  00251E  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9880  002520  EF9C  F012         	goto	u6320
  9881  002524  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  9882  002526  E106               	bnz	u6321
  9883  002528  0445               	decf	___fldiv@new_exp^0,w,c
  9884  00252A  B0D8               	btfsc	status,0,c
  9885  00252C  EF9A  F012         	goto	u6321
  9886  002530  EF9C  F012         	goto	u6320
  9887  002534                     u6321:
  9888  002534  EFAA  F012         	goto	l5495
  9889  002538                     u6320:
  9890  002538  0E00               	movlw	0
  9891  00253A  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  9892  00253C  0E00               	movlw	0
  9893  00253E  6E45               	movwf	___fldiv@new_exp^0,c
  9894  002540  0E00               	movlw	0
  9895  002542  6E34               	movwf	___fldiv@b^0,c
  9896  002544  0E00               	movlw	0
  9897  002546  6E35               	movwf	(___fldiv@b+1)^0,c
  9898  002548  0E00               	movlw	0
  9899  00254A  6E36               	movwf	(___fldiv@b+2)^0,c
  9900  00254C  0E00               	movlw	0
  9901  00254E  6E37               	movwf	(___fldiv@b+3)^0,c
  9902  002550  0E00               	movlw	0
  9903  002552  6E44               	movwf	___fldiv@sign^0,c
  9904  002554                     l5495:
  9905  002554  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  9906  002558  A04B               	btfss	___fldiv@bexp^0,0,c
  9907  00255A  EFB1  F012         	goto	u6331
  9908  00255E  EFB3  F012         	goto	u6330
  9909  002562                     u6331:
  9910  002562  EFB6  F012         	goto	l5501
  9911  002566                     u6330:
  9912  002566  8E36               	bsf	(___fldiv@b+2)^0,7,c
  9913  002568  EFB7  F012         	goto	l5503
  9914  00256C                     l5501:
  9915  00256C  9E36               	bcf	(___fldiv@b+2)^0,7,c
  9916  00256E                     l5503:
  9917  00256E  90D8               	bcf	status,0,c
  9918  002570  304B               	rrcf	___fldiv@bexp^0,w,c
  9919  002572  6E37               	movwf	(___fldiv@b+3)^0,c
  9920  002574  EF6D  F011         	goto	l5417
  9921  002578                     l1084:
  9922  002578  0012               	return		;funcret
  9923  00257A                     __end_of___fldiv:
  9924                           	callstack 0
  9925                           
  9926 ;; *************** function _ADC_GetConversion *****************
  9927 ;; Defined at:
  9928 ;;		line 110 in file "mcc_generated_files/adc.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  channel         1    wreg     enum E4598
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  channel         1    8[COMRAM] enum E4598
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  2    4[COMRAM] unsigned short 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9942 ;;      Params:         2       0       0       0       0       0       0       0       0
  9943 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9944 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9945 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9946 ;;Total ram usage:        5 bytes
  9947 ;; Hardware stack levels used: 1
  9948 ;; Hardware stack levels required when called: 4
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_get_corriente_AC
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text45
  9957  003D10                     __ptext45:
  9958                           	callstack 0
  9959  003D10                     _ADC_GetConversion:
  9960                           	callstack 25
  9961                           
  9962                           ;incstack = 0
  9963                           ;ADC_GetConversion@channel stored from wreg
  9964  003D10  6E09               	movwf	ADC_GetConversion@channel^0,c
  9965  003D12                     
  9966                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  9967  003D12  C009  F007         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  9968  003D16  4607               	rlncf	??_ADC_GetConversion^0,f,c
  9969  003D18  4607               	rlncf	??_ADC_GetConversion^0,f,c
  9970  003D1A  50C2               	movf	194,w,c	;volatile
  9971  003D1C  1807               	xorwf	??_ADC_GetConversion^0,w,c
  9972  003D1E  0B83               	andlw	-125
  9973  003D20  1807               	xorwf	??_ADC_GetConversion^0,w,c
  9974  003D22  6EC2               	movwf	194,c	;volatile
  9975  003D24                     
  9976                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  9977  003D24  80C2               	bsf	194,0,c	;volatile
  9978  003D26                     
  9979                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  9980  003D26  82C2               	bsf	194,1,c	;volatile
  9981  003D28                     l206:
  9982                           
  9983                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  9984  003D28  B2C2               	btfsc	194,1,c	;volatile
  9985  003D2A  EF99  F01E         	goto	u7961
  9986  003D2E  EF9B  F01E         	goto	u7960
  9987  003D32                     u7961:
  9988  003D32  EF94  F01E         	goto	l206
  9989  003D36                     u7960:
  9990  003D36                     
  9991                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9992  003D36  50C4               	movf	196,w,c	;volatile
  9993  003D38  6E08               	movwf	(??_ADC_GetConversion+1)^0,c
  9994  003D3A  6A07               	clrf	??_ADC_GetConversion^0,c
  9995  003D3C  50C3               	movf	195,w,c	;volatile
  9996  003D3E  2407               	addwf	??_ADC_GetConversion^0,w,c
  9997  003D40  6E05               	movwf	?_ADC_GetConversion^0,c
  9998  003D42  0E00               	movlw	0
  9999  003D44  2008               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 10000  003D46  6E06               	movwf	(?_ADC_GetConversion+1)^0,c
 10001  003D48  0012               	return		;funcret
 10002  003D4A                     __end_of_ADC_GetConversion:
 10003                           	callstack 0
 10004                           
 10005 ;; *************** function _SYSTEM_Initialize *****************
 10006 ;; Defined at:
 10007 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  1    wreg      void 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2, status,0, cstack
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10021 ;;      Params:         0       0       0       0       0       0       0       0       0
 10022 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10024 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10025 ;;Total ram usage:        0 bytes
 10026 ;; Hardware stack levels used: 1
 10027 ;; Hardware stack levels required when called: 6
 10028 ;; This function calls:
 10029 ;;		_ADC_Initialize
 10030 ;;		_CCP2_Initialize
 10031 ;;		_EUSART1_Initialize
 10032 ;;		_INTERRUPT_Initialize
 10033 ;;		_OSCILLATOR_Initialize
 10034 ;;		_PIN_MANAGER_Initialize
 10035 ;;		_TMR1_Initialize
 10036 ;; This function is called by:
 10037 ;;		_main
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           	psect	text46
 10042  003F9E                     __ptext46:
 10043                           	callstack 0
 10044  003F9E                     _SYSTEM_Initialize:
 10045                           	callstack 24
 10046  003F9E                     
 10047                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 10048  003F9E  EC68  F020         	call	_INTERRUPT_Initialize	;wreg free
 10049  003FA2                     
 10050                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10051  003FA2  EC49  F01F         	call	_PIN_MANAGER_Initialize	;wreg free
 10052  003FA6                     
 10053                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10054  003FA6  ECB0  F01F         	call	_OSCILLATOR_Initialize	;wreg free
 10055  003FAA                     
 10056                           ;mcc_generated_files/mcc.c: 56:     CCP2_Initialize();
 10057  003FAA  EC3E  F020         	call	_CCP2_Initialize	;wreg free
 10058  003FAE                     
 10059                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 10060  003FAE  EC60  F01F         	call	_TMR1_Initialize	;wreg free
 10061  003FB2                     
 10062                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 10063  003FB2  EC1E  F020         	call	_ADC_Initialize	;wreg free
 10064  003FB6                     
 10065                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
 10066  003FB6  EC68  F01E         	call	_EUSART1_Initialize	;wreg free
 10067  003FBA  0012               	return		;funcret
 10068  003FBC                     __end_of_SYSTEM_Initialize:
 10069                           	callstack 0
 10070                           
 10071 ;; *************** function _TMR1_Initialize *****************
 10072 ;; Defined at:
 10073 ;;		line 65 in file "mcc_generated_files/tmr1.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, status,2, status,0, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10087 ;;      Params:         0       0       0       0       0       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10090 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10091 ;;Total ram usage:        0 bytes
 10092 ;; Hardware stack levels used: 1
 10093 ;; Hardware stack levels required when called: 5
 10094 ;; This function calls:
 10095 ;;		_TMR1_SetInterruptHandler
 10096 ;; This function is called by:
 10097 ;;		_SYSTEM_Initialize
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text47
 10102  003EC0                     __ptext47:
 10103                           	callstack 0
 10104  003EC0                     _TMR1_Initialize:
 10105                           	callstack 24
 10106  003EC0                     
 10107                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
 10108  003EC0  0E00               	movlw	0
 10109  003EC2  6ECC               	movwf	204,c	;volatile
 10110                           
 10111                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xD1;
 10112  003EC4  0ED1               	movlw	209
 10113  003EC6  6ECF               	movwf	207,c	;volatile
 10114                           
 10115                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x20;
 10116  003EC8  0E20               	movlw	32
 10117  003ECA  6ECE               	movwf	206,c	;volatile
 10118  003ECC                     
 10119                           ;mcc_generated_files/tmr1.c: 79:     timer1ReloadVal=TMR1;
 10120  003ECC  CFCE F0F2          	movff	4046,_timer1ReloadVal	;volatile
 10121  003ED0  CFCF F0F3          	movff	4047,_timer1ReloadVal+1	;volatile
 10122  003ED4                     
 10123                           ;mcc_generated_files/tmr1.c: 82:     PIR1bits.TMR1IF = 0;
 10124  003ED4  909E               	bcf	158,0,c	;volatile
 10125  003ED6                     
 10126                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
 10127  003ED6  809D               	bsf	157,0,c	;volatile
 10128  003ED8                     
 10129                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 10130  003ED8  0ED4               	movlw	low _TMR1_DefaultInterruptHandler
 10131  003EDA  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 10132  003EDC  0E40               	movlw	high _TMR1_DefaultInterruptHandler
 10133  003EDE  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 10134  003EE0  EC50  F020         	call	_TMR1_SetInterruptHandler	;wreg free
 10135  003EE4                     
 10136                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x01;
 10137  003EE4  0E01               	movlw	1
 10138  003EE6  6ECD               	movwf	205,c	;volatile
 10139  003EE8  0012               	return		;funcret
 10140  003EEA                     __end_of_TMR1_Initialize:
 10141                           	callstack 0
 10142                           
 10143 ;; *************** function _TMR1_SetInterruptHandler *****************
 10144 ;; Defined at:
 10145 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
 10148 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10160 ;;      Params:         2       0       0       0       0       0       0       0       0
 10161 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10162 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10163 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10164 ;;Total ram usage:        2 bytes
 10165 ;; Hardware stack levels used: 1
 10166 ;; Hardware stack levels required when called: 4
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_TMR1_Initialize
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text48
 10175  0040A0                     __ptext48:
 10176                           	callstack 0
 10177  0040A0                     _TMR1_SetInterruptHandler:
 10178                           	callstack 24
 10179  0040A0                     
 10180                           ;mcc_generated_files/tmr1.c: 190:     TMR1_InterruptHandler = InterruptHandler;
 10181  0040A0  C005  F0F0         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 10182  0040A4  C006  F0F1         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 10183  0040A8  0012               	return		;funcret
 10184  0040AA                     __end_of_TMR1_SetInterruptHandler:
 10185                           	callstack 0
 10186                           
 10187 ;; *************** function _PIN_MANAGER_Initialize *****************
 10188 ;; Defined at:
 10189 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;		None
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      void 
 10196 ;; Registers used:
 10197 ;;		wreg, status,2
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10206 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10207 ;;Total ram usage:        0 bytes
 10208 ;; Hardware stack levels used: 1
 10209 ;; Hardware stack levels required when called: 4
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_SYSTEM_Initialize
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           	psect	text49
 10218  003E92                     __ptext49:
 10219                           	callstack 0
 10220  003E92                     _PIN_MANAGER_Initialize:
 10221                           	callstack 25
 10222  003E92                     
 10223                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 10224  003E92  0E00               	movlw	0
 10225  003E94  6E89               	movwf	137,c	;volatile
 10226                           
 10227                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 10228  003E96  0E00               	movlw	0
 10229  003E98  6E8A               	movwf	138,c	;volatile
 10230                           
 10231                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 10232  003E9A  0E00               	movlw	0
 10233  003E9C  6E8B               	movwf	139,c	;volatile
 10234                           
 10235                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
 10236  003E9E  0EC7               	movlw	199
 10237  003EA0  6E92               	movwf	146,c	;volatile
 10238                           
 10239                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 10240  003EA2  0EFE               	movlw	254
 10241  003EA4  6E93               	movwf	147,c	;volatile
 10242                           
 10243                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
 10244  003EA6  0E87               	movlw	135
 10245  003EA8  6E94               	movwf	148,c	;volatile
 10246                           
 10247                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
 10248  003EAA  0E04               	movlw	4
 10249  003EAC  010F               	movlb	15	; () banked
 10250  003EAE  6F5D               	movwf	93,b	;volatile
 10251                           
 10252                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
 10253  003EB0  0E3E               	movlw	62
 10254  003EB2  6F5C               	movwf	92,b	;volatile
 10255                           
 10256                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 10257  003EB4  0E07               	movlw	7
 10258  003EB6  6F5B               	movwf	91,b	;volatile
 10259                           
 10260                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 10261  003EB8  0E00               	movlw	0
 10262  003EBA  6E85               	movwf	133,c	;volatile
 10263  003EBC                     
 10264                           ; BSR set to: 15
 10265                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
 10266  003EBC  8EF1               	bsf	241,7,c	;volatile
 10267  003EBE                     
 10268                           ; BSR set to: 15
 10269  003EBE  0012               	return		;funcret
 10270  003EC0                     __end_of_PIN_MANAGER_Initialize:
 10271                           	callstack 0
 10272                           
 10273 ;; *************** function _OSCILLATOR_Initialize *****************
 10274 ;; Defined at:
 10275 ;;		line 62 in file "mcc_generated_files/mcc.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;		None
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;		None
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      void 
 10282 ;; Registers used:
 10283 ;;		wreg, status,2
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10289 ;;      Params:         0       0       0       0       0       0       0       0       0
 10290 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10291 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10292 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10293 ;;Total ram usage:        0 bytes
 10294 ;; Hardware stack levels used: 1
 10295 ;; Hardware stack levels required when called: 4
 10296 ;; This function calls:
 10297 ;;		Nothing
 10298 ;; This function is called by:
 10299 ;;		_SYSTEM_Initialize
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text50
 10304  003F60                     __ptext50:
 10305                           	callstack 0
 10306  003F60                     _OSCILLATOR_Initialize:
 10307                           	callstack 25
 10308  003F60                     
 10309                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
 10310  003F60  0E70               	movlw	112
 10311  003F62  6ED3               	movwf	211,c	;volatile
 10312                           
 10313                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
 10314  003F64  0E00               	movlw	0
 10315  003F66  6ED2               	movwf	210,c	;volatile
 10316                           
 10317                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x80;
 10318  003F68  0E80               	movlw	128
 10319  003F6A  6E9B               	movwf	155,c	;volatile
 10320                           
 10321                           ;mcc_generated_files/mcc.c: 71:     ACTCON = 0x00;
 10322  003F6C  0E00               	movlw	0
 10323  003F6E  6EB5               	movwf	181,c	;volatile
 10324  003F70                     l130:
 10325                           
 10326                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
 10327  003F70  AED2               	btfss	4050,7,c	;volatile
 10328  003F72  EFBD  F01F         	goto	u7951
 10329  003F76  EFBF  F01F         	goto	u7950
 10330  003F7A                     u7951:
 10331  003F7A  EFB8  F01F         	goto	l130
 10332  003F7E                     u7950:
 10333  003F7E  0012               	return		;funcret
 10334  003F80                     __end_of_OSCILLATOR_Initialize:
 10335                           	callstack 0
 10336                           
 10337 ;; *************** function _INTERRUPT_Initialize *****************
 10338 ;; Defined at:
 10339 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;		None
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;		None
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		None
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10353 ;;      Params:         0       0       0       0       0       0       0       0       0
 10354 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10355 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10356 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10357 ;;Total ram usage:        0 bytes
 10358 ;; Hardware stack levels used: 1
 10359 ;; Hardware stack levels required when called: 4
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_SYSTEM_Initialize
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text51
 10368  0040D0                     __ptext51:
 10369                           	callstack 0
 10370  0040D0                     _INTERRUPT_Initialize:
 10371                           	callstack 25
 10372  0040D0                     
 10373                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 10374  0040D0  9ED0               	bcf	208,7,c	;volatile
 10375  0040D2  0012               	return		;funcret
 10376  0040D4                     __end_of_INTERRUPT_Initialize:
 10377                           	callstack 0
 10378                           
 10379 ;; *************** function _EUSART1_Initialize *****************
 10380 ;; Defined at:
 10381 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;		None
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;		None
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, status,2, status,0, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10395 ;;      Params:         0       0       0       0       0       0       0       0       0
 10396 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10397 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10398 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10399 ;;Total ram usage:        0 bytes
 10400 ;; Hardware stack levels used: 1
 10401 ;; Hardware stack levels required when called: 5
 10402 ;; This function calls:
 10403 ;;		_EUSART1_SetErrorHandler
 10404 ;;		_EUSART1_SetFramingErrorHandler
 10405 ;;		_EUSART1_SetOverrunErrorHandler
 10406 ;; This function is called by:
 10407 ;;		_SYSTEM_Initialize
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text52
 10412  003CD0                     __ptext52:
 10413                           	callstack 0
 10414  003CD0                     _EUSART1_Initialize:
 10415                           	callstack 24
 10416  003CD0                     
 10417                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
 10418  003CD0  0E08               	movlw	8
 10419  003CD2  6EB8               	movwf	184,c	;volatile
 10420                           
 10421                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
 10422  003CD4  0E90               	movlw	144
 10423  003CD6  6EAB               	movwf	171,c	;volatile
 10424                           
 10425                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
 10426  003CD8  0E24               	movlw	36
 10427  003CDA  6EAC               	movwf	172,c	;volatile
 10428                           
 10429                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xE1;
 10430  003CDC  0EE1               	movlw	225
 10431  003CDE  6EAF               	movwf	175,c	;volatile
 10432                           
 10433                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x04;
 10434  003CE0  0E04               	movlw	4
 10435  003CE2  6EB0               	movwf	176,c	;volatile
 10436  003CE4                     
 10437                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 10438  003CE4  0E00               	movlw	0
 10439  003CE6  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 10440  003CE8  0E00               	movlw	0
 10441  003CEA  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 10442  003CEC  EC5A  F020         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 10443  003CF0                     
 10444                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 10445  003CF0  0E00               	movlw	0
 10446  003CF2  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 10447  003CF4  0E00               	movlw	0
 10448  003CF6  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 10449  003CF8  EC55  F020         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 10450  003CFC                     
 10451                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 10452  003CFC  0E00               	movlw	0
 10453  003CFE  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 10454  003D00  0E00               	movlw	0
 10455  003D02  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 10456  003D04  EC5F  F020         	call	_EUSART1_SetErrorHandler	;wreg free
 10457  003D08                     
 10458                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 10459  003D08  0E00               	movlw	0
 10460  003D0A  0100               	movlb	0	; () banked
 10461  003D0C  6FFF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 10462  003D0E                     
 10463                           ; BSR set to: 0
 10464  003D0E  0012               	return		;funcret
 10465  003D10                     __end_of_EUSART1_Initialize:
 10466                           	callstack 0
 10467                           
 10468 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 10469 ;; Defined at:
 10470 ;;		line 178 in file "mcc_generated_files/eusart1.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 10473 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10485 ;;      Params:         2       0       0       0       0       0       0       0       0
 10486 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10488 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10489 ;;Total ram usage:        2 bytes
 10490 ;; Hardware stack levels used: 1
 10491 ;; Hardware stack levels required when called: 4
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_EUSART1_Initialize
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text53
 10500  0040AA                     __ptext53:
 10501                           	callstack 0
 10502  0040AA                     _EUSART1_SetOverrunErrorHandler:
 10503                           	callstack 24
 10504  0040AA                     
 10505                           ;mcc_generated_files/eusart1.c: 179:     EUSART1_OverrunErrorHandler = interruptHandler;
 10506  0040AA  C005  F120         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 10507  0040AE  C006  F121         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 10508  0040B2  0012               	return		;funcret
 10509  0040B4                     __end_of_EUSART1_SetOverrunErrorHandler:
 10510                           	callstack 0
 10511                           
 10512 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 10513 ;; Defined at:
 10514 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 10517 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;		None
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, status,2, status,0
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10529 ;;      Params:         2       0       0       0       0       0       0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10532 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10533 ;;Total ram usage:        2 bytes
 10534 ;; Hardware stack levels used: 1
 10535 ;; Hardware stack levels required when called: 4
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_EUSART1_Initialize
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text54
 10544  0040B4                     __ptext54:
 10545                           	callstack 0
 10546  0040B4                     _EUSART1_SetFramingErrorHandler:
 10547                           	callstack 24
 10548  0040B4                     
 10549                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_FramingErrorHandler = interruptHandler;
 10550  0040B4  C005  F122         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 10551  0040B8  C006  F123         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 10552  0040BC  0012               	return		;funcret
 10553  0040BE                     __end_of_EUSART1_SetFramingErrorHandler:
 10554                           	callstack 0
 10555                           
 10556 ;; *************** function _EUSART1_SetErrorHandler *****************
 10557 ;; Defined at:
 10558 ;;		line 182 in file "mcc_generated_files/eusart1.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 10561 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;		None
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  1    wreg      void 
 10566 ;; Registers used:
 10567 ;;		wreg, status,2, status,0
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10573 ;;      Params:         2       0       0       0       0       0       0       0       0
 10574 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10575 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10576 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10577 ;;Total ram usage:        2 bytes
 10578 ;; Hardware stack levels used: 1
 10579 ;; Hardware stack levels required when called: 4
 10580 ;; This function calls:
 10581 ;;		Nothing
 10582 ;; This function is called by:
 10583 ;;		_EUSART1_Initialize
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text55
 10588  0040BE                     __ptext55:
 10589                           	callstack 0
 10590  0040BE                     _EUSART1_SetErrorHandler:
 10591                           	callstack 24
 10592  0040BE                     
 10593                           ;mcc_generated_files/eusart1.c: 183:     EUSART1_ErrorHandler = interruptHandler;
 10594  0040BE  C005  F11E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 10595  0040C2  C006  F11F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 10596  0040C6  0012               	return		;funcret
 10597  0040C8                     __end_of_EUSART1_SetErrorHandler:
 10598                           	callstack 0
 10599                           
 10600 ;; *************** function _CCP2_Initialize *****************
 10601 ;; Defined at:
 10602 ;;		line 49 in file "mcc_generated_files/ccp2.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      void 
 10609 ;; Registers used:
 10610 ;;		wreg, status,2
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10616 ;;      Params:         0       0       0       0       0       0       0       0       0
 10617 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10619 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10620 ;;Total ram usage:        0 bytes
 10621 ;; Hardware stack levels used: 1
 10622 ;; Hardware stack levels required when called: 4
 10623 ;; This function calls:
 10624 ;;		Nothing
 10625 ;; This function is called by:
 10626 ;;		_SYSTEM_Initialize
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630                           	psect	text56
 10631  00407C                     __ptext56:
 10632                           	callstack 0
 10633  00407C                     _CCP2_Initialize:
 10634                           	callstack 25
 10635  00407C                     
 10636                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
 10637  00407C  0E00               	movlw	0
 10638  00407E  6E97               	movwf	151,c	;volatile
 10639                           
 10640                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
 10641  004080  0E00               	movlw	0
 10642  004082  6E90               	movwf	144,c	;volatile
 10643                           
 10644                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
 10645  004084  0E00               	movlw	0
 10646  004086  6E91               	movwf	145,c	;volatile
 10647  004088  0012               	return		;funcret
 10648  00408A                     __end_of_CCP2_Initialize:
 10649                           	callstack 0
 10650                           
 10651 ;; *************** function _ADC_Initialize *****************
 10652 ;; Defined at:
 10653 ;;		line 62 in file "mcc_generated_files/adc.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0
 10668 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10669 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10670 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10671 ;;Total ram usage:        0 bytes
 10672 ;; Hardware stack levels used: 1
 10673 ;; Hardware stack levels required when called: 4
 10674 ;; This function calls:
 10675 ;;		Nothing
 10676 ;; This function is called by:
 10677 ;;		_SYSTEM_Initialize
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text57
 10682  00403C                     __ptext57:
 10683                           	callstack 0
 10684  00403C                     _ADC_Initialize:
 10685                           	callstack 25
 10686  00403C                     
 10687                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
 10688  00403C  0E00               	movlw	0
 10689  00403E  6EC1               	movwf	193,c	;volatile
 10690                           
 10691                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
 10692  004040  0E87               	movlw	135
 10693  004042  6EC0               	movwf	192,c	;volatile
 10694                           
 10695                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
 10696  004044  0E00               	movlw	0
 10697  004046  6EC3               	movwf	195,c	;volatile
 10698                           
 10699                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 10700  004048  0E00               	movlw	0
 10701  00404A  6EC4               	movwf	196,c	;volatile
 10702                           
 10703                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
 10704  00404C  0E01               	movlw	1
 10705  00404E  6EC2               	movwf	194,c	;volatile
 10706  004050  0012               	return		;funcret
 10707  004052                     __end_of_ADC_Initialize:
 10708                           	callstack 0
 10709                           
 10710 ;; *************** function _EUSART1_is_tx_ready *****************
 10711 ;; Defined at:
 10712 ;;		line 94 in file "mcc_generated_files/eusart1.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;		None
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  1    wreg      _Bool 
 10719 ;; Registers used:
 10720 ;;		wreg, status,2
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/0
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10726 ;;      Params:         0       0       0       0       0       0       0       0       0
 10727 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10728 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10729 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10730 ;;Total ram usage:        1 bytes
 10731 ;; Hardware stack levels used: 1
 10732 ;; Hardware stack levels required when called: 4
 10733 ;; This function calls:
 10734 ;;		Nothing
 10735 ;; This function is called by:
 10736 ;;		_main
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           	psect	text58
 10741  003EEA                     __ptext58:
 10742                           	callstack 0
 10743  003EEA                     _EUSART1_is_tx_ready:
 10744                           	callstack 26
 10745  003EEA                     
 10746                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
 10747  003EEA  0E00               	movlw	0
 10748  003EEC  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
 10749  003EEE  A89E               	btfss	158,4,c	;volatile
 10750  003EF0  EF7C  F01F         	goto	u8091
 10751  003EF4  EF7E  F01F         	goto	u8090
 10752  003EF8                     u8091:
 10753  003EF8  EF87  F01F         	goto	l47
 10754  003EFC                     u8090:
 10755  003EFC  AAAC               	btfss	172,5,c	;volatile
 10756  003EFE  EF83  F01F         	goto	u8101
 10757  003F02  EF85  F01F         	goto	u8100
 10758  003F06                     u8101:
 10759  003F06  EF87  F01F         	goto	l47
 10760  003F0A                     u8100:
 10761  003F0A  0E01               	movlw	1
 10762  003F0C  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
 10763  003F0E                     l47:
 10764  003F0E  5005               	movf	_EUSART1_is_tx_ready$282^0,w,c
 10765  003F10  0012               	return		;funcret
 10766  003F12                     __end_of_EUSART1_is_tx_ready:
 10767                           	callstack 0
 10768                           
 10769 ;; *************** function _EUSART1_Write_string *****************
 10770 ;; Defined at:
 10771 ;;		line 141 in file "mcc_generated_files/eusart1.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;  data            2    5[COMRAM] PTR const unsigned char 
 10774 ;;		 -> valor_string(14), 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10786 ;;      Params:         2       0       0       0       0       0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10789 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10790 ;;Total ram usage:        2 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; Hardware stack levels required when called: 5
 10793 ;; This function calls:
 10794 ;;		_EUSART1_Write
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text59
 10801  003E62                     __ptext59:
 10802                           	callstack 0
 10803  003E62                     _EUSART1_Write_string:
 10804                           	callstack 25
 10805  003E62                     
 10806                           ;mcc_generated_files/eusart1.c: 141: void EUSART1_Write_string(const char* data);mcc_gen
      +                          erated_files/eusart1.c: 142: {;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
 10807  003E62  EF3C  F01F         	goto	l6607
 10808  003E66                     l6603:
 10809                           
 10810                           ;mcc_generated_files/eusart1.c: 144:     {;mcc_generated_files/eusart1.c: 145:         E
      +                          USART1_Write(*data++);
 10811  003E66  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
 10812  003E6A  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
 10813  003E6E  50DF               	movf	indf2,w,c
 10814  003E70  EC29  F020         	call	_EUSART1_Write
 10815  003E74  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
 10816  003E76  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
 10817  003E78                     l6607:
 10818                           
 10819                           ;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
 10820  003E78  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
 10821  003E7C  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
 10822  003E80  50DF               	movf	indf2,w,c
 10823  003E82  A4D8               	btfss	status,2,c
 10824  003E84  EF46  F01F         	goto	u8111
 10825  003E88  EF48  F01F         	goto	u8110
 10826  003E8C                     u8111:
 10827  003E8C  EF33  F01F         	goto	l6603
 10828  003E90                     u8110:
 10829  003E90  0012               	return		;funcret
 10830  003E92                     __end_of_EUSART1_Write_string:
 10831                           	callstack 0
 10832                           
 10833 ;; *************** function _EUSART1_Write *****************
 10834 ;; Defined at:
 10835 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  txData          1    wreg     unsigned char 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  txData          1    4[COMRAM] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  1    wreg      void 
 10842 ;; Registers used:
 10843 ;;		wreg
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10849 ;;      Params:         0       0       0       0       0       0       0       0       0
 10850 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10851 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10852 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10853 ;;Total ram usage:        1 bytes
 10854 ;; Hardware stack levels used: 1
 10855 ;; Hardware stack levels required when called: 4
 10856 ;; This function calls:
 10857 ;;		Nothing
 10858 ;; This function is called by:
 10859 ;;		_EUSART1_Write_string
 10860 ;;		_putch
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text60
 10865  004052                     __ptext60:
 10866                           	callstack 0
 10867  004052                     _EUSART1_Write:
 10868                           	callstack 21
 10869                           
 10870                           ;incstack = 0
 10871                           ;EUSART1_Write@txData stored from wreg
 10872  004052  6E05               	movwf	EUSART1_Write@txData^0,c
 10873  004054                     l67:
 10874                           
 10875                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 10876  004054  A89E               	btfss	158,4,c	;volatile
 10877  004056  EF2F  F020         	goto	u5631
 10878  00405A  EF31  F020         	goto	u5630
 10879  00405E                     u5631:
 10880  00405E  EF2A  F020         	goto	l67
 10881  004062                     u5630:
 10882  004062                     
 10883                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 10884  004062  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 10885  004066  0012               	return		;funcret
 10886  004068                     __end_of_EUSART1_Write:
 10887                           	callstack 0
 10888                           
 10889 ;; *************** function _INTERRUPT_InterruptManager *****************
 10890 ;; Defined at:
 10891 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1    wreg      void 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10907 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10908 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10909 ;;Total ram usage:        2 bytes
 10910 ;; Hardware stack levels used: 1
 10911 ;; Hardware stack levels required when called: 3
 10912 ;; This function calls:
 10913 ;;		_TMR1_ISR
 10914 ;; This function is called by:
 10915 ;;		Interrupt level 2
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	intcode
 10920  000008                     __pintcode:
 10921                           	callstack 0
 10922  000008                     _INTERRUPT_InterruptManager:
 10923                           	callstack 18
 10924                           
 10925                           ;incstack = 0
 10926  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10927  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
 10928  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10929  000012                     
 10930                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 10931  000012  ACF2               	btfss	242,6,c	;volatile
 10932  000014  EF0E  F000         	goto	i2u560_41
 10933  000018  EF10  F000         	goto	i2u560_40
 10934  00001C                     i2u560_41:
 10935  00001C  EF20  F000         	goto	i2l427
 10936  000020                     i2u560_40:
 10937  000020                     
 10938                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 10939  000020  A09D               	btfss	157,0,c	;volatile
 10940  000022  EF15  F000         	goto	i2u561_41
 10941  000026  EF17  F000         	goto	i2u561_40
 10942  00002A                     i2u561_41:
 10943  00002A  EF20  F000         	goto	i2l427
 10944  00002E                     i2u561_40:
 10945  00002E  A09E               	btfss	158,0,c	;volatile
 10946  000030  EF1C  F000         	goto	i2u562_41
 10947  000034  EF1E  F000         	goto	i2u562_40
 10948  000038                     i2u562_41:
 10949  000038  EF20  F000         	goto	i2l427
 10950  00003C                     i2u562_40:
 10951  00003C                     
 10952                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
 10953  00003C  ECA5  F01E         	call	_TMR1_ISR	;wreg free
 10954  000040                     i2l427:
 10955  000040  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10956  000044  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10957  000048  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10958  00004A  0011               	retfie		f
 10959  00004C                     __end_of_INTERRUPT_InterruptManager:
 10960                           	callstack 0
 10961                           
 10962 ;; *************** function _TMR1_ISR *****************
 10963 ;; Defined at:
 10964 ;;		line 160 in file "mcc_generated_files/tmr1.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;		None
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10981 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10982 ;;Total ram usage:        0 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; Hardware stack levels required when called: 2
 10985 ;; This function calls:
 10986 ;;		_TMR1_CallBack
 10987 ;;		_TMR1_WriteTimer
 10988 ;; This function is called by:
 10989 ;;		_INTERRUPT_InterruptManager
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           	psect	text62
 10994  003D4A                     __ptext62:
 10995                           	callstack 0
 10996  003D4A                     _TMR1_ISR:
 10997                           	callstack 18
 10998  003D4A                     
 10999                           ;mcc_generated_files/tmr1.c: 162:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 165:     PIR1bits.TMR1IF = 0;
 11000  003D4A  909E               	bcf	158,0,c	;volatile
 11001  003D4C                     
 11002                           ;mcc_generated_files/tmr1.c: 166:     TMR1_WriteTimer(timer1ReloadVal);
 11003  003D4C  C0F2  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 11004  003D50  C0F3  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 11005  003D54  EC89  F01F         	call	_TMR1_WriteTimer	;wreg free
 11006  003D58                     
 11007                           ;mcc_generated_files/tmr1.c: 169:     if (++CountCallBack >= 1000)
 11008  003D58  0100               	movlb	0	; () banked
 11009  003D5A  4BEE               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
 11010  003D5C  2BEF               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 11011  003D5E  0EE8               	movlw	232
 11012  003D60  5DEE               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
 11013  003D62  0E03               	movlw	3
 11014  003D64  59EF               	subwfb	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 11015  003D66  A0D8               	btfss	status,0,c
 11016  003D68  EFB8  F01E         	goto	i2u553_41
 11017  003D6C  EFBA  F01E         	goto	i2u553_40
 11018  003D70                     i2u553_41:
 11019  003D70  EFC1  F01E         	goto	i2l489
 11020  003D74                     i2u553_40:
 11021  003D74                     
 11022                           ; BSR set to: 0
 11023                           ;mcc_generated_files/tmr1.c: 170:     {;mcc_generated_files/tmr1.c: 172:         TMR1_Ca
      +                          llBack();
 11024  003D74  EC94  F01D         	call	_TMR1_CallBack	;wreg free
 11025  003D78                     
 11026                           ;mcc_generated_files/tmr1.c: 175:         CountCallBack = 0;
 11027  003D78  0E00               	movlw	0
 11028  003D7A  0100               	movlb	0	; () banked
 11029  003D7C  6FEF               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
 11030  003D7E  0E00               	movlw	0
 11031  003D80  6FEE               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
 11032  003D82                     i2l489:
 11033                           
 11034                           ; BSR set to: 0
 11035  003D82  0012               	return		;funcret
 11036  003D84                     __end_of_TMR1_ISR:
 11037                           	callstack 0
 11038                           
 11039 ;; *************** function _TMR1_WriteTimer *****************
 11040 ;; Defined at:
 11041 ;;		line 123 in file "mcc_generated_files/tmr1.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;  timerVal        2    0[COMRAM] unsigned short 
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11055 ;;      Params:         2       0       0       0       0       0       0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11058 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11059 ;;Total ram usage:        2 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_TMR1_ISR
 11065 ;;		_TMR1_Reload
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text63
 11070  003F12                     __ptext63:
 11071                           	callstack 0
 11072  003F12                     _TMR1_WriteTimer:
 11073                           	callstack 19
 11074  003F12                     
 11075                           ;mcc_generated_files/tmr1.c: 123: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 124: {;mcc_generated_files/tmr1.c: 125:     if (T1CONbits.T1SYNC == 1)
 11076  003F12  A4CD               	btfss	205,2,c	;volatile
 11077  003F14  EF8E  F01F         	goto	i2u517_41
 11078  003F18  EF90  F01F         	goto	i2u517_40
 11079  003F1C                     i2u517_41:
 11080  003F1C  EF98  F01F         	goto	i2l4749
 11081  003F20                     i2u517_40:
 11082  003F20                     
 11083                           ;mcc_generated_files/tmr1.c: 126:     {;mcc_generated_files/tmr1.c: 128:         T1CONbi
      +                          ts.TMR1ON = 0;
 11084  003F20  90CD               	bcf	205,0,c	;volatile
 11085  003F22                     
 11086                           ;mcc_generated_files/tmr1.c: 131:         TMR1H = (uint8_t)(timerVal >> 8);
 11087  003F22  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 11088  003F24  6ECF               	movwf	207,c	;volatile
 11089  003F26                     
 11090                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
 11091  003F26  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11092  003F2A                     
 11093                           ;mcc_generated_files/tmr1.c: 135:         T1CONbits.TMR1ON =1;
 11094  003F2A  80CD               	bsf	205,0,c	;volatile
 11095                           
 11096                           ;mcc_generated_files/tmr1.c: 136:     }
 11097  003F2C  EF9C  F01F         	goto	i2l474
 11098  003F30                     i2l4749:
 11099                           
 11100                           ;mcc_generated_files/tmr1.c: 138:     {;mcc_generated_files/tmr1.c: 140:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 11101  003F30  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 11102  003F32  6ECF               	movwf	207,c	;volatile
 11103  003F34                     
 11104                           ;mcc_generated_files/tmr1.c: 141:         TMR1L = (uint8_t)timerVal;
 11105  003F34  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11106  003F38                     i2l474:
 11107  003F38  0012               	return		;funcret
 11108  003F3A                     __end_of_TMR1_WriteTimer:
 11109                           	callstack 0
 11110                           
 11111 ;; *************** function _TMR1_CallBack *****************
 11112 ;; Defined at:
 11113 ;;		line 179 in file "mcc_generated_files/tmr1.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;		None
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11127 ;;      Params:         0       0       0       0       0       0       0       0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11130 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11131 ;;Total ram usage:        0 bytes
 11132 ;; Hardware stack levels used: 1
 11133 ;; Hardware stack levels required when called: 1
 11134 ;; This function calls:
 11135 ;;		Absolute function
 11136 ;;		_TMR1_DefaultInterruptHandler
 11137 ;; This function is called by:
 11138 ;;		_TMR1_ISR
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           	psect	text64
 11143  003B28                     __ptext64:
 11144                           	callstack 0
 11145  003B28                     _TMR1_CallBack:
 11146                           	callstack 18
 11147  003B28                     
 11148                           ;mcc_generated_files/tmr1.c: 182:     conteo = conteo + 1;
 11149  003B28  0E01               	movlw	1
 11150  003B2A  0101               	movlb	1	; () banked
 11151  003B2C  2510               	addwf	_conteo& (0+255),w,b
 11152  003B2E  6F10               	movwf	_conteo& (0+255),b
 11153  003B30  0E00               	movlw	0
 11154  003B32  2111               	addwfc	(_conteo+1)& (0+255),w,b
 11155  003B34  6F11               	movwf	(_conteo+1)& (0+255),b
 11156  003B36  0E00               	movlw	0
 11157  003B38  2112               	addwfc	(_conteo+2)& (0+255),w,b
 11158  003B3A  6F12               	movwf	(_conteo+2)& (0+255),b
 11159  003B3C  0E00               	movlw	0
 11160  003B3E  2113               	addwfc	(_conteo+3)& (0+255),w,b
 11161  003B40  6F13               	movwf	(_conteo+3)& (0+255),b
 11162                           
 11163                           ;mcc_generated_files/tmr1.c: 183:     if(TMR1_InterruptHandler)
 11164  003B42  0100               	movlb	0	; () banked
 11165  003B44  51F0               	movf	_TMR1_InterruptHandler& (0+255),w,b
 11166  003B46  11F1               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 11167  003B48  B4D8               	btfsc	status,2,c
 11168  003B4A  EFA9  F01D         	goto	i2u518_41
 11169  003B4E  EFAB  F01D         	goto	i2u518_40
 11170  003B52                     i2u518_41:
 11171  003B52  EFB8  F01D         	goto	i2l493
 11172  003B56                     i2u518_40:
 11173  003B56                     
 11174                           ; BSR set to: 0
 11175                           ;mcc_generated_files/tmr1.c: 184:     {;mcc_generated_files/tmr1.c: 185:         TMR1_In
      +                          terruptHandler();
 11176  003B56  D802               	call	i2u519_48
 11177  003B58  EFB8  F01D         	goto	i2u519_49
 11178  003B5C                     i2u519_48:
 11179  003B5C  0005               	push	
 11180  003B5E  6EFA               	movwf	pclath,c
 11181  003B60  51F0               	movf	_TMR1_InterruptHandler& (0+255),w,b
 11182  003B62  6EFD               	movwf	tosl,c
 11183  003B64  51F1               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 11184  003B66  6EFE               	movwf	tosh,c
 11185  003B68  50F8               	movf	tblptru,w,c
 11186  003B6A  6EFF               	movwf	tosu,c
 11187  003B6C  50FA               	movf	pclath,w,c
 11188  003B6E  0012               	return		;indir
 11189  003B70                     i2u519_49:
 11190  003B70                     i2l493:
 11191  003B70  0012               	return		;funcret
 11192  003B72                     __end_of_TMR1_CallBack:
 11193                           	callstack 0
 11194                           
 11195 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11196 ;; Defined at:
 11197 ;;		line 193 in file "mcc_generated_files/tmr1.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;		None
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;		None
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		None
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11211 ;;      Params:         0       0       0       0       0       0       0       0       0
 11212 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11213 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11214 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11215 ;;Total ram usage:        0 bytes
 11216 ;; Hardware stack levels used: 1
 11217 ;; This function calls:
 11218 ;;		Nothing
 11219 ;; This function is called by:
 11220 ;;		_TMR1_Initialize
 11221 ;;		_TMR1_CallBack
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text65
 11226  0040D4                     __ptext65:
 11227                           	callstack 0
 11228  0040D4                     _TMR1_DefaultInterruptHandler:
 11229                           	callstack 18
 11230  0040D4  0012               	return		;funcret
 11231  0040D6                     __end_of_TMR1_DefaultInterruptHandler:
 11232                           	callstack 0
 11233                           
 11234                           	psect	text66
 11235  000000                     __ptext66:
 11236                           	callstack 0
 11237  000000                     
 11238                           	psect	rparam
 11239  0000                     
 11240                           	psect	temp
 11241  00005B                     btemp:
 11242                           	callstack 0
 11243  00005B                     	ds	1
 11244  0000                     int$flags	set	btemp
 11245  0000                     wtemp8	set	btemp+1
 11246  0000                     ttemp5	set	btemp+1
 11247  0000                     ttemp6	set	btemp+4
 11248  0000                     ttemp7	set	btemp+8
 11249                           
 11250                           	psect	idloc
 11251                           
 11252                           ;Config register IDLOC0 @ 0x200000
 11253                           ;	unspecified, using default values
 11254  200000                     	org	2097152
 11255  200000  FF                 	db	255
 11256                           
 11257                           ;Config register IDLOC1 @ 0x200001
 11258                           ;	unspecified, using default values
 11259  200001                     	org	2097153
 11260  200001  FF                 	db	255
 11261                           
 11262                           ;Config register IDLOC2 @ 0x200002
 11263                           ;	unspecified, using default values
 11264  200002                     	org	2097154
 11265  200002  FF                 	db	255
 11266                           
 11267                           ;Config register IDLOC3 @ 0x200003
 11268                           ;	unspecified, using default values
 11269  200003                     	org	2097155
 11270  200003  FF                 	db	255
 11271                           
 11272                           ;Config register IDLOC4 @ 0x200004
 11273                           ;	unspecified, using default values
 11274  200004                     	org	2097156
 11275  200004  FF                 	db	255
 11276                           
 11277                           ;Config register IDLOC5 @ 0x200005
 11278                           ;	unspecified, using default values
 11279  200005                     	org	2097157
 11280  200005  FF                 	db	255
 11281                           
 11282                           ;Config register IDLOC6 @ 0x200006
 11283                           ;	unspecified, using default values
 11284  200006                     	org	2097158
 11285  200006  FF                 	db	255
 11286                           
 11287                           ;Config register IDLOC7 @ 0x200007
 11288                           ;	unspecified, using default values
 11289  200007                     	org	2097159
 11290  200007  FF                 	db	255
 11291                           
 11292                           	psect	config
 11293                           
 11294                           ;Config register CONFIG1L @ 0x300000
 11295                           ;	PLL Selection
 11296                           ;	PLLSEL = PLL3X, 3x clock multiplier
 11297                           ;	PLL Enable Configuration bit
 11298                           ;	CFGPLLEN = ON, PLL Enabled
 11299                           ;	CPU System Clock Postscaler
 11300                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 11301                           ;	Low Speed USB mode with 48 MHz system clock
 11302                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
 11303  300000                     	org	3145728
 11304  300000  23                 	db	35
 11305                           
 11306                           ;Config register CONFIG1H @ 0x300001
 11307                           ;	Oscillator Selection
 11308                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
 11309                           ;	Primary Oscillator Shutdown
 11310                           ;	PCLKEN = ON, Primary oscillator enabled
 11311                           ;	Fail-Safe Clock Monitor
 11312                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11313                           ;	Internal/External Oscillator Switchover
 11314                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11315  300001                     	org	3145729
 11316  300001  22                 	db	34
 11317                           
 11318                           ;Config register CONFIG2L @ 0x300002
 11319                           ;	Power-up Timer Enable
 11320                           ;	nPWRTEN = ON, Power up timer enabled
 11321                           ;	Brown-out Reset Enable
 11322                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 11323                           ;	Brown-out Reset Voltage
 11324                           ;	BORV = 190, BOR set to 1.9V nominal
 11325                           ;	Low-Power Brown-out Reset
 11326                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 11327  300002                     	org	3145730
 11328  300002  5E                 	db	94
 11329                           
 11330                           ;Config register CONFIG2H @ 0x300003
 11331                           ;	Watchdog Timer Enable bits
 11332                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 11333                           ;	Watchdog Timer Postscaler
 11334                           ;	WDTPS = 32768, 1:32768
 11335  300003                     	org	3145731
 11336  300003  3C                 	db	60
 11337                           
 11338                           ; Padding undefined space
 11339  300004                     	org	3145732
 11340  300004  FF                 	db	255
 11341                           
 11342                           ;Config register CONFIG3H @ 0x300005
 11343                           ;	CCP2 MUX bit
 11344                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 11345                           ;	PORTB A/D Enable bit
 11346                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 11347                           ;	Timer3 Clock Input MUX bit
 11348                           ;	T3CMX = RC0, T3CKI function is on RC0
 11349                           ;	SDO Output MUX bit
 11350                           ;	SDOMX = RB3, SDO function is on RB3
 11351                           ;	Master Clear Reset Pin Enable
 11352                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 11353  300005                     	org	3145733
 11354  300005  D1                 	db	209
 11355                           
 11356                           ;Config register CONFIG4L @ 0x300006
 11357                           ;	Stack Full/Underflow Reset
 11358                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11359                           ;	Single-Supply ICSP Enable bit
 11360                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 11361                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 11362                           ;	ICPRT = OFF, ICPORT disabled
 11363                           ;	Extended Instruction Set Enable bit
 11364                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 11365                           ;	Background Debugger Enable bit
 11366                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 11367  300006                     	org	3145734
 11368  300006  85                 	db	133
 11369                           
 11370                           ; Padding undefined space
 11371  300007                     	org	3145735
 11372  300007  FF                 	db	255
 11373                           
 11374                           ;Config register CONFIG5L @ 0x300008
 11375                           ;	Block 0 Code Protect
 11376                           ;	CP0 = OFF, Block 0 is not code-protected
 11377                           ;	Block 1 Code Protect
 11378                           ;	CP1 = OFF, Block 1 is not code-protected
 11379                           ;	Block 2 Code Protect
 11380                           ;	CP2 = OFF, Block 2 is not code-protected
 11381                           ;	Block 3 Code Protect
 11382                           ;	CP3 = OFF, Block 3 is not code-protected
 11383  300008                     	org	3145736
 11384  300008  0F                 	db	15
 11385                           
 11386                           ;Config register CONFIG5H @ 0x300009
 11387                           ;	Boot Block Code Protect
 11388                           ;	CPB = OFF, Boot block is not code-protected
 11389                           ;	Data EEPROM Code Protect
 11390                           ;	CPD = OFF, Data EEPROM is not code-protected
 11391  300009                     	org	3145737
 11392  300009  C0                 	db	192
 11393                           
 11394                           ;Config register CONFIG6L @ 0x30000A
 11395                           ;	Block 0 Write Protect
 11396                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 11397                           ;	Block 1 Write Protect
 11398                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 11399                           ;	Block 2 Write Protect
 11400                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 11401                           ;	Block 3 Write Protect
 11402                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 11403  30000A                     	org	3145738
 11404  30000A  0F                 	db	15
 11405                           
 11406                           ;Config register CONFIG6H @ 0x30000B
 11407                           ;	Configuration Registers Write Protect
 11408                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 11409                           ;	Boot Block Write Protect
 11410                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 11411                           ;	Data EEPROM Write Protect
 11412                           ;	WRTD = OFF, Data EEPROM is not write-protected
 11413  30000B                     	org	3145739
 11414  30000B  E0                 	db	224
 11415                           
 11416                           ;Config register CONFIG7L @ 0x30000C
 11417                           ;	Block 0 Table Read Protect
 11418                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 11419                           ;	Block 1 Table Read Protect
 11420                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 11421                           ;	Block 2 Table Read Protect
 11422                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 11423                           ;	Block 3 Table Read Protect
 11424                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 11425  30000C                     	org	3145740
 11426  30000C  0F                 	db	15
 11427                           
 11428                           ;Config register CONFIG7H @ 0x30000D
 11429                           ;	Boot Block Table Read Protect
 11430                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 11431  30000D                     	org	3145741
 11432  30000D  40                 	db	64
 11433                           tosu	equ	0xFFF
 11434                           tosh	equ	0xFFE
 11435                           tosl	equ	0xFFD
 11436                           stkptr	equ	0xFFC
 11437                           pclatu	equ	0xFFB
 11438                           pclath	equ	0xFFA
 11439                           pcl	equ	0xFF9
 11440                           tblptru	equ	0xFF8
 11441                           tblptrh	equ	0xFF7
 11442                           tblptrl	equ	0xFF6
 11443                           tablat	equ	0xFF5
 11444                           prodh	equ	0xFF4
 11445                           prodl	equ	0xFF3
 11446                           indf0	equ	0xFEF
 11447                           postinc0	equ	0xFEE
 11448                           postdec0	equ	0xFED
 11449                           preinc0	equ	0xFEC
 11450                           plusw0	equ	0xFEB
 11451                           fsr0h	equ	0xFEA
 11452                           fsr0l	equ	0xFE9
 11453                           wreg	equ	0xFE8
 11454                           indf1	equ	0xFE7
 11455                           postinc1	equ	0xFE6
 11456                           postdec1	equ	0xFE5
 11457                           preinc1	equ	0xFE4
 11458                           plusw1	equ	0xFE3
 11459                           fsr1h	equ	0xFE2
 11460                           fsr1l	equ	0xFE1
 11461                           bsr	equ	0xFE0
 11462                           indf2	equ	0xFDF
 11463                           postinc2	equ	0xFDE
 11464                           postdec2	equ	0xFDD
 11465                           preinc2	equ	0xFDC
 11466                           plusw2	equ	0xFDB
 11467                           fsr2h	equ	0xFDA
 11468                           fsr2l	equ	0xFD9
 11469                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    14
    Data        12
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    126     160
    BANK1           256      4     146
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1840_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(2) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 


Critical Paths under _main in COMRAM

    _trip_protec_current->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _floorf->___fldiv
    _atoi->_isspace
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write
    _get_corriente_AC->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flsub
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   75609
                                            124 BANK0      2     2      0
                                              0 BANK1      4     4      0
               _EUSART1_Write_string
                _EUSART1_is_tx_ready
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                   _get_corriente_AC
                    _nrF2401_init_RX
                   _nrf2401_haydatos
                     _nrf2401_recibe
                         _spi_s_init
                            _sprintf
                _trip_protec_current
 ---------------------------------------------------------------------------------
 (1) _trip_protec_current                                  4     4      0    2786
                                             55 COMRAM     4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   40834
                                            108 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   40330
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   39803
                                             78 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   32932
                                             10 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4081
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1599
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1099
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             76 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf2401_recibe                                       1     1      0     250
                                              6 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (1) _nrf2401_haydatos                                     0     0      0     284
                         _get_Status
 ---------------------------------------------------------------------------------
 (2) _get_Status                                           0     0      0     284
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (3) _nrf2401_read                                         2     2      0     284
                                              6 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_read                                           2     2      0     111
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_RX                                      1     1      0    4907
                                             12 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              6     3      3     986
                                              6 COMRAM     6     3      3
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    2013
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1877
                                              6 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0     136
                                              6 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_write                                          2     2      0     105
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_corriente_AC                                    11     7      4   18904
                                             76 COMRAM     5     1      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4547
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3650
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3773
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2786
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                             51 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                     _ADC_Initialize
                    _CCP2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_tx_ready                                  1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     186
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     240
                                              2 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _EUSART1_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   ___fladd
   ___fldiv
     ___fladd (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
   _get_corriente_AC
     _ADC_GetConversion
     ___fladd
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _nrf2401_haydatos
     _get_Status
       _nrf2401_read
         _spi_s_read
         _spi_s_write
   _nrf2401_recibe
     _spi_s_read
     _spi_s_write
   _spi_s_init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
   _trip_protec_current
     ___flge

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      92       8       57.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18C       6        0.0%
DATA                 0      0     18C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 08 19:39:14 2022

                                             _I 0057                                    ___fldiv@aexp 004C  
                                  ___fldiv@bexp 004B                                               _i 00FA  
                                             _j 00F8                                               _k 00F6  
                                             _l 00F4                                    ___fldiv@sign 0044  
                                            l43 3D0E                                              l70 4066  
                                            l47 3F0E                                              l48 3F10  
                                            l82 409E                                              l67 4054  
                                            l76 3E90                                              l94 40BC  
                                            l97 40B2                                    ___awdiv@sign 000A  
                           ___wmul@multiplicand 0007                                             l100 40C6  
                                           l130 3F70                                             l133 3F7E  
                                           l206 3D28                                             l127 3FBA  
                                           l160 3EBE                                             l304 40CE  
                                           l209 3D48                                             l403 30EE  
                                           l172 4088                                             l420 40D2  
                                           l317 3F9C                                             l253 403A  
                                           l262 3B7C                                             l502 3F5E  
                                           l191 4050                                             l264 3B90  
                                           l272 407A                                             l280 3C44  
                                           l266 3BB8                                             l371 2C4C  
                                           l259 3BFE                                             l275 3FD6  
                                           l460 3EE8                                             l269 3FF2  
                                           l279 3C3C                                             l295 400C  
                                           l383 2750                                             l384 2750  
                                           l289 4024                                             l393 2856  
                                           l298 3916                                             l394 2856  
                                           l378 26B4                                             l379 26B4  
                                           l396 285A                                             l388 27EC  
                                           l733 3740                                             l389 27EC  
                                           l496 40A8                                             l761 389A  
                                           l746 37F0                                             l772 3318  
                                           l767 32D2                                             l776 3DF2  
                                           l799 3214                                 _timer1ReloadVal 00F2  
                                           _pad 35B8                                    ___awmod@sign 000A  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                    ___flmul@aexp 0020  
                                  ___flmul@bexp 0025                                    ___flmul@sign 001F  
                                  ___flmul@temp 002A                                    ___flmul@prod 0026  
                                  ___fltol@exp1 000E                                 _nrF2401_init_RX 389C  
                                          l1030 1676                                            l1031 1664  
                                          l1120 21DE                                            l1032 162A  
                                          l1123 2070                                            l1116 1E7A  
                                          l1133 21A0                                            l1125 20E8  
                                          l1221 35FE                                            l1126 20D6  
                                          l1047 1790                                            l1039 1946  
                                          l1056 1860                                            l1072 3C8A  
                                          l1160 2E00                                            l1224 3640  
                                          l1057 184E                                            l1401 29B4  
                                          l1226 367C                                            l1171 2D98  
                                          l1084 2578                                            l1164 2D3C  
                                          l1244 1486                                            l1180 3A86  
                                          l1157 2CA4                                            l1086 23D8  
                                          l1422 3DBA                                            l1262 0C1C  
                                          l1350 3978                                            l1095 241E  
                                          l1343 1CFA                                            l1408 3E2A  
                                          l1416 3AD8                                            l1360 3416  
                                          l1336 1DB4                                            l1097 2496  
                                          l1089 239C                                            l1098 2484  
                                          l1290 105C                                            l1451 3A34  
                                          l1437 35B6                                            l1445 3CCE  
                                          l1461 34EC                                            l1349 3970  
                                          l1471 39D0                                            l1392 2F90  
                                          l1457 3E60                                            l1476 39D8  
                                          l1389 2F88                                            l1398 2A70  
                                          l5201 15A0                                            l6001 0910  
                                          l5123 4054                                            l5211 15B4  
                                          l5203 15A4                                            l5131 3500  
                                          l6011 098C                                            l5125 4062  
                                          l5301 1810                                            l5213 15B8  
                                          l5205 15A8                                            l5221 15C8  
                                          l5133 3512                                            l6101 0D32  
                                          l6013 0996                                            l6005 0946  
                                          l5303 181E                                            l5231 1638  
                                          l5223 15CC                                            l5215 15BC  
                                          l5207 15AC                                            l5151 14B4  
                                          l5143 1488                                            l5127 4098  
                                          l5135 351C                                            l6111 0DCA  
                                          l6103 0D3A                                            l6023 0A1A  
                                          l6007 0958                                            l5401 2272  
                                          l5313 1870                                            l5321 18C6  
                                          l5305 1822                                            l5241 1662  
                                          l5233 1644                                            l5225 15F6  
                                          l5217 15C0                                            l5209 15B0  
                                          l5161 14EE                                            l5153 14C4  
                                          l5145 1494                                            l5137 353A  
                                          l5129 34EE                                            l6201 1270  
                                          l6121 0EAE                                            l6113 0E22  
                                          l6105 0D42                                            l6041 0AB4  
                                          l6025 0A2C                                            l6009 0974  
                                          l6017 09BE                                            l5411 22AC  
                                          l5403 2282                                            l5331 1918  
                                          l5323 18D6                                            l5315 187C  
                                          l5307 1830                                            l5251 16B8  
                                          l5243 1684                                            l5235 1648  
                                          l5227 1612                                            l5219 15C4  
                                          l5171 151C                                            l5163 14F4  
                                          l5155 14D4                                            l5147 14A2  
                                          l5139 3570                                            l6211 12C0  
                                          l6203 128C                                            l6131 0F48  
                                          l6123 0EE0                                            l6115 0E56  
                                          l6107 0D52                                            l6051 0B84  
                                          l6043 0AE8                                            l6027 0A48  
                                          l6019 09E4                                            l6035 0A64  
                                          l5501 256C                                            l5413 22C2  
                                          l5405 2292                                            l5341 1936  
                                          l5333 191E                                            l5325 18E6  
                                          l5317 188A                                            l5309 1846  
                                          l5261 16F2                                            l5253 16C6  
                                          l5245 1694                                            l5237 1656  
                                          l5229 1622                                            l5181 1550  
                                          l5173 151E                                            l5165 1506  
                                          l5157 14D6                                            l5149 14A4  
                                          l6301 2ED4                                            l6221 1302  
                                          l6213 12D0                                            l6205 129E  
                                          l6141 1020                                            l6133 0F7C  
                                          l6125 0EF6                                            l6109 0D66  
                                          l6117 0E5C                                            l6061 0BEE  
                                          l6045 0AEE                                            l6053 0BB6  
                                          l6037 0A7E                                            ?_pad 0017  
                                          l5503 256E                                            l5431 2316  
                                          l5415 22D2                                            l5423 22F2  
                                          l5407 2294                                            l5511 1DB6  
                                          l5335 1920                                            l5327 1906  
                                          l5319 18C4                                            l5271 175E  
                                          l5263 16F4                                            l5255 16D4  
                                          l5239 1658                                            l5191 158C  
                                          l5175 152E                                            l5183 1558  
                                          l5167 1508                                            l5159 14DE  
                                          l6311 2F5A                                            l5351 3CAE  
                                          l6231 1332                                            l6223 1310  
                                          l6215 12E2                                            l6207 12AC  
                                          l6151 1078                                            l6135 0FD2  
                                          l6143 1024                                            l6127 0F28  
                                          l6119 0E7A                                            l6063 0BF6  
                                          l6055 0BC6                                            l6047 0B48  
                                          l5441 2368                                            l5433 2330  
                                          l5425 2302                                            l5417 22DA  
                                          l5409 229C                                            l5601 208E  
                                          l5521 1DF2                                            l5513 1DC2  
                                          l5337 1926                                            l5329 190A  
                                          l5281 17B6                                            l5273 1760  
                                          l5265 16FE                                            l5257 16E0  
                                          l5249 16A8                                            l5193 1590  
                                          l5185 1568                                            l5177 153E  
                                          l5169 150E                                            l6313 2F6C  
                                          l6305 2F0A                                            l5345 3C8C  
                                          l5353 3E2C                                            l6241 1394  
                                          l6233 1358                                            l6225 1318  
                                          l6217 12EA                                            l6209 12BC  
                                          l6161 111E                                            l6153 10DC  
                                          l6145 1034                                            l6137 0FD8  
                                          l6129 0F38                                            l6081 0CA6  
                                          l6073 0C3A                                            l6065 0C10  
                                          l6057 0BCA                                            l6049 0B7C  
                                          l6321 3442                                            l5451 23C4  
                                          l5443 2378                                            l5435 2340  
                                          l5427 2302                                            l5419 22DE  
                                          l5611 20F8                                            l5603 2092  
                                          l5531 1E24                                            l5523 1E02  
                                          l5515 1DD0                                            l5339 1934  
                                          l5291 17E4                                            l5275 1770  
                                          l5259 16E4                                            l5267 1704  
                                          l5195 1594                                            l5187 157A  
                                          l5179 154E                                            l5347 3C98  
                                          l5355 3E38                                            l5363 3D84  
                                          l6251 13DA                                            l6243 13AE  
                                          l6235 1374                                            l6227 1320  
                                          l6219 12FA                                            l6171 115A  
                                          l6155 10EC                                            l6163 1126  
                                          l6147 1048                                            l6139 100C  
                                          l6091 0CE4                                            l6075 0C4C  
                                          l6083 0CAA                                            l6059 0BDC  
                                          l6067 0C28                                            l6331 3490  
                                          l6411 1B14                                            l6403 1A9E  
                                          l6341 40AA                                            l6501 3D12  
                                          l5461 2404                                            l5453 23C6  
                                          l5445 238C                                            l5437 2350  
                                          l5381 220C                                            l5373 21E0  
                                          l5621 215A                                            l5613 2104  
                                          l5605 20A0                                            l5541 1E64  
                                          l5533 1E32                                            l5525 1E08  
                                          l5517 1DD2                                            l5293 17F2  
                                          l5285 17CA                                            l5269 172A  
                                          l5277 1780                                            l5197 1598  
                                          l5189 1588                                            l6309 2F48  
                                          l5701 376E                                            l5349 3CAA  
                                          l5357 3E3C                                            l6261 142A  
                                          l6253 13EA                                            l6245 13B4  
                                          l6237 137C                                            l6229 132C  
                                          l6181 1186                                            l6173 1160  
                                          l6165 1138                                            l6157 10FE  
                                          l6149 1054                                            l6093 0CE8  
                                          l6085 0CB2                                            l6077 0C68  
                                          l6333 34A2                                            l6325 344E  
                                          l6421 1B8C                                            l6413 1B24  
                                          l6405 1AB0                                            l6343 40BE  
                                          l6503 3D24                                            l5471 2440  
                                          l5463 240E                                            l5455 23D6  
                                          l5447 239A                                            l5439 2360  
                                          l5391 2246                                            l5383 221C  
                                          l5375 21EC                                            l5631 21C2  
                                          l5623 216E                                            l5615 2112  
                                          l5607 20CE                                            l5551 1EAE  
                                          l5543 1E6A                                            l5535 1E34  
                                          l5527 1E18                                            l5519 1DE2  
                                          l5295 17FA                                            l5287 17D4  
                                          l5279 17A6                                            l5199 159C  
                                          l6351 3FEC                                            l6511 3C00  
                                          l5367 3F3A                                            l5711 37A6  
                                          l5703 3776                                            l5359 3E54  
                                          l6271 1466                                            l6263 143C  
                                          l6255 13F0                                            l6247 13C6  
                                          l6239 1382                                            l6175 116C  
                                          l6167 1146                                            l6183 118C  
                                          l6191 11BA                                            l6159 1110  
                                          l6095 0CFA                                            l6087 0CC4  
                                          l6079 0C9E                                            l6335 34CA  
                                          l6327 345C                                            l6319 3418  
                                          l6423 1BBC                                            l6415 1B56  
                                          l6407 1AD2                                            l6601 3E62  
                                          l6505 3D26                                            l5481 24B2  
                                          l5473 244E                                            l5465 241C  
                                          l5457 23E8                                            l5449 23A6  
                                          l5393 224C                                            l5385 222C  
                                          l5377 21FA                                            l5633 21C4  
                                          l5625 2188                                            l5617 213C  
                                          l5561 1EFE                                            l5553 1EBA  
                                          l5545 1E8A                                            l5537 1E44  
                                          l5529 1E1E                                            l5297 17FE  
                                          l5289 17E2                                            l5641 3C46  
                                          l6353 406A                                            l6345 3FDA  
                                          l6521 3C0E                                            l6513 3C02  
                                          l6361 3FBE                                            l5369 3F56  
                                          l6281 2E1A                                            l5721 37E0  
                                          l5713 37BC                                            l5705 3788  
                                          l6265 1448                                            l6257 13F6  
                                          l6249 13D2                                            l6193 1212  
                                          l6185 119E                                            l6177 117C  
                                          l6169 1156                                            l6097 0D08  
                                          l6089 0CD6                                            l6329 3474  
                                          l6433 1C84                                            l6417 1B68  
                                          l6409 1AE2                                            l6603 3E66  
                                          l6339 40B4                                            l6611 3FA2  
                                          l6507 3D36                                            l5491 251E  
                                          l5483 24C0                                            l5475 247C  
                                          l5459 23FE                                            l5467 242E  
                                          l5395 2252                                            l5387 222E  
                                          l5379 21FC                                            l5627 21A4  
                                          l5635 21CA                                            l5619 2140  
                                          l5571 1F40                                            l5563 1F0A  
                                          l5555 1EC4                                            l5547 1E9A  
                                          l5539 1E54                                            l5299 180E  
                                          l5643 3C56                                            l6355 406C  
                                          l6347 3FDC                                            l6531 400E  
                                          l6523 3C2A                                            l6515 3C0A  
                                          l6371 3FCE                                            l6363 3FBE  
                                          l6283 2E1E                                            l5651 3690  
                                          l5723 37E8                                            l5715 37C4  
                                          l5707 3790                                            l5731 3830  
                                          l5811 31F4                                            l6267 1450  
                                          l6195 1246                                            l6187 11B0  
                                          l6179 1180                                            l6099 0D20  
                                          l6435 1C96                                            l6443 1D0E  
                                          l6419 1B7E                                            l6427 1BE8  
                                          l6605 3E74                                            l6621 3FB6  
                                          l6613 3FA6                                            l5493 2538  
                                          l5485 24EA                                            l5469 243C  
                                          l5397 2260                                            l5389 2236  
                                          l5637 21CE                                            l5629 21B4  
                                          l5581 1FA2                                            l5573 1F4C  
                                          l5565 1F16                                            l5557 1EDA  
                                          l6541 2C6E                                            l6701 2BD6  
                                          l6357 4072                                            l6349 3FEA  
                                          l6525 3C2C                                            l6365 3FC0  
                                          l6533 40C8                                            l6293 2E7A  
                                          l6285 2E3A                                            l6277 2E02  
                                          l5661 36B6                                            l5653 3698  
                                          l5717 37CA                                            l5709 3798  
                                          l5733 385E                                            l5813 3204  
                                          l5805 31C8                                            l5821 35DC  
                                          l6269 1460                                            l6197 124E  
                                          l6189 11B4                                            l6461 1DA2  
                                          l6445 1D32                                            l6453 1D62  
                                          l6437 1CCA                                            l6429 1C16  
                                          l6381 197A                                            l6607 3E78  
                                          l6471 3CF0                                            l6375 40A0  
                                          l6615 3FAA                                            l5495 2554  
                                          l5479 24A6                                            l5487 24EE  
                                          l5399 2262                                            l5751 3292  
                                          l5743 3216                                            l5591 2038  
                                          l5583 1FAE                                            l5575 1F5C  
                                          l5567 1F24                                            l5559 1EE6  
                                          l6551 2CE6                                            l6543 2CB4  
                                          l6703 2BF4                                            l6359 4074  
                                          l6527 3C3E                                            l6367 3FC6  
                                          l6623 4026                                            l5903 3DF4  
                                          l5911 3AA0                                            l6295 2E90  
                                          l6287 2E70                                            l6279 2E16  
                                          l5671 36EE                                            l5663 36BE  
                                          l5655 369C                                            l5647 367E  
                                          l5719 37D0                                            l5735 386E  
                                          l5727 37F2                                            l5807 31D4  
                                          l5831 3622                                            l5823 35EA  
                                          l6199 1252                                            l6455 1D70  
                                          l6447 1D40                                            l6391 19CA  
                                          l6383 198C                                            l6711 25BE  
                                          l6473 3CFC                                            l6481 3EBC  
                                          l6617 3FAE                                            l6609 3F9E  
                                          l5497 2558                                            l5489 2508  
                                          l5761 3316                                            l5753 32A0  
                                          l5745 3244                                            l5593 2056  
                                          l5585 1FCA                                            l5577 1F76  
                                          l5569 1F30                                            l6561 2D6E  
                                          l6553 2CF2                                            l6545 2CCA  
                                          l6537 2C50                                            l6369 3FCC  
                                          l5913 3ACE                                            l6297 2E98  
                                          l6289 2E74                                            l5681 371A  
                                          l5673 36F4                                            l5665 36D0  
                                          l5657 36AA                                            l5649 3682  
                                          l5737 3892                                            l5729 3820  
                                          l5809 31E4                                            l5841 333A  
                                          l5833 3650                                            l5825 35F6  
                                          l5817 35B8                                            l6449 1D54  
                                          l6393 19EE                                            l6385 1990  
                                          l6377 1948                                            l6721 2680  
                                          l6713 25F4                                            l6475 3D08  
                                          l6467 3CD0                                            l6483 3F60  
                                          l6491 3ED4                                            l6619 3FB2  
                                          l5499 2566                                            l5755 32B2  
                                          l5747 3254                                            l5595 2060  
                                          l5587 1FF4                                            l5579 1F86  
                                          l6571 2DAC                                            l6563 2D7A  
                                          l6555 2D24                                            l6539 2C60  
                                          l5931 3BD2                                            l6651 3FF6  
                                          l5915 3AD2                                            l5907 3A88  
                                          l6299 2EA0                                            l5675 370A  
                                          l5667 36D8                                            l5683 3720  
                                          l5659 36B2                                            l5691 3742  
                                          l5739 3898                                            l5843 3378  
                                          l5851 33B8                                            l5835 3664  
                                          l5827 360A                                            l5819 35C8  
                                          l6395 1A28                                            l6387 19B4  
                                          l6379 196C                                            l6459 1D7E  
                                          l6731 271C                                            l6723 26AA  
                                          l6715 2606                                            l6707 257A  
                                          l6811 2FA0                                            l6803 2F92  
                                          l6485 407C                                            l6469 3CE4  
                                          l6477 40D0                                            l6493 3ED6  
                                          l5757 32C0                                            l5749 3282  
                                          l5597 206E                                            l5589 202A  
                                          l6573 2DD0                                            l6565 2D88  
                                          l6557 2D26                                            l6549 2CDE  
                                          l6661 389E                                            l5941 3BEC  
                                          l5933 3BE0                                            l5925 3BC6  
                                          l6653 4002                                            l5909 3A8C  
                                          l5685 3730                                            l5677 3712  
                                          l5669 36E0                                            l5693 3746  
                                          l5765 3DBC                                            l5781 3164  
                                          l5773 3110                                            l5853 33CA  
                                          l5845 33A0                                            l5829 361E  
                                          l5861 39DA                                            l6397 1A48  
                                          l6389 19BC                                            l6741 27B8  
                                          l6733 2746                                            l6725 26B2  
                                          l6709 25AC                                            l6717 261C  
                                          l6821 2FCC                                            l6813 2FA4  
                                          l6805 2F96                                            l6591 3EEA  
                                          l6479 3E92                                            l6495 3ED8  
                                          l6487 3EC0                                            l5759 3310  
                                          l5599 2080                                            l6575 2DE0  
                                          l6567 2DA6                                            l6559 2D32  
                                          l6663 38A0                                            l5943 3BFC  
                                          l5935 3BE2                                            l5927 3BCA  
                                          l5919 3BBA                                            l6671 3F80  
                                          l6655 4004                                            l5687 3738  
                                          l5679 3714                                            l5695 3754  
                                          l5767 3DD2                                            l5783 3166  
                                          l5775 3126                                            l5847 33AC  
                                          l5839 331A                                            l5863 39EA  
                                          l5871 39C2                                            l6399 1A56  
                                          l6583 3918                                            l6751 284C  
                                          l6743 27E2                                            l6735 274E  
                                          l6719 264E                                            l6727 26B8  
                                          l6831 3082                                            l6823 2FCE  
                                          l6815 2FA8                                            l6807 2F98  
                                          l6593 3EEE                                            l6497 3EE4  
                                          l6489 3ECC                                            l6577 2DEE  
                                          l6569 2DA8                                            l5961 3B9E  
                                          l5953 3B8A                                            l6665 38F0  
                                          l5937 3BE4                                            l5929 3BCC  
                                          l6673 3F94                                            l6657 400A  
                                          l6649 3FF4                                            l5697 375C  
                                          l5769 3DE2                                            l5785 3176  
                                          l5857 340E                                            l5881 28E8  
                                          l5865 397A                                            l6585 3920  
                                          l6761 3A58                                            l6753 2854  
                                          l6745 27EA                                            l6729 26EA  
                                          l6737 2754                                            l6841 30C2  
                                          l6833 3096                                            l6825 2FE8  
                                          l6817 2FAC                                            l6809 2F9A  
                                          l6595 3EFC                                            l6499 403C  
                                          l6579 2DF0                                            l6691 2B4C  
                                          l6683 2A72                                            l5963 3BA0  
                                          l5955 3B92                                            l5947 3B74  
                                          l6667 3900                                            l5939 3BEA  
                                          l5699 3760                                            l5795 31A0  
                                          l5787 317A                                            l5779 313A  
                                          l5883 28F6                                            l5891 29D8  
                                          l5875 285C                                            l5971 083A  
                                          l6587 392E                                            l6763 3A74  
                                          l6755 3A36                                            l6739 2786  
                                          l6747 27F0                                            l6843 30D2  
                                          l6835 30A2                                            l6827 3004  
                                          l6819 2FB2                                            l6597 3F0A  
                                          l6693 2B7E                                            l6685 2AA0  
                                          l5965 3BA6                                            l5957 3B96  
                                          l6669 3914                                            l5797 31AA  
                                          l5789 3188                                            l5893 2A14  
                                          l5877 287C                                            l5869 39B0  
                                          l5981 088E                                            l5973 084A  
                                          l6589 3954                                            l6757 3A48  
                                          l6749 2822                                            l6845 30D4  
                                          l6837 30A6                                            l6829 305C  
                                          l6695 2B8E                                            l6687 2AAE  
                                          l5967 3BA8                                            l5959 3B98  
                                          l6679 3F9A                                            l5799 31B4  
                                          l5895 2A28                                            l5887 2968  
                                          l5879 28D4                                            l5991 08D4  
                                          l5983 0896                                            l5975 0858  
                                          l6759 3A50                                            l6839 30BA  
                                          l6697 2BC0                                            l6689 2AF4  
                                          l5897 2A50                                            l5889 29A4  
                                          l5993 08DC                                            l5985 08A8  
                                          l5977 0860                                            l5969 0830  
                                          l6699 2BD0                                            l6867 2EBE  
                                          l5899 2A60                                            l5995 08E0  
                                          l5987 08B6                                            l5979 0884  
                                          l5997 08E4                                            l5989 08C8  
                                          l5999 08EA                                            STR_1 080F  
                                          STR_2 081B                                            STR_3 0823  
                                          STR_6 081F                                            STR_7 0827  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u6000 188A  
                                          u6001 1886                                            u6010 18C4  
                                          u6011 18C0                                            u6020 18D6  
                                          u6100 3DB6                                            u6021 18D2  
                                          u6110 21FA                                            u6030 18E6  
                                          u6111 21F6                                            u6031 18E2  
                                          u6200 239A                                            u6120 220C  
                                          u6040 1906                                            u6201 2396  
                                          u6121 2208                                            u6041 1902  
                                          u6210 23C4                                            u6130 221C  
                                          u6050 1918                                            u7010 2964  
                                          u6211 23C0                                            u6131 2218  
                                          u6051 1914                                            u7011 2960  
                                          u6300 24C0                                            u6220 23E8  
                                          u6140 2260                                            u6060 1934  
                                          u7100 3ACE                                            u7020 2988  
                                          u6301 24BC                                            u6221 23E4  
                                          u6141 225C                                            u6061 1930  
                                          u7101 3ACA                                            u7005 290A  
                                          u6310 2508                                            u6230 23FE  
                                          u6150 2272                                            u7110 3BE0  
                                          u7030 29A4                                            u7006 2914  
                                          u6070 3CCE                                            u6311 2504  
                                          u6231 23FA                                            u6151 226E  
                                          u7111 3BDC                                            u7031 29A0  
                                          u7007 2924                                            u6071 3CCA  
                                          u6320 2538                                            u6240 241C  
                                          u6160 2282                                            u6400 1E8A  
                                          u8000 2CCA                                            u7120 3BFC  
                                          u7040 29F8                                            u6080 3E54  
                                          u7200 0940                                            u6321 2534  
                                          u6241 2418                                            u6161 227E  
                                          u6401 1E86                                            u8001 2CC6  
                                          u7121 3BF8                                            u7025 297E  
                                          u6081 3E50                                            u7201 093A  
                                          u6330 2566                                            u6250 243C  
                                          u6170 22C2                                            u6410 1E9A  
                                          u8010 2D20                                            u7130 3B8A  
                                          u7050 2A14                                            u6090 3DB4  
                                          u7210 0942                                            u6331 2562  
                                          u6251 2438                                            u6171 22BE  
                                          u6411 1E96                                            u8011 2D1C  
                                          u7131 3B86                                            u7051 2A10  
                                          u6091 3DAE                                            u8100 3F0A  
                                          u6260 244E                                            u6180 2302  
                                          u6500 215A                                            u6420 2014  
                                          u6340 1DD0                                            u5700 14C4  
                                          u8020 2D6A                                            u7140 3BB8  
                                          u7060 2A50                                            u7300 0BDC  
                                          u7220 0958                                            u8101 3F06  
                                          u6261 244A                                            u6181 22FE  
                                          u6501 2156                                            u6341 1DCC  
                                          u5701 14C0                                            u8021 2D66  
                                          u7141 3BB4                                            u7061 2A4C  
                                          u7045 29EE                                            u7301 0BD8  
                                          u7221 0954                                            u5630 4062  
                                          u8110 3E90                                            u6270 247C  
                                          u6190 2378                                            u6510 2188  
                                          u6430 206E                                            u6350 1DE2  
                                          u5710 1506                                            u8030 2D88  
                                          u7070 3E24                                            u7310 0BEE  
                                          u7230 09E4                                            u7150 0858  
                                          u5631 405E                                            u8111 3E8C  
                                          u6271 2478                                            u6191 2374  
                                          u6511 2184                                            u6431 206A  
                                          u6351 1DDE                                            u5711 1502  
                                          u8031 2D84                                            u7071 3E1E  
                                          u7311 0BEA                                            u7231 09E0  
                                          u7151 0854                                            u6280 2492  
                                          u6520 21C2                                            u6440 208E  
                                          u6360 1DF2                                            u5800 1638  
                                          u5720 151C                                            u8040 2D98  
                                          u8120 3F94                                            u7080 3E26  
                                          u6600 376E                                            u5640 3500  
                                          u7400 0CFA                                            u7320 0C10  
                                          u7240 0A14                                            u7160 08A8  
                                          u8200 26AA                                            u6281 248E  
                                          u6521 21BE                                            u6441 208A  
                                          u6425 200A                                            u6361 1DEE  
                                          u5801 1634                                            u5721 1518  
                                          u8041 2D94                                            u8121 3F90  
                                          u6601 376A                                            u5641 34FC  
                                          u7401 0CF6                                            u7321 0C0C  
                                          u7241 0A0E                                            u7161 08A4  
                                          u8201 26A6                                            u6290 24A6  
                                          u6450 20A0                                            u6370 1E32  
                                          u5810 1656                                            u5730 152E  
                                          u8050 2DA6                                            u8130 2B7E  
                                          u7090 3AA0                                            u6530 3690  
                                          u6610 3788                                            u5650 3512  
                                          u7410 0D08                                            u7330 0C36  
                                          u7250 0A16                                            u7170 08B6  
                                          u8210 26EA                                            u6291 24A2  
                                          u6451 209C                                            u6371 1E2E  
                                          u5811 1652                                            u5731 152A  
                                          u8051 2DA2                                            u8131 2B7A  
                                          u7091 3A9C                                            u6531 368C  
                                          u6611 3784                                            u5651 350E  
                                          u7411 0D04                                            u7331 0C32  
                                          u7171 08B2                                            u8211 26E6  
                                          u6700 32A0                                            u6460 20CE  
                                          u6380 1E44                                            u5900 17A6  
                                          u5820 1676                                            u5740 153E  
                                          u8060 2DE0                                            u8140 2BC0  
                                          u6540 36AA                                            u6620 37A6  
                                          u5660 353A                                            u7500 10EC  
                                          u7420 0D32                                            u7340 0C4C  
                                          u7260 0A2C                                            u7180 08C8  
                                          u8220 271C                                            u6701 329C  
                                          u6461 20CA                                            u6381 1E40  
                                          u5901 17A2                                            u5821 1672  
                                          u5741 153A                                            u8061 2DDC  
                                          u8141 2BBC                                            u6541 36A6  
                                          u6621 37A2                                            u5661 3536  
                                          u7501 10E8                                            u7421 0D2E  
                                          u7341 0C48                                            u7261 0A28  
                                          u7181 08C4                                            u8221 2718  
                                          u6710 32C0                                            u6470 20E4  
                                          u6390 1E54                                            u5910 17B6  
                                          u5830 1684                                            u5750 157A  
                                          u8070 2DEE                                            u8150 2BF4  
                                          u6550 36D0                                            u6630 37BC  
                                          u5670 3570                                            u7510 10FE  
                                          u7430 0E7A                                            u7350 0C68  
                                          u7270 0AB0                                            u7190 0910  
                                          u8230 2746                                            u6711 32BC  
                                          u6471 20E0                                            u6391 1E50  
                                          u5911 17B2                                            u5831 1680  
                                          u5751 1576                                            u8071 2DEA  
                                          u8151 2BF0                                            u6551 36CC  
                                          u6631 37B8                                            u5671 356C  
                                          u7511 10FA                                            u7431 0E76  
                                          u7351 0C64                                            u7271 0AAC  
                                          u7191 090C                                            u8231 2742  
                                          u6720 3310                                            u6480 20F8  
                                          u5920 17E2                                            u5840 1694  
                                          u5760 1588                                            u5680 14A2  
                                          u6560 36EE                                            u6640 37E0  
                                          u6800 31F4                                            u7600 12AC  
                                          u7520 1110                                            u7440 0EE0  
                                          u7360 0C9E                                            u7280 0B44  
                                          u8080 3970                                            u8240 2786  
                                          u8160 25AC                                            u8320 3096  
                                          u6721 330C                                            u6481 20F4  
                                          u5921 17DE                                            u5841 1690  
                                          u5761 1584                                            u5681 149E  
                                          u6561 36EA                                            u6641 37DC  
                                          u6801 31F0                                            u7601 12A8  
                                          u7521 110C                                            u7441 0EDC  
                                          u7361 0C9A                                            u7281 0B40  
                                          u8081 396C                                            u8241 2782  
                                          u8161 25A8                                            u8321 3092  
                                          u8090 3EFC                                            u6490 2112  
                                          u5930 17F2                                            u5850 16C6  
                                          u5770 15F6                                            u5690 14B4  
                                          u6570 370A                                            u6650 3820  
                                          u6730 3DD2                                            u6810 35C8  
                                          u7610 12E2                                            u7530 111E  
                                          u7450 0F28                                            u7370 0CC4  
                                          u7290 0BB6                                            u8250 27B8  
                                          u8170 25F4                                            u8330 30BA  
                                          u8091 3EF8                                            u6491 210E  
                                          u5931 17EE                                            u5851 16C2  
                                          u5771 15F2                                            u5691 14B0  
                                          u6571 3706                                            u6651 381C  
                                          u6731 3DCE                                            u6811 35C4  
                                          u7611 12DE                                            u7531 111A  
                                          u7451 0F24                                            u7371 0CC0  
                                          u7291 0BB2                                            u8251 27B4  
                                          u8171 25F0                                            u8331 30B6  
                                          u5940 180E                                            u5860 16D4  
                                          u5780 160E                                            u7700 2E70  
                                          u6580 3730                                            u6660 385E  
                                          u6740 3126                                            u6900 3404  
                                          u6820 35EA                                            u7620 1310  
                                          u7540 1138                                            u7460 0F38  
                                          u7380 0CD6                                            u8260 27E2  
                                          u8180 264E                                            u8340 30D2  
                                          u5941 180A                                            u5861 16D0  
                                          u5781 1608                                            u7701 2E6C  
                                          u6581 372C                                            u6661 385A  
                                          u6741 3122                                            u6901 33FE  
                                          u6821 35E6                                            u7621 130C  
                                          u7541 1134                                            u7461 0F34  
                                          u7381 0CD2                                            u8261 27DE  
                                          u8181 264A                                            u8341 30CE  
                                          u5950 181E                                            u5870 16F2  
                                          u5790 1610                                            u7710 2E8C  
                                          u6590 3754                                            u6670 3892  
                                          u6750 315A                                            u6910 3406  
                                          u6830 3640                                            u7630 1394  
                                          u7550 1146                                            u7470 0FD2  
                                          u7390 0CE4                                            u8270 2822  
                                          u8190 2680                                            u5951 181A  
                                          u5871 16EE                                            u8407 4006  
                                          u7711 2E88                                            u6591 3750  
                                          u6671 388E                                            u6831 363C  
                                          u7631 1390                                            u7551 1142  
                                          u7471 0FCE                                            u7391 0CE0  
                                          u8271 281E                                            u8191 267C  
                                          u6680 3244                                            u5960 1830  
                                          u5880 172A                                            u7720 2F42  
                                          u6760 3188                                            u6840 3650  
                                          u6920 3A22                                            u7640 13AE  
                                          u7560 119E                                            u7480 1020  
                                          u7800 34CA                                            u8280 284C  
                                          u6681 3240                                            u5961 182C  
                                          u5881 1726                                            u8417 3FD0  
                                          u7721 2F3C                                            u6761 3184  
                                          u6841 364C                                            u7641 13AA  
                                          u7561 119A                                            u7481 101C  
                                          u7801 34C6                                            u8281 2848  
                                          u6690 3282                                            u5970 1846  
                                          u5890 1770                                            u7730 2F44  
                                          u6770 319C                                            u6850 335A  
                                          u6930 3A34                                            u7650 13C6  
                                          u7570 1270                                            u7490 1048  
                                          u7810 196C                                            u6691 327E  
                                          u5971 1842                                            u5891 176C  
                                          u8427 3BCE                                            u6771 3198  
                                          u6755 3150                                            u6931 3A30  
                                          u7651 13C2                                            u7571 126C  
                                          u7491 1044                                            u7811 1968  
                                          u5980 185C                                            u7740 2F5A  
                                          u6780 31C4                                            u6860 3378  
                                          u6940 39AA                                            u7660 1424  
                                          u7580 128C                                            u7900 1C16  
                                          u7820 19B4                                            u5981 1858  
                                          u8437 3BE6                                            u7741 2F56  
                                          u6781 31C0                                            u6861 3374  
                                          u6941 39A4                                            u7661 141E  
                                          u7581 1288                                            u7901 1C12  
                                          u7821 19B0                                            u8357 2FBE  
                                          u5990 1870                                            u7750 2F6C  
                                          u6790 31E4                                            u6870 33A0  
                                          u6950 39AC                                            u7670 1426  
                                          u7590 129E                                            u7910 1C7E  
                                          u7830 19EE                                            u5991 186C  
                                          u8447 3C40                                            u7751 2F68  
                                          u6791 31E0                                            u6871 339C  
                                          u6855 3350                                            u6927 3A18  
                                          u7591 129A                                            u7911 1C78  
                                          u7831 19EA                                            u8367 2FDA  
                                          u6880 33CA                                            u6960 39C2  
                                          u7680 143C                                            u7760 3442  
                                          u7920 1C80                                            u7840 1A98  
                                          u8457 3FEE                                            u6881 33C6  
                                          u6961 39BE                                            u7681 1438  
                                          u7761 343E                                            u7841 1A92  
                                          u8377 30E0                                            u7690 2E3A  
                                          u6970 28A4                                            u7770 3474  
                                          u7930 1C96                                            u7850 1A9A  
                                          u8467 4076                                            u7691 2E36  
                                          u7771 3470                                            u7931 1C92  
                                          u8387 30FA                                            u6980 28D4  
                                          u7780 3490                                            u7940 1D32  
                                          u7860 1AB0                                            u8477 3B9A  
                                          u6981 28D0                                            u7781 348C  
                                          u7941 1D2E                                            u7861 1AAC  
                                          u8397 2610                                            u7950 3F7E  
                                          u6990 28F6                                            u7790 34A2  
                                          u7870 1AE2                                            u7951 3F7A  
                                          u8487 3BA2                                            u6895 33DC  
                                          u6991 28F2                                            u6975 289A  
                                          u7791 349E                                            u7871 1ADE  
                                          u7960 3D36                                            u7880 1B24  
                                          u7961 3D32                                            u7881 1B20  
                                          u7970 3C3C                                            u7890 1B68  
                                          u7971 3C38                                            u7891 1B64  
                                          u7980 2C60                                            u7981 2C5C  
                                          u7990 2C6E                                            u7991 2C6A  
                                          _TMR1 000FCE                                            _WPUB 000F85  
                                 _EUSART1_Write 4052                                            _dbuf 0124  
                       __end_of_CCP2_Initialize 408A                                            _atoi 2E02  
                                          _main 2F92                                            _prec 00EA  
                                          _nout 00E6                                            pad@i 001E  
                                          pad@p 001B                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                   ___fpclassifyf 331A  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 004C                                 ___fldiv@new_exp 0045  
                              nrf2401_write@reg 0008                                    _tolower$2119 0011  
                    ??_TMR1_SetInterruptHandler 0007                                    ?_flush_TX_RX 0001  
                                  ___param_bank 000000                                           ??_pad 001D  
               __end_of_nrf2401_direccion_TX_RX 3C46                  __size_of_OSCILLATOR_Initialize 0020  
                     get_corriente_AC@corriente 0062                   __end_of_OSCILLATOR_Initialize 3F80  
                                 ___fltol@sign1 000D                                           ?_atoi 000C  
                               __end_of___fladd 1948                                           ?_main 0001  
                               __end_of___fldiv 257A                                 __end_of___awdiv 3742  
                               __end_of___flneg 3DF4                                           STR_10 082B  
                                         STR_12 082B                                 __end_of___awmod 37F2  
                               __end_of___flmul 21E0                                 __end_of___flsub 3C8C  
                               __end_of___fltol 3216                            nrf2401_recibe@valor_ 0007  
                  __end_of_EUSART1_Write_string 3E92                                 ___awdiv@divisor 0007  
                                         _T1CON 000FCD                                           _LATA5 007C4D  
                                         i2l427 0040                                           i2l474 3F38  
                                         i2l493 3B70                                           i2l489 3D82  
                                         i2l499 40D4                                 ___awdiv@counter 0009  
                                  vfpfcnvrt@fmt 00B0                                           _TMR1H 000FCF  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _I_max 00E2                                           _I_min 00DE  
                                         _I_rms 0114                                __end_of_TMR1_ISR 3D84  
                                         _flags 00EC                                           _fputc 34EE  
                                         _fputs 3C8C                                 __end_of_isdigit 3E2C  
                                         _valor 00FC                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00E8                                           _putch 4096  
                               __end_of_isspace 3ADA                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 3EEA                                 __end_of_isupper 3DBC  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                 __end_of_sprintf 3A88  
                                ?___fpclassifyf 0005                                 __end_of_tolower 39DA  
                               __end_of_strncmp 34EE              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 3F12                       __size_of_get_corriente_AC 01DC  
                               __initialization 3ADA                                    __end_of_atoi 2F92  
                    __end_of_EUSART1_Initialize 3D10                                    __end_of_main 3110  
                              spi_s_read@cont_s 0006                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000E                                          ??_main 00DC  
                                 __activetblptr 000002                         __end_of_nrF2401_init_RX 3918  
                          __end_of_nrf2401_read 3FD8                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0007                                          _ACTCON 000FB5  
                                        ?_fputs 0010                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _CCPR2H 000F91  
                                        _CCPR2L 000F90                                ___awdiv@dividend 0005  
                                        _ANSELA 000F5B                                          ?_putch 0001  
                                        _ANSELB 000F5C                                          _ANSELC 000F5D  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 0001  
                          __end_of_direccion_rx 0806                            __end_of_direccion_tx 080F  
                                        i2l5001 3D4C                                          i2l5003 3D58  
                                        i2l5005 3D74                                          i2l5007 3D78  
                                        i2l5093 0012                                          i2l5095 0020  
                                        i2l5097 002E                                          i2l5099 003C  
                                        i2l4741 3F20                                          i2l4751 3F34  
                                        i2l4743 3F22                                          i2l4753 3B28  
                                        i2l4745 3F26                                          i2l4755 3B56  
                                        i2l4747 3F2A                                          i2l4739 3F12  
                                        i2l4749 3F30                                          i2l4999 3D4A  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                  __size_of_EUSART1_is_tx_ready 0028                                          _SPBRG1 000FAF  
                              ?_CCP2_Initialize 0001                                          _TXREG1 000FAD  
                              __end_of___xxtofl 2E02                                          _TXSTA1 000FAC  
          __end_of_TMR1_DefaultInterruptHandler 40D6           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 40D4                                    vfprintf@cfmt 00CA  
                                        ___flge 3216                                          ___fleq 37F2  
                               _nrf2401_comando 4068                                       ??___fladd 000D  
                                        ___wmul 3F3A                                       ??___fldiv 003C  
                                     ??___awdiv 0009                                       ??___flneg 0009  
                                     ??___awmod 0009                                       ??___flmul 001B  
                                     ??___flsub 0034                                       ??___fltol 0009  
                                        _efgtoa 0830                       __size_of_nrf2401_haydatos 001E  
                                        _conteo 0110                        ?_EUSART1_SetErrorHandler 0005  
                                        _floorf 285C                                          _offset 0182  
                                        clear_0 3B00                                          clear_1 3B0C  
                              ___awdiv@quotient 000B                                 ___awmod@divisor 0007  
                                        isa$std 000001                                 ___awmod@counter 0009  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          _strcpy 39DA  
                                        _strlen 3E2C                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isdigit 0007  
                               ___fpclassifyf@e 000D                                 ___fpclassifyf@u 000F  
                               ___fpclassifyf@x 0005                                    __mediumconst 0000  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                        ADC_GetConversion@channel 0009  
                              __end_of_vfprintf 397A                                 ??_EUSART1_Write 0005  
      TMR1_SetInterruptHandler@InterruptHandler 0005                                       ??_sprintf 0057  
                                     ??_tolower 000D                         __end_of_TMR1_WriteTimer 3F3A  
                                     ??_strncmp 000B                   __size_of_INTERRUPT_Initialize 0004  
                         __end_of_TMR1_CallBack 3B72                                      ___flge@ff1 002C  
                                    ___flge@ff2 0030                                 ??___fpclassifyf 0009  
                              ?_TMR1_Initialize 0001                                    ___xxtofl@arg 000F  
                                  ___xxtofl@exp 000E                               _SYSTEM_Initialize 3F9E  
                                  ___xxtofl@val 0005                                      ___fleq@ff1 0005  
                                    ___fleq@ff2 0009                            nrF2401_init_RX@canal 000D  
                                    __accesstop 0060                         __end_of__initialization 3B1A  
                                    ___flneg@f1 0005                                    ?_spi_s_write 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0005                            _EUSART1_Write_string 3E62  
                            nrf2401_write@valor 0007                                  __pcstackCOMRAM 0001  
                                  __pidataBANK1 408A                    __size_of_trip_protec_current 02E2  
                           ??_SYSTEM_Initialize 0007                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 35B8                            __size_of_flush_TX_RX 0018  
                                 __end_of_fputs 3CD0                                   __end_of_putch 40A0  
                              ?_nrF2401_init_RX 0001                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 3FBC                                         ??_fputs 0014  
                                       ??_putch 0006                                      __pbssBANK0 00DE  
                                    __pbssBANK1 0100                         __end_of_nrf2401_comando 407C  
                         ?_EUSART1_Write_string 0006                                _get_corriente_AC 2A72  
               __end_of_EUSART1_SetErrorHandler 40C8                          nrf2401_comando@comando 0007  
                         __end_of_nrf2401_write 3FF4                                         ?___flge 002C  
                                       ?___fleq 0005                                         ?___wmul 0005  
                                    ??_TMR1_ISR 0003                                         ?_efgtoa 006A  
                                       _CCP2CON 000F97                                         ?_floorf 004D  
                         __size_of_nrf2401_read 001C                         __size_of_ADC_Initialize 0016  
                                       ?_strcpy 0005                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 40BE         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 40B4                                      _get_Status 40C8  
                                     ?___xxtofl 0005                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 046E                        ?_nrf2401_direccion_TX_RX 0007  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                 nrf2401_direccion_TX_RX@cont_s 000C                                ?_TMR1_WriteTimer 0001  
                          _ADC_InterruptHandler 011C                                         __Hparam 0000  
                                       __Lparam 0000                                    _nrf2401_read 3FBC  
                               __size_of___flge 0104                                 __size_of___fleq 00AA  
                                       ___fladd 1488                                         ___fldiv 21E0  
                                       ___awdiv 367E                                         ___flneg 3DBC  
                                       ___awmod 3742                                         ___flmul 1DB6  
                                       ___flsub 3C46                                         ___fltol 3110  
                       __size_of_nrf2401_recibe 001A                                 __size_of___wmul 0026  
                              _nrf2401_haydatos 3F80                                       ?_vfprintf 00C4  
                                  __psmallconst 0800                                 __size_of_efgtoa 0C58  
                                    _currentSeg 010C                                 __size_of_floorf 0216  
                                  _direccion_rx 0801                                    _direccion_tx 080A  
                                       __pcinit 3ADA                                         __ramtop 0800  
                           _EUSART1_is_tx_ready 3EEA                                         __ptext0 2F92  
                                       __ptext1 257A                                         __ptext2 3A36  
                                       __ptext3 3918                                         __ptext4 1948  
                                       __ptext5 3418                                         __ptext6 0830  
                                       __ptext7 397A                                         __ptext8 3D84  
                                       __ptext9 39DA                  ??_TMR1_DefaultInterruptHandler 0001  
                               __size_of_strcpy 005C                                 __size_of_strlen 0036  
                                     _T1CONbits 000FCD                                spi_s_write@dato_ 0005  
                         _OSCILLATOR_Initialize 3F60                                    __size_of_pad 00C6  
                                       _isdigit 3DF4                                      ??___xxtofl 0009  
                              ___awmod@dividend 0005               __size_of_TMR1_SetInterruptHandler 000A  
                            _EUSART1_Initialize 3CD0                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 3A88                       ?_TMR1_SetInterruptHandler 0005  
                                       _isupper 3D84                                         efgtoa@c 0070  
                                       efgtoa@d 008E                                         efgtoa@e 00A6  
                                       efgtoa@f 006C                                         efgtoa@g 00A2  
                                       efgtoa@h 0098                                         efgtoa@i 00A0  
                                       efgtoa@l 009C                                         efgtoa@m 0088  
                                       efgtoa@n 00A8                                         efgtoa@p 0092  
                                       efgtoa@t 0082                                         efgtoa@u 00AA  
                                       efgtoa@w 0094                        EUSART1_Write_string@data 0006  
                                       atoi@neg 0012                               __end_of_intervalo 080A  
                    __size_of_SYSTEM_Initialize 001E                                         _sprintf 3A36  
                                       _tolower 397A                                         _voltaje 0118  
             nrf2401_direccion_TX_RX@direccion_ 0007                                         _strncmp 3418  
                          end_of_initialization 3B1A                                         floorf@e 0064  
                                       floorf@m 0060                                         floorf@u 0066  
                                       floorf@x 004D                             ?_EUSART1_Initialize 0001  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                        ??_EUSART1_Write_string 0008                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0120                                         fputs@fp 0012  
                              ?_nrf2401_comando 0001                            __size_of_spi_s_write 0048  
                             __end_of_vfpfcnvrt 1DB6                                      efgtoa@mode 0097  
                                    efgtoa@sign 0090                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                    ??_vfprintf 0057                            ??_EUSART1_Initialize 0007  
                                       strcpy@d 000D                                         strlen@a 0007  
                                       strcpy@s 000B                                         strlen@s 0005  
                                     _PORTBbits 000F81                                     ?_get_Status 0001  
                                    _spi_s_init 4026                                      _spi_s_read 3BBA  
                                   ___fladd@grs 0014                                   ___xxtofl@sign 000D  
                               nrf2401_read@reg 0007                                       _TRISBbits 000F93  
                                     _TRISCbits 000F94                                     ___fldiv@grs 0047  
                                   ___fldiv@rem 0040                             _trip_protec_current 257A  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                         ??_EUSART1_is_tx_ready 0005                                     ___flmul@grs 0021  
                          ?_trip_protec_current 0001                        __size_of_CCP2_Initialize 000E  
                  __end_of_INTERRUPT_Initialize 40D4                                  __end_of___flge 331A  
                                __end_of___fleq 389C                                     vfpfcnvrt@ap 00B2  
                                   vfpfcnvrt@ct 00C0                                     vfpfcnvrt@fp 00AE  
                                __end_of___wmul 3F60                                  __end_of_efgtoa 1488  
                             __size_of_TMR1_ISR 003A                                  _ADC_Initialize 403C  
                                __end_of_floorf 2A72                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F527 0100                                  __end_of_strcpy 3A36  
                                __end_of_strlen 3E62                             start_initialization 3ADA  
                      __end_of_get_corriente_AC 2C4E                 __size_of_PIN_MANAGER_Initialize 002E  
                                   __end_of_pad 367E                                 spi_s_read@dato_ 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 4068  
                         __end_of___fpclassifyf 3418                             __size_of_get_Status 0008  
                                 ??_flush_TX_RX 0009                        __size_of_TMR1_Initialize 002A  
                                   vfprintf@fmt 00C6                           ??_trip_protec_current 0038  
                                      ??___flge 0034                                        ??___fleq 000D  
                                _nrf2401_recibe 3FF4                                        ??___wmul 0009  
                                      ??_efgtoa 0071                          __end_of_ADC_Initialize 4052  
                                   __pdataBANK1 0182                                        ??_floorf 0051  
                        __size_of_TMR1_CallBack 004A                                        ??_strcpy 0009  
                                      ??_strlen 0007                                       ___fladd@a 0009  
                                     ___fladd@b 0005                                     ?_spi_s_init 0001  
                                   ?_spi_s_read 0001                                       ___fldiv@a 0038  
                                     ___fldiv@b 0034                           TMR1_ISR@CountCallBack 00EE  
                                     ___flmul@a 0017                                       ___flmul@b 0013  
                                   __pbssCOMRAM 0057                                       ___flsub@a 0030  
                                     ___flsub@b 002C                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 018E                               __size_of___xxtofl 01B4  
                             get_corriente_AC@i 0060                        __end_of_nrf2401_haydatos 3F9E  
                      __size_of_nrF2401_init_RX 007C                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                       _atoi$2030 0018  
                                     _atoi$2031 0016                                       _atoi$2029 0014  
              __size_of_nrf2401_direccion_TX_RX 0046                                     _efgtoa$1971 007A  
                                   _efgtoa$1965 0076                                     _efgtoa$1966 0078  
                                   _efgtoa$1975 007C                                     _efgtoa$1976 007E  
                                   _efgtoa$1977 0080                                       _main$2426 018E  
                        __end_of_nrf2401_recibe 400E                          _PIN_MANAGER_Initialize 3E92  
                       _EUSART1_is_tx_ready$282 0005                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 40AA                                     _dato_serial 00FE  
                                      ?___fladd 0005                                        ?___fldiv 0034  
                                      ?___awdiv 0005                                        ?___flneg 0005  
                                      ?___awmod 0005                                        ?___flmul 0013  
                                      ?___flsub 002C                                        ?___fltol 0005  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 0003  
                           __end_of_flush_TX_RX 4026                               __size_of_vfprintf 0062  
                                   __smallconst 0800                               ??_CCP2_Initialize 0005  
               nrf2401_direccion_TX_RX@registro 0009                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 011E                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 40BE  
                                      ?_sprintf 00CC                                        ?_tolower 000B  
                        __size_of_nrf2401_write 001C                                  __size_of_fputc 00CA  
                                __size_of_fputs 0044                                        ?_strncmp 0005  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 40D0  
                                 _TMR1_CallBack 3B28                                       _intervalo 0806  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                                      _PIE1bits 000F9D                        __size_of_TMR1_WriteTimer 0028  
                           __size_of_spi_s_init 0016                             __size_of_spi_s_read 0046  
           __size_of_INTERRUPT_InterruptManager 0044                                 ?_nrf2401_recibe 0001  
                                      _PIR1bits 000F9E                                        i2u517_40 3F20  
                                      i2u517_41 3F1C                                        i2u518_40 3B56  
                                      i2u518_41 3B52                                        i2u519_48 3B5C  
                                      i2u560_40 0020                                        i2u519_49 3B70  
                                      i2u560_41 001C                                        i2u553_40 3D74  
                                      i2u561_40 002E                                        i2u553_41 3D70  
                                      i2u561_41 002A                                        i2u562_40 003C  
                                      i2u562_41 0038                                        _RCONbits 000FD0  
                                      _TMR1_ISR 3D4A                                       _vfpfcnvrt 1948  
                             ??_TMR1_Initialize 0007                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0005                                    ??_get_Status 0009  
                                  _isspace$2060 000B                                      vfpfcnvrt@c 00C3  
                                    vfpfcnvrt@f 00BC                                     _INTCON2bits 000FF1  
                                     copy_data0 3AEE                      get_corriente_AC@n_muestras 004D  
                         ?_INTERRUPT_Initialize 0001                                  ?_TMR1_CallBack 0001  
                                 ??_spi_s_write 0005                   __size_of_EUSART1_Write_string 0030  
                                      __Hrparam 0000                              __end_of_get_Status 40D0  
                             ??_nrF2401_init_RX 000D                                      vfprintf@ap 00C8  
                                      __Lrparam 0000                                      vfprintf@fp 00C4  
                             _ADC_GetConversion 3D10                                     _flush_TX_RX 400E  
                                 _nrf2401_write 3FD8                         ??_OSCILLATOR_Initialize 0005  
                      __size_of_nrf2401_comando 0014                              ?_ADC_GetConversion 0005  
                              __size_of___fladd 04C0                                __size_of___fldiv 039A  
                              __size_of___awdiv 00C4                                __size_of___flneg 0038  
                              __size_of___awmod 00B0                                __size_of___flmul 042A  
                              __size_of___flsub 0046                                __size_of___fltol 0106  
                   __size_of_EUSART1_Initialize 0040                                      ?_vfpfcnvrt 00AE  
                      _TMR1_SetInterruptHandler 40A0                              ___fpclassifyf@F465 0104  
                         _TMR1_InterruptHandler 00F0                       ??_EUSART1_SetErrorHandler 0007  
                   _EUSART1_DefaultErrorHandler 000000                             ??_ADC_GetConversion 0007  
                                    sprintf@fmt 00CE                                        ___xxtofl 2C4E  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 3F12  
                             ?_get_corriente_AC 004D                                __size_of_isspace 0052  
                                      __ptext10 35B8                                        __ptext11 3E2C  
                                      __ptext20 3742                                        __ptext12 3C8C  
                                      __ptext21 367E                                        __ptext13 34EE  
                                    _T1GCONbits 000FCC                                        __ptext30 3FBC  
                                      __ptext22 2E02                                        __ptext14 4096  
                                      __ptext31 3BBA                                        __ptext23 3A88  
                                      __ptext15 285C                                        __ptext40 3C46  
                                      __ptext32 389C                                        __ptext24 3DF4  
                                      __ptext16 331A                                        __ptext41 1488  
                                      __ptext33 3C00                                        __ptext25 3F3A  
                                      __ptext17 3110                                        __ptext50 3F60  
                                      __ptext42 1DB6                                        __ptext34 400E  
                                      __ptext26 4026                                        __ptext18 3DBC  
                                      __ptext51 40D0                                        __ptext43 3216  
                                      __ptext35 3FD8                                        __ptext27 3FF4  
                                      __ptext19 37F2                                        __ptext60 4052  
                                      __ptext52 3CD0                                        __ptext44 21E0  
                                      __ptext36 4068                                        __ptext28 3F80  
                                      __ptext53 40AA                                        __ptext45 3D10  
                                      __ptext37 3B72                                        __ptext29 40C8  
                                      __ptext62 3D4A                                        __ptext54 40B4  
                                      __ptext46 3F9E                                        __ptext38 2A72  
                                      __ptext63 3F12                                        __ptext55 40BE  
                                      __ptext47 3EC0                                        __ptext39 2C4E  
                                      __ptext64 3B28                                        __ptext56 407C  
                                      __ptext48 40A0                                        __ptext65 40D4  
                                      __ptext57 403C                                        __ptext49 3E92  
                                      __ptext66 0000                                        __ptext58 3EEA  
                                      __ptext59 3E62                                __size_of_isupper 0038  
                            ??_get_corriente_AC 0051                                __size_of_sprintf 0052  
                              __size_of_tolower 0060                                      strcpy@dest 0005  
                              __size_of_strncmp 00D6                                   __size_of_atoi 0190  
                             spi_s_write@cont_s 0006                                   __size_of_main 017E  
                       _nrf2401_direccion_TX_RX 3C00                                  _previousMillis 0108  
                     __end_of_ADC_GetConversion 3D4A                                        _relacion 0186  
                                      efgtoa@fp 006A                                        efgtoa@ne 0086  
                                      efgtoa@pp 0084                                        efgtoa@ou 008A  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                ?_nrf2401_write 0007                             __end_of_spi_s_write 3BBA  
                                      int$flags 005B                                        _vfprintf 3918  
            __end_of_INTERRUPT_InterruptManager 004C                      _INTERRUPT_InterruptManager 0008  
                             ??_TMR1_WriteTimer 0003                     _EUSART1_FramingErrorHandler 0122  
                                  _sensibilidad 018A                                    ??_spi_s_init 0005  
                                  ??_spi_s_read 0005                                  _vfpfcnvrt$1991 00B8  
                                _vfpfcnvrt$1995 00BA                                      _INTCONbits 000FF2  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                               ??_TMR1_CallBack 0001                                        intlevel2 0000  
                                     sprintf@ap 00D4                               ?_nrf2401_haydatos 0001  
                                  _valor_string 0174                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                     __end_of_trip_protec_current 285C  
                            ??_nrf2401_haydatos 0009          __end_of_EUSART1_SetOverrunErrorHandler 40B4  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 40AA  
                                     strcpy@src 0007                                      _RCSTA1bits 000FAB  
                                      isupper@c 0005                                       strncmp@_l 0005  
                                     strncmp@_r 0007                                ??_ADC_Initialize 0005  
                                 ?_nrf2401_read 0001                              __end_of_spi_s_init 403C  
                            __end_of_spi_s_read 3C00                                 _CCP2_Initialize 407C  
                                   efgtoa@nmode 0096  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                                   ??_vfpfcnvrt 00B4                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 00FF                                        sprintf@f 00D6  
                                      tolower@c 000B                                        sprintf@s 00CC  
                        __size_of___fpclassifyf 00FE                               ??_nrf2401_comando 0007  
                                      strncmp@l 000C                                        strncmp@n 0009  
                                      strncmp@r 000E                                   ___fladd@signs 0011  
                     ??_nrf2401_direccion_TX_RX 000A                  __end_of_PIN_MANAGER_Initialize 3EC0  
                              ??_nrf2401_recibe 0007                                    ___fladd@aexp 0012  
                                  ___fladd@bexp 0013                               nrf2401_read@dato_ 0008  
                                   _spi_s_write 3B72                      __size_of_ADC_GetConversion 003A  
                               _TMR1_Initialize 3EC0                                 ??_nrf2401_write 0008  
                                ??_nrf2401_read 0007  
