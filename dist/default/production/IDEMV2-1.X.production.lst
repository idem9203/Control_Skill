

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 28 16:06:00 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 05/05/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F25K50 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    69  0000                     
    70 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    71  0000                     
    72 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    73  0000                     
    74                           	psect	smallconst
    75  000800                     __psmallconst:
    76                           	callstack 0
    77  000800  00                 	db	0
    78  000801                     _direccion_rx:
    79                           	callstack 0
    80  000801  11                 	db	17
    81  000802  11                 	db	17
    82  000803  11                 	db	17
    83  000804  11                 	db	17
    84  000805  11                 	db	17
    85  000806                     __end_of_direccion_rx:
    86                           	callstack 0
    87  000806                     _direccion_tx:
    88                           	callstack 0
    89  000806  11                 	db	17
    90  000807  11                 	db	17
    91  000808  11                 	db	17
    92  000809  11                 	db	17
    93  00080A  11                 	db	17
    94  00080B                     __end_of_direccion_tx:
    95                           	callstack 0
    96  0000                     _ANSELA	set	3931
    97  0000                     _ANSELB	set	3932
    98  0000                     _ANSELC	set	3933
    99  0000                     _INTCON	set	4082
   100  0000                     _PORTBbits	set	3969
   101  0000                     _LATCbits	set	3979
   102  0000                     _LATBbits	set	3978
   103  0000                     _TRISBbits	set	3987
   104  0000                     _TRISCbits	set	3988
   105  0000                     _ADCON0bits	set	4034
   106  0000                     _ADCON0	set	4034
   107  0000                     _ADRESH	set	4036
   108  0000                     _ADRESL	set	4035
   109  0000                     _ADCON2	set	4032
   110  0000                     _ADCON1	set	4033
   111  0000                     _CCPR2H	set	3985
   112  0000                     _CCPR2L	set	3984
   113  0000                     _CCP2CON	set	3991
   114  0000                     _INTCONbits	set	4082
   115  0000                     _INTCON2bits	set	4081
   116  0000                     _WPUB	set	3973
   117  0000                     _TRISC	set	3988
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISA	set	3986
   120  0000                     _LATC	set	3979
   121  0000                     _LATB	set	3978
   122  0000                     _LATA	set	3977
   123  0000                     _ACTCON	set	4021
   124  0000                     _OSCTUNE	set	3995
   125  0000                     _OSCCON2	set	4050
   126  0000                     _OSCCON	set	4051
   127  0000                     _TXREG1	set	4013
   128  0000                     _RCREG1	set	4014
   129  0000                     _RCSTA1bits	set	4011
   130  0000                     _TXSTA1bits	set	4012
   131  0000                     _PIR1bits	set	3998
   132  0000                     _SPBRGH1	set	4016
   133  0000                     _SPBRG1	set	4015
   134  0000                     _TXSTA1	set	4012
   135  0000                     _RCSTA1	set	4011
   136  0000                     _BAUDCON1	set	4024
   137  0000                     _GIE	set	32663
   138  0000                     _RCIE	set	31981
   139  0000                     _RCIF	set	31989
   140  0000                     _LATA5	set	31821
   141  0000                     _LATB0	set	31824
   142  0000                     _PLLRDY	set	32407
   143  00080B                     STR_1:
   144  00080B  63                 	db	99	;'c'
   145  00080C  69                 	db	105	;'i'
   146  00080D  65                 	db	101	;'e'
   147  00080E  72                 	db	114	;'r'
   148  00080F  3D                 	db	61	;'='
   149  000810  00                 	db	0
   150  000811                     STR_3:
   151  000811  61                 	db	97	;'a'
   152  000812  70                 	db	112	;'p'
   153  000813  65                 	db	101	;'e'
   154  000814  72                 	db	114	;'r'
   155  000815  3D                 	db	61	;'='
   156  000816  00                 	db	0
   157  000817                     STR_2:
   158  000817  6F                 	db	111	;'o'
   159  000818  6E                 	db	110	;'n'
   160  000819  00                 	db	0
   161  00081A  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166  000BFC                     __pcinit:
   167                           	callstack 0
   168  000BFC                     start_initialization:
   169                           	callstack 0
   170  000BFC                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to COMRAM (72 bytes)
   174  000BFC  EE00  F001         	lfsr	0,__pbssCOMRAM
   175  000C00  0E48               	movlw	72
   176  000C02                     clear_0:
   177  000C02  6AEE               	clrf	postinc0,c
   178  000C04  06E8               	decf	wreg,f,c
   179  000C06  E1FD               	bnz	clear_0
   180  000C08                     end_of_initialization:
   181                           	callstack 0
   182  000C08                     __end_of__initialization:
   183                           	callstack 0
   184  000C08  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   185  000C0A  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   186  000C0C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  000C0E  6EF8               	movwf	tblptru,c
   188  000C10  0100               	movlb	0
   189  000C12  EF15  F005         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMRAM
   192  000001                     __pbssCOMRAM:
   193                           	callstack 0
   194  000001                     _procesa:
   195                           	callstack 0
   196  000001                     	ds	30
   197  00001F                     _ADC_InterruptHandler:
   198                           	callstack 0
   199  00001F                     	ds	2
   200  000021                     _EUSART1_ErrorHandler:
   201                           	callstack 0
   202  000021                     	ds	2
   203  000023                     _EUSART1_OverrunErrorHandler:
   204                           	callstack 0
   205  000023                     	ds	2
   206  000025                     _EUSART1_FramingErrorHandler:
   207                           	callstack 0
   208  000025                     	ds	2
   209  000027                     _flag_rx:
   210                           	callstack 0
   211  000027                     	ds	1
   212  000028                     _datorx:
   213                           	callstack 0
   214  000028                     	ds	1
   215  000029                     _puntero:
   216                           	callstack 0
   217  000029                     	ds	1
   218  00002A                     _eusart1RxLastError:
   219                           	callstack 0
   220  00002A                     	ds	1
   221  00002B                     _trama:
   222                           	callstack 0
   223  00002B                     	ds	30
   224                           
   225                           	psect	cstackCOMRAM
   226  000049                     __pcstackCOMRAM:
   227                           	callstack 0
   228  000049                     ??_INTERRUPT_InterruptManager:
   229  000049                     
   230                           ; 1 bytes @ 0x0
   231  000049                     	ds	2
   232  00004B                     ?_strlen:
   233                           	callstack 0
   234  00004B                     ?_strchr:
   235                           	callstack 0
   236  00004B                     EUSART1_SetFramingErrorHandler@interruptHandler:
   237                           	callstack 0
   238  00004B                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   239                           	callstack 0
   240  00004B                     EUSART1_SetErrorHandler@interruptHandler:
   241                           	callstack 0
   242  00004B                     memset@p1:
   243                           	callstack 0
   244  00004B                     strchr@ptr:
   245                           	callstack 0
   246  00004B                     strlen@s:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x2
   250  00004B                     	ds	2
   251  00004D                     memset@c:
   252                           	callstack 0
   253  00004D                     strchr@chr:
   254                           	callstack 0
   255  00004D                     strlen@cp:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x4
   259  00004D                     	ds	2
   260  00004F                     ?_strncmp:
   261                           	callstack 0
   262  00004F                     memset@n:
   263                           	callstack 0
   264  00004F                     strncmp@s1:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x6
   268  00004F                     	ds	2
   269  000051                     memset@p:
   270                           	callstack 0
   271  000051                     strncmp@s2:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x8
   275  000051                     	ds	2
   276  000053                     strncmp@len:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0xA
   280  000053                     	ds	2
   281  000055                     ??_strncmp:
   282                           
   283                           ; 1 bytes @ 0xC
   284  000055                     	ds	1
   285  000056                     ?_strstr:
   286                           	callstack 0
   287  000056                     strstr@s1:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0xD
   291  000056                     	ds	2
   292  000058                     strstr@s2:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xF
   296  000058                     	ds	2
   297  00005A                     ??_procesarx:
   298                           
   299                           ; 1 bytes @ 0x11
   300  00005A                     	ds	2
   301  00005C                     
   302                           ; 1 bytes @ 0x13
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 137 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   322 ;;      Params:         0       0       0       0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels required when called: 5
   328 ;; This function calls:
   329 ;;		_SYSTEM_Initialize
   330 ;;		_memset
   331 ;;		_procesarx
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text0
   338  000A2A                     __ptext0:
   339                           	callstack 0
   340  000A2A                     _main:
   341                           	callstack 26
   342  000A2A                     
   343                           ;main.c: 140: SYSTEM_Initialize();
   344  000A2A  EC0B  F006         	call	_SYSTEM_Initialize	;wreg free
   345  000A2E                     
   346                           ;main.c: 159: ANSELA = 0b00000111;
   347  000A2E  0E07               	movlw	7
   348  000A30  010F               	movlb	15	; () banked
   349  000A32  6F5B               	movwf	91,b	;volatile
   350  000A34                     
   351                           ; BSR set to: 15
   352                           ;main.c: 160: ANSELB = 0b00000000;
   353  000A34  0E00               	movlw	0
   354  000A36  6F5C               	movwf	92,b	;volatile
   355  000A38                     
   356                           ; BSR set to: 15
   357                           ;main.c: 161: ANSELC = 0x00;
   358  000A38  0E00               	movlw	0
   359  000A3A  6F5D               	movwf	93,b	;volatile
   360  000A3C                     
   361                           ; BSR set to: 15
   362                           ;main.c: 163: INTCON = 0b01000000;
   363  000A3C  0E40               	movlw	64
   364  000A3E  6EF2               	movwf	242,c	;volatile
   365  000A40                     
   366                           ; BSR set to: 15
   367                           ;main.c: 164: RCIF = 0;
   368  000A40  9A9E               	bcf	3998,5,c	;volatile
   369  000A42                     
   370                           ; BSR set to: 15
   371                           ;main.c: 165: RCIE = 1;
   372  000A42  8A9D               	bsf	3997,5,c	;volatile
   373  000A44                     
   374                           ; BSR set to: 15
   375                           ;main.c: 166: GIE = 1;
   376  000A44  8EF2               	bsf	4082,7,c	;volatile
   377  000A46                     l1697:
   378                           
   379                           ;main.c: 169: {;main.c: 172: if (flag_rx == 1)
   380  000A46  0427               	decf	_flag_rx^0,w,c
   381  000A48  A4D8               	btfss	status,2,c
   382  000A4A  EF29  F005         	goto	u481
   383  000A4E  EF2B  F005         	goto	u480
   384  000A52                     u481:
   385  000A52  EF23  F005         	goto	l1697
   386  000A56                     u480:
   387  000A56                     
   388                           ;main.c: 173: {;main.c: 174: procesarx();
   389  000A56  EC0E  F004         	call	_procesarx	;wreg free
   390  000A5A                     
   391                           ;main.c: 175: puntero = 0;
   392  000A5A  0E00               	movlw	0
   393  000A5C  6E29               	movwf	_puntero^0,c
   394  000A5E                     
   395                           ;main.c: 176: memset (trama, 0, 30);
   396  000A5E  0E2B               	movlw	low _trama
   397  000A60  6E4B               	movwf	memset@p1^0,c
   398  000A62  0E00               	movlw	high _trama
   399  000A64  6E4C               	movwf	(memset@p1+1)^0,c
   400  000A66  0E00               	movlw	0
   401  000A68  6E4E               	movwf	(memset@c+1)^0,c
   402  000A6A  0E00               	movlw	0
   403  000A6C  6E4D               	movwf	memset@c^0,c
   404  000A6E  0E00               	movlw	0
   405  000A70  6E50               	movwf	(memset@n+1)^0,c
   406  000A72  0E1E               	movlw	30
   407  000A74  6E4F               	movwf	memset@n^0,c
   408  000A76  ECA7  F005         	call	_memset	;wreg free
   409  000A7A                     
   410                           ;main.c: 177: flag_rx = 0;
   411  000A7A  0E00               	movlw	0
   412  000A7C  6E27               	movwf	_flag_rx^0,c
   413  000A7E                     
   414                           ;main.c: 178: RCIF = 0;
   415  000A7E  9A9E               	bcf	3998,5,c	;volatile
   416  000A80                     
   417                           ;main.c: 179: RCIE = 1;
   418  000A80  8A9D               	bsf	3997,5,c	;volatile
   419  000A82  EF23  F005         	goto	l1697
   420  000A86  EF39  F000         	goto	start
   421  000A8A                     __end_of_main:
   422                           	callstack 0
   423                           
   424 ;; *************** function _procesarx *****************
   425 ;; Defined at:
   426 ;;		line 88 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   440 ;;      Params:         0       0       0       0       0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0       0       0
   442 ;;      Temps:          2       0       0       0       0       0       0       0       0
   443 ;;      Totals:         2       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:        2 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; Hardware stack levels required when called: 4
   447 ;; This function calls:
   448 ;;		_strstr
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text1
   455  00081C                     __ptext1:
   456                           	callstack 0
   457  00081C                     _procesarx:
   458                           	callstack 26
   459  00081C                     
   460                           ;main.c: 90: if(strstr(trama,"cier="))
   461  00081C  0E2B               	movlw	low _trama
   462  00081E  6E56               	movwf	strstr@s1^0,c
   463  000820  0E00               	movlw	high _trama
   464  000822  6E57               	movwf	(strstr@s1+1)^0,c
   465  000824  0E0B               	movlw	low STR_1
   466  000826  6E58               	movwf	strstr@s2^0,c
   467  000828  0E08               	movlw	high STR_1
   468  00082A  6E59               	movwf	(strstr@s2+1)^0,c
   469  00082C  EC77  F004         	call	_strstr	;wreg free
   470  000830  5056               	movf	?_strstr^0,w,c
   471  000832  1057               	iorwf	(?_strstr+1)^0,w,c
   472  000834  B4D8               	btfsc	status,2,c
   473  000836  EF1F  F004         	goto	u431
   474  00083A  EF21  F004         	goto	u430
   475  00083E                     u431:
   476  00083E  EF42  F004         	goto	l1663
   477  000842                     u430:
   478  000842                     
   479                           ;main.c: 91: {;main.c: 92: if(strstr(trama,"on"))
   480  000842  0E2B               	movlw	low _trama
   481  000844  6E56               	movwf	strstr@s1^0,c
   482  000846  0E00               	movlw	high _trama
   483  000848  6E57               	movwf	(strstr@s1+1)^0,c
   484  00084A  0E17               	movlw	low STR_2
   485  00084C  6E58               	movwf	strstr@s2^0,c
   486  00084E  0E08               	movlw	high STR_2
   487  000850  6E59               	movwf	(strstr@s2+1)^0,c
   488  000852  EC77  F004         	call	_strstr	;wreg free
   489  000856  5056               	movf	?_strstr^0,w,c
   490  000858  1057               	iorwf	(?_strstr+1)^0,w,c
   491  00085A  B4D8               	btfsc	status,2,c
   492  00085C  EF32  F004         	goto	u441
   493  000860  EF34  F004         	goto	u440
   494  000864                     u441:
   495  000864  EF41  F004         	goto	l1661
   496  000868                     u440:
   497  000868                     
   498                           ;main.c: 93: {;main.c: 94: LATB0 = 1;
   499  000868  808A               	bsf	3978,0,c	;volatile
   500  00086A                     
   501                           ;main.c: 95: _delay((unsigned long)((300)*(48000000/4000.0)));
   502  00086A  0E13               	movlw	19
   503  00086C  6E5B               	movwf	(??_procesarx+1)^0,c
   504  00086E  0E44               	movlw	68
   505  000870  6E5A               	movwf	??_procesarx^0,c
   506  000872  0E44               	movlw	68
   507  000874                     u497:
   508  000874  2EE8               	decfsz	wreg,f,c
   509  000876  D7FE               	bra	u497
   510  000878  2E5A               	decfsz	??_procesarx^0,f,c
   511  00087A  D7FC               	bra	u497
   512  00087C  2E5B               	decfsz	(??_procesarx+1)^0,f,c
   513  00087E  D7FA               	bra	u497
   514  000880  D000               	nop2	
   515  000882                     l1661:
   516                           
   517                           ;main.c: 96: LATB0 = 0;
   518  000882  908A               	bcf	3978,0,c	;volatile
   519  000884                     l1663:
   520                           
   521                           ;main.c: 99: };main.c: 100: if(strstr(trama,"aper="))
   522  000884  0E2B               	movlw	low _trama
   523  000886  6E56               	movwf	strstr@s1^0,c
   524  000888  0E00               	movlw	high _trama
   525  00088A  6E57               	movwf	(strstr@s1+1)^0,c
   526  00088C  0E11               	movlw	low STR_3
   527  00088E  6E58               	movwf	strstr@s2^0,c
   528  000890  0E08               	movlw	high STR_3
   529  000892  6E59               	movwf	(strstr@s2+1)^0,c
   530  000894  EC77  F004         	call	_strstr	;wreg free
   531  000898  5056               	movf	?_strstr^0,w,c
   532  00089A  1057               	iorwf	(?_strstr+1)^0,w,c
   533  00089C  B4D8               	btfsc	status,2,c
   534  00089E  EF53  F004         	goto	u451
   535  0008A2  EF55  F004         	goto	u450
   536  0008A6                     u451:
   537  0008A6  EF76  F004         	goto	l338
   538  0008AA                     u450:
   539  0008AA                     
   540                           ;main.c: 101: {;main.c: 102: if(strstr(trama,"on"))
   541  0008AA  0E2B               	movlw	low _trama
   542  0008AC  6E56               	movwf	strstr@s1^0,c
   543  0008AE  0E00               	movlw	high _trama
   544  0008B0  6E57               	movwf	(strstr@s1+1)^0,c
   545  0008B2  0E17               	movlw	low STR_2
   546  0008B4  6E58               	movwf	strstr@s2^0,c
   547  0008B6  0E08               	movlw	high STR_2
   548  0008B8  6E59               	movwf	(strstr@s2+1)^0,c
   549  0008BA  EC77  F004         	call	_strstr	;wreg free
   550  0008BE  5056               	movf	?_strstr^0,w,c
   551  0008C0  1057               	iorwf	(?_strstr+1)^0,w,c
   552  0008C2  B4D8               	btfsc	status,2,c
   553  0008C4  EF66  F004         	goto	u461
   554  0008C8  EF68  F004         	goto	u460
   555  0008CC                     u461:
   556  0008CC  EF75  F004         	goto	l1671
   557  0008D0                     u460:
   558  0008D0                     
   559                           ;main.c: 103: {;main.c: 104: LATA5 = 1;
   560  0008D0  8A89               	bsf	3977,5,c	;volatile
   561  0008D2                     
   562                           ;main.c: 105: _delay((unsigned long)((300)*(48000000/4000.0)));
   563  0008D2  0E13               	movlw	19
   564  0008D4  6E5B               	movwf	(??_procesarx+1)^0,c
   565  0008D6  0E44               	movlw	68
   566  0008D8  6E5A               	movwf	??_procesarx^0,c
   567  0008DA  0E44               	movlw	68
   568  0008DC                     u507:
   569  0008DC  2EE8               	decfsz	wreg,f,c
   570  0008DE  D7FE               	bra	u507
   571  0008E0  2E5A               	decfsz	??_procesarx^0,f,c
   572  0008E2  D7FC               	bra	u507
   573  0008E4  2E5B               	decfsz	(??_procesarx+1)^0,f,c
   574  0008E6  D7FA               	bra	u507
   575  0008E8  D000               	nop2	
   576  0008EA                     l1671:
   577                           
   578                           ;main.c: 106: LATA5 = 0;
   579  0008EA  9A89               	bcf	3977,5,c	;volatile
   580  0008EC                     l338:
   581  0008EC  0012               	return		;funcret
   582  0008EE                     __end_of_procesarx:
   583                           	callstack 0
   584                           
   585 ;; *************** function _strstr *****************
   586 ;; Defined at:
   587 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strstr.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  s1              2   13[COMRAM] PTR const unsigned char 
   590 ;;		 -> NULL(0), trama(30), 
   591 ;;  s2              2   15[COMRAM] PTR const unsigned char 
   592 ;;		 -> STR_4(3), STR_3(6), STR_2(3), STR_1(6), 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2   13[COMRAM] PTR unsigned char 
   597 ;; Registers used:
   598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   604 ;;      Params:         4       0       0       0       0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0
   607 ;;      Totals:         4       0       0       0       0       0       0       0       0
   608 ;;Total ram usage:        4 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 3
   611 ;; This function calls:
   612 ;;		_strchr
   613 ;;		_strlen
   614 ;;		_strncmp
   615 ;; This function is called by:
   616 ;;		_procesarx
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text2
   621  0008EE                     __ptext2:
   622                           	callstack 0
   623  0008EE                     _strstr:
   624                           	callstack 26
   625  0008EE  EFB0  F004         	goto	l1641
   626  0008F2                     l1633:
   627  0008F2  C056  F04F         	movff	strstr@s1,strncmp@s1
   628  0008F6  C057  F050         	movff	strstr@s1+1,strncmp@s1+1
   629  0008FA  C058  F051         	movff	strstr@s2,strncmp@s2
   630  0008FE  C059  F052         	movff	strstr@s2+1,strncmp@s2+1
   631  000902  C058  F04B         	movff	strstr@s2,strlen@s
   632  000906  C059  F04C         	movff	strstr@s2+1,strlen@s+1
   633  00090A  EC8A  F005         	call	_strlen	;wreg free
   634  00090E  C04B  F053         	movff	?_strlen,strncmp@len
   635  000912  C04C  F054         	movff	?_strlen+1,strncmp@len+1
   636  000916  ECCA  F004         	call	_strncmp	;wreg free
   637  00091A  504F               	movf	?_strncmp^0,w,c
   638  00091C  1050               	iorwf	(?_strncmp+1)^0,w,c
   639  00091E  A4D8               	btfss	status,2,c
   640  000920  EF94  F004         	goto	u401
   641  000924  EF96  F004         	goto	u400
   642  000928                     u401:
   643  000928  EF9C  F004         	goto	l1639
   644  00092C                     u400:
   645  00092C  C056  F056         	movff	strstr@s1,?_strstr
   646  000930  C057  F057         	movff	strstr@s1+1,?_strstr+1
   647  000934  EFC9  F004         	goto	l1035
   648  000938                     l1639:
   649  000938  0E01               	movlw	1
   650  00093A  2456               	addwf	strstr@s1^0,w,c
   651  00093C  6E4B               	movwf	strchr@ptr^0,c
   652  00093E  0E00               	movlw	0
   653  000940  2057               	addwfc	(strstr@s1+1)^0,w,c
   654  000942  6E4C               	movwf	(strchr@ptr+1)^0,c
   655  000944  C058  FFF6         	movff	strstr@s2,tblptrl
   656  000948  C059  FFF7         	movff	strstr@s2+1,tblptrh
   657  00094C                     	if	0	;tblptru may be non-zero
   658  00094C                     	endif
   659  00094C                     	if	0	;tblptru may be non-zero
   660  00094C                     	endif
   661  00094C  0008               	tblrd		*
   662  00094E  50F5               	movf	tablat,w,c
   663  000950  6E4D               	movwf	strchr@chr^0,c
   664  000952  6A4E               	clrf	(strchr@chr+1)^0,c
   665  000954  EC45  F005         	call	_strchr	;wreg free
   666  000958  C04B  F056         	movff	?_strchr,strstr@s1
   667  00095C  C04C  F057         	movff	?_strchr+1,strstr@s1+1
   668  000960                     l1641:
   669  000960  5056               	movf	strstr@s1^0,w,c
   670  000962  1057               	iorwf	(strstr@s1+1)^0,w,c
   671  000964  B4D8               	btfsc	status,2,c
   672  000966  EFB7  F004         	goto	u411
   673  00096A  EFB9  F004         	goto	u410
   674  00096E                     u411:
   675  00096E  EFC5  F004         	goto	l1645
   676  000972                     u410:
   677  000972  C056  FFD9         	movff	strstr@s1,fsr2l
   678  000976  C057  FFDA         	movff	strstr@s1+1,fsr2h
   679  00097A  50DF               	movf	indf2,w,c
   680  00097C  A4D8               	btfss	status,2,c
   681  00097E  EFC3  F004         	goto	u421
   682  000982  EFC5  F004         	goto	u420
   683  000986                     u421:
   684  000986  EF79  F004         	goto	l1633
   685  00098A                     u420:
   686  00098A                     l1645:
   687  00098A  0E00               	movlw	0
   688  00098C  6E56               	movwf	?_strstr^0,c
   689  00098E  0E00               	movlw	0
   690  000990  6E57               	movwf	(?_strstr+1)^0,c
   691  000992                     l1035:
   692  000992  0012               	return		;funcret
   693  000994                     __end_of_strstr:
   694                           	callstack 0
   695                           
   696 ;; *************** function _strncmp *****************
   697 ;; Defined at:
   698 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strncmp.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  s1              2    6[COMRAM] PTR const unsigned char 
   701 ;;		 -> NULL(0), trama(30), 
   702 ;;  s2              2    8[COMRAM] PTR const unsigned char 
   703 ;;		 -> STR_4(3), STR_3(6), STR_2(3), STR_1(6), 
   704 ;;  len             2   10[COMRAM] unsigned int 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  2    6[COMRAM] int 
   709 ;; Registers used:
   710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   716 ;;      Params:         6       0       0       0       0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0       0       0       0       0
   718 ;;      Temps:          1       0       0       0       0       0       0       0       0
   719 ;;      Totals:         7       0       0       0       0       0       0       0       0
   720 ;;Total ram usage:        7 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 2
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_strstr
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text3
   731  000994                     __ptext3:
   732                           	callstack 0
   733  000994                     _strncmp:
   734                           	callstack 26
   735  000994  EF03  F005         	goto	l1603
   736  000998                     l1593:
   737  000998  C04F  FFD9         	movff	strncmp@s1,fsr2l
   738  00099C  C050  FFDA         	movff	strncmp@s1+1,fsr2h
   739  0009A0  50DF               	movf	indf2,w,c
   740  0009A2  B4D8               	btfsc	status,2,c
   741  0009A4  EFD6  F004         	goto	u351
   742  0009A8  EFD8  F004         	goto	u350
   743  0009AC                     u351:
   744  0009AC  EFEC  F004         	goto	l1597
   745  0009B0                     u350:
   746  0009B0  C04F  FFD9         	movff	strncmp@s1,fsr2l
   747  0009B4  C050  FFDA         	movff	strncmp@s1+1,fsr2h
   748  0009B8  50DF               	movf	indf2,w,c
   749  0009BA  6E55               	movwf	??_strncmp^0,c
   750  0009BC  C051  FFF6         	movff	strncmp@s2,tblptrl
   751  0009C0  C052  FFF7         	movff	strncmp@s2+1,tblptrh
   752  0009C4                     	if	0	;tblptru may be non-zero
   753  0009C4                     	endif
   754  0009C4                     	if	0	;tblptru may be non-zero
   755  0009C4                     	endif
   756  0009C4  0008               	tblrd		*
   757  0009C6  50F5               	movf	tablat,w,c
   758  0009C8  1855               	xorwf	??_strncmp^0,w,c
   759  0009CA  B4D8               	btfsc	status,2,c
   760  0009CC  EFEA  F004         	goto	u361
   761  0009D0  EFEC  F004         	goto	u360
   762  0009D4                     u361:
   763  0009D4  EFFF  F004         	goto	l1601
   764  0009D8                     u360:
   765  0009D8                     l1597:
   766  0009D8  C04F  FFD9         	movff	strncmp@s1,fsr2l
   767  0009DC  C050  FFDA         	movff	strncmp@s1+1,fsr2h
   768  0009E0  50DF               	movf	indf2,w,c
   769  0009E2  6E55               	movwf	??_strncmp^0,c
   770  0009E4  C051  FFF6         	movff	strncmp@s2,tblptrl
   771  0009E8  C052  FFF7         	movff	strncmp@s2+1,tblptrh
   772  0009EC                     	if	0	;tblptru may be non-zero
   773  0009EC                     	endif
   774  0009EC                     	if	0	;tblptru may be non-zero
   775  0009EC                     	endif
   776  0009EC  0008               	tblrd		*
   777  0009EE  50F5               	movf	tablat,w,c
   778  0009F0  5C55               	subwf	??_strncmp^0,w,c
   779  0009F2  6E4F               	movwf	?_strncmp^0,c
   780  0009F4  6A50               	clrf	(?_strncmp+1)^0,c
   781  0009F6  A0D8               	btfss	status,0,c
   782  0009F8  0650               	decf	(?_strncmp+1)^0,f,c
   783  0009FA  EF14  F005         	goto	l1058
   784  0009FE                     l1601:
   785  0009FE  4A4F               	infsnz	strncmp@s1^0,f,c
   786  000A00  2A50               	incf	(strncmp@s1+1)^0,f,c
   787  000A02  4A51               	infsnz	strncmp@s2^0,f,c
   788  000A04  2A52               	incf	(strncmp@s2+1)^0,f,c
   789  000A06                     l1603:
   790  000A06  0653               	decf	strncmp@len^0,f,c
   791  000A08  A0D8               	btfss	status,0,c
   792  000A0A  0654               	decf	(strncmp@len+1)^0,f,c
   793  000A0C  2853               	incf	strncmp@len^0,w,c
   794  000A0E  E106               	bnz	u371
   795  000A10  2854               	incf	(strncmp@len+1)^0,w,c
   796  000A12  A4D8               	btfss	status,2,c
   797  000A14  EF0E  F005         	goto	u371
   798  000A18  EF10  F005         	goto	u370
   799  000A1C                     u371:
   800  000A1C  EFCC  F004         	goto	l1593
   801  000A20                     u370:
   802  000A20  0E00               	movlw	0
   803  000A22  6E50               	movwf	(?_strncmp+1)^0,c
   804  000A24  0E00               	movlw	0
   805  000A26  6E4F               	movwf	?_strncmp^0,c
   806  000A28                     l1058:
   807  000A28  0012               	return		;funcret
   808  000A2A                     __end_of_strncmp:
   809                           	callstack 0
   810                           
   811 ;; *************** function _strlen *****************
   812 ;; Defined at:
   813 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  s               2    2[COMRAM] PTR const unsigned char 
   816 ;;		 -> STR_4(3), STR_3(6), STR_2(3), STR_1(6), 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  cp              2    4[COMRAM] PTR const unsigned char 
   819 ;;		 -> STR_4(3), STR_3(6), STR_2(3), STR_1(6), 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  2    2[COMRAM] unsigned int 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         2       0       0       0       0       0       0       0       0
   830 ;;      Locals:         2       0       0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0
   832 ;;      Totals:         4       0       0       0       0       0       0       0       0
   833 ;;Total ram usage:        4 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 2
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_strstr
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text4
   844  000B14                     __ptext4:
   845                           	callstack 0
   846  000B14                     _strlen:
   847                           	callstack 26
   848  000B14  C04B  F04D         	movff	strlen@s,strlen@cp
   849  000B18  C04C  F04E         	movff	strlen@s+1,strlen@cp+1
   850  000B1C  EF92  F005         	goto	l1585
   851  000B20                     l1583:
   852  000B20  4A4D               	infsnz	strlen@cp^0,f,c
   853  000B22  2A4E               	incf	(strlen@cp+1)^0,f,c
   854  000B24                     l1585:
   855  000B24  C04D  FFF6         	movff	strlen@cp,tblptrl
   856  000B28  C04E  FFF7         	movff	strlen@cp+1,tblptrh
   857  000B2C                     	if	0	;tblptru may be non-zero
   858  000B2C                     	endif
   859  000B2C                     	if	0	;tblptru may be non-zero
   860  000B2C                     	endif
   861  000B2C  0008               	tblrd		*
   862  000B2E  50F5               	movf	tablat,w,c
   863  000B30  0900               	iorlw	0
   864  000B32  A4D8               	btfss	status,2,c
   865  000B34  EF9E  F005         	goto	u341
   866  000B38  EFA0  F005         	goto	u340
   867  000B3C                     u341:
   868  000B3C  EF90  F005         	goto	l1583
   869  000B40                     u340:
   870  000B40  504B               	movf	strlen@s^0,w,c
   871  000B42  5C4D               	subwf	strlen@cp^0,w,c
   872  000B44  6E4B               	movwf	?_strlen^0,c
   873  000B46  504C               	movf	(strlen@s+1)^0,w,c
   874  000B48  584E               	subwfb	(strlen@cp+1)^0,w,c
   875  000B4A  6E4C               	movwf	(?_strlen+1)^0,c
   876  000B4C  0012               	return		;funcret
   877  000B4E                     __end_of_strlen:
   878                           	callstack 0
   879                           
   880 ;; *************** function _strchr *****************
   881 ;; Defined at:
   882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strchr.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  ptr             2    2[COMRAM] PTR const unsigned char 
   885 ;;		 -> NULL(0), trama(30), 
   886 ;;  chr             2    4[COMRAM] int 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2    2[COMRAM] PTR unsigned char 
   891 ;; Registers used:
   892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   898 ;;      Params:         4       0       0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0       0       0
   900 ;;      Temps:          1       0       0       0       0       0       0       0       0
   901 ;;      Totals:         5       0       0       0       0       0       0       0       0
   902 ;;Total ram usage:        5 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 2
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_strstr
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text5
   913  000A8A                     __ptext5:
   914                           	callstack 0
   915  000A8A                     _strchr:
   916                           	callstack 26
   917  000A8A                     l1041:
   918  000A8A  C04B  FFD9         	movff	strchr@ptr,fsr2l
   919  000A8E  C04C  FFDA         	movff	strchr@ptr+1,fsr2h
   920  000A92  504D               	movf	strchr@chr^0,w,c
   921  000A94  18DE               	xorwf	postinc2,w,c
   922  000A96  A4D8               	btfss	status,2,c
   923  000A98  EF50  F005         	goto	u381
   924  000A9C  EF52  F005         	goto	u380
   925  000AA0                     u381:
   926  000AA0  EF58  F005         	goto	l1615
   927  000AA4                     u380:
   928  000AA4  C04B  F04B         	movff	strchr@ptr,?_strchr
   929  000AA8  C04C  F04C         	movff	strchr@ptr+1,?_strchr+1
   930  000AAC  EF6A  F005         	goto	l1043
   931  000AB0                     l1615:
   932  000AB0  C04B  FFD9         	movff	strchr@ptr,fsr2l
   933  000AB4  C04C  FFDA         	movff	strchr@ptr+1,fsr2h
   934  000AB8  4A4B               	infsnz	strchr@ptr^0,f,c
   935  000ABA  2A4C               	incf	(strchr@ptr+1)^0,f,c
   936  000ABC  50DF               	movf	indf2,w,c
   937  000ABE  A4D8               	btfss	status,2,c
   938  000AC0  EF64  F005         	goto	u391
   939  000AC4  EF66  F005         	goto	u390
   940  000AC8                     u391:
   941  000AC8  EF45  F005         	goto	l1041
   942  000ACC                     u390:
   943  000ACC  0E00               	movlw	0
   944  000ACE  6E4B               	movwf	?_strchr^0,c
   945  000AD0  0E00               	movlw	0
   946  000AD2  6E4C               	movwf	(?_strchr+1)^0,c
   947  000AD4                     l1043:
   948  000AD4  0012               	return		;funcret
   949  000AD6                     __end_of_strchr:
   950                           	callstack 0
   951                           
   952 ;; *************** function _memset *****************
   953 ;; Defined at:
   954 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memset.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  p1              2    2[COMRAM] PTR void 
   957 ;;		 -> trama(30), 
   958 ;;  c               2    4[COMRAM] int 
   959 ;;  n               2    6[COMRAM] unsigned int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  p               2    8[COMRAM] PTR unsigned char 
   962 ;;		 -> trama(30), 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2    2[COMRAM] PTR void 
   965 ;; Registers used:
   966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         6       0       0       0       0       0       0       0       0
   973 ;;      Locals:         2       0       0       0       0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0
   975 ;;      Totals:         8       0       0       0       0       0       0       0       0
   976 ;;Total ram usage:        8 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 2
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text6
   987  000B4E                     __ptext6:
   988                           	callstack 0
   989  000B4E                     _memset:
   990                           	callstack 28
   991  000B4E  C04B  F051         	movff	memset@p1,memset@p
   992  000B52  C04C  F052         	movff	memset@p1+1,memset@p+1
   993  000B56  EFB5  F005         	goto	l1679
   994  000B5A                     l1675:
   995  000B5A  C051  FFD9         	movff	memset@p,fsr2l
   996  000B5E  C052  FFDA         	movff	memset@p+1,fsr2h
   997  000B62  C04D  FFDF         	movff	memset@c,indf2
   998  000B66  4A51               	infsnz	memset@p^0,f,c
   999  000B68  2A52               	incf	(memset@p+1)^0,f,c
  1000  000B6A                     l1679:
  1001  000B6A  064F               	decf	memset@n^0,f,c
  1002  000B6C  A0D8               	btfss	status,0,c
  1003  000B6E  0650               	decf	(memset@n+1)^0,f,c
  1004  000B70  284F               	incf	memset@n^0,w,c
  1005  000B72  E106               	bnz	u471
  1006  000B74  2850               	incf	(memset@n+1)^0,w,c
  1007  000B76  A4D8               	btfss	status,2,c
  1008  000B78  EFC0  F005         	goto	u471
  1009  000B7C  EFC2  F005         	goto	u470
  1010  000B80                     u471:
  1011  000B80  EFAD  F005         	goto	l1675
  1012  000B84                     u470:
  1013  000B84  0012               	return		;funcret
  1014  000B86                     __end_of_memset:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _SYSTEM_Initialize *****************
  1018 ;; Defined at:
  1019 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 4
  1040 ;; This function calls:
  1041 ;;		_ADC_Initialize
  1042 ;;		_CCP2_Initialize
  1043 ;;		_EUSART1_Initialize
  1044 ;;		_OSCILLATOR_Initialize
  1045 ;;		_PIN_MANAGER_Initialize
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text7
  1052  000C16                     __ptext7:
  1053                           	callstack 0
  1054  000C16                     _SYSTEM_Initialize:
  1055                           	callstack 26
  1056  000C16                     
  1057                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1058  000C16  ECC3  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1059                           
  1060                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1061  000C1A  ECEE  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1062                           
  1063                           ;mcc.c: 55: CCP2_Initialize();
  1064  000C1E  EC21  F006         	call	_CCP2_Initialize	;wreg free
  1065                           
  1066                           ;mcc.c: 56: ADC_Initialize();
  1067  000C22  EC16  F006         	call	_ADC_Initialize	;wreg free
  1068  000C26                     
  1069                           ;mcc.c: 57: EUSART1_Initialize();
  1070  000C26  EC6B  F005         	call	_EUSART1_Initialize	;wreg free
  1071  000C2A  0012               	return		;funcret
  1072  000C2C                     __end_of_SYSTEM_Initialize:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _PIN_MANAGER_Initialize *****************
  1076 ;; Defined at:
  1077 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_SYSTEM_Initialize
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text8
  1106  000B86                     __ptext8:
  1107                           	callstack 0
  1108  000B86                     _PIN_MANAGER_Initialize:
  1109                           	callstack 27
  1110  000B86                     
  1111                           ;pin_manager.c: 60: LATA = 0x00;
  1112  000B86  0E00               	movlw	0
  1113  000B88  6E89               	movwf	137,c	;volatile
  1114                           
  1115                           ;pin_manager.c: 61: LATB = 0x00;
  1116  000B8A  0E00               	movlw	0
  1117  000B8C  6E8A               	movwf	138,c	;volatile
  1118                           
  1119                           ;pin_manager.c: 62: LATC = 0x00;
  1120  000B8E  0E00               	movlw	0
  1121  000B90  6E8B               	movwf	139,c	;volatile
  1122                           
  1123                           ;pin_manager.c: 67: TRISA = 0xC7;
  1124  000B92  0EC7               	movlw	199
  1125  000B94  6E92               	movwf	146,c	;volatile
  1126                           
  1127                           ;pin_manager.c: 68: TRISB = 0xFE;
  1128  000B96  0EFE               	movlw	254
  1129  000B98  6E93               	movwf	147,c	;volatile
  1130                           
  1131                           ;pin_manager.c: 69: TRISC = 0x87;
  1132  000B9A  0E87               	movlw	135
  1133  000B9C  6E94               	movwf	148,c	;volatile
  1134                           
  1135                           ;pin_manager.c: 74: ANSELC = 0x04;
  1136  000B9E  0E04               	movlw	4
  1137  000BA0  010F               	movlb	15	; () banked
  1138  000BA2  6F5D               	movwf	93,b	;volatile
  1139                           
  1140                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1141  000BA4  0E3E               	movlw	62
  1142  000BA6  6F5C               	movwf	92,b	;volatile
  1143                           
  1144                           ;pin_manager.c: 76: ANSELA = 0x07;
  1145  000BA8  0E07               	movlw	7
  1146  000BAA  6F5B               	movwf	91,b	;volatile
  1147                           
  1148                           ;pin_manager.c: 81: WPUB = 0x00;
  1149  000BAC  0E00               	movlw	0
  1150  000BAE  6E85               	movwf	133,c	;volatile
  1151  000BB0                     
  1152                           ; BSR set to: 15
  1153                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
  1154  000BB0  8EF1               	bsf	241,7,c	;volatile
  1155  000BB2                     
  1156                           ; BSR set to: 15
  1157  000BB2  0012               	return		;funcret
  1158  000BB4                     __end_of_PIN_MANAGER_Initialize:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _OSCILLATOR_Initialize *****************
  1162 ;; Defined at:
  1163 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 2
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_SYSTEM_Initialize
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text9
  1192  000BDC                     __ptext9:
  1193                           	callstack 0
  1194  000BDC                     _OSCILLATOR_Initialize:
  1195                           	callstack 27
  1196  000BDC                     
  1197                           ;mcc.c: 63: OSCCON = 0x70;
  1198  000BDC  0E70               	movlw	112
  1199  000BDE  6ED3               	movwf	211,c	;volatile
  1200                           
  1201                           ;mcc.c: 65: OSCCON2 = 0x00;
  1202  000BE0  0E00               	movlw	0
  1203  000BE2  6ED2               	movwf	210,c	;volatile
  1204                           
  1205                           ;mcc.c: 67: OSCTUNE = 0x80;
  1206  000BE4  0E80               	movlw	128
  1207  000BE6  6E9B               	movwf	155,c	;volatile
  1208                           
  1209                           ;mcc.c: 69: ACTCON = 0x00;
  1210  000BE8  0E00               	movlw	0
  1211  000BEA  6EB5               	movwf	181,c	;volatile
  1212  000BEC                     l120:
  1213  000BEC  AED2               	btfss	4050,7,c	;volatile
  1214  000BEE  EFFB  F005         	goto	u111
  1215  000BF2  EFFD  F005         	goto	u110
  1216  000BF6                     u111:
  1217  000BF6  EFF6  F005         	goto	l120
  1218  000BFA                     u110:
  1219  000BFA  0012               	return		;funcret
  1220  000BFC                     __end_of_OSCILLATOR_Initialize:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _EUSART1_Initialize *****************
  1224 ;; Defined at:
  1225 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 3
  1246 ;; This function calls:
  1247 ;;		_EUSART1_SetErrorHandler
  1248 ;;		_EUSART1_SetFramingErrorHandler
  1249 ;;		_EUSART1_SetOverrunErrorHandler
  1250 ;; This function is called by:
  1251 ;;		_SYSTEM_Initialize
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text10
  1256  000AD6                     __ptext10:
  1257                           	callstack 0
  1258  000AD6                     _EUSART1_Initialize:
  1259                           	callstack 26
  1260  000AD6                     
  1261                           ;eusart1.c: 71: BAUDCON1 = 0x08;
  1262  000AD6  0E08               	movlw	8
  1263  000AD8  6EB8               	movwf	184,c	;volatile
  1264                           
  1265                           ;eusart1.c: 74: RCSTA1 = 0x90;
  1266  000ADA  0E90               	movlw	144
  1267  000ADC  6EAB               	movwf	171,c	;volatile
  1268                           
  1269                           ;eusart1.c: 77: TXSTA1 = 0x24;
  1270  000ADE  0E24               	movlw	36
  1271  000AE0  6EAC               	movwf	172,c	;volatile
  1272                           
  1273                           ;eusart1.c: 80: SPBRG1 = 0xE1;
  1274  000AE2  0EE1               	movlw	225
  1275  000AE4  6EAF               	movwf	175,c	;volatile
  1276                           
  1277                           ;eusart1.c: 83: SPBRGH1 = 0x04;
  1278  000AE6  0E04               	movlw	4
  1279  000AE8  6EB0               	movwf	176,c	;volatile
  1280  000AEA                     
  1281                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1282  000AEA  0E00               	movlw	0
  1283  000AEC  6E4B               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1284  000AEE  0E00               	movlw	0
  1285  000AF0  6E4C               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1286  000AF2  EC2D  F006         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1287  000AF6                     
  1288                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1289  000AF6  0E00               	movlw	0
  1290  000AF8  6E4B               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1291  000AFA  0E00               	movlw	0
  1292  000AFC  6E4C               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1293  000AFE  EC28  F006         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1294  000B02                     
  1295                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1296  000B02  0E00               	movlw	0
  1297  000B04  6E4B               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1298  000B06  0E00               	movlw	0
  1299  000B08  6E4C               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1300  000B0A  EC32  F006         	call	_EUSART1_SetErrorHandler	;wreg free
  1301  000B0E                     
  1302                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  1303  000B0E  0E00               	movlw	0
  1304  000B10  6E2A               	movwf	_eusart1RxLastError^0,c	;volatile
  1305  000B12  0012               	return		;funcret
  1306  000B14                     __end_of_EUSART1_Initialize:
  1307                           	callstack 0
  1308                           
  1309 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1310 ;; Defined at:
  1311 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1314 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1326 ;;      Params:         2       0       0       0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1329 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 2
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_EUSART1_Initialize
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text11
  1341  000C50                     __ptext11:
  1342                           	callstack 0
  1343  000C50                     _EUSART1_SetOverrunErrorHandler:
  1344                           	callstack 26
  1345  000C50                     
  1346                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  1347  000C50  C04B  F023         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1348  000C54  C04C  F024         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1349  000C58  0012               	return		;funcret
  1350  000C5A                     __end_of_EUSART1_SetOverrunErrorHandler:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1354 ;; Defined at:
  1355 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1358 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         2       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        2 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 2
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_EUSART1_Initialize
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text12
  1385  000C5A                     __ptext12:
  1386                           	callstack 0
  1387  000C5A                     _EUSART1_SetFramingErrorHandler:
  1388                           	callstack 26
  1389  000C5A                     
  1390                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  1391  000C5A  C04B  F025         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1392  000C5E  C04C  F026         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1393  000C62  0012               	return		;funcret
  1394  000C64                     __end_of_EUSART1_SetFramingErrorHandler:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function _EUSART1_SetErrorHandler *****************
  1398 ;; Defined at:
  1399 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1402 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1414 ;;      Params:         2       0       0       0       0       0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1417 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1418 ;;Total ram usage:        2 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 2
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_EUSART1_Initialize
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text13
  1429  000C64                     __ptext13:
  1430                           	callstack 0
  1431  000C64                     _EUSART1_SetErrorHandler:
  1432                           	callstack 26
  1433  000C64                     
  1434                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  1435  000C64  C04B  F021         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1436  000C68  C04C  F022         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1437  000C6C  0012               	return		;funcret
  1438  000C6E                     __end_of_EUSART1_SetErrorHandler:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _CCP2_Initialize *****************
  1442 ;; Defined at:
  1443 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 2
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_SYSTEM_Initialize
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text14
  1472  000C42                     __ptext14:
  1473                           	callstack 0
  1474  000C42                     _CCP2_Initialize:
  1475                           	callstack 27
  1476  000C42                     
  1477                           ;ccp2.c: 53: CCP2CON = 0x00;
  1478  000C42  0E00               	movlw	0
  1479  000C44  6E97               	movwf	151,c	;volatile
  1480                           
  1481                           ;ccp2.c: 56: CCPR2L = 0x00;
  1482  000C46  0E00               	movlw	0
  1483  000C48  6E90               	movwf	144,c	;volatile
  1484                           
  1485                           ;ccp2.c: 59: CCPR2H = 0x00;
  1486  000C4A  0E00               	movlw	0
  1487  000C4C  6E91               	movwf	145,c	;volatile
  1488  000C4E  0012               	return		;funcret
  1489  000C50                     __end_of_CCP2_Initialize:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _ADC_Initialize *****************
  1493 ;; Defined at:
  1494 ;;		line 62 in file "mcc_generated_files/adc.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 2
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_SYSTEM_Initialize
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text15
  1523  000C2C                     __ptext15:
  1524                           	callstack 0
  1525  000C2C                     _ADC_Initialize:
  1526                           	callstack 27
  1527  000C2C                     
  1528                           ;adc.c: 67: ADCON1 = 0x00;
  1529  000C2C  0E00               	movlw	0
  1530  000C2E  6EC1               	movwf	193,c	;volatile
  1531                           
  1532                           ;adc.c: 70: ADCON2 = 0x87;
  1533  000C30  0E87               	movlw	135
  1534  000C32  6EC0               	movwf	192,c	;volatile
  1535                           
  1536                           ;adc.c: 73: ADRESL = 0x00;
  1537  000C34  0E00               	movlw	0
  1538  000C36  6EC3               	movwf	195,c	;volatile
  1539                           
  1540                           ;adc.c: 76: ADRESH = 0x00;
  1541  000C38  0E00               	movlw	0
  1542  000C3A  6EC4               	movwf	196,c	;volatile
  1543                           
  1544                           ;adc.c: 79: ADCON0 = 0x01;
  1545  000C3C  0E01               	movlw	1
  1546  000C3E  6EC2               	movwf	194,c	;volatile
  1547  000C40  0012               	return		;funcret
  1548  000C42                     __end_of_ADC_Initialize:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _INTERRUPT_InterruptManager *****************
  1552 ;; Defined at:
  1553 ;;		line 115 in file "main.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1567 ;;      Params:         0       0       0       0       0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1569 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1570 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1571 ;;Total ram usage:        2 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 1
  1574 ;; This function calls:
  1575 ;;		_EUSART1_Read
  1576 ;; This function is called by:
  1577 ;;		Interrupt level 2
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	intcode
  1582  000008                     __pintcode:
  1583                           	callstack 0
  1584  000008                     _INTERRUPT_InterruptManager:
  1585                           	callstack 26
  1586                           
  1587                           ;incstack = 0
  1588  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1589  00000A  CFD9 F049          	movff	fsr2l,??_INTERRUPT_InterruptManager
  1590  00000E  CFDA F04A          	movff	fsr2h,??_INTERRUPT_InterruptManager+1
  1591  000012                     
  1592                           ;main.c: 117: if (RCIF == 1)
  1593  000012  AA9E               	btfss	3998,5,c	;volatile
  1594  000014  EF0E  F000         	goto	i2u30_41
  1595  000018  EF10  F000         	goto	i2u30_40
  1596  00001C                     i2u30_41:
  1597  00001C  EF33  F000         	goto	i2l346
  1598  000020                     i2u30_40:
  1599  000020                     
  1600                           ;main.c: 118: {;main.c: 119: datorx = EUSART1_Read();
  1601  000020  ECDA  F005         	call	_EUSART1_Read	;wreg free
  1602  000024  6E28               	movwf	_datorx^0,c
  1603  000026                     
  1604                           ;main.c: 120: trama[puntero] = datorx;
  1605  000026  0E2B               	movlw	low _trama
  1606  000028  2429               	addwf	_puntero^0,w,c
  1607  00002A  6ED9               	movwf	fsr2l,c
  1608  00002C  6ADA               	clrf	fsr2h,c
  1609  00002E  0E00               	movlw	high _trama
  1610  000030  22DA               	addwfc	fsr2h,f,c
  1611  000032  C028  FFDF         	movff	_datorx,indf2
  1612  000036                     
  1613                           ;main.c: 121: puntero++;
  1614  000036  2A29               	incf	_puntero^0,f,c
  1615  000038                     
  1616                           ;main.c: 122: if(puntero >= 30) puntero = 0;
  1617  000038  0E1D               	movlw	29
  1618  00003A  6429               	cpfsgt	_puntero^0,c
  1619  00003C  EF22  F000         	goto	i2u31_41
  1620  000040  EF24  F000         	goto	i2u31_40
  1621  000044                     i2u31_41:
  1622  000044  EF26  F000         	goto	i2l1537
  1623  000048                     i2u31_40:
  1624  000048  0E00               	movlw	0
  1625  00004A  6E29               	movwf	_puntero^0,c
  1626  00004C                     i2l1537:
  1627                           
  1628                           ;main.c: 123: if(datorx == '/')
  1629  00004C  0E2F               	movlw	47
  1630  00004E  1828               	xorwf	_datorx^0,w,c
  1631  000050  A4D8               	btfss	status,2,c
  1632  000052  EF2D  F000         	goto	i2u32_41
  1633  000056  EF2F  F000         	goto	i2u32_40
  1634  00005A                     i2u32_41:
  1635  00005A  EF32  F000         	goto	i2l1543
  1636  00005E                     i2u32_40:
  1637  00005E                     
  1638                           ;main.c: 124: {;main.c: 125: RCIE = 0;
  1639  00005E  9A9D               	bcf	3997,5,c	;volatile
  1640  000060                     
  1641                           ;main.c: 126: flag_rx = 1;
  1642  000060  0E01               	movlw	1
  1643  000062  6E27               	movwf	_flag_rx^0,c
  1644  000064                     i2l1543:
  1645                           
  1646                           ;main.c: 127: };main.c: 128: RCIF = 0;
  1647  000064  9A9E               	bcf	3998,5,c	;volatile
  1648  000066                     i2l346:
  1649  000066  C04A  FFDA         	movff	??_INTERRUPT_InterruptManager+1,fsr2h
  1650  00006A  C049  FFD9         	movff	??_INTERRUPT_InterruptManager,fsr2l
  1651  00006E  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1652  000070  0011               	retfie		f
  1653  000072                     __end_of_INTERRUPT_InterruptManager:
  1654                           	callstack 0
  1655                           
  1656 ;; *************** function _EUSART1_Read *****************
  1657 ;; Defined at:
  1658 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      unsigned char 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1672 ;;      Params:         0       0       0       0       0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_INTERRUPT_InterruptManager
  1682 ;;		_getch
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text17
  1687  000BB4                     __ptext17:
  1688                           	callstack 0
  1689  000BB4                     _EUSART1_Read:
  1690                           	callstack 26
  1691  000BB4                     i2l60:
  1692  000BB4  AA9E               	btfss	158,5,c	;volatile
  1693  000BB6  EFDF  F005         	goto	i2u15_41
  1694  000BBA  EFE1  F005         	goto	i2u15_40
  1695  000BBE                     i2u15_41:
  1696  000BBE  EFDA  F005         	goto	i2l60
  1697  000BC2                     i2u15_40:
  1698  000BC2                     
  1699                           ;eusart1.c: 117: };eusart1.c: 119: eusart1RxLastError.status = 0;
  1700  000BC2  0E00               	movlw	0
  1701  000BC4  6E2A               	movwf	_eusart1RxLastError^0,c	;volatile
  1702  000BC6                     
  1703                           ;eusart1.c: 121: if(1 == RCSTA1bits.OERR)
  1704  000BC6  A2AB               	btfss	171,1,c	;volatile
  1705  000BC8  EFE8  F005         	goto	i2u16_41
  1706  000BCC  EFEA  F005         	goto	i2u16_40
  1707  000BD0                     i2u16_41:
  1708  000BD0  EFEC  F005         	goto	i2l1319
  1709  000BD4                     i2u16_40:
  1710  000BD4                     
  1711                           ;eusart1.c: 122: {;eusart1.c: 125: RCSTA1bits.CREN = 0;
  1712  000BD4  98AB               	bcf	171,4,c	;volatile
  1713                           
  1714                           ;eusart1.c: 126: RCSTA1bits.CREN = 1;
  1715  000BD6  88AB               	bsf	171,4,c	;volatile
  1716  000BD8                     i2l1319:
  1717                           
  1718                           ;eusart1.c: 127: };eusart1.c: 129: return RCREG1;
  1719  000BD8  50AE               	movf	174,w,c	;volatile
  1720  000BDA  0012               	return		;funcret
  1721  000BDC                     __end_of_EUSART1_Read:
  1722                           	callstack 0
  1723                           
  1724                           	psect	rparam
  1725  0000                     
  1726                           	psect	temp
  1727  00005C                     btemp:
  1728                           	callstack 0
  1729  00005C                     	ds	1
  1730  0000                     int$flags	set	btemp
  1731  0000                     wtemp8	set	btemp+1
  1732  0000                     ttemp5	set	btemp+1
  1733  0000                     ttemp6	set	btemp+4
  1734  0000                     ttemp7	set	btemp+8
  1735                           
  1736                           	psect	idloc
  1737                           
  1738                           ;Config register IDLOC0 @ 0x200000
  1739                           ;	unspecified, using default values
  1740  200000                     	org	2097152
  1741  200000  FF                 	db	255
  1742                           
  1743                           ;Config register IDLOC1 @ 0x200001
  1744                           ;	unspecified, using default values
  1745  200001                     	org	2097153
  1746  200001  FF                 	db	255
  1747                           
  1748                           ;Config register IDLOC2 @ 0x200002
  1749                           ;	unspecified, using default values
  1750  200002                     	org	2097154
  1751  200002  FF                 	db	255
  1752                           
  1753                           ;Config register IDLOC3 @ 0x200003
  1754                           ;	unspecified, using default values
  1755  200003                     	org	2097155
  1756  200003  FF                 	db	255
  1757                           
  1758                           ;Config register IDLOC4 @ 0x200004
  1759                           ;	unspecified, using default values
  1760  200004                     	org	2097156
  1761  200004  FF                 	db	255
  1762                           
  1763                           ;Config register IDLOC5 @ 0x200005
  1764                           ;	unspecified, using default values
  1765  200005                     	org	2097157
  1766  200005  FF                 	db	255
  1767                           
  1768                           ;Config register IDLOC6 @ 0x200006
  1769                           ;	unspecified, using default values
  1770  200006                     	org	2097158
  1771  200006  FF                 	db	255
  1772                           
  1773                           ;Config register IDLOC7 @ 0x200007
  1774                           ;	unspecified, using default values
  1775  200007                     	org	2097159
  1776  200007  FF                 	db	255
  1777                           
  1778                           	psect	config
  1779                           
  1780                           ;Config register CONFIG1L @ 0x300000
  1781                           ;	PLL Selection
  1782                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1783                           ;	PLL Enable Configuration bit
  1784                           ;	CFGPLLEN = ON, PLL Enabled
  1785                           ;	CPU System Clock Postscaler
  1786                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1787                           ;	Low Speed USB mode with 48 MHz system clock
  1788                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1789  300000                     	org	3145728
  1790  300000  23                 	db	35
  1791                           
  1792                           ;Config register CONFIG1H @ 0x300001
  1793                           ;	Oscillator Selection
  1794                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  1795                           ;	Primary Oscillator Shutdown
  1796                           ;	PCLKEN = ON, Primary oscillator enabled
  1797                           ;	Fail-Safe Clock Monitor
  1798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1799                           ;	Internal/External Oscillator Switchover
  1800                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1801  300001                     	org	3145729
  1802  300001  22                 	db	34
  1803                           
  1804                           ;Config register CONFIG2L @ 0x300002
  1805                           ;	Power-up Timer Enable
  1806                           ;	nPWRTEN = ON, Power up timer enabled
  1807                           ;	Brown-out Reset Enable
  1808                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1809                           ;	Brown-out Reset Voltage
  1810                           ;	BORV = 190, BOR set to 1.9V nominal
  1811                           ;	Low-Power Brown-out Reset
  1812                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1813  300002                     	org	3145730
  1814  300002  5E                 	db	94
  1815                           
  1816                           ;Config register CONFIG2H @ 0x300003
  1817                           ;	Watchdog Timer Enable bits
  1818                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1819                           ;	Watchdog Timer Postscaler
  1820                           ;	WDTPS = 32768, 1:32768
  1821  300003                     	org	3145731
  1822  300003  3C                 	db	60
  1823                           
  1824                           ; Padding undefined space
  1825  300004                     	org	3145732
  1826  300004  FF                 	db	255
  1827                           
  1828                           ;Config register CONFIG3H @ 0x300005
  1829                           ;	CCP2 MUX bit
  1830                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1831                           ;	PORTB A/D Enable bit
  1832                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1833                           ;	Timer3 Clock Input MUX bit
  1834                           ;	T3CMX = RC0, T3CKI function is on RC0
  1835                           ;	SDO Output MUX bit
  1836                           ;	SDOMX = RB3, SDO function is on RB3
  1837                           ;	Master Clear Reset Pin Enable
  1838                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1839  300005                     	org	3145733
  1840  300005  D1                 	db	209
  1841                           
  1842                           ;Config register CONFIG4L @ 0x300006
  1843                           ;	Stack Full/Underflow Reset
  1844                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1845                           ;	Single-Supply ICSP Enable bit
  1846                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1847                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1848                           ;	ICPRT = OFF, ICPORT disabled
  1849                           ;	Extended Instruction Set Enable bit
  1850                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1851                           ;	Background Debugger Enable bit
  1852                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1853  300006                     	org	3145734
  1854  300006  85                 	db	133
  1855                           
  1856                           ; Padding undefined space
  1857  300007                     	org	3145735
  1858  300007  FF                 	db	255
  1859                           
  1860                           ;Config register CONFIG5L @ 0x300008
  1861                           ;	Block 0 Code Protect
  1862                           ;	CP0 = OFF, Block 0 is not code-protected
  1863                           ;	Block 1 Code Protect
  1864                           ;	CP1 = OFF, Block 1 is not code-protected
  1865                           ;	Block 2 Code Protect
  1866                           ;	CP2 = OFF, Block 2 is not code-protected
  1867                           ;	Block 3 Code Protect
  1868                           ;	CP3 = OFF, Block 3 is not code-protected
  1869  300008                     	org	3145736
  1870  300008  0F                 	db	15
  1871                           
  1872                           ;Config register CONFIG5H @ 0x300009
  1873                           ;	Boot Block Code Protect
  1874                           ;	CPB = OFF, Boot block is not code-protected
  1875                           ;	Data EEPROM Code Protect
  1876                           ;	CPD = OFF, Data EEPROM is not code-protected
  1877  300009                     	org	3145737
  1878  300009  C0                 	db	192
  1879                           
  1880                           ;Config register CONFIG6L @ 0x30000A
  1881                           ;	Block 0 Write Protect
  1882                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1883                           ;	Block 1 Write Protect
  1884                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1885                           ;	Block 2 Write Protect
  1886                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1887                           ;	Block 3 Write Protect
  1888                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1889  30000A                     	org	3145738
  1890  30000A  0F                 	db	15
  1891                           
  1892                           ;Config register CONFIG6H @ 0x30000B
  1893                           ;	Configuration Registers Write Protect
  1894                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1895                           ;	Boot Block Write Protect
  1896                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1897                           ;	Data EEPROM Write Protect
  1898                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1899  30000B                     	org	3145739
  1900  30000B  E0                 	db	224
  1901                           
  1902                           ;Config register CONFIG7L @ 0x30000C
  1903                           ;	Block 0 Table Read Protect
  1904                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1905                           ;	Block 1 Table Read Protect
  1906                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1907                           ;	Block 2 Table Read Protect
  1908                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1909                           ;	Block 3 Table Read Protect
  1910                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1911  30000C                     	org	3145740
  1912  30000C  0F                 	db	15
  1913                           
  1914                           ;Config register CONFIG7H @ 0x30000D
  1915                           ;	Boot Block Table Read Protect
  1916                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1917  30000D                     	org	3145741
  1918  30000D  40                 	db	64
  1919                           tosu	equ	0xFFF
  1920                           tosh	equ	0xFFE
  1921                           tosl	equ	0xFFD
  1922                           stkptr	equ	0xFFC
  1923                           pclatu	equ	0xFFB
  1924                           pclath	equ	0xFFA
  1925                           pcl	equ	0xFF9
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           prodh	equ	0xFF4
  1931                           prodl	equ	0xFF3
  1932                           indf0	equ	0xFEF
  1933                           postinc0	equ	0xFEE
  1934                           postdec0	equ	0xFED
  1935                           preinc0	equ	0xFEC
  1936                           plusw0	equ	0xFEB
  1937                           fsr0h	equ	0xFEA
  1938                           fsr0l	equ	0xFE9
  1939                           wreg	equ	0xFE8
  1940                           indf1	equ	0xFE7
  1941                           postinc1	equ	0xFE6
  1942                           postdec1	equ	0xFE5
  1943                           preinc1	equ	0xFE4
  1944                           plusw1	equ	0xFE3
  1945                           fsr1h	equ	0xFE2
  1946                           fsr1l	equ	0xFE1
  1947                           bsr	equ	0xFE0
  1948                           indf2	equ	0xFDF
  1949                           postinc2	equ	0xFDE
  1950                           postdec2	equ	0xFDD
  1951                           preinc2	equ	0xFDC
  1952                           plusw2	equ	0xFDB
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      91
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[3]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[3]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[3]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[6]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[3]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[6]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    memset@p1	PTR void  size(2) Largest target is 30
		 -> trama(COMRAM[30]), 

    memset@p	PTR unsigned char  size(2) Largest target is 30
		 -> trama(COMRAM[30]), 

    sp__memset	PTR void  size(2) Largest target is 30
		 -> trama(COMRAM[30]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_procesarx
    _procesarx->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2171
                  _SYSTEM_Initialize
                             _memset
                          _procesarx
 ---------------------------------------------------------------------------------
 (1) _procesarx                                            2     2      0    1553
                                             17 COMRAM     2     2      0
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               4     0      4    1553
                                             13 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6     362
                                              6 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     240
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     324
                                              2 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                    _CCP2_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _memset
   _procesarx
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      5B       1       96.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B       6        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 28 16:06:00 2022

                                            l43 0B12                                              l91 0C58  
                                            l94 0C6C                                              l88 0C62  
                                           l120 0BEC                                             l123 0BFA  
                                           l117 0C2A                                             l150 0BB2  
                                           l162 0C4E                                             l181 0C40  
                                           l338 08EC                                             _GIE 007F97  
                                           u110 0BFA                                             u111 0BF6  
                                           u400 092C                                             u401 0928  
                                           u410 0972                                             u411 096E  
                                           u340 0B40                                             u420 098A  
                                           u341 0B3C                                             u421 0986  
                                           u350 09B0                                             u430 0842  
                                           u351 09AC                                             u431 083E  
                                           u360 09D8                                             u440 0868  
                                           u361 09D4                                             u441 0864  
                                           u370 0A20                                             u450 08AA  
                                           u371 0A1C                                             u507 08DC  
                                           u451 08A6                                             u380 0AA4  
                                           u460 08D0                                             u381 0AA0  
                                           u461 08CC                                             u470 0B84  
                                           u390 0ACC                                             u471 0B80  
                                           u391 0AC8                                             u480 0A56  
                                           u481 0A52                                             u497 0874  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1023 0B84                                            l1041 0A8A  
                                          l1050 0B4C                                            l1043 0AD4  
                                          l1035 0992                                            l1058 0A28  
                                          l1251 0B86                                            l1253 0BB0  
                                          l1255 0BDC                                            l1257 0C42  
                                          l1601 09FE                                            l1259 0C2C  
                                          l1611 0AA4                                            l1603 0A06  
                                          l1621 0AD6                                            l1605 0A20  
                                          l1701 0A5A                                            l1623 0AEA  
                                          l1615 0AB0                                            l1631 08EE  
                                          l1703 0A5E                                            l1625 0AF6  
                                          l1617 0ACC                                            l1609 0A8A  
                                          l1633 08F2                                            l1641 0960  
                                          l1705 0A7A                                            l1627 0B02  
                                          l1651 0C26                                            l1643 0972  
                                          l1635 092C                                            l1707 0A7E  
                                          l1629 0B0E                                            l1581 0B14  
                                          l1645 098A                                            l1661 0882  
                                          l1653 081C                                            l1709 0A80  
                                          l1575 0C5A                                            l1583 0B20  
                                          l1591 0994                                            l1639 0938  
                                          l1671 08EA                                            l1655 0842  
                                          l1663 0884                                            l1577 0C50  
                                          l1649 0C16                                            l1673 0B4E  
                                          l1585 0B24                                            l1593 0998  
                                          l1665 08AA                                            l1657 0868  
                                          l1681 0A2A                                            l1579 0C64  
                                          l1675 0B5A                                            l1587 0B40  
                                          l1595 09B0                                            l1667 08D0  
                                          l1659 086A                                            l1691 0A40  
                                          l1683 0A2E                                            l1677 0B66  
                                          l1597 09D8                                            l1669 08D2  
                                          l1693 0A42                                            l1685 0A34  
                                          l1679 0B6A                                            l1695 0A44  
                                          l1687 0A38                                            l1697 0A46  
                                          l1689 0A3C                                            l1699 0A56  
                                          STR_1 080B                                            STR_2 0817  
                                          STR_3 0811                                            STR_4 0817  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _RCIE 007CED  
                                          _RCIF 007CF5                                            i2l60 0BB4  
                                          i2l64 0BDA                                            _WPUB 000F85  
                       __end_of_CCP2_Initialize 0C50                                            _main 0A2A  
                                 ?_EUSART1_Read 0049                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr2l 000FD9  
                                          btemp 005C                                            start 0072  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 0020  
                 __end_of_OSCILLATOR_Initialize 0BFC                                           ?_main 0049  
                                         _LATB0 007C50                                           _LATA5 007C4D  
                                         i2l346 0066                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _trama 002B                                           tablat 000FF5  
                                ??_EUSART1_Read 0049                                           ttemp5 005D  
                                         ttemp6 0060                                           ttemp7 0064  
                                         status 000FD8                                           wtemp8 005D  
                               __end_of_strncmp 0A2A              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 0BFC                      __end_of_EUSART1_Initialize 0B14  
                                  __end_of_main 0A8A                     ?_INTERRUPT_InterruptManager 0049  
                                        ??_main 005C                                   __activetblptr 000002  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          _ACTCON 000FB5  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _CCPR2H 000F91                                          _CCPR2L 000F90  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                            __end_of_direccion_rx 0806  
                          __end_of_direccion_tx 080B                                          i2l1311 0BB4  
                                        i2l1313 0BC2                                          i2l1315 0BC6  
                                        i2l1317 0BD4                                          i2l1319 0BD8  
                                        i2l1531 0036                                          i2l1541 0060  
                                        i2l1533 0038                                          i2l1525 0012  
                                        i2l1543 0064                                          i2l1535 0048  
                                        i2l1527 0020                                          i2l1537 004C  
                                        i2l1529 0026                                          i2l1539 005E  
                                        _INTCON 000FF2                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                              ?_CCP2_Initialize 0049                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                          _datorx 0028  
                      ?_EUSART1_SetErrorHandler 004B                                          _memset 0B4E  
                                        clear_0 0C02                                          isa$std 000001  
              ??_EUSART1_SetOverrunErrorHandler 004D                 ?_EUSART1_SetOverrunErrorHandler 004B  
                                        _strchr 0A8A                                          _strlen 0B14  
                                        _strstr 08EE                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ??_strncmp 0055  
                             _SYSTEM_Initialize 0C16                                      __accesstop 0060  
                       __end_of__initialization 0C08                              ?_SYSTEM_Initialize 0049  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0049  
                           ??_SYSTEM_Initialize 004D                            __end_of_EUSART1_Read 0BDC  
                     __end_of_SYSTEM_Initialize 0C2C                 __end_of_EUSART1_SetErrorHandler 0C6E  
                                       _CCP2CON 000F97                                         ?_memset 004B  
                       __size_of_ADC_Initialize 0016                                         ?_strchr 004B  
                                       ?_strlen 004B          __end_of_EUSART1_SetFramingErrorHandler 0C64  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0C5A  
                                       ?_strstr 0056                              __size_of_procesarx 00D2  
                                       _OSCCON2 000FD2                                         i2u30_40 0020  
                                       i2u30_41 001C                                         i2u15_40 0BC2  
                                       i2u31_40 0048                                         i2u15_41 0BBE  
                                       i2u31_41 0044                                         i2u16_40 0BD4  
                                       i2u32_40 005E                                         i2u16_41 0BD0  
                                       i2u32_41 005A                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                            _ADC_InterruptHandler 001F  
                                       __Hparam 0000                                         __Lparam 0000  
                                  __psmallconst 0800                                    _direccion_rx 0801  
                                  _direccion_tx 0806                                         __pcinit 0BFC  
                               __size_of_memset 0038                                         __ramtop 0800  
                                       __ptext0 0A2A                                         _flag_rx 0027  
                                       __ptext1 081C                                         __ptext2 08EE  
                                       __ptext3 0994                                         __ptext4 0B14  
                                       __ptext5 0A8A                                         __ptext6 0B4E  
                                       __ptext7 0C16                                         __ptext8 0B86  
                                       __ptext9 0BDC                                 __size_of_strchr 004C  
                               __size_of_strlen 003A                                 __size_of_strstr 00A6  
                         _OSCILLATOR_Initialize 0BDC                              _EUSART1_Initialize 0AD6  
                      ??_PIN_MANAGER_Initialize 004B                                         _procesa 0001  
                                       _puntero 0029                      __size_of_SYSTEM_Initialize 0016  
                                       _strncmp 0994                            end_of_initialization 0C08  
                           ?_EUSART1_Initialize 0049                                         memset@c 004D  
                                       memset@n 004F                                         memset@p 0051  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0023  
                             __end_of_procesarx 08EE                                         postinc0 000FEE  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                          ??_EUSART1_Initialize 004D                                         strlen@s 004B  
                                     _PORTBbits 000F81                                       _TRISBbits 000F93  
                                     _TRISCbits 000F94                __size_of_EUSART1_SetErrorHandler 000A  
                                  _EUSART1_Read 0BB4                        __size_of_CCP2_Initialize 000E  
                                _ADC_Initialize 0C2C                          ?_OSCILLATOR_Initialize 0049  
                                __end_of_memset 0B86                                  __end_of_strchr 0AD6  
                                __end_of_strlen 0B4E                                  __end_of_strstr 0994  
                           start_initialization 0BFC                 __size_of_PIN_MANAGER_Initialize 002E  
                        __end_of_ADC_Initialize 0C42                                        ??_memset 0051  
                                      ??_strchr 004F                                        ??_strlen 004D  
                                      ??_strstr 005A                                     __pbssCOMRAM 0001  
              ??_EUSART1_SetFramingErrorHandler 004D                 ?_EUSART1_SetFramingErrorHandler 004B  
                        _PIN_MANAGER_Initialize 0B86                                       __pintcode 0008  
                               ?_ADC_Initialize 0049                    ??_INTERRUPT_InterruptManager 0049  
                                   __smallconst 0800                               ??_CCP2_Initialize 004B  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 0021                         _EUSART1_SetErrorHandler 0C64  
                                      ?_strncmp 004F         EUSART1_SetErrorHandler@interruptHandler 004B  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
           __size_of_INTERRUPT_InterruptManager 006A                                        _PIR1bits 000F9E  
                                     _procesarx 081C                                      _ADCON0bits 000FC2  
                                   _INTCON2bits 000FF1                                        __Hrparam 0000  
                                      __Lrparam 0000                         ??_OSCILLATOR_Initialize 004B  
                                    ?_procesarx 0049                     __size_of_EUSART1_Initialize 003E  
                     ??_EUSART1_SetErrorHandler 004D                     _EUSART1_DefaultErrorHandler 000000  
                                      __ptext10 0AD6                                        __ptext11 0C50  
                                      __ptext12 0C5A                                        __ptext13 0C64  
                                      __ptext14 0C42                                        __ptext15 0C2C  
                                      __ptext17 0BB4                                __size_of_strncmp 0096  
                                 __size_of_main 0060                                      strncmp@len 0053  
EUSART1_SetOverrunErrorHandler@interruptHandler 004B                                        isa$xinst 000000  
                                      int$flags 005C              __end_of_INTERRUPT_InterruptManager 0072  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 0025  
                                    _INTCONbits 000FF2                                        memset@p1 004B  
                                      intlevel2 0000                                       strchr@chr 004D  
                                     strchr@ptr 004B                         ?_PIN_MANAGER_Initialize 0049  
        __end_of_EUSART1_SetOverrunErrorHandler 0C5A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 0C50                                      _RCSTA1bits 000FAB  
                                     strncmp@s1 004F                                       strncmp@s2 0051  
                              ??_ADC_Initialize 004B                                 _CCP2_Initialize 0C42  
EUSART1_SetFramingErrorHandler@interruptHandler 004B                                     ??_procesarx 005A  
                            _eusart1RxLastError 002A                                        strlen@cp 004D  
                                      strstr@s1 0056                                        strstr@s2 0058  
                __end_of_PIN_MANAGER_Initialize 0BB4  
