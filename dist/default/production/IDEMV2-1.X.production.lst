

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 05 19:41:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F25K50 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    72  0000                     
    73 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    74  0000                     
    75 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    76  0000                     
    77                           	psect	smallconst
    78  000800                     __psmallconst:
    79                           	callstack 0
    80  000800  00                 	db	0
    81  000801                     _direccion_rx:
    82                           	callstack 0
    83  000801  11                 	db	17
    84  000802  11                 	db	17
    85  000803  11                 	db	17
    86  000804  11                 	db	17
    87  000805  11                 	db	17
    88  000806                     __end_of_direccion_rx:
    89                           	callstack 0
    90  000806                     _direccion_tx:
    91                           	callstack 0
    92  000806  11                 	db	17
    93  000807  11                 	db	17
    94  000808  11                 	db	17
    95  000809  11                 	db	17
    96  00080A  11                 	db	17
    97  00080B                     __end_of_direccion_tx:
    98                           	callstack 0
    99  0000                     _ANSELA	set	3931
   100  0000                     _ANSELB	set	3932
   101  0000                     _ANSELC	set	3933
   102  0000                     _PORTBbits	set	3969
   103  0000                     _LATCbits	set	3979
   104  0000                     _LATBbits	set	3978
   105  0000                     _TRISBbits	set	3987
   106  0000                     _TRISCbits	set	3988
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _ADCON0	set	4034
   109  0000                     _ADRESH	set	4036
   110  0000                     _ADRESL	set	4035
   111  0000                     _ADCON2	set	4032
   112  0000                     _ADCON1	set	4033
   113  0000                     _CCPR2H	set	3985
   114  0000                     _CCPR2L	set	3984
   115  0000                     _CCP2CON	set	3991
   116  0000                     _INTCONbits	set	4082
   117  0000                     _INTCON2bits	set	4081
   118  0000                     _WPUB	set	3973
   119  0000                     _TRISC	set	3988
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISA	set	3986
   122  0000                     _LATC	set	3979
   123  0000                     _LATB	set	3978
   124  0000                     _LATA	set	3977
   125  0000                     _ACTCON	set	4021
   126  0000                     _OSCTUNE	set	3995
   127  0000                     _OSCCON2	set	4050
   128  0000                     _OSCCON	set	4051
   129  0000                     _TXREG1	set	4013
   130  0000                     _RCREG1	set	4014
   131  0000                     _RCSTA1bits	set	4011
   132  0000                     _TXSTA1bits	set	4012
   133  0000                     _PIR1bits	set	3998
   134  0000                     _SPBRGH1	set	4016
   135  0000                     _SPBRG1	set	4015
   136  0000                     _TXSTA1	set	4012
   137  0000                     _RCSTA1	set	4011
   138  0000                     _BAUDCON1	set	4024
   139  0000                     _LATA5	set	31821
   140  0000                     _LATB0	set	31824
   141  0000                     _PLLRDY	set	32407
   142  00080B                     STR_1:
   143  00080B  63                 	db	99	;'c'
   144  00080C  69                 	db	105	;'i'
   145  00080D  65                 	db	101	;'e'
   146  00080E  72                 	db	114	;'r'
   147  00080F  3D                 	db	61	;'='
   148  000810  00                 	db	0
   149  000811                     STR_5:
   150  000811  61                 	db	97	;'a'
   151  000812  70                 	db	112	;'p'
   152  000813  65                 	db	101	;'e'
   153  000814  72                 	db	114	;'r'
   154  000815  3D                 	db	61	;'='
   155  000816  00                 	db	0
   156  000817                     STR_3:
   157  000817  6F                 	db	111	;'o'
   158  000818  6E                 	db	110	;'n'
   159  000819  00                 	db	0
   160  00081A  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  000A6E                     __pcinit:
   166                           	callstack 0
   167  000A6E                     start_initialization:
   168                           	callstack 0
   169  000A6E                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Clear objects allocated to BANK0 (30 bytes)
   173  000A6E  EE00  F060         	lfsr	0,__pbssBANK0
   174  000A72  0E1E               	movlw	30
   175  000A74                     clear_0:
   176  000A74  6AEE               	clrf	postinc0,c
   177  000A76  06E8               	decf	wreg,f,c
   178  000A78  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   181  000A7A  6A4D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   182                           
   183                           ; Clear objects allocated to COMRAM (65 bytes)
   184  000A7C  EE00  F001         	lfsr	0,__pbssCOMRAM
   185  000A80  0E41               	movlw	65
   186  000A82                     clear_1:
   187  000A82  6AEE               	clrf	postinc0,c
   188  000A84  06E8               	decf	wreg,f,c
   189  000A86  E1FD               	bnz	clear_1
   190  000A88                     end_of_initialization:
   191                           	callstack 0
   192  000A88                     __end_of__initialization:
   193                           	callstack 0
   194  000A88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195  000A8A  6EF8               	movwf	tblptru,c
   196  000A8C  0100               	movlb	0
   197  000A8E  EF0E  F004         	goto	_main	;jump to C main() function
   198                           
   199                           	psect	bitbssCOMRAM
   200  000268                     __pbitbssCOMRAM:
   201                           	callstack 0
   202  000268                     _on:
   203                           	callstack 0
   204  000268                     	ds	1
   205                           
   206                           	psect	bssCOMRAM
   207  000001                     __pbssCOMRAM:
   208                           	callstack 0
   209  000001                     _texto:
   210                           	callstack 0
   211  000001                     	ds	20
   212  000015                     _valor:
   213                           	callstack 0
   214  000015                     	ds	2
   215  000017                     _ADC_InterruptHandler:
   216                           	callstack 0
   217  000017                     	ds	2
   218  000019                     _EUSART1_ErrorHandler:
   219                           	callstack 0
   220  000019                     	ds	2
   221  00001B                     _EUSART1_OverrunErrorHandler:
   222                           	callstack 0
   223  00001B                     	ds	2
   224  00001D                     _EUSART1_FramingErrorHandler:
   225                           	callstack 0
   226  00001D                     	ds	2
   227  00001F                     _flag_rx:
   228                           	callstack 0
   229  00001F                     	ds	1
   230  000020                     _datorx:
   231                           	callstack 0
   232  000020                     	ds	1
   233  000021                     _puntero:
   234                           	callstack 0
   235  000021                     	ds	1
   236  000022                     _dato_serial:
   237                           	callstack 0
   238  000022                     	ds	1
   239  000023                     _eusart1RxLastError:
   240                           	callstack 0
   241  000023                     	ds	1
   242  000024                     _trama:
   243                           	callstack 0
   244  000024                     	ds	30
   245                           
   246                           	psect	bssBANK0
   247  000060                     __pbssBANK0:
   248                           	callstack 0
   249  000060                     _procesa:
   250                           	callstack 0
   251  000060                     	ds	30
   252                           
   253                           	psect	cstackCOMRAM
   254  000042                     __pcstackCOMRAM:
   255                           	callstack 0
   256  000042                     ?_ADC_GetConversion:
   257                           	callstack 0
   258  000042                     spi_s_read@dato_:
   259                           	callstack 0
   260  000042                     spi_s_write@dato_:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x0
   264  000042                     	ds	1
   265  000043                     spi_s_read@cont_s:
   266                           	callstack 0
   267  000043                     spi_s_write@cont_s:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x1
   271  000043                     	ds	1
   272  000044                     ??_ADC_GetConversion:
   273  000044                     nrf2401_write@valor:
   274                           	callstack 0
   275  000044                     nrf2401_comando@comando:
   276                           	callstack 0
   277  000044                     nrf2401_read@reg:
   278                           	callstack 0
   279  000044                     nrf2401_recibe@valor_:
   280                           	callstack 0
   281  000044                     nrf2401_direccion_TX_RX@direccion_:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285  000044                     	ds	1
   286  000045                     nrf2401_write@reg:
   287                           	callstack 0
   288  000045                     nrf2401_read@dato_:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x3
   292  000045                     	ds	1
   293  000046                     ADC_GetConversion@channel:
   294                           	callstack 0
   295  000046                     nrf2401_direccion_TX_RX@registro:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x4
   299  000046                     	ds	1
   300  000047                     ??_nrf2401_direccion_TX_RX:
   301                           
   302                           ; 1 bytes @ 0x5
   303  000047                     	ds	2
   304  000049                     nrf2401_direccion_TX_RX@cont_s:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x7
   308  000049                     	ds	1
   309  00004A                     nrF2401_init_RX@canal:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x8
   313  00004A                     	ds	1
   314  00004B                     ??_main:
   315                           
   316                           ; 1 bytes @ 0x9
   317  00004B                     	ds	2
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 145 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0
   340 ;;      Temps:          2       0       0       0       0       0       0       0       0
   341 ;;      Totals:         2       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels required when called: 4
   344 ;; This function calls:
   345 ;;		_ADC_GetConversion
   346 ;;		_SYSTEM_Initialize
   347 ;;		_nrF2401_init_RX
   348 ;;		_nrf2401_haydatos
   349 ;;		_nrf2401_recibe
   350 ;;		_spi_s_init
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357  00081C                     __ptext0:
   358                           	callstack 0
   359  00081C                     _main:
   360                           	callstack 27
   361  00081C                     
   362                           ;main.c: 148:     SYSTEM_Initialize();
   363  00081C  ECBD  F005         	call	_SYSTEM_Initialize	;wreg free
   364  000820                     
   365                           ;main.c: 167:     ANSELA = 0b00000111;
   366  000820  0E07               	movlw	7
   367  000822  010F               	movlb	15	; () banked
   368  000824  6F5B               	movwf	91,b	;volatile
   369  000826                     
   370                           ; BSR set to: 15
   371                           ;main.c: 168:     ANSELB = 0b00000000;
   372  000826  0E00               	movlw	0
   373  000828  6F5C               	movwf	92,b	;volatile
   374  00082A                     
   375                           ; BSR set to: 15
   376                           ;main.c: 169:     ANSELC = 0x00;
   377  00082A  0E00               	movlw	0
   378  00082C  6F5D               	movwf	93,b	;volatile
   379  00082E                     
   380                           ; BSR set to: 15
   381                           ;main.c: 176:     LATA5 = 1;
   382  00082E  8A89               	bsf	3977,5,c	;volatile
   383  000830                     
   384                           ; BSR set to: 15
   385                           ;main.c: 177:     _delay((unsigned long)((2000)*(48000000/4000.0)));
   386  000830  0E7A               	movlw	122
   387  000832  6E4C               	movwf	(??_main+1)^0,c
   388  000834  0EC1               	movlw	193
   389  000836  6E4B               	movwf	??_main^0,c
   390  000838  0E82               	movlw	130
   391  00083A                     u307:
   392  00083A  2EE8               	decfsz	wreg,f,c
   393  00083C  D7FE               	bra	u307
   394  00083E  2E4B               	decfsz	??_main^0,f,c
   395  000840  D7FC               	bra	u307
   396  000842  2E4C               	decfsz	(??_main+1)^0,f,c
   397  000844  D7FA               	bra	u307
   398  000846                     
   399                           ;main.c: 178:     LATA5 = 0;
   400  000846  9A89               	bcf	3977,5,c	;volatile
   401  000848                     
   402                           ;main.c: 181:     spi_s_init();
   403  000848  EC9D  F005         	call	_spi_s_init	;wreg free
   404  00084C                     
   405                           ;main.c: 183:     nrF2401_init_RX(17);
   406  00084C  0E11               	movlw	17
   407  00084E  EC5B  F004         	call	_nrF2401_init_RX
   408  000852                     l1532:
   409                           
   410                           ;main.c: 187:     {;main.c: 190:         valor = ADC_GetConversion(0);
   411  000852  0E00               	movlw	0
   412  000854  EC03  F005         	call	_ADC_GetConversion
   413  000858  C042  F015         	movff	?_ADC_GetConversion,_valor
   414  00085C  C043  F016         	movff	?_ADC_GetConversion+1,_valor+1
   415  000860                     
   416                           ;main.c: 192:         if(nrf2401_haydatos() == 1)
   417  000860  EC59  F005         	call	_nrf2401_haydatos	;wreg free
   418  000864  06E8               	decf	wreg,f,c
   419  000866  A4D8               	btfss	status,2,c
   420  000868  EF38  F004         	goto	u281
   421  00086C  EF3A  F004         	goto	u280
   422  000870                     u281:
   423  000870  EF4B  F004         	goto	l1542
   424  000874                     u280:
   425  000874                     
   426                           ;main.c: 193:         {;main.c: 194:             dato_serial = nrf2401_recibe();
   427  000874  EC84  F005         	call	_nrf2401_recibe	;wreg free
   428  000878  6E22               	movwf	_dato_serial^0,c
   429  00087A                     
   430                           ;main.c: 195:             if (dato_serial == 1)
   431  00087A  0422               	decf	_dato_serial^0,w,c
   432  00087C  A4D8               	btfss	status,2,c
   433  00087E  EF43  F004         	goto	u291
   434  000882  EF45  F004         	goto	u290
   435  000886                     u291:
   436  000886  EF49  F004         	goto	l343
   437  00088A                     u290:
   438  00088A                     
   439                           ;main.c: 196:             {;main.c: 197:                 on = 1;
   440  00088A  804D               	bsf	(_on/(0+8))^0,_on& (0+7),c
   441                           
   442                           ;main.c: 198:                 LATA5 = on;
   443  00088C  8A89               	bsf	3977,5,c	;volatile
   444                           
   445                           ;main.c: 199:             }
   446  00088E  EF4B  F004         	goto	l1542
   447  000892                     l343:
   448                           
   449                           ;main.c: 201:             {;main.c: 202:                 on = 0;
   450  000892  904D               	bcf	(_on/(0+8))^0,_on& (0+7),c
   451                           
   452                           ;main.c: 203:                 LATA5 = 0;
   453  000894  9A89               	bcf	3977,5,c	;volatile
   454  000896                     l1542:
   455                           
   456                           ;main.c: 207:         _delay((unsigned long)((100)*(48000000/4000.0)));
   457  000896  0E07               	movlw	7
   458  000898  6E4C               	movwf	(??_main+1)^0,c
   459  00089A  0E17               	movlw	23
   460  00089C  6E4B               	movwf	??_main^0,c
   461  00089E  0E6A               	movlw	106
   462  0008A0                     u317:
   463  0008A0  2EE8               	decfsz	wreg,f,c
   464  0008A2  D7FE               	bra	u317
   465  0008A4  2E4B               	decfsz	??_main^0,f,c
   466  0008A6  D7FC               	bra	u317
   467  0008A8  2E4C               	decfsz	(??_main+1)^0,f,c
   468  0008AA  D7FA               	bra	u317
   469  0008AC  D000               	nop2	
   470  0008AE  EF29  F004         	goto	l1532
   471  0008B2  EF00  F000         	goto	start
   472  0008B6                     __end_of_main:
   473                           	callstack 0
   474                           
   475 ;; *************** function _spi_s_init *****************
   476 ;; Defined at:
   477 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		None
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   491 ;;      Params:         0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  000B3A                     __ptext1:
   506                           	callstack 0
   507  000B3A                     _spi_s_init:
   508                           	callstack 30
   509  000B3A                     
   510                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
   511  000B3A  9294               	bcf	148,1,c	;volatile
   512                           
   513                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
   514  000B3C  9493               	bcf	147,2,c	;volatile
   515                           
   516                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
   517  000B3E  9494               	bcf	148,2,c	;volatile
   518                           
   519                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
   520  000B40  8693               	bsf	147,3,c	;volatile
   521                           
   522                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
   523  000B42  9293               	bcf	147,1,c	;volatile
   524                           
   525                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
   526  000B44  8094               	bsf	148,0,c	;volatile
   527                           
   528                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
   529  000B46  948A               	bcf	138,2,c	;volatile
   530                           
   531                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
   532  000B48  948B               	bcf	139,2,c	;volatile
   533                           
   534                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
   535  000B4A  928B               	bcf	139,1,c	;volatile
   536                           
   537                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
   538  000B4C  928A               	bcf	138,1,c	;volatile
   539  000B4E  0012               	return		;funcret
   540  000B50                     __end_of_spi_s_init:
   541                           	callstack 0
   542                           
   543 ;; *************** function _nrf2401_recibe *****************
   544 ;; Defined at:
   545 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  valor_          1    2[COMRAM] unsigned char 
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      unsigned char 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   559 ;;      Params:         0       0       0       0       0       0       0       0       0
   560 ;;      Locals:         1       0       0       0       0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0       0       0
   562 ;;      Totals:         1       0       0       0       0       0       0       0       0
   563 ;;Total ram usage:        1 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; Hardware stack levels required when called: 1
   566 ;; This function calls:
   567 ;;		_spi_s_read
   568 ;;		_spi_s_write
   569 ;; This function is called by:
   570 ;;		_main
   571 ;;		_nrf2401_recibe_Text
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text2
   576  000B08                     __ptext2:
   577                           	callstack 0
   578  000B08                     _nrf2401_recibe:
   579                           	callstack 29
   580  000B08                     
   581                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
   582  000B08  948B               	bcf	139,2,c	;volatile
   583  000B0A                     
   584                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
   585  000B0A  0E61               	movlw	97
   586  000B0C  EC99  F004         	call	_spi_s_write
   587                           
   588                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
   589  000B10  ECBD  F004         	call	_spi_s_read	;wreg free
   590  000B14  6E44               	movwf	nrf2401_recibe@valor_^0,c
   591  000B16                     
   592                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
   593  000B16  848B               	bsf	139,2,c	;volatile
   594  000B18                     
   595                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   596  000B18  0E14               	movlw	20
   597  000B1A                     u327:
   598  000B1A  2EE8               	decfsz	wreg,f,c
   599  000B1C  D7FE               	bra	u327
   600  000B1E                     
   601                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
   602  000B1E  5044               	movf	nrf2401_recibe@valor_^0,w,c
   603  000B20  0012               	return		;funcret
   604  000B22                     __end_of_nrf2401_recibe:
   605                           	callstack 0
   606                           
   607 ;; *************** function _nrf2401_haydatos *****************
   608 ;; Defined at:
   609 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      unsigned char 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   623 ;;      Params:         0       0       0       0       0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 3
   630 ;; This function calls:
   631 ;;		_get_Status
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text3
   638  000AB2                     __ptext3:
   639                           	callstack 0
   640  000AB2                     _nrf2401_haydatos:
   641                           	callstack 27
   642  000AB2                     
   643                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
   644  000AB2  ECCD  F005         	call	_get_Status	;wreg free
   645  000AB6  0A40               	xorlw	64
   646  000AB8  A4D8               	btfss	status,2,c
   647  000ABA  EF61  F005         	goto	u111
   648  000ABE  EF63  F005         	goto	u110
   649  000AC2                     u111:
   650  000AC2  EF66  F005         	goto	l1260
   651  000AC6                     u110:
   652  000AC6  0E01               	movlw	1
   653  000AC8  EF67  F005         	goto	l301
   654  000ACC                     l1260:
   655  000ACC  0E00               	movlw	0
   656  000ACE                     l301:
   657  000ACE  0012               	return		;funcret
   658  000AD0                     __end_of_nrf2401_haydatos:
   659                           	callstack 0
   660                           
   661 ;; *************** function _get_Status *****************
   662 ;; Defined at:
   663 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      unsigned char 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   677 ;;      Params:         0       0       0       0       0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; Hardware stack levels required when called: 2
   684 ;; This function calls:
   685 ;;		_nrf2401_read
   686 ;; This function is called by:
   687 ;;		_nrf2401_haydatos
   688 ;;		_nrf2401_recibe_Text
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text4
   693  000B9A                     __ptext4:
   694                           	callstack 0
   695  000B9A                     _get_Status:
   696                           	callstack 27
   697  000B9A                     
   698                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
   699  000B9A  0E07               	movlw	7
   700  000B9C  EC68  F005         	call	_nrf2401_read
   701  000BA0  0012               	return		;funcret
   702  000BA2                     __end_of_get_Status:
   703                           	callstack 0
   704                           
   705 ;; *************** function _nrf2401_read *****************
   706 ;; Defined at:
   707 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  reg             1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  reg             1    2[COMRAM] unsigned char 
   712 ;;  dato_           1    3[COMRAM] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      unsigned char 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   722 ;;      Params:         0       0       0       0       0       0       0       0       0
   723 ;;      Locals:         2       0       0       0       0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0
   725 ;;      Totals:         2       0       0       0       0       0       0       0       0
   726 ;;Total ram usage:        2 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 1
   729 ;; This function calls:
   730 ;;		_spi_s_read
   731 ;;		_spi_s_write
   732 ;; This function is called by:
   733 ;;		_get_Status
   734 ;;		_get_fifo_status
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text5
   739  000AD0                     __ptext5:
   740                           	callstack 0
   741  000AD0                     _nrf2401_read:
   742                           	callstack 27
   743                           
   744                           ;incstack = 0
   745                           ;nrf2401_read@reg stored from wreg
   746  000AD0  6E44               	movwf	nrf2401_read@reg^0,c
   747  000AD2                     
   748                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
   749  000AD2  948B               	bcf	139,2,c	;volatile
   750  000AD4                     
   751                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
   752  000AD4  5044               	movf	nrf2401_read@reg^0,w,c
   753  000AD6  EC99  F004         	call	_spi_s_write
   754  000ADA                     
   755                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
   756  000ADA  ECBD  F004         	call	_spi_s_read	;wreg free
   757  000ADE  6E45               	movwf	nrf2401_read@dato_^0,c
   758  000AE0                     
   759                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
   760  000AE0  848B               	bsf	139,2,c	;volatile
   761  000AE2                     
   762                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   763  000AE2  0E14               	movlw	20
   764  000AE4                     u337:
   765  000AE4  2EE8               	decfsz	wreg,f,c
   766  000AE6  D7FE               	bra	u337
   767                           
   768                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
   769  000AE8  5045               	movf	nrf2401_read@dato_^0,w,c
   770  000AEA  0012               	return		;funcret
   771  000AEC                     __end_of_nrf2401_read:
   772                           	callstack 0
   773                           
   774 ;; *************** function _spi_s_read *****************
   775 ;; Defined at:
   776 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  cont_s          1    1[COMRAM] unsigned char 
   781 ;;  dato_           1    0[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      unsigned char 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   791 ;;      Params:         0       0       0       0       0       0       0       0       0
   792 ;;      Locals:         2       0       0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0
   794 ;;      Totals:         2       0       0       0       0       0       0       0       0
   795 ;;Total ram usage:        2 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_nrf2401_read
   801 ;;		_nrf2401_recibe
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text6
   806  00097A                     __ptext6:
   807                           	callstack 0
   808  00097A                     _spi_s_read:
   809                           	callstack 29
   810  00097A                     
   811                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
   812  00097A  0E00               	movlw	0
   813  00097C  6E43               	movwf	spi_s_read@cont_s^0,c
   814                           
   815                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
   816  00097E  0E00               	movlw	0
   817  000980  6E42               	movwf	spi_s_read@dato_^0,c
   818                           
   819                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
   820  000982  0E00               	movlw	0
   821  000984  6E43               	movwf	spi_s_read@cont_s^0,c
   822  000986                     l1066:
   823                           
   824                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
   825  000986  90D8               	bcf	status,0,c
   826  000988  3642               	rlcf	spi_s_read@dato_^0,f,c
   827  00098A                     
   828                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
   829  00098A  848A               	bsf	138,2,c	;volatile
   830  00098C                     
   831                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
   832  00098C  0E04               	movlw	4
   833  00098E                     u347:
   834  00098E  2EE8               	decfsz	wreg,f,c
   835  000990  D7FE               	bra	u347
   836  000992                     
   837                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
   838  000992  A681               	btfss	129,3,c	;volatile
   839  000994  EFCE  F004         	goto	u11
   840  000998  EFD0  F004         	goto	u10
   841  00099C                     u11:
   842  00099C  EFD1  F004         	goto	l1076
   843  0009A0                     u10:
   844  0009A0                     
   845                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
   846  0009A0  8042               	bsf	spi_s_read@dato_^0,0,c
   847  0009A2                     l1076:
   848                           
   849                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
   850  0009A2  948A               	bcf	138,2,c	;volatile
   851  0009A4                     
   852                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
   853  0009A4  0E04               	movlw	4
   854  0009A6                     u357:
   855  0009A6  2EE8               	decfsz	wreg,f,c
   856  0009A8  D7FE               	bra	u357
   857  0009AA                     
   858                           ;./Librerias/nRF24L01_2.h: 57:     }
   859  0009AA  2A43               	incf	spi_s_read@cont_s^0,f,c
   860  0009AC  0E07               	movlw	7
   861  0009AE  6443               	cpfsgt	spi_s_read@cont_s^0,c
   862  0009B0  EFDC  F004         	goto	u21
   863  0009B4  EFDE  F004         	goto	u20
   864  0009B8                     u21:
   865  0009B8  EFC3  F004         	goto	l1066
   866  0009BC                     u20:
   867  0009BC                     
   868                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
   869  0009BC  5042               	movf	spi_s_read@dato_^0,w,c
   870  0009BE  0012               	return		;funcret
   871  0009C0                     __end_of_spi_s_read:
   872                           	callstack 0
   873                           
   874 ;; *************** function _nrF2401_init_RX *****************
   875 ;; Defined at:
   876 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  canal           1    wreg     unsigned char 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  canal           1    8[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         0       0       0       0       0       0       0       0       0
   891 ;;      Locals:         1       0       0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0
   893 ;;      Totals:         1       0       0       0       0       0       0       0       0
   894 ;;Total ram usage:        1 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 3
   897 ;; This function calls:
   898 ;;		_flush_TX_RX
   899 ;;		_nrf2401_direccion_TX_RX
   900 ;;		_nrf2401_write
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text7
   907  0008B6                     __ptext7:
   908                           	callstack 0
   909  0008B6                     _nrF2401_init_RX:
   910                           	callstack 27
   911                           
   912                           ;incstack = 0
   913                           ;nrF2401_init_RX@canal stored from wreg
   914  0008B6  6E4A               	movwf	nrF2401_init_RX@canal^0,c
   915  0008B8                     
   916                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
   917  0008B8  928A               	bcf	138,1,c	;volatile
   918  0008BA                     
   919                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
   920  0008BA  0E0C               	movlw	12
   921  0008BC  6E44               	movwf	nrf2401_write@valor^0,c
   922  0008BE  0E00               	movlw	0
   923  0008C0  EC76  F005         	call	_nrf2401_write
   924                           
   925                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
   926  0008C4  0E00               	movlw	0
   927  0008C6  6E44               	movwf	nrf2401_write@valor^0,c
   928  0008C8  0E04               	movlw	4
   929  0008CA  EC76  F005         	call	_nrf2401_write
   930                           
   931                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
   932  0008CE  0E03               	movlw	3
   933  0008D0  6E44               	movwf	nrf2401_write@valor^0,c
   934  0008D2  0E03               	movlw	3
   935  0008D4  EC76  F005         	call	_nrf2401_write
   936                           
   937                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x08 + 0x06);
   938  0008D8  0E0E               	movlw	14
   939  0008DA  6E44               	movwf	nrf2401_write@valor^0,c
   940  0008DC  0E06               	movlw	6
   941  0008DE  EC76  F005         	call	_nrf2401_write
   942                           
   943                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
   944  0008E2  C04A  F044         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
   945  0008E6  0E05               	movlw	5
   946  0008E8  EC76  F005         	call	_nrf2401_write
   947                           
   948                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
   949  0008EC  0E00               	movlw	0
   950  0008EE  6E44               	movwf	nrf2401_write@valor^0,c
   951  0008F0  0E01               	movlw	1
   952  0008F2  EC76  F005         	call	_nrf2401_write
   953                           
   954                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
   955  0008F6  0E01               	movlw	1
   956  0008F8  6E44               	movwf	nrf2401_write@valor^0,c
   957  0008FA  0E11               	movlw	17
   958  0008FC  EC76  F005         	call	_nrf2401_write
   959                           
   960                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
   961  000900  0E0F               	movlw	15
   962  000902  6E44               	movwf	nrf2401_write@valor^0,c
   963  000904  0E00               	movlw	0
   964  000906  EC76  F005         	call	_nrf2401_write
   965  00090A                     
   966                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
   967  00090A  0E06               	movlw	low _direccion_tx
   968  00090C  6E44               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   969  00090E  0E08               	movlw	high _direccion_tx
   970  000910  6E45               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   971  000912  0E10               	movlw	16
   972  000914  6E46               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   973  000916  ECE0  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   974  00091A                     
   975                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
   976  00091A  0E06               	movlw	low _direccion_tx
   977  00091C  6E44               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   978  00091E  0E08               	movlw	high _direccion_tx
   979  000920  6E45               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   980  000922  0E0A               	movlw	10
   981  000924  6E46               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   982  000926  ECE0  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   983                           
   984                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
   985  00092A  EC91  F005         	call	_flush_TX_RX	;wreg free
   986  00092E                     
   987                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
   988  00092E  828A               	bsf	138,1,c	;volatile
   989  000930  0012               	return		;funcret
   990  000932                     __end_of_nrF2401_init_RX:
   991                           	callstack 0
   992                           
   993 ;; *************** function _nrf2401_direccion_TX_RX *****************
   994 ;; Defined at:
   995 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  direccion_      2    2[COMRAM] PTR const unsigned char 
   998 ;;		 -> direccion_tx(5), 
   999 ;;  registro        1    4[COMRAM] unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  cont_s          1    7[COMRAM] unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1011 ;;      Params:         3       0       0       0       0       0       0       0       0
  1012 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1013 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1014 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1015 ;;Total ram usage:        6 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 1
  1018 ;; This function calls:
  1019 ;;		_spi_s_write
  1020 ;; This function is called by:
  1021 ;;		_nrF2401_init_RX
  1022 ;;		_nrF2401_init_TX
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text8
  1027  0009C0                     __ptext8:
  1028                           	callstack 0
  1029  0009C0                     _nrf2401_direccion_TX_RX:
  1030                           	callstack 28
  1031  0009C0                     
  1032                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
  1033  0009C0  948B               	bcf	139,2,c	;volatile
  1034  0009C2                     
  1035                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
  1036  0009C2  5046               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
  1037  0009C4  0920               	iorlw	32
  1038  0009C6  EC99  F004         	call	_spi_s_write
  1039  0009CA                     
  1040                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
  1041  0009CA  0E00               	movlw	0
  1042  0009CC  6E49               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
  1043  0009CE                     l1426:
  1044                           
  1045                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
  1046  0009CE  5049               	movf	nrf2401_direccion_TX_RX@cont_s^0,w,c
  1047  0009D0  2444               	addwf	nrf2401_direccion_TX_RX@direccion_^0,w,c
  1048  0009D2  6E47               	movwf	??_nrf2401_direccion_TX_RX^0,c
  1049  0009D4  0E00               	movlw	0
  1050  0009D6  2045               	addwfc	(nrf2401_direccion_TX_RX@direccion_+1)^0,w,c
  1051  0009D8  6E48               	movwf	(??_nrf2401_direccion_TX_RX+1)^0,c
  1052  0009DA  C047  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
  1053  0009DE  C048  FFF7         	movff	??_nrf2401_direccion_TX_RX+1,tblptrh
  1054  0009E2                     	if	0	;tblptru may be non-zero
  1055  0009E2                     	endif
  1056  0009E2                     	if	0	;tblptru may be non-zero
  1057  0009E2                     	endif
  1058  0009E2  0008               	tblrd		*
  1059  0009E4  50F5               	movf	tablat,w,c
  1060  0009E6  EC99  F004         	call	_spi_s_write
  1061  0009EA                     
  1062                           ;./Librerias/nRF24L01_2.h: 120:     }
  1063  0009EA  2A49               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
  1064  0009EC  0E04               	movlw	4
  1065  0009EE  6449               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
  1066  0009F0  EFFC  F004         	goto	u231
  1067  0009F4  EFFE  F004         	goto	u230
  1068  0009F8                     u231:
  1069  0009F8  EFE7  F004         	goto	l1426
  1070  0009FC                     u230:
  1071  0009FC                     
  1072                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
  1073  0009FC  848B               	bsf	139,2,c	;volatile
  1074  0009FE                     
  1075                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1076  0009FE  0E14               	movlw	20
  1077  000A00                     u367:
  1078  000A00  2EE8               	decfsz	wreg,f,c
  1079  000A02  D7FE               	bra	u367
  1080  000A04  0012               	return		;funcret
  1081  000A06                     __end_of_nrf2401_direccion_TX_RX:
  1082                           	callstack 0
  1083                           
  1084 ;; *************** function _flush_TX_RX *****************
  1085 ;; Defined at:
  1086 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1100 ;;      Params:         0       0       0       0       0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; Hardware stack levels required when called: 2
  1107 ;; This function calls:
  1108 ;;		_nrf2401_comando
  1109 ;;		_nrf2401_write
  1110 ;; This function is called by:
  1111 ;;		_nrF2401_init_RX
  1112 ;;		_nrF2401_init_TX
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text9
  1117  000B22                     __ptext9:
  1118                           	callstack 0
  1119  000B22                     _flush_TX_RX:
  1120                           	callstack 27
  1121  000B22                     
  1122                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
  1123  000B22  0E70               	movlw	112
  1124  000B24  6E44               	movwf	nrf2401_write@valor^0,c
  1125  000B26  0E07               	movlw	7
  1126  000B28  EC76  F005         	call	_nrf2401_write
  1127                           
  1128                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
  1129  000B2C  0EE1               	movlw	225
  1130  000B2E  ECB3  F005         	call	_nrf2401_comando
  1131                           
  1132                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
  1133  000B32  0EE2               	movlw	226
  1134  000B34  ECB3  F005         	call	_nrf2401_comando
  1135  000B38  0012               	return		;funcret
  1136  000B3A                     __end_of_flush_TX_RX:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _nrf2401_write *****************
  1140 ;; Defined at:
  1141 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  reg             1    wreg     unsigned char 
  1144 ;;  valor           1    2[COMRAM] unsigned char 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  reg             1    3[COMRAM] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         1       0       0       0       0       0       0       0       0
  1157 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1159 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1160 ;;Total ram usage:        2 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 1
  1163 ;; This function calls:
  1164 ;;		_spi_s_write
  1165 ;; This function is called by:
  1166 ;;		_flush_TX_RX
  1167 ;;		_nrF2401_init_RX
  1168 ;;		_flush_RX
  1169 ;;		_flush_TX
  1170 ;;		_nrf2401_envia
  1171 ;;		_nrF2401_init_TX
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text10
  1176  000AEC                     __ptext10:
  1177                           	callstack 0
  1178  000AEC                     _nrf2401_write:
  1179                           	callstack 28
  1180                           
  1181                           ;incstack = 0
  1182                           ;nrf2401_write@reg stored from wreg
  1183  000AEC  6E45               	movwf	nrf2401_write@reg^0,c
  1184  000AEE                     
  1185                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
  1186  000AEE  948B               	bcf	139,2,c	;volatile
  1187  000AF0                     
  1188                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
  1189  000AF0  5045               	movf	nrf2401_write@reg^0,w,c
  1190  000AF2  0920               	iorlw	32
  1191  000AF4  EC99  F004         	call	_spi_s_write
  1192                           
  1193                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
  1194  000AF8  5044               	movf	nrf2401_write@valor^0,w,c
  1195  000AFA  EC99  F004         	call	_spi_s_write
  1196  000AFE                     
  1197                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
  1198  000AFE  848B               	bsf	139,2,c	;volatile
  1199  000B00                     
  1200                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1201  000B00  0E14               	movlw	20
  1202  000B02                     u377:
  1203  000B02  2EE8               	decfsz	wreg,f,c
  1204  000B04  D7FE               	bra	u377
  1205  000B06  0012               	return		;funcret
  1206  000B08                     __end_of_nrf2401_write:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _nrf2401_comando *****************
  1210 ;; Defined at:
  1211 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  comando         1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  comando         1    2[COMRAM] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0
  1226 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1228 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1229 ;;Total ram usage:        1 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 1
  1232 ;; This function calls:
  1233 ;;		_spi_s_write
  1234 ;; This function is called by:
  1235 ;;		_flush_TX_RX
  1236 ;;		_flush_RX
  1237 ;;		_flush_TX
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text11
  1242  000B66                     __ptext11:
  1243                           	callstack 0
  1244  000B66                     _nrf2401_comando:
  1245                           	callstack 27
  1246                           
  1247                           ;incstack = 0
  1248                           ;nrf2401_comando@comando stored from wreg
  1249  000B66  6E44               	movwf	nrf2401_comando@comando^0,c
  1250  000B68                     
  1251                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  1252  000B68  948B               	bcf	139,2,c	;volatile
  1253  000B6A                     
  1254                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  1255  000B6A  5044               	movf	nrf2401_comando@comando^0,w,c
  1256  000B6C  EC99  F004         	call	_spi_s_write
  1257  000B70                     
  1258                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  1259  000B70  848B               	bsf	139,2,c	;volatile
  1260  000B72                     
  1261                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1262  000B72  0E14               	movlw	20
  1263  000B74                     u387:
  1264  000B74  2EE8               	decfsz	wreg,f,c
  1265  000B76  D7FE               	bra	u387
  1266  000B78  0012               	return		;funcret
  1267  000B7A                     __end_of_nrf2401_comando:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _spi_s_write *****************
  1271 ;; Defined at:
  1272 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  dato_           1    wreg     unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  dato_           1    0[COMRAM] unsigned char 
  1277 ;;  cont_s          1    1[COMRAM] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1287 ;;      Params:         0       0       0       0       0       0       0       0       0
  1288 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1290 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_nrf2401_write
  1297 ;;		_nrf2401_comando
  1298 ;;		_nrf2401_read
  1299 ;;		_nrf2401_direccion_TX_RX
  1300 ;;		_nrf2401_recibe
  1301 ;;		_nrf2401_envia
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text12
  1306  000932                     __ptext12:
  1307                           	callstack 0
  1308  000932                     _spi_s_write:
  1309                           	callstack 29
  1310                           
  1311                           ;incstack = 0
  1312                           ;spi_s_write@dato_ stored from wreg
  1313  000932  6E42               	movwf	spi_s_write@dato_^0,c
  1314  000934                     
  1315                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  1316  000934  0E00               	movlw	0
  1317  000936  6E43               	movwf	spi_s_write@cont_s^0,c
  1318                           
  1319                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  1320  000938  0E00               	movlw	0
  1321  00093A  6E43               	movwf	spi_s_write@cont_s^0,c
  1322  00093C                     l246:
  1323                           
  1324                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  1325  00093C  AE42               	btfss	spi_s_write@dato_^0,7,c
  1326  00093E  EFA3  F004         	goto	u31
  1327  000942  EFA5  F004         	goto	u30
  1328  000946                     u31:
  1329  000946  EFA8  F004         	goto	l248
  1330  00094A                     u30:
  1331  00094A  828B               	bsf	139,1,c	;volatile
  1332  00094C  EFA9  F004         	goto	l1096
  1333  000950                     l248:
  1334  000950  928B               	bcf	139,1,c	;volatile
  1335  000952                     l1096:
  1336                           
  1337                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  1338  000952  90D8               	bcf	status,0,c
  1339  000954  3642               	rlcf	spi_s_write@dato_^0,f,c
  1340  000956                     
  1341                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  1342  000956  848A               	bsf	138,2,c	;volatile
  1343  000958                     
  1344                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1345  000958  0E14               	movlw	20
  1346  00095A                     u397:
  1347  00095A  2EE8               	decfsz	wreg,f,c
  1348  00095C  D7FE               	bra	u397
  1349  00095E                     
  1350                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  1351  00095E  948A               	bcf	138,2,c	;volatile
  1352  000960                     
  1353                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1354  000960  0E14               	movlw	20
  1355  000962                     u407:
  1356  000962  2EE8               	decfsz	wreg,f,c
  1357  000964  D7FE               	bra	u407
  1358  000966                     
  1359                           ;./Librerias/nRF24L01_2.h: 76:     }
  1360  000966  2A43               	incf	spi_s_write@cont_s^0,f,c
  1361  000968  0E07               	movlw	7
  1362  00096A  6443               	cpfsgt	spi_s_write@cont_s^0,c
  1363  00096C  EFBA  F004         	goto	u41
  1364  000970  EFBC  F004         	goto	u40
  1365  000974                     u41:
  1366  000974  EF9E  F004         	goto	l246
  1367  000978                     u40:
  1368  000978  0012               	return		;funcret
  1369  00097A                     __end_of_spi_s_write:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _SYSTEM_Initialize *****************
  1373 ;; Defined at:
  1374 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 1
  1395 ;; This function calls:
  1396 ;;		_ADC_Initialize
  1397 ;;		_CCP2_Initialize
  1398 ;;		_OSCILLATOR_Initialize
  1399 ;;		_PIN_MANAGER_Initialize
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text13
  1406  000B7A                     __ptext13:
  1407                           	callstack 0
  1408  000B7A                     _SYSTEM_Initialize:
  1409                           	callstack 29
  1410  000B7A                     
  1411                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1412  000B7A  EC20  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1413                           
  1414                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1415  000B7E  EC49  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1416                           
  1417                           ;mcc_generated_files/mcc.c: 55:     CCP2_Initialize();
  1418  000B82  ECC6  F005         	call	_CCP2_Initialize	;wreg free
  1419                           
  1420                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  1421  000B86  ECA8  F005         	call	_ADC_Initialize	;wreg free
  1422  000B8A  0012               	return		;funcret
  1423  000B8C                     __end_of_SYSTEM_Initialize:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _PIN_MANAGER_Initialize *****************
  1427 ;; Defined at:
  1428 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_SYSTEM_Initialize
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text14
  1456  000A40                     __ptext14:
  1457                           	callstack 0
  1458  000A40                     _PIN_MANAGER_Initialize:
  1459                           	callstack 29
  1460  000A40                     
  1461                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1462  000A40  0E00               	movlw	0
  1463  000A42  6E89               	movwf	137,c	;volatile
  1464                           
  1465                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1466  000A44  0E00               	movlw	0
  1467  000A46  6E8A               	movwf	138,c	;volatile
  1468                           
  1469                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1470  000A48  0E00               	movlw	0
  1471  000A4A  6E8B               	movwf	139,c	;volatile
  1472                           
  1473                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
  1474  000A4C  0EC7               	movlw	199
  1475  000A4E  6E92               	movwf	146,c	;volatile
  1476                           
  1477                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
  1478  000A50  0EFE               	movlw	254
  1479  000A52  6E93               	movwf	147,c	;volatile
  1480                           
  1481                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
  1482  000A54  0E87               	movlw	135
  1483  000A56  6E94               	movwf	148,c	;volatile
  1484                           
  1485                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  1486  000A58  0E04               	movlw	4
  1487  000A5A  010F               	movlb	15	; () banked
  1488  000A5C  6F5D               	movwf	93,b	;volatile
  1489                           
  1490                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  1491  000A5E  0E3E               	movlw	62
  1492  000A60  6F5C               	movwf	92,b	;volatile
  1493                           
  1494                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  1495  000A62  0E07               	movlw	7
  1496  000A64  6F5B               	movwf	91,b	;volatile
  1497                           
  1498                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1499  000A66  0E00               	movlw	0
  1500  000A68  6E85               	movwf	133,c	;volatile
  1501  000A6A                     
  1502                           ; BSR set to: 15
  1503                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1504  000A6A  8EF1               	bsf	241,7,c	;volatile
  1505  000A6C                     
  1506                           ; BSR set to: 15
  1507  000A6C  0012               	return		;funcret
  1508  000A6E                     __end_of_PIN_MANAGER_Initialize:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _OSCILLATOR_Initialize *****************
  1512 ;; Defined at:
  1513 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1530 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_SYSTEM_Initialize
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text15
  1541  000A92                     __ptext15:
  1542                           	callstack 0
  1543  000A92                     _OSCILLATOR_Initialize:
  1544                           	callstack 29
  1545  000A92                     
  1546                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  1547  000A92  0E70               	movlw	112
  1548  000A94  6ED3               	movwf	211,c	;volatile
  1549                           
  1550                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  1551  000A96  0E00               	movlw	0
  1552  000A98  6ED2               	movwf	210,c	;volatile
  1553                           
  1554                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x80;
  1555  000A9A  0E80               	movlw	128
  1556  000A9C  6E9B               	movwf	155,c	;volatile
  1557                           
  1558                           ;mcc_generated_files/mcc.c: 69:     ACTCON = 0x00;
  1559  000A9E  0E00               	movlw	0
  1560  000AA0  6EB5               	movwf	181,c	;volatile
  1561  000AA2                     l118:
  1562                           
  1563                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  1564  000AA2  AED2               	btfss	4050,7,c	;volatile
  1565  000AA4  EF56  F005         	goto	u51
  1566  000AA8  EF58  F005         	goto	u50
  1567  000AAC                     u51:
  1568  000AAC  EF51  F005         	goto	l118
  1569  000AB0                     u50:
  1570  000AB0  0012               	return		;funcret
  1571  000AB2                     __end_of_OSCILLATOR_Initialize:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _CCP2_Initialize *****************
  1575 ;; Defined at:
  1576 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1590 ;;      Params:         0       0       0       0       0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1593 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1594 ;;Total ram usage:        0 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_SYSTEM_Initialize
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text16
  1604  000B8C                     __ptext16:
  1605                           	callstack 0
  1606  000B8C                     _CCP2_Initialize:
  1607                           	callstack 29
  1608  000B8C                     
  1609                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  1610  000B8C  0E00               	movlw	0
  1611  000B8E  6E97               	movwf	151,c	;volatile
  1612                           
  1613                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  1614  000B90  0E00               	movlw	0
  1615  000B92  6E90               	movwf	144,c	;volatile
  1616                           
  1617                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  1618  000B94  0E00               	movlw	0
  1619  000B96  6E91               	movwf	145,c	;volatile
  1620  000B98  0012               	return		;funcret
  1621  000B9A                     __end_of_CCP2_Initialize:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _ADC_Initialize *****************
  1625 ;; Defined at:
  1626 ;;		line 62 in file "mcc_generated_files/adc.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_SYSTEM_Initialize
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text17
  1654  000B50                     __ptext17:
  1655                           	callstack 0
  1656  000B50                     _ADC_Initialize:
  1657                           	callstack 29
  1658  000B50                     
  1659                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1660  000B50  0E00               	movlw	0
  1661  000B52  6EC1               	movwf	193,c	;volatile
  1662                           
  1663                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
  1664  000B54  0E87               	movlw	135
  1665  000B56  6EC0               	movwf	192,c	;volatile
  1666                           
  1667                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1668  000B58  0E00               	movlw	0
  1669  000B5A  6EC3               	movwf	195,c	;volatile
  1670                           
  1671                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1672  000B5C  0E00               	movlw	0
  1673  000B5E  6EC4               	movwf	196,c	;volatile
  1674                           
  1675                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  1676  000B60  0E01               	movlw	1
  1677  000B62  6EC2               	movwf	194,c	;volatile
  1678  000B64  0012               	return		;funcret
  1679  000B66                     __end_of_ADC_Initialize:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _ADC_GetConversion *****************
  1683 ;; Defined at:
  1684 ;;		line 110 in file "mcc_generated_files/adc.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  channel         1    wreg     enum E4598
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  channel         1    4[COMRAM] enum E4598
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2    0[COMRAM] unsigned short 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1698 ;;      Params:         2       0       0       0       0       0       0       0       0
  1699 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1700 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1701 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1702 ;;Total ram usage:        5 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text18
  1712  000A06                     __ptext18:
  1713                           	callstack 0
  1714  000A06                     _ADC_GetConversion:
  1715                           	callstack 30
  1716                           
  1717                           ;incstack = 0
  1718                           ;ADC_GetConversion@channel stored from wreg
  1719  000A06  6E46               	movwf	ADC_GetConversion@channel^0,c
  1720  000A08                     
  1721                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  1722  000A08  C046  F044         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1723  000A0C  4644               	rlncf	??_ADC_GetConversion^0,f,c
  1724  000A0E  4644               	rlncf	??_ADC_GetConversion^0,f,c
  1725  000A10  50C2               	movf	194,w,c	;volatile
  1726  000A12  1844               	xorwf	??_ADC_GetConversion^0,w,c
  1727  000A14  0B83               	andlw	-125
  1728  000A16  1844               	xorwf	??_ADC_GetConversion^0,w,c
  1729  000A18  6EC2               	movwf	194,c	;volatile
  1730  000A1A                     
  1731                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  1732  000A1A  80C2               	bsf	194,0,c	;volatile
  1733  000A1C                     
  1734                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  1735  000A1C  82C2               	bsf	194,1,c	;volatile
  1736  000A1E                     l194:
  1737                           
  1738                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  1739  000A1E  B2C2               	btfsc	194,1,c	;volatile
  1740  000A20  EF14  F005         	goto	u241
  1741  000A24  EF16  F005         	goto	u240
  1742  000A28                     u241:
  1743  000A28  EF0F  F005         	goto	l194
  1744  000A2C                     u240:
  1745  000A2C                     
  1746                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1747  000A2C  50C4               	movf	196,w,c	;volatile
  1748  000A2E  6E45               	movwf	(??_ADC_GetConversion+1)^0,c
  1749  000A30  6A44               	clrf	??_ADC_GetConversion^0,c
  1750  000A32  50C3               	movf	195,w,c	;volatile
  1751  000A34  2444               	addwf	??_ADC_GetConversion^0,w,c
  1752  000A36  6E42               	movwf	?_ADC_GetConversion^0,c
  1753  000A38  0E00               	movlw	0
  1754  000A3A  2045               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  1755  000A3C  6E43               	movwf	(?_ADC_GetConversion+1)^0,c
  1756  000A3E  0012               	return		;funcret
  1757  000A40                     __end_of_ADC_GetConversion:
  1758                           	callstack 0
  1759                           
  1760                           	psect	rparam
  1761  0000                     
  1762                           	psect	idloc
  1763                           
  1764                           ;Config register IDLOC0 @ 0x200000
  1765                           ;	unspecified, using default values
  1766  200000                     	org	2097152
  1767  200000  FF                 	db	255
  1768                           
  1769                           ;Config register IDLOC1 @ 0x200001
  1770                           ;	unspecified, using default values
  1771  200001                     	org	2097153
  1772  200001  FF                 	db	255
  1773                           
  1774                           ;Config register IDLOC2 @ 0x200002
  1775                           ;	unspecified, using default values
  1776  200002                     	org	2097154
  1777  200002  FF                 	db	255
  1778                           
  1779                           ;Config register IDLOC3 @ 0x200003
  1780                           ;	unspecified, using default values
  1781  200003                     	org	2097155
  1782  200003  FF                 	db	255
  1783                           
  1784                           ;Config register IDLOC4 @ 0x200004
  1785                           ;	unspecified, using default values
  1786  200004                     	org	2097156
  1787  200004  FF                 	db	255
  1788                           
  1789                           ;Config register IDLOC5 @ 0x200005
  1790                           ;	unspecified, using default values
  1791  200005                     	org	2097157
  1792  200005  FF                 	db	255
  1793                           
  1794                           ;Config register IDLOC6 @ 0x200006
  1795                           ;	unspecified, using default values
  1796  200006                     	org	2097158
  1797  200006  FF                 	db	255
  1798                           
  1799                           ;Config register IDLOC7 @ 0x200007
  1800                           ;	unspecified, using default values
  1801  200007                     	org	2097159
  1802  200007  FF                 	db	255
  1803                           
  1804                           	psect	config
  1805                           
  1806                           ;Config register CONFIG1L @ 0x300000
  1807                           ;	PLL Selection
  1808                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1809                           ;	PLL Enable Configuration bit
  1810                           ;	CFGPLLEN = ON, PLL Enabled
  1811                           ;	CPU System Clock Postscaler
  1812                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1813                           ;	Low Speed USB mode with 48 MHz system clock
  1814                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1815  300000                     	org	3145728
  1816  300000  23                 	db	35
  1817                           
  1818                           ;Config register CONFIG1H @ 0x300001
  1819                           ;	Oscillator Selection
  1820                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  1821                           ;	Primary Oscillator Shutdown
  1822                           ;	PCLKEN = ON, Primary oscillator enabled
  1823                           ;	Fail-Safe Clock Monitor
  1824                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1825                           ;	Internal/External Oscillator Switchover
  1826                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1827  300001                     	org	3145729
  1828  300001  22                 	db	34
  1829                           
  1830                           ;Config register CONFIG2L @ 0x300002
  1831                           ;	Power-up Timer Enable
  1832                           ;	nPWRTEN = ON, Power up timer enabled
  1833                           ;	Brown-out Reset Enable
  1834                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1835                           ;	Brown-out Reset Voltage
  1836                           ;	BORV = 190, BOR set to 1.9V nominal
  1837                           ;	Low-Power Brown-out Reset
  1838                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1839  300002                     	org	3145730
  1840  300002  5E                 	db	94
  1841                           
  1842                           ;Config register CONFIG2H @ 0x300003
  1843                           ;	Watchdog Timer Enable bits
  1844                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1845                           ;	Watchdog Timer Postscaler
  1846                           ;	WDTPS = 32768, 1:32768
  1847  300003                     	org	3145731
  1848  300003  3C                 	db	60
  1849                           
  1850                           ; Padding undefined space
  1851  300004                     	org	3145732
  1852  300004  FF                 	db	255
  1853                           
  1854                           ;Config register CONFIG3H @ 0x300005
  1855                           ;	CCP2 MUX bit
  1856                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1857                           ;	PORTB A/D Enable bit
  1858                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1859                           ;	Timer3 Clock Input MUX bit
  1860                           ;	T3CMX = RC0, T3CKI function is on RC0
  1861                           ;	SDO Output MUX bit
  1862                           ;	SDOMX = RB3, SDO function is on RB3
  1863                           ;	Master Clear Reset Pin Enable
  1864                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1865  300005                     	org	3145733
  1866  300005  D1                 	db	209
  1867                           
  1868                           ;Config register CONFIG4L @ 0x300006
  1869                           ;	Stack Full/Underflow Reset
  1870                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1871                           ;	Single-Supply ICSP Enable bit
  1872                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1873                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1874                           ;	ICPRT = OFF, ICPORT disabled
  1875                           ;	Extended Instruction Set Enable bit
  1876                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1877                           ;	Background Debugger Enable bit
  1878                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1879  300006                     	org	3145734
  1880  300006  85                 	db	133
  1881                           
  1882                           ; Padding undefined space
  1883  300007                     	org	3145735
  1884  300007  FF                 	db	255
  1885                           
  1886                           ;Config register CONFIG5L @ 0x300008
  1887                           ;	Block 0 Code Protect
  1888                           ;	CP0 = OFF, Block 0 is not code-protected
  1889                           ;	Block 1 Code Protect
  1890                           ;	CP1 = OFF, Block 1 is not code-protected
  1891                           ;	Block 2 Code Protect
  1892                           ;	CP2 = OFF, Block 2 is not code-protected
  1893                           ;	Block 3 Code Protect
  1894                           ;	CP3 = OFF, Block 3 is not code-protected
  1895  300008                     	org	3145736
  1896  300008  0F                 	db	15
  1897                           
  1898                           ;Config register CONFIG5H @ 0x300009
  1899                           ;	Boot Block Code Protect
  1900                           ;	CPB = OFF, Boot block is not code-protected
  1901                           ;	Data EEPROM Code Protect
  1902                           ;	CPD = OFF, Data EEPROM is not code-protected
  1903  300009                     	org	3145737
  1904  300009  C0                 	db	192
  1905                           
  1906                           ;Config register CONFIG6L @ 0x30000A
  1907                           ;	Block 0 Write Protect
  1908                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1909                           ;	Block 1 Write Protect
  1910                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1911                           ;	Block 2 Write Protect
  1912                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1913                           ;	Block 3 Write Protect
  1914                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1915  30000A                     	org	3145738
  1916  30000A  0F                 	db	15
  1917                           
  1918                           ;Config register CONFIG6H @ 0x30000B
  1919                           ;	Configuration Registers Write Protect
  1920                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1921                           ;	Boot Block Write Protect
  1922                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1923                           ;	Data EEPROM Write Protect
  1924                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1925  30000B                     	org	3145739
  1926  30000B  E0                 	db	224
  1927                           
  1928                           ;Config register CONFIG7L @ 0x30000C
  1929                           ;	Block 0 Table Read Protect
  1930                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1931                           ;	Block 1 Table Read Protect
  1932                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1933                           ;	Block 2 Table Read Protect
  1934                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1935                           ;	Block 3 Table Read Protect
  1936                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1937  30000C                     	org	3145740
  1938  30000C  0F                 	db	15
  1939                           
  1940                           ;Config register CONFIG7H @ 0x30000D
  1941                           ;	Boot Block Table Read Protect
  1942                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1943  30000D                     	org	3145741
  1944  30000D  40                 	db	64
  1945                           tosu	equ	0xFFF
  1946                           tosh	equ	0xFFE
  1947                           tosl	equ	0xFFD
  1948                           stkptr	equ	0xFFC
  1949                           pclatu	equ	0xFFB
  1950                           pclath	equ	0xFFA
  1951                           pcl	equ	0xFF9
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           prodh	equ	0xFF4
  1957                           prodl	equ	0xFF3
  1958                           indf0	equ	0xFEF
  1959                           postinc0	equ	0xFEE
  1960                           postdec0	equ	0xFED
  1961                           preinc0	equ	0xFEC
  1962                           plusw0	equ	0xFEB
  1963                           fsr0h	equ	0xFEA
  1964                           fsr0l	equ	0xFE9
  1965                           wreg	equ	0xFE8
  1966                           indf1	equ	0xFE7
  1967                           postinc1	equ	0xFE6
  1968                           postdec1	equ	0xFE5
  1969                           preinc1	equ	0xFE4
  1970                           plusw1	equ	0xFE3
  1971                           fsr1h	equ	0xFE2
  1972                           fsr1l	equ	0xFE1
  1973                           bsr	equ	0xFE0
  1974                           indf2	equ	0xFDF
  1975                           postinc2	equ	0xFDE
  1976                           postdec2	equ	0xFDD
  1977                           preinc2	equ	0xFDC
  1978                           plusw2	equ	0xFDB
  1979                           fsr2h	equ	0xFDA
  1980                           fsr2l	equ	0xFD9
  1981                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      77
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(2) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_nrF2401_init_RX
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4160
                                              9 COMRAM     2     2      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                    _nrF2401_init_RX
                   _nrf2401_haydatos
                     _nrf2401_recibe
                         _spi_s_init
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf2401_recibe                                       1     1      0     105
                                              2 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (1) _nrf2401_haydatos                                     0     0      0     120
                         _get_Status
 ---------------------------------------------------------------------------------
 (2) _get_Status                                           0     0      0     120
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (3) _nrf2401_read                                         2     2      0     120
                                              2 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_read                                           2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_RX                                      1     1      0    3913
                                              8 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              6     3      3     765
                                              2 COMRAM     6     3      3
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    1593
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1533
                                              2 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0      60
                                              2 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_write                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _nrf2401_haydatos
     _get_Status
       _nrf2401_read
         _spi_s_read
         _spi_s_write
   _nrf2401_recibe
     _spi_s_read
     _spi_s_write
   _spi_s_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F      B      4D       1       81.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B       6        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 05 19:41:22 2022

                                u10 09A0                                  u11 099C  
                                u20 09BC                                  u21 09B8  
                                u30 094A                                  u31 0946  
                                u40 0978                                  u41 0974  
                                u50 0AB0                                  u51 0AAC  
                                _on 0268                                 l121 0AB0  
                               l115 0B8A                                 l301 0ACE  
                               l118 0AA2                                 l160 0B98  
                               l250 0978                                 l243 09BE  
                               l148 0A6C                                 l253 0B06  
                               l237 0B4E                                 l246 093C  
                               l263 09FC                                 l343 0892  
                               l248 0950                                 l256 0B78  
                               l264 0A04                                 l273 0B38  
                               l194 0A1E                                 l282 0930  
                               l179 0B64                                 l259 0AEA  
                               l197 0A3E                                 l279 0B20  
                               l288 0BA0                                 u110 0AC6  
                               u111 0AC2                                 u230 09FC  
                               u231 09F8                                 u240 0A2C  
                               u241 0A28                                 u307 083A  
                               u317 08A0                                 u407 0962  
                               u327 0B1A                                 u280 0874  
                               u337 0AE4                                 u281 0870  
                               u290 088A                                 u347 098E  
                               u291 0886                                 u357 09A6  
                               u367 0A00                                 u377 0B02  
                               u387 0B74                                 u397 095A  
                               wreg 000FE8                          _TXSTA1bits 000FAC  
                   _nrF2401_init_RX 08B6                                l1100 0958  
                              l1102 095E                                l1104 0960  
                              l1120 0B6A                                l1106 0966  
                              l1122 0B70                                l1130 0AD4  
                              l1140 0A40                                l1108 0968  
                              l1124 0B72                                l1060 097A  
                              l1132 0ADA                                l1204 0B3A  
                              l1142 0A6A                                l1118 0B68  
                              l1070 098C                                l1134 0AE0  
                              l1126 0AD2                                l1230 0B08  
                              l1144 0A92                                l1080 09AA  
                              l1072 0992                                l1136 0AE2  
                              l1128 0AD2                                l1232 0B0A  
                              l1146 0B8C                                l1410 0AF0  
                              l1082 09AC                                l1074 09A0  
                              l1066 0986                                l1234 0B16  
                              l1148 0B50                                l1412 0AFE  
                              l1420 09CA                                l1084 09BC  
                              l1076 09A2                                l1068 098A  
                              l1172 0B9A                                l1260 0ACC  
                              l1252 0AB2                                l1236 0B18  
                              l1094 094A                                l1414 0B00  
                              l1430 09EC                                l1078 09A4  
                              l1254 0AC6                                l1238 0B1E  
                              l1440 0A1A                                l1192 0B7A  
                              l1096 0952                                l1088 0934  
                              l1408 0AEE                                l1432 09FE  
                              l1416 09C0                                l1520 082A  
                              l1442 0A1C                                l1098 0956  
                              l1426 09CE                                l1418 09C2  
                              l1530 084C                                l1522 082E  
                              l1514 081C                                l1444 0A2C  
                              l1436 0B22                                l1428 09EA  
                              l1540 088A                                l1532 0852  
                              l1524 0830                                l1516 0820  
                              l1438 0A08                                l1542 0896  
                              l1534 0860                                l1526 0846  
                              l1518 0826                                l1480 092E  
                              l1472 08B8                                l1536 0874  
                              l1528 0848                                l1474 08BA  
                              l1538 087A                                l1476 090A  
                              l1478 091A                                STR_1 080B  
                              STR_3 0817                                STR_5 0811  
                              _LATA 000F89                                _LATB 000F8A  
                              _LATC 000F8B                                _WPUB 000F85  
           __end_of_CCP2_Initialize 0B9A                                _main 081C  
                              start 0000                    nrf2401_write@reg 0045  
                      ?_flush_TX_RX 0042                        ___param_bank 000000  
   __end_of_nrf2401_direccion_TX_RX 0A06      __size_of_OSCILLATOR_Initialize 0020  
     __end_of_OSCILLATOR_Initialize 0AB2                               ?_main 0042  
              nrf2401_recibe@valor_ 0044                               _LATB0 007C50  
                             _LATA5 007C4D                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _valor 0015                               _trama 0024  
                             _texto 0001                      __pbitbssCOMRAM 0268  
                             tablat 000FF5                               status 000FD8  
_EUSART1_DefaultFramingErrorHandler 000000                     __initialization 0A6E  
                      __end_of_main 08B6                    spi_s_read@cont_s 0043  
                            ??_main 004B                       __activetblptr 000002  
           __end_of_nrF2401_init_RX 0932                __end_of_nrf2401_read 0AEC  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ACTCON 000FB5  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR2H 000F91                              _CCPR2L 000F90  
                            _ANSELA 000F5B                              _ANSELB 000F5C  
                            _ANSELC 000F5D                __end_of_direccion_rx 0806  
              __end_of_direccion_tx 080B                              _RCREG1 000FAE  
                            _RCSTA1 000FAB                              _OSCCON 000FD3  
                            _PLLRDY 007E97                              _SPBRG1 000FAF  
                  ?_CCP2_Initialize 0042                              _TXREG1 000FAD  
                            _TXSTA1 000FAC                     _nrf2401_comando 0B66  
                            _datorx 0020           __size_of_nrf2401_haydatos 001E  
                            clear_0 0A74                              clear_1 0A82  
                            isa$std 000001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8            ADC_GetConversion@channel 0046  
                 _SYSTEM_Initialize 0B7A                nrF2401_init_RX@canal 004A  
                        __accesstop 0060             __end_of__initialization 0A88  
                      ?_spi_s_write 0042                  ?_SYSTEM_Initialize 0042  
                     ___rparam_used 000001                  nrf2401_write@valor 0044  
                    __pcstackCOMRAM 0042                 ??_SYSTEM_Initialize 0042  
              __size_of_flush_TX_RX 0018                    ?_nrF2401_init_RX 0042  
         __end_of_SYSTEM_Initialize 0B8C                          __pbssBANK0 0060  
           __end_of_nrf2401_comando 0B7A              nrf2401_comando@comando 0044  
             __end_of_nrf2401_write 0B08                             _CCP2CON 000F97  
             __size_of_nrf2401_read 001C             __size_of_ADC_Initialize 0016  
                        _get_Status 0B9A                             _OSCCON2 000FD2  
          ?_nrf2401_direccion_TX_RX 0044                             _OSCTUNE 000F9B  
                           _SPBRGH1 000FB0       nrf2401_direccion_TX_RX@cont_s 0049  
              _ADC_InterruptHandler 0017                             __Hparam 0000  
                           __Lparam 0000                        _nrf2401_read 0AD0  
           __size_of_nrf2401_recibe 001A                    _nrf2401_haydatos 0AB2  
                      __psmallconst 0800                        _direccion_rx 0801  
                      _direccion_tx 0806                             __pcinit 0A6E  
                           __ramtop 0800                             __ptext0 081C  
                           _flag_rx 001F                             __ptext1 0B3A  
                           __ptext2 0B08                             __ptext3 0AB2  
                           __ptext4 0B9A                             __ptext5 0AD0  
                           __ptext6 097A                             __ptext7 08B6  
                           __ptext8 09C0                             __ptext9 0B22  
                  spi_s_write@dato_ 0042               _OSCILLATOR_Initialize 0A92  
          ??_PIN_MANAGER_Initialize 0042                             _procesa 0060  
                           _puntero 0021          __size_of_SYSTEM_Initialize 0012  
 nrf2401_direccion_TX_RX@direccion_ 0044                end_of_initialization 0A88  
                     __Lmediumconst 0000         _EUSART1_OverrunErrorHandler 001B  
                  ?_nrf2401_comando 0042                __size_of_spi_s_write 0048  
                           postinc0 000FEE                           _PORTBbits 000F81  
                       ?_get_Status 0042                          _spi_s_init 0B3A  
                        _spi_s_read 097A                     nrf2401_read@reg 0044  
                         _TRISBbits 000F93                           _TRISCbits 000F94  
          __size_of_CCP2_Initialize 000E                      _ADC_Initialize 0B50  
            ?_OSCILLATOR_Initialize 0042                 start_initialization 0A6E  
   __size_of_PIN_MANAGER_Initialize 002E                     spi_s_read@dato_ 0042  
               __size_of_get_Status 0008                       ??_flush_TX_RX 0046  
                    _nrf2401_recibe 0B08              __end_of_ADC_Initialize 0B66  
                       ?_spi_s_init 0042                         ?_spi_s_read 0042  
                       __pbssCOMRAM 0001            __end_of_nrf2401_haydatos 0AD0  
          __size_of_nrF2401_init_RX 007C    __size_of_nrf2401_direccion_TX_RX 0046  
            __end_of_nrf2401_recibe 0B22              _PIN_MANAGER_Initialize 0A40  
                       _dato_serial 0022                     ?_ADC_Initialize 0042  
               __end_of_flush_TX_RX 0B3A                         __smallconst 0800  
                 ??_CCP2_Initialize 0042     nrf2401_direccion_TX_RX@registro 0046  
                          _BAUDCON1 000FB8  _EUSART1_DefaultOverrunErrorHandler 000000  
              _EUSART1_ErrorHandler 0019              __size_of_nrf2401_write 001C  
                          _LATBbits 000F8A                            _LATCbits 000F8B  
               __size_of_spi_s_init 0016                 __size_of_spi_s_read 0046  
                   ?_nrf2401_recibe 0042                            _PIR1bits 000F9E  
                        _ADCON0bits 000FC2                        ??_get_Status 0046  
                       _INTCON2bits 000FF1                       ??_spi_s_write 0042  
                          __Hrparam 0000                  __end_of_get_Status 0BA2  
                 ??_nrF2401_init_RX 004A                            __Lrparam 0000  
                 _ADC_GetConversion 0A06                         _flush_TX_RX 0B22  
                     _nrf2401_write 0AEC             ??_OSCILLATOR_Initialize 0042  
          __size_of_nrf2401_comando 0014                  ?_ADC_GetConversion 0042  
       _EUSART1_DefaultErrorHandler 000000                 ??_ADC_GetConversion 0044  
                          __ptext10 0AEC                            __ptext11 0B66  
                          __ptext12 0932                            __ptext13 0B7A  
                          __ptext14 0A40                            __ptext15 0A92  
                          __ptext16 0B8C                            __ptext17 0B50  
                          __ptext18 0A06                   spi_s_write@cont_s 0043  
                     __size_of_main 009A             _nrf2401_direccion_TX_RX 09C0  
         __end_of_ADC_GetConversion 0A40                            isa$xinst 000000  
                    ?_nrf2401_write 0044                 __end_of_spi_s_write 097A  
       _EUSART1_FramingErrorHandler 001D                        ??_spi_s_init 0042  
                      ??_spi_s_read 0042                          _INTCONbits 000FF2  
                 ?_nrf2401_haydatos 0042             ?_PIN_MANAGER_Initialize 0042  
                ??_nrf2401_haydatos 0046                          _RCSTA1bits 000FAB  
                  ??_ADC_Initialize 0042                       ?_nrf2401_read 0042  
                __end_of_spi_s_init 0B50                  __end_of_spi_s_read 09C0  
                   _CCP2_Initialize 0B8C                  _eusart1RxLastError 0023  
                 ??_nrf2401_comando 0044           ??_nrf2401_direccion_TX_RX 0047  
    __end_of_PIN_MANAGER_Initialize 0A6E                    ??_nrf2401_recibe 0044  
                 nrf2401_read@dato_ 0045                         _spi_s_write 0932  
        __size_of_ADC_GetConversion 003A                     ??_nrf2401_write 0045  
                    ??_nrf2401_read 0044  
