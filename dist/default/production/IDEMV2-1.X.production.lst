

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 04 17:37:40 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F25K50 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    70  0000                     
    71 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    72  0000                     
    73 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    74  0000                     
    75                           	psect	smallconst
    76  000800                     __psmallconst:
    77                           	callstack 0
    78  000800  00                 	db	0
    79  000801                     _direccion_rx:
    80                           	callstack 0
    81  000801  11                 	db	17
    82  000802  11                 	db	17
    83  000803  11                 	db	17
    84  000804  11                 	db	17
    85  000805  11                 	db	17
    86  000806                     __end_of_direccion_rx:
    87                           	callstack 0
    88  000806                     _direccion_tx:
    89                           	callstack 0
    90  000806  11                 	db	17
    91  000807  11                 	db	17
    92  000808  11                 	db	17
    93  000809  11                 	db	17
    94  00080A  11                 	db	17
    95  00080B                     __end_of_direccion_tx:
    96                           	callstack 0
    97  0000                     _ANSELA	set	3931
    98  0000                     _ANSELB	set	3932
    99  0000                     _ANSELC	set	3933
   100  0000                     _PORTAbits	set	3968
   101  0000                     _PORTBbits	set	3969
   102  0000                     _LATCbits	set	3979
   103  0000                     _LATBbits	set	3978
   104  0000                     _TRISBbits	set	3987
   105  0000                     _TRISCbits	set	3988
   106  0000                     _ADCON0bits	set	4034
   107  0000                     _ADCON0	set	4034
   108  0000                     _ADRESH	set	4036
   109  0000                     _ADRESL	set	4035
   110  0000                     _ADCON2	set	4032
   111  0000                     _ADCON1	set	4033
   112  0000                     _CCPR2H	set	3985
   113  0000                     _CCPR2L	set	3984
   114  0000                     _CCP2CON	set	3991
   115  0000                     _INTCONbits	set	4082
   116  0000                     _INTCON2bits	set	4081
   117  0000                     _WPUB	set	3973
   118  0000                     _TRISC	set	3988
   119  0000                     _TRISB	set	3987
   120  0000                     _TRISA	set	3986
   121  0000                     _LATC	set	3979
   122  0000                     _LATB	set	3978
   123  0000                     _LATA	set	3977
   124  0000                     _ACTCON	set	4021
   125  0000                     _OSCTUNE	set	3995
   126  0000                     _OSCCON2	set	4050
   127  0000                     _OSCCON	set	4051
   128  0000                     _TXREG1	set	4013
   129  0000                     _RCREG1	set	4014
   130  0000                     _RCSTA1bits	set	4011
   131  0000                     _TXSTA1bits	set	4012
   132  0000                     _PIR1bits	set	3998
   133  0000                     _SPBRGH1	set	4016
   134  0000                     _SPBRG1	set	4015
   135  0000                     _TXSTA1	set	4012
   136  0000                     _RCSTA1	set	4011
   137  0000                     _BAUDCON1	set	4024
   138  0000                     _LATA5	set	31821
   139  0000                     _LATB0	set	31824
   140  0000                     _PLLRDY	set	32407
   141  00080B                     STR_1:
   142  00080B  63                 	db	99	;'c'
   143  00080C  69                 	db	105	;'i'
   144  00080D  65                 	db	101	;'e'
   145  00080E  72                 	db	114	;'r'
   146  00080F  3D                 	db	61	;'='
   147  000810  00                 	db	0
   148  000811                     STR_5:
   149  000811  61                 	db	97	;'a'
   150  000812  70                 	db	112	;'p'
   151  000813  65                 	db	101	;'e'
   152  000814  72                 	db	114	;'r'
   153  000815  3D                 	db	61	;'='
   154  000816  00                 	db	0
   155  000817                     STR_3:
   156  000817  6F                 	db	111	;'o'
   157  000818  6E                 	db	110	;'n'
   158  000819  00                 	db	0
   159  00081A  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164  000A14                     __pcinit:
   165                           	callstack 0
   166  000A14                     start_initialization:
   167                           	callstack 0
   168  000A14                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Clear objects allocated to BANK0 (30 bytes)
   172  000A14  EE00  F060         	lfsr	0,__pbssBANK0
   173  000A18  0E1E               	movlw	30
   174  000A1A                     clear_0:
   175  000A1A  6AEE               	clrf	postinc0,c
   176  000A1C  06E8               	decf	wreg,f,c
   177  000A1E  E1FD               	bnz	clear_0
   178                           
   179                           ; Clear objects allocated to COMRAM (63 bytes)
   180  000A20  EE00  F001         	lfsr	0,__pbssCOMRAM
   181  000A24  0E3F               	movlw	63
   182  000A26                     clear_1:
   183  000A26  6AEE               	clrf	postinc0,c
   184  000A28  06E8               	decf	wreg,f,c
   185  000A2A  E1FD               	bnz	clear_1
   186  000A2C                     end_of_initialization:
   187                           	callstack 0
   188  000A2C                     __end_of__initialization:
   189                           	callstack 0
   190  000A2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  000A2E  6EF8               	movwf	tblptru,c
   192  000A30  0100               	movlb	0
   193  000A32  EF4C  F004         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMRAM
   196  000001                     __pbssCOMRAM:
   197                           	callstack 0
   198  000001                     _texto:
   199                           	callstack 0
   200  000001                     	ds	20
   201  000015                     _ADC_InterruptHandler:
   202                           	callstack 0
   203  000015                     	ds	2
   204  000017                     _EUSART1_ErrorHandler:
   205                           	callstack 0
   206  000017                     	ds	2
   207  000019                     _EUSART1_OverrunErrorHandler:
   208                           	callstack 0
   209  000019                     	ds	2
   210  00001B                     _EUSART1_FramingErrorHandler:
   211                           	callstack 0
   212  00001B                     	ds	2
   213  00001D                     _flag_rx:
   214                           	callstack 0
   215  00001D                     	ds	1
   216  00001E                     _datorx:
   217                           	callstack 0
   218  00001E                     	ds	1
   219  00001F                     _puntero:
   220                           	callstack 0
   221  00001F                     	ds	1
   222  000020                     _dato_serial:
   223                           	callstack 0
   224  000020                     	ds	1
   225  000021                     _eusart1RxLastError:
   226                           	callstack 0
   227  000021                     	ds	1
   228  000022                     _trama:
   229                           	callstack 0
   230  000022                     	ds	30
   231                           
   232                           	psect	bssBANK0
   233  000060                     __pbssBANK0:
   234                           	callstack 0
   235  000060                     _procesa:
   236                           	callstack 0
   237  000060                     	ds	30
   238                           
   239                           	psect	cstackCOMRAM
   240  000040                     __pcstackCOMRAM:
   241                           	callstack 0
   242  000040                     spi_s_read@dato_:
   243                           	callstack 0
   244  000040                     spi_s_write@dato_:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x0
   248  000040                     	ds	1
   249  000041                     spi_s_read@cont_s:
   250                           	callstack 0
   251  000041                     spi_s_write@cont_s:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x1
   255  000041                     	ds	1
   256  000042                     nrf2401_write@valor:
   257                           	callstack 0
   258  000042                     nrf2401_comando@comando:
   259                           	callstack 0
   260  000042                     nrf2401_read@reg:
   261                           	callstack 0
   262  000042                     nrf2401_recibe@valor_:
   263                           	callstack 0
   264  000042                     nrf2401_direccion_TX_RX@direccion_:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x2
   268  000042                     	ds	1
   269  000043                     nrf2401_write@reg:
   270                           	callstack 0
   271  000043                     nrf2401_read@dato_:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x3
   275  000043                     	ds	1
   276  000044                     nrf2401_direccion_TX_RX@registro:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x4
   280  000044                     	ds	1
   281  000045                     ??_nrf2401_direccion_TX_RX:
   282                           
   283                           ; 1 bytes @ 0x5
   284  000045                     	ds	2
   285  000047                     nrf2401_direccion_TX_RX@cont_s:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x7
   289  000047                     	ds	1
   290  000048                     nrF2401_init_RX@canal:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x8
   294  000048                     	ds	1
   295  000049                     ??_main:
   296                           
   297                           ; 1 bytes @ 0x9
   298  000049                     	ds	2
   299                           
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 143 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   319 ;;      Params:         0       0       0       0       0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0       0       0       0       0
   321 ;;      Temps:          2       0       0       0       0       0       0       0       0
   322 ;;      Totals:         2       0       0       0       0       0       0       0       0
   323 ;;Total ram usage:        2 bytes
   324 ;; Hardware stack levels required when called: 4
   325 ;; This function calls:
   326 ;;		_SYSTEM_Initialize
   327 ;;		_nrF2401_init_RX
   328 ;;		_nrf2401_haydatos
   329 ;;		_nrf2401_recibe
   330 ;;		_spi_s_init
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text0
   337  000898                     __ptext0:
   338                           	callstack 0
   339  000898                     _main:
   340                           	callstack 27
   341  000898                     
   342                           ;main.c: 146:     SYSTEM_Initialize();
   343  000898  EC8F  F005         	call	_SYSTEM_Initialize	;wreg free
   344  00089C                     
   345                           ;main.c: 165:     ANSELA = 0b00000111;
   346  00089C  0E07               	movlw	7
   347  00089E  010F               	movlb	15	; () banked
   348  0008A0  6F5B               	movwf	91,b	;volatile
   349  0008A2                     
   350                           ; BSR set to: 15
   351                           ;main.c: 166:     ANSELB = 0b00000000;
   352  0008A2  0E00               	movlw	0
   353  0008A4  6F5C               	movwf	92,b	;volatile
   354  0008A6                     
   355                           ; BSR set to: 15
   356                           ;main.c: 167:     ANSELC = 0x00;
   357  0008A6  0E00               	movlw	0
   358  0008A8  6F5D               	movwf	93,b	;volatile
   359  0008AA                     
   360                           ; BSR set to: 15
   361                           ;main.c: 174:     PORTAbits.RA5 = 1;
   362  0008AA  8A80               	bsf	128,5,c	;volatile
   363  0008AC                     
   364                           ; BSR set to: 15
   365                           ;main.c: 175:     _delay((unsigned long)((2000)*(48000000/4000.0)));
   366  0008AC  0E7A               	movlw	122
   367  0008AE  6E4A               	movwf	(??_main+1)^0,c
   368  0008B0  0EC1               	movlw	193
   369  0008B2  6E49               	movwf	??_main^0,c
   370  0008B4  0E82               	movlw	130
   371  0008B6                     u297:
   372  0008B6  2EE8               	decfsz	wreg,f,c
   373  0008B8  D7FE               	bra	u297
   374  0008BA  2E49               	decfsz	??_main^0,f,c
   375  0008BC  D7FC               	bra	u297
   376  0008BE  2E4A               	decfsz	(??_main+1)^0,f,c
   377  0008C0  D7FA               	bra	u297
   378  0008C2                     
   379                           ;main.c: 176:     PORTAbits.RA5 = 0;
   380  0008C2  9A80               	bcf	128,5,c	;volatile
   381  0008C4                     
   382                           ;main.c: 179:     spi_s_init();
   383  0008C4  EC6F  F005         	call	_spi_s_init	;wreg free
   384  0008C8                     
   385                           ;main.c: 181:     nrF2401_init_RX(17);
   386  0008C8  0E11               	movlw	17
   387  0008CA  EC0E  F004         	call	_nrF2401_init_RX
   388  0008CE                     l1512:
   389                           
   390                           ;main.c: 185:     {;main.c: 188:         {;main.c: 190:         if(nrf2401_haydatos() ==
      +                           1)
   391  0008CE  EC2B  F005         	call	_nrf2401_haydatos	;wreg free
   392  0008D2  06E8               	decf	wreg,f,c
   393  0008D4  A4D8               	btfss	status,2,c
   394  0008D6  EF6F  F004         	goto	u271
   395  0008DA  EF71  F004         	goto	u270
   396  0008DE                     u271:
   397  0008DE  EF79  F004         	goto	l1518
   398  0008E2                     u270:
   399  0008E2                     
   400                           ;main.c: 191:         {;main.c: 192:             dato_serial = nrf2401_recibe();
   401  0008E2  EC56  F005         	call	_nrf2401_recibe	;wreg free
   402  0008E6  6E20               	movwf	_dato_serial^0,c
   403  0008E8                     
   404                           ;main.c: 193:             PORTAbits.RA5 = dato_serial;
   405  0008E8  B020               	btfsc	_dato_serial^0,0,c
   406  0008EA  D002               	bra	u285
   407  0008EC  9A80               	bcf	128,5,c	;volatile
   408  0008EE  D001               	bra	u286
   409  0008F0                     u285:
   410  0008F0  8A80               	bsf	128,5,c	;volatile
   411  0008F2                     u286:
   412  0008F2                     l1518:
   413                           
   414                           ;main.c: 197:         _delay((unsigned long)((100)*(48000000/4000.0)));
   415  0008F2  0E07               	movlw	7
   416  0008F4  6E4A               	movwf	(??_main+1)^0,c
   417  0008F6  0E17               	movlw	23
   418  0008F8  6E49               	movwf	??_main^0,c
   419  0008FA  0E6A               	movlw	106
   420  0008FC                     u307:
   421  0008FC  2EE8               	decfsz	wreg,f,c
   422  0008FE  D7FE               	bra	u307
   423  000900  2E49               	decfsz	??_main^0,f,c
   424  000902  D7FC               	bra	u307
   425  000904  2E4A               	decfsz	(??_main+1)^0,f,c
   426  000906  D7FA               	bra	u307
   427  000908  D000               	nop2	
   428  00090A  EF67  F004         	goto	l1512
   429  00090E  EF00  F000         	goto	start
   430  000912                     __end_of_main:
   431                           	callstack 0
   432                           
   433 ;; *************** function _spi_s_init *****************
   434 ;; Defined at:
   435 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		None
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   449 ;;      Params:         0       0       0       0       0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463  000ADE                     __ptext1:
   464                           	callstack 0
   465  000ADE                     _spi_s_init:
   466                           	callstack 30
   467  000ADE                     
   468                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
   469  000ADE  9294               	bcf	148,1,c	;volatile
   470                           
   471                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
   472  000AE0  9493               	bcf	147,2,c	;volatile
   473                           
   474                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
   475  000AE2  9494               	bcf	148,2,c	;volatile
   476                           
   477                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
   478  000AE4  8693               	bsf	147,3,c	;volatile
   479                           
   480                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
   481  000AE6  9293               	bcf	147,1,c	;volatile
   482                           
   483                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
   484  000AE8  8094               	bsf	148,0,c	;volatile
   485                           
   486                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
   487  000AEA  948A               	bcf	138,2,c	;volatile
   488                           
   489                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
   490  000AEC  948B               	bcf	139,2,c	;volatile
   491                           
   492                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
   493  000AEE  928B               	bcf	139,1,c	;volatile
   494                           
   495                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
   496  000AF0  928A               	bcf	138,1,c	;volatile
   497  000AF2  0012               	return		;funcret
   498  000AF4                     __end_of_spi_s_init:
   499                           	callstack 0
   500                           
   501 ;; *************** function _nrf2401_recibe *****************
   502 ;; Defined at:
   503 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  valor_          1    2[COMRAM] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      unsigned char 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   517 ;;      Params:         0       0       0       0       0       0       0       0       0
   518 ;;      Locals:         1       0       0       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0       0       0
   520 ;;      Totals:         1       0       0       0       0       0       0       0       0
   521 ;;Total ram usage:        1 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; Hardware stack levels required when called: 1
   524 ;; This function calls:
   525 ;;		_spi_s_read
   526 ;;		_spi_s_write
   527 ;; This function is called by:
   528 ;;		_main
   529 ;;		_nrf2401_recibe_Text
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534  000AAC                     __ptext2:
   535                           	callstack 0
   536  000AAC                     _nrf2401_recibe:
   537                           	callstack 29
   538  000AAC                     
   539                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
   540  000AAC  948B               	bcf	139,2,c	;volatile
   541  000AAE                     
   542                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
   543  000AAE  0E61               	movlw	97
   544  000AB0  EC89  F004         	call	_spi_s_write
   545                           
   546                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
   547  000AB4  ECAD  F004         	call	_spi_s_read	;wreg free
   548  000AB8  6E42               	movwf	nrf2401_recibe@valor_^0,c
   549  000ABA                     
   550                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
   551  000ABA  848B               	bsf	139,2,c	;volatile
   552  000ABC                     
   553                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   554  000ABC  0E14               	movlw	20
   555  000ABE                     u317:
   556  000ABE  2EE8               	decfsz	wreg,f,c
   557  000AC0  D7FE               	bra	u317
   558  000AC2                     
   559                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
   560  000AC2  5042               	movf	nrf2401_recibe@valor_^0,w,c
   561  000AC4  0012               	return		;funcret
   562  000AC6                     __end_of_nrf2401_recibe:
   563                           	callstack 0
   564                           
   565 ;; *************** function _nrf2401_haydatos *****************
   566 ;; Defined at:
   567 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      unsigned char 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   581 ;;      Params:         0       0       0       0       0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; Hardware stack levels required when called: 3
   588 ;; This function calls:
   589 ;;		_get_Status
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text3
   596  000A56                     __ptext3:
   597                           	callstack 0
   598  000A56                     _nrf2401_haydatos:
   599                           	callstack 27
   600  000A56                     
   601                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
   602  000A56  EC9F  F005         	call	_get_Status	;wreg free
   603  000A5A  0A40               	xorlw	64
   604  000A5C  A4D8               	btfss	status,2,c
   605  000A5E  EF33  F005         	goto	u101
   606  000A62  EF35  F005         	goto	u100
   607  000A66                     u101:
   608  000A66  EF38  F005         	goto	l1244
   609  000A6A                     u100:
   610  000A6A  0E01               	movlw	1
   611  000A6C  EF39  F005         	goto	l301
   612  000A70                     l1244:
   613  000A70  0E00               	movlw	0
   614  000A72                     l301:
   615  000A72  0012               	return		;funcret
   616  000A74                     __end_of_nrf2401_haydatos:
   617                           	callstack 0
   618                           
   619 ;; *************** function _get_Status *****************
   620 ;; Defined at:
   621 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      unsigned char 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   635 ;;      Params:         0       0       0       0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 2
   642 ;; This function calls:
   643 ;;		_nrf2401_read
   644 ;; This function is called by:
   645 ;;		_nrf2401_haydatos
   646 ;;		_nrf2401_recibe_Text
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text4
   651  000B3E                     __ptext4:
   652                           	callstack 0
   653  000B3E                     _get_Status:
   654                           	callstack 27
   655  000B3E                     
   656                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
   657  000B3E  0E07               	movlw	7
   658  000B40  EC3A  F005         	call	_nrf2401_read
   659  000B44  0012               	return		;funcret
   660  000B46                     __end_of_get_Status:
   661                           	callstack 0
   662                           
   663 ;; *************** function _nrf2401_read *****************
   664 ;; Defined at:
   665 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  reg             1    wreg     unsigned char 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  reg             1    2[COMRAM] unsigned char 
   670 ;;  dato_           1    3[COMRAM] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      unsigned char 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         0       0       0       0       0       0       0       0       0
   681 ;;      Locals:         2       0       0       0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0
   683 ;;      Totals:         2       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        2 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 1
   687 ;; This function calls:
   688 ;;		_spi_s_read
   689 ;;		_spi_s_write
   690 ;; This function is called by:
   691 ;;		_get_Status
   692 ;;		_get_fifo_status
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text5
   697  000A74                     __ptext5:
   698                           	callstack 0
   699  000A74                     _nrf2401_read:
   700                           	callstack 27
   701                           
   702                           ;incstack = 0
   703                           ;nrf2401_read@reg stored from wreg
   704  000A74  6E42               	movwf	nrf2401_read@reg^0,c
   705  000A76                     
   706                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
   707  000A76  948B               	bcf	139,2,c	;volatile
   708  000A78                     
   709                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
   710  000A78  5042               	movf	nrf2401_read@reg^0,w,c
   711  000A7A  EC89  F004         	call	_spi_s_write
   712  000A7E                     
   713                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
   714  000A7E  ECAD  F004         	call	_spi_s_read	;wreg free
   715  000A82  6E43               	movwf	nrf2401_read@dato_^0,c
   716  000A84                     
   717                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
   718  000A84  848B               	bsf	139,2,c	;volatile
   719  000A86                     
   720                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   721  000A86  0E14               	movlw	20
   722  000A88                     u327:
   723  000A88  2EE8               	decfsz	wreg,f,c
   724  000A8A  D7FE               	bra	u327
   725                           
   726                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
   727  000A8C  5043               	movf	nrf2401_read@dato_^0,w,c
   728  000A8E  0012               	return		;funcret
   729  000A90                     __end_of_nrf2401_read:
   730                           	callstack 0
   731                           
   732 ;; *************** function _spi_s_read *****************
   733 ;; Defined at:
   734 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  cont_s          1    1[COMRAM] unsigned char 
   739 ;;  dato_           1    0[COMRAM] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      unsigned char 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   749 ;;      Params:         0       0       0       0       0       0       0       0       0
   750 ;;      Locals:         2       0       0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0
   752 ;;      Totals:         2       0       0       0       0       0       0       0       0
   753 ;;Total ram usage:        2 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_nrf2401_read
   759 ;;		_nrf2401_recibe
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text6
   764  00095A                     __ptext6:
   765                           	callstack 0
   766  00095A                     _spi_s_read:
   767                           	callstack 29
   768  00095A                     
   769                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
   770  00095A  0E00               	movlw	0
   771  00095C  6E41               	movwf	spi_s_read@cont_s^0,c
   772                           
   773                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
   774  00095E  0E00               	movlw	0
   775  000960  6E40               	movwf	spi_s_read@dato_^0,c
   776                           
   777                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
   778  000962  0E00               	movlw	0
   779  000964  6E41               	movwf	spi_s_read@cont_s^0,c
   780  000966                     l1060:
   781                           
   782                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
   783  000966  90D8               	bcf	status,0,c
   784  000968  3640               	rlcf	spi_s_read@dato_^0,f,c
   785  00096A                     
   786                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
   787  00096A  848A               	bsf	138,2,c	;volatile
   788  00096C                     
   789                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
   790  00096C  0E04               	movlw	4
   791  00096E                     u337:
   792  00096E  2EE8               	decfsz	wreg,f,c
   793  000970  D7FE               	bra	u337
   794  000972                     
   795                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
   796  000972  A681               	btfss	129,3,c	;volatile
   797  000974  EFBE  F004         	goto	u11
   798  000978  EFC0  F004         	goto	u10
   799  00097C                     u11:
   800  00097C  EFC1  F004         	goto	l1070
   801  000980                     u10:
   802  000980                     
   803                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
   804  000980  8040               	bsf	spi_s_read@dato_^0,0,c
   805  000982                     l1070:
   806                           
   807                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
   808  000982  948A               	bcf	138,2,c	;volatile
   809  000984                     
   810                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
   811  000984  0E04               	movlw	4
   812  000986                     u347:
   813  000986  2EE8               	decfsz	wreg,f,c
   814  000988  D7FE               	bra	u347
   815  00098A                     
   816                           ;./Librerias/nRF24L01_2.h: 57:     }
   817  00098A  2A41               	incf	spi_s_read@cont_s^0,f,c
   818  00098C  0E07               	movlw	7
   819  00098E  6441               	cpfsgt	spi_s_read@cont_s^0,c
   820  000990  EFCC  F004         	goto	u21
   821  000994  EFCE  F004         	goto	u20
   822  000998                     u21:
   823  000998  EFB3  F004         	goto	l1060
   824  00099C                     u20:
   825  00099C                     
   826                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
   827  00099C  5040               	movf	spi_s_read@dato_^0,w,c
   828  00099E  0012               	return		;funcret
   829  0009A0                     __end_of_spi_s_read:
   830                           	callstack 0
   831                           
   832 ;; *************** function _nrF2401_init_RX *****************
   833 ;; Defined at:
   834 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  canal           1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  canal           1    8[COMRAM] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   848 ;;      Params:         0       0       0       0       0       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0
   851 ;;      Totals:         1       0       0       0       0       0       0       0       0
   852 ;;Total ram usage:        1 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 3
   855 ;; This function calls:
   856 ;;		_flush_TX_RX
   857 ;;		_nrf2401_direccion_TX_RX
   858 ;;		_nrf2401_write
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text7
   865  00081C                     __ptext7:
   866                           	callstack 0
   867  00081C                     _nrF2401_init_RX:
   868                           	callstack 27
   869                           
   870                           ;incstack = 0
   871                           ;nrF2401_init_RX@canal stored from wreg
   872  00081C  6E48               	movwf	nrF2401_init_RX@canal^0,c
   873  00081E                     
   874                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
   875  00081E  928A               	bcf	138,1,c	;volatile
   876  000820                     
   877                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
   878  000820  0E0C               	movlw	12
   879  000822  6E42               	movwf	nrf2401_write@valor^0,c
   880  000824  0E00               	movlw	0
   881  000826  EC48  F005         	call	_nrf2401_write
   882                           
   883                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
   884  00082A  0E00               	movlw	0
   885  00082C  6E42               	movwf	nrf2401_write@valor^0,c
   886  00082E  0E04               	movlw	4
   887  000830  EC48  F005         	call	_nrf2401_write
   888                           
   889                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
   890  000834  0E03               	movlw	3
   891  000836  6E42               	movwf	nrf2401_write@valor^0,c
   892  000838  0E03               	movlw	3
   893  00083A  EC48  F005         	call	_nrf2401_write
   894                           
   895                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x08 + 0x06);
   896  00083E  0E0E               	movlw	14
   897  000840  6E42               	movwf	nrf2401_write@valor^0,c
   898  000842  0E06               	movlw	6
   899  000844  EC48  F005         	call	_nrf2401_write
   900                           
   901                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
   902  000848  C048  F042         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
   903  00084C  0E05               	movlw	5
   904  00084E  EC48  F005         	call	_nrf2401_write
   905                           
   906                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
   907  000852  0E00               	movlw	0
   908  000854  6E42               	movwf	nrf2401_write@valor^0,c
   909  000856  0E01               	movlw	1
   910  000858  EC48  F005         	call	_nrf2401_write
   911                           
   912                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
   913  00085C  0E01               	movlw	1
   914  00085E  6E42               	movwf	nrf2401_write@valor^0,c
   915  000860  0E11               	movlw	17
   916  000862  EC48  F005         	call	_nrf2401_write
   917                           
   918                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
   919  000866  0E0F               	movlw	15
   920  000868  6E42               	movwf	nrf2401_write@valor^0,c
   921  00086A  0E00               	movlw	0
   922  00086C  EC48  F005         	call	_nrf2401_write
   923  000870                     
   924                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
   925  000870  0E06               	movlw	low _direccion_tx
   926  000872  6E42               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   927  000874  0E08               	movlw	high _direccion_tx
   928  000876  6E43               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   929  000878  0E10               	movlw	16
   930  00087A  6E44               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   931  00087C  ECD0  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   932  000880                     
   933                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
   934  000880  0E06               	movlw	low _direccion_tx
   935  000882  6E42               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   936  000884  0E08               	movlw	high _direccion_tx
   937  000886  6E43               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   938  000888  0E0A               	movlw	10
   939  00088A  6E44               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   940  00088C  ECD0  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   941                           
   942                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
   943  000890  EC63  F005         	call	_flush_TX_RX	;wreg free
   944  000894                     
   945                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
   946  000894  828A               	bsf	138,1,c	;volatile
   947  000896  0012               	return		;funcret
   948  000898                     __end_of_nrF2401_init_RX:
   949                           	callstack 0
   950                           
   951 ;; *************** function _nrf2401_direccion_TX_RX *****************
   952 ;; Defined at:
   953 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  direccion_      2    2[COMRAM] PTR const unsigned char 
   956 ;;		 -> direccion_tx(5), 
   957 ;;  registro        1    4[COMRAM] unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  cont_s          1    7[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         3       0       0       0       0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0       0       0
   971 ;;      Temps:          2       0       0       0       0       0       0       0       0
   972 ;;      Totals:         6       0       0       0       0       0       0       0       0
   973 ;;Total ram usage:        6 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 1
   976 ;; This function calls:
   977 ;;		_spi_s_write
   978 ;; This function is called by:
   979 ;;		_nrF2401_init_RX
   980 ;;		_nrF2401_init_TX
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text8
   985  0009A0                     __ptext8:
   986                           	callstack 0
   987  0009A0                     _nrf2401_direccion_TX_RX:
   988                           	callstack 28
   989  0009A0                     
   990                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
   991  0009A0  948B               	bcf	139,2,c	;volatile
   992  0009A2                     
   993                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
   994  0009A2  5044               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
   995  0009A4  0920               	iorlw	32
   996  0009A6  EC89  F004         	call	_spi_s_write
   997  0009AA                     
   998                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
   999  0009AA  0E00               	movlw	0
  1000  0009AC  6E47               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
  1001  0009AE                     l1416:
  1002                           
  1003                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
  1004  0009AE  5047               	movf	nrf2401_direccion_TX_RX@cont_s^0,w,c
  1005  0009B0  2442               	addwf	nrf2401_direccion_TX_RX@direccion_^0,w,c
  1006  0009B2  6E45               	movwf	??_nrf2401_direccion_TX_RX^0,c
  1007  0009B4  0E00               	movlw	0
  1008  0009B6  2043               	addwfc	(nrf2401_direccion_TX_RX@direccion_+1)^0,w,c
  1009  0009B8  6E46               	movwf	(??_nrf2401_direccion_TX_RX+1)^0,c
  1010  0009BA  C045  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
  1011  0009BE  C046  FFF7         	movff	??_nrf2401_direccion_TX_RX+1,tblptrh
  1012  0009C2                     	if	0	;tblptru may be non-zero
  1013  0009C2                     	endif
  1014  0009C2                     	if	0	;tblptru may be non-zero
  1015  0009C2                     	endif
  1016  0009C2  0008               	tblrd		*
  1017  0009C4  50F5               	movf	tablat,w,c
  1018  0009C6  EC89  F004         	call	_spi_s_write
  1019  0009CA                     
  1020                           ;./Librerias/nRF24L01_2.h: 120:     }
  1021  0009CA  2A47               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
  1022  0009CC  0E04               	movlw	4
  1023  0009CE  6447               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
  1024  0009D0  EFEC  F004         	goto	u231
  1025  0009D4  EFEE  F004         	goto	u230
  1026  0009D8                     u231:
  1027  0009D8  EFD7  F004         	goto	l1416
  1028  0009DC                     u230:
  1029  0009DC                     
  1030                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
  1031  0009DC  848B               	bsf	139,2,c	;volatile
  1032  0009DE                     
  1033                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1034  0009DE  0E14               	movlw	20
  1035  0009E0                     u357:
  1036  0009E0  2EE8               	decfsz	wreg,f,c
  1037  0009E2  D7FE               	bra	u357
  1038  0009E4  0012               	return		;funcret
  1039  0009E6                     __end_of_nrf2401_direccion_TX_RX:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _flush_TX_RX *****************
  1043 ;; Defined at:
  1044 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 2
  1065 ;; This function calls:
  1066 ;;		_nrf2401_comando
  1067 ;;		_nrf2401_write
  1068 ;; This function is called by:
  1069 ;;		_nrF2401_init_RX
  1070 ;;		_nrF2401_init_TX
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text9
  1075  000AC6                     __ptext9:
  1076                           	callstack 0
  1077  000AC6                     _flush_TX_RX:
  1078                           	callstack 27
  1079  000AC6                     
  1080                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
  1081  000AC6  0E70               	movlw	112
  1082  000AC8  6E42               	movwf	nrf2401_write@valor^0,c
  1083  000ACA  0E07               	movlw	7
  1084  000ACC  EC48  F005         	call	_nrf2401_write
  1085                           
  1086                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
  1087  000AD0  0EE1               	movlw	225
  1088  000AD2  EC85  F005         	call	_nrf2401_comando
  1089                           
  1090                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
  1091  000AD6  0EE2               	movlw	226
  1092  000AD8  EC85  F005         	call	_nrf2401_comando
  1093  000ADC  0012               	return		;funcret
  1094  000ADE                     __end_of_flush_TX_RX:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _nrf2401_write *****************
  1098 ;; Defined at:
  1099 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  reg             1    wreg     unsigned char 
  1102 ;;  valor           1    2[COMRAM] unsigned char 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  reg             1    3[COMRAM] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         1       0       0       0       0       0       0       0       0
  1115 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1118 ;;Total ram usage:        2 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 1
  1121 ;; This function calls:
  1122 ;;		_spi_s_write
  1123 ;; This function is called by:
  1124 ;;		_flush_TX_RX
  1125 ;;		_nrF2401_init_RX
  1126 ;;		_flush_RX
  1127 ;;		_flush_TX
  1128 ;;		_nrf2401_envia
  1129 ;;		_nrF2401_init_TX
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text10
  1134  000A90                     __ptext10:
  1135                           	callstack 0
  1136  000A90                     _nrf2401_write:
  1137                           	callstack 28
  1138                           
  1139                           ;incstack = 0
  1140                           ;nrf2401_write@reg stored from wreg
  1141  000A90  6E43               	movwf	nrf2401_write@reg^0,c
  1142  000A92                     
  1143                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
  1144  000A92  948B               	bcf	139,2,c	;volatile
  1145  000A94                     
  1146                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
  1147  000A94  5043               	movf	nrf2401_write@reg^0,w,c
  1148  000A96  0920               	iorlw	32
  1149  000A98  EC89  F004         	call	_spi_s_write
  1150                           
  1151                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
  1152  000A9C  5042               	movf	nrf2401_write@valor^0,w,c
  1153  000A9E  EC89  F004         	call	_spi_s_write
  1154  000AA2                     
  1155                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
  1156  000AA2  848B               	bsf	139,2,c	;volatile
  1157  000AA4                     
  1158                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1159  000AA4  0E14               	movlw	20
  1160  000AA6                     u367:
  1161  000AA6  2EE8               	decfsz	wreg,f,c
  1162  000AA8  D7FE               	bra	u367
  1163  000AAA  0012               	return		;funcret
  1164  000AAC                     __end_of_nrf2401_write:
  1165                           	callstack 0
  1166                           
  1167 ;; *************** function _nrf2401_comando *****************
  1168 ;; Defined at:
  1169 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  comando         1    wreg     unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  comando         1    2[COMRAM] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1183 ;;      Params:         0       0       0       0       0       0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1186 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1187 ;;Total ram usage:        1 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 1
  1190 ;; This function calls:
  1191 ;;		_spi_s_write
  1192 ;; This function is called by:
  1193 ;;		_flush_TX_RX
  1194 ;;		_flush_RX
  1195 ;;		_flush_TX
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text11
  1200  000B0A                     __ptext11:
  1201                           	callstack 0
  1202  000B0A                     _nrf2401_comando:
  1203                           	callstack 27
  1204                           
  1205                           ;incstack = 0
  1206                           ;nrf2401_comando@comando stored from wreg
  1207  000B0A  6E42               	movwf	nrf2401_comando@comando^0,c
  1208  000B0C                     
  1209                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  1210  000B0C  948B               	bcf	139,2,c	;volatile
  1211  000B0E                     
  1212                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  1213  000B0E  5042               	movf	nrf2401_comando@comando^0,w,c
  1214  000B10  EC89  F004         	call	_spi_s_write
  1215  000B14                     
  1216                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  1217  000B14  848B               	bsf	139,2,c	;volatile
  1218  000B16                     
  1219                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1220  000B16  0E14               	movlw	20
  1221  000B18                     u377:
  1222  000B18  2EE8               	decfsz	wreg,f,c
  1223  000B1A  D7FE               	bra	u377
  1224  000B1C  0012               	return		;funcret
  1225  000B1E                     __end_of_nrf2401_comando:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _spi_s_write *****************
  1229 ;; Defined at:
  1230 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  dato_           1    wreg     unsigned char 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  dato_           1    0[COMRAM] unsigned char 
  1235 ;;  cont_s          1    1[COMRAM] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0
  1246 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1248 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1249 ;;Total ram usage:        2 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_nrf2401_write
  1255 ;;		_nrf2401_comando
  1256 ;;		_nrf2401_read
  1257 ;;		_nrf2401_direccion_TX_RX
  1258 ;;		_nrf2401_recibe
  1259 ;;		_nrf2401_envia
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text12
  1264  000912                     __ptext12:
  1265                           	callstack 0
  1266  000912                     _spi_s_write:
  1267                           	callstack 29
  1268                           
  1269                           ;incstack = 0
  1270                           ;spi_s_write@dato_ stored from wreg
  1271  000912  6E40               	movwf	spi_s_write@dato_^0,c
  1272  000914                     
  1273                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  1274  000914  0E00               	movlw	0
  1275  000916  6E41               	movwf	spi_s_write@cont_s^0,c
  1276                           
  1277                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  1278  000918  0E00               	movlw	0
  1279  00091A  6E41               	movwf	spi_s_write@cont_s^0,c
  1280  00091C                     l246:
  1281                           
  1282                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  1283  00091C  AE40               	btfss	spi_s_write@dato_^0,7,c
  1284  00091E  EF93  F004         	goto	u31
  1285  000922  EF95  F004         	goto	u30
  1286  000926                     u31:
  1287  000926  EF98  F004         	goto	l248
  1288  00092A                     u30:
  1289  00092A  828B               	bsf	139,1,c	;volatile
  1290  00092C  EF99  F004         	goto	l1090
  1291  000930                     l248:
  1292  000930  928B               	bcf	139,1,c	;volatile
  1293  000932                     l1090:
  1294                           
  1295                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  1296  000932  90D8               	bcf	status,0,c
  1297  000934  3640               	rlcf	spi_s_write@dato_^0,f,c
  1298  000936                     
  1299                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  1300  000936  848A               	bsf	138,2,c	;volatile
  1301  000938                     
  1302                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1303  000938  0E14               	movlw	20
  1304  00093A                     u387:
  1305  00093A  2EE8               	decfsz	wreg,f,c
  1306  00093C  D7FE               	bra	u387
  1307  00093E                     
  1308                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  1309  00093E  948A               	bcf	138,2,c	;volatile
  1310  000940                     
  1311                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1312  000940  0E14               	movlw	20
  1313  000942                     u397:
  1314  000942  2EE8               	decfsz	wreg,f,c
  1315  000944  D7FE               	bra	u397
  1316  000946                     
  1317                           ;./Librerias/nRF24L01_2.h: 76:     }
  1318  000946  2A41               	incf	spi_s_write@cont_s^0,f,c
  1319  000948  0E07               	movlw	7
  1320  00094A  6441               	cpfsgt	spi_s_write@cont_s^0,c
  1321  00094C  EFAA  F004         	goto	u41
  1322  000950  EFAC  F004         	goto	u40
  1323  000954                     u41:
  1324  000954  EF8E  F004         	goto	l246
  1325  000958                     u40:
  1326  000958  0012               	return		;funcret
  1327  00095A                     __end_of_spi_s_write:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _SYSTEM_Initialize *****************
  1331 ;; Defined at:
  1332 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1349 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 1
  1353 ;; This function calls:
  1354 ;;		_ADC_Initialize
  1355 ;;		_CCP2_Initialize
  1356 ;;		_OSCILLATOR_Initialize
  1357 ;;		_PIN_MANAGER_Initialize
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text13
  1364  000B1E                     __ptext13:
  1365                           	callstack 0
  1366  000B1E                     _SYSTEM_Initialize:
  1367                           	callstack 29
  1368  000B1E                     
  1369                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1370  000B1E  ECF3  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1371                           
  1372                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1373  000B22  EC1B  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1374                           
  1375                           ;mcc_generated_files/mcc.c: 55:     CCP2_Initialize();
  1376  000B26  EC98  F005         	call	_CCP2_Initialize	;wreg free
  1377                           
  1378                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  1379  000B2A  EC7A  F005         	call	_ADC_Initialize	;wreg free
  1380  000B2E  0012               	return		;funcret
  1381  000B30                     __end_of_SYSTEM_Initialize:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _PIN_MANAGER_Initialize *****************
  1385 ;; Defined at:
  1386 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1403 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_SYSTEM_Initialize
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text14
  1414  0009E6                     __ptext14:
  1415                           	callstack 0
  1416  0009E6                     _PIN_MANAGER_Initialize:
  1417                           	callstack 29
  1418  0009E6                     
  1419                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1420  0009E6  0E00               	movlw	0
  1421  0009E8  6E89               	movwf	137,c	;volatile
  1422                           
  1423                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1424  0009EA  0E00               	movlw	0
  1425  0009EC  6E8A               	movwf	138,c	;volatile
  1426                           
  1427                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1428  0009EE  0E00               	movlw	0
  1429  0009F0  6E8B               	movwf	139,c	;volatile
  1430                           
  1431                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
  1432  0009F2  0EC7               	movlw	199
  1433  0009F4  6E92               	movwf	146,c	;volatile
  1434                           
  1435                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
  1436  0009F6  0EFE               	movlw	254
  1437  0009F8  6E93               	movwf	147,c	;volatile
  1438                           
  1439                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
  1440  0009FA  0E87               	movlw	135
  1441  0009FC  6E94               	movwf	148,c	;volatile
  1442                           
  1443                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  1444  0009FE  0E04               	movlw	4
  1445  000A00  010F               	movlb	15	; () banked
  1446  000A02  6F5D               	movwf	93,b	;volatile
  1447                           
  1448                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  1449  000A04  0E3E               	movlw	62
  1450  000A06  6F5C               	movwf	92,b	;volatile
  1451                           
  1452                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  1453  000A08  0E07               	movlw	7
  1454  000A0A  6F5B               	movwf	91,b	;volatile
  1455                           
  1456                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1457  000A0C  0E00               	movlw	0
  1458  000A0E  6E85               	movwf	133,c	;volatile
  1459  000A10                     
  1460                           ; BSR set to: 15
  1461                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1462  000A10  8EF1               	bsf	241,7,c	;volatile
  1463  000A12                     
  1464                           ; BSR set to: 15
  1465  000A12  0012               	return		;funcret
  1466  000A14                     __end_of_PIN_MANAGER_Initialize:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _OSCILLATOR_Initialize *****************
  1470 ;; Defined at:
  1471 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_SYSTEM_Initialize
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text15
  1499  000A36                     __ptext15:
  1500                           	callstack 0
  1501  000A36                     _OSCILLATOR_Initialize:
  1502                           	callstack 29
  1503  000A36                     
  1504                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  1505  000A36  0E70               	movlw	112
  1506  000A38  6ED3               	movwf	211,c	;volatile
  1507                           
  1508                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  1509  000A3A  0E00               	movlw	0
  1510  000A3C  6ED2               	movwf	210,c	;volatile
  1511                           
  1512                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x80;
  1513  000A3E  0E80               	movlw	128
  1514  000A40  6E9B               	movwf	155,c	;volatile
  1515                           
  1516                           ;mcc_generated_files/mcc.c: 69:     ACTCON = 0x00;
  1517  000A42  0E00               	movlw	0
  1518  000A44  6EB5               	movwf	181,c	;volatile
  1519  000A46                     l118:
  1520                           
  1521                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  1522  000A46  AED2               	btfss	4050,7,c	;volatile
  1523  000A48  EF28  F005         	goto	u51
  1524  000A4C  EF2A  F005         	goto	u50
  1525  000A50                     u51:
  1526  000A50  EF23  F005         	goto	l118
  1527  000A54                     u50:
  1528  000A54  0012               	return		;funcret
  1529  000A56                     __end_of_OSCILLATOR_Initialize:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _CCP2_Initialize *****************
  1533 ;; Defined at:
  1534 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_SYSTEM_Initialize
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text16
  1562  000B30                     __ptext16:
  1563                           	callstack 0
  1564  000B30                     _CCP2_Initialize:
  1565                           	callstack 29
  1566  000B30                     
  1567                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  1568  000B30  0E00               	movlw	0
  1569  000B32  6E97               	movwf	151,c	;volatile
  1570                           
  1571                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  1572  000B34  0E00               	movlw	0
  1573  000B36  6E90               	movwf	144,c	;volatile
  1574                           
  1575                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  1576  000B38  0E00               	movlw	0
  1577  000B3A  6E91               	movwf	145,c	;volatile
  1578  000B3C  0012               	return		;funcret
  1579  000B3E                     __end_of_CCP2_Initialize:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _ADC_Initialize *****************
  1583 ;; Defined at:
  1584 ;;		line 62 in file "mcc_generated_files/adc.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1601 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1602 ;;Total ram usage:        0 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_SYSTEM_Initialize
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text17
  1612  000AF4                     __ptext17:
  1613                           	callstack 0
  1614  000AF4                     _ADC_Initialize:
  1615                           	callstack 29
  1616  000AF4                     
  1617                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1618  000AF4  0E00               	movlw	0
  1619  000AF6  6EC1               	movwf	193,c	;volatile
  1620                           
  1621                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
  1622  000AF8  0E87               	movlw	135
  1623  000AFA  6EC0               	movwf	192,c	;volatile
  1624                           
  1625                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1626  000AFC  0E00               	movlw	0
  1627  000AFE  6EC3               	movwf	195,c	;volatile
  1628                           
  1629                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1630  000B00  0E00               	movlw	0
  1631  000B02  6EC4               	movwf	196,c	;volatile
  1632                           
  1633                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  1634  000B04  0E01               	movlw	1
  1635  000B06  6EC2               	movwf	194,c	;volatile
  1636  000B08  0012               	return		;funcret
  1637  000B0A                     __end_of_ADC_Initialize:
  1638                           	callstack 0
  1639                           
  1640                           	psect	rparam
  1641  0000                     
  1642                           	psect	idloc
  1643                           
  1644                           ;Config register IDLOC0 @ 0x200000
  1645                           ;	unspecified, using default values
  1646  200000                     	org	2097152
  1647  200000  FF                 	db	255
  1648                           
  1649                           ;Config register IDLOC1 @ 0x200001
  1650                           ;	unspecified, using default values
  1651  200001                     	org	2097153
  1652  200001  FF                 	db	255
  1653                           
  1654                           ;Config register IDLOC2 @ 0x200002
  1655                           ;	unspecified, using default values
  1656  200002                     	org	2097154
  1657  200002  FF                 	db	255
  1658                           
  1659                           ;Config register IDLOC3 @ 0x200003
  1660                           ;	unspecified, using default values
  1661  200003                     	org	2097155
  1662  200003  FF                 	db	255
  1663                           
  1664                           ;Config register IDLOC4 @ 0x200004
  1665                           ;	unspecified, using default values
  1666  200004                     	org	2097156
  1667  200004  FF                 	db	255
  1668                           
  1669                           ;Config register IDLOC5 @ 0x200005
  1670                           ;	unspecified, using default values
  1671  200005                     	org	2097157
  1672  200005  FF                 	db	255
  1673                           
  1674                           ;Config register IDLOC6 @ 0x200006
  1675                           ;	unspecified, using default values
  1676  200006                     	org	2097158
  1677  200006  FF                 	db	255
  1678                           
  1679                           ;Config register IDLOC7 @ 0x200007
  1680                           ;	unspecified, using default values
  1681  200007                     	org	2097159
  1682  200007  FF                 	db	255
  1683                           
  1684                           	psect	config
  1685                           
  1686                           ;Config register CONFIG1L @ 0x300000
  1687                           ;	PLL Selection
  1688                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1689                           ;	PLL Enable Configuration bit
  1690                           ;	CFGPLLEN = ON, PLL Enabled
  1691                           ;	CPU System Clock Postscaler
  1692                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1693                           ;	Low Speed USB mode with 48 MHz system clock
  1694                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1695  300000                     	org	3145728
  1696  300000  23                 	db	35
  1697                           
  1698                           ;Config register CONFIG1H @ 0x300001
  1699                           ;	Oscillator Selection
  1700                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  1701                           ;	Primary Oscillator Shutdown
  1702                           ;	PCLKEN = ON, Primary oscillator enabled
  1703                           ;	Fail-Safe Clock Monitor
  1704                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1705                           ;	Internal/External Oscillator Switchover
  1706                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1707  300001                     	org	3145729
  1708  300001  22                 	db	34
  1709                           
  1710                           ;Config register CONFIG2L @ 0x300002
  1711                           ;	Power-up Timer Enable
  1712                           ;	nPWRTEN = ON, Power up timer enabled
  1713                           ;	Brown-out Reset Enable
  1714                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1715                           ;	Brown-out Reset Voltage
  1716                           ;	BORV = 190, BOR set to 1.9V nominal
  1717                           ;	Low-Power Brown-out Reset
  1718                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1719  300002                     	org	3145730
  1720  300002  5E                 	db	94
  1721                           
  1722                           ;Config register CONFIG2H @ 0x300003
  1723                           ;	Watchdog Timer Enable bits
  1724                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1725                           ;	Watchdog Timer Postscaler
  1726                           ;	WDTPS = 32768, 1:32768
  1727  300003                     	org	3145731
  1728  300003  3C                 	db	60
  1729                           
  1730                           ; Padding undefined space
  1731  300004                     	org	3145732
  1732  300004  FF                 	db	255
  1733                           
  1734                           ;Config register CONFIG3H @ 0x300005
  1735                           ;	CCP2 MUX bit
  1736                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1737                           ;	PORTB A/D Enable bit
  1738                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1739                           ;	Timer3 Clock Input MUX bit
  1740                           ;	T3CMX = RC0, T3CKI function is on RC0
  1741                           ;	SDO Output MUX bit
  1742                           ;	SDOMX = RB3, SDO function is on RB3
  1743                           ;	Master Clear Reset Pin Enable
  1744                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1745  300005                     	org	3145733
  1746  300005  D1                 	db	209
  1747                           
  1748                           ;Config register CONFIG4L @ 0x300006
  1749                           ;	Stack Full/Underflow Reset
  1750                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1751                           ;	Single-Supply ICSP Enable bit
  1752                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1753                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1754                           ;	ICPRT = OFF, ICPORT disabled
  1755                           ;	Extended Instruction Set Enable bit
  1756                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1757                           ;	Background Debugger Enable bit
  1758                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1759  300006                     	org	3145734
  1760  300006  85                 	db	133
  1761                           
  1762                           ; Padding undefined space
  1763  300007                     	org	3145735
  1764  300007  FF                 	db	255
  1765                           
  1766                           ;Config register CONFIG5L @ 0x300008
  1767                           ;	Block 0 Code Protect
  1768                           ;	CP0 = OFF, Block 0 is not code-protected
  1769                           ;	Block 1 Code Protect
  1770                           ;	CP1 = OFF, Block 1 is not code-protected
  1771                           ;	Block 2 Code Protect
  1772                           ;	CP2 = OFF, Block 2 is not code-protected
  1773                           ;	Block 3 Code Protect
  1774                           ;	CP3 = OFF, Block 3 is not code-protected
  1775  300008                     	org	3145736
  1776  300008  0F                 	db	15
  1777                           
  1778                           ;Config register CONFIG5H @ 0x300009
  1779                           ;	Boot Block Code Protect
  1780                           ;	CPB = OFF, Boot block is not code-protected
  1781                           ;	Data EEPROM Code Protect
  1782                           ;	CPD = OFF, Data EEPROM is not code-protected
  1783  300009                     	org	3145737
  1784  300009  C0                 	db	192
  1785                           
  1786                           ;Config register CONFIG6L @ 0x30000A
  1787                           ;	Block 0 Write Protect
  1788                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1789                           ;	Block 1 Write Protect
  1790                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1791                           ;	Block 2 Write Protect
  1792                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1793                           ;	Block 3 Write Protect
  1794                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1795  30000A                     	org	3145738
  1796  30000A  0F                 	db	15
  1797                           
  1798                           ;Config register CONFIG6H @ 0x30000B
  1799                           ;	Configuration Registers Write Protect
  1800                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1801                           ;	Boot Block Write Protect
  1802                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1803                           ;	Data EEPROM Write Protect
  1804                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1805  30000B                     	org	3145739
  1806  30000B  E0                 	db	224
  1807                           
  1808                           ;Config register CONFIG7L @ 0x30000C
  1809                           ;	Block 0 Table Read Protect
  1810                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1811                           ;	Block 1 Table Read Protect
  1812                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1813                           ;	Block 2 Table Read Protect
  1814                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1815                           ;	Block 3 Table Read Protect
  1816                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1817  30000C                     	org	3145740
  1818  30000C  0F                 	db	15
  1819                           
  1820                           ;Config register CONFIG7H @ 0x30000D
  1821                           ;	Boot Block Table Read Protect
  1822                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1823  30000D                     	org	3145741
  1824  30000D  40                 	db	64
  1825                           tosu	equ	0xFFF
  1826                           tosh	equ	0xFFE
  1827                           tosl	equ	0xFFD
  1828                           stkptr	equ	0xFFC
  1829                           pclatu	equ	0xFFB
  1830                           pclath	equ	0xFFA
  1831                           pcl	equ	0xFF9
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           prodh	equ	0xFF4
  1837                           prodl	equ	0xFF3
  1838                           indf0	equ	0xFEF
  1839                           postinc0	equ	0xFEE
  1840                           postdec0	equ	0xFED
  1841                           preinc0	equ	0xFEC
  1842                           plusw0	equ	0xFEB
  1843                           fsr0h	equ	0xFEA
  1844                           fsr0l	equ	0xFE9
  1845                           wreg	equ	0xFE8
  1846                           indf1	equ	0xFE7
  1847                           postinc1	equ	0xFE6
  1848                           postdec1	equ	0xFE5
  1849                           preinc1	equ	0xFE4
  1850                           plusw1	equ	0xFE3
  1851                           fsr1h	equ	0xFE2
  1852                           fsr1l	equ	0xFE1
  1853                           bsr	equ	0xFE0
  1854                           indf2	equ	0xFDF
  1855                           postinc2	equ	0xFDE
  1856                           postdec2	equ	0xFDD
  1857                           preinc2	equ	0xFDC
  1858                           plusw2	equ	0xFDB
  1859                           fsr2h	equ	0xFDA
  1860                           fsr2l	equ	0xFD9
  1861                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      74
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(2) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_nrF2401_init_RX
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4138
                                              9 COMRAM     2     2      0
                  _SYSTEM_Initialize
                    _nrF2401_init_RX
                   _nrf2401_haydatos
                     _nrf2401_recibe
                         _spi_s_init
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf2401_recibe                                       1     1      0     105
                                              2 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (1) _nrf2401_haydatos                                     0     0      0     120
                         _get_Status
 ---------------------------------------------------------------------------------
 (2) _get_Status                                           0     0      0     120
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (3) _nrf2401_read                                         2     2      0     120
                                              2 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_read                                           2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_RX                                      1     1      0    3913
                                              8 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              6     3      3     765
                                              2 COMRAM     6     3      3
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    1593
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1533
                                              2 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0      60
                                              2 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_write                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _nrf2401_haydatos
     _get_Status
       _nrf2401_read
         _spi_s_read
         _spi_s_write
   _nrf2401_recibe
     _spi_s_read
     _spi_s_write
   _spi_s_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      4A       1       77.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68       6        0.0%
DATA                 0      0      68       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 04 17:37:40 2022

                                u10 0980                                  u11 097C  
                                u20 099C                                  u21 0998  
                                u30 092A                                  u31 0926  
                                u40 0958                                  u41 0954  
                                u50 0A54                                  u51 0A50  
                               l121 0A54                                 l115 0B2E  
                               l301 0A72                                 l118 0A46  
                               l160 0B3C                                 l250 0958  
                               l243 099E                                 l148 0A12  
                               l253 0AAA                                 l237 0AF2  
                               l246 091C                                 l263 09DC  
                               l248 0930                                 l256 0B1C  
                               l264 09E4                                 l273 0ADC  
                               l282 0896                                 l179 0B08  
                               l259 0A8E                                 l279 0AC4  
                               l288 0B44                                 u100 0A6A  
                               u101 0A66                                 u230 09DC  
                               u231 09D8                                 u307 08FC  
                               u317 0ABE                                 u270 08E2  
                               u327 0A88                                 u271 08DE  
                               u337 096E                                 u347 0986  
                               u357 09E0                                 u285 08F0  
                               u286 08F2                                 u367 0AA6  
                               u377 0B18                                 u297 08B6  
                               u387 093A                                 u397 0942  
                               wreg 000FE8                          _TXSTA1bits 000FAC  
                   _nrF2401_init_RX 081C                                l1100 0946  
                              l1102 0948                                l1112 0B0C  
                              l1120 0A76                                l1114 0B0E  
                              l1130 0A86                                l1122 0A76  
                              l1140 0B30                                l1116 0B14  
                              l1060 0966                                l1124 0A78  
                              l1220 0ABC                                l1142 0AF4  
                              l1134 09E6                                l1118 0B16  
                              l1070 0982                                l1062 096A  
                              l1054 095A                                l1126 0A7E  
                              l1222 0AC2                                l1214 0AAC  
                              l1136 0A10                                l1400 0A94  
                              l1072 0984                                l1064 096C  
                              l1128 0A84                                l1216 0AAE  
                              l1138 0A36                                l1090 0932  
                              l1082 0914                                l1402 0AA2  
                              l1410 09AA                                l1074 098A  
                              l1066 0972                                l1218 0ABA  
                              l1092 0936                                l1404 0AA4  
                              l1420 09CC                                l1076 098C  
                              l1068 0980                                l1244 0A70  
                              l1236 0A56                                l1500 08A6  
                              l1094 0938                                l1422 09DE  
                              l1406 09A0                                l1078 099C  
                              l1166 0B3E                                l1238 0A6A  
                              l1510 08C8                                l1502 08AA  
                              l1096 093E                                l1088 092A  
                              l1416 09AE                                l1408 09A2  
                              l1512 08CE                                l1504 08AC  
                              l1186 0B1E                                l1098 0940  
                              l1426 0AC6                                l1418 09CA  
                              l1514 08E2                                l1506 08C2  
                              l1460 0894                                l1452 081E  
                              l1188 0ADE                                l1516 08E8  
                              l1508 08C4                                l1454 0820  
                              l1518 08F2                                l1456 0870  
                              l1458 0880                                l1398 0A92  
                              l1494 0898                                l1496 089C  
                              l1498 08A2                                STR_1 080B  
                              STR_3 0817                                STR_5 0811  
                              _LATA 000F89                                _LATB 000F8A  
                              _LATC 000F8B                                _WPUB 000F85  
           __end_of_CCP2_Initialize 0B3E                                _main 0898  
                              start 0000                    nrf2401_write@reg 0043  
                      ?_flush_TX_RX 0040                        ___param_bank 000000  
   __end_of_nrf2401_direccion_TX_RX 09E6      __size_of_OSCILLATOR_Initialize 0020  
     __end_of_OSCILLATOR_Initialize 0A56                               ?_main 0040  
              nrf2401_recibe@valor_ 0042                               _LATB0 007C50  
                             _LATA5 007C4D                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _trama 0022                               _texto 0001  
                             tablat 000FF5                               status 000FD8  
_EUSART1_DefaultFramingErrorHandler 000000                     __initialization 0A14  
                      __end_of_main 0912                    spi_s_read@cont_s 0041  
                            ??_main 0049                       __activetblptr 000002  
           __end_of_nrF2401_init_RX 0898                __end_of_nrf2401_read 0A90  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ACTCON 000FB5  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR2H 000F91                              _CCPR2L 000F90  
                            _ANSELA 000F5B                              _ANSELB 000F5C  
                            _ANSELC 000F5D                __end_of_direccion_rx 0806  
              __end_of_direccion_tx 080B                              _RCREG1 000FAE  
                            _RCSTA1 000FAB                              _OSCCON 000FD3  
                            _PLLRDY 007E97                              _SPBRG1 000FAF  
                  ?_CCP2_Initialize 0040                              _TXREG1 000FAD  
                            _TXSTA1 000FAC                     _nrf2401_comando 0B0A  
                            _datorx 001E           __size_of_nrf2401_haydatos 001E  
                            clear_0 0A1A                              clear_1 0A26  
                            isa$std 000001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                   _SYSTEM_Initialize 0B1E  
              nrF2401_init_RX@canal 0048                          __accesstop 0060  
           __end_of__initialization 0A2C                        ?_spi_s_write 0040  
                ?_SYSTEM_Initialize 0040                       ___rparam_used 000001  
                nrf2401_write@valor 0042                      __pcstackCOMRAM 0040  
               ??_SYSTEM_Initialize 0040                __size_of_flush_TX_RX 0018  
                  ?_nrF2401_init_RX 0040           __end_of_SYSTEM_Initialize 0B30  
                        __pbssBANK0 0060             __end_of_nrf2401_comando 0B1E  
            nrf2401_comando@comando 0042               __end_of_nrf2401_write 0AAC  
                           _CCP2CON 000F97               __size_of_nrf2401_read 001C  
           __size_of_ADC_Initialize 0016                          _get_Status 0B3E  
                           _OSCCON2 000FD2            ?_nrf2401_direccion_TX_RX 0042  
                           _OSCTUNE 000F9B                             _SPBRGH1 000FB0  
     nrf2401_direccion_TX_RX@cont_s 0047                _ADC_InterruptHandler 0015  
                           __Hparam 0000                             __Lparam 0000  
                      _nrf2401_read 0A74             __size_of_nrf2401_recibe 001A  
                  _nrf2401_haydatos 0A56                        __psmallconst 0800  
                      _direccion_rx 0801                        _direccion_tx 0806  
                           __pcinit 0A14                             __ramtop 0800  
                           __ptext0 0898                             _flag_rx 001D  
                           __ptext1 0ADE                             __ptext2 0AAC  
                           __ptext3 0A56                             __ptext4 0B3E  
                           __ptext5 0A74                             __ptext6 095A  
                           __ptext7 081C                             __ptext8 09A0  
                           __ptext9 0AC6                    spi_s_write@dato_ 0040  
             _OSCILLATOR_Initialize 0A36            ??_PIN_MANAGER_Initialize 0040  
                           _procesa 0060                             _puntero 001F  
        __size_of_SYSTEM_Initialize 0012   nrf2401_direccion_TX_RX@direccion_ 0042  
              end_of_initialization 0A2C                       __Lmediumconst 0000  
       _EUSART1_OverrunErrorHandler 0019                    ?_nrf2401_comando 0040  
              __size_of_spi_s_write 0048                             postinc0 000FEE  
                         _PORTAbits 000F80                           _PORTBbits 000F81  
                       ?_get_Status 0040                          _spi_s_init 0ADE  
                        _spi_s_read 095A                     nrf2401_read@reg 0042  
                         _TRISBbits 000F93                           _TRISCbits 000F94  
          __size_of_CCP2_Initialize 000E                      _ADC_Initialize 0AF4  
            ?_OSCILLATOR_Initialize 0040                 start_initialization 0A14  
   __size_of_PIN_MANAGER_Initialize 002E                     spi_s_read@dato_ 0040  
               __size_of_get_Status 0008                       ??_flush_TX_RX 0044  
                    _nrf2401_recibe 0AAC              __end_of_ADC_Initialize 0B0A  
                       ?_spi_s_init 0040                         ?_spi_s_read 0040  
                       __pbssCOMRAM 0001            __end_of_nrf2401_haydatos 0A74  
          __size_of_nrF2401_init_RX 007C    __size_of_nrf2401_direccion_TX_RX 0046  
            __end_of_nrf2401_recibe 0AC6              _PIN_MANAGER_Initialize 09E6  
                       _dato_serial 0020                     ?_ADC_Initialize 0040  
               __end_of_flush_TX_RX 0ADE                         __smallconst 0800  
                 ??_CCP2_Initialize 0040     nrf2401_direccion_TX_RX@registro 0044  
                          _BAUDCON1 000FB8  _EUSART1_DefaultOverrunErrorHandler 000000  
              _EUSART1_ErrorHandler 0017              __size_of_nrf2401_write 001C  
                          _LATBbits 000F8A                            _LATCbits 000F8B  
               __size_of_spi_s_init 0016                 __size_of_spi_s_read 0046  
                   ?_nrf2401_recibe 0040                            _PIR1bits 000F9E  
                        _ADCON0bits 000FC2                        ??_get_Status 0044  
                       _INTCON2bits 000FF1                       ??_spi_s_write 0040  
                          __Hrparam 0000                  __end_of_get_Status 0B46  
                 ??_nrF2401_init_RX 0048                            __Lrparam 0000  
                       _flush_TX_RX 0AC6                       _nrf2401_write 0A90  
           ??_OSCILLATOR_Initialize 0040            __size_of_nrf2401_comando 0014  
       _EUSART1_DefaultErrorHandler 000000                            __ptext10 0A90  
                          __ptext11 0B0A                            __ptext12 0912  
                          __ptext13 0B1E                            __ptext14 09E6  
                          __ptext15 0A36                            __ptext16 0B30  
                          __ptext17 0AF4                   spi_s_write@cont_s 0041  
                     __size_of_main 007A             _nrf2401_direccion_TX_RX 09A0  
                          isa$xinst 000000                      ?_nrf2401_write 0042  
               __end_of_spi_s_write 095A         _EUSART1_FramingErrorHandler 001B  
                      ??_spi_s_init 0040                        ??_spi_s_read 0040  
                        _INTCONbits 000FF2                   ?_nrf2401_haydatos 0040  
           ?_PIN_MANAGER_Initialize 0040                  ??_nrf2401_haydatos 0044  
                        _RCSTA1bits 000FAB                    ??_ADC_Initialize 0040  
                     ?_nrf2401_read 0040                  __end_of_spi_s_init 0AF4  
                __end_of_spi_s_read 09A0                     _CCP2_Initialize 0B30  
                _eusart1RxLastError 0021                   ??_nrf2401_comando 0042  
         ??_nrf2401_direccion_TX_RX 0045      __end_of_PIN_MANAGER_Initialize 0A14  
                  ??_nrf2401_recibe 0042                   nrf2401_read@dato_ 0043  
                       _spi_s_write 0912                     ??_nrf2401_write 0043  
                    ??_nrf2401_read 0042  
