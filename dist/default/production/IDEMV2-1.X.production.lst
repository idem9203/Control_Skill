

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 05 19:46:08 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F25K50 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    72  0000                     
    73 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    74  0000                     
    75 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    76  0000                     
    77                           	psect	smallconst
    78  000800                     __psmallconst:
    79                           	callstack 0
    80  000800  00                 	db	0
    81  000801                     _direccion_rx:
    82                           	callstack 0
    83  000801  11                 	db	17
    84  000802  11                 	db	17
    85  000803  11                 	db	17
    86  000804  11                 	db	17
    87  000805  11                 	db	17
    88  000806                     __end_of_direccion_rx:
    89                           	callstack 0
    90  000806                     _direccion_tx:
    91                           	callstack 0
    92  000806  11                 	db	17
    93  000807  11                 	db	17
    94  000808  11                 	db	17
    95  000809  11                 	db	17
    96  00080A  11                 	db	17
    97  00080B                     __end_of_direccion_tx:
    98                           	callstack 0
    99  0000                     _ANSELA	set	3931
   100  0000                     _ANSELB	set	3932
   101  0000                     _ANSELC	set	3933
   102  0000                     _PORTBbits	set	3969
   103  0000                     _LATCbits	set	3979
   104  0000                     _LATBbits	set	3978
   105  0000                     _TRISBbits	set	3987
   106  0000                     _TRISCbits	set	3988
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _ADCON0	set	4034
   109  0000                     _ADRESH	set	4036
   110  0000                     _ADRESL	set	4035
   111  0000                     _ADCON2	set	4032
   112  0000                     _ADCON1	set	4033
   113  0000                     _CCPR2H	set	3985
   114  0000                     _CCPR2L	set	3984
   115  0000                     _CCP2CON	set	3991
   116  0000                     _INTCONbits	set	4082
   117  0000                     _INTCON2bits	set	4081
   118  0000                     _WPUB	set	3973
   119  0000                     _TRISC	set	3988
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISA	set	3986
   122  0000                     _LATC	set	3979
   123  0000                     _LATB	set	3978
   124  0000                     _LATA	set	3977
   125  0000                     _ACTCON	set	4021
   126  0000                     _OSCTUNE	set	3995
   127  0000                     _OSCCON2	set	4050
   128  0000                     _OSCCON	set	4051
   129  0000                     _TXREG1	set	4013
   130  0000                     _RCREG1	set	4014
   131  0000                     _RCSTA1bits	set	4011
   132  0000                     _TXSTA1bits	set	4012
   133  0000                     _PIR1bits	set	3998
   134  0000                     _SPBRGH1	set	4016
   135  0000                     _SPBRG1	set	4015
   136  0000                     _TXSTA1	set	4012
   137  0000                     _RCSTA1	set	4011
   138  0000                     _BAUDCON1	set	4024
   139  0000                     _LATA5	set	31821
   140  0000                     _LATB0	set	31824
   141  0000                     _PLLRDY	set	32407
   142  00080B                     STR_1:
   143  00080B  63                 	db	99	;'c'
   144  00080C  69                 	db	105	;'i'
   145  00080D  65                 	db	101	;'e'
   146  00080E  72                 	db	114	;'r'
   147  00080F  3D                 	db	61	;'='
   148  000810  00                 	db	0
   149  000811                     STR_5:
   150  000811  61                 	db	97	;'a'
   151  000812  70                 	db	112	;'p'
   152  000813  65                 	db	101	;'e'
   153  000814  72                 	db	114	;'r'
   154  000815  3D                 	db	61	;'='
   155  000816  00                 	db	0
   156  000817                     STR_3:
   157  000817  6F                 	db	111	;'o'
   158  000818  6E                 	db	110	;'n'
   159  000819  00                 	db	0
   160  00081A  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  000A7E                     __pcinit:
   166                           	callstack 0
   167  000A7E                     start_initialization:
   168                           	callstack 0
   169  000A7E                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Clear objects allocated to BANK0 (30 bytes)
   173  000A7E  EE00  F060         	lfsr	0,__pbssBANK0
   174  000A82  0E1E               	movlw	30
   175  000A84                     clear_0:
   176  000A84  6AEE               	clrf	postinc0,c
   177  000A86  06E8               	decf	wreg,f,c
   178  000A88  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   181  000A8A  6A4D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   182                           
   183                           ; Clear objects allocated to COMRAM (65 bytes)
   184  000A8C  EE00  F001         	lfsr	0,__pbssCOMRAM
   185  000A90  0E41               	movlw	65
   186  000A92                     clear_1:
   187  000A92  6AEE               	clrf	postinc0,c
   188  000A94  06E8               	decf	wreg,f,c
   189  000A96  E1FD               	bnz	clear_1
   190  000A98                     end_of_initialization:
   191                           	callstack 0
   192  000A98                     __end_of__initialization:
   193                           	callstack 0
   194  000A98  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195  000A9A  6EF8               	movwf	tblptru,c
   196  000A9C  0100               	movlb	0
   197  000A9E  EF0E  F004         	goto	_main	;jump to C main() function
   198                           
   199                           	psect	bitbssCOMRAM
   200  000268                     __pbitbssCOMRAM:
   201                           	callstack 0
   202  000268                     _on:
   203                           	callstack 0
   204  000268                     	ds	1
   205                           
   206                           	psect	bssCOMRAM
   207  000001                     __pbssCOMRAM:
   208                           	callstack 0
   209  000001                     _texto:
   210                           	callstack 0
   211  000001                     	ds	20
   212  000015                     _valor:
   213                           	callstack 0
   214  000015                     	ds	2
   215  000017                     _ADC_InterruptHandler:
   216                           	callstack 0
   217  000017                     	ds	2
   218  000019                     _EUSART1_ErrorHandler:
   219                           	callstack 0
   220  000019                     	ds	2
   221  00001B                     _EUSART1_OverrunErrorHandler:
   222                           	callstack 0
   223  00001B                     	ds	2
   224  00001D                     _EUSART1_FramingErrorHandler:
   225                           	callstack 0
   226  00001D                     	ds	2
   227  00001F                     _flag_rx:
   228                           	callstack 0
   229  00001F                     	ds	1
   230  000020                     _datorx:
   231                           	callstack 0
   232  000020                     	ds	1
   233  000021                     _puntero:
   234                           	callstack 0
   235  000021                     	ds	1
   236  000022                     _dato_serial:
   237                           	callstack 0
   238  000022                     	ds	1
   239  000023                     _eusart1RxLastError:
   240                           	callstack 0
   241  000023                     	ds	1
   242  000024                     _trama:
   243                           	callstack 0
   244  000024                     	ds	30
   245                           
   246                           	psect	bssBANK0
   247  000060                     __pbssBANK0:
   248                           	callstack 0
   249  000060                     _procesa:
   250                           	callstack 0
   251  000060                     	ds	30
   252                           
   253                           	psect	cstackCOMRAM
   254  000042                     __pcstackCOMRAM:
   255                           	callstack 0
   256  000042                     ?_ADC_GetConversion:
   257                           	callstack 0
   258  000042                     spi_s_read@dato_:
   259                           	callstack 0
   260  000042                     spi_s_write@dato_:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x0
   264  000042                     	ds	1
   265  000043                     spi_s_read@cont_s:
   266                           	callstack 0
   267  000043                     spi_s_write@cont_s:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x1
   271  000043                     	ds	1
   272  000044                     ??_ADC_GetConversion:
   273  000044                     nrf2401_write@valor:
   274                           	callstack 0
   275  000044                     nrf2401_comando@comando:
   276                           	callstack 0
   277  000044                     nrf2401_read@reg:
   278                           	callstack 0
   279  000044                     nrf2401_recibe@valor_:
   280                           	callstack 0
   281  000044                     nrf2401_direccion_TX_RX@direccion_:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285  000044                     	ds	1
   286  000045                     nrf2401_write@reg:
   287                           	callstack 0
   288  000045                     nrf2401_read@dato_:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x3
   292  000045                     	ds	1
   293  000046                     ADC_GetConversion@channel:
   294                           	callstack 0
   295  000046                     nrf2401_direccion_TX_RX@registro:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x4
   299  000046                     	ds	1
   300  000047                     ??_nrf2401_direccion_TX_RX:
   301                           
   302                           ; 1 bytes @ 0x5
   303  000047                     	ds	2
   304  000049                     nrf2401_direccion_TX_RX@cont_s:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x7
   308  000049                     	ds	1
   309  00004A                     nrF2401_init_RX@canal:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x8
   313  00004A                     	ds	1
   314  00004B                     ??_main:
   315                           
   316                           ; 1 bytes @ 0x9
   317  00004B                     	ds	2
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 145 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0
   340 ;;      Temps:          2       0       0       0       0       0       0       0       0
   341 ;;      Totals:         2       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels required when called: 4
   344 ;; This function calls:
   345 ;;		_ADC_GetConversion
   346 ;;		_SYSTEM_Initialize
   347 ;;		_nrF2401_init_RX
   348 ;;		_nrf2401_haydatos
   349 ;;		_nrf2401_recibe
   350 ;;		_spi_s_init
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357  00081C                     __ptext0:
   358                           	callstack 0
   359  00081C                     _main:
   360                           	callstack 27
   361  00081C                     
   362                           ;main.c: 148:     SYSTEM_Initialize();
   363  00081C  ECC5  F005         	call	_SYSTEM_Initialize	;wreg free
   364  000820                     
   365                           ;main.c: 167:     ANSELA = 0b00000111;
   366  000820  0E07               	movlw	7
   367  000822  010F               	movlb	15	; () banked
   368  000824  6F5B               	movwf	91,b	;volatile
   369  000826                     
   370                           ; BSR set to: 15
   371                           ;main.c: 168:     ANSELB = 0b00000000;
   372  000826  0E00               	movlw	0
   373  000828  6F5C               	movwf	92,b	;volatile
   374  00082A                     
   375                           ; BSR set to: 15
   376                           ;main.c: 169:     ANSELC = 0x00;
   377  00082A  0E00               	movlw	0
   378  00082C  6F5D               	movwf	93,b	;volatile
   379  00082E                     
   380                           ; BSR set to: 15
   381                           ;main.c: 176:     LATA5 = 1;
   382  00082E  8A89               	bsf	3977,5,c	;volatile
   383  000830                     
   384                           ; BSR set to: 15
   385                           ;main.c: 177:     _delay((unsigned long)((2000)*(48000000/4000.0)));
   386  000830  0E7A               	movlw	122
   387  000832  6E4C               	movwf	(??_main+1)^0,c
   388  000834  0EC1               	movlw	193
   389  000836  6E4B               	movwf	??_main^0,c
   390  000838  0E82               	movlw	130
   391  00083A                     u327:
   392  00083A  2EE8               	decfsz	wreg,f,c
   393  00083C  D7FE               	bra	u327
   394  00083E  2E4B               	decfsz	??_main^0,f,c
   395  000840  D7FC               	bra	u327
   396  000842  2E4C               	decfsz	(??_main+1)^0,f,c
   397  000844  D7FA               	bra	u327
   398  000846                     
   399                           ;main.c: 178:     LATA5 = 0;
   400  000846  9A89               	bcf	3977,5,c	;volatile
   401  000848                     
   402                           ;main.c: 181:     spi_s_init();
   403  000848  ECA5  F005         	call	_spi_s_init	;wreg free
   404  00084C                     
   405                           ;main.c: 183:     nrF2401_init_RX(17);
   406  00084C  0E11               	movlw	17
   407  00084E  EC63  F004         	call	_nrF2401_init_RX
   408  000852                     l1537:
   409                           
   410                           ;main.c: 187:     {;main.c: 190:         valor = ADC_GetConversion(0);
   411  000852  0E00               	movlw	0
   412  000854  EC0B  F005         	call	_ADC_GetConversion
   413  000858  C042  F015         	movff	?_ADC_GetConversion,_valor
   414  00085C  C043  F016         	movff	?_ADC_GetConversion+1,_valor+1
   415  000860                     
   416                           ;main.c: 192:         if(nrf2401_haydatos() == 1)
   417  000860  EC61  F005         	call	_nrf2401_haydatos	;wreg free
   418  000864  06E8               	decf	wreg,f,c
   419  000866  A4D8               	btfss	status,2,c
   420  000868  EF38  F004         	goto	u291
   421  00086C  EF3A  F004         	goto	u290
   422  000870                     u291:
   423  000870  EF53  F004         	goto	l1551
   424  000874                     u290:
   425  000874                     
   426                           ;main.c: 193:         {;main.c: 194:             dato_serial = nrf2401_recibe();
   427  000874  EC8C  F005         	call	_nrf2401_recibe	;wreg free
   428  000878  6E22               	movwf	_dato_serial^0,c
   429  00087A                     
   430                           ;main.c: 195:             if (dato_serial == 1)
   431  00087A  0422               	decf	_dato_serial^0,w,c
   432  00087C  A4D8               	btfss	status,2,c
   433  00087E  EF43  F004         	goto	u301
   434  000882  EF45  F004         	goto	u300
   435  000886                     u301:
   436  000886  EF49  F004         	goto	l1547
   437  00088A                     u300:
   438  00088A                     
   439                           ;main.c: 196:             {;main.c: 197:                 on = 1;
   440  00088A  804D               	bsf	(_on/(0+8))^0,_on& (0+7),c
   441                           
   442                           ;main.c: 198:                 LATA5 = on;
   443  00088C  8A89               	bsf	3977,5,c	;volatile
   444                           
   445                           ;main.c: 199:             }
   446  00088E  EF53  F004         	goto	l1551
   447  000892                     l1547:
   448  000892  5022               	movf	_dato_serial^0,w,c
   449  000894  A4D8               	btfss	status,2,c
   450  000896  EF4F  F004         	goto	u311
   451  00089A  EF51  F004         	goto	u310
   452  00089E                     u311:
   453  00089E  EF53  F004         	goto	l1551
   454  0008A2                     u310:
   455  0008A2                     
   456                           ;main.c: 201:             {;main.c: 202:                 on = 0;
   457  0008A2  904D               	bcf	(_on/(0+8))^0,_on& (0+7),c
   458                           
   459                           ;main.c: 203:                 LATA5 = 0;
   460  0008A4  9A89               	bcf	3977,5,c	;volatile
   461  0008A6                     l1551:
   462                           
   463                           ;main.c: 207:         _delay((unsigned long)((100)*(48000000/4000.0)));
   464  0008A6  0E07               	movlw	7
   465  0008A8  6E4C               	movwf	(??_main+1)^0,c
   466  0008AA  0E17               	movlw	23
   467  0008AC  6E4B               	movwf	??_main^0,c
   468  0008AE  0E6A               	movlw	106
   469  0008B0                     u337:
   470  0008B0  2EE8               	decfsz	wreg,f,c
   471  0008B2  D7FE               	bra	u337
   472  0008B4  2E4B               	decfsz	??_main^0,f,c
   473  0008B6  D7FC               	bra	u337
   474  0008B8  2E4C               	decfsz	(??_main+1)^0,f,c
   475  0008BA  D7FA               	bra	u337
   476  0008BC  D000               	nop2	
   477  0008BE  EF29  F004         	goto	l1537
   478  0008C2  EF00  F000         	goto	start
   479  0008C6                     __end_of_main:
   480                           	callstack 0
   481                           
   482 ;; *************** function _spi_s_init *****************
   483 ;; Defined at:
   484 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		None
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   498 ;;      Params:         0       0       0       0       0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text1
   512  000B4A                     __ptext1:
   513                           	callstack 0
   514  000B4A                     _spi_s_init:
   515                           	callstack 30
   516  000B4A                     
   517                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
   518  000B4A  9294               	bcf	148,1,c	;volatile
   519                           
   520                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
   521  000B4C  9493               	bcf	147,2,c	;volatile
   522                           
   523                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
   524  000B4E  9494               	bcf	148,2,c	;volatile
   525                           
   526                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
   527  000B50  8693               	bsf	147,3,c	;volatile
   528                           
   529                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
   530  000B52  9293               	bcf	147,1,c	;volatile
   531                           
   532                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
   533  000B54  8094               	bsf	148,0,c	;volatile
   534                           
   535                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
   536  000B56  948A               	bcf	138,2,c	;volatile
   537                           
   538                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
   539  000B58  948B               	bcf	139,2,c	;volatile
   540                           
   541                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
   542  000B5A  928B               	bcf	139,1,c	;volatile
   543                           
   544                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
   545  000B5C  928A               	bcf	138,1,c	;volatile
   546  000B5E  0012               	return		;funcret
   547  000B60                     __end_of_spi_s_init:
   548                           	callstack 0
   549                           
   550 ;; *************** function _nrf2401_recibe *****************
   551 ;; Defined at:
   552 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  valor_          1    2[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      unsigned char 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         0       0       0       0       0       0       0       0       0
   567 ;;      Locals:         1       0       0       0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0
   569 ;;      Totals:         1       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        1 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 1
   573 ;; This function calls:
   574 ;;		_spi_s_read
   575 ;;		_spi_s_write
   576 ;; This function is called by:
   577 ;;		_main
   578 ;;		_nrf2401_recibe_Text
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text2
   583  000B18                     __ptext2:
   584                           	callstack 0
   585  000B18                     _nrf2401_recibe:
   586                           	callstack 29
   587  000B18                     
   588                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
   589  000B18  948B               	bcf	139,2,c	;volatile
   590  000B1A                     
   591                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
   592  000B1A  0E61               	movlw	97
   593  000B1C  ECA1  F004         	call	_spi_s_write
   594                           
   595                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
   596  000B20  ECC5  F004         	call	_spi_s_read	;wreg free
   597  000B24  6E44               	movwf	nrf2401_recibe@valor_^0,c
   598  000B26                     
   599                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
   600  000B26  848B               	bsf	139,2,c	;volatile
   601  000B28                     
   602                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   603  000B28  0E14               	movlw	20
   604  000B2A                     u347:
   605  000B2A  2EE8               	decfsz	wreg,f,c
   606  000B2C  D7FE               	bra	u347
   607  000B2E                     
   608                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
   609  000B2E  5044               	movf	nrf2401_recibe@valor_^0,w,c
   610  000B30  0012               	return		;funcret
   611  000B32                     __end_of_nrf2401_recibe:
   612                           	callstack 0
   613                           
   614 ;; *************** function _nrf2401_haydatos *****************
   615 ;; Defined at:
   616 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      unsigned char 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         0       0       0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 3
   637 ;; This function calls:
   638 ;;		_get_Status
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text3
   645  000AC2                     __ptext3:
   646                           	callstack 0
   647  000AC2                     _nrf2401_haydatos:
   648                           	callstack 27
   649  000AC2                     
   650                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
   651  000AC2  ECD5  F005         	call	_get_Status	;wreg free
   652  000AC6  0A40               	xorlw	64
   653  000AC8  A4D8               	btfss	status,2,c
   654  000ACA  EF69  F005         	goto	u111
   655  000ACE  EF6B  F005         	goto	u110
   656  000AD2                     u111:
   657  000AD2  EF6E  F005         	goto	l1261
   658  000AD6                     u110:
   659  000AD6  0E01               	movlw	1
   660  000AD8  EF6F  F005         	goto	l301
   661  000ADC                     l1261:
   662  000ADC  0E00               	movlw	0
   663  000ADE                     l301:
   664  000ADE  0012               	return		;funcret
   665  000AE0                     __end_of_nrf2401_haydatos:
   666                           	callstack 0
   667                           
   668 ;; *************** function _get_Status *****************
   669 ;; Defined at:
   670 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      unsigned char 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   684 ;;      Params:         0       0       0       0       0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0       0       0       0       0
   687 ;;      Totals:         0       0       0       0       0       0       0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 2
   691 ;; This function calls:
   692 ;;		_nrf2401_read
   693 ;; This function is called by:
   694 ;;		_nrf2401_haydatos
   695 ;;		_nrf2401_recibe_Text
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text4
   700  000BAA                     __ptext4:
   701                           	callstack 0
   702  000BAA                     _get_Status:
   703                           	callstack 27
   704  000BAA                     
   705                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
   706  000BAA  0E07               	movlw	7
   707  000BAC  EC70  F005         	call	_nrf2401_read
   708  000BB0  0012               	return		;funcret
   709  000BB2                     __end_of_get_Status:
   710                           	callstack 0
   711                           
   712 ;; *************** function _nrf2401_read *****************
   713 ;; Defined at:
   714 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  reg             1    wreg     unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  reg             1    2[COMRAM] unsigned char 
   719 ;;  dato_           1    3[COMRAM] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      unsigned char 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   729 ;;      Params:         0       0       0       0       0       0       0       0       0
   730 ;;      Locals:         2       0       0       0       0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 1
   736 ;; This function calls:
   737 ;;		_spi_s_read
   738 ;;		_spi_s_write
   739 ;; This function is called by:
   740 ;;		_get_Status
   741 ;;		_get_fifo_status
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text5
   746  000AE0                     __ptext5:
   747                           	callstack 0
   748  000AE0                     _nrf2401_read:
   749                           	callstack 27
   750                           
   751                           ;incstack = 0
   752                           ;nrf2401_read@reg stored from wreg
   753  000AE0  6E44               	movwf	nrf2401_read@reg^0,c
   754  000AE2                     
   755                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
   756  000AE2  948B               	bcf	139,2,c	;volatile
   757  000AE4                     
   758                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
   759  000AE4  5044               	movf	nrf2401_read@reg^0,w,c
   760  000AE6  ECA1  F004         	call	_spi_s_write
   761  000AEA                     
   762                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
   763  000AEA  ECC5  F004         	call	_spi_s_read	;wreg free
   764  000AEE  6E45               	movwf	nrf2401_read@dato_^0,c
   765  000AF0                     
   766                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
   767  000AF0  848B               	bsf	139,2,c	;volatile
   768  000AF2                     
   769                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
   770  000AF2  0E14               	movlw	20
   771  000AF4                     u357:
   772  000AF4  2EE8               	decfsz	wreg,f,c
   773  000AF6  D7FE               	bra	u357
   774                           
   775                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
   776  000AF8  5045               	movf	nrf2401_read@dato_^0,w,c
   777  000AFA  0012               	return		;funcret
   778  000AFC                     __end_of_nrf2401_read:
   779                           	callstack 0
   780                           
   781 ;; *************** function _spi_s_read *****************
   782 ;; Defined at:
   783 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  cont_s          1    1[COMRAM] unsigned char 
   788 ;;  dato_           1    0[COMRAM] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      unsigned char 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   798 ;;      Params:         0       0       0       0       0       0       0       0       0
   799 ;;      Locals:         2       0       0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0
   801 ;;      Totals:         2       0       0       0       0       0       0       0       0
   802 ;;Total ram usage:        2 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_nrf2401_read
   808 ;;		_nrf2401_recibe
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text6
   813  00098A                     __ptext6:
   814                           	callstack 0
   815  00098A                     _spi_s_read:
   816                           	callstack 29
   817  00098A                     
   818                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
   819  00098A  0E00               	movlw	0
   820  00098C  6E43               	movwf	spi_s_read@cont_s^0,c
   821                           
   822                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
   823  00098E  0E00               	movlw	0
   824  000990  6E42               	movwf	spi_s_read@dato_^0,c
   825                           
   826                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
   827  000992  0E00               	movlw	0
   828  000994  6E43               	movwf	spi_s_read@cont_s^0,c
   829  000996                     l1067:
   830                           
   831                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
   832  000996  90D8               	bcf	status,0,c
   833  000998  3642               	rlcf	spi_s_read@dato_^0,f,c
   834  00099A                     
   835                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
   836  00099A  848A               	bsf	138,2,c	;volatile
   837  00099C                     
   838                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
   839  00099C  0E04               	movlw	4
   840  00099E                     u367:
   841  00099E  2EE8               	decfsz	wreg,f,c
   842  0009A0  D7FE               	bra	u367
   843  0009A2                     
   844                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
   845  0009A2  A681               	btfss	129,3,c	;volatile
   846  0009A4  EFD6  F004         	goto	u11
   847  0009A8  EFD8  F004         	goto	u10
   848  0009AC                     u11:
   849  0009AC  EFD9  F004         	goto	l1077
   850  0009B0                     u10:
   851  0009B0                     
   852                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
   853  0009B0  8042               	bsf	spi_s_read@dato_^0,0,c
   854  0009B2                     l1077:
   855                           
   856                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
   857  0009B2  948A               	bcf	138,2,c	;volatile
   858  0009B4                     
   859                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
   860  0009B4  0E04               	movlw	4
   861  0009B6                     u377:
   862  0009B6  2EE8               	decfsz	wreg,f,c
   863  0009B8  D7FE               	bra	u377
   864  0009BA                     
   865                           ;./Librerias/nRF24L01_2.h: 57:     }
   866  0009BA  2A43               	incf	spi_s_read@cont_s^0,f,c
   867  0009BC  0E07               	movlw	7
   868  0009BE  6443               	cpfsgt	spi_s_read@cont_s^0,c
   869  0009C0  EFE4  F004         	goto	u21
   870  0009C4  EFE6  F004         	goto	u20
   871  0009C8                     u21:
   872  0009C8  EFCB  F004         	goto	l1067
   873  0009CC                     u20:
   874  0009CC                     
   875                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
   876  0009CC  5042               	movf	spi_s_read@dato_^0,w,c
   877  0009CE  0012               	return		;funcret
   878  0009D0                     __end_of_spi_s_read:
   879                           	callstack 0
   880                           
   881 ;; *************** function _nrF2401_init_RX *****************
   882 ;; Defined at:
   883 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  canal           1    wreg     unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  canal           1    8[COMRAM] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   897 ;;      Params:         0       0       0       0       0       0       0       0       0
   898 ;;      Locals:         1       0       0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0
   900 ;;      Totals:         1       0       0       0       0       0       0       0       0
   901 ;;Total ram usage:        1 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 3
   904 ;; This function calls:
   905 ;;		_flush_TX_RX
   906 ;;		_nrf2401_direccion_TX_RX
   907 ;;		_nrf2401_write
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text7
   914  0008C6                     __ptext7:
   915                           	callstack 0
   916  0008C6                     _nrF2401_init_RX:
   917                           	callstack 27
   918                           
   919                           ;incstack = 0
   920                           ;nrF2401_init_RX@canal stored from wreg
   921  0008C6  6E4A               	movwf	nrF2401_init_RX@canal^0,c
   922  0008C8                     
   923                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
   924  0008C8  928A               	bcf	138,1,c	;volatile
   925  0008CA                     
   926                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
   927  0008CA  0E0C               	movlw	12
   928  0008CC  6E44               	movwf	nrf2401_write@valor^0,c
   929  0008CE  0E00               	movlw	0
   930  0008D0  EC7E  F005         	call	_nrf2401_write
   931                           
   932                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
   933  0008D4  0E00               	movlw	0
   934  0008D6  6E44               	movwf	nrf2401_write@valor^0,c
   935  0008D8  0E04               	movlw	4
   936  0008DA  EC7E  F005         	call	_nrf2401_write
   937                           
   938                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
   939  0008DE  0E03               	movlw	3
   940  0008E0  6E44               	movwf	nrf2401_write@valor^0,c
   941  0008E2  0E03               	movlw	3
   942  0008E4  EC7E  F005         	call	_nrf2401_write
   943                           
   944                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x08 + 0x06);
   945  0008E8  0E0E               	movlw	14
   946  0008EA  6E44               	movwf	nrf2401_write@valor^0,c
   947  0008EC  0E06               	movlw	6
   948  0008EE  EC7E  F005         	call	_nrf2401_write
   949                           
   950                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
   951  0008F2  C04A  F044         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
   952  0008F6  0E05               	movlw	5
   953  0008F8  EC7E  F005         	call	_nrf2401_write
   954                           
   955                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
   956  0008FC  0E00               	movlw	0
   957  0008FE  6E44               	movwf	nrf2401_write@valor^0,c
   958  000900  0E01               	movlw	1
   959  000902  EC7E  F005         	call	_nrf2401_write
   960                           
   961                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
   962  000906  0E01               	movlw	1
   963  000908  6E44               	movwf	nrf2401_write@valor^0,c
   964  00090A  0E11               	movlw	17
   965  00090C  EC7E  F005         	call	_nrf2401_write
   966                           
   967                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
   968  000910  0E0F               	movlw	15
   969  000912  6E44               	movwf	nrf2401_write@valor^0,c
   970  000914  0E00               	movlw	0
   971  000916  EC7E  F005         	call	_nrf2401_write
   972  00091A                     
   973                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
   974  00091A  0E06               	movlw	low _direccion_tx
   975  00091C  6E44               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   976  00091E  0E08               	movlw	high _direccion_tx
   977  000920  6E45               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   978  000922  0E10               	movlw	16
   979  000924  6E46               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   980  000926  ECE8  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   981  00092A                     
   982                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
   983  00092A  0E06               	movlw	low _direccion_tx
   984  00092C  6E44               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
   985  00092E  0E08               	movlw	high _direccion_tx
   986  000930  6E45               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
   987  000932  0E0A               	movlw	10
   988  000934  6E46               	movwf	nrf2401_direccion_TX_RX@registro^0,c
   989  000936  ECE8  F004         	call	_nrf2401_direccion_TX_RX	;wreg free
   990                           
   991                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
   992  00093A  EC99  F005         	call	_flush_TX_RX	;wreg free
   993  00093E                     
   994                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
   995  00093E  828A               	bsf	138,1,c	;volatile
   996  000940  0012               	return		;funcret
   997  000942                     __end_of_nrF2401_init_RX:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _nrf2401_direccion_TX_RX *****************
  1001 ;; Defined at:
  1002 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  direccion_      2    2[COMRAM] PTR const unsigned char 
  1005 ;;		 -> direccion_tx(5), 
  1006 ;;  registro        1    4[COMRAM] unsigned char 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  cont_s          1    7[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1018 ;;      Params:         3       0       0       0       0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1020 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1021 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1022 ;;Total ram usage:        6 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 1
  1025 ;; This function calls:
  1026 ;;		_spi_s_write
  1027 ;; This function is called by:
  1028 ;;		_nrF2401_init_RX
  1029 ;;		_nrF2401_init_TX
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text8
  1034  0009D0                     __ptext8:
  1035                           	callstack 0
  1036  0009D0                     _nrf2401_direccion_TX_RX:
  1037                           	callstack 28
  1038  0009D0                     
  1039                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
  1040  0009D0  948B               	bcf	139,2,c	;volatile
  1041  0009D2                     
  1042                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
  1043  0009D2  5046               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
  1044  0009D4  0920               	iorlw	32
  1045  0009D6  ECA1  F004         	call	_spi_s_write
  1046  0009DA                     
  1047                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
  1048  0009DA  0E00               	movlw	0
  1049  0009DC  6E49               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
  1050  0009DE                     l1431:
  1051                           
  1052                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
  1053  0009DE  5049               	movf	nrf2401_direccion_TX_RX@cont_s^0,w,c
  1054  0009E0  2444               	addwf	nrf2401_direccion_TX_RX@direccion_^0,w,c
  1055  0009E2  6E47               	movwf	??_nrf2401_direccion_TX_RX^0,c
  1056  0009E4  0E00               	movlw	0
  1057  0009E6  2045               	addwfc	(nrf2401_direccion_TX_RX@direccion_+1)^0,w,c
  1058  0009E8  6E48               	movwf	(??_nrf2401_direccion_TX_RX+1)^0,c
  1059  0009EA  C047  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
  1060  0009EE  C048  FFF7         	movff	??_nrf2401_direccion_TX_RX+1,tblptrh
  1061  0009F2                     	if	0	;tblptru may be non-zero
  1062  0009F2                     	endif
  1063  0009F2                     	if	0	;tblptru may be non-zero
  1064  0009F2                     	endif
  1065  0009F2  0008               	tblrd		*
  1066  0009F4  50F5               	movf	tablat,w,c
  1067  0009F6  ECA1  F004         	call	_spi_s_write
  1068  0009FA                     
  1069                           ;./Librerias/nRF24L01_2.h: 120:     }
  1070  0009FA  2A49               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
  1071  0009FC  0E04               	movlw	4
  1072  0009FE  6449               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
  1073  000A00  EF04  F005         	goto	u241
  1074  000A04  EF06  F005         	goto	u240
  1075  000A08                     u241:
  1076  000A08  EFEF  F004         	goto	l1431
  1077  000A0C                     u240:
  1078  000A0C                     
  1079                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
  1080  000A0C  848B               	bsf	139,2,c	;volatile
  1081  000A0E                     
  1082                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1083  000A0E  0E14               	movlw	20
  1084  000A10                     u387:
  1085  000A10  2EE8               	decfsz	wreg,f,c
  1086  000A12  D7FE               	bra	u387
  1087  000A14  0012               	return		;funcret
  1088  000A16                     __end_of_nrf2401_direccion_TX_RX:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _flush_TX_RX *****************
  1092 ;; Defined at:
  1093 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 2
  1114 ;; This function calls:
  1115 ;;		_nrf2401_comando
  1116 ;;		_nrf2401_write
  1117 ;; This function is called by:
  1118 ;;		_nrF2401_init_RX
  1119 ;;		_nrF2401_init_TX
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text9
  1124  000B32                     __ptext9:
  1125                           	callstack 0
  1126  000B32                     _flush_TX_RX:
  1127                           	callstack 27
  1128  000B32                     
  1129                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
  1130  000B32  0E70               	movlw	112
  1131  000B34  6E44               	movwf	nrf2401_write@valor^0,c
  1132  000B36  0E07               	movlw	7
  1133  000B38  EC7E  F005         	call	_nrf2401_write
  1134                           
  1135                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
  1136  000B3C  0EE1               	movlw	225
  1137  000B3E  ECBB  F005         	call	_nrf2401_comando
  1138                           
  1139                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
  1140  000B42  0EE2               	movlw	226
  1141  000B44  ECBB  F005         	call	_nrf2401_comando
  1142  000B48  0012               	return		;funcret
  1143  000B4A                     __end_of_flush_TX_RX:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function _nrf2401_write *****************
  1147 ;; Defined at:
  1148 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  reg             1    wreg     unsigned char 
  1151 ;;  valor           1    2[COMRAM] unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  reg             1    3[COMRAM] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         1       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1166 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1167 ;;Total ram usage:        2 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 1
  1170 ;; This function calls:
  1171 ;;		_spi_s_write
  1172 ;; This function is called by:
  1173 ;;		_flush_TX_RX
  1174 ;;		_nrF2401_init_RX
  1175 ;;		_flush_RX
  1176 ;;		_flush_TX
  1177 ;;		_nrf2401_envia
  1178 ;;		_nrF2401_init_TX
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text10
  1183  000AFC                     __ptext10:
  1184                           	callstack 0
  1185  000AFC                     _nrf2401_write:
  1186                           	callstack 28
  1187                           
  1188                           ;incstack = 0
  1189                           ;nrf2401_write@reg stored from wreg
  1190  000AFC  6E45               	movwf	nrf2401_write@reg^0,c
  1191  000AFE                     
  1192                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
  1193  000AFE  948B               	bcf	139,2,c	;volatile
  1194  000B00                     
  1195                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
  1196  000B00  5045               	movf	nrf2401_write@reg^0,w,c
  1197  000B02  0920               	iorlw	32
  1198  000B04  ECA1  F004         	call	_spi_s_write
  1199                           
  1200                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
  1201  000B08  5044               	movf	nrf2401_write@valor^0,w,c
  1202  000B0A  ECA1  F004         	call	_spi_s_write
  1203  000B0E                     
  1204                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
  1205  000B0E  848B               	bsf	139,2,c	;volatile
  1206  000B10                     
  1207                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1208  000B10  0E14               	movlw	20
  1209  000B12                     u397:
  1210  000B12  2EE8               	decfsz	wreg,f,c
  1211  000B14  D7FE               	bra	u397
  1212  000B16  0012               	return		;funcret
  1213  000B18                     __end_of_nrf2401_write:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _nrf2401_comando *****************
  1217 ;; Defined at:
  1218 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  comando         1    wreg     unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  comando         1    2[COMRAM] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        1 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 1
  1239 ;; This function calls:
  1240 ;;		_spi_s_write
  1241 ;; This function is called by:
  1242 ;;		_flush_TX_RX
  1243 ;;		_flush_RX
  1244 ;;		_flush_TX
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text11
  1249  000B76                     __ptext11:
  1250                           	callstack 0
  1251  000B76                     _nrf2401_comando:
  1252                           	callstack 27
  1253                           
  1254                           ;incstack = 0
  1255                           ;nrf2401_comando@comando stored from wreg
  1256  000B76  6E44               	movwf	nrf2401_comando@comando^0,c
  1257  000B78                     
  1258                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  1259  000B78  948B               	bcf	139,2,c	;volatile
  1260  000B7A                     
  1261                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  1262  000B7A  5044               	movf	nrf2401_comando@comando^0,w,c
  1263  000B7C  ECA1  F004         	call	_spi_s_write
  1264  000B80                     
  1265                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  1266  000B80  848B               	bsf	139,2,c	;volatile
  1267  000B82                     
  1268                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1269  000B82  0E14               	movlw	20
  1270  000B84                     u407:
  1271  000B84  2EE8               	decfsz	wreg,f,c
  1272  000B86  D7FE               	bra	u407
  1273  000B88  0012               	return		;funcret
  1274  000B8A                     __end_of_nrf2401_comando:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _spi_s_write *****************
  1278 ;; Defined at:
  1279 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  dato_           1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  dato_           1    0[COMRAM] unsigned char 
  1284 ;;  cont_s          1    1[COMRAM] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0
  1295 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1297 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_nrf2401_write
  1304 ;;		_nrf2401_comando
  1305 ;;		_nrf2401_read
  1306 ;;		_nrf2401_direccion_TX_RX
  1307 ;;		_nrf2401_recibe
  1308 ;;		_nrf2401_envia
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text12
  1313  000942                     __ptext12:
  1314                           	callstack 0
  1315  000942                     _spi_s_write:
  1316                           	callstack 29
  1317                           
  1318                           ;incstack = 0
  1319                           ;spi_s_write@dato_ stored from wreg
  1320  000942  6E42               	movwf	spi_s_write@dato_^0,c
  1321  000944                     
  1322                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  1323  000944  0E00               	movlw	0
  1324  000946  6E43               	movwf	spi_s_write@cont_s^0,c
  1325                           
  1326                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  1327  000948  0E00               	movlw	0
  1328  00094A  6E43               	movwf	spi_s_write@cont_s^0,c
  1329  00094C                     l246:
  1330                           
  1331                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  1332  00094C  AE42               	btfss	spi_s_write@dato_^0,7,c
  1333  00094E  EFAB  F004         	goto	u31
  1334  000952  EFAD  F004         	goto	u30
  1335  000956                     u31:
  1336  000956  EFB0  F004         	goto	l248
  1337  00095A                     u30:
  1338  00095A  828B               	bsf	139,1,c	;volatile
  1339  00095C  EFB1  F004         	goto	l1097
  1340  000960                     l248:
  1341  000960  928B               	bcf	139,1,c	;volatile
  1342  000962                     l1097:
  1343                           
  1344                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  1345  000962  90D8               	bcf	status,0,c
  1346  000964  3642               	rlcf	spi_s_write@dato_^0,f,c
  1347  000966                     
  1348                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  1349  000966  848A               	bsf	138,2,c	;volatile
  1350  000968                     
  1351                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1352  000968  0E14               	movlw	20
  1353  00096A                     u417:
  1354  00096A  2EE8               	decfsz	wreg,f,c
  1355  00096C  D7FE               	bra	u417
  1356  00096E                     
  1357                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  1358  00096E  948A               	bcf	138,2,c	;volatile
  1359  000970                     
  1360                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  1361  000970  0E14               	movlw	20
  1362  000972                     u427:
  1363  000972  2EE8               	decfsz	wreg,f,c
  1364  000974  D7FE               	bra	u427
  1365  000976                     
  1366                           ;./Librerias/nRF24L01_2.h: 76:     }
  1367  000976  2A43               	incf	spi_s_write@cont_s^0,f,c
  1368  000978  0E07               	movlw	7
  1369  00097A  6443               	cpfsgt	spi_s_write@cont_s^0,c
  1370  00097C  EFC2  F004         	goto	u41
  1371  000980  EFC4  F004         	goto	u40
  1372  000984                     u41:
  1373  000984  EFA6  F004         	goto	l246
  1374  000988                     u40:
  1375  000988  0012               	return		;funcret
  1376  00098A                     __end_of_spi_s_write:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _SYSTEM_Initialize *****************
  1380 ;; Defined at:
  1381 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 1
  1402 ;; This function calls:
  1403 ;;		_ADC_Initialize
  1404 ;;		_CCP2_Initialize
  1405 ;;		_OSCILLATOR_Initialize
  1406 ;;		_PIN_MANAGER_Initialize
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text13
  1413  000B8A                     __ptext13:
  1414                           	callstack 0
  1415  000B8A                     _SYSTEM_Initialize:
  1416                           	callstack 29
  1417  000B8A                     
  1418                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1419  000B8A  EC28  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1420                           
  1421                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1422  000B8E  EC51  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1423                           
  1424                           ;mcc_generated_files/mcc.c: 55:     CCP2_Initialize();
  1425  000B92  ECCE  F005         	call	_CCP2_Initialize	;wreg free
  1426                           
  1427                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  1428  000B96  ECB0  F005         	call	_ADC_Initialize	;wreg free
  1429  000B9A  0012               	return		;funcret
  1430  000B9C                     __end_of_SYSTEM_Initialize:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _PIN_MANAGER_Initialize *****************
  1434 ;; Defined at:
  1435 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1449 ;;      Params:         0       0       0       0       0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1452 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_SYSTEM_Initialize
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text14
  1463  000A50                     __ptext14:
  1464                           	callstack 0
  1465  000A50                     _PIN_MANAGER_Initialize:
  1466                           	callstack 29
  1467  000A50                     
  1468                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1469  000A50  0E00               	movlw	0
  1470  000A52  6E89               	movwf	137,c	;volatile
  1471                           
  1472                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1473  000A54  0E00               	movlw	0
  1474  000A56  6E8A               	movwf	138,c	;volatile
  1475                           
  1476                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1477  000A58  0E00               	movlw	0
  1478  000A5A  6E8B               	movwf	139,c	;volatile
  1479                           
  1480                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
  1481  000A5C  0EC7               	movlw	199
  1482  000A5E  6E92               	movwf	146,c	;volatile
  1483                           
  1484                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
  1485  000A60  0EFE               	movlw	254
  1486  000A62  6E93               	movwf	147,c	;volatile
  1487                           
  1488                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
  1489  000A64  0E87               	movlw	135
  1490  000A66  6E94               	movwf	148,c	;volatile
  1491                           
  1492                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  1493  000A68  0E04               	movlw	4
  1494  000A6A  010F               	movlb	15	; () banked
  1495  000A6C  6F5D               	movwf	93,b	;volatile
  1496                           
  1497                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  1498  000A6E  0E3E               	movlw	62
  1499  000A70  6F5C               	movwf	92,b	;volatile
  1500                           
  1501                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  1502  000A72  0E07               	movlw	7
  1503  000A74  6F5B               	movwf	91,b	;volatile
  1504                           
  1505                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1506  000A76  0E00               	movlw	0
  1507  000A78  6E85               	movwf	133,c	;volatile
  1508  000A7A                     
  1509                           ; BSR set to: 15
  1510                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1511  000A7A  8EF1               	bsf	241,7,c	;volatile
  1512  000A7C                     
  1513                           ; BSR set to: 15
  1514  000A7C  0012               	return		;funcret
  1515  000A7E                     __end_of_PIN_MANAGER_Initialize:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _OSCILLATOR_Initialize *****************
  1519 ;; Defined at:
  1520 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_SYSTEM_Initialize
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text15
  1548  000AA2                     __ptext15:
  1549                           	callstack 0
  1550  000AA2                     _OSCILLATOR_Initialize:
  1551                           	callstack 29
  1552  000AA2                     
  1553                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  1554  000AA2  0E70               	movlw	112
  1555  000AA4  6ED3               	movwf	211,c	;volatile
  1556                           
  1557                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  1558  000AA6  0E00               	movlw	0
  1559  000AA8  6ED2               	movwf	210,c	;volatile
  1560                           
  1561                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x80;
  1562  000AAA  0E80               	movlw	128
  1563  000AAC  6E9B               	movwf	155,c	;volatile
  1564                           
  1565                           ;mcc_generated_files/mcc.c: 69:     ACTCON = 0x00;
  1566  000AAE  0E00               	movlw	0
  1567  000AB0  6EB5               	movwf	181,c	;volatile
  1568  000AB2                     l118:
  1569                           
  1570                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  1571  000AB2  AED2               	btfss	4050,7,c	;volatile
  1572  000AB4  EF5E  F005         	goto	u51
  1573  000AB8  EF60  F005         	goto	u50
  1574  000ABC                     u51:
  1575  000ABC  EF59  F005         	goto	l118
  1576  000AC0                     u50:
  1577  000AC0  0012               	return		;funcret
  1578  000AC2                     __end_of_OSCILLATOR_Initialize:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _CCP2_Initialize *****************
  1582 ;; Defined at:
  1583 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_SYSTEM_Initialize
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text16
  1611  000B9C                     __ptext16:
  1612                           	callstack 0
  1613  000B9C                     _CCP2_Initialize:
  1614                           	callstack 29
  1615  000B9C                     
  1616                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  1617  000B9C  0E00               	movlw	0
  1618  000B9E  6E97               	movwf	151,c	;volatile
  1619                           
  1620                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  1621  000BA0  0E00               	movlw	0
  1622  000BA2  6E90               	movwf	144,c	;volatile
  1623                           
  1624                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  1625  000BA4  0E00               	movlw	0
  1626  000BA6  6E91               	movwf	145,c	;volatile
  1627  000BA8  0012               	return		;funcret
  1628  000BAA                     __end_of_CCP2_Initialize:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _ADC_Initialize *****************
  1632 ;; Defined at:
  1633 ;;		line 62 in file "mcc_generated_files/adc.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1647 ;;      Params:         0       0       0       0       0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_SYSTEM_Initialize
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text17
  1661  000B60                     __ptext17:
  1662                           	callstack 0
  1663  000B60                     _ADC_Initialize:
  1664                           	callstack 29
  1665  000B60                     
  1666                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1667  000B60  0E00               	movlw	0
  1668  000B62  6EC1               	movwf	193,c	;volatile
  1669                           
  1670                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
  1671  000B64  0E87               	movlw	135
  1672  000B66  6EC0               	movwf	192,c	;volatile
  1673                           
  1674                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1675  000B68  0E00               	movlw	0
  1676  000B6A  6EC3               	movwf	195,c	;volatile
  1677                           
  1678                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1679  000B6C  0E00               	movlw	0
  1680  000B6E  6EC4               	movwf	196,c	;volatile
  1681                           
  1682                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  1683  000B70  0E01               	movlw	1
  1684  000B72  6EC2               	movwf	194,c	;volatile
  1685  000B74  0012               	return		;funcret
  1686  000B76                     __end_of_ADC_Initialize:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _ADC_GetConversion *****************
  1690 ;; Defined at:
  1691 ;;		line 110 in file "mcc_generated_files/adc.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  channel         1    wreg     enum E4598
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  channel         1    4[COMRAM] enum E4598
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2    0[COMRAM] unsigned short 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1705 ;;      Params:         2       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1708 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1709 ;;Total ram usage:        5 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text18
  1719  000A16                     __ptext18:
  1720                           	callstack 0
  1721  000A16                     _ADC_GetConversion:
  1722                           	callstack 30
  1723                           
  1724                           ;incstack = 0
  1725                           ;ADC_GetConversion@channel stored from wreg
  1726  000A16  6E46               	movwf	ADC_GetConversion@channel^0,c
  1727  000A18                     
  1728                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  1729  000A18  C046  F044         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1730  000A1C  4644               	rlncf	??_ADC_GetConversion^0,f,c
  1731  000A1E  4644               	rlncf	??_ADC_GetConversion^0,f,c
  1732  000A20  50C2               	movf	194,w,c	;volatile
  1733  000A22  1844               	xorwf	??_ADC_GetConversion^0,w,c
  1734  000A24  0B83               	andlw	-125
  1735  000A26  1844               	xorwf	??_ADC_GetConversion^0,w,c
  1736  000A28  6EC2               	movwf	194,c	;volatile
  1737  000A2A                     
  1738                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  1739  000A2A  80C2               	bsf	194,0,c	;volatile
  1740  000A2C                     
  1741                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  1742  000A2C  82C2               	bsf	194,1,c	;volatile
  1743  000A2E                     l194:
  1744                           
  1745                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  1746  000A2E  B2C2               	btfsc	194,1,c	;volatile
  1747  000A30  EF1C  F005         	goto	u251
  1748  000A34  EF1E  F005         	goto	u250
  1749  000A38                     u251:
  1750  000A38  EF17  F005         	goto	l194
  1751  000A3C                     u250:
  1752  000A3C                     
  1753                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1754  000A3C  50C4               	movf	196,w,c	;volatile
  1755  000A3E  6E45               	movwf	(??_ADC_GetConversion+1)^0,c
  1756  000A40  6A44               	clrf	??_ADC_GetConversion^0,c
  1757  000A42  50C3               	movf	195,w,c	;volatile
  1758  000A44  2444               	addwf	??_ADC_GetConversion^0,w,c
  1759  000A46  6E42               	movwf	?_ADC_GetConversion^0,c
  1760  000A48  0E00               	movlw	0
  1761  000A4A  2045               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  1762  000A4C  6E43               	movwf	(?_ADC_GetConversion+1)^0,c
  1763  000A4E  0012               	return		;funcret
  1764  000A50                     __end_of_ADC_GetConversion:
  1765                           	callstack 0
  1766                           
  1767                           	psect	rparam
  1768  0000                     
  1769                           	psect	idloc
  1770                           
  1771                           ;Config register IDLOC0 @ 0x200000
  1772                           ;	unspecified, using default values
  1773  200000                     	org	2097152
  1774  200000  FF                 	db	255
  1775                           
  1776                           ;Config register IDLOC1 @ 0x200001
  1777                           ;	unspecified, using default values
  1778  200001                     	org	2097153
  1779  200001  FF                 	db	255
  1780                           
  1781                           ;Config register IDLOC2 @ 0x200002
  1782                           ;	unspecified, using default values
  1783  200002                     	org	2097154
  1784  200002  FF                 	db	255
  1785                           
  1786                           ;Config register IDLOC3 @ 0x200003
  1787                           ;	unspecified, using default values
  1788  200003                     	org	2097155
  1789  200003  FF                 	db	255
  1790                           
  1791                           ;Config register IDLOC4 @ 0x200004
  1792                           ;	unspecified, using default values
  1793  200004                     	org	2097156
  1794  200004  FF                 	db	255
  1795                           
  1796                           ;Config register IDLOC5 @ 0x200005
  1797                           ;	unspecified, using default values
  1798  200005                     	org	2097157
  1799  200005  FF                 	db	255
  1800                           
  1801                           ;Config register IDLOC6 @ 0x200006
  1802                           ;	unspecified, using default values
  1803  200006                     	org	2097158
  1804  200006  FF                 	db	255
  1805                           
  1806                           ;Config register IDLOC7 @ 0x200007
  1807                           ;	unspecified, using default values
  1808  200007                     	org	2097159
  1809  200007  FF                 	db	255
  1810                           
  1811                           	psect	config
  1812                           
  1813                           ;Config register CONFIG1L @ 0x300000
  1814                           ;	PLL Selection
  1815                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1816                           ;	PLL Enable Configuration bit
  1817                           ;	CFGPLLEN = ON, PLL Enabled
  1818                           ;	CPU System Clock Postscaler
  1819                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1820                           ;	Low Speed USB mode with 48 MHz system clock
  1821                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1822  300000                     	org	3145728
  1823  300000  23                 	db	35
  1824                           
  1825                           ;Config register CONFIG1H @ 0x300001
  1826                           ;	Oscillator Selection
  1827                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  1828                           ;	Primary Oscillator Shutdown
  1829                           ;	PCLKEN = ON, Primary oscillator enabled
  1830                           ;	Fail-Safe Clock Monitor
  1831                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1832                           ;	Internal/External Oscillator Switchover
  1833                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1834  300001                     	org	3145729
  1835  300001  22                 	db	34
  1836                           
  1837                           ;Config register CONFIG2L @ 0x300002
  1838                           ;	Power-up Timer Enable
  1839                           ;	nPWRTEN = ON, Power up timer enabled
  1840                           ;	Brown-out Reset Enable
  1841                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1842                           ;	Brown-out Reset Voltage
  1843                           ;	BORV = 190, BOR set to 1.9V nominal
  1844                           ;	Low-Power Brown-out Reset
  1845                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1846  300002                     	org	3145730
  1847  300002  5E                 	db	94
  1848                           
  1849                           ;Config register CONFIG2H @ 0x300003
  1850                           ;	Watchdog Timer Enable bits
  1851                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1852                           ;	Watchdog Timer Postscaler
  1853                           ;	WDTPS = 32768, 1:32768
  1854  300003                     	org	3145731
  1855  300003  3C                 	db	60
  1856                           
  1857                           ; Padding undefined space
  1858  300004                     	org	3145732
  1859  300004  FF                 	db	255
  1860                           
  1861                           ;Config register CONFIG3H @ 0x300005
  1862                           ;	CCP2 MUX bit
  1863                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1864                           ;	PORTB A/D Enable bit
  1865                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1866                           ;	Timer3 Clock Input MUX bit
  1867                           ;	T3CMX = RC0, T3CKI function is on RC0
  1868                           ;	SDO Output MUX bit
  1869                           ;	SDOMX = RB3, SDO function is on RB3
  1870                           ;	Master Clear Reset Pin Enable
  1871                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1872  300005                     	org	3145733
  1873  300005  D1                 	db	209
  1874                           
  1875                           ;Config register CONFIG4L @ 0x300006
  1876                           ;	Stack Full/Underflow Reset
  1877                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1878                           ;	Single-Supply ICSP Enable bit
  1879                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1880                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1881                           ;	ICPRT = OFF, ICPORT disabled
  1882                           ;	Extended Instruction Set Enable bit
  1883                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1884                           ;	Background Debugger Enable bit
  1885                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1886  300006                     	org	3145734
  1887  300006  85                 	db	133
  1888                           
  1889                           ; Padding undefined space
  1890  300007                     	org	3145735
  1891  300007  FF                 	db	255
  1892                           
  1893                           ;Config register CONFIG5L @ 0x300008
  1894                           ;	Block 0 Code Protect
  1895                           ;	CP0 = OFF, Block 0 is not code-protected
  1896                           ;	Block 1 Code Protect
  1897                           ;	CP1 = OFF, Block 1 is not code-protected
  1898                           ;	Block 2 Code Protect
  1899                           ;	CP2 = OFF, Block 2 is not code-protected
  1900                           ;	Block 3 Code Protect
  1901                           ;	CP3 = OFF, Block 3 is not code-protected
  1902  300008                     	org	3145736
  1903  300008  0F                 	db	15
  1904                           
  1905                           ;Config register CONFIG5H @ 0x300009
  1906                           ;	Boot Block Code Protect
  1907                           ;	CPB = OFF, Boot block is not code-protected
  1908                           ;	Data EEPROM Code Protect
  1909                           ;	CPD = OFF, Data EEPROM is not code-protected
  1910  300009                     	org	3145737
  1911  300009  C0                 	db	192
  1912                           
  1913                           ;Config register CONFIG6L @ 0x30000A
  1914                           ;	Block 0 Write Protect
  1915                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1916                           ;	Block 1 Write Protect
  1917                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1918                           ;	Block 2 Write Protect
  1919                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1920                           ;	Block 3 Write Protect
  1921                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1922  30000A                     	org	3145738
  1923  30000A  0F                 	db	15
  1924                           
  1925                           ;Config register CONFIG6H @ 0x30000B
  1926                           ;	Configuration Registers Write Protect
  1927                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1928                           ;	Boot Block Write Protect
  1929                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1930                           ;	Data EEPROM Write Protect
  1931                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1932  30000B                     	org	3145739
  1933  30000B  E0                 	db	224
  1934                           
  1935                           ;Config register CONFIG7L @ 0x30000C
  1936                           ;	Block 0 Table Read Protect
  1937                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1938                           ;	Block 1 Table Read Protect
  1939                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1940                           ;	Block 2 Table Read Protect
  1941                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1942                           ;	Block 3 Table Read Protect
  1943                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1944  30000C                     	org	3145740
  1945  30000C  0F                 	db	15
  1946                           
  1947                           ;Config register CONFIG7H @ 0x30000D
  1948                           ;	Boot Block Table Read Protect
  1949                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1950  30000D                     	org	3145741
  1951  30000D  40                 	db	64
  1952                           tosu	equ	0xFFF
  1953                           tosh	equ	0xFFE
  1954                           tosl	equ	0xFFD
  1955                           stkptr	equ	0xFFC
  1956                           pclatu	equ	0xFFB
  1957                           pclath	equ	0xFFA
  1958                           pcl	equ	0xFF9
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           prodh	equ	0xFF4
  1964                           prodl	equ	0xFF3
  1965                           indf0	equ	0xFEF
  1966                           postinc0	equ	0xFEE
  1967                           postdec0	equ	0xFED
  1968                           preinc0	equ	0xFEC
  1969                           plusw0	equ	0xFEB
  1970                           fsr0h	equ	0xFEA
  1971                           fsr0l	equ	0xFE9
  1972                           wreg	equ	0xFE8
  1973                           indf1	equ	0xFE7
  1974                           postinc1	equ	0xFE6
  1975                           postdec1	equ	0xFE5
  1976                           preinc1	equ	0xFE4
  1977                           plusw1	equ	0xFE3
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           bsr	equ	0xFE0
  1981                           indf2	equ	0xFDF
  1982                           postinc2	equ	0xFDE
  1983                           postdec2	equ	0xFDD
  1984                           preinc2	equ	0xFDC
  1985                           plusw2	equ	0xFDB
  1986                           fsr2h	equ	0xFDA
  1987                           fsr2l	equ	0xFD9
  1988                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      77
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(COMRAM[30]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(2) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_nrF2401_init_RX
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4160
                                              9 COMRAM     2     2      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                    _nrF2401_init_RX
                   _nrf2401_haydatos
                     _nrf2401_recibe
                         _spi_s_init
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf2401_recibe                                       1     1      0     105
                                              2 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (1) _nrf2401_haydatos                                     0     0      0     120
                         _get_Status
 ---------------------------------------------------------------------------------
 (2) _get_Status                                           0     0      0     120
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (3) _nrf2401_read                                         2     2      0     120
                                              2 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_read                                           2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_RX                                      1     1      0    3913
                                              8 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              6     3      3     765
                                              2 COMRAM     6     3      3
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    1593
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1533
                                              2 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0      60
                                              2 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_write                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _nrf2401_haydatos
     _get_Status
       _nrf2401_read
         _spi_s_read
         _spi_s_write
   _nrf2401_recibe
     _spi_s_read
     _spi_s_write
   _spi_s_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F      B      4D       1       81.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B       6        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 05 19:46:08 2022

                                u10 09B0                                  u11 09AC  
                                u20 09CC                                  u21 09C8  
                                u30 095A                                  u31 0956  
                                u40 0988                                  u41 0984  
                                u50 0AC0                                  u51 0ABC  
                                _on 0268                                 l121 0AC0  
                               l115 0B9A                                 l301 0ADE  
                               l118 0AB2                                 l160 0BA8  
                               l250 0988                                 l243 09CE  
                               l148 0A7C                                 l253 0B16  
                               l237 0B5E                                 l246 094C  
                               l263 0A0C                                 l248 0960  
                               l256 0B88                                 l264 0A14  
                               l273 0B48                                 l194 0A2E  
                               l282 0940                                 l179 0B74  
                               l259 0AFA                                 l197 0A4E  
                               l279 0B30                                 l288 0BB0  
                               u110 0AD6                                 u111 0AD2  
                               u300 088A                                 u301 0886  
                               u310 08A2                                 u311 089E  
                               u240 0A0C                                 u241 0A08  
                               u250 0A3C                                 u251 0A38  
                               u407 0B84                                 u327 083A  
                               u417 096A                                 u337 08B0  
                               u290 0874                                 u427 0972  
                               u347 0B2A                                 u291 0870  
                               u357 0AF4                                 u367 099E  
                               u377 09B6                                 u387 0A10  
                               u397 0B12                                 wreg 000FE8  
                        _TXSTA1bits 000FAC                     _nrF2401_init_RX 08C6  
                              l1101 0968                                l1103 096E  
                              l1105 0970                                l1121 0B7A  
                              l1107 0976                                l1123 0B80  
                              l1131 0AE4                                l1141 0A50  
                              l1109 0978                                l1125 0B82  
                              l1061 098A                                l1133 0AEA  
                              l1205 0B4A                                l1143 0A7A  
                              l1119 0B78                                l1071 099C  
                              l1135 0AF0                                l1127 0AE2  
                              l1231 0B18                                l1145 0AA2  
                              l1081 09BA                                l1073 09A2  
                              l1137 0AF2                                l1129 0AE2  
                              l1233 0B1A                                l1147 0B9C  
                              l1083 09BC                                l1075 09B0  
                              l1067 0996                                l1235 0B26  
                              l1149 0B60                                l1413 0AFE  
                              l1421 09D0                                l1085 09CC  
                              l1077 09B2                                l1069 099A  
                              l1173 0BAA                                l1261 0ADC  
                              l1253 0AC2                                l1237 0B28  
                              l1095 095A                                l1415 0B00  
                              l1431 09DE                                l1423 09D2  
                              l1079 09B4                                l1255 0AD6  
                              l1239 0B2E                                l1193 0B8A  
                              l1097 0962                                l1089 0944  
                              l1417 0B0E                                l1441 0B32  
                              l1433 09FA                                l1425 09DA  
                              l1521 0820                                l1443 0A18  
                              l1099 0966                                l1419 0B10  
                              l1435 09FC                                l1531 0846  
                              l1523 0826                                l1445 0A2A  
                              l1437 0A0E                                l1541 0874  
                              l1533 0848                                l1525 082A  
                              l1447 0A2C                                l1543 087A  
                              l1551 08A6                                l1535 084C  
                              l1527 082E                                l1519 081C  
                              l1449 0A3C                                l1481 091A  
                              l1545 088A                                l1537 0852  
                              l1529 0830                                l1483 092A  
                              l1547 0892                                l1539 0860  
                              l1485 093E                                l1477 08C8  
                              l1549 08A2                                l1479 08CA  
                              STR_1 080B                                STR_3 0817  
                              STR_5 0811                                _LATA 000F89  
                              _LATB 000F8A                                _LATC 000F8B  
                              _WPUB 000F85             __end_of_CCP2_Initialize 0BAA  
                              _main 081C                                start 0000  
                  nrf2401_write@reg 0045                        ?_flush_TX_RX 0042  
                      ___param_bank 000000     __end_of_nrf2401_direccion_TX_RX 0A16  
    __size_of_OSCILLATOR_Initialize 0020       __end_of_OSCILLATOR_Initialize 0AC2  
                             ?_main 0042                nrf2401_recibe@valor_ 0044  
                             _LATB0 007C50                               _LATA5 007C4D  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _valor 0015  
                             _trama 0024                               _texto 0001  
                    __pbitbssCOMRAM 0268                               tablat 000FF5  
                             status 000FD8  _EUSART1_DefaultFramingErrorHandler 000000  
                   __initialization 0A7E                        __end_of_main 08C6  
                  spi_s_read@cont_s 0043                              ??_main 004B  
                     __activetblptr 000002             __end_of_nrF2401_init_RX 0942  
              __end_of_nrf2401_read 0AFC                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ACTCON 000FB5                              _ADRESH 000FC4  
                            _ADRESL 000FC3                              _CCPR2H 000F91  
                            _CCPR2L 000F90                              _ANSELA 000F5B  
                            _ANSELB 000F5C                              _ANSELC 000F5D  
              __end_of_direccion_rx 0806                __end_of_direccion_tx 080B  
                            _RCREG1 000FAE                              _RCSTA1 000FAB  
                            _OSCCON 000FD3                              _PLLRDY 007E97  
                            _SPBRG1 000FAF                    ?_CCP2_Initialize 0042  
                            _TXREG1 000FAD                              _TXSTA1 000FAC  
                   _nrf2401_comando 0B76                              _datorx 0020  
         __size_of_nrf2401_haydatos 001E                              clear_0 0A84  
                            clear_1 0A92                              isa$std 000001  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
          ADC_GetConversion@channel 0046                   _SYSTEM_Initialize 0B8A  
              nrF2401_init_RX@canal 004A                          __accesstop 0060  
           __end_of__initialization 0A98                        ?_spi_s_write 0042  
                ?_SYSTEM_Initialize 0042                       ___rparam_used 000001  
                nrf2401_write@valor 0044                      __pcstackCOMRAM 0042  
               ??_SYSTEM_Initialize 0042                __size_of_flush_TX_RX 0018  
                  ?_nrF2401_init_RX 0042           __end_of_SYSTEM_Initialize 0B9C  
                        __pbssBANK0 0060             __end_of_nrf2401_comando 0B8A  
            nrf2401_comando@comando 0044               __end_of_nrf2401_write 0B18  
                           _CCP2CON 000F97               __size_of_nrf2401_read 001C  
           __size_of_ADC_Initialize 0016                          _get_Status 0BAA  
                           _OSCCON2 000FD2            ?_nrf2401_direccion_TX_RX 0044  
                           _OSCTUNE 000F9B                             _SPBRGH1 000FB0  
     nrf2401_direccion_TX_RX@cont_s 0049                _ADC_InterruptHandler 0017  
                           __Hparam 0000                             __Lparam 0000  
                      _nrf2401_read 0AE0             __size_of_nrf2401_recibe 001A  
                  _nrf2401_haydatos 0AC2                        __psmallconst 0800  
                      _direccion_rx 0801                        _direccion_tx 0806  
                           __pcinit 0A7E                             __ramtop 0800  
                           __ptext0 081C                             _flag_rx 001F  
                           __ptext1 0B4A                             __ptext2 0B18  
                           __ptext3 0AC2                             __ptext4 0BAA  
                           __ptext5 0AE0                             __ptext6 098A  
                           __ptext7 08C6                             __ptext8 09D0  
                           __ptext9 0B32                    spi_s_write@dato_ 0042  
             _OSCILLATOR_Initialize 0AA2            ??_PIN_MANAGER_Initialize 0042  
                           _procesa 0060                             _puntero 0021  
        __size_of_SYSTEM_Initialize 0012   nrf2401_direccion_TX_RX@direccion_ 0044  
              end_of_initialization 0A98                       __Lmediumconst 0000  
       _EUSART1_OverrunErrorHandler 001B                    ?_nrf2401_comando 0042  
              __size_of_spi_s_write 0048                             postinc0 000FEE  
                         _PORTBbits 000F81                         ?_get_Status 0042  
                        _spi_s_init 0B4A                          _spi_s_read 098A  
                   nrf2401_read@reg 0044                           _TRISBbits 000F93  
                         _TRISCbits 000F94            __size_of_CCP2_Initialize 000E  
                    _ADC_Initialize 0B60              ?_OSCILLATOR_Initialize 0042  
               start_initialization 0A7E     __size_of_PIN_MANAGER_Initialize 002E  
                   spi_s_read@dato_ 0042                 __size_of_get_Status 0008  
                     ??_flush_TX_RX 0046                      _nrf2401_recibe 0B18  
            __end_of_ADC_Initialize 0B76                         ?_spi_s_init 0042  
                       ?_spi_s_read 0042                         __pbssCOMRAM 0001  
          __end_of_nrf2401_haydatos 0AE0            __size_of_nrF2401_init_RX 007C  
  __size_of_nrf2401_direccion_TX_RX 0046              __end_of_nrf2401_recibe 0B32  
            _PIN_MANAGER_Initialize 0A50                         _dato_serial 0022  
                   ?_ADC_Initialize 0042                 __end_of_flush_TX_RX 0B4A  
                       __smallconst 0800                   ??_CCP2_Initialize 0042  
   nrf2401_direccion_TX_RX@registro 0046                            _BAUDCON1 000FB8  
_EUSART1_DefaultOverrunErrorHandler 000000                _EUSART1_ErrorHandler 0019  
            __size_of_nrf2401_write 001C                            _LATBbits 000F8A  
                          _LATCbits 000F8B                 __size_of_spi_s_init 0016  
               __size_of_spi_s_read 0046                     ?_nrf2401_recibe 0042  
                          _PIR1bits 000F9E                          _ADCON0bits 000FC2  
                      ??_get_Status 0046                         _INTCON2bits 000FF1  
                     ??_spi_s_write 0042                            __Hrparam 0000  
                __end_of_get_Status 0BB2                   ??_nrF2401_init_RX 004A  
                          __Lrparam 0000                   _ADC_GetConversion 0A16  
                       _flush_TX_RX 0B32                       _nrf2401_write 0AFC  
           ??_OSCILLATOR_Initialize 0042            __size_of_nrf2401_comando 0014  
                ?_ADC_GetConversion 0042         _EUSART1_DefaultErrorHandler 000000  
               ??_ADC_GetConversion 0044                            __ptext10 0AFC  
                          __ptext11 0B76                            __ptext12 0942  
                          __ptext13 0B8A                            __ptext14 0A50  
                          __ptext15 0AA2                            __ptext16 0B9C  
                          __ptext17 0B60                            __ptext18 0A16  
                 spi_s_write@cont_s 0043                       __size_of_main 00AA  
           _nrf2401_direccion_TX_RX 09D0           __end_of_ADC_GetConversion 0A50  
                          isa$xinst 000000                      ?_nrf2401_write 0044  
               __end_of_spi_s_write 098A         _EUSART1_FramingErrorHandler 001D  
                      ??_spi_s_init 0042                        ??_spi_s_read 0042  
                        _INTCONbits 000FF2                   ?_nrf2401_haydatos 0042  
           ?_PIN_MANAGER_Initialize 0042                  ??_nrf2401_haydatos 0046  
                        _RCSTA1bits 000FAB                    ??_ADC_Initialize 0042  
                     ?_nrf2401_read 0042                  __end_of_spi_s_init 0B60  
                __end_of_spi_s_read 09D0                     _CCP2_Initialize 0B9C  
                _eusart1RxLastError 0023                   ??_nrf2401_comando 0044  
         ??_nrf2401_direccion_TX_RX 0047      __end_of_PIN_MANAGER_Initialize 0A7E  
                  ??_nrf2401_recibe 0044                   nrf2401_read@dato_ 0045  
                       _spi_s_write 0942          __size_of_ADC_GetConversion 003A  
                   ??_nrf2401_write 0045                      ??_nrf2401_read 0044  
