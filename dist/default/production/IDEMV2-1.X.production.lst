

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 06 00:47:36 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    91  0000                     
    92                           ; Version 2.40
    93                           ; Generated 17/11/2021 GMT
    94                           ; 
    95                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution. Publication is not required when
   109                           ;        this file is used in an embedded application.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F25K50 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     
   128 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   129  0000                     
   130 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   131  0000                     
   132 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   133  0000                     
   134                           	psect	idataBANK0
   135  0060BC                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for _prob
   139  0060BC  64                 	db	100
   140                           
   141                           	psect	idataBANK1
   142  006080                     __pidataBANK1:
   143                           	callstack 0
   144                           
   145                           ;initializer for stoa@F1176
   146  006080  28                 	db	40
   147  006081  6E                 	db	110
   148  006082  75                 	db	117
   149  006083  6C                 	db	108
   150  006084  6C                 	db	108
   151  006085  29                 	db	41
   152  006086  00                 	db	0
   153                           
   154                           ;initializer for _sensibilidad
   155  006087  70A4               	dw	28836
   156  006089  3E3D               	dw	15933
   157                           
   158                           	psect	smallconst
   159  000800                     __psmallconst:
   160                           	callstack 0
   161  000800  00                 	db	0
   162  000801                     _direccion_rx:
   163                           	callstack 0
   164  000801  11                 	db	17
   165  000802  11                 	db	17
   166  000803  11                 	db	17
   167  000804  11                 	db	17
   168  000805  11                 	db	17
   169  000806                     __end_of_direccion_rx:
   170                           	callstack 0
   171  000806                     _direccion_tx:
   172                           	callstack 0
   173  000806  11                 	db	17
   174  000807  11                 	db	17
   175  000808  11                 	db	17
   176  000809  11                 	db	17
   177  00080A  11                 	db	17
   178  00080B                     __end_of_direccion_tx:
   179                           	callstack 0
   180  0000                     _ANSELA	set	3931
   181  0000                     _ANSELB	set	3932
   182  0000                     _ANSELC	set	3933
   183  0000                     _PORTBbits	set	3969
   184  0000                     _LATCbits	set	3979
   185  0000                     _LATBbits	set	3978
   186  0000                     _TRISBbits	set	3987
   187  0000                     _TRISCbits	set	3988
   188  0000                     _ADCON0bits	set	4034
   189  0000                     _ADCON0	set	4034
   190  0000                     _ADRESH	set	4036
   191  0000                     _ADRESL	set	4035
   192  0000                     _ADCON2	set	4032
   193  0000                     _ADCON1	set	4033
   194  0000                     _CCPR2H	set	3985
   195  0000                     _CCPR2L	set	3984
   196  0000                     _CCP2CON	set	3991
   197  0000                     _INTCONbits	set	4082
   198  0000                     _INTCON2bits	set	4081
   199  0000                     _WPUB	set	3973
   200  0000                     _TRISC	set	3988
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISA	set	3986
   203  0000                     _LATC	set	3979
   204  0000                     _LATB	set	3978
   205  0000                     _LATA	set	3977
   206  0000                     _ACTCON	set	4021
   207  0000                     _OSCTUNE	set	3995
   208  0000                     _OSCCON2	set	4050
   209  0000                     _OSCCON	set	4051
   210  0000                     _TXREG1	set	4013
   211  0000                     _RCREG1	set	4014
   212  0000                     _RCSTA1bits	set	4011
   213  0000                     _TXSTA1bits	set	4012
   214  0000                     _PIR1bits	set	3998
   215  0000                     _SPBRGH1	set	4016
   216  0000                     _SPBRG1	set	4015
   217  0000                     _TXSTA1	set	4012
   218  0000                     _RCSTA1	set	4011
   219  0000                     _BAUDCON1	set	4024
   220  0000                     _LATA5	set	31821
   221  0000                     _LATB0	set	31824
   222  0000                     _PLLRDY	set	32407
   223  00080B                     STR_9:
   224  00080B  25                 	db	37
   225  00080C  2E                 	db	46
   226  00080D  33                 	db	51	;'3'
   227  00080E  66                 	db	102	;'f'
   228  00080F  20                 	db	32
   229  000810  41                 	db	65	;'A'
   230  000811  6D                 	db	109	;'m'
   231  000812  70                 	db	112	;'p'
   232  000813  2E                 	db	46
   233  000814  0A                 	db	10
   234  000815  0D                 	db	13
   235  000816  00                 	db	0
   236  000817                     STR_1:
   237  000817  63                 	db	99	;'c'
   238  000818  69                 	db	105	;'i'
   239  000819  65                 	db	101	;'e'
   240  00081A  72                 	db	114	;'r'
   241  00081B  3D                 	db	61	;'='
   242  00081C  00                 	db	0
   243  00081D                     STR_5:
   244  00081D  61                 	db	97	;'a'
   245  00081E  70                 	db	112	;'p'
   246  00081F  65                 	db	101	;'e'
   247  000820  72                 	db	114	;'r'
   248  000821  3D                 	db	61	;'='
   249  000822  00                 	db	0
   250  000823                     STR_10:
   251  000823  49                 	db	73	;'I'
   252  000824  4E                 	db	78	;'N'
   253  000825  46                 	db	70	;'F'
   254  000826  00                 	db	0
   255  000827                     STR_14:
   256  000827  4E                 	db	78	;'N'
   257  000828  41                 	db	65	;'A'
   258  000829  4E                 	db	78	;'N'
   259  00082A  00                 	db	0
   260  00082B                     STR_99:
   261  00082B  68                 	db	104	;'h'
   262  00082C  68                 	db	104	;'h'
   263  00082D  58                 	db	88	;'X'
   264  00082E  00                 	db	0
   265  00082F                     STR_18:
   266  00082F  68                 	db	104	;'h'
   267  000830  68                 	db	104	;'h'
   268  000831  64                 	db	100	;'d'
   269  000832  00                 	db	0
   270  000833                     STR_11:
   271  000833  69                 	db	105	;'i'
   272  000834  6E                 	db	110	;'n'
   273  000835  66                 	db	102	;'f'
   274  000836  00                 	db	0
   275  000837                     STR_22:
   276  000837  68                 	db	104	;'h'
   277  000838  68                 	db	104	;'h'
   278  000839  69                 	db	105	;'i'
   279  00083A  00                 	db	0
   280  00083B                     STR_15:
   281  00083B  6E                 	db	110	;'n'
   282  00083C  61                 	db	97	;'a'
   283  00083D  6E                 	db	110	;'n'
   284  00083E  00                 	db	0
   285  00083F                     STR_65:
   286  00083F  68                 	db	104	;'h'
   287  000840  68                 	db	104	;'h'
   288  000841  6E                 	db	110	;'n'
   289  000842  00                 	db	0
   290  000843                     STR_50:
   291  000843  68                 	db	104	;'h'
   292  000844  68                 	db	104	;'h'
   293  000845  6F                 	db	111	;'o'
   294  000846  00                 	db	0
   295  000847                     STR_80:
   296  000847  68                 	db	104	;'h'
   297  000848  68                 	db	104	;'h'
   298  000849  75                 	db	117	;'u'
   299  00084A  00                 	db	0
   300  00084B                     STR_95:
   301  00084B  68                 	db	104	;'h'
   302  00084C  68                 	db	104	;'h'
   303  00084D  78                 	db	120	;'x'
   304  00084E  00                 	db	0
   305  00084F                     STR_117:
   306  00084F  7A                 	db	122	;'z'
   307  000850  58                 	db	88	;'X'
   308  000851  00                 	db	0
   309  000852                     STR_36:
   310  000852  7A                 	db	122	;'z'
   311  000853  64                 	db	100	;'d'
   312  000854  00                 	db	0
   313  000855                     STR_45:
   314  000855  6C                 	db	108	;'l'
   315  000856  66                 	db	102	;'f'
   316  000857  00                 	db	0
   317  000858                     STR_40:
   318  000858  7A                 	db	122	;'z'
   319  000859  69                 	db	105	;'i'
   320  00085A  00                 	db	0
   321  00085B                     STR_75:
   322  00085B  7A                 	db	122	;'z'
   323  00085C  6E                 	db	110	;'n'
   324  00085D  00                 	db	0
   325  00085E                     STR_60:
   326  00085E  7A                 	db	122	;'z'
   327  00085F  6F                 	db	111	;'o'
   328  000860  00                 	db	0
   329  000861                     STR_90:
   330  000861  7A                 	db	122	;'z'
   331  000862  75                 	db	117	;'u'
   332  000863  00                 	db	0
   333  000864                     STR_113:
   334  000864  7A                 	db	122	;'z'
   335  000865  78                 	db	120	;'x'
   336  000866  00                 	db	0
   337  000867                     STR_3:
   338  000867  6F                 	db	111	;'o'
   339  000868  6E                 	db	110	;'n'
   340  000869  00                 	db	0
   341  00086A  00                 	db	0	; dummy byte at the end
   342  0000                     
   343                           ; #config settings
   344                           
   345                           	psect	cinit
   346  005A80                     __pcinit:
   347                           	callstack 0
   348  005A80                     start_initialization:
   349                           	callstack 0
   350  005A80                     __initialization:
   351                           	callstack 0
   352                           
   353                           ; Initialize objects allocated to BANK1 (11 bytes)
   354                           ; load TBLPTR registers with __pidataBANK1
   355  005A80  0E80               	movlw	low __pidataBANK1
   356  005A82  6EF6               	movwf	tblptrl,c
   357  005A84  0E60               	movlw	high __pidataBANK1
   358  005A86  6EF7               	movwf	tblptrh,c
   359  005A88  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   360  005A8A  6EF8               	movwf	tblptru,c
   361  005A8C  EE01  F0E6         	lfsr	0,__pdataBANK1
   362  005A90  EE10 F00B          	lfsr	1,11
   363  005A94                     copy_data0:
   364  005A94  0009               	tblrd		*+
   365  005A96  CFF5 FFEE          	movff	tablat,postinc0
   366  005A9A  50E5               	movf	postdec1,w,c
   367  005A9C  50E1               	movf	fsr1l,w,c
   368  005A9E  E1FA               	bnz	copy_data0
   369                           
   370                           ; Initialize objects allocated to BANK0 (1 bytes)
   371                           ; load TBLPTR registers with __pidataBANK0
   372  005AA0  0EBC               	movlw	low __pidataBANK0
   373  005AA2  6EF6               	movwf	tblptrl,c
   374  005AA4  0E60               	movlw	high __pidataBANK0
   375  005AA6  6EF7               	movwf	tblptrh,c
   376  005AA8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   377  005AAA  6EF8               	movwf	tblptru,c
   378  005AAC  0009               	tblrd		*+	;fetch initializer
   379  005AAE  CFF5 F0FE          	movff	tablat,__pdataBANK0
   380                           
   381                           ; Clear objects allocated to BANK1 (230 bytes)
   382  005AB2  EE01  F000         	lfsr	0,__pbssBANK1
   383  005AB6  0EE6               	movlw	230
   384  005AB8                     clear_0:
   385  005AB8  6AEE               	clrf	postinc0,c
   386  005ABA  06E8               	decf	wreg,f,c
   387  005ABC  E1FD               	bnz	clear_0
   388                           
   389                           ; Clear objects allocated to BANK0 (15 bytes)
   390  005ABE  EE00  F0EF         	lfsr	0,__pbssBANK0
   391  005AC2  0E0F               	movlw	15
   392  005AC4                     clear_1:
   393  005AC4  6AEE               	clrf	postinc0,c
   394  005AC6  06E8               	decf	wreg,f,c
   395  005AC8  E1FD               	bnz	clear_1
   396                           
   397                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   398  005ACA  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   399  005ACC                     end_of_initialization:
   400                           	callstack 0
   401  005ACC                     __end_of__initialization:
   402                           	callstack 0
   403  005ACC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   404  005ACE  6EF8               	movwf	tblptru,c
   405  005AD0  0100               	movlb	0
   406  005AD2  EFEB  F025         	goto	_main	;jump to C main() function
   407                           
   408                           	psect	bitbssCOMRAM
   409  0002F8                     __pbitbssCOMRAM:
   410                           	callstack 0
   411  0002F8                     _on:
   412                           	callstack 0
   413  0002F8                     	ds	1
   414                           
   415                           	psect	bssBANK0
   416  0000EF                     __pbssBANK0:
   417                           	callstack 0
   418  0000EF                     _nout:
   419                           	callstack 0
   420  0000EF                     	ds	2
   421  0000F1                     _width:
   422                           	callstack 0
   423  0000F1                     	ds	2
   424  0000F3                     _prec:
   425                           	callstack 0
   426  0000F3                     	ds	2
   427  0000F5                     _flags:
   428                           	callstack 0
   429  0000F5                     	ds	2
   430  0000F7                     _valor:
   431                           	callstack 0
   432  0000F7                     	ds	2
   433  0000F9                     _flag_rx:
   434                           	callstack 0
   435  0000F9                     	ds	1
   436  0000FA                     _datorx:
   437                           	callstack 0
   438  0000FA                     	ds	1
   439  0000FB                     _puntero:
   440                           	callstack 0
   441  0000FB                     	ds	1
   442  0000FC                     _dato_serial:
   443                           	callstack 0
   444  0000FC                     	ds	1
   445  0000FD                     _eusart1RxLastError:
   446                           	callstack 0
   447  0000FD                     	ds	1
   448                           
   449                           	psect	dataBANK0
   450  0000FE                     __pdataBANK0:
   451                           	callstack 0
   452  0000FE                     _prob:
   453                           	callstack 0
   454  0000FE                     	ds	1
   455                           
   456                           	psect	bssBANK1
   457  000100                     __pbssBANK1:
   458                           	callstack 0
   459  000100                     _procesa:
   460                           	callstack 0
   461  000100                     	ds	30
   462  00011E                     _texto:
   463                           	callstack 0
   464  00011E                     	ds	20
   465  000132                     floorf@F527:
   466                           	callstack 0
   467  000132                     	ds	4
   468  000136                     ___fpclassifyf@F465:
   469                           	callstack 0
   470  000136                     	ds	4
   471  00013A                     _offset:
   472                           	callstack 0
   473  00013A                     	ds	4
   474  00013E                     _I_rms:
   475                           	callstack 0
   476  00013E                     	ds	4
   477  000142                     _I_min:
   478                           	callstack 0
   479  000142                     	ds	4
   480  000146                     _I_max:
   481                           	callstack 0
   482  000146                     	ds	4
   483  00014A                     _I:
   484                           	callstack 0
   485  00014A                     	ds	4
   486  00014E                     _voltaje:
   487                           	callstack 0
   488  00014E                     	ds	4
   489  000152                     _errno:
   490                           	callstack 0
   491  000152                     	ds	2
   492  000154                     _ADC_InterruptHandler:
   493                           	callstack 0
   494  000154                     	ds	2
   495  000156                     _EUSART1_ErrorHandler:
   496                           	callstack 0
   497  000156                     	ds	2
   498  000158                     _EUSART1_OverrunErrorHandler:
   499                           	callstack 0
   500  000158                     	ds	2
   501  00015A                     _EUSART1_FramingErrorHandler:
   502                           	callstack 0
   503  00015A                     	ds	2
   504  00015C                     _dbuf:
   505                           	callstack 0
   506  00015C                     	ds	80
   507  0001AC                     _trama:
   508                           	callstack 0
   509  0001AC                     	ds	30
   510  0001CA                     _valor_string:
   511                           	callstack 0
   512  0001CA                     	ds	28
   513                           
   514                           	psect	dataBANK1
   515  0001E6                     __pdataBANK1:
   516                           	callstack 0
   517  0001E6                     stoa@F1176:
   518                           	callstack 0
   519  0001E6                     	ds	7
   520  0001ED                     _sensibilidad:
   521                           	callstack 0
   522  0001ED                     	ds	4
   523                           
   524                           	psect	cstackBANK0
   525  000060                     __pcstackBANK0:
   526                           	callstack 0
   527  000060                     _efgtoa$1533:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x0
   531  000060                     	ds	2
   532  000062                     _efgtoa$1534:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x2
   536  000062                     	ds	2
   537  000064                     _efgtoa$1538:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x4
   541  000064                     	ds	2
   542  000066                     _efgtoa$1542:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546  000066                     	ds	2
   547  000068                     _efgtoa$1543:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x8
   551  000068                     	ds	2
   552  00006A                     _efgtoa$1544:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xA
   556  00006A                     	ds	2
   557  00006C                     efgtoa@t:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0xC
   561  00006C                     	ds	2
   562  00006E                     efgtoa@pp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xE
   566  00006E                     	ds	2
   567  000070                     efgtoa@ne:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x10
   571  000070                     	ds	2
   572  000072                     efgtoa@m:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x12
   576  000072                     	ds	2
   577  000074                     efgtoa@ou:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x14
   581  000074                     	ds	4
   582  000078                     efgtoa@d:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x18
   586  000078                     	ds	2
   587  00007A                     efgtoa@sign:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x1A
   591  00007A                     	ds	2
   592  00007C                     efgtoa@p:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x1C
   596  00007C                     	ds	2
   597  00007E                     efgtoa@w:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x1E
   601  00007E                     	ds	2
   602  000080                     efgtoa@nmode:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x20
   606  000080                     	ds	1
   607  000081                     efgtoa@mode:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x21
   611  000081                     	ds	1
   612  000082                     efgtoa@h:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x22
   616  000082                     	ds	4
   617  000086                     efgtoa@l:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x26
   621  000086                     	ds	4
   622  00008A                     efgtoa@i:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x2A
   626  00008A                     	ds	2
   627  00008C                     efgtoa@g:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x2C
   631  00008C                     	ds	4
   632  000090                     efgtoa@e:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x30
   636  000090                     	ds	2
   637  000092                     efgtoa@n:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x32
   641  000092                     	ds	2
   642  000094                     efgtoa@u:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x34
   646  000094                     	ds	4
   647  000098                     ?_vfpfcnvrt:
   648                           	callstack 0
   649  000098                     vfpfcnvrt@fp:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x38
   653  000098                     	ds	2
   654  00009A                     vfpfcnvrt@fmt:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x3A
   658  00009A                     	ds	2
   659  00009C                     vfpfcnvrt@ap:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x3C
   663  00009C                     	ds	2
   664  00009E                     vfpfcnvrt@cp:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x3E
   668  00009E                     	ds	2
   669  0000A0                     vfpfcnvrt@done:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x40
   673  0000A0                     	ds	2
   674  0000A2                     _vfpfcnvrt$1594:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x42
   678  0000A2                     	ds	2
   679  0000A4                     _vfpfcnvrt$1595:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x44
   683  0000A4                     	ds	2
   684  0000A6                     _vfpfcnvrt$1616:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x46
   688  0000A6                     	ds	2
   689  0000A8                     vfpfcnvrt@f:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x48
   693  0000A8                     	ds	4
   694  0000AC                     vfpfcnvrt@ct:
   695                           	callstack 0
   696                           
   697                           ; 3 bytes @ 0x4C
   698  0000AC                     	ds	3
   699  0000AF                     vfpfcnvrt@ll:
   700                           	callstack 0
   701                           
   702                           ; 8 bytes @ 0x4F
   703  0000AF                     	ds	8
   704  0000B7                     vfpfcnvrt@vp:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x57
   708  0000B7                     	ds	2
   709  0000B9                     vfpfcnvrt@c:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x59
   713  0000B9                     	ds	1
   714  0000BA                     vfpfcnvrt@llu:
   715                           	callstack 0
   716                           
   717                           ; 8 bytes @ 0x5A
   718  0000BA                     	ds	8
   719  0000C2                     ?_vfprintf:
   720                           	callstack 0
   721  0000C2                     vfprintf@fp:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x62
   725  0000C2                     	ds	2
   726  0000C4                     vfprintf@fmt:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x64
   730  0000C4                     	ds	2
   731  0000C6                     vfprintf@ap:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x66
   735  0000C6                     	ds	2
   736  0000C8                     vfprintf@cfmt:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x68
   740  0000C8                     	ds	2
   741  0000CA                     ?_vsnprintf:
   742                           	callstack 0
   743  0000CA                     vsnprintf@s:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x6A
   747  0000CA                     	ds	2
   748  0000CC                     vsnprintf@n:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x6C
   752  0000CC                     	ds	2
   753  0000CE                     vsnprintf@fmt:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x6E
   757  0000CE                     	ds	2
   758  0000D0                     vsnprintf@ap:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x70
   762  0000D0                     	ds	2
   763  0000D2                     ??_vsnprintf:
   764                           
   765                           ; 1 bytes @ 0x72
   766  0000D2                     	ds	5
   767  0000D7                     _vsnprintf$1403:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x77
   771  0000D7                     	ds	2
   772  0000D9                     vsnprintf@cnt:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x79
   776  0000D9                     	ds	2
   777  0000DB                     vsnprintf@f:
   778                           	callstack 0
   779                           
   780                           ; 6 bytes @ 0x7B
   781  0000DB                     	ds	6
   782  0000E1                     ?_snprintf:
   783                           	callstack 0
   784  0000E1                     snprintf@s:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x81
   788  0000E1                     	ds	2
   789  0000E3                     snprintf@n:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x83
   793  0000E3                     	ds	2
   794  0000E5                     snprintf@fmt:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x85
   798  0000E5                     	ds	6
   799  0000EB                     snprintf@ap:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x8B
   803  0000EB                     	ds	2
   804  0000ED                     ??_main:
   805                           
   806                           ; 1 bytes @ 0x8D
   807  0000ED                     	ds	2
   808                           
   809                           	psect	cstackCOMRAM
   810  000001                     __pcstackCOMRAM:
   811                           	callstack 0
   812  000001                     ?_strlen:
   813                           	callstack 0
   814  000001                     ?___fpclassifyf:
   815                           	callstack 0
   816  000001                     ?_isupper:
   817                           	callstack 0
   818  000001                     ?_isalpha:
   819                           	callstack 0
   820  000001                     ?_isdigit:
   821                           	callstack 0
   822  000001                     ?_strncmp:
   823                           	callstack 0
   824  000001                     ?_isspace:
   825                           	callstack 0
   826  000001                     ?_islower:
   827                           	callstack 0
   828  000001                     ?_ADC_GetConversion:
   829                           	callstack 0
   830  000001                     ?___wmul:
   831                           	callstack 0
   832  000001                     ?___awdiv:
   833                           	callstack 0
   834  000001                     ?___awmod:
   835                           	callstack 0
   836  000001                     ?___fladd:
   837                           	callstack 0
   838  000001                     ?___flneg:
   839                           	callstack 0
   840  000001                     ?___fltol:
   841                           	callstack 0
   842  000001                     ?___xxtofl:
   843                           	callstack 0
   844  000001                     ?___aodiv:
   845                           	callstack 0
   846  000001                     ?___aomod:
   847                           	callstack 0
   848  000001                     ?___lodiv:
   849                           	callstack 0
   850  000001                     ?___lomod:
   851                           	callstack 0
   852  000001                     EUSART1_Write@txData:
   853                           	callstack 0
   854  000001                     spi_s_read@dato_:
   855                           	callstack 0
   856  000001                     spi_s_write@dato_:
   857                           	callstack 0
   858  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   859                           	callstack 0
   860  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   861                           	callstack 0
   862  000001                     EUSART1_SetErrorHandler@interruptHandler:
   863                           	callstack 0
   864  000001                     ___wmul@multiplier:
   865                           	callstack 0
   866  000001                     ___awdiv@dividend:
   867                           	callstack 0
   868  000001                     ___awmod@dividend:
   869                           	callstack 0
   870  000001                     isalpha@c:
   871                           	callstack 0
   872  000001                     isdigit@c:
   873                           	callstack 0
   874  000001                     isspace@c:
   875                           	callstack 0
   876  000001                     isupper@c:
   877                           	callstack 0
   878  000001                     strcpy@dest:
   879                           	callstack 0
   880  000001                     strlen@s:
   881                           	callstack 0
   882  000001                     strncmp@_l:
   883                           	callstack 0
   884  000001                     islower@c:
   885                           	callstack 0
   886  000001                     ___fleq@ff1:
   887                           	callstack 0
   888  000001                     ___flneg@f1:
   889                           	callstack 0
   890  000001                     ___fltol@f1:
   891                           	callstack 0
   892  000001                     ___fladd@b:
   893                           	callstack 0
   894  000001                     ___xxtofl@val:
   895                           	callstack 0
   896  000001                     ___fpclassifyf@x:
   897                           	callstack 0
   898  000001                     ___aodiv@dividend:
   899                           	callstack 0
   900  000001                     ___aomod@dividend:
   901                           	callstack 0
   902  000001                     ___lodiv@dividend:
   903                           	callstack 0
   904  000001                     ___lomod@dividend:
   905                           	callstack 0
   906                           
   907                           ; 8 bytes @ 0x0
   908  000001                     	ds	1
   909  000002                     putch@txData:
   910                           	callstack 0
   911  000002                     spi_s_read@cont_s:
   912                           	callstack 0
   913  000002                     spi_s_write@cont_s:
   914                           	callstack 0
   915  000002                     EUSART1_Write_string@data:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x1
   919  000002                     	ds	1
   920  000003                     ??_isupper:
   921  000003                     ??_isalpha:
   922  000003                     ??_isdigit:
   923  000003                     ??_isspace:
   924  000003                     ??_islower:
   925  000003                     ??_ADC_GetConversion:
   926  000003                     nrf2401_write@valor:
   927                           	callstack 0
   928  000003                     nrf2401_comando@comando:
   929                           	callstack 0
   930  000003                     nrf2401_read@reg:
   931                           	callstack 0
   932  000003                     nrf2401_recibe@valor_:
   933                           	callstack 0
   934  000003                     nrf2401_direccion_TX_RX@direccion_:
   935                           	callstack 0
   936  000003                     ___wmul@multiplicand:
   937                           	callstack 0
   938  000003                     ___awdiv@divisor:
   939                           	callstack 0
   940  000003                     ___awmod@divisor:
   941                           	callstack 0
   942  000003                     fputc@c:
   943                           	callstack 0
   944  000003                     strcpy@src:
   945                           	callstack 0
   946  000003                     strlen@a:
   947                           	callstack 0
   948  000003                     strncmp@_r:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x2
   952  000003                     	ds	1
   953  000004                     nrf2401_write@reg:
   954                           	callstack 0
   955  000004                     nrf2401_read@dato_:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x3
   959  000004                     	ds	1
   960  000005                     ??___fpclassifyf:
   961  000005                     ??_strcpy:
   962  000005                     ??___fltol:
   963  000005                     ??___xxtofl:
   964  000005                     ADC_GetConversion@channel:
   965                           	callstack 0
   966  000005                     nrf2401_direccion_TX_RX@registro:
   967                           	callstack 0
   968  000005                     ___awdiv@counter:
   969                           	callstack 0
   970  000005                     ___awmod@counter:
   971                           	callstack 0
   972  000005                     ___wmul@product:
   973                           	callstack 0
   974  000005                     fputc@fp:
   975                           	callstack 0
   976  000005                     strncmp@n:
   977                           	callstack 0
   978  000005                     ___fleq@ff2:
   979                           	callstack 0
   980  000005                     ___fladd@a:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x4
   984  000005                     	ds	1
   985  000006                     ??_nrf2401_direccion_TX_RX:
   986  000006                     ___awdiv@sign:
   987                           	callstack 0
   988  000006                     ___awmod@sign:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x5
   992  000006                     	ds	1
   993  000007                     ??_fputc:
   994  000007                     ??_strncmp:
   995  000007                     ?_tolower:
   996                           	callstack 0
   997  000007                     ?_toupper:
   998                           	callstack 0
   999  000007                     _isspace$1781:
  1000                           	callstack 0
  1001  000007                     ___awdiv@quotient:
  1002                           	callstack 0
  1003  000007                     strcpy@s:
  1004                           	callstack 0
  1005  000007                     tolower@c:
  1006                           	callstack 0
  1007  000007                     toupper@c:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x6
  1011  000007                     	ds	1
  1012  000008                     ?_atoi:
  1013                           	callstack 0
  1014  000008                     nrf2401_direccion_TX_RX@cont_s:
  1015                           	callstack 0
  1016  000008                     atoi@s:
  1017                           	callstack 0
  1018  000008                     strncmp@l:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x7
  1022  000008                     	ds	1
  1023  000009                     ??___fladd:
  1024  000009                     ??_tolower:
  1025  000009                     ??_toupper:
  1026  000009                     ??___fleq:
  1027  000009                     nrF2401_init_RX@canal:
  1028                           	callstack 0
  1029  000009                     ___fltol@sign1:
  1030                           	callstack 0
  1031  000009                     ___xxtofl@sign:
  1032                           	callstack 0
  1033  000009                     ___fpclassifyf@e:
  1034                           	callstack 0
  1035  000009                     strcpy@d:
  1036                           	callstack 0
  1037  000009                     ___aodiv@divisor:
  1038                           	callstack 0
  1039  000009                     ___aomod@divisor:
  1040                           	callstack 0
  1041  000009                     ___lodiv@divisor:
  1042                           	callstack 0
  1043  000009                     ___lomod@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 8 bytes @ 0x8
  1047  000009                     	ds	1
  1048  00000A                     ??_atoi:
  1049  00000A                     ___fltol@exp1:
  1050                           	callstack 0
  1051  00000A                     ___xxtofl@exp:
  1052                           	callstack 0
  1053  00000A                     strncmp@r:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x9
  1057  00000A                     	ds	1
  1058  00000B                     ___xxtofl@arg:
  1059                           	callstack 0
  1060  00000B                     ___fpclassifyf@u:
  1061                           	callstack 0
  1062                           
  1063                           ; 4 bytes @ 0xA
  1064  00000B                     	ds	1
  1065  00000C                     ?_ctoa:
  1066                           	callstack 0
  1067  00000C                     ?_stoa:
  1068                           	callstack 0
  1069  00000C                     ctoa@fp:
  1070                           	callstack 0
  1071  00000C                     stoa@fp:
  1072                           	callstack 0
  1073  00000C                     fputs@s:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0xB
  1077  00000C                     	ds	1
  1078  00000D                     ___fladd@signs:
  1079                           	callstack 0
  1080  00000D                     _tolower$1854:
  1081                           	callstack 0
  1082  00000D                     _toupper$1869:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0xC
  1086  00000D                     	ds	1
  1087  00000E                     ___fladd@aexp:
  1088                           	callstack 0
  1089  00000E                     ctoa@c:
  1090                           	callstack 0
  1091  00000E                     stoa@s:
  1092                           	callstack 0
  1093  00000E                     atoi@neg:
  1094                           	callstack 0
  1095  00000E                     fputs@fp:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0xD
  1099  00000E                     	ds	1
  1100  00000F                     ??_ctoa:
  1101  00000F                     ___fladd@bexp:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0xE
  1105  00000F                     	ds	1
  1106  000010                     ??_stoa:
  1107  000010                     ___fladd@grs:
  1108                           	callstack 0
  1109  000010                     fputs@c:
  1110                           	callstack 0
  1111  000010                     ctoa@l:
  1112                           	callstack 0
  1113  000010                     _atoi$1740:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0xF
  1117  000010                     	ds	1
  1118  000011                     ?___fldiv:
  1119                           	callstack 0
  1120  000011                     ___aodiv@counter:
  1121                           	callstack 0
  1122  000011                     ___aomod@counter:
  1123                           	callstack 0
  1124  000011                     ___lomod@counter:
  1125                           	callstack 0
  1126  000011                     fputs@i:
  1127                           	callstack 0
  1128  000011                     ___fldiv@b:
  1129                           	callstack 0
  1130  000011                     stoa@nuls:
  1131                           	callstack 0
  1132  000011                     ___lodiv@quotient:
  1133                           	callstack 0
  1134                           
  1135                           ; 8 bytes @ 0x10
  1136  000011                     	ds	1
  1137  000012                     ___aodiv@sign:
  1138                           	callstack 0
  1139  000012                     ___aomod@sign:
  1140                           	callstack 0
  1141  000012                     ctoa@w:
  1142                           	callstack 0
  1143  000012                     _atoi$1742:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x11
  1147  000012                     	ds	1
  1148  000013                     ?_abs:
  1149                           	callstack 0
  1150  000013                     ?_pad:
  1151                           	callstack 0
  1152  000013                     pad@fp:
  1153                           	callstack 0
  1154  000013                     abs@a:
  1155                           	callstack 0
  1156  000013                     ___aodiv@quotient:
  1157                           	callstack 0
  1158                           
  1159                           ; 8 bytes @ 0x12
  1160  000013                     	ds	1
  1161  000014                     _atoi$1741:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x13
  1165  000014                     	ds	1
  1166  000015                     ??_abs:
  1167  000015                     pad@buf:
  1168                           	callstack 0
  1169  000015                     atoi@n:
  1170                           	callstack 0
  1171  000015                     ___fldiv@a:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x14
  1175  000015                     	ds	2
  1176  000017                     pad@p:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x16
  1180  000017                     	ds	1
  1181  000018                     stoa@i:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x17
  1185  000018                     	ds	1
  1186  000019                     ??___fldiv:
  1187  000019                     ??_pad:
  1188  000019                     ___lodiv@counter:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x18
  1192  000019                     	ds	1
  1193  00001A                     pad@i:
  1194                           	callstack 0
  1195  00001A                     stoa@w:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x19
  1199  00001A                     	ds	2
  1200  00001C                     pad@w:
  1201                           	callstack 0
  1202  00001C                     stoa@cp:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x1B
  1206  00001C                     	ds	1
  1207  00001D                     ___fldiv@rem:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x1C
  1211  00001D                     	ds	1
  1212  00001E                     ?_dtoa:
  1213                           	callstack 0
  1214  00001E                     ?_otoa:
  1215                           	callstack 0
  1216  00001E                     ?_utoa:
  1217                           	callstack 0
  1218  00001E                     ?_xtoa:
  1219                           	callstack 0
  1220  00001E                     dtoa@fp:
  1221                           	callstack 0
  1222  00001E                     otoa@fp:
  1223                           	callstack 0
  1224  00001E                     stoa@p:
  1225                           	callstack 0
  1226  00001E                     utoa@fp:
  1227                           	callstack 0
  1228  00001E                     xtoa@fp:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x1D
  1232  00001E                     	ds	2
  1233  000020                     stoa@l:
  1234                           	callstack 0
  1235  000020                     dtoa@d:
  1236                           	callstack 0
  1237  000020                     otoa@d:
  1238                           	callstack 0
  1239  000020                     utoa@d:
  1240                           	callstack 0
  1241  000020                     xtoa@d:
  1242                           	callstack 0
  1243                           
  1244                           ; 8 bytes @ 0x1F
  1245  000020                     	ds	1
  1246  000021                     ___fldiv@sign:
  1247                           	callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x20
  1250  000021                     	ds	1
  1251  000022                     ___fldiv@new_exp:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x21
  1255  000022                     	ds	2
  1256  000024                     ___fldiv@grs:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x23
  1260  000024                     	ds	4
  1261  000028                     ??_dtoa:
  1262  000028                     ??_otoa:
  1263  000028                     ??_utoa:
  1264  000028                     ___fldiv@bexp:
  1265                           	callstack 0
  1266  000028                     xtoa@x:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x27
  1270  000028                     	ds	1
  1271  000029                     ??_xtoa:
  1272  000029                     ___fldiv@aexp:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x28
  1276  000029                     	ds	1
  1277  00002A                     ?___flmul:
  1278                           	callstack 0
  1279  00002A                     ?_floorf:
  1280                           	callstack 0
  1281  00002A                     ___flmul@b:
  1282                           	callstack 0
  1283  00002A                     floorf@x:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x29
  1287  00002A                     	ds	4
  1288  00002E                     ??_floorf:
  1289  00002E                     ___flmul@a:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x2D
  1293  00002E                     	ds	2
  1294  000030                     _dtoa$1509:
  1295                           	callstack 0
  1296  000030                     otoa@p:
  1297                           	callstack 0
  1298  000030                     utoa@p:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x2F
  1302  000030                     	ds	1
  1303  000031                     _xtoa$1579:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x30
  1307  000031                     	ds	1
  1308  000032                     ??___flmul:
  1309  000032                     dtoa@p:
  1310                           	callstack 0
  1311  000032                     otoa@t:
  1312                           	callstack 0
  1313  000032                     utoa@w:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x31
  1317  000032                     	ds	1
  1318  000033                     _xtoa$1580:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x32
  1322  000033                     	ds	1
  1323  000034                     dtoa@w:
  1324                           	callstack 0
  1325  000034                     otoa@w:
  1326                           	callstack 0
  1327  000034                     floorf@m:
  1328                           	callstack 0
  1329  000034                     utoa@n:
  1330                           	callstack 0
  1331                           
  1332                           ; 8 bytes @ 0x33
  1333  000034                     	ds	1
  1334  000035                     xtoa@p:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x34
  1338  000035                     	ds	1
  1339  000036                     ___flmul@sign:
  1340                           	callstack 0
  1341  000036                     dtoa@s:
  1342                           	callstack 0
  1343  000036                     otoa@n:
  1344                           	callstack 0
  1345                           
  1346                           ; 8 bytes @ 0x35
  1347  000036                     	ds	1
  1348  000037                     xtoa@w:
  1349                           	callstack 0
  1350  000037                     ___flmul@grs:
  1351                           	callstack 0
  1352                           
  1353                           ; 4 bytes @ 0x36
  1354  000037                     	ds	1
  1355  000038                     floorf@e:
  1356                           	callstack 0
  1357  000038                     dtoa@n:
  1358                           	callstack 0
  1359                           
  1360                           ; 8 bytes @ 0x37
  1361  000038                     	ds	1
  1362  000039                     xtoa@n:
  1363                           	callstack 0
  1364                           
  1365                           ; 8 bytes @ 0x38
  1366  000039                     	ds	1
  1367  00003A                     floorf@u:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x39
  1371  00003A                     	ds	1
  1372  00003B                     ___flmul@aexp:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x3A
  1376  00003B                     	ds	1
  1377  00003C                     ___flmul@bexp:
  1378                           	callstack 0
  1379  00003C                     utoa@i:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x3B
  1383  00003C                     	ds	1
  1384  00003D                     ___flmul@prod:
  1385                           	callstack 0
  1386                           
  1387                           ; 4 bytes @ 0x3C
  1388  00003D                     	ds	1
  1389  00003E                     otoa@i:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x3D
  1393  00003E                     	ds	2
  1394  000040                     dtoa@i:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x3F
  1398  000040                     	ds	1
  1399  000041                     ___flmul@temp:
  1400                           	callstack 0
  1401  000041                     xtoa@i:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x40
  1405  000041                     	ds	2
  1406  000043                     ?___flsub:
  1407                           	callstack 0
  1408  000043                     xtoa@c:
  1409                           	callstack 0
  1410  000043                     ___flge@ff1:
  1411                           	callstack 0
  1412  000043                     ___flsub@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x42
  1416  000043                     	ds	4
  1417  000047                     ___flge@ff2:
  1418                           	callstack 0
  1419  000047                     ___flsub@a:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x46
  1423  000047                     	ds	4
  1424  00004B                     ??___flge:
  1425                           
  1426                           ; 1 bytes @ 0x4A
  1427  00004B                     	ds	4
  1428  00004F                     ?_efgtoa:
  1429                           	callstack 0
  1430  00004F                     ?_get_corriente_AC:
  1431                           	callstack 0
  1432  00004F                     get_corriente_AC@n_muestras:
  1433                           	callstack 0
  1434  00004F                     efgtoa@fp:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x4E
  1438  00004F                     	ds	2
  1439  000051                     efgtoa@f:
  1440                           	callstack 0
  1441                           
  1442                           ; 4 bytes @ 0x50
  1443  000051                     	ds	2
  1444  000053                     ??_get_corriente_AC:
  1445                           
  1446                           ; 1 bytes @ 0x52
  1447  000053                     	ds	1
  1448  000054                     _get_corriente_AC$2188:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0x53
  1452  000054                     	ds	1
  1453  000055                     efgtoa@c:
  1454                           	callstack 0
  1455                           
  1456                           ; 1 bytes @ 0x54
  1457  000055                     	ds	1
  1458  000056                     ??_efgtoa:
  1459                           
  1460                           ; 1 bytes @ 0x55
  1461  000056                     	ds	2
  1462  000058                     get_corriente_AC@i:
  1463                           	callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x57
  1466  000058                     	ds	2
  1467  00005A                     get_corriente_AC@corriente:
  1468                           	callstack 0
  1469                           
  1470                           ; 4 bytes @ 0x59
  1471  00005A                     	ds	1
  1472  00005B                     ??_vfpfcnvrt:
  1473                           
  1474                           ; 1 bytes @ 0x5A
  1475  00005B                     	ds	4
  1476  00005F                     
  1477                           ; 1 bytes @ 0x5E
  1478 ;;
  1479 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1480 ;;
  1481 ;; *************** function _main *****************
  1482 ;; Defined at:
  1483 ;;		line 172 in file "main.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1500 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1501 ;;Total ram usage:        2 bytes
  1502 ;; Hardware stack levels required when called: 10
  1503 ;; This function calls:
  1504 ;;		_EUSART1_Write_string
  1505 ;;		_SYSTEM_Initialize
  1506 ;;		___flmul
  1507 ;;		_get_corriente_AC
  1508 ;;		_nrF2401_init_RX
  1509 ;;		_nrf2401_haydatos
  1510 ;;		_nrf2401_recibe
  1511 ;;		_snprintf
  1512 ;;		_spi_s_init
  1513 ;; This function is called by:
  1514 ;;		Startup code after reset
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text0
  1519  004BD6                     __ptext0:
  1520                           	callstack 0
  1521  004BD6                     _main:
  1522                           	callstack 21
  1523  004BD6                     
  1524                           ;main.c: 175:     SYSTEM_Initialize();
  1525  004BD6  EC0E  F030         	call	_SYSTEM_Initialize	;wreg free
  1526  004BDA                     
  1527                           ;main.c: 194:     ANSELA = 0b00000111;
  1528  004BDA  0E07               	movlw	7
  1529  004BDC  010F               	movlb	15	; () banked
  1530  004BDE  6F5B               	movwf	91,b	;volatile
  1531  004BE0                     
  1532                           ; BSR set to: 15
  1533                           ;main.c: 195:     ANSELB = 0b00000000;
  1534  004BE0  0E00               	movlw	0
  1535  004BE2  6F5C               	movwf	92,b	;volatile
  1536  004BE4                     
  1537                           ; BSR set to: 15
  1538                           ;main.c: 196:     ANSELC = 0x00;
  1539  004BE4  0E00               	movlw	0
  1540  004BE6  6F5D               	movwf	93,b	;volatile
  1541  004BE8                     
  1542                           ; BSR set to: 15
  1543                           ;main.c: 203:     LATA5 = 1;
  1544  004BE8  8A89               	bsf	3977,5,c	;volatile
  1545  004BEA                     
  1546                           ; BSR set to: 15
  1547                           ;main.c: 204:     _delay((unsigned long)((2000)*(48000000/4000.0)));
  1548  004BEA  0E7A               	movlw	122
  1549  004BEC  0100               	movlb	0	; () banked
  1550  004BEE  6FEE               	movwf	(??_main+1)& (0+255),b
  1551  004BF0  0EC1               	movlw	193
  1552  004BF2  6FED               	movwf	??_main& (0+255),b
  1553  004BF4  0E81               	movlw	129
  1554  004BF6                     u8097:
  1555  004BF6  2EE8               	decfsz	wreg,f,c
  1556  004BF8  D7FE               	bra	u8097
  1557  004BFA  2FED               	decfsz	??_main& (0+255),f,b
  1558  004BFC  D7FC               	bra	u8097
  1559  004BFE  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1560  004C00  D7FA               	bra	u8097
  1561  004C02  D000               	nop2	
  1562  004C04                     
  1563                           ;main.c: 205:     LATA5 = 0;
  1564  004C04  9A89               	bcf	3977,5,c	;volatile
  1565  004C06                     
  1566                           ;main.c: 208:     spi_s_init();
  1567  004C06  EC03  F030         	call	_spi_s_init	;wreg free
  1568  004C0A                     
  1569                           ;main.c: 210:     nrF2401_init_RX(17);
  1570  004C0A  0E11               	movlw	17
  1571  004C0C  EC44  F02C         	call	_nrF2401_init_RX
  1572  004C10                     l6540:
  1573                           
  1574                           ;main.c: 216:     {;main.c: 220:         I = get_corriente_AC(200);
  1575  004C10  0E00               	movlw	0
  1576  004C12  6E50               	movwf	(get_corriente_AC@n_muestras+1)^0,c
  1577  004C14  0EC8               	movlw	200
  1578  004C16  6E4F               	movwf	get_corriente_AC@n_muestras^0,c
  1579  004C18  ECDA  F01D         	call	_get_corriente_AC	;wreg free
  1580  004C1C  C04F  F14A         	movff	?_get_corriente_AC,_I
  1581  004C20  C050  F14B         	movff	?_get_corriente_AC+1,_I+1
  1582  004C24  C051  F14C         	movff	?_get_corriente_AC+2,_I+2
  1583  004C28  C052  F14D         	movff	?_get_corriente_AC+3,_I+3
  1584  004C2C                     
  1585                           ;main.c: 221:         I_rms = I * 0.707;
  1586  004C2C  C14A  F02A         	movff	_I,___flmul@b
  1587  004C30  C14B  F02B         	movff	_I+1,___flmul@b+1
  1588  004C34  C14C  F02C         	movff	_I+2,___flmul@b+2
  1589  004C38  C14D  F02D         	movff	_I+3,___flmul@b+3
  1590  004C3C  0EF4               	movlw	244
  1591  004C3E  6E2E               	movwf	___flmul@a^0,c
  1592  004C40  0EFD               	movlw	253
  1593  004C42  6E2F               	movwf	(___flmul@a+1)^0,c
  1594  004C44  0E34               	movlw	52
  1595  004C46  6E30               	movwf	(___flmul@a+2)^0,c
  1596  004C48  0E3F               	movlw	63
  1597  004C4A  6E31               	movwf	(___flmul@a+3)^0,c
  1598  004C4C  EC19  F017         	call	___flmul	;wreg free
  1599  004C50  C02A  F13E         	movff	?___flmul,_I_rms
  1600  004C54  C02B  F13F         	movff	?___flmul+1,_I_rms+1
  1601  004C58  C02C  F140         	movff	?___flmul+2,_I_rms+2
  1602  004C5C  C02D  F141         	movff	?___flmul+3,_I_rms+3
  1603  004C60                     
  1604                           ;main.c: 222:         snprintf(valor_string, 14, "%.3f Amp.\n\r", I_rms);
  1605  004C60  0ECA               	movlw	low _valor_string
  1606  004C62  0100               	movlb	0	; () banked
  1607  004C64  6FE1               	movwf	snprintf@s& (0+255),b
  1608  004C66  0E01               	movlw	high _valor_string
  1609  004C68  6FE2               	movwf	(snprintf@s+1)& (0+255),b
  1610  004C6A  0E00               	movlw	0
  1611  004C6C  6FE4               	movwf	(snprintf@n+1)& (0+255),b
  1612  004C6E  0E0E               	movlw	14
  1613  004C70  6FE3               	movwf	snprintf@n& (0+255),b
  1614  004C72  0E0B               	movlw	low STR_9
  1615  004C74  6FE5               	movwf	snprintf@fmt& (0+255),b
  1616  004C76  0E08               	movlw	high STR_9
  1617  004C78  6FE6               	movwf	(snprintf@fmt+1)& (0+255),b
  1618  004C7A  C13E  F0E7         	movff	_I_rms,?_snprintf+6
  1619  004C7E  C13F  F0E8         	movff	_I_rms+1,?_snprintf+7
  1620  004C82  C140  F0E9         	movff	_I_rms+2,?_snprintf+8
  1621  004C86  C141  F0EA         	movff	_I_rms+3,?_snprintf+9
  1622  004C8A  EC55  F02F         	call	_snprintf	;wreg free
  1623  004C8E                     
  1624                           ;main.c: 223:         EUSART1_Write_string(valor_string);
  1625  004C8E  0ECA               	movlw	low _valor_string
  1626  004C90  6E02               	movwf	EUSART1_Write_string@data^0,c
  1627  004C92  0E01               	movlw	high _valor_string
  1628  004C94  6E03               	movwf	(EUSART1_Write_string@data+1)^0,c
  1629  004C96  EC6D  F02F         	call	_EUSART1_Write_string	;wreg free
  1630  004C9A                     
  1631                           ;main.c: 225:         if(nrf2401_haydatos() == 1)
  1632  004C9A  ECBF  F02F         	call	_nrf2401_haydatos	;wreg free
  1633  004C9E  06E8               	decf	wreg,f,c
  1634  004CA0  A4D8               	btfss	status,2,c
  1635  004CA2  EF55  F026         	goto	u8041
  1636  004CA6  EF57  F026         	goto	u8040
  1637  004CAA                     u8041:
  1638  004CAA  EF71  F026         	goto	l6560
  1639  004CAE                     u8040:
  1640  004CAE                     
  1641                           ;main.c: 226:         {;main.c: 227:             dato_serial = nrf2401_recibe();
  1642  004CAE  ECEA  F02F         	call	_nrf2401_recibe	;wreg free
  1643  004CB2  0100               	movlb	0	; () banked
  1644  004CB4  6FFC               	movwf	_dato_serial& (0+255),b
  1645  004CB6                     
  1646                           ; BSR set to: 0
  1647                           ;main.c: 228:             if (dato_serial == 1)
  1648  004CB6  05FC               	decf	_dato_serial& (0+255),w,b
  1649  004CB8  A4D8               	btfss	status,2,c
  1650  004CBA  EF61  F026         	goto	u8051
  1651  004CBE  EF63  F026         	goto	u8050
  1652  004CC2                     u8051:
  1653  004CC2  EF67  F026         	goto	l6556
  1654  004CC6                     u8050:
  1655  004CC6                     
  1656                           ; BSR set to: 0
  1657                           ;main.c: 229:             {;main.c: 230:                 on = 1;
  1658  004CC6  805F               	bsf	(_on/(0+8))^0,_on& (0+7),c
  1659                           
  1660                           ;main.c: 231:                 LATA5 = on;
  1661  004CC8  8A89               	bsf	3977,5,c	;volatile
  1662                           
  1663                           ;main.c: 232:             }
  1664  004CCA  EF71  F026         	goto	l6560
  1665  004CCE                     l6556:
  1666                           
  1667                           ; BSR set to: 0
  1668  004CCE  51FC               	movf	_dato_serial& (0+255),w,b
  1669  004CD0  A4D8               	btfss	status,2,c
  1670  004CD2  EF6D  F026         	goto	u8061
  1671  004CD6  EF6F  F026         	goto	u8060
  1672  004CDA                     u8061:
  1673  004CDA  EF71  F026         	goto	l6560
  1674  004CDE                     u8060:
  1675  004CDE                     
  1676                           ; BSR set to: 0
  1677                           ;main.c: 234:             {;main.c: 235:                 on = 0;
  1678  004CDE  905F               	bcf	(_on/(0+8))^0,_on& (0+7),c
  1679                           
  1680                           ;main.c: 236:                 LATA5 = 0;
  1681  004CE0  9A89               	bcf	3977,5,c	;volatile
  1682  004CE2                     l6560:
  1683                           
  1684                           ;main.c: 240:         _delay((unsigned long)((100)*(48000000/4000.0)));
  1685  004CE2  0E07               	movlw	7
  1686  004CE4  0100               	movlb	0	; () banked
  1687  004CE6  6FEE               	movwf	(??_main+1)& (0+255),b
  1688  004CE8  0E17               	movlw	23
  1689  004CEA  6FED               	movwf	??_main& (0+255),b
  1690  004CEC  0E6A               	movlw	106
  1691  004CEE                     u8107:
  1692  004CEE  2EE8               	decfsz	wreg,f,c
  1693  004CF0  D7FE               	bra	u8107
  1694  004CF2  2FED               	decfsz	??_main& (0+255),f,b
  1695  004CF4  D7FC               	bra	u8107
  1696  004CF6  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1697  004CF8  D7FA               	bra	u8107
  1698  004CFA  F000               	nop	
  1699  004CFC  EF08  F026         	goto	l6540
  1700  004D00  EF00  F000         	goto	start
  1701  004D04                     __end_of_main:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function _spi_s_init *****************
  1705 ;; Defined at:
  1706 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		None
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1720 ;;      Params:         0       0       0       0       0       0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1724 ;;Total ram usage:        0 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text1
  1734  006006                     __ptext1:
  1735                           	callstack 0
  1736  006006                     _spi_s_init:
  1737                           	callstack 30
  1738  006006                     
  1739                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
  1740  006006  9294               	bcf	148,1,c	;volatile
  1741                           
  1742                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
  1743  006008  9493               	bcf	147,2,c	;volatile
  1744                           
  1745                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
  1746  00600A  9494               	bcf	148,2,c	;volatile
  1747                           
  1748                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
  1749  00600C  8693               	bsf	147,3,c	;volatile
  1750                           
  1751                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
  1752  00600E  9293               	bcf	147,1,c	;volatile
  1753                           
  1754                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
  1755  006010  8094               	bsf	148,0,c	;volatile
  1756                           
  1757                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
  1758  006012  948A               	bcf	138,2,c	;volatile
  1759                           
  1760                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
  1761  006014  948B               	bcf	139,2,c	;volatile
  1762                           
  1763                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
  1764  006016  928B               	bcf	139,1,c	;volatile
  1765                           
  1766                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
  1767  006018  928A               	bcf	138,1,c	;volatile
  1768  00601A  0012               	return		;funcret
  1769  00601C                     __end_of_spi_s_init:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _snprintf *****************
  1773 ;; Defined at:
  1774 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\snprintf.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  s               2  129[BANK0 ] PTR unsigned char 
  1777 ;;		 -> valor_string(28), 
  1778 ;;  n               2  131[BANK0 ] unsigned int 
  1779 ;;  fmt             2  133[BANK0 ] PTR const unsigned char 
  1780 ;;		 -> STR_9(12), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  ap              2  139[BANK0 ] PTR void [1]
  1783 ;;		 -> ?_snprintf(2), 
  1784 ;;  ret             2    0        int 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2  129[BANK0 ] int 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1794 ;;      Params:         0      10       0       0       0       0       0       0       0
  1795 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1797 ;;      Totals:         0      12       0       0       0       0       0       0       0
  1798 ;;Total ram usage:       12 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 9
  1801 ;; This function calls:
  1802 ;;		_vsnprintf
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text2
  1809  005EAA                     __ptext2:
  1810                           	callstack 0
  1811  005EAA                     _snprintf:
  1812                           	callstack 21
  1813  005EAA  0EE7               	movlw	low (?_snprintf+6)
  1814  005EAC  0100               	movlb	0	; () banked
  1815  005EAE  6FEB               	movwf	snprintf@ap& (0+255),b
  1816  005EB0  0E00               	movlw	high (?_snprintf+6)
  1817  005EB2  6FEC               	movwf	(snprintf@ap+1)& (0+255),b
  1818  005EB4                     
  1819                           ; BSR set to: 0
  1820  005EB4  C0E1  F0CA         	movff	snprintf@s,vsnprintf@s
  1821  005EB8  C0E2  F0CB         	movff	snprintf@s+1,vsnprintf@s+1
  1822  005EBC  C0E3  F0CC         	movff	snprintf@n,vsnprintf@n
  1823  005EC0  C0E4  F0CD         	movff	snprintf@n+1,vsnprintf@n+1
  1824  005EC4  C0E5  F0CE         	movff	snprintf@fmt,vsnprintf@fmt
  1825  005EC8  C0E6  F0CF         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  1826  005ECC  0EEB               	movlw	low snprintf@ap
  1827  005ECE  6FD0               	movwf	vsnprintf@ap& (0+255),b
  1828  005ED0  0E00               	movlw	high snprintf@ap
  1829  005ED2  6FD1               	movwf	(vsnprintf@ap+1)& (0+255),b
  1830  005ED4  EC82  F026         	call	_vsnprintf	;wreg free
  1831  005ED8  0012               	return		;funcret
  1832  005EDA                     __end_of_snprintf:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _vsnprintf *****************
  1836 ;; Defined at:
  1837 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_vsnprintf.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  s               2  106[BANK0 ] PTR unsigned char 
  1840 ;;		 -> valor_string(28), 
  1841 ;;  n               2  108[BANK0 ] unsigned int 
  1842 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  1843 ;;		 -> STR_9(12), 
  1844 ;;  ap              2  112[BANK0 ] PTR PTR void 
  1845 ;;		 -> snprintf@ap(2), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  f               6  123[BANK0 ] struct _IO_FILE
  1848 ;;  cnt             2  121[BANK0 ] int 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  2  106[BANK0 ] int 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1858 ;;      Params:         0       8       0       0       0       0       0       0       0
  1859 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1860 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1861 ;;      Totals:         0      23       0       0       0       0       0       0       0
  1862 ;;Total ram usage:       23 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 8
  1865 ;; This function calls:
  1866 ;;		_vfprintf
  1867 ;; This function is called by:
  1868 ;;		_snprintf
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text3
  1873  004D04                     __ptext3:
  1874                           	callstack 0
  1875  004D04                     _vsnprintf:
  1876                           	callstack 21
  1877  004D04  0E80               	movlw	128
  1878  004D06  0100               	movlb	0	; () banked
  1879  004D08  5DCD               	subwf	(vsnprintf@n+1)& (0+255),w,b
  1880  004D0A  A0D8               	btfss	status,0,c
  1881  004D0C  EF8A  F026         	goto	u7811
  1882  004D10  EF8C  F026         	goto	u7810
  1883  004D14                     u7811:
  1884  004D14  EF96  F026         	goto	l6302
  1885  004D18                     u7810:
  1886  004D18                     
  1887                           ; BSR set to: 0
  1888  004D18  0E00               	movlw	0
  1889  004D1A  0101               	movlb	1	; () banked
  1890  004D1C  6F53               	movwf	(_errno+1)& (0+255),b
  1891  004D1E  0E4B               	movlw	75
  1892  004D20  6F52               	movwf	_errno& (0+255),b
  1893  004D22                     
  1894                           ; BSR set to: 1
  1895  004D22  0100               	movlb	0	; () banked
  1896  004D24  69CA               	setf	?_vsnprintf& (0+255),b
  1897  004D26  69CB               	setf	(?_vsnprintf+1)& (0+255),b
  1898  004D28  EF0F  F027         	goto	l1075
  1899  004D2C                     l6302:
  1900                           
  1901                           ; BSR set to: 0
  1902  004D2C  C0CA  F0DB         	movff	vsnprintf@s,vsnprintf@f
  1903  004D30  C0CB  F0DC         	movff	vsnprintf@s+1,vsnprintf@f+1
  1904  004D34  51CD               	movf	(vsnprintf@n+1)& (0+255),w,b
  1905  004D36  E109               	bnz	u7820
  1906  004D38  0E02               	movlw	2
  1907  004D3A  5DCC               	subwf	vsnprintf@n& (0+255),w,b
  1908  004D3C  A0D8               	btfss	status,0,c
  1909  004D3E  EFA3  F026         	goto	u7821
  1910  004D42  EFA5  F026         	goto	u7820
  1911  004D46                     u7821:
  1912  004D46  EFB1  F026         	goto	l6308
  1913  004D4A                     u7820:
  1914  004D4A                     
  1915                           ; BSR set to: 0
  1916  004D4A  0EFF               	movlw	255
  1917  004D4C  25CC               	addwf	vsnprintf@n& (0+255),w,b
  1918  004D4E  6FDF               	movwf	(vsnprintf@f+4)& (0+255),b
  1919  004D50  0EFF               	movlw	255
  1920  004D52  21CD               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  1921  004D54  6FE0               	movwf	(vsnprintf@f+5)& (0+255),b
  1922  004D56                     
  1923                           ; BSR set to: 0
  1924  004D56  0E00               	movlw	0
  1925  004D58  6FDE               	movwf	(vsnprintf@f+3)& (0+255),b
  1926  004D5A  0E00               	movlw	0
  1927  004D5C  6FDD               	movwf	(vsnprintf@f+2)& (0+255),b
  1928  004D5E  EFB9  F026         	goto	l6310
  1929  004D62                     l6308:
  1930                           
  1931                           ; BSR set to: 0
  1932  004D62  0E00               	movlw	0
  1933  004D64  6FE0               	movwf	(vsnprintf@f+5)& (0+255),b
  1934  004D66  0E01               	movlw	1
  1935  004D68  6FDF               	movwf	(vsnprintf@f+4)& (0+255),b
  1936  004D6A  0E00               	movlw	0
  1937  004D6C  6FDE               	movwf	(vsnprintf@f+3)& (0+255),b
  1938  004D6E  0E01               	movlw	1
  1939  004D70  6FDD               	movwf	(vsnprintf@f+2)& (0+255),b
  1940  004D72                     l6310:
  1941                           
  1942                           ; BSR set to: 0
  1943  004D72  0EDB               	movlw	low vsnprintf@f
  1944  004D74  6FC2               	movwf	vfprintf@fp& (0+255),b
  1945  004D76  0E00               	movlw	high vsnprintf@f
  1946  004D78  6FC3               	movwf	(vfprintf@fp+1)& (0+255),b
  1947  004D7A  C0CE  F0C4         	movff	vsnprintf@fmt,vfprintf@fmt
  1948  004D7E  C0CF  F0C5         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  1949  004D82  C0D0  F0C6         	movff	vsnprintf@ap,vfprintf@ap
  1950  004D86  C0D1  F0C7         	movff	vsnprintf@ap+1,vfprintf@ap+1
  1951  004D8A  EC82  F02C         	call	_vfprintf	;wreg free
  1952  004D8E  C0C2  F0D9         	movff	?_vfprintf,vsnprintf@cnt
  1953  004D92  C0C3  F0DA         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1954  004D96  0100               	movlb	0	; () banked
  1955  004D98  51CC               	movf	vsnprintf@n& (0+255),w,b
  1956  004D9A  11CD               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  1957  004D9C  B4D8               	btfsc	status,2,c
  1958  004D9E  EFD3  F026         	goto	u7831
  1959  004DA2  EFD5  F026         	goto	u7830
  1960  004DA6                     u7831:
  1961  004DA6  EF0B  F027         	goto	l6322
  1962  004DAA                     u7830:
  1963  004DAA                     
  1964                           ; BSR set to: 0
  1965  004DAA  BFDA               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1966  004DAC  EFDA  F026         	goto	u7841
  1967  004DB0  EFDC  F026         	goto	u7840
  1968  004DB4                     u7841:
  1969  004DB4  EF0B  F027         	goto	l6322
  1970  004DB8                     u7840:
  1971  004DB8                     
  1972                           ; BSR set to: 0
  1973  004DB8  0EFF               	movlw	255
  1974  004DBA  6FD2               	movwf	??_vsnprintf& (0+255),b
  1975  004DBC  0EFF               	movlw	255
  1976  004DBE  6FD3               	movwf	(??_vsnprintf+1)& (0+255),b
  1977  004DC0  C0CC  F0D4         	movff	vsnprintf@n,??_vsnprintf+2
  1978  004DC4  C0CD  F0D5         	movff	vsnprintf@n+1,??_vsnprintf+3
  1979  004DC8  51D2               	movf	??_vsnprintf& (0+255),w,b
  1980  004DCA  27D4               	addwf	(??_vsnprintf+2)& (0+255),f,b
  1981  004DCC  51D3               	movf	(??_vsnprintf+1)& (0+255),w,b
  1982  004DCE  23D5               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  1983  004DD0  51D4               	movf	(??_vsnprintf+2)& (0+255),w,b
  1984  004DD2  5DD9               	subwf	vsnprintf@cnt& (0+255),w,b
  1985  004DD4  51DA               	movf	(vsnprintf@cnt+1)& (0+255),w,b
  1986  004DD6  0A80               	xorlw	128
  1987  004DD8  6FD6               	movwf	(??_vsnprintf+4)& (0+255),b
  1988  004DDA  51D5               	movf	(??_vsnprintf+3)& (0+255),w,b
  1989  004DDC  0A80               	xorlw	128
  1990  004DDE  59D6               	subwfb	(??_vsnprintf+4)& (0+255),w,b
  1991  004DE0  A0D8               	btfss	status,0,c
  1992  004DE2  EFF5  F026         	goto	u7851
  1993  004DE6  EFF7  F026         	goto	u7850
  1994  004DEA                     u7851:
  1995  004DEA  EFFF  F026         	goto	l1080
  1996  004DEE                     u7850:
  1997  004DEE                     
  1998                           ; BSR set to: 0
  1999  004DEE  0EFF               	movlw	255
  2000  004DF0  25CC               	addwf	vsnprintf@n& (0+255),w,b
  2001  004DF2  6FD7               	movwf	_vsnprintf$1403& (0+255),b
  2002  004DF4  0EFF               	movlw	255
  2003  004DF6  21CD               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  2004  004DF8  6FD8               	movwf	(_vsnprintf$1403+1)& (0+255),b
  2005  004DFA  EF03  F027         	goto	l6320
  2006  004DFE                     l1080:
  2007                           
  2008                           ; BSR set to: 0
  2009  004DFE  C0D9  F0D7         	movff	vsnprintf@cnt,_vsnprintf$1403
  2010  004E02  C0DA  F0D8         	movff	vsnprintf@cnt+1,_vsnprintf$1403+1
  2011  004E06                     l6320:
  2012                           
  2013                           ; BSR set to: 0
  2014  004E06  51D7               	movf	_vsnprintf$1403& (0+255),w,b
  2015  004E08  25CA               	addwf	vsnprintf@s& (0+255),w,b
  2016  004E0A  6ED9               	movwf	fsr2l,c
  2017  004E0C  51D8               	movf	(_vsnprintf$1403+1)& (0+255),w,b
  2018  004E0E  21CB               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  2019  004E10  6EDA               	movwf	fsr2h,c
  2020  004E12  0E00               	movlw	0
  2021  004E14  6EDF               	movwf	indf2,c
  2022  004E16                     l6322:
  2023                           
  2024                           ; BSR set to: 0
  2025  004E16  C0D9  F0CA         	movff	vsnprintf@cnt,?_vsnprintf
  2026  004E1A  C0DA  F0CB         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  2027  004E1E                     l1075:
  2028                           
  2029                           ; BSR set to: 0
  2030  004E1E  0012               	return		;funcret
  2031  004E20                     __end_of_vsnprintf:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _vfprintf *****************
  2035 ;; Defined at:
  2036 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  fp              2   98[BANK0 ] PTR struct _IO_FILE
  2039 ;;		 -> vsnprintf@f(6), 
  2040 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  2041 ;;		 -> STR_9(12), 
  2042 ;;  ap              2  102[BANK0 ] PTR PTR void 
  2043 ;;		 -> snprintf@ap(2), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  cfmt            2  104[BANK0 ] PTR unsigned char 
  2046 ;;		 -> STR_9(12), 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  2   98[BANK0 ] int 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2056 ;;      Params:         0       6       0       0       0       0       0       0       0
  2057 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2059 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2060 ;;Total ram usage:        8 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 7
  2063 ;; This function calls:
  2064 ;;		_vfpfcnvrt
  2065 ;; This function is called by:
  2066 ;;		_vsnprintf
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text4
  2071  005904                     __ptext4:
  2072                           	callstack 0
  2073  005904                     _vfprintf:
  2074                           	callstack 21
  2075  005904                     
  2076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2077  005904  C0C4  F0C8         	movff	vfprintf@fmt,vfprintf@cfmt
  2078  005908  C0C5  F0C9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2079  00590C                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2081  00590C  0E00               	movlw	0
  2082  00590E  0100               	movlb	0	; () banked
  2083  005910  6FF0               	movwf	(_nout+1)& (0+255),b
  2084  005912  0E00               	movlw	0
  2085  005914  6FEF               	movwf	_nout& (0+255),b
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2088  005916  EFA0  F02C         	goto	l6190
  2089  00591A                     l6188:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2093  00591A  C0C2  F098         	movff	vfprintf@fp,vfpfcnvrt@fp
  2094  00591E  C0C3  F099         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2095  005922  0EC8               	movlw	low vfprintf@cfmt
  2096  005924  6F9A               	movwf	vfpfcnvrt@fmt& (0+255),b
  2097  005926  0E00               	movlw	high vfprintf@cfmt
  2098  005928  6F9B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2099  00592A  C0C6  F09C         	movff	vfprintf@ap,vfpfcnvrt@ap
  2100  00592E  C0C7  F09D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2101  005932  EC36  F004         	call	_vfpfcnvrt	;wreg free
  2102  005936  0100               	movlb	0	; () banked
  2103  005938  5198               	movf	?_vfpfcnvrt& (0+255),w,b
  2104  00593A  27EF               	addwf	_nout& (0+255),f,b
  2105  00593C  5199               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2106  00593E  23F0               	addwfc	(_nout+1)& (0+255),f,b
  2107  005940                     l6190:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2111  005940  C0C8  FFF6         	movff	vfprintf@cfmt,tblptrl
  2112  005944  C0C9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2113  005948                     	if	0	;tblptru may be non-zero
  2114  005948                     	endif
  2115  005948                     	if	0	;tblptru may be non-zero
  2116  005948                     	endif
  2117  005948  0008               	tblrd		*
  2118  00594A  50F5               	movf	tablat,w,c
  2119  00594C  0900               	iorlw	0
  2120  00594E  A4D8               	btfss	status,2,c
  2121  005950  EFAC  F02C         	goto	u7671
  2122  005954  EFAE  F02C         	goto	u7670
  2123  005958                     u7671:
  2124  005958  EF8D  F02C         	goto	l6188
  2125  00595C                     u7670:
  2126  00595C                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2129  00595C  C0EF  F0C2         	movff	_nout,?_vfprintf
  2130  005960  C0F0  F0C3         	movff	_nout+1,?_vfprintf+1
  2131  005964                     
  2132                           ; BSR set to: 0
  2133  005964  0012               	return		;funcret
  2134  005966                     __end_of_vfprintf:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _vfpfcnvrt *****************
  2138 ;; Defined at:
  2139 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2142 ;;		 -> vsnprintf@f(6), 
  2143 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  2144 ;;		 -> vfprintf@cfmt(2), 
  2145 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2146 ;;		 -> snprintf@ap(2), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  llu             8   90[BANK0 ] unsigned long long 
  2149 ;;  ll              8   79[BANK0 ] long long 
  2150 ;;  f               4   72[BANK0 ] long long 
  2151 ;;  ct              3   76[BANK0 ] unsigned char [3]
  2152 ;;  vp              2   87[BANK0 ] PTR void 
  2153 ;;		 -> ?_snprintf(2), 
  2154 ;;  done            2   64[BANK0 ] int 
  2155 ;;  cp              2   62[BANK0 ] PTR unsigned char 
  2156 ;;		 -> ?_snprintf(2), 
  2157 ;;  i               2    0        int 
  2158 ;;  c               1   89[BANK0 ] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2   56[BANK0 ] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         0       6       0       0       0       0       0       0       0
  2169 ;;      Locals:         0      36       0       0       0       0       0       0       0
  2170 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2171 ;;      Totals:         4      42       0       0       0       0       0       0       0
  2172 ;;Total ram usage:       46 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 6
  2175 ;; This function calls:
  2176 ;;		_atoi
  2177 ;;		_ctoa
  2178 ;;		_dtoa
  2179 ;;		_efgtoa
  2180 ;;		_fputc
  2181 ;;		_isdigit
  2182 ;;		_isupper
  2183 ;;		_otoa
  2184 ;;		_stoa
  2185 ;;		_strncmp
  2186 ;;		_tolower
  2187 ;;		_utoa
  2188 ;;		_xtoa
  2189 ;; This function is called by:
  2190 ;;		_vfprintf
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text5
  2195  00086C                     __ptext5:
  2196                           	callstack 0
  2197  00086C                     _vfpfcnvrt:
  2198                           	callstack 21
  2199  00086C                     
  2200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2201  00086C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2202  000870  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2203  000874  CFDE FFF6          	movff	postinc2,tblptrl
  2204  000878  CFDD FFF7          	movff	postdec2,tblptrh
  2205  00087C                     	if	0	;tblptru may be non-zero
  2206  00087C                     	endif
  2207  00087C                     	if	0	;tblptru may be non-zero
  2208  00087C                     	endif
  2209  00087C  0008               	tblrd		*
  2210  00087E  50F5               	movf	tablat,w,c
  2211  000880  0A25               	xorlw	37
  2212  000882  A4D8               	btfss	status,2,c
  2213  000884  EF46  F004         	goto	u7151
  2214  000888  EF48  F004         	goto	u7150
  2215  00088C                     u7151:
  2216  00088C  EF71  F00E         	goto	l6134
  2217  000890                     u7150:
  2218  000890                     
  2219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2220  000890  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2221  000894  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2222  000898  2ADE               	incf	postinc2,f,c
  2223  00089A  0E00               	movlw	0
  2224  00089C  22DD               	addwfc	postdec2,f,c
  2225  00089E                     
  2226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2227  00089E  0E00               	movlw	0
  2228  0008A0  0100               	movlb	0	; () banked
  2229  0008A2  6FF2               	movwf	(_width+1)& (0+255),b
  2230  0008A4  0E00               	movlw	0
  2231  0008A6  6FF1               	movwf	_width& (0+255),b
  2232  0008A8  C0F1  F0F5         	movff	_width,_flags
  2233  0008AC  C0F2  F0F6         	movff	_width+1,_flags+1
  2234  0008B0                     
  2235                           ; BSR set to: 0
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2237  0008B0  69F3               	setf	_prec& (0+255),b
  2238  0008B2  69F4               	setf	(_prec+1)& (0+255),b
  2239  0008B4                     
  2240                           ; BSR set to: 0
  2241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2242  0008B4  0E00               	movlw	0
  2243  0008B6  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2244  0008B8  0E00               	movlw	0
  2245  0008BA  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2248  0008BC  EFA6  F004         	goto	l5814
  2249  0008C0                     l5788:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2253  0008C0  81F5               	bsf	_flags& (0+255),0,b
  2254  0008C2                     l5790:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2258  0008C2  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  0008C6  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  0008CA  2ADE               	incf	postinc2,f,c
  2261  0008CC  0E00               	movlw	0
  2262  0008CE  22DD               	addwfc	postdec2,f,c
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2265  0008D0  EFA6  F004         	goto	l5814
  2266  0008D4                     l5792:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2270  0008D4  83F5               	bsf	_flags& (0+255),1,b
  2271  0008D6  EF61  F004         	goto	l5790
  2272  0008DA                     l5796:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2276  0008DA  85F5               	bsf	_flags& (0+255),2,b
  2277  0008DC  EF61  F004         	goto	l5790
  2278  0008E0                     l5800:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2282  0008E0  87F5               	bsf	_flags& (0+255),3,b
  2283  0008E2  EF61  F004         	goto	l5790
  2284  0008E6                     l5804:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2288  0008E6  89F5               	bsf	_flags& (0+255),4,b
  2289  0008E8  EF61  F004         	goto	l5790
  2290  0008EC                     l5808:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2294  0008EC  0E00               	movlw	0
  2295  0008EE  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2296  0008F0  0E01               	movlw	1
  2297  0008F2  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2300  0008F4  EFA6  F004         	goto	l5814
  2301  0008F8                     l5812:
  2302                           
  2303                           ; BSR set to: 0
  2304  0008F8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2305  0008FC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2306  000900  CFDE FFF6          	movff	postinc2,tblptrl
  2307  000904  CFDD FFF7          	movff	postdec2,tblptrh
  2308  000908                     	if	0	;tblptru may be non-zero
  2309  000908                     	endif
  2310  000908                     	if	0	;tblptru may be non-zero
  2311  000908                     	endif
  2312  000908  0008               	tblrd		*
  2313  00090A  50F5               	movf	tablat,w,c
  2314  00090C  6E5B               	movwf	??_vfpfcnvrt^0,c
  2315  00090E  6A5C               	clrf	(??_vfpfcnvrt+1)^0,c
  2316                           
  2317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2318                           ; Switch size 1, requested type "simple"
  2319                           ; Number of cases is 1, Range of values is 0 to 0
  2320                           ; switch strategies available:
  2321                           ; Name         Instructions Cycles
  2322                           ; simple_byte            4     3 (average)
  2323                           ;	Chosen strategy is simple_byte
  2324  000910  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2325  000912  0A00               	xorlw	0	; case 0
  2326  000914  B4D8               	btfsc	status,2,c
  2327  000916  EF8F  F004         	goto	l6624
  2328  00091A  EF76  F004         	goto	l5808
  2329  00091E                     l6624:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 5, Range of values is 32 to 48
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte           16     9 (average)
  2337                           ;	Chosen strategy is simple_byte
  2338  00091E  505B               	movf	??_vfpfcnvrt^0,w,c
  2339  000920  0A20               	xorlw	32	; case 32
  2340  000922  B4D8               	btfsc	status,2,c
  2341  000924  EF70  F004         	goto	l5800
  2342  000928  0A03               	xorlw	3	; case 35
  2343  00092A  B4D8               	btfsc	status,2,c
  2344  00092C  EF73  F004         	goto	l5804
  2345  000930  0A08               	xorlw	8	; case 43
  2346  000932  B4D8               	btfsc	status,2,c
  2347  000934  EF6D  F004         	goto	l5796
  2348  000938  0A06               	xorlw	6	; case 45
  2349  00093A  B4D8               	btfsc	status,2,c
  2350  00093C  EF60  F004         	goto	l5788
  2351  000940  0A1D               	xorlw	29	; case 48
  2352  000942  B4D8               	btfsc	status,2,c
  2353  000944  EF6A  F004         	goto	l5792
  2354  000948  EF76  F004         	goto	l5808
  2355  00094C                     l5814:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2359  00094C  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  2360  00094E  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2361  000950  B4D8               	btfsc	status,2,c
  2362  000952  EFAD  F004         	goto	u7161
  2363  000956  EFAF  F004         	goto	u7160
  2364  00095A                     u7161:
  2365  00095A  EF7C  F004         	goto	l5812
  2366  00095E                     u7160:
  2367  00095E                     
  2368                           ; BSR set to: 0
  2369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2370  00095E  A1F5               	btfss	_flags& (0+255),0,b
  2371  000960  EFB4  F004         	goto	u7171
  2372  000964  EFB6  F004         	goto	u7170
  2373  000968                     u7171:
  2374  000968  EFB7  F004         	goto	l5818
  2375  00096C                     u7170:
  2376  00096C                     
  2377                           ; BSR set to: 0
  2378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2379  00096C  93F5               	bcf	_flags& (0+255),1,b
  2380  00096E                     l5818:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2384  00096E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2385  000972  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2386  000976  CFDE FFF6          	movff	postinc2,tblptrl
  2387  00097A  CFDD FFF7          	movff	postdec2,tblptrh
  2388  00097E                     	if	0	;tblptru may be non-zero
  2389  00097E                     	endif
  2390  00097E                     	if	0	;tblptru may be non-zero
  2391  00097E                     	endif
  2392  00097E  0008               	tblrd		*
  2393  000980  50F5               	movf	tablat,w,c
  2394  000982  0A2A               	xorlw	42
  2395  000984  A4D8               	btfss	status,2,c
  2396  000986  EFC7  F004         	goto	u7181
  2397  00098A  EFC9  F004         	goto	u7180
  2398  00098E                     u7181:
  2399  00098E  EFF2  F004         	goto	l5826
  2400  000992                     u7180:
  2401  000992                     
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2404  000992  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2405  000996  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2406  00099A  2ADE               	incf	postinc2,f,c
  2407  00099C  0E00               	movlw	0
  2408  00099E  22DD               	addwfc	postdec2,f,c
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2411  0009A0  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2412  0009A4  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2413  0009A8  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  2414  0009AC  0E02               	movlw	2
  2415  0009AE  26DE               	addwf	postinc2,f,c
  2416  0009B0  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  2417  0009B4  0E00               	movlw	0
  2418  0009B6  22DD               	addwfc	postdec2,f,c
  2419  0009B8  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2420  0009BC  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2421  0009C0  CFDE F0F1          	movff	postinc2,_width
  2422  0009C4  CFDD F0F2          	movff	postdec2,_width+1
  2423  0009C8                     
  2424                           ; BSR set to: 0
  2425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2426  0009C8  BFF2               	btfsc	(_width+1)& (0+255),7,b
  2427  0009CA  EFEB  F004         	goto	u7190
  2428  0009CE  EFE9  F004         	goto	u7191
  2429  0009D2                     u7191:
  2430  0009D2  EF36  F005         	goto	l5836
  2431  0009D6                     u7190:
  2432  0009D6                     
  2433                           ; BSR set to: 0
  2434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2435  0009D6  81F5               	bsf	_flags& (0+255),0,b
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2438  0009D8  6DF1               	negf	_width& (0+255),b
  2439  0009DA  1FF2               	comf	(_width+1)& (0+255),f,b
  2440  0009DC  B0D8               	btfsc	status,0,c
  2441  0009DE  2BF2               	incf	(_width+1)& (0+255),f,b
  2442  0009E0  EF36  F005         	goto	l5836
  2443  0009E4                     l5826:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2447  0009E4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2448  0009E8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2449  0009EC  CFDE F008          	movff	postinc2,atoi@s
  2450  0009F0  CFDD F009          	movff	postdec2,atoi@s+1
  2451  0009F4  ECEA  F022         	call	_atoi	;wreg free
  2452  0009F8  C008  F0F1         	movff	?_atoi,_width
  2453  0009FC  C009  F0F2         	movff	?_atoi+1,_width+1
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2456  000A00  EF09  F005         	goto	l5830
  2457  000A04                     l5828:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2461  000A04  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2462  000A08  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2463  000A0C  2ADE               	incf	postinc2,f,c
  2464  000A0E  0E00               	movlw	0
  2465  000A10  22DD               	addwfc	postdec2,f,c
  2466  000A12                     l5830:
  2467  000A12  0ED0               	movlw	208
  2468  000A14  6E5B               	movwf	??_vfpfcnvrt^0,c
  2469  000A16  0EFF               	movlw	255
  2470  000A18  6E5C               	movwf	(??_vfpfcnvrt+1)^0,c
  2471  000A1A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  000A1E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  000A22  CFDE FFF6          	movff	postinc2,tblptrl
  2474  000A26  CFDD FFF7          	movff	postdec2,tblptrh
  2475  000A2A                     	if	0	;tblptru may be non-zero
  2476  000A2A                     	endif
  2477  000A2A                     	if	0	;tblptru may be non-zero
  2478  000A2A                     	endif
  2479  000A2A  0008               	tblrd		*
  2480  000A2C  50F5               	movf	tablat,w,c
  2481  000A2E  6E5D               	movwf	(??_vfpfcnvrt+2)^0,c
  2482  000A30  6A5E               	clrf	(??_vfpfcnvrt+3)^0,c
  2483  000A32  505B               	movf	??_vfpfcnvrt^0,w,c
  2484  000A34  265D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2485  000A36  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2486  000A38  225E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2487  000A3A  505E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2488  000A3C  E10A               	bnz	u7200
  2489  000A3E  0E0A               	movlw	10
  2490  000A40  5C5D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2491  000A42  A0D8               	btfss	status,0,c
  2492  000A44  EF26  F005         	goto	u7201
  2493  000A48  EF29  F005         	goto	u7200
  2494  000A4C                     u7201:
  2495  000A4C  0E01               	movlw	1
  2496  000A4E  EF2A  F005         	goto	u7210
  2497  000A52                     u7200:
  2498  000A52  0E00               	movlw	0
  2499  000A54                     u7210:
  2500  000A54  0100               	movlb	0	; () banked
  2501  000A56  6FA2               	movwf	_vfpfcnvrt$1594& (0+255),b
  2502  000A58  6BA3               	clrf	(_vfpfcnvrt$1594+1)& (0+255),b
  2503  000A5A                     
  2504                           ; BSR set to: 0
  2505  000A5A  51A2               	movf	_vfpfcnvrt$1594& (0+255),w,b
  2506  000A5C  11A3               	iorwf	(_vfpfcnvrt$1594+1)& (0+255),w,b
  2507  000A5E  A4D8               	btfss	status,2,c
  2508  000A60  EF34  F005         	goto	u7221
  2509  000A64  EF36  F005         	goto	u7220
  2510  000A68                     u7221:
  2511  000A68  EF02  F005         	goto	l5828
  2512  000A6C                     u7220:
  2513  000A6C                     l5836:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2517  000A6C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2518  000A70  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2519  000A74  CFDE FFF6          	movff	postinc2,tblptrl
  2520  000A78  CFDD FFF7          	movff	postdec2,tblptrh
  2521  000A7C                     	if	0	;tblptru may be non-zero
  2522  000A7C                     	endif
  2523  000A7C                     	if	0	;tblptru may be non-zero
  2524  000A7C                     	endif
  2525  000A7C  0008               	tblrd		*
  2526  000A7E  50F5               	movf	tablat,w,c
  2527  000A80  0A2E               	xorlw	46
  2528  000A82  A4D8               	btfss	status,2,c
  2529  000A84  EF46  F005         	goto	u7231
  2530  000A88  EF48  F005         	goto	u7230
  2531  000A8C                     u7231:
  2532  000A8C  EFC6  F005         	goto	l5856
  2533  000A90                     u7230:
  2534  000A90                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2537  000A90  0E00               	movlw	0
  2538  000A92  6FF4               	movwf	(_prec+1)& (0+255),b
  2539  000A94  0E00               	movlw	0
  2540  000A96  6FF3               	movwf	_prec& (0+255),b
  2541  000A98                     
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2544  000A98  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2545  000A9C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2546  000AA0  2ADE               	incf	postinc2,f,c
  2547  000AA2  0E00               	movlw	0
  2548  000AA4  22DD               	addwfc	postdec2,f,c
  2549  000AA6                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2552  000AA6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2553  000AAA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2554  000AAE  CFDE FFF6          	movff	postinc2,tblptrl
  2555  000AB2  CFDD FFF7          	movff	postdec2,tblptrh
  2556  000AB6                     	if	0	;tblptru may be non-zero
  2557  000AB6                     	endif
  2558  000AB6                     	if	0	;tblptru may be non-zero
  2559  000AB6                     	endif
  2560  000AB6  0008               	tblrd		*
  2561  000AB8  50F5               	movf	tablat,w,c
  2562  000ABA  0A2A               	xorlw	42
  2563  000ABC  A4D8               	btfss	status,2,c
  2564  000ABE  EF63  F005         	goto	u7241
  2565  000AC2  EF65  F005         	goto	u7240
  2566  000AC6                     u7241:
  2567  000AC6  EF82  F005         	goto	l5846
  2568  000ACA                     u7240:
  2569  000ACA                     
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2572  000ACA  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2573  000ACE  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2574  000AD2  2ADE               	incf	postinc2,f,c
  2575  000AD4  0E00               	movlw	0
  2576  000AD6  22DD               	addwfc	postdec2,f,c
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2579  000AD8  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2580  000ADC  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2581  000AE0  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  2582  000AE4  0E02               	movlw	2
  2583  000AE6  26DE               	addwf	postinc2,f,c
  2584  000AE8  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  2585  000AEC  0E00               	movlw	0
  2586  000AEE  22DD               	addwfc	postdec2,f,c
  2587  000AF0  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2588  000AF4  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2589  000AF8  CFDE F0F3          	movff	postinc2,_prec
  2590  000AFC  CFDD F0F4          	movff	postdec2,_prec+1
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2593  000B00  EFC6  F005         	goto	l5856
  2594  000B04                     l5846:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2598  000B04  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599  000B08  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600  000B0C  CFDE F008          	movff	postinc2,atoi@s
  2601  000B10  CFDD F009          	movff	postdec2,atoi@s+1
  2602  000B14  ECEA  F022         	call	_atoi	;wreg free
  2603  000B18  C008  F0F3         	movff	?_atoi,_prec
  2604  000B1C  C009  F0F4         	movff	?_atoi+1,_prec+1
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2607  000B20  EF99  F005         	goto	l5850
  2608  000B24                     l5848:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2612  000B24  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2613  000B28  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2614  000B2C  2ADE               	incf	postinc2,f,c
  2615  000B2E  0E00               	movlw	0
  2616  000B30  22DD               	addwfc	postdec2,f,c
  2617  000B32                     l5850:
  2618  000B32  0ED0               	movlw	208
  2619  000B34  6E5B               	movwf	??_vfpfcnvrt^0,c
  2620  000B36  0EFF               	movlw	255
  2621  000B38  6E5C               	movwf	(??_vfpfcnvrt+1)^0,c
  2622  000B3A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2623  000B3E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2624  000B42  CFDE FFF6          	movff	postinc2,tblptrl
  2625  000B46  CFDD FFF7          	movff	postdec2,tblptrh
  2626  000B4A                     	if	0	;tblptru may be non-zero
  2627  000B4A                     	endif
  2628  000B4A                     	if	0	;tblptru may be non-zero
  2629  000B4A                     	endif
  2630  000B4A  0008               	tblrd		*
  2631  000B4C  50F5               	movf	tablat,w,c
  2632  000B4E  6E5D               	movwf	(??_vfpfcnvrt+2)^0,c
  2633  000B50  6A5E               	clrf	(??_vfpfcnvrt+3)^0,c
  2634  000B52  505B               	movf	??_vfpfcnvrt^0,w,c
  2635  000B54  265D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2636  000B56  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2637  000B58  225E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2638  000B5A  505E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2639  000B5C  E10A               	bnz	u7250
  2640  000B5E  0E0A               	movlw	10
  2641  000B60  5C5D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2642  000B62  A0D8               	btfss	status,0,c
  2643  000B64  EFB6  F005         	goto	u7251
  2644  000B68  EFB9  F005         	goto	u7250
  2645  000B6C                     u7251:
  2646  000B6C  0E01               	movlw	1
  2647  000B6E  EFBA  F005         	goto	u7260
  2648  000B72                     u7250:
  2649  000B72  0E00               	movlw	0
  2650  000B74                     u7260:
  2651  000B74  0100               	movlb	0	; () banked
  2652  000B76  6FA4               	movwf	_vfpfcnvrt$1595& (0+255),b
  2653  000B78  6BA5               	clrf	(_vfpfcnvrt$1595+1)& (0+255),b
  2654  000B7A                     
  2655                           ; BSR set to: 0
  2656  000B7A  51A4               	movf	_vfpfcnvrt$1595& (0+255),w,b
  2657  000B7C  11A5               	iorwf	(_vfpfcnvrt$1595+1)& (0+255),w,b
  2658  000B7E  A4D8               	btfss	status,2,c
  2659  000B80  EFC4  F005         	goto	u7271
  2660  000B84  EFC6  F005         	goto	u7270
  2661  000B88                     u7271:
  2662  000B88  EF92  F005         	goto	l5848
  2663  000B8C                     u7270:
  2664  000B8C                     l5856:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2668  000B8C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2669  000B90  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2670  000B94  CFDE FFF6          	movff	postinc2,tblptrl
  2671  000B98  CFDD FFF7          	movff	postdec2,tblptrh
  2672  000B9C                     	if	0	;tblptru may be non-zero
  2673  000B9C                     	endif
  2674  000B9C                     	if	0	;tblptru may be non-zero
  2675  000B9C                     	endif
  2676  000B9C  0008               	tblrd		*
  2677  000B9E  50F5               	movf	tablat,w,c
  2678  000BA0  6E07               	movwf	tolower@c^0,c
  2679  000BA2  6A08               	clrf	(tolower@c+1)^0,c
  2680  000BA4  ECB3  F02C         	call	_tolower	;wreg free
  2681  000BA8  5007               	movf	?_tolower^0,w,c
  2682  000BAA  0100               	movlb	0	; () banked
  2683  000BAC  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  2684  000BAE                     
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2687  000BAE  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  2688  000BB0  B4D8               	btfsc	status,2,c
  2689  000BB2  EFDD  F005         	goto	u7281
  2690  000BB6  EFDF  F005         	goto	u7280
  2691  000BBA                     u7281:
  2692  000BBA  EF19  F006         	goto	l5866
  2693  000BBE                     u7280:
  2694  000BBE                     
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2697  000BBE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2698  000BC2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2699  000BC6  CFDE F05B          	movff	postinc2,??_vfpfcnvrt
  2700  000BCA  CFDD F05C          	movff	postdec2,??_vfpfcnvrt+1
  2701  000BCE  0E01               	movlw	1
  2702  000BD0  265B               	addwf	??_vfpfcnvrt^0,f,c
  2703  000BD2  0E00               	movlw	0
  2704  000BD4  225C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2705  000BD6  C05B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2706  000BDA  C05C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2707  000BDE                     	if	0	;tblptru may be non-zero
  2708  000BDE                     	endif
  2709  000BDE                     	if	0	;tblptru may be non-zero
  2710  000BDE                     	endif
  2711  000BDE  0008               	tblrd		*
  2712  000BE0  50F5               	movf	tablat,w,c
  2713  000BE2  6E07               	movwf	tolower@c^0,c
  2714  000BE4  6A08               	clrf	(tolower@c+1)^0,c
  2715  000BE6  ECB3  F02C         	call	_tolower	;wreg free
  2716  000BEA  5007               	movf	?_tolower^0,w,c
  2717  000BEC  0100               	movlb	0	; () banked
  2718  000BEE  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2719  000BF0                     
  2720                           ; BSR set to: 0
  2721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2722  000BF0  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2723  000BF2  B4D8               	btfsc	status,2,c
  2724  000BF4  EFFE  F005         	goto	u7291
  2725  000BF8  EF00  F006         	goto	u7290
  2726  000BFC                     u7291:
  2727  000BFC  EF19  F006         	goto	l5866
  2728  000C00                     u7290:
  2729  000C00                     
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2732  000C00  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2733  000C04  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2734  000C08  CFDE F05B          	movff	postinc2,??_vfpfcnvrt
  2735  000C0C  CFDD F05C          	movff	postdec2,??_vfpfcnvrt+1
  2736  000C10  0E02               	movlw	2
  2737  000C12  265B               	addwf	??_vfpfcnvrt^0,f,c
  2738  000C14  0E00               	movlw	0
  2739  000C16  225C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2740  000C18  C05B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2741  000C1C  C05C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2742  000C20                     	if	0	;tblptru may be non-zero
  2743  000C20                     	endif
  2744  000C20                     	if	0	;tblptru may be non-zero
  2745  000C20                     	endif
  2746  000C20  0008               	tblrd		*
  2747  000C22  50F5               	movf	tablat,w,c
  2748  000C24  6E07               	movwf	tolower@c^0,c
  2749  000C26  6A08               	clrf	(tolower@c+1)^0,c
  2750  000C28  ECB3  F02C         	call	_tolower	;wreg free
  2751  000C2C  5007               	movf	?_tolower^0,w,c
  2752  000C2E  0100               	movlb	0	; () banked
  2753  000C30  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2754  000C32                     l5866:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2758  000C32  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2759  000C36  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2760  000C3A  CFDE FFF6          	movff	postinc2,tblptrl
  2761  000C3E  CFDD FFF7          	movff	postdec2,tblptrh
  2762  000C42                     	if	0	;tblptru may be non-zero
  2763  000C42                     	endif
  2764  000C42                     	if	0	;tblptru may be non-zero
  2765  000C42                     	endif
  2766  000C42  0008               	tblrd		*
  2767  000C44  50F5               	movf	tablat,w,c
  2768  000C46  0A63               	xorlw	99
  2769  000C48  A4D8               	btfss	status,2,c
  2770  000C4A  EF29  F006         	goto	u7301
  2771  000C4E  EF2B  F006         	goto	u7300
  2772  000C52                     u7301:
  2773  000C52  EF52  F006         	goto	l5874
  2774  000C56                     u7300:
  2775  000C56                     
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2778  000C56  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2779  000C5A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2780  000C5E  2ADE               	incf	postinc2,f,c
  2781  000C60  0E00               	movlw	0
  2782  000C62  22DD               	addwfc	postdec2,f,c
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2785  000C64  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2786  000C68  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2787  000C6C  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  2788  000C70  0E02               	movlw	2
  2789  000C72  26DE               	addwf	postinc2,f,c
  2790  000C74  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  2791  000C78  0E00               	movlw	0
  2792  000C7A  22DD               	addwfc	postdec2,f,c
  2793  000C7C  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2794  000C80  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2795  000C84  50DF               	movf	indf2,w,c
  2796  000C86  6FB9               	movwf	vfpfcnvrt@c& (0+255),b
  2797  000C88                     
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2800  000C88  C098  F00C         	movff	vfpfcnvrt@fp,ctoa@fp
  2801  000C8C  C099  F00D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2802  000C90  C0B9  F00E         	movff	vfpfcnvrt@c,ctoa@c
  2803  000C94  EC99  F029         	call	_ctoa	;wreg free
  2804  000C98  C00C  F098         	movff	?_ctoa,?_vfpfcnvrt
  2805  000C9C  C00D  F099         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2806  000CA0  EF8C  F00E         	goto	l1392
  2807  000CA4                     l5874:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 824:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  2811  000CA4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2812  000CA8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2813  000CAC  CFDE F001          	movff	postinc2,strncmp@_l
  2814  000CB0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2815  000CB4  0E2F               	movlw	low STR_18
  2816  000CB6  6E03               	movwf	strncmp@_r^0,c
  2817  000CB8  0E08               	movlw	high STR_18
  2818  000CBA  6E04               	movwf	(strncmp@_r+1)^0,c
  2819  000CBC  0E00               	movlw	0
  2820  000CBE  6E06               	movwf	(strncmp@n+1)^0,c
  2821  000CC0  0E03               	movlw	3
  2822  000CC2  6E05               	movwf	strncmp@n^0,c
  2823  000CC4  EC10  F027         	call	_strncmp	;wreg free
  2824  000CC8  5001               	movf	?_strncmp^0,w,c
  2825  000CCA  1002               	iorwf	(?_strncmp+1)^0,w,c
  2826  000CCC  B4D8               	btfsc	status,2,c
  2827  000CCE  EF6B  F006         	goto	u7311
  2828  000CD2  EF6D  F006         	goto	u7310
  2829  000CD6                     u7311:
  2830  000CD6  EF88  F006         	goto	l5878
  2831  000CDA                     u7310:
  2832  000CDA  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2833  000CDE  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2834  000CE2  CFDE F001          	movff	postinc2,strncmp@_l
  2835  000CE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2836  000CEA  0E37               	movlw	low STR_22
  2837  000CEC  6E03               	movwf	strncmp@_r^0,c
  2838  000CEE  0E08               	movlw	high STR_22
  2839  000CF0  6E04               	movwf	(strncmp@_r+1)^0,c
  2840  000CF2  0E00               	movlw	0
  2841  000CF4  6E06               	movwf	(strncmp@n+1)^0,c
  2842  000CF6  0E03               	movlw	3
  2843  000CF8  6E05               	movwf	strncmp@n^0,c
  2844  000CFA  EC10  F027         	call	_strncmp	;wreg free
  2845  000CFE  5001               	movf	?_strncmp^0,w,c
  2846  000D00  1002               	iorwf	(?_strncmp+1)^0,w,c
  2847  000D02  A4D8               	btfss	status,2,c
  2848  000D04  EF86  F006         	goto	u7321
  2849  000D08  EF88  F006         	goto	u7320
  2850  000D0C                     u7321:
  2851  000D0C  EFC9  F006         	goto	l5884
  2852  000D10                     u7320:
  2853  000D10                     l5878:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 825: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 827:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  2856  000D10  0E03               	movlw	3
  2857  000D12  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2858  000D16  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2859  000D1A  26DE               	addwf	postinc2,f,c
  2860  000D1C  0E00               	movlw	0
  2861  000D1E  22DD               	addwfc	postdec2,f,c
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2864  000D20  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2865  000D24  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2866  000D28  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  2867  000D2C  0E02               	movlw	2
  2868  000D2E  26DE               	addwf	postinc2,f,c
  2869  000D30  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  2870  000D34  0E00               	movlw	0
  2871  000D36  22DD               	addwfc	postdec2,f,c
  2872  000D38  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2873  000D3C  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2874  000D40  50DF               	movf	indf2,w,c
  2875  000D42  0100               	movlb	0	; () banked
  2876  000D44  6FAF               	movwf	vfpfcnvrt@ll& (0+255),b
  2877  000D46  0E00               	movlw	0
  2878  000D48  BFAF               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  2879  000D4A  0EFF               	movlw	-1
  2880  000D4C  6FB0               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  2881  000D4E  6FB1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2882  000D50  6FB2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2883  000D52  6FB3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2884  000D54  6FB4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2885  000D56  6FB5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2886  000D58  6FB6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2887  000D5A                     l5880:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2891  000D5A  C098  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2892  000D5E  C099  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2893  000D62  C0AF  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2894  000D66  C0B0  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2895  000D6A  C0B1  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2896  000D6E  C0B2  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2897  000D72  C0B3  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2898  000D76  C0B4  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2899  000D7A  C0B5  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2900  000D7E  C0B6  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2901  000D82  ECFB  F01A         	call	_dtoa	;wreg free
  2902  000D86  C01E  F098         	movff	?_dtoa,?_vfpfcnvrt
  2903  000D8A  C01F  F099         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2904  000D8E  EF8C  F00E         	goto	l1392
  2905  000D92                     l5884:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 836:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  2908  000D92  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2909  000D96  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2910  000D9A  CFDE F001          	movff	postinc2,strncmp@_l
  2911  000D9E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2912  000DA2  0E30               	movlw	low (STR_18+1)
  2913  000DA4  6E03               	movwf	strncmp@_r^0,c
  2914  000DA6  0E08               	movlw	high (STR_18+1)
  2915  000DA8  6E04               	movwf	(strncmp@_r+1)^0,c
  2916  000DAA  0E00               	movlw	0
  2917  000DAC  6E06               	movwf	(strncmp@n+1)^0,c
  2918  000DAE  0E02               	movlw	2
  2919  000DB0  6E05               	movwf	strncmp@n^0,c
  2920  000DB2  EC10  F027         	call	_strncmp	;wreg free
  2921  000DB6  5001               	movf	?_strncmp^0,w,c
  2922  000DB8  1002               	iorwf	(?_strncmp+1)^0,w,c
  2923  000DBA  B4D8               	btfsc	status,2,c
  2924  000DBC  EFE2  F006         	goto	u7331
  2925  000DC0  EFE4  F006         	goto	u7330
  2926  000DC4                     u7331:
  2927  000DC4  EFFF  F006         	goto	l5888
  2928  000DC8                     u7330:
  2929  000DC8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  000DCC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  000DD0  CFDE F001          	movff	postinc2,strncmp@_l
  2932  000DD4  CFDD F002          	movff	postdec2,strncmp@_l+1
  2933  000DD8  0E38               	movlw	low (STR_22+1)
  2934  000DDA  6E03               	movwf	strncmp@_r^0,c
  2935  000DDC  0E08               	movlw	high (STR_22+1)
  2936  000DDE  6E04               	movwf	(strncmp@_r+1)^0,c
  2937  000DE0  0E00               	movlw	0
  2938  000DE2  6E06               	movwf	(strncmp@n+1)^0,c
  2939  000DE4  0E02               	movlw	2
  2940  000DE6  6E05               	movwf	strncmp@n^0,c
  2941  000DE8  EC10  F027         	call	_strncmp	;wreg free
  2942  000DEC  5001               	movf	?_strncmp^0,w,c
  2943  000DEE  1002               	iorwf	(?_strncmp+1)^0,w,c
  2944  000DF0  A4D8               	btfss	status,2,c
  2945  000DF2  EFFD  F006         	goto	u7341
  2946  000DF6  EFFF  F006         	goto	u7340
  2947  000DFA                     u7341:
  2948  000DFA  EF27  F007         	goto	l5894
  2949  000DFE                     u7340:
  2950  000DFE                     l5888:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 837: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 839:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  2953  000DFE  0E02               	movlw	2
  2954  000E00  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2955  000E04  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2956  000E08  26DE               	addwf	postinc2,f,c
  2957  000E0A  0E00               	movlw	0
  2958  000E0C  22DD               	addwfc	postdec2,f,c
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 840:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2961  000E0E  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2962  000E12  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2963  000E16  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  2964  000E1A  0E02               	movlw	2
  2965  000E1C  26DE               	addwf	postinc2,f,c
  2966  000E1E  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  2967  000E22  0E00               	movlw	0
  2968  000E24  22DD               	addwfc	postdec2,f,c
  2969  000E26  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2970  000E2A  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2971  000E2E  CFDE F0AF          	movff	postinc2,vfpfcnvrt@ll
  2972  000E32  CFDD F0B0          	movff	postdec2,vfpfcnvrt@ll+1
  2973  000E36  0100               	movlb	0	; () banked
  2974  000E38  0E00               	movlw	0
  2975  000E3A  BFB0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2976  000E3C  0EFF               	movlw	-1
  2977  000E3E  6FB1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2978  000E40  6FB2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2979  000E42  6FB3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2980  000E44  6FB4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2981  000E46  6FB5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2982  000E48  6FB6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2983  000E4A  EFAD  F006         	goto	l5880
  2984  000E4E                     l5894:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2987  000E4E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2988  000E52  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2989  000E56  CFDE FFF6          	movff	postinc2,tblptrl
  2990  000E5A  CFDD FFF7          	movff	postdec2,tblptrh
  2991  000E5E                     	if	0	;tblptru may be non-zero
  2992  000E5E                     	endif
  2993  000E5E                     	if	0	;tblptru may be non-zero
  2994  000E5E                     	endif
  2995  000E5E  0008               	tblrd		*
  2996  000E60  50F5               	movf	tablat,w,c
  2997  000E62  0A64               	xorlw	100
  2998  000E64  B4D8               	btfsc	status,2,c
  2999  000E66  EF37  F007         	goto	u7351
  3000  000E6A  EF39  F007         	goto	u7350
  3001  000E6E                     u7351:
  3002  000E6E  EF4B  F007         	goto	l5898
  3003  000E72                     u7350:
  3004  000E72  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3005  000E76  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3006  000E7A  CFDE FFF6          	movff	postinc2,tblptrl
  3007  000E7E  CFDD FFF7          	movff	postdec2,tblptrh
  3008  000E82                     	if	0	;tblptru may be non-zero
  3009  000E82                     	endif
  3010  000E82                     	if	0	;tblptru may be non-zero
  3011  000E82                     	endif
  3012  000E82  0008               	tblrd		*
  3013  000E84  50F5               	movf	tablat,w,c
  3014  000E86  0A69               	xorlw	105
  3015  000E88  A4D8               	btfss	status,2,c
  3016  000E8A  EF49  F007         	goto	u7361
  3017  000E8E  EF4B  F007         	goto	u7360
  3018  000E92                     u7361:
  3019  000E92  EF72  F007         	goto	l5904
  3020  000E96                     u7360:
  3021  000E96                     l5898:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3024  000E96  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3025  000E9A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3026  000E9E  2ADE               	incf	postinc2,f,c
  3027  000EA0  0E00               	movlw	0
  3028  000EA2  22DD               	addwfc	postdec2,f,c
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3031  000EA4  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3032  000EA8  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3033  000EAC  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3034  000EB0  0E02               	movlw	2
  3035  000EB2  26DE               	addwf	postinc2,f,c
  3036  000EB4  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3037  000EB8  0E00               	movlw	0
  3038  000EBA  22DD               	addwfc	postdec2,f,c
  3039  000EBC  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3040  000EC0  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3041  000EC4  CFDE F0AF          	movff	postinc2,vfpfcnvrt@ll
  3042  000EC8  CFDD F0B0          	movff	postdec2,vfpfcnvrt@ll+1
  3043  000ECC  0100               	movlb	0	; () banked
  3044  000ECE  0E00               	movlw	0
  3045  000ED0  BFB0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3046  000ED2  0EFF               	movlw	-1
  3047  000ED4  6FB1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3048  000ED6  6FB2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3049  000ED8  6FB3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3050  000EDA  6FB4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3051  000EDC  6FB5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3052  000EDE  6FB6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3053  000EE0  EFAD  F006         	goto	l5880
  3054  000EE4                     l5904:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 905:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  3057  000EE4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3058  000EE8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3059  000EEC  CFDE F001          	movff	postinc2,strncmp@_l
  3060  000EF0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3061  000EF4  0E52               	movlw	low STR_36
  3062  000EF6  6E03               	movwf	strncmp@_r^0,c
  3063  000EF8  0E08               	movlw	high STR_36
  3064  000EFA  6E04               	movwf	(strncmp@_r+1)^0,c
  3065  000EFC  0E00               	movlw	0
  3066  000EFE  6E06               	movwf	(strncmp@n+1)^0,c
  3067  000F00  0E02               	movlw	2
  3068  000F02  6E05               	movwf	strncmp@n^0,c
  3069  000F04  EC10  F027         	call	_strncmp	;wreg free
  3070  000F08  5001               	movf	?_strncmp^0,w,c
  3071  000F0A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3072  000F0C  B4D8               	btfsc	status,2,c
  3073  000F0E  EF8B  F007         	goto	u7371
  3074  000F12  EF8D  F007         	goto	u7370
  3075  000F16                     u7371:
  3076  000F16  EFA8  F007         	goto	l5908
  3077  000F1A                     u7370:
  3078  000F1A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3079  000F1E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3080  000F22  CFDE F001          	movff	postinc2,strncmp@_l
  3081  000F26  CFDD F002          	movff	postdec2,strncmp@_l+1
  3082  000F2A  0E58               	movlw	low STR_40
  3083  000F2C  6E03               	movwf	strncmp@_r^0,c
  3084  000F2E  0E08               	movlw	high STR_40
  3085  000F30  6E04               	movwf	(strncmp@_r+1)^0,c
  3086  000F32  0E00               	movlw	0
  3087  000F34  6E06               	movwf	(strncmp@n+1)^0,c
  3088  000F36  0E02               	movlw	2
  3089  000F38  6E05               	movwf	strncmp@n^0,c
  3090  000F3A  EC10  F027         	call	_strncmp	;wreg free
  3091  000F3E  5001               	movf	?_strncmp^0,w,c
  3092  000F40  1002               	iorwf	(?_strncmp+1)^0,w,c
  3093  000F42  A4D8               	btfss	status,2,c
  3094  000F44  EFA6  F007         	goto	u7381
  3095  000F48  EFA8  F007         	goto	u7380
  3096  000F4C                     u7381:
  3097  000F4C  EFD1  F007         	goto	l5914
  3098  000F50                     u7380:
  3099  000F50                     l5908:
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 906: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 908:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  3102  000F50  0E02               	movlw	2
  3103  000F52  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3104  000F56  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3105  000F5A  26DE               	addwf	postinc2,f,c
  3106  000F5C  0E00               	movlw	0
  3107  000F5E  22DD               	addwfc	postdec2,f,c
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 909:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3110  000F60  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3111  000F64  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3112  000F68  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3113  000F6C  0E02               	movlw	2
  3114  000F6E  26DE               	addwf	postinc2,f,c
  3115  000F70  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3116  000F74  0E00               	movlw	0
  3117  000F76  22DD               	addwfc	postdec2,f,c
  3118  000F78  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3119  000F7C  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3120  000F80  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  3121  000F84  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  3122  000F88  C05D  F0AF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  3123  000F8C  C05E  F0B0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  3124  000F90  0100               	movlb	0	; () banked
  3125  000F92  6BB1               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  3126  000F94  6BB2               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  3127  000F96  6BB3               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  3128  000F98  6BB4               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  3129  000F9A  6BB5               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  3130  000F9C  6BB6               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  3131  000F9E  EFAD  F006         	goto	l5880
  3132  000FA2                     l5914:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3135  000FA2  0E66               	movlw	102
  3136  000FA4  0100               	movlb	0	; () banked
  3137  000FA6  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3138  000FA8  A4D8               	btfss	status,2,c
  3139  000FAA  EFD9  F007         	goto	u7391
  3140  000FAE  EFDB  F007         	goto	u7390
  3141  000FB2                     u7391:
  3142  000FB2  EF1B  F008         	goto	l5926
  3143  000FB6                     u7390:
  3144  000FB6                     
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3147  000FB6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3148  000FBA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3149  000FBE  CFDE FFF6          	movff	postinc2,tblptrl
  3150  000FC2  CFDD FFF7          	movff	postdec2,tblptrh
  3151  000FC6                     	if	0	;tblptru may be non-zero
  3152  000FC6                     	endif
  3153  000FC6                     	if	0	;tblptru may be non-zero
  3154  000FC6                     	endif
  3155  000FC6  0008               	tblrd		*
  3156  000FC8  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  3157  000FCC                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3160  000FCC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3161  000FD0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3162  000FD4  2ADE               	incf	postinc2,f,c
  3163  000FD6  0E00               	movlw	0
  3164  000FD8  22DD               	addwfc	postdec2,f,c
  3165  000FDA                     
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3168  000FDA  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3169  000FDE  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3170  000FE2  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3171  000FE6  0E04               	movlw	4
  3172  000FE8  26DE               	addwf	postinc2,f,c
  3173  000FEA  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3174  000FEE  0E00               	movlw	0
  3175  000FF0  22DD               	addwfc	postdec2,f,c
  3176  000FF2  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3177  000FF6  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3178  000FFA  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3179  000FFE  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3180  001002  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3181  001006  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3182  00100A                     l5922:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3186  00100A  C098  F04F         	movff	vfpfcnvrt@fp,efgtoa@fp
  3187  00100E  C099  F050         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3188  001012  C0A8  F051         	movff	vfpfcnvrt@f,efgtoa@f
  3189  001016  C0A9  F052         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3190  00101A  C0AA  F053         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3191  00101E  C0AB  F054         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3192  001022  C0B9  F055         	movff	vfpfcnvrt@c,efgtoa@c
  3193  001026  EC8D  F00E         	call	_efgtoa	;wreg free
  3194  00102A  C04F  F098         	movff	?_efgtoa,?_vfpfcnvrt
  3195  00102E  C050  F099         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3196  001032  EF8C  F00E         	goto	l1392
  3197  001036                     l5926:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3201  001036  0EAC               	movlw	low vfpfcnvrt@ct
  3202  001038  6E01               	movwf	strncmp@_l^0,c
  3203  00103A  0E00               	movlw	high vfpfcnvrt@ct
  3204  00103C  6E02               	movwf	(strncmp@_l+1)^0,c
  3205  00103E  0E55               	movlw	low STR_45
  3206  001040  6E03               	movwf	strncmp@_r^0,c
  3207  001042  0E08               	movlw	high STR_45
  3208  001044  6E04               	movwf	(strncmp@_r+1)^0,c
  3209  001046  0E00               	movlw	0
  3210  001048  6E06               	movwf	(strncmp@n+1)^0,c
  3211  00104A  0E02               	movlw	2
  3212  00104C  6E05               	movwf	strncmp@n^0,c
  3213  00104E  EC10  F027         	call	_strncmp	;wreg free
  3214  001052  5001               	movf	?_strncmp^0,w,c
  3215  001054  1002               	iorwf	(?_strncmp+1)^0,w,c
  3216  001056  A4D8               	btfss	status,2,c
  3217  001058  EF30  F008         	goto	u7401
  3218  00105C  EF32  F008         	goto	u7400
  3219  001060                     u7401:
  3220  001060  EFAE  F008         	goto	l5942
  3221  001064                     u7400:
  3222  001064                     
  3223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3224  001064  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3225  001068  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3226  00106C  CFDE F05B          	movff	postinc2,??_vfpfcnvrt
  3227  001070  CFDD F05C          	movff	postdec2,??_vfpfcnvrt+1
  3228  001074  0E01               	movlw	1
  3229  001076  265B               	addwf	??_vfpfcnvrt^0,f,c
  3230  001078  0E00               	movlw	0
  3231  00107A  225C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3232  00107C  C05B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3233  001080  C05C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3234  001084                     	if	0	;tblptru may be non-zero
  3235  001084                     	endif
  3236  001084                     	if	0	;tblptru may be non-zero
  3237  001084                     	endif
  3238  001084  0008               	tblrd		*
  3239  001086  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  3240  00108A  0EBF               	movlw	191
  3241  00108C  6E5B               	movwf	??_vfpfcnvrt^0,c
  3242  00108E  0EFF               	movlw	255
  3243  001090  6E5C               	movwf	(??_vfpfcnvrt+1)^0,c
  3244  001092  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3245  001096  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3246  00109A  CFDE FFF6          	movff	postinc2,tblptrl
  3247  00109E  CFDD FFF7          	movff	postdec2,tblptrh
  3248  0010A2                     	if	0	;tblptru may be non-zero
  3249  0010A2                     	endif
  3250  0010A2                     	if	0	;tblptru may be non-zero
  3251  0010A2                     	endif
  3252  0010A2  0008               	tblrd		*
  3253  0010A4  50F5               	movf	tablat,w,c
  3254  0010A6  6E5D               	movwf	(??_vfpfcnvrt+2)^0,c
  3255  0010A8  6A5E               	clrf	(??_vfpfcnvrt+3)^0,c
  3256  0010AA  505B               	movf	??_vfpfcnvrt^0,w,c
  3257  0010AC  265D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3258  0010AE  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  3259  0010B0  225E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3260  0010B2  505E               	movf	(??_vfpfcnvrt+3)^0,w,c
  3261  0010B4  E10A               	bnz	u7410
  3262  0010B6  0E1A               	movlw	26
  3263  0010B8  5C5D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3264  0010BA  A0D8               	btfss	status,0,c
  3265  0010BC  EF62  F008         	goto	u7411
  3266  0010C0  EF65  F008         	goto	u7410
  3267  0010C4                     u7411:
  3268  0010C4  0E01               	movlw	1
  3269  0010C6  EF66  F008         	goto	u7420
  3270  0010CA                     u7410:
  3271  0010CA  0E00               	movlw	0
  3272  0010CC                     u7420:
  3273  0010CC  0100               	movlb	0	; () banked
  3274  0010CE  6FA6               	movwf	_vfpfcnvrt$1616& (0+255),b
  3275  0010D0  6BA7               	clrf	(_vfpfcnvrt$1616+1)& (0+255),b
  3276  0010D2                     
  3277                           ; BSR set to: 0
  3278  0010D2  51A6               	movf	_vfpfcnvrt$1616& (0+255),w,b
  3279  0010D4  11A7               	iorwf	(_vfpfcnvrt$1616+1)& (0+255),w,b
  3280  0010D6  B4D8               	btfsc	status,2,c
  3281  0010D8  EF70  F008         	goto	u7431
  3282  0010DC  EF72  F008         	goto	u7430
  3283  0010E0                     u7431:
  3284  0010E0  EF8C  F008         	goto	l5936
  3285  0010E4                     u7430:
  3286  0010E4                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3289  0010E4  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3290  0010E8  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3291  0010EC  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3292  0010F0  0E04               	movlw	4
  3293  0010F2  26DE               	addwf	postinc2,f,c
  3294  0010F4  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3295  0010F8  0E00               	movlw	0
  3296  0010FA  22DD               	addwfc	postdec2,f,c
  3297  0010FC  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3298  001100  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3299  001104  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3300  001108  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3301  00110C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3302  001110  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3305  001114  EFA4  F008         	goto	l1412
  3306  001118                     l5936:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3310  001118  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3311  00111C  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3312  001120  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3313  001124  0E04               	movlw	4
  3314  001126  26DE               	addwf	postinc2,f,c
  3315  001128  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3316  00112C  0E00               	movlw	0
  3317  00112E  22DD               	addwfc	postdec2,f,c
  3318  001130  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3319  001134  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3320  001138  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  3321  00113C  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  3322  001140  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  3323  001144  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  3324  001148                     l1412:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3328  001148  0E02               	movlw	2
  3329  00114A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3330  00114E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3331  001152  26DE               	addwf	postinc2,f,c
  3332  001154  0E00               	movlw	0
  3333  001156  22DD               	addwfc	postdec2,f,c
  3334  001158  EF05  F008         	goto	l5922
  3335  00115C                     l5942:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 991:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  3338  00115C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3339  001160  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3340  001164  CFDE F001          	movff	postinc2,strncmp@_l
  3341  001168  CFDD F002          	movff	postdec2,strncmp@_l+1
  3342  00116C  0E43               	movlw	low STR_50
  3343  00116E  6E03               	movwf	strncmp@_r^0,c
  3344  001170  0E08               	movlw	high STR_50
  3345  001172  6E04               	movwf	(strncmp@_r+1)^0,c
  3346  001174  0E00               	movlw	0
  3347  001176  6E06               	movwf	(strncmp@n+1)^0,c
  3348  001178  0E03               	movlw	3
  3349  00117A  6E05               	movwf	strncmp@n^0,c
  3350  00117C  EC10  F027         	call	_strncmp	;wreg free
  3351  001180  5001               	movf	?_strncmp^0,w,c
  3352  001182  1002               	iorwf	(?_strncmp+1)^0,w,c
  3353  001184  A4D8               	btfss	status,2,c
  3354  001186  EFC7  F008         	goto	u7441
  3355  00118A  EFC9  F008         	goto	u7440
  3356  00118E                     u7441:
  3357  00118E  EF09  F009         	goto	l5950
  3358  001192                     u7440:
  3359  001192                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 993:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  3361  001192  0E03               	movlw	3
  3362  001194  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3363  001198  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3364  00119C  26DE               	addwf	postinc2,f,c
  3365  00119E  0E00               	movlw	0
  3366  0011A0  22DD               	addwfc	postdec2,f,c
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 994:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3369  0011A2  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3370  0011A6  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3371  0011AA  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3372  0011AE  0E02               	movlw	2
  3373  0011B0  26DE               	addwf	postinc2,f,c
  3374  0011B2  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3375  0011B6  0E00               	movlw	0
  3376  0011B8  22DD               	addwfc	postdec2,f,c
  3377  0011BA  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3378  0011BE  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3379  0011C2  50DF               	movf	indf2,w,c
  3380  0011C4  6E5D               	movwf	(??_vfpfcnvrt+2)^0,c
  3381  0011C6  505D               	movf	(??_vfpfcnvrt+2)^0,w,c
  3382  0011C8  0100               	movlb	0	; () banked
  3383  0011CA  6FBA               	movwf	vfpfcnvrt@llu& (0+255),b
  3384  0011CC  6BBB               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3385  0011CE  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3386  0011D0  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3387  0011D2  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3388  0011D4  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3389  0011D6  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3390  0011D8  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3391  0011DA                     l5946:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 996:             
      +                          return otoa(fp, llu);
  3395  0011DA  C098  F01E         	movff	vfpfcnvrt@fp,otoa@fp
  3396  0011DE  C099  F01F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  3397  0011E2  C0BA  F020         	movff	vfpfcnvrt@llu,otoa@d
  3398  0011E6  C0BB  F021         	movff	vfpfcnvrt@llu+1,otoa@d+1
  3399  0011EA  C0BC  F022         	movff	vfpfcnvrt@llu+2,otoa@d+2
  3400  0011EE  C0BD  F023         	movff	vfpfcnvrt@llu+3,otoa@d+3
  3401  0011F2  C0BE  F024         	movff	vfpfcnvrt@llu+4,otoa@d+4
  3402  0011F6  C0BF  F025         	movff	vfpfcnvrt@llu+5,otoa@d+5
  3403  0011FA  C0C0  F026         	movff	vfpfcnvrt@llu+6,otoa@d+6
  3404  0011FE  C0C1  F027         	movff	vfpfcnvrt@llu+7,otoa@d+7
  3405  001202  EC18  F021         	call	_otoa	;wreg free
  3406  001206  C01E  F098         	movff	?_otoa,?_vfpfcnvrt
  3407  00120A  C01F  F099         	movff	?_otoa+1,?_vfpfcnvrt+1
  3408  00120E  EF8C  F00E         	goto	l1392
  3409  001212                     l5950:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1002:         if 
      +                          (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  3412  001212  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3413  001216  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3414  00121A  CFDE F001          	movff	postinc2,strncmp@_l
  3415  00121E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3416  001222  0E44               	movlw	low (STR_50+1)
  3417  001224  6E03               	movwf	strncmp@_r^0,c
  3418  001226  0E08               	movlw	high (STR_50+1)
  3419  001228  6E04               	movwf	(strncmp@_r+1)^0,c
  3420  00122A  0E00               	movlw	0
  3421  00122C  6E06               	movwf	(strncmp@n+1)^0,c
  3422  00122E  0E02               	movlw	2
  3423  001230  6E05               	movwf	strncmp@n^0,c
  3424  001232  EC10  F027         	call	_strncmp	;wreg free
  3425  001236  5001               	movf	?_strncmp^0,w,c
  3426  001238  1002               	iorwf	(?_strncmp+1)^0,w,c
  3427  00123A  A4D8               	btfss	status,2,c
  3428  00123C  EF22  F009         	goto	u7451
  3429  001240  EF24  F009         	goto	u7450
  3430  001244                     u7451:
  3431  001244  EF4D  F009         	goto	l5958
  3432  001248                     u7450:
  3433  001248                     
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1004:            
      +                           *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  3435  001248  0E02               	movlw	2
  3436  00124A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3437  00124E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3438  001252  26DE               	addwf	postinc2,f,c
  3439  001254  0E00               	movlw	0
  3440  001256  22DD               	addwfc	postdec2,f,c
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1005:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3443  001258  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3444  00125C  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3445  001260  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3446  001264  0E02               	movlw	2
  3447  001266  26DE               	addwf	postinc2,f,c
  3448  001268  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3449  00126C  0E00               	movlw	0
  3450  00126E  22DD               	addwfc	postdec2,f,c
  3451  001270  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3452  001274  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3453  001278  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  3454  00127C  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  3455  001280  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3456  001284  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3457  001288  0100               	movlb	0	; () banked
  3458  00128A  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3459  00128C  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3460  00128E  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3461  001290  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3462  001292  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3463  001294  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3464  001296  EFED  F008         	goto	l5946
  3465  00129A                     l5958:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1012:         if 
      +                          (*fmt[0] == 'o') {
  3468  00129A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3469  00129E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3470  0012A2  CFDE FFF6          	movff	postinc2,tblptrl
  3471  0012A6  CFDD FFF7          	movff	postdec2,tblptrh
  3472  0012AA                     	if	0	;tblptru may be non-zero
  3473  0012AA                     	endif
  3474  0012AA                     	if	0	;tblptru may be non-zero
  3475  0012AA                     	endif
  3476  0012AA  0008               	tblrd		*
  3477  0012AC  50F5               	movf	tablat,w,c
  3478  0012AE  0A6F               	xorlw	111
  3479  0012B0  A4D8               	btfss	status,2,c
  3480  0012B2  EF5D  F009         	goto	u7461
  3481  0012B6  EF5F  F009         	goto	u7460
  3482  0012BA                     u7461:
  3483  0012BA  EF87  F009         	goto	l5966
  3484  0012BE                     u7460:
  3485  0012BE                     
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1014:            
      +                           ++*fmt;
  3487  0012BE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3488  0012C2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3489  0012C6  2ADE               	incf	postinc2,f,c
  3490  0012C8  0E00               	movlw	0
  3491  0012CA  22DD               	addwfc	postdec2,f,c
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1015:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3494  0012CC  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3495  0012D0  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3496  0012D4  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3497  0012D8  0E02               	movlw	2
  3498  0012DA  26DE               	addwf	postinc2,f,c
  3499  0012DC  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3500  0012E0  0E00               	movlw	0
  3501  0012E2  22DD               	addwfc	postdec2,f,c
  3502  0012E4  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3503  0012E8  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3504  0012EC  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  3505  0012F0  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  3506  0012F4  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3507  0012F8  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3508  0012FC  0100               	movlb	0	; () banked
  3509  0012FE  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3510  001300  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3511  001302  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3512  001304  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3513  001306  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3514  001308  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3515  00130A  EFED  F008         	goto	l5946
  3516  00130E                     l5966:
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1066:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  3519  00130E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3520  001312  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3521  001316  CFDE F001          	movff	postinc2,strncmp@_l
  3522  00131A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3523  00131E  0E5E               	movlw	low STR_60
  3524  001320  6E03               	movwf	strncmp@_r^0,c
  3525  001322  0E08               	movlw	high STR_60
  3526  001324  6E04               	movwf	(strncmp@_r+1)^0,c
  3527  001326  0E00               	movlw	0
  3528  001328  6E06               	movwf	(strncmp@n+1)^0,c
  3529  00132A  0E02               	movlw	2
  3530  00132C  6E05               	movwf	strncmp@n^0,c
  3531  00132E  EC10  F027         	call	_strncmp	;wreg free
  3532  001332  5001               	movf	?_strncmp^0,w,c
  3533  001334  1002               	iorwf	(?_strncmp+1)^0,w,c
  3534  001336  A4D8               	btfss	status,2,c
  3535  001338  EFA0  F009         	goto	u7471
  3536  00133C  EFA2  F009         	goto	u7470
  3537  001340                     u7471:
  3538  001340  EFCB  F009         	goto	l5974
  3539  001344                     u7470:
  3540  001344                     
  3541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1068:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  3542  001344  0E02               	movlw	2
  3543  001346  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3544  00134A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3545  00134E  26DE               	addwf	postinc2,f,c
  3546  001350  0E00               	movlw	0
  3547  001352  22DD               	addwfc	postdec2,f,c
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1069:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3550  001354  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3551  001358  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3552  00135C  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3553  001360  0E02               	movlw	2
  3554  001362  26DE               	addwf	postinc2,f,c
  3555  001364  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3556  001368  0E00               	movlw	0
  3557  00136A  22DD               	addwfc	postdec2,f,c
  3558  00136C  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3559  001370  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3560  001374  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  3561  001378  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  3562  00137C  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3563  001380  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3564  001384  0100               	movlb	0	; () banked
  3565  001386  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3566  001388  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3567  00138A  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3568  00138C  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3569  00138E  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3570  001390  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3571  001392  EFED  F008         	goto	l5946
  3572  001396                     l5974:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1080:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  3575  001396  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3576  00139A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3577  00139E  CFDE F001          	movff	postinc2,strncmp@_l
  3578  0013A2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3579  0013A6  0E3F               	movlw	low STR_65
  3580  0013A8  6E03               	movwf	strncmp@_r^0,c
  3581  0013AA  0E08               	movlw	high STR_65
  3582  0013AC  6E04               	movwf	(strncmp@_r+1)^0,c
  3583  0013AE  0E00               	movlw	0
  3584  0013B0  6E06               	movwf	(strncmp@n+1)^0,c
  3585  0013B2  0E03               	movlw	3
  3586  0013B4  6E05               	movwf	strncmp@n^0,c
  3587  0013B6  EC10  F027         	call	_strncmp	;wreg free
  3588  0013BA  5001               	movf	?_strncmp^0,w,c
  3589  0013BC  1002               	iorwf	(?_strncmp+1)^0,w,c
  3590  0013BE  A4D8               	btfss	status,2,c
  3591  0013C0  EFE4  F009         	goto	u7481
  3592  0013C4  EFE6  F009         	goto	u7480
  3593  0013C8                     u7481:
  3594  0013C8  EF0F  F00A         	goto	l5984
  3595  0013CC                     u7480:
  3596  0013CC                     
  3597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1082:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  3598  0013CC  0E03               	movlw	3
  3599  0013CE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3600  0013D2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3601  0013D6  26DE               	addwf	postinc2,f,c
  3602  0013D8  0E00               	movlw	0
  3603  0013DA  22DD               	addwfc	postdec2,f,c
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1083:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3606  0013DC  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3607  0013E0  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3608  0013E4  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3609  0013E8  0E02               	movlw	2
  3610  0013EA  26DE               	addwf	postinc2,f,c
  3611  0013EC  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3612  0013F0  0E00               	movlw	0
  3613  0013F2  22DD               	addwfc	postdec2,f,c
  3614  0013F4  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3615  0013F8  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3616  0013FC  CFDE F0B7          	movff	postinc2,vfpfcnvrt@vp
  3617  001400  CFDD F0B8          	movff	postdec2,vfpfcnvrt@vp+1
  3618  001404                     
  3619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1084:            
      +                           *(char *)vp = (char)nout;
  3620  001404  C0B7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3621  001408  C0B8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3622  00140C  C0EF  FFDF         	movff	_nout,indf2
  3623  001410                     l5980:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1085:            
      +                           return 0;
  3626  001410  0E00               	movlw	0
  3627  001412  0100               	movlb	0	; () banked
  3628  001414  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3629  001416  0E00               	movlw	0
  3630  001418  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  3631  00141A  EF8C  F00E         	goto	l1392
  3632  00141E                     l5984:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1090:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  3635  00141E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3636  001422  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3637  001426  CFDE F001          	movff	postinc2,strncmp@_l
  3638  00142A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3639  00142E  0E40               	movlw	low (STR_65+1)
  3640  001430  6E03               	movwf	strncmp@_r^0,c
  3641  001432  0E08               	movlw	high (STR_65+1)
  3642  001434  6E04               	movwf	(strncmp@_r+1)^0,c
  3643  001436  0E00               	movlw	0
  3644  001438  6E06               	movwf	(strncmp@n+1)^0,c
  3645  00143A  0E02               	movlw	2
  3646  00143C  6E05               	movwf	strncmp@n^0,c
  3647  00143E  EC10  F027         	call	_strncmp	;wreg free
  3648  001442  5001               	movf	?_strncmp^0,w,c
  3649  001444  1002               	iorwf	(?_strncmp+1)^0,w,c
  3650  001446  A4D8               	btfss	status,2,c
  3651  001448  EF28  F00A         	goto	u7491
  3652  00144C  EF2A  F00A         	goto	u7490
  3653  001450                     u7491:
  3654  001450  EF50  F00A         	goto	l5994
  3655  001454                     u7490:
  3656  001454                     
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1092:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  3658  001454  0E02               	movlw	2
  3659  001456  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3660  00145A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3661  00145E  26DE               	addwf	postinc2,f,c
  3662  001460  0E00               	movlw	0
  3663  001462  22DD               	addwfc	postdec2,f,c
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1093:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  3666  001464  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3667  001468  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3668  00146C  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3669  001470  0E02               	movlw	2
  3670  001472  26DE               	addwf	postinc2,f,c
  3671  001474  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3672  001478  0E00               	movlw	0
  3673  00147A  22DD               	addwfc	postdec2,f,c
  3674  00147C  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3675  001480  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3676  001484  CFDE F0B7          	movff	postinc2,vfpfcnvrt@vp
  3677  001488  CFDD F0B8          	movff	postdec2,vfpfcnvrt@vp+1
  3678  00148C                     
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1094:            
      +                           *(short *)vp = (short)nout;
  3680  00148C  C0B7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3681  001490  C0B8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3682  001494  C0EF  FFDE         	movff	_nout,postinc2
  3683  001498  C0F0  FFDD         	movff	_nout+1,postdec2
  3684  00149C  EF08  F00A         	goto	l5980
  3685  0014A0                     l5994:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  3688  0014A0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3689  0014A4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  0014A8  CFDE FFF6          	movff	postinc2,tblptrl
  3691  0014AC  CFDD FFF7          	movff	postdec2,tblptrh
  3692  0014B0                     	if	0	;tblptru may be non-zero
  3693  0014B0                     	endif
  3694  0014B0                     	if	0	;tblptru may be non-zero
  3695  0014B0                     	endif
  3696  0014B0  0008               	tblrd		*
  3697  0014B2  50F5               	movf	tablat,w,c
  3698  0014B4  0A6E               	xorlw	110
  3699  0014B6  A4D8               	btfss	status,2,c
  3700  0014B8  EF60  F00A         	goto	u7501
  3701  0014BC  EF62  F00A         	goto	u7500
  3702  0014C0                     u7501:
  3703  0014C0  EF87  F00A         	goto	l6004
  3704  0014C4                     u7500:
  3705  0014C4                     
  3706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  3707  0014C4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3708  0014C8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3709  0014CC  2ADE               	incf	postinc2,f,c
  3710  0014CE  0E00               	movlw	0
  3711  0014D0  22DD               	addwfc	postdec2,f,c
  3712                           
  3713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3714  0014D2  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3715  0014D6  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3716  0014DA  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3717  0014DE  0E02               	movlw	2
  3718  0014E0  26DE               	addwf	postinc2,f,c
  3719  0014E2  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3720  0014E6  0E00               	movlw	0
  3721  0014E8  22DD               	addwfc	postdec2,f,c
  3722  0014EA  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3723  0014EE  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3724  0014F2  CFDE F0B7          	movff	postinc2,vfpfcnvrt@vp
  3725  0014F6  CFDD F0B8          	movff	postdec2,vfpfcnvrt@vp+1
  3726  0014FA                     
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  3728  0014FA  C0B7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3729  0014FE  C0B8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3730  001502  C0EF  FFDE         	movff	_nout,postinc2
  3731  001506  C0F0  FFDD         	movff	_nout+1,postdec2
  3732  00150A  EF08  F00A         	goto	l5980
  3733  00150E                     l6004:
  3734                           
  3735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1147:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3736  00150E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3737  001512  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3738  001516  CFDE F001          	movff	postinc2,strncmp@_l
  3739  00151A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3740  00151E  0E5B               	movlw	low STR_75
  3741  001520  6E03               	movwf	strncmp@_r^0,c
  3742  001522  0E08               	movlw	high STR_75
  3743  001524  6E04               	movwf	(strncmp@_r+1)^0,c
  3744  001526  0E00               	movlw	0
  3745  001528  6E06               	movwf	(strncmp@n+1)^0,c
  3746  00152A  0E02               	movlw	2
  3747  00152C  6E05               	movwf	strncmp@n^0,c
  3748  00152E  EC10  F027         	call	_strncmp	;wreg free
  3749  001532  5001               	movf	?_strncmp^0,w,c
  3750  001534  1002               	iorwf	(?_strncmp+1)^0,w,c
  3751  001536  A4D8               	btfss	status,2,c
  3752  001538  EFA0  F00A         	goto	u7511
  3753  00153C  EFA2  F00A         	goto	u7510
  3754  001540                     u7511:
  3755  001540  EFC8  F00A         	goto	l6014
  3756  001544                     u7510:
  3757  001544                     
  3758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1149:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  3759  001544  0E02               	movlw	2
  3760  001546  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3761  00154A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3762  00154E  26DE               	addwf	postinc2,f,c
  3763  001550  0E00               	movlw	0
  3764  001552  22DD               	addwfc	postdec2,f,c
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1150:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3767  001554  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3768  001558  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3769  00155C  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3770  001560  0E02               	movlw	2
  3771  001562  26DE               	addwf	postinc2,f,c
  3772  001564  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3773  001568  0E00               	movlw	0
  3774  00156A  22DD               	addwfc	postdec2,f,c
  3775  00156C  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3776  001570  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3777  001574  CFDE F0B7          	movff	postinc2,vfpfcnvrt@vp
  3778  001578  CFDD F0B8          	movff	postdec2,vfpfcnvrt@vp+1
  3779  00157C                     
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1151:            
      +                           *(size_t *)vp = (size_t)nout;
  3781  00157C  C0B7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3782  001580  C0B8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3783  001584  C0EF  FFDE         	movff	_nout,postinc2
  3784  001588  C0F0  FFDD         	movff	_nout+1,postdec2
  3785  00158C  EF08  F00A         	goto	l5980
  3786  001590                     l6014:
  3787                           
  3788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1160:         if 
      +                          (*fmt[0] == 'p') {
  3789  001590  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3790  001594  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3791  001598  CFDE FFF6          	movff	postinc2,tblptrl
  3792  00159C  CFDD FFF7          	movff	postdec2,tblptrh
  3793  0015A0                     	if	0	;tblptru may be non-zero
  3794  0015A0                     	endif
  3795  0015A0                     	if	0	;tblptru may be non-zero
  3796  0015A0                     	endif
  3797  0015A0  0008               	tblrd		*
  3798  0015A2  50F5               	movf	tablat,w,c
  3799  0015A4  0A70               	xorlw	112
  3800  0015A6  A4D8               	btfss	status,2,c
  3801  0015A8  EFD8  F00A         	goto	u7521
  3802  0015AC  EFDA  F00A         	goto	u7520
  3803  0015B0                     u7521:
  3804  0015B0  EF1E  F00B         	goto	l6022
  3805  0015B4                     u7520:
  3806  0015B4                     
  3807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1162:            
      +                           ++*fmt;
  3808  0015B4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3809  0015B8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3810  0015BC  2ADE               	incf	postinc2,f,c
  3811  0015BE  0E00               	movlw	0
  3812  0015C0  22DD               	addwfc	postdec2,f,c
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1163:            
      +                           llu = (unsigned long long)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3815  0015C2  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3816  0015C6  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3817  0015CA  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3818  0015CE  0E02               	movlw	2
  3819  0015D0  26DE               	addwf	postinc2,f,c
  3820  0015D2  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3821  0015D6  0E00               	movlw	0
  3822  0015D8  22DD               	addwfc	postdec2,f,c
  3823  0015DA  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3824  0015DE  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3825  0015E2  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  3826  0015E6  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  3827  0015EA  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3828  0015EE  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3829  0015F2  0100               	movlb	0	; () banked
  3830  0015F4  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3831  0015F6  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3832  0015F8  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3833  0015FA  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3834  0015FC  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3835  0015FE  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3836  001600                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1165:            
      +                           return xtoa(fp, llu, 'x');
  3839  001600  C098  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3840  001604  C099  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3841  001608  C0BA  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3842  00160C  C0BB  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3843  001610  C0BC  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3844  001614  C0BD  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3845  001618  C0BE  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3846  00161C  C0BF  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3847  001620  C0C0  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3848  001624  C0C1  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3849  001628  0E78               	movlw	120
  3850  00162A  6E28               	movwf	xtoa@x^0,c
  3851  00162C  EC6D  F01C         	call	_xtoa	;wreg free
  3852  001630  C01E  F098         	movff	?_xtoa,?_vfpfcnvrt
  3853  001634  C01F  F099         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3854  001638  EF8C  F00E         	goto	l1392
  3855  00163C                     l6022:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3858  00163C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3859  001640  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3860  001644  CFDE FFF6          	movff	postinc2,tblptrl
  3861  001648  CFDD FFF7          	movff	postdec2,tblptrh
  3862  00164C                     	if	0	;tblptru may be non-zero
  3863  00164C                     	endif
  3864  00164C                     	if	0	;tblptru may be non-zero
  3865  00164C                     	endif
  3866  00164C  0008               	tblrd		*
  3867  00164E  50F5               	movf	tablat,w,c
  3868  001650  0A73               	xorlw	115
  3869  001652  A4D8               	btfss	status,2,c
  3870  001654  EF2E  F00B         	goto	u7531
  3871  001658  EF30  F00B         	goto	u7530
  3872  00165C                     u7531:
  3873  00165C  EF5B  F00B         	goto	l6030
  3874  001660                     u7530:
  3875  001660                     
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3877  001660  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3878  001664  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3879  001668  2ADE               	incf	postinc2,f,c
  3880  00166A  0E00               	movlw	0
  3881  00166C  22DD               	addwfc	postdec2,f,c
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3884  00166E  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3885  001672  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3886  001676  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3887  00167A  0E02               	movlw	2
  3888  00167C  26DE               	addwf	postinc2,f,c
  3889  00167E  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3890  001682  0E00               	movlw	0
  3891  001684  22DD               	addwfc	postdec2,f,c
  3892  001686  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3893  00168A  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3894  00168E  CFDE F09E          	movff	postinc2,vfpfcnvrt@cp
  3895  001692  CFDD F09F          	movff	postdec2,vfpfcnvrt@cp+1
  3896  001696                     
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3898  001696  C098  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  3899  00169A  C099  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3900  00169E  C09E  F00E         	movff	vfpfcnvrt@cp,stoa@s
  3901  0016A2  C09F  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3902  0016A6  EC76  F024         	call	_stoa	;wreg free
  3903  0016AA  C00C  F098         	movff	?_stoa,?_vfpfcnvrt
  3904  0016AE  C00D  F099         	movff	?_stoa+1,?_vfpfcnvrt+1
  3905  0016B2  EF8C  F00E         	goto	l1392
  3906  0016B6                     l6030:
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1183:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3909  0016B6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3910  0016BA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3911  0016BE  CFDE F001          	movff	postinc2,strncmp@_l
  3912  0016C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3913  0016C6  0E47               	movlw	low STR_80
  3914  0016C8  6E03               	movwf	strncmp@_r^0,c
  3915  0016CA  0E08               	movlw	high STR_80
  3916  0016CC  6E04               	movwf	(strncmp@_r+1)^0,c
  3917  0016CE  0E00               	movlw	0
  3918  0016D0  6E06               	movwf	(strncmp@n+1)^0,c
  3919  0016D2  0E03               	movlw	3
  3920  0016D4  6E05               	movwf	strncmp@n^0,c
  3921  0016D6  EC10  F027         	call	_strncmp	;wreg free
  3922  0016DA  5001               	movf	?_strncmp^0,w,c
  3923  0016DC  1002               	iorwf	(?_strncmp+1)^0,w,c
  3924  0016DE  A4D8               	btfss	status,2,c
  3925  0016E0  EF74  F00B         	goto	u7541
  3926  0016E4  EF76  F00B         	goto	u7540
  3927  0016E8                     u7541:
  3928  0016E8  EFB6  F00B         	goto	l6038
  3929  0016EC                     u7540:
  3930  0016EC                     
  3931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1185:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  3932  0016EC  0E03               	movlw	3
  3933  0016EE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3934  0016F2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3935  0016F6  26DE               	addwf	postinc2,f,c
  3936  0016F8  0E00               	movlw	0
  3937  0016FA  22DD               	addwfc	postdec2,f,c
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1186:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3940  0016FC  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3941  001700  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3942  001704  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3943  001708  0E02               	movlw	2
  3944  00170A  26DE               	addwf	postinc2,f,c
  3945  00170C  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3946  001710  0E00               	movlw	0
  3947  001712  22DD               	addwfc	postdec2,f,c
  3948  001714  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3949  001718  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3950  00171C  50DF               	movf	indf2,w,c
  3951  00171E  6E5D               	movwf	(??_vfpfcnvrt+2)^0,c
  3952  001720  505D               	movf	(??_vfpfcnvrt+2)^0,w,c
  3953  001722  0100               	movlb	0	; () banked
  3954  001724  6FBA               	movwf	vfpfcnvrt@llu& (0+255),b
  3955  001726  6BBB               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3956  001728  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3957  00172A  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3958  00172C  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3959  00172E  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3960  001730  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3961  001732  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3962  001734                     l6034:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1188:            
      +                           return utoa(fp, llu);
  3966  001734  C098  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  3967  001738  C099  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3968  00173C  C0BA  F020         	movff	vfpfcnvrt@llu,utoa@d
  3969  001740  C0BB  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3970  001744  C0BC  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3971  001748  C0BD  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3972  00174C  C0BE  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3973  001750  C0BF  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3974  001754  C0C0  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3975  001758  C0C1  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3976  00175C  EC16  F020         	call	_utoa	;wreg free
  3977  001760  C01E  F098         	movff	?_utoa,?_vfpfcnvrt
  3978  001764  C01F  F099         	movff	?_utoa+1,?_vfpfcnvrt+1
  3979  001768  EF8C  F00E         	goto	l1392
  3980  00176C                     l6038:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1194:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3983  00176C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3984  001770  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3985  001774  CFDE F001          	movff	postinc2,strncmp@_l
  3986  001778  CFDD F002          	movff	postdec2,strncmp@_l+1
  3987  00177C  0E48               	movlw	low (STR_80+1)
  3988  00177E  6E03               	movwf	strncmp@_r^0,c
  3989  001780  0E08               	movlw	high (STR_80+1)
  3990  001782  6E04               	movwf	(strncmp@_r+1)^0,c
  3991  001784  0E00               	movlw	0
  3992  001786  6E06               	movwf	(strncmp@n+1)^0,c
  3993  001788  0E02               	movlw	2
  3994  00178A  6E05               	movwf	strncmp@n^0,c
  3995  00178C  EC10  F027         	call	_strncmp	;wreg free
  3996  001790  5001               	movf	?_strncmp^0,w,c
  3997  001792  1002               	iorwf	(?_strncmp+1)^0,w,c
  3998  001794  A4D8               	btfss	status,2,c
  3999  001796  EFCF  F00B         	goto	u7551
  4000  00179A  EFD1  F00B         	goto	u7550
  4001  00179E                     u7551:
  4002  00179E  EFFA  F00B         	goto	l6046
  4003  0017A2                     u7550:
  4004  0017A2                     
  4005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1196:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  4006  0017A2  0E02               	movlw	2
  4007  0017A4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4008  0017A8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4009  0017AC  26DE               	addwf	postinc2,f,c
  4010  0017AE  0E00               	movlw	0
  4011  0017B0  22DD               	addwfc	postdec2,f,c
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1197:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4014  0017B2  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4015  0017B6  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4016  0017BA  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4017  0017BE  0E02               	movlw	2
  4018  0017C0  26DE               	addwf	postinc2,f,c
  4019  0017C2  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4020  0017C6  0E00               	movlw	0
  4021  0017C8  22DD               	addwfc	postdec2,f,c
  4022  0017CA  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4023  0017CE  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4024  0017D2  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  4025  0017D6  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  4026  0017DA  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4027  0017DE  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4028  0017E2  0100               	movlb	0	; () banked
  4029  0017E4  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4030  0017E6  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4031  0017E8  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4032  0017EA  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4033  0017EC  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4034  0017EE  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4035  0017F0  EF9A  F00B         	goto	l6034
  4036  0017F4                     l6046:
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4039  0017F4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4040  0017F8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4041  0017FC  CFDE FFF6          	movff	postinc2,tblptrl
  4042  001800  CFDD FFF7          	movff	postdec2,tblptrh
  4043  001804                     	if	0	;tblptru may be non-zero
  4044  001804                     	endif
  4045  001804                     	if	0	;tblptru may be non-zero
  4046  001804                     	endif
  4047  001804  0008               	tblrd		*
  4048  001806  50F5               	movf	tablat,w,c
  4049  001808  0A75               	xorlw	117
  4050  00180A  A4D8               	btfss	status,2,c
  4051  00180C  EF0A  F00C         	goto	u7561
  4052  001810  EF0C  F00C         	goto	u7560
  4053  001814                     u7561:
  4054  001814  EF34  F00C         	goto	l6054
  4055  001818                     u7560:
  4056  001818                     
  4057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4058  001818  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4059  00181C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4060  001820  2ADE               	incf	postinc2,f,c
  4061  001822  0E00               	movlw	0
  4062  001824  22DD               	addwfc	postdec2,f,c
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4065  001826  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4066  00182A  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4067  00182E  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4068  001832  0E02               	movlw	2
  4069  001834  26DE               	addwf	postinc2,f,c
  4070  001836  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4071  00183A  0E00               	movlw	0
  4072  00183C  22DD               	addwfc	postdec2,f,c
  4073  00183E  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4074  001842  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4075  001846  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  4076  00184A  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  4077  00184E  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4078  001852  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4079  001856  0100               	movlb	0	; () banked
  4080  001858  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4081  00185A  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4082  00185C  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4083  00185E  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4084  001860  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4085  001862  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4086  001864  EF9A  F00B         	goto	l6034
  4087  001868                     l6054:
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1258:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  4090  001868  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4091  00186C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4092  001870  CFDE F001          	movff	postinc2,strncmp@_l
  4093  001874  CFDD F002          	movff	postdec2,strncmp@_l+1
  4094  001878  0E61               	movlw	low STR_90
  4095  00187A  6E03               	movwf	strncmp@_r^0,c
  4096  00187C  0E08               	movlw	high STR_90
  4097  00187E  6E04               	movwf	(strncmp@_r+1)^0,c
  4098  001880  0E00               	movlw	0
  4099  001882  6E06               	movwf	(strncmp@n+1)^0,c
  4100  001884  0E02               	movlw	2
  4101  001886  6E05               	movwf	strncmp@n^0,c
  4102  001888  EC10  F027         	call	_strncmp	;wreg free
  4103  00188C  5001               	movf	?_strncmp^0,w,c
  4104  00188E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4105  001890  A4D8               	btfss	status,2,c
  4106  001892  EF4D  F00C         	goto	u7571
  4107  001896  EF4F  F00C         	goto	u7570
  4108  00189A                     u7571:
  4109  00189A  EF78  F00C         	goto	l6062
  4110  00189E                     u7570:
  4111  00189E                     
  4112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1260:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  4113  00189E  0E02               	movlw	2
  4114  0018A0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4115  0018A4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4116  0018A8  26DE               	addwf	postinc2,f,c
  4117  0018AA  0E00               	movlw	0
  4118  0018AC  22DD               	addwfc	postdec2,f,c
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1261:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4121  0018AE  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4122  0018B2  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4123  0018B6  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4124  0018BA  0E02               	movlw	2
  4125  0018BC  26DE               	addwf	postinc2,f,c
  4126  0018BE  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4127  0018C2  0E00               	movlw	0
  4128  0018C4  22DD               	addwfc	postdec2,f,c
  4129  0018C6  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4130  0018CA  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4131  0018CE  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  4132  0018D2  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  4133  0018D6  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4134  0018DA  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4135  0018DE  0100               	movlb	0	; () banked
  4136  0018E0  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4137  0018E2  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4138  0018E4  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4139  0018E6  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4140  0018E8  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4141  0018EA  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4142  0018EC  EF9A  F00B         	goto	l6034
  4143  0018F0                     l6062:
  4144                           
  4145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1271:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  4146  0018F0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4147  0018F4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4148  0018F8  CFDE F001          	movff	postinc2,strncmp@_l
  4149  0018FC  CFDD F002          	movff	postdec2,strncmp@_l+1
  4150  001900  0E4B               	movlw	low STR_95
  4151  001902  6E03               	movwf	strncmp@_r^0,c
  4152  001904  0E08               	movlw	high STR_95
  4153  001906  6E04               	movwf	(strncmp@_r+1)^0,c
  4154  001908  0E00               	movlw	0
  4155  00190A  6E06               	movwf	(strncmp@n+1)^0,c
  4156  00190C  0E03               	movlw	3
  4157  00190E  6E05               	movwf	strncmp@n^0,c
  4158  001910  EC10  F027         	call	_strncmp	;wreg free
  4159  001914  5001               	movf	?_strncmp^0,w,c
  4160  001916  1002               	iorwf	(?_strncmp+1)^0,w,c
  4161  001918  B4D8               	btfsc	status,2,c
  4162  00191A  EF91  F00C         	goto	u7581
  4163  00191E  EF93  F00C         	goto	u7580
  4164  001922                     u7581:
  4165  001922  EFAE  F00C         	goto	l6066
  4166  001926                     u7580:
  4167  001926  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4168  00192A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4169  00192E  CFDE F001          	movff	postinc2,strncmp@_l
  4170  001932  CFDD F002          	movff	postdec2,strncmp@_l+1
  4171  001936  0E2B               	movlw	low STR_99
  4172  001938  6E03               	movwf	strncmp@_r^0,c
  4173  00193A  0E08               	movlw	high STR_99
  4174  00193C  6E04               	movwf	(strncmp@_r+1)^0,c
  4175  00193E  0E00               	movlw	0
  4176  001940  6E06               	movwf	(strncmp@n+1)^0,c
  4177  001942  0E03               	movlw	3
  4178  001944  6E05               	movwf	strncmp@n^0,c
  4179  001946  EC10  F027         	call	_strncmp	;wreg free
  4180  00194A  5001               	movf	?_strncmp^0,w,c
  4181  00194C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4182  00194E  A4D8               	btfss	status,2,c
  4183  001950  EFAC  F00C         	goto	u7591
  4184  001954  EFAE  F00C         	goto	u7590
  4185  001958                     u7591:
  4186  001958  EF03  F00D         	goto	l6076
  4187  00195C                     u7590:
  4188  00195C                     l6066:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1272: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1274:             c = (*fmt)
      +                          [2];
  4191  00195C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4192  001960  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4193  001964  CFDE F05B          	movff	postinc2,??_vfpfcnvrt
  4194  001968  CFDD F05C          	movff	postdec2,??_vfpfcnvrt+1
  4195  00196C  0E02               	movlw	2
  4196  00196E  265B               	addwf	??_vfpfcnvrt^0,f,c
  4197  001970  0E00               	movlw	0
  4198  001972  225C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4199  001974  C05B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4200  001978  C05C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4201  00197C                     	if	0	;tblptru may be non-zero
  4202  00197C                     	endif
  4203  00197C                     	if	0	;tblptru may be non-zero
  4204  00197C                     	endif
  4205  00197C  0008               	tblrd		*
  4206  00197E  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  4207  001982                     
  4208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1275:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  4209  001982  0E03               	movlw	3
  4210  001984  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4211  001988  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4212  00198C  26DE               	addwf	postinc2,f,c
  4213  00198E  0E00               	movlw	0
  4214  001990  22DD               	addwfc	postdec2,f,c
  4215  001992                     
  4216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1276:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4217  001992  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4218  001996  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4219  00199A  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4220  00199E  0E02               	movlw	2
  4221  0019A0  26DE               	addwf	postinc2,f,c
  4222  0019A2  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4223  0019A6  0E00               	movlw	0
  4224  0019A8  22DD               	addwfc	postdec2,f,c
  4225  0019AA  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4226  0019AE  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4227  0019B2  50DF               	movf	indf2,w,c
  4228  0019B4  6E5D               	movwf	(??_vfpfcnvrt+2)^0,c
  4229  0019B6  505D               	movf	(??_vfpfcnvrt+2)^0,w,c
  4230  0019B8  0100               	movlb	0	; () banked
  4231  0019BA  6FBA               	movwf	vfpfcnvrt@llu& (0+255),b
  4232  0019BC  6BBB               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4233  0019BE  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4234  0019C0  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4235  0019C2  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4236  0019C4  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4237  0019C6  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4238  0019C8  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4239  0019CA                     l6072:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1278:            
      +                           return xtoa(fp, llu, c);
  4243  0019CA  C098  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  4244  0019CE  C099  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4245  0019D2  C0BA  F020         	movff	vfpfcnvrt@llu,xtoa@d
  4246  0019D6  C0BB  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4247  0019DA  C0BC  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4248  0019DE  C0BD  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4249  0019E2  C0BE  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4250  0019E6  C0BF  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4251  0019EA  C0C0  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4252  0019EE  C0C1  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4253  0019F2  C0B9  F028         	movff	vfpfcnvrt@c,xtoa@x
  4254  0019F6  EC6D  F01C         	call	_xtoa	;wreg free
  4255  0019FA  C01E  F098         	movff	?_xtoa,?_vfpfcnvrt
  4256  0019FE  C01F  F099         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4257  001A02  EF8C  F00E         	goto	l1392
  4258  001A06                     l6076:
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1284:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  4261  001A06  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4262  001A0A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4263  001A0E  CFDE F001          	movff	postinc2,strncmp@_l
  4264  001A12  CFDD F002          	movff	postdec2,strncmp@_l+1
  4265  001A16  0E4C               	movlw	low (STR_95+1)
  4266  001A18  6E03               	movwf	strncmp@_r^0,c
  4267  001A1A  0E08               	movlw	high (STR_95+1)
  4268  001A1C  6E04               	movwf	(strncmp@_r+1)^0,c
  4269  001A1E  0E00               	movlw	0
  4270  001A20  6E06               	movwf	(strncmp@n+1)^0,c
  4271  001A22  0E02               	movlw	2
  4272  001A24  6E05               	movwf	strncmp@n^0,c
  4273  001A26  EC10  F027         	call	_strncmp	;wreg free
  4274  001A2A  5001               	movf	?_strncmp^0,w,c
  4275  001A2C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4276  001A2E  B4D8               	btfsc	status,2,c
  4277  001A30  EF1C  F00D         	goto	u7601
  4278  001A34  EF1E  F00D         	goto	u7600
  4279  001A38                     u7601:
  4280  001A38  EF39  F00D         	goto	l6080
  4281  001A3C                     u7600:
  4282  001A3C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4283  001A40  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4284  001A44  CFDE F001          	movff	postinc2,strncmp@_l
  4285  001A48  CFDD F002          	movff	postdec2,strncmp@_l+1
  4286  001A4C  0E2C               	movlw	low (STR_99+1)
  4287  001A4E  6E03               	movwf	strncmp@_r^0,c
  4288  001A50  0E08               	movlw	high (STR_99+1)
  4289  001A52  6E04               	movwf	(strncmp@_r+1)^0,c
  4290  001A54  0E00               	movlw	0
  4291  001A56  6E06               	movwf	(strncmp@n+1)^0,c
  4292  001A58  0E02               	movlw	2
  4293  001A5A  6E05               	movwf	strncmp@n^0,c
  4294  001A5C  EC10  F027         	call	_strncmp	;wreg free
  4295  001A60  5001               	movf	?_strncmp^0,w,c
  4296  001A62  1002               	iorwf	(?_strncmp+1)^0,w,c
  4297  001A64  A4D8               	btfss	status,2,c
  4298  001A66  EF37  F00D         	goto	u7611
  4299  001A6A  EF39  F00D         	goto	u7610
  4300  001A6E                     u7611:
  4301  001A6E  EF75  F00D         	goto	l6090
  4302  001A72                     u7610:
  4303  001A72                     l6080:
  4304                           
  4305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1285: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1287:             c = (*fmt)
      +                          [1];
  4306  001A72  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4307  001A76  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4308  001A7A  CFDE F05B          	movff	postinc2,??_vfpfcnvrt
  4309  001A7E  CFDD F05C          	movff	postdec2,??_vfpfcnvrt+1
  4310  001A82  0E01               	movlw	1
  4311  001A84  265B               	addwf	??_vfpfcnvrt^0,f,c
  4312  001A86  0E00               	movlw	0
  4313  001A88  225C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4314  001A8A  C05B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4315  001A8E  C05C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4316  001A92                     	if	0	;tblptru may be non-zero
  4317  001A92                     	endif
  4318  001A92                     	if	0	;tblptru may be non-zero
  4319  001A92                     	endif
  4320  001A92  0008               	tblrd		*
  4321  001A94  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  4322  001A98                     
  4323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1288:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  4324  001A98  0E02               	movlw	2
  4325  001A9A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4326  001A9E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4327  001AA2  26DE               	addwf	postinc2,f,c
  4328  001AA4  0E00               	movlw	0
  4329  001AA6  22DD               	addwfc	postdec2,f,c
  4330  001AA8                     
  4331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1289:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4332  001AA8  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4333  001AAC  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4334  001AB0  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4335  001AB4  0E02               	movlw	2
  4336  001AB6  26DE               	addwf	postinc2,f,c
  4337  001AB8  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4338  001ABC  0E00               	movlw	0
  4339  001ABE  22DD               	addwfc	postdec2,f,c
  4340  001AC0  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4341  001AC4  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4342  001AC8  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  4343  001ACC  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  4344  001AD0  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4345  001AD4  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4346  001AD8  0100               	movlb	0	; () banked
  4347  001ADA  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4348  001ADC  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4349  001ADE  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4350  001AE0  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4351  001AE2  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4352  001AE4  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4353  001AE6  EFE5  F00C         	goto	l6072
  4354  001AEA                     l6090:
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4357  001AEA  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4358  001AEE  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4359  001AF2  CFDE FFF6          	movff	postinc2,tblptrl
  4360  001AF6  CFDD FFF7          	movff	postdec2,tblptrh
  4361  001AFA                     	if	0	;tblptru may be non-zero
  4362  001AFA                     	endif
  4363  001AFA                     	if	0	;tblptru may be non-zero
  4364  001AFA                     	endif
  4365  001AFA  0008               	tblrd		*
  4366  001AFC  50F5               	movf	tablat,w,c
  4367  001AFE  0A78               	xorlw	120
  4368  001B00  B4D8               	btfsc	status,2,c
  4369  001B02  EF85  F00D         	goto	u7621
  4370  001B06  EF87  F00D         	goto	u7620
  4371  001B0A                     u7621:
  4372  001B0A  EF99  F00D         	goto	l6094
  4373  001B0E                     u7620:
  4374  001B0E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4375  001B12  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4376  001B16  CFDE FFF6          	movff	postinc2,tblptrl
  4377  001B1A  CFDD FFF7          	movff	postdec2,tblptrh
  4378  001B1E                     	if	0	;tblptru may be non-zero
  4379  001B1E                     	endif
  4380  001B1E                     	if	0	;tblptru may be non-zero
  4381  001B1E                     	endif
  4382  001B1E  0008               	tblrd		*
  4383  001B20  50F5               	movf	tablat,w,c
  4384  001B22  0A58               	xorlw	88
  4385  001B24  A4D8               	btfss	status,2,c
  4386  001B26  EF97  F00D         	goto	u7631
  4387  001B2A  EF99  F00D         	goto	u7630
  4388  001B2E                     u7631:
  4389  001B2E  EFCC  F00D         	goto	l6104
  4390  001B32                     u7630:
  4391  001B32                     l6094:
  4392                           
  4393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  4394  001B32  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4395  001B36  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4396  001B3A  CFDE FFF6          	movff	postinc2,tblptrl
  4397  001B3E  CFDD FFF7          	movff	postdec2,tblptrh
  4398  001B42                     	if	0	;tblptru may be non-zero
  4399  001B42                     	endif
  4400  001B42                     	if	0	;tblptru may be non-zero
  4401  001B42                     	endif
  4402  001B42  0008               	tblrd		*
  4403  001B44  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  4404  001B48                     
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  4406  001B48  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4407  001B4C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4408  001B50  2ADE               	incf	postinc2,f,c
  4409  001B52  0E00               	movlw	0
  4410  001B54  22DD               	addwfc	postdec2,f,c
  4411  001B56                     
  4412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4413  001B56  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4414  001B5A  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4415  001B5E  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4416  001B62  0E02               	movlw	2
  4417  001B64  26DE               	addwf	postinc2,f,c
  4418  001B66  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4419  001B6A  0E00               	movlw	0
  4420  001B6C  22DD               	addwfc	postdec2,f,c
  4421  001B6E  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4422  001B72  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4423  001B76  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  4424  001B7A  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  4425  001B7E  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4426  001B82  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4427  001B86  0100               	movlb	0	; () banked
  4428  001B88  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4429  001B8A  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4430  001B8C  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4431  001B8E  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4432  001B90  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4433  001B92  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4434  001B94  EFE5  F00C         	goto	l6072
  4435  001B98                     l6104:
  4436                           
  4437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1359:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  4438  001B98  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4439  001B9C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4440  001BA0  CFDE F001          	movff	postinc2,strncmp@_l
  4441  001BA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4442  001BA8  0E64               	movlw	low STR_113
  4443  001BAA  6E03               	movwf	strncmp@_r^0,c
  4444  001BAC  0E08               	movlw	high STR_113
  4445  001BAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4446  001BB0  0E00               	movlw	0
  4447  001BB2  6E06               	movwf	(strncmp@n+1)^0,c
  4448  001BB4  0E02               	movlw	2
  4449  001BB6  6E05               	movwf	strncmp@n^0,c
  4450  001BB8  EC10  F027         	call	_strncmp	;wreg free
  4451  001BBC  5001               	movf	?_strncmp^0,w,c
  4452  001BBE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4453  001BC0  B4D8               	btfsc	status,2,c
  4454  001BC2  EFE5  F00D         	goto	u7641
  4455  001BC6  EFE7  F00D         	goto	u7640
  4456  001BCA                     u7641:
  4457  001BCA  EF02  F00E         	goto	l6108
  4458  001BCE                     u7640:
  4459  001BCE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4460  001BD2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4461  001BD6  CFDE F001          	movff	postinc2,strncmp@_l
  4462  001BDA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4463  001BDE  0E4F               	movlw	low STR_117
  4464  001BE0  6E03               	movwf	strncmp@_r^0,c
  4465  001BE2  0E08               	movlw	high STR_117
  4466  001BE4  6E04               	movwf	(strncmp@_r+1)^0,c
  4467  001BE6  0E00               	movlw	0
  4468  001BE8  6E06               	movwf	(strncmp@n+1)^0,c
  4469  001BEA  0E02               	movlw	2
  4470  001BEC  6E05               	movwf	strncmp@n^0,c
  4471  001BEE  EC10  F027         	call	_strncmp	;wreg free
  4472  001BF2  5001               	movf	?_strncmp^0,w,c
  4473  001BF4  1002               	iorwf	(?_strncmp+1)^0,w,c
  4474  001BF6  A4D8               	btfss	status,2,c
  4475  001BF8  EF00  F00E         	goto	u7651
  4476  001BFC  EF02  F00E         	goto	u7650
  4477  001C00                     u7651:
  4478  001C00  EF3E  F00E         	goto	l6118
  4479  001C04                     u7650:
  4480  001C04                     l6108:
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1360: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1362:             c = (*fmt)
      +                          [1];
  4483  001C04  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4484  001C08  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4485  001C0C  CFDE F05B          	movff	postinc2,??_vfpfcnvrt
  4486  001C10  CFDD F05C          	movff	postdec2,??_vfpfcnvrt+1
  4487  001C14  0E01               	movlw	1
  4488  001C16  265B               	addwf	??_vfpfcnvrt^0,f,c
  4489  001C18  0E00               	movlw	0
  4490  001C1A  225C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4491  001C1C  C05B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4492  001C20  C05C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4493  001C24                     	if	0	;tblptru may be non-zero
  4494  001C24                     	endif
  4495  001C24                     	if	0	;tblptru may be non-zero
  4496  001C24                     	endif
  4497  001C24  0008               	tblrd		*
  4498  001C26  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  4499  001C2A                     
  4500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1363:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  4501  001C2A  0E02               	movlw	2
  4502  001C2C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4503  001C30  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4504  001C34  26DE               	addwf	postinc2,f,c
  4505  001C36  0E00               	movlw	0
  4506  001C38  22DD               	addwfc	postdec2,f,c
  4507  001C3A                     
  4508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1364:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4509  001C3A  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4510  001C3E  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4511  001C42  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4512  001C46  0E02               	movlw	2
  4513  001C48  26DE               	addwf	postinc2,f,c
  4514  001C4A  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4515  001C4E  0E00               	movlw	0
  4516  001C50  22DD               	addwfc	postdec2,f,c
  4517  001C52  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4518  001C56  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4519  001C5A  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  4520  001C5E  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  4521  001C62  C05D  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4522  001C66  C05E  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4523  001C6A  0100               	movlb	0	; () banked
  4524  001C6C  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4525  001C6E  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4526  001C70  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4527  001C72  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4528  001C74  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4529  001C76  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4530  001C78  EFE5  F00C         	goto	l6072
  4531  001C7C                     l6118:
  4532                           
  4533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4534  001C7C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4535  001C80  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4536  001C84  CFDE FFF6          	movff	postinc2,tblptrl
  4537  001C88  CFDD FFF7          	movff	postdec2,tblptrh
  4538  001C8C                     	if	0	;tblptru may be non-zero
  4539  001C8C                     	endif
  4540  001C8C                     	if	0	;tblptru may be non-zero
  4541  001C8C                     	endif
  4542  001C8C  0008               	tblrd		*
  4543  001C8E  50F5               	movf	tablat,w,c
  4544  001C90  0A25               	xorlw	37
  4545  001C92  A4D8               	btfss	status,2,c
  4546  001C94  EF4E  F00E         	goto	u7661
  4547  001C98  EF50  F00E         	goto	u7660
  4548  001C9C                     u7661:
  4549  001C9C  EF68  F00E         	goto	l6128
  4550  001CA0                     u7660:
  4551  001CA0                     
  4552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4553  001CA0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4554  001CA4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4555  001CA8  2ADE               	incf	postinc2,f,c
  4556  001CAA  0E00               	movlw	0
  4557  001CAC  22DD               	addwfc	postdec2,f,c
  4558  001CAE                     
  4559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4560  001CAE  0E00               	movlw	0
  4561  001CB0  6E04               	movwf	(fputc@c+1)^0,c
  4562  001CB2  0E25               	movlw	37
  4563  001CB4  6E03               	movwf	fputc@c^0,c
  4564  001CB6  C098  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4565  001CBA  C099  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4566  001CBE  EC6D  F02A         	call	_fputc	;wreg free
  4567  001CC2                     l6124:
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4570  001CC2  0E00               	movlw	0
  4571  001CC4  0100               	movlb	0	; () banked
  4572  001CC6  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4573  001CC8  0E01               	movlw	1
  4574  001CCA  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  4575  001CCC  EF8C  F00E         	goto	l1392
  4576  001CD0                     l6128:
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4579  001CD0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4580  001CD4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4581  001CD8  2ADE               	incf	postinc2,f,c
  4582  001CDA  0E00               	movlw	0
  4583  001CDC  22DD               	addwfc	postdec2,f,c
  4584  001CDE  EF08  F00A         	goto	l5980
  4585  001CE2                     l6134:
  4586                           
  4587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4588  001CE2  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4589  001CE6  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4590  001CEA  CFDE FFF6          	movff	postinc2,tblptrl
  4591  001CEE  CFDD FFF7          	movff	postdec2,tblptrh
  4592  001CF2                     	if	0	;tblptru may be non-zero
  4593  001CF2                     	endif
  4594  001CF2                     	if	0	;tblptru may be non-zero
  4595  001CF2                     	endif
  4596  001CF2  0008               	tblrd		*
  4597  001CF4  50F5               	movf	tablat,w,c
  4598  001CF6  6E03               	movwf	fputc@c^0,c
  4599  001CF8  6A04               	clrf	(fputc@c+1)^0,c
  4600  001CFA  C098  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4601  001CFE  C099  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4602  001D02  EC6D  F02A         	call	_fputc	;wreg free
  4603  001D06                     
  4604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4605  001D06  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4606  001D0A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4607  001D0E  2ADE               	incf	postinc2,f,c
  4608  001D10  0E00               	movlw	0
  4609  001D12  22DD               	addwfc	postdec2,f,c
  4610  001D14  EF61  F00E         	goto	l6124
  4611  001D18                     l1392:
  4612  001D18  0012               	return		;funcret
  4613  001D1A                     __end_of_vfpfcnvrt:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _xtoa *****************
  4617 ;; Defined at:
  4618 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4621 ;;		 -> vsnprintf@f(6), 
  4622 ;;  d               8   31[COMRAM] unsigned long long 
  4623 ;;  x               1   39[COMRAM] unsigned char 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  n               8   56[COMRAM] unsigned long long 
  4626 ;;  c               2   66[COMRAM] int 
  4627 ;;  i               2   64[COMRAM] int 
  4628 ;;  w               2   54[COMRAM] int 
  4629 ;;  p               2   52[COMRAM] int 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  2   29[COMRAM] int 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4639 ;;      Params:        11       0       0       0       0       0       0       0       0
  4640 ;;      Locals:        20       0       0       0       0       0       0       0       0
  4641 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4642 ;;      Totals:        39       0       0       0       0       0       0       0       0
  4643 ;;Total ram usage:       39 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 5
  4646 ;; This function calls:
  4647 ;;		_isalpha
  4648 ;;		_isupper
  4649 ;;		_pad
  4650 ;;		_toupper
  4651 ;; This function is called by:
  4652 ;;		_vfpfcnvrt
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text6
  4657  0038DA                     __ptext6:
  4658                           	callstack 0
  4659  0038DA                     _xtoa:
  4660                           	callstack 21
  4661  0038DA                     
  4662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  4663  0038DA  0100               	movlb	0	; () banked
  4664  0038DC  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  4665  0038DE  EF73  F01C         	goto	u6801
  4666  0038E2  EF75  F01C         	goto	u6800
  4667  0038E6                     u6801:
  4668  0038E6  EF76  F01C         	goto	l5604
  4669  0038EA                     u6800:
  4670  0038EA                     
  4671                           ; BSR set to: 0
  4672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  4673  0038EA  93F5               	bcf	_flags& (0+255),1,b
  4674  0038EC                     l5604:
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  4678  0038EC  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  4679  0038EE  EF83  F01C         	goto	u6810
  4680  0038F2  51F4               	movf	(_prec+1)& (0+255),w,b
  4681  0038F4  E106               	bnz	u6811
  4682  0038F6  05F3               	decf	_prec& (0+255),w,b
  4683  0038F8  B0D8               	btfsc	status,0,c
  4684  0038FA  EF81  F01C         	goto	u6811
  4685  0038FE  EF83  F01C         	goto	u6810
  4686  003902                     u6811:
  4687  003902  EF89  F01C         	goto	l1328
  4688  003906                     u6810:
  4689  003906                     
  4690                           ; BSR set to: 0
  4691  003906  0E00               	movlw	0
  4692  003908  6E36               	movwf	(xtoa@p+1)^0,c
  4693  00390A  0E01               	movlw	1
  4694  00390C  6E35               	movwf	xtoa@p^0,c
  4695  00390E  EF8D  F01C         	goto	l1330
  4696  003912                     l1328:
  4697                           
  4698                           ; BSR set to: 0
  4699  003912  C0F3  F035         	movff	_prec,xtoa@p
  4700  003916  C0F4  F036         	movff	_prec+1,xtoa@p+1
  4701  00391A                     l1330:
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4705  00391A  C0F1  F037         	movff	_width,xtoa@w
  4706  00391E  C0F2  F038         	movff	_width+1,xtoa@w+1
  4707                           
  4708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4709  003922  A9F5               	btfss	_flags& (0+255),4,b
  4710  003924  EF96  F01C         	goto	u6821
  4711  003928  EF98  F01C         	goto	u6820
  4712  00392C                     u6821:
  4713  00392C  EF9C  F01C         	goto	l5610
  4714  003930                     u6820:
  4715  003930                     
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4718  003930  0EFE               	movlw	254
  4719  003932  2637               	addwf	xtoa@w^0,f,c
  4720  003934  0EFF               	movlw	255
  4721  003936  2238               	addwfc	(xtoa@w+1)^0,f,c
  4722  003938                     l5610:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4726  003938  C020  F039         	movff	xtoa@d,xtoa@n
  4727  00393C  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  4728  003940  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  4729  003944  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  4730  003948  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  4731  00394C  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  4732  003950  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  4733  003954  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  4734  003958                     
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4737  003958  0E00               	movlw	0
  4738  00395A  6E42               	movwf	(xtoa@i+1)^0,c
  4739  00395C  0E4F               	movlw	79
  4740  00395E  6E41               	movwf	xtoa@i^0,c
  4741  003960                     
  4742                           ; BSR set to: 0
  4743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4744  003960  0E00               	movlw	0
  4745  003962  0101               	movlb	1	; () banked
  4746  003964  6FAB               	movwf	(_dbuf+79)& (0+255),b
  4747                           
  4748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4749  003966  EF68  F01D         	goto	l5646
  4750  00396A                     l5616:
  4751                           
  4752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  4753  00396A  0641               	decf	xtoa@i^0,f,c
  4754  00396C  A0D8               	btfss	status,0,c
  4755  00396E  0642               	decf	(xtoa@i+1)^0,f,c
  4756  003970                     
  4757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4758  003970  0E0F               	movlw	15
  4759  003972  1439               	andwf	xtoa@n^0,w,c
  4760  003974  6E43               	movwf	xtoa@c^0,c
  4761  003976  6A44               	clrf	(xtoa@c+1)^0,c
  4762  003978                     
  4763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4764  003978  BE44               	btfsc	(xtoa@c+1)^0,7,c
  4765  00397A  EFC8  F01C         	goto	u6831
  4766  00397E  5044               	movf	(xtoa@c+1)^0,w,c
  4767  003980  E109               	bnz	u6830
  4768  003982  0E0A               	movlw	10
  4769  003984  5C43               	subwf	xtoa@c^0,w,c
  4770  003986  A0D8               	btfss	status,0,c
  4771  003988  EFC8  F01C         	goto	u6831
  4772  00398C  EFCA  F01C         	goto	u6830
  4773  003990                     u6831:
  4774  003990  EFD2  F01C         	goto	l5624
  4775  003994                     u6830:
  4776  003994  0E57               	movlw	87
  4777  003996  2443               	addwf	xtoa@c^0,w,c
  4778  003998  6E43               	movwf	xtoa@c^0,c
  4779  00399A  0E00               	movlw	0
  4780  00399C  2044               	addwfc	(xtoa@c+1)^0,w,c
  4781  00399E  6E44               	movwf	(xtoa@c+1)^0,c
  4782  0039A0  EFD8  F01C         	goto	l1337
  4783  0039A4                     l5624:
  4784  0039A4  0E30               	movlw	48
  4785  0039A6  2443               	addwf	xtoa@c^0,w,c
  4786  0039A8  6E43               	movwf	xtoa@c^0,c
  4787  0039AA  0E00               	movlw	0
  4788  0039AC  2044               	addwfc	(xtoa@c+1)^0,w,c
  4789  0039AE  6E44               	movwf	(xtoa@c+1)^0,c
  4790  0039B0                     l1337:
  4791  0039B0  0EBF               	movlw	191
  4792  0039B2  6E29               	movwf	??_xtoa^0,c
  4793  0039B4  0EFF               	movlw	255
  4794  0039B6  6E2A               	movwf	(??_xtoa+1)^0,c
  4795  0039B8  5028               	movf	xtoa@x^0,w,c
  4796  0039BA  6E2B               	movwf	(??_xtoa+2)^0,c
  4797  0039BC  6A2C               	clrf	(??_xtoa+3)^0,c
  4798  0039BE  5029               	movf	??_xtoa^0,w,c
  4799  0039C0  262B               	addwf	(??_xtoa+2)^0,f,c
  4800  0039C2  502A               	movf	(??_xtoa+1)^0,w,c
  4801  0039C4  222C               	addwfc	(??_xtoa+3)^0,f,c
  4802  0039C6  502C               	movf	(??_xtoa+3)^0,w,c
  4803  0039C8  E10A               	bnz	u6840
  4804  0039CA  0E1A               	movlw	26
  4805  0039CC  5C2B               	subwf	(??_xtoa+2)^0,w,c
  4806  0039CE  A0D8               	btfss	status,0,c
  4807  0039D0  EFEC  F01C         	goto	u6841
  4808  0039D4  EFEF  F01C         	goto	u6840
  4809  0039D8                     u6841:
  4810  0039D8  0E01               	movlw	1
  4811  0039DA  EFF0  F01C         	goto	u6850
  4812  0039DE                     u6840:
  4813  0039DE  0E00               	movlw	0
  4814  0039E0                     u6850:
  4815  0039E0  6E31               	movwf	_xtoa$1579^0,c
  4816  0039E2  6A32               	clrf	(_xtoa$1579+1)^0,c
  4817  0039E4  5031               	movf	_xtoa$1579^0,w,c
  4818  0039E6  1032               	iorwf	(_xtoa$1579+1)^0,w,c
  4819  0039E8  B4D8               	btfsc	status,2,c
  4820  0039EA  EFF9  F01C         	goto	u6861
  4821  0039EE  EFFB  F01C         	goto	u6860
  4822  0039F2                     u6861:
  4823  0039F2  EF2B  F01D         	goto	l5638
  4824  0039F6                     u6860:
  4825  0039F6  0E9F               	movlw	159
  4826  0039F8  6E29               	movwf	??_xtoa^0,c
  4827  0039FA  0EFF               	movlw	255
  4828  0039FC  6E2A               	movwf	(??_xtoa+1)^0,c
  4829  0039FE  0E20               	movlw	32
  4830  003A00  1043               	iorwf	xtoa@c^0,w,c
  4831  003A02  6E2B               	movwf	(??_xtoa+2)^0,c
  4832  003A04  0E00               	movlw	0
  4833  003A06  1044               	iorwf	(xtoa@c+1)^0,w,c
  4834  003A08  6E2C               	movwf	(??_xtoa+3)^0,c
  4835  003A0A  5029               	movf	??_xtoa^0,w,c
  4836  003A0C  262B               	addwf	(??_xtoa+2)^0,f,c
  4837  003A0E  502A               	movf	(??_xtoa+1)^0,w,c
  4838  003A10  222C               	addwfc	(??_xtoa+3)^0,f,c
  4839  003A12  502C               	movf	(??_xtoa+3)^0,w,c
  4840  003A14  E10A               	bnz	u6870
  4841  003A16  0E1A               	movlw	26
  4842  003A18  5C2B               	subwf	(??_xtoa+2)^0,w,c
  4843  003A1A  A0D8               	btfss	status,0,c
  4844  003A1C  EF12  F01D         	goto	u6871
  4845  003A20  EF15  F01D         	goto	u6870
  4846  003A24                     u6871:
  4847  003A24  0E01               	movlw	1
  4848  003A26  EF16  F01D         	goto	u6880
  4849  003A2A                     u6870:
  4850  003A2A  0E00               	movlw	0
  4851  003A2C                     u6880:
  4852  003A2C  6E33               	movwf	_xtoa$1580^0,c
  4853  003A2E  6A34               	clrf	(_xtoa$1580+1)^0,c
  4854  003A30  5033               	movf	_xtoa$1580^0,w,c
  4855  003A32  1034               	iorwf	(_xtoa$1580+1)^0,w,c
  4856  003A34  B4D8               	btfsc	status,2,c
  4857  003A36  EF1F  F01D         	goto	u6891
  4858  003A3A  EF21  F01D         	goto	u6890
  4859  003A3E                     u6891:
  4860  003A3E  EF2B  F01D         	goto	l5638
  4861  003A42                     u6890:
  4862  003A42                     
  4863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4864  003A42  C043  F007         	movff	xtoa@c,toupper@c
  4865  003A46  C044  F008         	movff	xtoa@c+1,toupper@c+1
  4866  003A4A  ECE3  F02C         	call	_toupper	;wreg free
  4867  003A4E  C007  F043         	movff	?_toupper,xtoa@c
  4868  003A52  C008  F044         	movff	?_toupper+1,xtoa@c+1
  4869  003A56                     l5638:
  4870                           
  4871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4872  003A56  0E5C               	movlw	low _dbuf
  4873  003A58  2441               	addwf	xtoa@i^0,w,c
  4874  003A5A  6ED9               	movwf	fsr2l,c
  4875  003A5C  0E01               	movlw	high _dbuf
  4876  003A5E  2042               	addwfc	(xtoa@i+1)^0,w,c
  4877  003A60  6EDA               	movwf	fsr2h,c
  4878  003A62  C043  FFDF         	movff	xtoa@c,indf2
  4879  003A66                     
  4880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  4881  003A66  0635               	decf	xtoa@p^0,f,c
  4882  003A68  A0D8               	btfss	status,0,c
  4883  003A6A  0636               	decf	(xtoa@p+1)^0,f,c
  4884  003A6C                     
  4885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  4886  003A6C  0637               	decf	xtoa@w^0,f,c
  4887  003A6E  A0D8               	btfss	status,0,c
  4888  003A70  0638               	decf	(xtoa@w+1)^0,f,c
  4889  003A72                     
  4890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4891  003A72  C039  F029         	movff	xtoa@n,??_xtoa
  4892  003A76  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  4893  003A7A  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  4894  003A7E  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  4895  003A82  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  4896  003A86  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  4897  003A8A  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  4898  003A8E  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  4899  003A92  0E05               	movlw	5
  4900  003A94  EF55  F01D         	goto	u6900
  4901  003A98                     u6905:
  4902  003A98  90D8               	bcf	status,0,c
  4903  003A9A  3230               	rrcf	(??_xtoa+7)^0,f,c
  4904  003A9C  322F               	rrcf	(??_xtoa+6)^0,f,c
  4905  003A9E  322E               	rrcf	(??_xtoa+5)^0,f,c
  4906  003AA0  322D               	rrcf	(??_xtoa+4)^0,f,c
  4907  003AA2  322C               	rrcf	(??_xtoa+3)^0,f,c
  4908  003AA4  322B               	rrcf	(??_xtoa+2)^0,f,c
  4909  003AA6  322A               	rrcf	(??_xtoa+1)^0,f,c
  4910  003AA8  3229               	rrcf	??_xtoa^0,f,c
  4911  003AAA                     u6900:
  4912  003AAA  2EE8               	decfsz	wreg,f,c
  4913  003AAC  EF4C  F01D         	goto	u6905
  4914  003AB0  C029  F039         	movff	??_xtoa,xtoa@n
  4915  003AB4  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  4916  003AB8  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  4917  003ABC  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  4918  003AC0  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  4919  003AC4  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  4920  003AC8  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  4921  003ACC  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  4922  003AD0                     l5646:
  4923                           
  4924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4925  003AD0  BE42               	btfsc	(xtoa@i+1)^0,7,c
  4926  003AD2  EF74  F01D         	goto	u6911
  4927  003AD6  5042               	movf	(xtoa@i+1)^0,w,c
  4928  003AD8  E109               	bnz	u6910
  4929  003ADA  0E02               	movlw	2
  4930  003ADC  5C41               	subwf	xtoa@i^0,w,c
  4931  003ADE  A0D8               	btfss	status,0,c
  4932  003AE0  EF74  F01D         	goto	u6911
  4933  003AE4  EF76  F01D         	goto	u6910
  4934  003AE8                     u6911:
  4935  003AE8  EFA7  F01D         	goto	l1351
  4936  003AEC                     u6910:
  4937  003AEC  5039               	movf	xtoa@n^0,w,c
  4938  003AEE  103A               	iorwf	(xtoa@n+1)^0,w,c
  4939  003AF0  103B               	iorwf	(xtoa@n+2)^0,w,c
  4940  003AF2  103C               	iorwf	(xtoa@n+3)^0,w,c
  4941  003AF4  103D               	iorwf	(xtoa@n+4)^0,w,c
  4942  003AF6  103E               	iorwf	(xtoa@n+5)^0,w,c
  4943  003AF8  103F               	iorwf	(xtoa@n+6)^0,w,c
  4944  003AFA  1040               	iorwf	(xtoa@n+7)^0,w,c
  4945  003AFC  A4D8               	btfss	status,2,c
  4946  003AFE  EF83  F01D         	goto	u6921
  4947  003B02  EF85  F01D         	goto	u6920
  4948  003B06                     u6921:
  4949  003B06  EFB5  F01C         	goto	l5616
  4950  003B0A                     u6920:
  4951  003B0A  BE36               	btfsc	(xtoa@p+1)^0,7,c
  4952  003B0C  EF92  F01D         	goto	u6930
  4953  003B10  5036               	movf	(xtoa@p+1)^0,w,c
  4954  003B12  E106               	bnz	u6931
  4955  003B14  0435               	decf	xtoa@p^0,w,c
  4956  003B16  B0D8               	btfsc	status,0,c
  4957  003B18  EF90  F01D         	goto	u6931
  4958  003B1C  EF92  F01D         	goto	u6930
  4959  003B20                     u6931:
  4960  003B20  EFB5  F01C         	goto	l5616
  4961  003B24                     u6930:
  4962  003B24  BE38               	btfsc	(xtoa@w+1)^0,7,c
  4963  003B26  EF9D  F01D         	goto	u6941
  4964  003B2A  5038               	movf	(xtoa@w+1)^0,w,c
  4965  003B2C  E108               	bnz	u6940
  4966  003B2E  0437               	decf	xtoa@w^0,w,c
  4967  003B30  A0D8               	btfss	status,0,c
  4968  003B32  EF9D  F01D         	goto	u6941
  4969  003B36  EF9F  F01D         	goto	u6940
  4970  003B3A                     u6941:
  4971  003B3A  EFA7  F01D         	goto	l1351
  4972  003B3E                     u6940:
  4973  003B3E  0100               	movlb	0	; () banked
  4974  003B40  B3F5               	btfsc	_flags& (0+255),1,b
  4975  003B42  EFA5  F01D         	goto	u6951
  4976  003B46  EFA7  F01D         	goto	u6950
  4977  003B4A                     u6951:
  4978  003B4A  EFB5  F01C         	goto	l5616
  4979  003B4E                     u6950:
  4980  003B4E                     l1351:
  4981                           
  4982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4983  003B4E  0100               	movlb	0	; () banked
  4984  003B50  A9F5               	btfss	_flags& (0+255),4,b
  4985  003B52  EFAD  F01D         	goto	u6961
  4986  003B56  EFAF  F01D         	goto	u6960
  4987  003B5A                     u6961:
  4988  003B5A  EFC5  F01D         	goto	l5662
  4989  003B5E                     u6960:
  4990  003B5E                     
  4991                           ; BSR set to: 0
  4992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  4993  003B5E  0641               	decf	xtoa@i^0,f,c
  4994  003B60  A0D8               	btfss	status,0,c
  4995  003B62  0642               	decf	(xtoa@i+1)^0,f,c
  4996  003B64                     
  4997                           ; BSR set to: 0
  4998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4999  003B64  0E5C               	movlw	low _dbuf
  5000  003B66  2441               	addwf	xtoa@i^0,w,c
  5001  003B68  6ED9               	movwf	fsr2l,c
  5002  003B6A  0E01               	movlw	high _dbuf
  5003  003B6C  2042               	addwfc	(xtoa@i+1)^0,w,c
  5004  003B6E  6EDA               	movwf	fsr2h,c
  5005  003B70  C028  FFDF         	movff	xtoa@x,indf2
  5006  003B74                     
  5007                           ; BSR set to: 0
  5008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  5009  003B74  0641               	decf	xtoa@i^0,f,c
  5010  003B76  A0D8               	btfss	status,0,c
  5011  003B78  0642               	decf	(xtoa@i+1)^0,f,c
  5012                           
  5013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5014  003B7A  0E5C               	movlw	low _dbuf
  5015  003B7C  2441               	addwf	xtoa@i^0,w,c
  5016  003B7E  6ED9               	movwf	fsr2l,c
  5017  003B80  0E01               	movlw	high _dbuf
  5018  003B82  2042               	addwfc	(xtoa@i+1)^0,w,c
  5019  003B84  6EDA               	movwf	fsr2h,c
  5020  003B86  0E30               	movlw	48
  5021  003B88  6EDF               	movwf	indf2,c
  5022  003B8A                     l5662:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5026  003B8A  C01E  F013         	movff	xtoa@fp,pad@fp
  5027  003B8E  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  5028  003B92  0E5C               	movlw	low _dbuf
  5029  003B94  2441               	addwf	xtoa@i^0,w,c
  5030  003B96  6E15               	movwf	pad@buf^0,c
  5031  003B98  0E01               	movlw	high _dbuf
  5032  003B9A  2042               	addwfc	(xtoa@i+1)^0,w,c
  5033  003B9C  6E16               	movwf	(pad@buf+1)^0,c
  5034  003B9E  C037  F017         	movff	xtoa@w,pad@p
  5035  003BA2  C038  F018         	movff	xtoa@w+1,pad@p+1
  5036  003BA6  ECD2  F02A         	call	_pad	;wreg free
  5037  003BAA  C013  F01E         	movff	?_pad,?_xtoa
  5038  003BAE  C014  F01F         	movff	?_pad+1,?_xtoa+1
  5039  003BB2  0012               	return		;funcret
  5040  003BB4                     __end_of_xtoa:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function _toupper *****************
  5044 ;; Defined at:
  5045 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  c               2    6[COMRAM] int 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  2    6[COMRAM] int 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5059 ;;      Params:         2       0       0       0       0       0       0       0       0
  5060 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5061 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5062 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5063 ;;Total ram usage:        8 bytes
  5064 ;; Hardware stack levels used: 1
  5065 ;; Hardware stack levels required when called: 1
  5066 ;; This function calls:
  5067 ;;		_islower
  5068 ;; This function is called by:
  5069 ;;		_xtoa
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text7
  5074  0059C6                     __ptext7:
  5075                           	callstack 0
  5076  0059C6                     _toupper:
  5077                           	callstack 24
  5078  0059C6  0E9F               	movlw	159
  5079  0059C8  6E09               	movwf	??_toupper^0,c
  5080  0059CA  0EFF               	movlw	255
  5081  0059CC  6E0A               	movwf	(??_toupper+1)^0,c
  5082  0059CE  C007  F00B         	movff	toupper@c,??_toupper+2
  5083  0059D2  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5084  0059D6  5009               	movf	??_toupper^0,w,c
  5085  0059D8  260B               	addwf	(??_toupper+2)^0,f,c
  5086  0059DA  500A               	movf	(??_toupper+1)^0,w,c
  5087  0059DC  220C               	addwfc	(??_toupper+3)^0,f,c
  5088  0059DE  500C               	movf	(??_toupper+3)^0,w,c
  5089  0059E0  E10A               	bnz	u5730
  5090  0059E2  0E1A               	movlw	26
  5091  0059E4  5C0B               	subwf	(??_toupper+2)^0,w,c
  5092  0059E6  A0D8               	btfss	status,0,c
  5093  0059E8  EFF8  F02C         	goto	u5731
  5094  0059EC  EFFB  F02C         	goto	u5730
  5095  0059F0                     u5731:
  5096  0059F0  0E01               	movlw	1
  5097  0059F2  EFFC  F02C         	goto	u5740
  5098  0059F6                     u5730:
  5099  0059F6  0E00               	movlw	0
  5100  0059F8                     u5740:
  5101  0059F8  6E0D               	movwf	_toupper$1869^0,c
  5102  0059FA  6A0E               	clrf	(_toupper$1869+1)^0,c
  5103  0059FC  500D               	movf	_toupper$1869^0,w,c
  5104  0059FE  100E               	iorwf	(_toupper$1869+1)^0,w,c
  5105  005A00  B4D8               	btfsc	status,2,c
  5106  005A02  EF05  F02D         	goto	u5751
  5107  005A06  EF07  F02D         	goto	u5750
  5108  005A0A                     u5751:
  5109  005A0A  EF0D  F02D         	goto	l1616
  5110  005A0E                     u5750:
  5111  005A0E  0E5F               	movlw	95
  5112  005A10  1407               	andwf	toupper@c^0,w,c
  5113  005A12  6E07               	movwf	?_toupper^0,c
  5114  005A14  6A08               	clrf	(?_toupper+1)^0,c
  5115  005A16  EF11  F02D         	goto	l1621
  5116  005A1A                     l1616:
  5117  005A1A  C007  F007         	movff	toupper@c,?_toupper
  5118  005A1E  C008  F008         	movff	toupper@c+1,?_toupper+1
  5119  005A22                     l1621:
  5120  005A22  0012               	return		;funcret
  5121  005A24                     __end_of_toupper:
  5122                           	callstack 0
  5123                           
  5124 ;; *************** function _islower *****************
  5125 ;; Defined at:
  5126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  c               2    0[COMRAM] int 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2    0[COMRAM] int 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5140 ;;      Params:         2       0       0       0       0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5142 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5143 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5144 ;;Total ram usage:        6 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_toupper
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text8
  5154  005DCA                     __ptext8:
  5155                           	callstack 0
  5156  005DCA                     _islower:
  5157                           	callstack 24
  5158  005DCA  0E9F               	movlw	159
  5159  005DCC  6E03               	movwf	??_islower^0,c
  5160  005DCE  0EFF               	movlw	255
  5161  005DD0  6E04               	movwf	(??_islower+1)^0,c
  5162  005DD2  C001  F005         	movff	islower@c,??_islower+2
  5163  005DD6  C002  F006         	movff	islower@c+1,??_islower+3
  5164  005DDA  5003               	movf	??_islower^0,w,c
  5165  005DDC  2605               	addwf	(??_islower+2)^0,f,c
  5166  005DDE  5004               	movf	(??_islower+1)^0,w,c
  5167  005DE0  2206               	addwfc	(??_islower+3)^0,f,c
  5168  005DE2  5006               	movf	(??_islower+3)^0,w,c
  5169  005DE4  E10A               	bnz	u4520
  5170  005DE6  0E1A               	movlw	26
  5171  005DE8  5C05               	subwf	(??_islower+2)^0,w,c
  5172  005DEA  A0D8               	btfss	status,0,c
  5173  005DEC  EFFA  F02E         	goto	u4521
  5174  005DF0  EFFD  F02E         	goto	u4520
  5175  005DF4                     u4521:
  5176  005DF4  0E01               	movlw	1
  5177  005DF6  EFFE  F02E         	goto	u4530
  5178  005DFA                     u4520:
  5179  005DFA  0E00               	movlw	0
  5180  005DFC                     u4530:
  5181  005DFC  6E01               	movwf	?_islower^0,c
  5182  005DFE  6A02               	clrf	(?_islower+1)^0,c
  5183  005E00  0012               	return		;funcret
  5184  005E02                     __end_of_islower:
  5185                           	callstack 0
  5186                           
  5187 ;; *************** function _isalpha *****************
  5188 ;; Defined at:
  5189 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  c               2    0[COMRAM] int 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  2    0[COMRAM] int 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5203 ;;      Params:         2       0       0       0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5205 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5206 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5207 ;;Total ram usage:        6 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_xtoa
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text9
  5217  005D54                     __ptext9:
  5218                           	callstack 0
  5219  005D54                     _isalpha:
  5220                           	callstack 25
  5221  005D54  0E9F               	movlw	159
  5222  005D56  6E03               	movwf	??_isalpha^0,c
  5223  005D58  0EFF               	movlw	255
  5224  005D5A  6E04               	movwf	(??_isalpha+1)^0,c
  5225  005D5C  0E20               	movlw	32
  5226  005D5E  1001               	iorwf	isalpha@c^0,w,c
  5227  005D60  6E05               	movwf	(??_isalpha+2)^0,c
  5228  005D62  0E00               	movlw	0
  5229  005D64  1002               	iorwf	(isalpha@c+1)^0,w,c
  5230  005D66  6E06               	movwf	(??_isalpha+3)^0,c
  5231  005D68  5003               	movf	??_isalpha^0,w,c
  5232  005D6A  2605               	addwf	(??_isalpha+2)^0,f,c
  5233  005D6C  5004               	movf	(??_isalpha+1)^0,w,c
  5234  005D6E  2206               	addwfc	(??_isalpha+3)^0,f,c
  5235  005D70  5006               	movf	(??_isalpha+3)^0,w,c
  5236  005D72  E10A               	bnz	u5710
  5237  005D74  0E1A               	movlw	26
  5238  005D76  5C05               	subwf	(??_isalpha+2)^0,w,c
  5239  005D78  A0D8               	btfss	status,0,c
  5240  005D7A  EFC1  F02E         	goto	u5711
  5241  005D7E  EFC4  F02E         	goto	u5710
  5242  005D82                     u5711:
  5243  005D82  0E01               	movlw	1
  5244  005D84  EFC5  F02E         	goto	u5720
  5245  005D88                     u5710:
  5246  005D88  0E00               	movlw	0
  5247  005D8A                     u5720:
  5248  005D8A  6E01               	movwf	?_isalpha^0,c
  5249  005D8C  6A02               	clrf	(?_isalpha+1)^0,c
  5250  005D8E  0012               	return		;funcret
  5251  005D90                     __end_of_isalpha:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function _utoa *****************
  5255 ;; Defined at:
  5256 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5259 ;;		 -> vsnprintf@f(6), 
  5260 ;;  d               8   31[COMRAM] unsigned long long 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  n               8   51[COMRAM] unsigned long long 
  5263 ;;  i               2   59[COMRAM] int 
  5264 ;;  w               2   49[COMRAM] int 
  5265 ;;  p               2   47[COMRAM] int 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  2   29[COMRAM] int 
  5268 ;; Registers used:
  5269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5275 ;;      Params:        10       0       0       0       0       0       0       0       0
  5276 ;;      Locals:        14       0       0       0       0       0       0       0       0
  5277 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5278 ;;      Totals:        32       0       0       0       0       0       0       0       0
  5279 ;;Total ram usage:       32 bytes
  5280 ;; Hardware stack levels used: 1
  5281 ;; Hardware stack levels required when called: 5
  5282 ;; This function calls:
  5283 ;;		___lodiv
  5284 ;;		___lomod
  5285 ;;		_pad
  5286 ;; This function is called by:
  5287 ;;		_vfpfcnvrt
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text10
  5292  00402C                     __ptext10:
  5293                           	callstack 0
  5294  00402C                     _utoa:
  5295                           	callstack 21
  5296  00402C                     
  5297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  5298  00402C  0100               	movlb	0	; () banked
  5299  00402E  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  5300  004030  EF1C  F020         	goto	u6731
  5301  004034  EF1E  F020         	goto	u6730
  5302  004038                     u6731:
  5303  004038  EF1F  F020         	goto	l5568
  5304  00403C                     u6730:
  5305  00403C                     
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  5308  00403C  93F5               	bcf	_flags& (0+255),1,b
  5309  00403E                     l5568:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  5313  00403E  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  5314  004040  EF2C  F020         	goto	u6740
  5315  004044  51F4               	movf	(_prec+1)& (0+255),w,b
  5316  004046  E106               	bnz	u6741
  5317  004048  05F3               	decf	_prec& (0+255),w,b
  5318  00404A  B0D8               	btfsc	status,0,c
  5319  00404C  EF2A  F020         	goto	u6741
  5320  004050  EF2C  F020         	goto	u6740
  5321  004054                     u6741:
  5322  004054  EF32  F020         	goto	l1313
  5323  004058                     u6740:
  5324  004058                     
  5325                           ; BSR set to: 0
  5326  004058  0E00               	movlw	0
  5327  00405A  6E31               	movwf	(utoa@p+1)^0,c
  5328  00405C  0E01               	movlw	1
  5329  00405E  6E30               	movwf	utoa@p^0,c
  5330  004060  EF36  F020         	goto	l1315
  5331  004064                     l1313:
  5332                           
  5333                           ; BSR set to: 0
  5334  004064  C0F3  F030         	movff	_prec,utoa@p
  5335  004068  C0F4  F031         	movff	_prec+1,utoa@p+1
  5336  00406C                     l1315:
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  5340  00406C  C0F1  F032         	movff	_width,utoa@w
  5341  004070  C0F2  F033         	movff	_width+1,utoa@w+1
  5342                           
  5343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  5344  004074  C020  F034         	movff	utoa@d,utoa@n
  5345  004078  C021  F035         	movff	utoa@d+1,utoa@n+1
  5346  00407C  C022  F036         	movff	utoa@d+2,utoa@n+2
  5347  004080  C023  F037         	movff	utoa@d+3,utoa@n+3
  5348  004084  C024  F038         	movff	utoa@d+4,utoa@n+4
  5349  004088  C025  F039         	movff	utoa@d+5,utoa@n+5
  5350  00408C  C026  F03A         	movff	utoa@d+6,utoa@n+6
  5351  004090  C027  F03B         	movff	utoa@d+7,utoa@n+7
  5352  004094                     
  5353                           ; BSR set to: 0
  5354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  5355  004094  0E00               	movlw	0
  5356  004096  6E3D               	movwf	(utoa@i+1)^0,c
  5357  004098  0E4F               	movlw	79
  5358  00409A  6E3C               	movwf	utoa@i^0,c
  5359  00409C                     
  5360                           ; BSR set to: 0
  5361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  5362  00409C  0E00               	movlw	0
  5363  00409E  0101               	movlb	1	; () banked
  5364  0040A0  6FAB               	movwf	(_dbuf+79)& (0+255),b
  5365                           
  5366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5367  0040A2  EFC9  F020         	goto	l5586
  5368  0040A6                     l5576:
  5369                           
  5370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  5371  0040A6  063C               	decf	utoa@i^0,f,c
  5372  0040A8  A0D8               	btfss	status,0,c
  5373  0040AA  063D               	decf	(utoa@i+1)^0,f,c
  5374  0040AC                     
  5375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  5376  0040AC  0E5C               	movlw	low _dbuf
  5377  0040AE  243C               	addwf	utoa@i^0,w,c
  5378  0040B0  6ED9               	movwf	fsr2l,c
  5379  0040B2  0E01               	movlw	high _dbuf
  5380  0040B4  203D               	addwfc	(utoa@i+1)^0,w,c
  5381  0040B6  6EDA               	movwf	fsr2h,c
  5382  0040B8  C034  F001         	movff	utoa@n,___lomod@dividend
  5383  0040BC  C035  F002         	movff	utoa@n+1,___lomod@dividend+1
  5384  0040C0  C036  F003         	movff	utoa@n+2,___lomod@dividend+2
  5385  0040C4  C037  F004         	movff	utoa@n+3,___lomod@dividend+3
  5386  0040C8  C038  F005         	movff	utoa@n+4,___lomod@dividend+4
  5387  0040CC  C039  F006         	movff	utoa@n+5,___lomod@dividend+5
  5388  0040D0  C03A  F007         	movff	utoa@n+6,___lomod@dividend+6
  5389  0040D4  C03B  F008         	movff	utoa@n+7,___lomod@dividend+7
  5390  0040D8  0E0A               	movlw	10
  5391  0040DA  6E09               	movwf	___lomod@divisor^0,c
  5392  0040DC  0E00               	movlw	0
  5393  0040DE  6E0A               	movwf	(___lomod@divisor+1)^0,c
  5394  0040E0  0E00               	movlw	0
  5395  0040E2  6E0B               	movwf	(___lomod@divisor+2)^0,c
  5396  0040E4  0E00               	movlw	0
  5397  0040E6  6E0C               	movwf	(___lomod@divisor+3)^0,c
  5398  0040E8  0E00               	movlw	0
  5399  0040EA  6E0D               	movwf	(___lomod@divisor+4)^0,c
  5400  0040EC  0E00               	movlw	0
  5401  0040EE  6E0E               	movwf	(___lomod@divisor+5)^0,c
  5402  0040F0  0E00               	movlw	0
  5403  0040F2  6E0F               	movwf	(___lomod@divisor+6)^0,c
  5404  0040F4  0E00               	movlw	0
  5405  0040F6  6E10               	movwf	(___lomod@divisor+7)^0,c
  5406  0040F8  EC05  F02A         	call	___lomod	;wreg free
  5407  0040FC  C001  F028         	movff	?___lomod,??_utoa
  5408  004100  C002  F029         	movff	?___lomod+1,??_utoa+1
  5409  004104  C003  F02A         	movff	?___lomod+2,??_utoa+2
  5410  004108  C004  F02B         	movff	?___lomod+3,??_utoa+3
  5411  00410C  C005  F02C         	movff	?___lomod+4,??_utoa+4
  5412  004110  C006  F02D         	movff	?___lomod+5,??_utoa+5
  5413  004114  C007  F02E         	movff	?___lomod+6,??_utoa+6
  5414  004118  C008  F02F         	movff	?___lomod+7,??_utoa+7
  5415  00411C  5028               	movf	??_utoa^0,w,c
  5416  00411E  0F30               	addlw	48
  5417  004120  6EDF               	movwf	indf2,c
  5418  004122                     
  5419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  5420  004122  0630               	decf	utoa@p^0,f,c
  5421  004124  A0D8               	btfss	status,0,c
  5422  004126  0631               	decf	(utoa@p+1)^0,f,c
  5423  004128                     
  5424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  5425  004128  0632               	decf	utoa@w^0,f,c
  5426  00412A  A0D8               	btfss	status,0,c
  5427  00412C  0633               	decf	(utoa@w+1)^0,f,c
  5428  00412E                     
  5429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  5430  00412E  C034  F001         	movff	utoa@n,___lodiv@dividend
  5431  004132  C035  F002         	movff	utoa@n+1,___lodiv@dividend+1
  5432  004136  C036  F003         	movff	utoa@n+2,___lodiv@dividend+2
  5433  00413A  C037  F004         	movff	utoa@n+3,___lodiv@dividend+3
  5434  00413E  C038  F005         	movff	utoa@n+4,___lodiv@dividend+4
  5435  004142  C039  F006         	movff	utoa@n+5,___lodiv@dividend+5
  5436  004146  C03A  F007         	movff	utoa@n+6,___lodiv@dividend+6
  5437  00414A  C03B  F008         	movff	utoa@n+7,___lodiv@dividend+7
  5438  00414E  0E0A               	movlw	10
  5439  004150  6E09               	movwf	___lodiv@divisor^0,c
  5440  004152  0E00               	movlw	0
  5441  004154  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  5442  004156  0E00               	movlw	0
  5443  004158  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  5444  00415A  0E00               	movlw	0
  5445  00415C  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  5446  00415E  0E00               	movlw	0
  5447  004160  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  5448  004162  0E00               	movlw	0
  5449  004164  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  5450  004166  0E00               	movlw	0
  5451  004168  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  5452  00416A  0E00               	movlw	0
  5453  00416C  6E10               	movwf	(___lodiv@divisor+7)^0,c
  5454  00416E  EC21  F029         	call	___lodiv	;wreg free
  5455  004172  C001  F034         	movff	?___lodiv,utoa@n
  5456  004176  C002  F035         	movff	?___lodiv+1,utoa@n+1
  5457  00417A  C003  F036         	movff	?___lodiv+2,utoa@n+2
  5458  00417E  C004  F037         	movff	?___lodiv+3,utoa@n+3
  5459  004182  C005  F038         	movff	?___lodiv+4,utoa@n+4
  5460  004186  C006  F039         	movff	?___lodiv+5,utoa@n+5
  5461  00418A  C007  F03A         	movff	?___lodiv+6,utoa@n+6
  5462  00418E  C008  F03B         	movff	?___lodiv+7,utoa@n+7
  5463  004192                     l5586:
  5464                           
  5465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5466  004192  503C               	movf	utoa@i^0,w,c
  5467  004194  103D               	iorwf	(utoa@i+1)^0,w,c
  5468  004196  B4D8               	btfsc	status,2,c
  5469  004198  EFD0  F020         	goto	u6751
  5470  00419C  EFD2  F020         	goto	u6750
  5471  0041A0                     u6751:
  5472  0041A0  EF03  F021         	goto	l5596
  5473  0041A4                     u6750:
  5474  0041A4  5034               	movf	utoa@n^0,w,c
  5475  0041A6  1035               	iorwf	(utoa@n+1)^0,w,c
  5476  0041A8  1036               	iorwf	(utoa@n+2)^0,w,c
  5477  0041AA  1037               	iorwf	(utoa@n+3)^0,w,c
  5478  0041AC  1038               	iorwf	(utoa@n+4)^0,w,c
  5479  0041AE  1039               	iorwf	(utoa@n+5)^0,w,c
  5480  0041B0  103A               	iorwf	(utoa@n+6)^0,w,c
  5481  0041B2  103B               	iorwf	(utoa@n+7)^0,w,c
  5482  0041B4  A4D8               	btfss	status,2,c
  5483  0041B6  EFDF  F020         	goto	u6761
  5484  0041BA  EFE1  F020         	goto	u6760
  5485  0041BE                     u6761:
  5486  0041BE  EF53  F020         	goto	l5576
  5487  0041C2                     u6760:
  5488  0041C2  BE31               	btfsc	(utoa@p+1)^0,7,c
  5489  0041C4  EFEE  F020         	goto	u6770
  5490  0041C8  5031               	movf	(utoa@p+1)^0,w,c
  5491  0041CA  E106               	bnz	u6771
  5492  0041CC  0430               	decf	utoa@p^0,w,c
  5493  0041CE  B0D8               	btfsc	status,0,c
  5494  0041D0  EFEC  F020         	goto	u6771
  5495  0041D4  EFEE  F020         	goto	u6770
  5496  0041D8                     u6771:
  5497  0041D8  EF53  F020         	goto	l5576
  5498  0041DC                     u6770:
  5499  0041DC  BE33               	btfsc	(utoa@w+1)^0,7,c
  5500  0041DE  EFF9  F020         	goto	u6781
  5501  0041E2  5033               	movf	(utoa@w+1)^0,w,c
  5502  0041E4  E108               	bnz	u6780
  5503  0041E6  0432               	decf	utoa@w^0,w,c
  5504  0041E8  A0D8               	btfss	status,0,c
  5505  0041EA  EFF9  F020         	goto	u6781
  5506  0041EE  EFFB  F020         	goto	u6780
  5507  0041F2                     u6781:
  5508  0041F2  EF03  F021         	goto	l5596
  5509  0041F6                     u6780:
  5510  0041F6  0100               	movlb	0	; () banked
  5511  0041F8  B3F5               	btfsc	_flags& (0+255),1,b
  5512  0041FA  EF01  F021         	goto	u6791
  5513  0041FE  EF03  F021         	goto	u6790
  5514  004202                     u6791:
  5515  004202  EF53  F020         	goto	l5576
  5516  004206                     u6790:
  5517  004206                     l5596:
  5518                           
  5519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  5520  004206  C01E  F013         	movff	utoa@fp,pad@fp
  5521  00420A  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  5522  00420E  0E5C               	movlw	low _dbuf
  5523  004210  243C               	addwf	utoa@i^0,w,c
  5524  004212  6E15               	movwf	pad@buf^0,c
  5525  004214  0E01               	movlw	high _dbuf
  5526  004216  203D               	addwfc	(utoa@i+1)^0,w,c
  5527  004218  6E16               	movwf	(pad@buf+1)^0,c
  5528  00421A  C032  F017         	movff	utoa@w,pad@p
  5529  00421E  C033  F018         	movff	utoa@w+1,pad@p+1
  5530  004222  ECD2  F02A         	call	_pad	;wreg free
  5531  004226  C013  F01E         	movff	?_pad,?_utoa
  5532  00422A  C014  F01F         	movff	?_pad+1,?_utoa+1
  5533  00422E  0012               	return		;funcret
  5534  004230                     __end_of_utoa:
  5535                           	callstack 0
  5536                           
  5537 ;; *************** function ___lomod *****************
  5538 ;; Defined at:
  5539 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  dividend        8    0[COMRAM] unsigned long long 
  5542 ;;  divisor         8    8[COMRAM] unsigned long long 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  counter         1   16[COMRAM] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  8    0[COMRAM] unsigned long long 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5554 ;;      Params:        16       0       0       0       0       0       0       0       0
  5555 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5557 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5558 ;;Total ram usage:       17 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_utoa
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           	psect	text11
  5568  00540A                     __ptext11:
  5569                           	callstack 0
  5570  00540A                     ___lomod:
  5571                           	callstack 25
  5572  00540A  5009               	movf	___lomod@divisor^0,w,c
  5573  00540C  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  5574  00540E  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  5575  005410  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  5576  005412  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  5577  005414  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  5578  005416  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  5579  005418  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  5580  00541A  B4D8               	btfsc	status,2,c
  5581  00541C  EF12  F02A         	goto	u5411
  5582  005420  EF14  F02A         	goto	u5410
  5583  005424                     u5411:
  5584  005424  EF5C  F02A         	goto	l837
  5585  005428                     u5410:
  5586  005428  0E01               	movlw	1
  5587  00542A  6E11               	movwf	___lomod@counter^0,c
  5588  00542C  EF22  F02A         	goto	l4946
  5589  005430                     l4944:
  5590  005430  90D8               	bcf	status,0,c
  5591  005432  3609               	rlcf	___lomod@divisor^0,f,c
  5592  005434  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  5593  005436  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  5594  005438  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  5595  00543A  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  5596  00543C  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  5597  00543E  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  5598  005440  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  5599  005442  2A11               	incf	___lomod@counter^0,f,c
  5600  005444                     l4946:
  5601  005444  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  5602  005446  EF27  F02A         	goto	u5421
  5603  00544A  EF29  F02A         	goto	u5420
  5604  00544E                     u5421:
  5605  00544E  EF18  F02A         	goto	l4944
  5606  005452                     u5420:
  5607  005452                     l4948:
  5608  005452  5009               	movf	___lomod@divisor^0,w,c
  5609  005454  5C01               	subwf	___lomod@dividend^0,w,c
  5610  005456  500A               	movf	(___lomod@divisor+1)^0,w,c
  5611  005458  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  5612  00545A  500B               	movf	(___lomod@divisor+2)^0,w,c
  5613  00545C  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  5614  00545E  500C               	movf	(___lomod@divisor+3)^0,w,c
  5615  005460  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  5616  005462  500D               	movf	(___lomod@divisor+4)^0,w,c
  5617  005464  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  5618  005466  500E               	movf	(___lomod@divisor+5)^0,w,c
  5619  005468  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  5620  00546A  500F               	movf	(___lomod@divisor+6)^0,w,c
  5621  00546C  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  5622  00546E  5010               	movf	(___lomod@divisor+7)^0,w,c
  5623  005470  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  5624  005472  A0D8               	btfss	status,0,c
  5625  005474  EF3E  F02A         	goto	u5431
  5626  005478  EF40  F02A         	goto	u5430
  5627  00547C                     u5431:
  5628  00547C  EF50  F02A         	goto	l4952
  5629  005480                     u5430:
  5630  005480  5009               	movf	___lomod@divisor^0,w,c
  5631  005482  5E01               	subwf	___lomod@dividend^0,f,c
  5632  005484  500A               	movf	(___lomod@divisor+1)^0,w,c
  5633  005486  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  5634  005488  500B               	movf	(___lomod@divisor+2)^0,w,c
  5635  00548A  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  5636  00548C  500C               	movf	(___lomod@divisor+3)^0,w,c
  5637  00548E  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  5638  005490  500D               	movf	(___lomod@divisor+4)^0,w,c
  5639  005492  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  5640  005494  500E               	movf	(___lomod@divisor+5)^0,w,c
  5641  005496  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  5642  005498  500F               	movf	(___lomod@divisor+6)^0,w,c
  5643  00549A  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  5644  00549C  5010               	movf	(___lomod@divisor+7)^0,w,c
  5645  00549E  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  5646  0054A0                     l4952:
  5647  0054A0  90D8               	bcf	status,0,c
  5648  0054A2  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  5649  0054A4  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  5650  0054A6  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  5651  0054A8  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  5652  0054AA  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  5653  0054AC  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  5654  0054AE  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  5655  0054B0  3209               	rrcf	___lomod@divisor^0,f,c
  5656  0054B2  2E11               	decfsz	___lomod@counter^0,f,c
  5657  0054B4  EF29  F02A         	goto	l4948
  5658  0054B8                     l837:
  5659  0054B8  C001  F001         	movff	___lomod@dividend,?___lomod
  5660  0054BC  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5661  0054C0  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5662  0054C4  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5663  0054C8  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5664  0054CC  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5665  0054D0  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5666  0054D4  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5667  0054D8  0012               	return		;funcret
  5668  0054DA                     __end_of___lomod:
  5669                           	callstack 0
  5670                           
  5671 ;; *************** function ___lodiv *****************
  5672 ;; Defined at:
  5673 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  dividend        8    0[COMRAM] unsigned long long 
  5676 ;;  divisor         8    8[COMRAM] unsigned long long 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  quotient        8   16[COMRAM] unsigned long long 
  5679 ;;  counter         1   24[COMRAM] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  8    0[COMRAM] unsigned long long 
  5682 ;; Registers used:
  5683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5689 ;;      Params:        16       0       0       0       0       0       0       0       0
  5690 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5692 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5693 ;;Total ram usage:       25 bytes
  5694 ;; Hardware stack levels used: 1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_utoa
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text12
  5703  005242                     __ptext12:
  5704                           	callstack 0
  5705  005242                     ___lodiv:
  5706                           	callstack 25
  5707  005242  EE20  F011         	lfsr	2,___lodiv@quotient
  5708  005246  0E07               	movlw	7
  5709  005248                     u5371:
  5710  005248  6ADE               	clrf	postinc2,c
  5711  00524A  06E8               	decf	wreg,f,c
  5712  00524C  E2FD               	bc	u5371
  5713  00524E  5009               	movf	___lodiv@divisor^0,w,c
  5714  005250  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  5715  005252  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  5716  005254  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  5717  005256  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  5718  005258  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  5719  00525A  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  5720  00525C  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  5721  00525E  B4D8               	btfsc	status,2,c
  5722  005260  EF34  F029         	goto	u5381
  5723  005264  EF36  F029         	goto	u5380
  5724  005268                     u5381:
  5725  005268  EF88  F029         	goto	l827
  5726  00526C                     u5380:
  5727  00526C  0E01               	movlw	1
  5728  00526E  6E19               	movwf	___lodiv@counter^0,c
  5729  005270  EF44  F029         	goto	l4926
  5730  005274                     l4924:
  5731  005274  90D8               	bcf	status,0,c
  5732  005276  3609               	rlcf	___lodiv@divisor^0,f,c
  5733  005278  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  5734  00527A  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  5735  00527C  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  5736  00527E  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  5737  005280  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  5738  005282  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  5739  005284  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  5740  005286  2A19               	incf	___lodiv@counter^0,f,c
  5741  005288                     l4926:
  5742  005288  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  5743  00528A  EF49  F029         	goto	u5391
  5744  00528E  EF4B  F029         	goto	u5390
  5745  005292                     u5391:
  5746  005292  EF3A  F029         	goto	l4924
  5747  005296                     u5390:
  5748  005296                     l4928:
  5749  005296  90D8               	bcf	status,0,c
  5750  005298  3611               	rlcf	___lodiv@quotient^0,f,c
  5751  00529A  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  5752  00529C  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  5753  00529E  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  5754  0052A0  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  5755  0052A2  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  5756  0052A4  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  5757  0052A6  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  5758  0052A8  5009               	movf	___lodiv@divisor^0,w,c
  5759  0052AA  5C01               	subwf	___lodiv@dividend^0,w,c
  5760  0052AC  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5761  0052AE  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  5762  0052B0  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5763  0052B2  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  5764  0052B4  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5765  0052B6  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  5766  0052B8  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5767  0052BA  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  5768  0052BC  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5769  0052BE  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  5770  0052C0  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5771  0052C2  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  5772  0052C4  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5773  0052C6  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  5774  0052C8  A0D8               	btfss	status,0,c
  5775  0052CA  EF69  F029         	goto	u5401
  5776  0052CE  EF6B  F029         	goto	u5400
  5777  0052D2                     u5401:
  5778  0052D2  EF7C  F029         	goto	l4936
  5779  0052D6                     u5400:
  5780  0052D6  5009               	movf	___lodiv@divisor^0,w,c
  5781  0052D8  5E01               	subwf	___lodiv@dividend^0,f,c
  5782  0052DA  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5783  0052DC  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  5784  0052DE  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5785  0052E0  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  5786  0052E2  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5787  0052E4  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  5788  0052E6  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5789  0052E8  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  5790  0052EA  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5791  0052EC  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  5792  0052EE  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5793  0052F0  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  5794  0052F2  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5795  0052F4  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  5796  0052F6  8011               	bsf	___lodiv@quotient^0,0,c
  5797  0052F8                     l4936:
  5798  0052F8  90D8               	bcf	status,0,c
  5799  0052FA  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  5800  0052FC  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  5801  0052FE  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  5802  005300  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  5803  005302  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  5804  005304  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  5805  005306  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  5806  005308  3209               	rrcf	___lodiv@divisor^0,f,c
  5807  00530A  2E19               	decfsz	___lodiv@counter^0,f,c
  5808  00530C  EF4B  F029         	goto	l4928
  5809  005310                     l827:
  5810  005310  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5811  005314  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5812  005318  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5813  00531C  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5814  005320  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5815  005324  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5816  005328  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5817  00532C  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5818  005330  0012               	return		;funcret
  5819  005332                     __end_of___lodiv:
  5820                           	callstack 0
  5821                           
  5822 ;; *************** function _strncmp *****************
  5823 ;; Defined at:
  5824 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5827 ;;		 -> vfpfcnvrt@ct(3), STR_9(12), NULL(0), trama(30), 
  5828 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5829 ;;		 -> STR_119(3), STR_115(3), STR_110(3), STR_106(3), 
  5830 ;;		 -> STR_101(4), STR_97(4), STR_92(3), STR_87(3), 
  5831 ;;		 -> STR_82(4), STR_77(3), STR_72(3), STR_67(4), 
  5832 ;;		 -> STR_62(3), STR_57(3), STR_52(4), STR_47(3), 
  5833 ;;		 -> STR_42(3), STR_38(3), STR_33(3), STR_29(3), 
  5834 ;;		 -> STR_24(4), STR_20(4), STR_8(3), STR_6(6), 
  5835 ;;		 -> STR_4(3), STR_2(6), 
  5836 ;;  n               2    4[COMRAM] unsigned int 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5839 ;;		 -> STR_119(3), STR_115(3), STR_110(3), STR_106(3), 
  5840 ;;		 -> STR_101(4), STR_97(4), STR_92(3), STR_87(3), 
  5841 ;;		 -> STR_82(4), STR_77(3), STR_72(3), STR_67(4), 
  5842 ;;		 -> STR_62(3), STR_57(3), STR_52(4), STR_47(3), 
  5843 ;;		 -> STR_42(3), STR_38(3), STR_33(3), STR_29(3), 
  5844 ;;		 -> STR_24(4), STR_20(4), STR_8(3), STR_6(6), 
  5845 ;;		 -> STR_4(3), STR_2(6), 
  5846 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5847 ;;		 -> vfpfcnvrt@ct(3), STR_9(12), NULL(0), trama(30), 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  2    0[COMRAM] int 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5857 ;;      Params:         6       0       0       0       0       0       0       0       0
  5858 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5859 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5860 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5861 ;;Total ram usage:       11 bytes
  5862 ;; Hardware stack levels used: 1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_vfpfcnvrt
  5867 ;;		_strstr
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text13
  5872  004E20                     __ptext13:
  5873                           	callstack 0
  5874  004E20                     _strncmp:
  5875                           	callstack 26
  5876  004E20  C001  F008         	movff	strncmp@_l,strncmp@l
  5877  004E24  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5878  004E28  C003  F00A         	movff	strncmp@_r,strncmp@r
  5879  004E2C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5880  004E30  0605               	decf	strncmp@n^0,f,c
  5881  004E32  A0D8               	btfss	status,0,c
  5882  004E34  0606               	decf	(strncmp@n+1)^0,f,c
  5883  004E36  2805               	incf	strncmp@n^0,w,c
  5884  004E38  E106               	bnz	u7041
  5885  004E3A  2806               	incf	(strncmp@n+1)^0,w,c
  5886  004E3C  A4D8               	btfss	status,2,c
  5887  004E3E  EF23  F027         	goto	u7041
  5888  004E42  EF25  F027         	goto	u7040
  5889  004E46                     u7041:
  5890  004E46  EF32  F027         	goto	l5716
  5891  004E4A                     u7040:
  5892  004E4A  0E00               	movlw	0
  5893  004E4C  6E02               	movwf	(?_strncmp+1)^0,c
  5894  004E4E  0E00               	movlw	0
  5895  004E50  6E01               	movwf	?_strncmp^0,c
  5896  004E52  EF9C  F027         	goto	l1571
  5897  004E56                     l5714:
  5898  004E56  4A08               	infsnz	strncmp@l^0,f,c
  5899  004E58  2A09               	incf	(strncmp@l+1)^0,f,c
  5900  004E5A  4A0A               	infsnz	strncmp@r^0,f,c
  5901  004E5C  2A0B               	incf	(strncmp@r+1)^0,f,c
  5902  004E5E  0605               	decf	strncmp@n^0,f,c
  5903  004E60  A0D8               	btfss	status,0,c
  5904  004E62  0606               	decf	(strncmp@n+1)^0,f,c
  5905  004E64                     l5716:
  5906  004E64  C008  FFF6         	movff	strncmp@l,tblptrl
  5907  004E68  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5908  004E6C  6AF8               	clrf	tblptru,c
  5909  004E6E  0E07               	movlw	(high __ramtop+-1)
  5910  004E70  64F7               	cpfsgt	tblptrh,c
  5911  004E72  D003               	bra	u7057
  5912  004E74  0008               	tblrd		*
  5913  004E76  50F5               	movf	tablat,w,c
  5914  004E78  D005               	bra	u7050
  5915  004E7A                     u7057:
  5916  004E7A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5917  004E7E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5918  004E82  50EF               	movf	indf0,w,c
  5919  004E84                     u7050:
  5920  004E84  0900               	iorlw	0
  5921  004E86  B4D8               	btfsc	status,2,c
  5922  004E88  EF48  F027         	goto	u7061
  5923  004E8C  EF4A  F027         	goto	u7060
  5924  004E90                     u7061:
  5925  004E90  EF80  F027         	goto	l5724
  5926  004E94                     u7060:
  5927  004E94  C00A  FFF6         	movff	strncmp@r,tblptrl
  5928  004E98  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5929  004E9C                     	if	0	;tblptru may be non-zero
  5930  004E9C                     	endif
  5931  004E9C                     	if	0	;tblptru may be non-zero
  5932  004E9C                     	endif
  5933  004E9C  0008               	tblrd		*
  5934  004E9E  50F5               	movf	tablat,w,c
  5935  004EA0  0900               	iorlw	0
  5936  004EA2  B4D8               	btfsc	status,2,c
  5937  004EA4  EF56  F027         	goto	u7071
  5938  004EA8  EF58  F027         	goto	u7070
  5939  004EAC                     u7071:
  5940  004EAC  EF80  F027         	goto	l5724
  5941  004EB0                     u7070:
  5942  004EB0  5005               	movf	strncmp@n^0,w,c
  5943  004EB2  1006               	iorwf	(strncmp@n+1)^0,w,c
  5944  004EB4  B4D8               	btfsc	status,2,c
  5945  004EB6  EF5F  F027         	goto	u7081
  5946  004EBA  EF61  F027         	goto	u7080
  5947  004EBE                     u7081:
  5948  004EBE  EF80  F027         	goto	l5724
  5949  004EC2                     u7080:
  5950  004EC2  C00A  FFF6         	movff	strncmp@r,tblptrl
  5951  004EC6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5952  004ECA                     	if	0	;tblptru may be non-zero
  5953  004ECA                     	endif
  5954  004ECA                     	if	0	;tblptru may be non-zero
  5955  004ECA                     	endif
  5956  004ECA  0008               	tblrd		*
  5957  004ECC  CFF5 F007          	movff	tablat,??_strncmp
  5958  004ED0  C008  FFF6         	movff	strncmp@l,tblptrl
  5959  004ED4  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5960  004ED8  6AF8               	clrf	tblptru,c
  5961  004EDA  0E07               	movlw	(high __ramtop+-1)
  5962  004EDC  64F7               	cpfsgt	tblptrh,c
  5963  004EDE  D003               	bra	u7097
  5964  004EE0  0008               	tblrd		*
  5965  004EE2  50F5               	movf	tablat,w,c
  5966  004EE4  D005               	bra	u7095
  5967  004EE6                     u7097:
  5968  004EE6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5969  004EEA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5970  004EEE  50EF               	movf	indf0,w,c
  5971  004EF0                     u7095:
  5972  004EF0  1807               	xorwf	??_strncmp^0,w,c
  5973  004EF2  B4D8               	btfsc	status,2,c
  5974  004EF4  EF7E  F027         	goto	u7091
  5975  004EF8  EF80  F027         	goto	u7090
  5976  004EFC                     u7091:
  5977  004EFC  EF2B  F027         	goto	l5714
  5978  004F00                     u7090:
  5979  004F00                     l5724:
  5980  004F00  C008  FFF6         	movff	strncmp@l,tblptrl
  5981  004F04  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5982  004F08  6AF8               	clrf	tblptru,c
  5983  004F0A  0E07               	movlw	(high __ramtop+-1)
  5984  004F0C  64F7               	cpfsgt	tblptrh,c
  5985  004F0E  D003               	bra	u7107
  5986  004F10  0008               	tblrd		*
  5987  004F12  50F5               	movf	tablat,w,c
  5988  004F14  D005               	bra	u7100
  5989  004F16                     u7107:
  5990  004F16  CFF6 FFE9          	movff	tblptrl,fsr0l
  5991  004F1A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5992  004F1E  50EF               	movf	indf0,w,c
  5993  004F20                     u7100:
  5994  004F20  6E07               	movwf	??_strncmp^0,c
  5995  004F22  C00A  FFF6         	movff	strncmp@r,tblptrl
  5996  004F26  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5997  004F2A                     	if	0	;tblptru may be non-zero
  5998  004F2A                     	endif
  5999  004F2A                     	if	0	;tblptru may be non-zero
  6000  004F2A                     	endif
  6001  004F2A  0008               	tblrd		*
  6002  004F2C  50F5               	movf	tablat,w,c
  6003  004F2E  5C07               	subwf	??_strncmp^0,w,c
  6004  004F30  6E01               	movwf	?_strncmp^0,c
  6005  004F32  6A02               	clrf	(?_strncmp+1)^0,c
  6006  004F34  A0D8               	btfss	status,0,c
  6007  004F36  0602               	decf	(?_strncmp+1)^0,f,c
  6008  004F38                     l1571:
  6009  004F38  0012               	return		;funcret
  6010  004F3A                     __end_of_strncmp:
  6011                           	callstack 0
  6012                           
  6013 ;; *************** function _stoa *****************
  6014 ;; Defined at:
  6015 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6018 ;;		 -> vsnprintf@f(6), 
  6019 ;;  s               2   13[COMRAM] PTR unsigned char 
  6020 ;;		 -> ?_snprintf(2), 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  nuls            7   16[COMRAM] unsigned char [7]
  6023 ;;  l               2   31[COMRAM] int 
  6024 ;;  p               2   29[COMRAM] int 
  6025 ;;  cp              2   27[COMRAM] PTR unsigned char 
  6026 ;;		 -> stoa@nuls(7), ?_snprintf(2), 
  6027 ;;  w               2   25[COMRAM] int 
  6028 ;;  i               2   23[COMRAM] int 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2   11[COMRAM] int 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6038 ;;      Params:         4       0       0       0       0       0       0       0       0
  6039 ;;      Locals:        17       0       0       0       0       0       0       0       0
  6040 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6041 ;;      Totals:        22       0       0       0       0       0       0       0       0
  6042 ;;Total ram usage:       22 bytes
  6043 ;; Hardware stack levels used: 1
  6044 ;; Hardware stack levels required when called: 3
  6045 ;; This function calls:
  6046 ;;		_fputc
  6047 ;;		_strlen
  6048 ;; This function is called by:
  6049 ;;		_vfpfcnvrt
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text14
  6054  0048EC                     __ptext14:
  6055                           	callstack 0
  6056  0048EC                     _stoa:
  6057                           	callstack 23
  6058  0048EC                     
  6059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  6060  0048EC  EE21  F0E6         	lfsr	2,stoa@F1176
  6061  0048F0  EE10  F011         	lfsr	1,stoa@nuls
  6062  0048F4  0E06               	movlw	6
  6063  0048F6                     u6641:
  6064  0048F6  CFDB FFE3          	movff	plusw2,plusw1
  6065  0048FA  06E8               	decf	wreg,f,c
  6066  0048FC  E2FC               	bc	u6641
  6067  0048FE                     
  6068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  6069  0048FE  C00E  F01C         	movff	stoa@s,stoa@cp
  6070  004902  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  6071  004906                     
  6072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  6073  004906  501C               	movf	stoa@cp^0,w,c
  6074  004908  101D               	iorwf	(stoa@cp+1)^0,w,c
  6075  00490A  A4D8               	btfss	status,2,c
  6076  00490C  EF8A  F024         	goto	u6651
  6077  004910  EF8C  F024         	goto	u6650
  6078  004914                     u6651:
  6079  004914  EF90  F024         	goto	l5530
  6080  004918                     u6650:
  6081  004918                     
  6082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  6083  004918  0E11               	movlw	low stoa@nuls
  6084  00491A  6E1C               	movwf	stoa@cp^0,c
  6085  00491C  0E00               	movlw	high stoa@nuls
  6086  00491E  6E1D               	movwf	(stoa@cp+1)^0,c
  6087  004920                     l5530:
  6088                           
  6089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  6090  004920  C01C  F001         	movff	stoa@cp,strlen@s
  6091  004924  C01D  F002         	movff	stoa@cp+1,strlen@s+1
  6092  004928  EC94  F02D         	call	_strlen	;wreg free
  6093  00492C  C001  F020         	movff	?_strlen,stoa@l
  6094  004930  C002  F021         	movff	?_strlen+1,stoa@l+1
  6095  004934                     
  6096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  6097  004934  C0F3  F01E         	movff	_prec,stoa@p
  6098  004938  C0F4  F01F         	movff	_prec+1,stoa@p+1
  6099  00493C                     
  6100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  6101  00493C  BE1F               	btfsc	(stoa@p+1)^0,7,c
  6102  00493E  EFA3  F024         	goto	u6661
  6103  004942  EFA5  F024         	goto	u6660
  6104  004946                     u6661:
  6105  004946  EFBA  F024         	goto	l1294
  6106  00494A                     u6660:
  6107  00494A  5020               	movf	stoa@l^0,w,c
  6108  00494C  5C1E               	subwf	stoa@p^0,w,c
  6109  00494E  501F               	movf	(stoa@p+1)^0,w,c
  6110  004950  0A80               	xorlw	128
  6111  004952  6E10               	movwf	??_stoa^0,c
  6112  004954  5021               	movf	(stoa@l+1)^0,w,c
  6113  004956  0A80               	xorlw	128
  6114  004958  5810               	subwfb	??_stoa^0,w,c
  6115  00495A  A0D8               	btfss	status,0,c
  6116  00495C  EFB2  F024         	goto	u6671
  6117  004960  EFB4  F024         	goto	u6670
  6118  004964                     u6671:
  6119  004964  EFB6  F024         	goto	l1292
  6120  004968                     u6670:
  6121  004968  EFBA  F024         	goto	l1294
  6122  00496C                     l1292:
  6123  00496C  C01E  F020         	movff	stoa@p,stoa@l
  6124  004970  C01F  F021         	movff	stoa@p+1,stoa@l+1
  6125  004974                     l1294:
  6126                           
  6127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  6128  004974  C020  F01E         	movff	stoa@l,stoa@p
  6129  004978  C021  F01F         	movff	stoa@l+1,stoa@p+1
  6130                           
  6131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  6132  00497C  C0F1  F01A         	movff	_width,stoa@w
  6133  004980  C0F2  F01B         	movff	_width+1,stoa@w+1
  6134                           
  6135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  6136  004984  0100               	movlb	0	; () banked
  6137  004986  B1F5               	btfsc	_flags& (0+255),0,b
  6138  004988  EFC8  F024         	goto	u6681
  6139  00498C  EFCA  F024         	goto	u6680
  6140  004990                     u6681:
  6141  004990  EFE7  F024         	goto	l5546
  6142  004994                     u6680:
  6143  004994  EFD8  F024         	goto	l5544
  6144  004998                     l5540:
  6145                           
  6146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  6147  004998  0E00               	movlw	0
  6148  00499A  6E04               	movwf	(fputc@c+1)^0,c
  6149  00499C  0E20               	movlw	32
  6150  00499E  6E03               	movwf	fputc@c^0,c
  6151  0049A0  C00C  F005         	movff	stoa@fp,fputc@fp
  6152  0049A4  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  6153  0049A8  EC6D  F02A         	call	_fputc	;wreg free
  6154  0049AC                     
  6155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  6156  0049AC  4A20               	infsnz	stoa@l^0,f,c
  6157  0049AE  2A21               	incf	(stoa@l+1)^0,f,c
  6158  0049B0                     l5544:
  6159                           
  6160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  6161  0049B0  501A               	movf	stoa@w^0,w,c
  6162  0049B2  5C20               	subwf	stoa@l^0,w,c
  6163  0049B4  5021               	movf	(stoa@l+1)^0,w,c
  6164  0049B6  0A80               	xorlw	128
  6165  0049B8  6E10               	movwf	??_stoa^0,c
  6166  0049BA  501B               	movf	(stoa@w+1)^0,w,c
  6167  0049BC  0A80               	xorlw	128
  6168  0049BE  5810               	subwfb	??_stoa^0,w,c
  6169  0049C0  A0D8               	btfss	status,0,c
  6170  0049C2  EFE5  F024         	goto	u6691
  6171  0049C6  EFE7  F024         	goto	u6690
  6172  0049CA                     u6691:
  6173  0049CA  EFCC  F024         	goto	l5540
  6174  0049CE                     u6690:
  6175  0049CE                     l5546:
  6176                           
  6177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  6178  0049CE  0E00               	movlw	0
  6179  0049D0  6E19               	movwf	(stoa@i+1)^0,c
  6180  0049D2  0E00               	movlw	0
  6181  0049D4  6E18               	movwf	stoa@i^0,c
  6182                           
  6183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  6184  0049D6  EF00  F025         	goto	l5554
  6185  0049DA                     l5548:
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  6188  0049DA  C01C  FFD9         	movff	stoa@cp,fsr2l
  6189  0049DE  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  6190  0049E2  50DF               	movf	indf2,w,c
  6191  0049E4  6E10               	movwf	??_stoa^0,c
  6192  0049E6  5010               	movf	??_stoa^0,w,c
  6193  0049E8  6E03               	movwf	fputc@c^0,c
  6194  0049EA  6A04               	clrf	(fputc@c+1)^0,c
  6195  0049EC  C00C  F005         	movff	stoa@fp,fputc@fp
  6196  0049F0  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  6197  0049F4  EC6D  F02A         	call	_fputc	;wreg free
  6198  0049F8                     
  6199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  6200  0049F8  4A1C               	infsnz	stoa@cp^0,f,c
  6201  0049FA  2A1D               	incf	(stoa@cp+1)^0,f,c
  6202  0049FC                     
  6203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  6204  0049FC  4A18               	infsnz	stoa@i^0,f,c
  6205  0049FE  2A19               	incf	(stoa@i+1)^0,f,c
  6206  004A00                     l5554:
  6207                           
  6208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  6209  004A00  501E               	movf	stoa@p^0,w,c
  6210  004A02  5C18               	subwf	stoa@i^0,w,c
  6211  004A04  5019               	movf	(stoa@i+1)^0,w,c
  6212  004A06  0A80               	xorlw	128
  6213  004A08  6E10               	movwf	??_stoa^0,c
  6214  004A0A  501F               	movf	(stoa@p+1)^0,w,c
  6215  004A0C  0A80               	xorlw	128
  6216  004A0E  5810               	subwfb	??_stoa^0,w,c
  6217  004A10  A0D8               	btfss	status,0,c
  6218  004A12  EF0D  F025         	goto	u6701
  6219  004A16  EF0F  F025         	goto	u6700
  6220  004A1A                     u6701:
  6221  004A1A  EFED  F024         	goto	l5548
  6222  004A1E                     u6700:
  6223  004A1E                     
  6224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  6225  004A1E  0100               	movlb	0	; () banked
  6226  004A20  A1F5               	btfss	_flags& (0+255),0,b
  6227  004A22  EF15  F025         	goto	u6711
  6228  004A26  EF17  F025         	goto	u6710
  6229  004A2A                     u6711:
  6230  004A2A  EF34  F025         	goto	l1304
  6231  004A2E                     u6710:
  6232  004A2E  EF25  F025         	goto	l5562
  6233  004A32                     l5558:
  6234                           
  6235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  6236  004A32  0E00               	movlw	0
  6237  004A34  6E04               	movwf	(fputc@c+1)^0,c
  6238  004A36  0E20               	movlw	32
  6239  004A38  6E03               	movwf	fputc@c^0,c
  6240  004A3A  C00C  F005         	movff	stoa@fp,fputc@fp
  6241  004A3E  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  6242  004A42  EC6D  F02A         	call	_fputc	;wreg free
  6243  004A46                     
  6244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  6245  004A46  4A20               	infsnz	stoa@l^0,f,c
  6246  004A48  2A21               	incf	(stoa@l+1)^0,f,c
  6247  004A4A                     l5562:
  6248                           
  6249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  6250  004A4A  501A               	movf	stoa@w^0,w,c
  6251  004A4C  5C20               	subwf	stoa@l^0,w,c
  6252  004A4E  5021               	movf	(stoa@l+1)^0,w,c
  6253  004A50  0A80               	xorlw	128
  6254  004A52  6E10               	movwf	??_stoa^0,c
  6255  004A54  501B               	movf	(stoa@w+1)^0,w,c
  6256  004A56  0A80               	xorlw	128
  6257  004A58  5810               	subwfb	??_stoa^0,w,c
  6258  004A5A  A0D8               	btfss	status,0,c
  6259  004A5C  EF32  F025         	goto	u6721
  6260  004A60  EF34  F025         	goto	u6720
  6261  004A64                     u6721:
  6262  004A64  EF19  F025         	goto	l5558
  6263  004A68                     u6720:
  6264  004A68                     l1304:
  6265                           
  6266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  6267  004A68  C020  F00C         	movff	stoa@l,?_stoa
  6268  004A6C  C021  F00D         	movff	stoa@l+1,?_stoa+1
  6269  004A70  0012               	return		;funcret
  6270  004A72                     __end_of_stoa:
  6271                           	callstack 0
  6272                           
  6273 ;; *************** function _otoa *****************
  6274 ;; Defined at:
  6275 ;;		line 529 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6278 ;;		 -> vsnprintf@f(6), 
  6279 ;;  d               8   31[COMRAM] unsigned long long 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  n               8   53[COMRAM] unsigned long long 
  6282 ;;  i               2   61[COMRAM] int 
  6283 ;;  w               2   51[COMRAM] int 
  6284 ;;  t               2   49[COMRAM] int 
  6285 ;;  p               2   47[COMRAM] int 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  2   29[COMRAM] int 
  6288 ;; Registers used:
  6289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6295 ;;      Params:        10       0       0       0       0       0       0       0       0
  6296 ;;      Locals:        16       0       0       0       0       0       0       0       0
  6297 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6298 ;;      Totals:        34       0       0       0       0       0       0       0       0
  6299 ;;Total ram usage:       34 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 5
  6302 ;; This function calls:
  6303 ;;		_pad
  6304 ;; This function is called by:
  6305 ;;		_vfpfcnvrt
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text15
  6310  004230                     __ptext15:
  6311                           	callstack 0
  6312  004230                     _otoa:
  6313                           	callstack 21
  6314  004230                     
  6315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 529: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 530: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 531:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\com
      +                          mon\doprnt.c: 532:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\so
      +                          urces\c99\common\doprnt.c: 535:     if (!(prec < 0)) {
  6316  004230  0100               	movlb	0	; () banked
  6317  004232  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  6318  004234  EF1E  F021         	goto	u6541
  6319  004238  EF20  F021         	goto	u6540
  6320  00423C                     u6541:
  6321  00423C  EF21  F021         	goto	l5478
  6322  004240                     u6540:
  6323  004240                     
  6324                           ; BSR set to: 0
  6325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 536:         flag
      +                          s &= ~(1 << 1);
  6326  004240  93F5               	bcf	_flags& (0+255),1,b
  6327  004242                     l5478:
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 538:     p = (0 <
      +                           prec) ? prec : 1;
  6331  004242  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  6332  004244  EF2E  F021         	goto	u6550
  6333  004248  51F4               	movf	(_prec+1)& (0+255),w,b
  6334  00424A  E106               	bnz	u6551
  6335  00424C  05F3               	decf	_prec& (0+255),w,b
  6336  00424E  B0D8               	btfsc	status,0,c
  6337  004250  EF2C  F021         	goto	u6551
  6338  004254  EF2E  F021         	goto	u6550
  6339  004258                     u6551:
  6340  004258  EF34  F021         	goto	l1274
  6341  00425C                     u6550:
  6342  00425C                     
  6343                           ; BSR set to: 0
  6344  00425C  0E00               	movlw	0
  6345  00425E  6E31               	movwf	(otoa@p+1)^0,c
  6346  004260  0E01               	movlw	1
  6347  004262  6E30               	movwf	otoa@p^0,c
  6348  004264  EF38  F021         	goto	l1276
  6349  004268                     l1274:
  6350                           
  6351                           ; BSR set to: 0
  6352  004268  C0F3  F030         	movff	_prec,otoa@p
  6353  00426C  C0F4  F031         	movff	_prec+1,otoa@p+1
  6354  004270                     l1276:
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 539:     w = widt
      +                          h;
  6358  004270  C0F1  F034         	movff	_width,otoa@w
  6359  004274  C0F2  F035         	movff	_width+1,otoa@w+1
  6360                           
  6361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 542:     n = d;
  6362  004278  C020  F036         	movff	otoa@d,otoa@n
  6363  00427C  C021  F037         	movff	otoa@d+1,otoa@n+1
  6364  004280  C022  F038         	movff	otoa@d+2,otoa@n+2
  6365  004284  C023  F039         	movff	otoa@d+3,otoa@n+3
  6366  004288  C024  F03A         	movff	otoa@d+4,otoa@n+4
  6367  00428C  C025  F03B         	movff	otoa@d+5,otoa@n+5
  6368  004290  C026  F03C         	movff	otoa@d+6,otoa@n+6
  6369  004294  C027  F03D         	movff	otoa@d+7,otoa@n+7
  6370  004298                     
  6371                           ; BSR set to: 0
  6372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 543:     i = size
      +                          of(dbuf) - 1;
  6373  004298  0E00               	movlw	0
  6374  00429A  6E3F               	movwf	(otoa@i+1)^0,c
  6375  00429C  0E4F               	movlw	79
  6376  00429E  6E3E               	movwf	otoa@i^0,c
  6377  0042A0                     
  6378                           ; BSR set to: 0
  6379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 544:     dbuf[i] 
      +                          = '\0';
  6380  0042A0  0E00               	movlw	0
  6381  0042A2  0101               	movlb	1	; () banked
  6382  0042A4  6FAB               	movwf	(_dbuf+79)& (0+255),b
  6383  0042A6                     
  6384                           ; BSR set to: 1
  6385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 545:     t = 0;
  6386  0042A6  0E00               	movlw	0
  6387  0042A8  6E33               	movwf	(otoa@t+1)^0,c
  6388  0042AA  0E00               	movlw	0
  6389  0042AC  6E32               	movwf	otoa@t^0,c
  6390                           
  6391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6392  0042AE  EF9E  F021         	goto	l5500
  6393  0042B2                     l5488:
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 547:         --i;
  6396  0042B2  063E               	decf	otoa@i^0,f,c
  6397  0042B4  A0D8               	btfss	status,0,c
  6398  0042B6  063F               	decf	(otoa@i+1)^0,f,c
  6399  0042B8                     
  6400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 548:         t = 
      +                          n & 07;
  6401  0042B8  0E07               	movlw	7
  6402  0042BA  1436               	andwf	otoa@n^0,w,c
  6403  0042BC  6E32               	movwf	otoa@t^0,c
  6404  0042BE  6A33               	clrf	(otoa@t+1)^0,c
  6405  0042C0                     
  6406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 549:         dbuf
      +                          [i] = (char)((int)'0' + t);
  6407  0042C0  0E5C               	movlw	low _dbuf
  6408  0042C2  243E               	addwf	otoa@i^0,w,c
  6409  0042C4  6ED9               	movwf	fsr2l,c
  6410  0042C6  0E01               	movlw	high _dbuf
  6411  0042C8  203F               	addwfc	(otoa@i+1)^0,w,c
  6412  0042CA  6EDA               	movwf	fsr2h,c
  6413  0042CC  5032               	movf	otoa@t^0,w,c
  6414  0042CE  0F30               	addlw	48
  6415  0042D0  6EDF               	movwf	indf2,c
  6416  0042D2                     
  6417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 550:         --p;
  6418  0042D2  0630               	decf	otoa@p^0,f,c
  6419  0042D4  A0D8               	btfss	status,0,c
  6420  0042D6  0631               	decf	(otoa@p+1)^0,f,c
  6421  0042D8                     
  6422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 551:         --w;
  6423  0042D8  0634               	decf	otoa@w^0,f,c
  6424  0042DA  A0D8               	btfss	status,0,c
  6425  0042DC  0635               	decf	(otoa@w+1)^0,f,c
  6426  0042DE                     
  6427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 552:         n = 
      +                          n >> 3;
  6428  0042DE  C036  F028         	movff	otoa@n,??_otoa
  6429  0042E2  C037  F029         	movff	otoa@n+1,??_otoa+1
  6430  0042E6  C038  F02A         	movff	otoa@n+2,??_otoa+2
  6431  0042EA  C039  F02B         	movff	otoa@n+3,??_otoa+3
  6432  0042EE  C03A  F02C         	movff	otoa@n+4,??_otoa+4
  6433  0042F2  C03B  F02D         	movff	otoa@n+5,??_otoa+5
  6434  0042F6  C03C  F02E         	movff	otoa@n+6,??_otoa+6
  6435  0042FA  C03D  F02F         	movff	otoa@n+7,??_otoa+7
  6436  0042FE  0E04               	movlw	4
  6437  004300  EF8B  F021         	goto	u6560
  6438  004304                     u6565:
  6439  004304  90D8               	bcf	status,0,c
  6440  004306  322F               	rrcf	(??_otoa+7)^0,f,c
  6441  004308  322E               	rrcf	(??_otoa+6)^0,f,c
  6442  00430A  322D               	rrcf	(??_otoa+5)^0,f,c
  6443  00430C  322C               	rrcf	(??_otoa+4)^0,f,c
  6444  00430E  322B               	rrcf	(??_otoa+3)^0,f,c
  6445  004310  322A               	rrcf	(??_otoa+2)^0,f,c
  6446  004312  3229               	rrcf	(??_otoa+1)^0,f,c
  6447  004314  3228               	rrcf	??_otoa^0,f,c
  6448  004316                     u6560:
  6449  004316  2EE8               	decfsz	wreg,f,c
  6450  004318  EF82  F021         	goto	u6565
  6451  00431C  C028  F036         	movff	??_otoa,otoa@n
  6452  004320  C029  F037         	movff	??_otoa+1,otoa@n+1
  6453  004324  C02A  F038         	movff	??_otoa+2,otoa@n+2
  6454  004328  C02B  F039         	movff	??_otoa+3,otoa@n+3
  6455  00432C  C02C  F03A         	movff	??_otoa+4,otoa@n+4
  6456  004330  C02D  F03B         	movff	??_otoa+5,otoa@n+5
  6457  004334  C02E  F03C         	movff	??_otoa+6,otoa@n+6
  6458  004338  C02F  F03D         	movff	??_otoa+7,otoa@n+7
  6459  00433C                     l5500:
  6460                           
  6461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6462  00433C  BE3F               	btfsc	(otoa@i+1)^0,7,c
  6463  00433E  EFA9  F021         	goto	u6571
  6464  004342  503F               	movf	(otoa@i+1)^0,w,c
  6465  004344  E108               	bnz	u6570
  6466  004346  043E               	decf	otoa@i^0,w,c
  6467  004348  A0D8               	btfss	status,0,c
  6468  00434A  EFA9  F021         	goto	u6571
  6469  00434E  EFAB  F021         	goto	u6570
  6470  004352                     u6571:
  6471  004352  EFDC  F021         	goto	l1283
  6472  004356                     u6570:
  6473  004356  5036               	movf	otoa@n^0,w,c
  6474  004358  1037               	iorwf	(otoa@n+1)^0,w,c
  6475  00435A  1038               	iorwf	(otoa@n+2)^0,w,c
  6476  00435C  1039               	iorwf	(otoa@n+3)^0,w,c
  6477  00435E  103A               	iorwf	(otoa@n+4)^0,w,c
  6478  004360  103B               	iorwf	(otoa@n+5)^0,w,c
  6479  004362  103C               	iorwf	(otoa@n+6)^0,w,c
  6480  004364  103D               	iorwf	(otoa@n+7)^0,w,c
  6481  004366  A4D8               	btfss	status,2,c
  6482  004368  EFB8  F021         	goto	u6581
  6483  00436C  EFBA  F021         	goto	u6580
  6484  004370                     u6581:
  6485  004370  EF59  F021         	goto	l5488
  6486  004374                     u6580:
  6487  004374  BE31               	btfsc	(otoa@p+1)^0,7,c
  6488  004376  EFC7  F021         	goto	u6590
  6489  00437A  5031               	movf	(otoa@p+1)^0,w,c
  6490  00437C  E106               	bnz	u6591
  6491  00437E  0430               	decf	otoa@p^0,w,c
  6492  004380  B0D8               	btfsc	status,0,c
  6493  004382  EFC5  F021         	goto	u6591
  6494  004386  EFC7  F021         	goto	u6590
  6495  00438A                     u6591:
  6496  00438A  EF59  F021         	goto	l5488
  6497  00438E                     u6590:
  6498  00438E  BE35               	btfsc	(otoa@w+1)^0,7,c
  6499  004390  EFD2  F021         	goto	u6601
  6500  004394  5035               	movf	(otoa@w+1)^0,w,c
  6501  004396  E108               	bnz	u6600
  6502  004398  0434               	decf	otoa@w^0,w,c
  6503  00439A  A0D8               	btfss	status,0,c
  6504  00439C  EFD2  F021         	goto	u6601
  6505  0043A0  EFD4  F021         	goto	u6600
  6506  0043A4                     u6601:
  6507  0043A4  EFDC  F021         	goto	l1283
  6508  0043A8                     u6600:
  6509  0043A8  0100               	movlb	0	; () banked
  6510  0043AA  B3F5               	btfsc	_flags& (0+255),1,b
  6511  0043AC  EFDA  F021         	goto	u6611
  6512  0043B0  EFDC  F021         	goto	u6610
  6513  0043B4                     u6611:
  6514  0043B4  EF59  F021         	goto	l5488
  6515  0043B8                     u6610:
  6516  0043B8                     l1283:
  6517                           
  6518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 556:     if ((fla
      +                          gs & (1 << 4)) && t) {
  6519  0043B8  0100               	movlb	0	; () banked
  6520  0043BA  A9F5               	btfss	_flags& (0+255),4,b
  6521  0043BC  EFE2  F021         	goto	u6621
  6522  0043C0  EFE4  F021         	goto	u6620
  6523  0043C4                     u6621:
  6524  0043C4  EFFB  F021         	goto	l5518
  6525  0043C8                     u6620:
  6526  0043C8                     
  6527                           ; BSR set to: 0
  6528  0043C8  5032               	movf	otoa@t^0,w,c
  6529  0043CA  1033               	iorwf	(otoa@t+1)^0,w,c
  6530  0043CC  B4D8               	btfsc	status,2,c
  6531  0043CE  EFEB  F021         	goto	u6631
  6532  0043D2  EFED  F021         	goto	u6630
  6533  0043D6                     u6631:
  6534  0043D6  EFFB  F021         	goto	l5518
  6535  0043DA                     u6630:
  6536  0043DA                     
  6537                           ; BSR set to: 0
  6538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 557:         --i;
  6539  0043DA  063E               	decf	otoa@i^0,f,c
  6540  0043DC  A0D8               	btfss	status,0,c
  6541  0043DE  063F               	decf	(otoa@i+1)^0,f,c
  6542  0043E0                     
  6543                           ; BSR set to: 0
  6544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 558:         dbuf
      +                          [i] = '0';
  6545  0043E0  0E5C               	movlw	low _dbuf
  6546  0043E2  243E               	addwf	otoa@i^0,w,c
  6547  0043E4  6ED9               	movwf	fsr2l,c
  6548  0043E6  0E01               	movlw	high _dbuf
  6549  0043E8  203F               	addwfc	(otoa@i+1)^0,w,c
  6550  0043EA  6EDA               	movwf	fsr2h,c
  6551  0043EC  0E30               	movlw	48
  6552  0043EE  6EDF               	movwf	indf2,c
  6553  0043F0                     
  6554                           ; BSR set to: 0
  6555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 559:         --w;
  6556  0043F0  0634               	decf	otoa@w^0,f,c
  6557  0043F2  A0D8               	btfss	status,0,c
  6558  0043F4  0635               	decf	(otoa@w+1)^0,f,c
  6559  0043F6                     l5518:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 563:     return p
      +                          ad(fp, &dbuf[i], w);
  6563  0043F6  C01E  F013         	movff	otoa@fp,pad@fp
  6564  0043FA  C01F  F014         	movff	otoa@fp+1,pad@fp+1
  6565  0043FE  0E5C               	movlw	low _dbuf
  6566  004400  243E               	addwf	otoa@i^0,w,c
  6567  004402  6E15               	movwf	pad@buf^0,c
  6568  004404  0E01               	movlw	high _dbuf
  6569  004406  203F               	addwfc	(otoa@i+1)^0,w,c
  6570  004408  6E16               	movwf	(pad@buf+1)^0,c
  6571  00440A  C034  F017         	movff	otoa@w,pad@p
  6572  00440E  C035  F018         	movff	otoa@w+1,pad@p+1
  6573  004412  ECD2  F02A         	call	_pad	;wreg free
  6574  004416  C013  F01E         	movff	?_pad,?_otoa
  6575  00441A  C014  F01F         	movff	?_pad+1,?_otoa+1
  6576  00441E  0012               	return		;funcret
  6577  004420                     __end_of_otoa:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function _efgtoa *****************
  6581 ;; Defined at:
  6582 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  6585 ;;		 -> vsnprintf@f(6), 
  6586 ;;  f               4   80[COMRAM] PTR struct _IO_FILE
  6587 ;;  c               1   84[COMRAM] unsigned char 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  u               4   52[BANK0 ] unsigned char 
  6590 ;;  g               4   44[BANK0 ] unsigned char 
  6591 ;;  l               4   38[BANK0 ] unsigned char 
  6592 ;;  h               4   34[BANK0 ] unsigned char 
  6593 ;;  ou              4   20[BANK0 ] unsigned char 
  6594 ;;  n               2   50[BANK0 ] int 
  6595 ;;  e               2   48[BANK0 ] int 
  6596 ;;  i               2   42[BANK0 ] int 
  6597 ;;  w               2   30[BANK0 ] int 
  6598 ;;  p               2   28[BANK0 ] int 
  6599 ;;  sign            2   26[BANK0 ] int 
  6600 ;;  d               2   24[BANK0 ] int 
  6601 ;;  m               2   18[BANK0 ] int 
  6602 ;;  ne              2   16[BANK0 ] int 
  6603 ;;  pp              2   14[BANK0 ] int 
  6604 ;;  t               2   12[BANK0 ] int 
  6605 ;;  mode            1   33[BANK0 ] unsigned char 
  6606 ;;  nmode           1   32[BANK0 ] unsigned char 
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  2   78[COMRAM] int 
  6609 ;; Registers used:
  6610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6616 ;;      Params:         7       0       0       0       0       0       0       0       0
  6617 ;;      Locals:         0      56       0       0       0       0       0       0       0
  6618 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6619 ;;      Totals:        12      56       0       0       0       0       0       0       0
  6620 ;;Total ram usage:       68 bytes
  6621 ;; Hardware stack levels used: 1
  6622 ;; Hardware stack levels required when called: 5
  6623 ;; This function calls:
  6624 ;;		___awdiv
  6625 ;;		___awmod
  6626 ;;		___fladd
  6627 ;;		___fldiv
  6628 ;;		___fleq
  6629 ;;		___flge
  6630 ;;		___flmul
  6631 ;;		___flneg
  6632 ;;		___flsub
  6633 ;;		___fltol
  6634 ;;		___fpclassifyf
  6635 ;;		_floorf
  6636 ;;		_isupper
  6637 ;;		_pad
  6638 ;;		_strcpy
  6639 ;;		_tolower
  6640 ;; This function is called by:
  6641 ;;		_vfpfcnvrt
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text16
  6646  001D1A                     __ptext16:
  6647                           	callstack 0
  6648  001D1A                     _efgtoa:
  6649                           	callstack 21
  6650  001D1A                     
  6651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  6652  001D1A  0E00               	movlw	0
  6653  001D1C  0100               	movlb	0	; () banked
  6654  001D1E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6655  001D20  0E00               	movlw	0
  6656  001D22  6F7A               	movwf	efgtoa@sign& (0+255),b
  6657  001D24                     
  6658                           ; BSR set to: 0
  6659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  6660  001D24  C051  F08C         	movff	efgtoa@f,efgtoa@g
  6661  001D28  C052  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  6662  001D2C  C053  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  6663  001D30  C054  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  6664  001D34                     
  6665                           ; BSR set to: 0
  6666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  6667  001D34  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6668  001D36  EFA1  F00E         	goto	u6000
  6669  001D3A  EF9F  F00E         	goto	u6001
  6670  001D3E                     u6001:
  6671  001D3E  EFB7  F00E         	goto	l5176
  6672  001D42                     u6000:
  6673  001D42                     
  6674                           ; BSR set to: 0
  6675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  6676  001D42  0E00               	movlw	0
  6677  001D44  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6678  001D46  0E01               	movlw	1
  6679  001D48  6F7A               	movwf	efgtoa@sign& (0+255),b
  6680  001D4A                     
  6681                           ; BSR set to: 0
  6682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  6683  001D4A  C08C  F001         	movff	efgtoa@g,___flneg@f1
  6684  001D4E  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6685  001D52  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6686  001D56  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6687  001D5A  EC1D  F02F         	call	___flneg	;wreg free
  6688  001D5E  C001  F08C         	movff	?___flneg,efgtoa@g
  6689  001D62  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  6690  001D66  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  6691  001D6A  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  6692  001D6E                     l5176:
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  6695  001D6E  0E00               	movlw	0
  6696  001D70  0100               	movlb	0	; () banked
  6697  001D72  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  6698  001D74  0E00               	movlw	0
  6699  001D76  6F92               	movwf	efgtoa@n& (0+255),b
  6700  001D78                     
  6701                           ; BSR set to: 0
  6702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  6703  001D78  C0F1  F07E         	movff	_width,efgtoa@w
  6704  001D7C  C0F2  F07F         	movff	_width+1,efgtoa@w+1
  6705  001D80                     
  6706                           ; BSR set to: 0
  6707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6708  001D80  517A               	movf	efgtoa@sign& (0+255),w,b
  6709  001D82  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6710  001D84  A4D8               	btfss	status,2,c
  6711  001D86  EFC7  F00E         	goto	u6011
  6712  001D8A  EFC9  F00E         	goto	u6010
  6713  001D8E                     u6011:
  6714  001D8E  EFD0  F00E         	goto	l5184
  6715  001D92                     u6010:
  6716  001D92                     
  6717                           ; BSR set to: 0
  6718  001D92  A5F5               	btfss	_flags& (0+255),2,b
  6719  001D94  EFCE  F00E         	goto	u6021
  6720  001D98  EFD0  F00E         	goto	u6020
  6721  001D9C                     u6021:
  6722  001D9C  EFEA  F00E         	goto	l5196
  6723  001DA0                     u6020:
  6724  001DA0                     l5184:
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6728  001DA0  517A               	movf	efgtoa@sign& (0+255),w,b
  6729  001DA2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6730  001DA4  A4D8               	btfss	status,2,c
  6731  001DA6  EFD7  F00E         	goto	u6031
  6732  001DAA  EFD9  F00E         	goto	u6030
  6733  001DAE                     u6031:
  6734  001DAE  EFDF  F00E         	goto	l5188
  6735  001DB2                     u6030:
  6736  001DB2                     
  6737                           ; BSR set to: 0
  6738  001DB2  0E00               	movlw	0
  6739  001DB4  6F61               	movwf	(_efgtoa$1533+1)& (0+255),b
  6740  001DB6  0E2B               	movlw	43
  6741  001DB8  6F60               	movwf	_efgtoa$1533& (0+255),b
  6742  001DBA  EFE3  F00E         	goto	l5190
  6743  001DBE                     l5188:
  6744                           
  6745                           ; BSR set to: 0
  6746  001DBE  0E00               	movlw	0
  6747  001DC0  6F61               	movwf	(_efgtoa$1533+1)& (0+255),b
  6748  001DC2  0E2D               	movlw	45
  6749  001DC4  6F60               	movwf	_efgtoa$1533& (0+255),b
  6750  001DC6                     l5190:
  6751                           
  6752                           ; BSR set to: 0
  6753  001DC6  C060  F15C         	movff	_efgtoa$1533,_dbuf
  6754  001DCA                     
  6755                           ; BSR set to: 0
  6756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6757  001DCA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6758  001DCC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6759  001DCE                     
  6760                           ; BSR set to: 0
  6761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  6762  001DCE  077E               	decf	efgtoa@w& (0+255),f,b
  6763  001DD0  A0D8               	btfss	status,0,c
  6764  001DD2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6765  001DD4                     l5196:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6769  001DD4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  6770  001DD8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6771  001DDC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6772  001DE0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6773  001DE4  ECA2  F028         	call	___fpclassifyf	;wreg free
  6774  001DE8  0401               	decf	?___fpclassifyf^0,w,c
  6775  001DEA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6776  001DEC  A4D8               	btfss	status,2,c
  6777  001DEE  EFFB  F00E         	goto	u6041
  6778  001DF2  EFFD  F00E         	goto	u6040
  6779  001DF6                     u6041:
  6780  001DF6  EF54  F00F         	goto	l5214
  6781  001DFA                     u6040:
  6782  001DFA  0EBF               	movlw	191
  6783  001DFC  6E56               	movwf	??_efgtoa^0,c
  6784  001DFE  0EFF               	movlw	255
  6785  001E00  6E57               	movwf	(??_efgtoa+1)^0,c
  6786  001E02  5055               	movf	efgtoa@c^0,w,c
  6787  001E04  6E58               	movwf	(??_efgtoa+2)^0,c
  6788  001E06  6A59               	clrf	(??_efgtoa+3)^0,c
  6789  001E08  5056               	movf	??_efgtoa^0,w,c
  6790  001E0A  2658               	addwf	(??_efgtoa+2)^0,f,c
  6791  001E0C  5057               	movf	(??_efgtoa+1)^0,w,c
  6792  001E0E  2259               	addwfc	(??_efgtoa+3)^0,f,c
  6793  001E10  5059               	movf	(??_efgtoa+3)^0,w,c
  6794  001E12  E10A               	bnz	u6050
  6795  001E14  0E1A               	movlw	26
  6796  001E16  5C58               	subwf	(??_efgtoa+2)^0,w,c
  6797  001E18  A0D8               	btfss	status,0,c
  6798  001E1A  EF11  F00F         	goto	u6051
  6799  001E1E  EF14  F00F         	goto	u6050
  6800  001E22                     u6051:
  6801  001E22  0E01               	movlw	1
  6802  001E24  EF15  F00F         	goto	u6060
  6803  001E28                     u6050:
  6804  001E28  0E00               	movlw	0
  6805  001E2A                     u6060:
  6806  001E2A  0100               	movlb	0	; () banked
  6807  001E2C  6F62               	movwf	_efgtoa$1534& (0+255),b
  6808  001E2E  6B63               	clrf	(_efgtoa$1534+1)& (0+255),b
  6809  001E30                     
  6810                           ; BSR set to: 0
  6811  001E30  5162               	movf	_efgtoa$1534& (0+255),w,b
  6812  001E32  1163               	iorwf	(_efgtoa$1534+1)& (0+255),w,b
  6813  001E34  B4D8               	btfsc	status,2,c
  6814  001E36  EF1F  F00F         	goto	u6071
  6815  001E3A  EF21  F00F         	goto	u6070
  6816  001E3E                     u6071:
  6817  001E3E  EF2F  F00F         	goto	l5206
  6818  001E42                     u6070:
  6819  001E42                     
  6820                           ; BSR set to: 0
  6821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6822  001E42  0E5C               	movlw	low _dbuf
  6823  001E44  2592               	addwf	efgtoa@n& (0+255),w,b
  6824  001E46  6E01               	movwf	strcpy@dest^0,c
  6825  001E48  0E01               	movlw	high _dbuf
  6826  001E4A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6827  001E4C  6E02               	movwf	(strcpy@dest+1)^0,c
  6828  001E4E  0E23               	movlw	low STR_10
  6829  001E50  6E03               	movwf	strcpy@src^0,c
  6830  001E52  0E08               	movlw	high STR_10
  6831  001E54  6E04               	movwf	(strcpy@src+1)^0,c
  6832  001E56  EC12  F02D         	call	_strcpy	;wreg free
  6833                           
  6834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6835  001E5A  EF3B  F00F         	goto	l5208
  6836  001E5E                     l5206:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6840  001E5E  0E5C               	movlw	low _dbuf
  6841  001E60  2592               	addwf	efgtoa@n& (0+255),w,b
  6842  001E62  6E01               	movwf	strcpy@dest^0,c
  6843  001E64  0E01               	movlw	high _dbuf
  6844  001E66  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6845  001E68  6E02               	movwf	(strcpy@dest+1)^0,c
  6846  001E6A  0E33               	movlw	low STR_11
  6847  001E6C  6E03               	movwf	strcpy@src^0,c
  6848  001E6E  0E08               	movlw	high STR_11
  6849  001E70  6E04               	movwf	(strcpy@src+1)^0,c
  6850  001E72  EC12  F02D         	call	_strcpy	;wreg free
  6851  001E76                     l5208:
  6852                           
  6853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6854  001E76  0100               	movlb	0	; () banked
  6855  001E78  0EFD               	movlw	253
  6856  001E7A  277E               	addwf	efgtoa@w& (0+255),f,b
  6857  001E7C  0EFF               	movlw	255
  6858  001E7E  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6859  001E80                     l5210:
  6860                           
  6861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6862  001E80  C04F  F013         	movff	efgtoa@fp,pad@fp
  6863  001E84  C050  F014         	movff	efgtoa@fp+1,pad@fp+1
  6864  001E88  0E5C               	movlw	low _dbuf
  6865  001E8A  6E15               	movwf	pad@buf^0,c
  6866  001E8C  0E01               	movlw	high _dbuf
  6867  001E8E  6E16               	movwf	(pad@buf+1)^0,c
  6868  001E90  C07E  F017         	movff	efgtoa@w,pad@p
  6869  001E94  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  6870  001E98  ECD2  F02A         	call	_pad	;wreg free
  6871  001E9C  C013  F04F         	movff	?_pad,?_efgtoa
  6872  001EA0  C014  F050         	movff	?_pad+1,?_efgtoa+1
  6873  001EA4  EFB8  F014         	goto	l1194
  6874  001EA8                     l5214:
  6875                           
  6876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6877  001EA8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  6878  001EAC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6879  001EB0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6880  001EB4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6881  001EB8  ECA2  F028         	call	___fpclassifyf	;wreg free
  6882  001EBC  5001               	movf	?___fpclassifyf^0,w,c
  6883  001EBE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6884  001EC0  A4D8               	btfss	status,2,c
  6885  001EC2  EF65  F00F         	goto	u6081
  6886  001EC6  EF67  F00F         	goto	u6080
  6887  001ECA                     u6081:
  6888  001ECA  EFA7  F00F         	goto	l5232
  6889  001ECE                     u6080:
  6890  001ECE  0EBF               	movlw	191
  6891  001ED0  6E56               	movwf	??_efgtoa^0,c
  6892  001ED2  0EFF               	movlw	255
  6893  001ED4  6E57               	movwf	(??_efgtoa+1)^0,c
  6894  001ED6  5055               	movf	efgtoa@c^0,w,c
  6895  001ED8  6E58               	movwf	(??_efgtoa+2)^0,c
  6896  001EDA  6A59               	clrf	(??_efgtoa+3)^0,c
  6897  001EDC  5056               	movf	??_efgtoa^0,w,c
  6898  001EDE  2658               	addwf	(??_efgtoa+2)^0,f,c
  6899  001EE0  5057               	movf	(??_efgtoa+1)^0,w,c
  6900  001EE2  2259               	addwfc	(??_efgtoa+3)^0,f,c
  6901  001EE4  5059               	movf	(??_efgtoa+3)^0,w,c
  6902  001EE6  E10A               	bnz	u6090
  6903  001EE8  0E1A               	movlw	26
  6904  001EEA  5C58               	subwf	(??_efgtoa+2)^0,w,c
  6905  001EEC  A0D8               	btfss	status,0,c
  6906  001EEE  EF7B  F00F         	goto	u6091
  6907  001EF2  EF7E  F00F         	goto	u6090
  6908  001EF6                     u6091:
  6909  001EF6  0E01               	movlw	1
  6910  001EF8  EF7F  F00F         	goto	u6100
  6911  001EFC                     u6090:
  6912  001EFC  0E00               	movlw	0
  6913  001EFE                     u6100:
  6914  001EFE  0100               	movlb	0	; () banked
  6915  001F00  6F64               	movwf	_efgtoa$1538& (0+255),b
  6916  001F02  6B65               	clrf	(_efgtoa$1538+1)& (0+255),b
  6917  001F04                     
  6918                           ; BSR set to: 0
  6919  001F04  5164               	movf	_efgtoa$1538& (0+255),w,b
  6920  001F06  1165               	iorwf	(_efgtoa$1538+1)& (0+255),w,b
  6921  001F08  B4D8               	btfsc	status,2,c
  6922  001F0A  EF89  F00F         	goto	u6111
  6923  001F0E  EF8B  F00F         	goto	u6110
  6924  001F12                     u6111:
  6925  001F12  EF99  F00F         	goto	l5224
  6926  001F16                     u6110:
  6927  001F16                     
  6928                           ; BSR set to: 0
  6929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6930  001F16  0E5C               	movlw	low _dbuf
  6931  001F18  2592               	addwf	efgtoa@n& (0+255),w,b
  6932  001F1A  6E01               	movwf	strcpy@dest^0,c
  6933  001F1C  0E01               	movlw	high _dbuf
  6934  001F1E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6935  001F20  6E02               	movwf	(strcpy@dest+1)^0,c
  6936  001F22  0E27               	movlw	low STR_14
  6937  001F24  6E03               	movwf	strcpy@src^0,c
  6938  001F26  0E08               	movlw	high STR_14
  6939  001F28  6E04               	movwf	(strcpy@src+1)^0,c
  6940  001F2A  EC12  F02D         	call	_strcpy	;wreg free
  6941                           
  6942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6943  001F2E  EF3B  F00F         	goto	l5208
  6944  001F32                     l5224:
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6948  001F32  0E5C               	movlw	low _dbuf
  6949  001F34  2592               	addwf	efgtoa@n& (0+255),w,b
  6950  001F36  6E01               	movwf	strcpy@dest^0,c
  6951  001F38  0E01               	movlw	high _dbuf
  6952  001F3A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6953  001F3C  6E02               	movwf	(strcpy@dest+1)^0,c
  6954  001F3E  0E3B               	movlw	low STR_15
  6955  001F40  6E03               	movwf	strcpy@src^0,c
  6956  001F42  0E08               	movlw	high STR_15
  6957  001F44  6E04               	movwf	(strcpy@src+1)^0,c
  6958  001F46  EC12  F02D         	call	_strcpy	;wreg free
  6959  001F4A  EF3B  F00F         	goto	l5208
  6960  001F4E                     l5232:
  6961                           
  6962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6963  001F4E  0E00               	movlw	0
  6964  001F50  0100               	movlb	0	; () banked
  6965  001F52  6F94               	movwf	efgtoa@u& (0+255),b
  6966  001F54  0E00               	movlw	0
  6967  001F56  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  6968  001F58  0E80               	movlw	128
  6969  001F5A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  6970  001F5C  0E3F               	movlw	63
  6971  001F5E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  6972                           
  6973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6974  001F60  0E00               	movlw	0
  6975  001F62  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  6976  001F64  0E00               	movlw	0
  6977  001F66  6F90               	movwf	efgtoa@e& (0+255),b
  6978  001F68                     
  6979                           ; BSR set to: 0
  6980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6981  001F68  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  6982  001F6C  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6983  001F70  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6984  001F74  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6985  001F78  0E00               	movlw	0
  6986  001F7A  6E05               	movwf	___fleq@ff2^0,c
  6987  001F7C  0E00               	movlw	0
  6988  001F7E  6E06               	movwf	(___fleq@ff2+1)^0,c
  6989  001F80  0E00               	movlw	0
  6990  001F82  6E07               	movwf	(___fleq@ff2+2)^0,c
  6991  001F84  0E00               	movlw	0
  6992  001F86  6E08               	movwf	(___fleq@ff2+3)^0,c
  6993  001F88  ECEF  F02B         	call	___fleq	;wreg free
  6994  001F8C  B0D8               	btfsc	status,0,c
  6995  001F8E  EFCB  F00F         	goto	u6121
  6996  001F92  EFCD  F00F         	goto	u6120
  6997  001F96                     u6121:
  6998  001F96  EF50  F010         	goto	l5250
  6999  001F9A                     u6120:
  7000  001F9A  EFEC  F00F         	goto	l5242
  7001  001F9E                     l5238:
  7002                           
  7003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  7004  001F9E  C094  F02A         	movff	efgtoa@u,___flmul@b
  7005  001FA2  C095  F02B         	movff	efgtoa@u+1,___flmul@b+1
  7006  001FA6  C096  F02C         	movff	efgtoa@u+2,___flmul@b+2
  7007  001FAA  C097  F02D         	movff	efgtoa@u+3,___flmul@b+3
  7008  001FAE  0E00               	movlw	0
  7009  001FB0  6E2E               	movwf	___flmul@a^0,c
  7010  001FB2  0E00               	movlw	0
  7011  001FB4  6E2F               	movwf	(___flmul@a+1)^0,c
  7012  001FB6  0E20               	movlw	32
  7013  001FB8  6E30               	movwf	(___flmul@a+2)^0,c
  7014  001FBA  0E41               	movlw	65
  7015  001FBC  6E31               	movwf	(___flmul@a+3)^0,c
  7016  001FBE  EC19  F017         	call	___flmul	;wreg free
  7017  001FC2  C02A  F094         	movff	?___flmul,efgtoa@u
  7018  001FC6  C02B  F095         	movff	?___flmul+1,efgtoa@u+1
  7019  001FCA  C02C  F096         	movff	?___flmul+2,efgtoa@u+2
  7020  001FCE  C02D  F097         	movff	?___flmul+3,efgtoa@u+3
  7021  001FD2                     
  7022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  7023  001FD2  0100               	movlb	0	; () banked
  7024  001FD4  4B90               	infsnz	efgtoa@e& (0+255),f,b
  7025  001FD6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  7026  001FD8                     l5242:
  7027                           
  7028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  7029  001FD8  C08C  F043         	movff	efgtoa@g,___flge@ff1
  7030  001FDC  C08D  F044         	movff	efgtoa@g+1,___flge@ff1+1
  7031  001FE0  C08E  F045         	movff	efgtoa@g+2,___flge@ff1+2
  7032  001FE4  C08F  F046         	movff	efgtoa@g+3,___flge@ff1+3
  7033  001FE8  0E00               	movlw	0
  7034  001FEA  6E2E               	movwf	___flmul@a^0,c
  7035  001FEC  0E00               	movlw	0
  7036  001FEE  6E2F               	movwf	(___flmul@a+1)^0,c
  7037  001FF0  0E20               	movlw	32
  7038  001FF2  6E30               	movwf	(___flmul@a+2)^0,c
  7039  001FF4  0E41               	movlw	65
  7040  001FF6  6E31               	movwf	(___flmul@a+3)^0,c
  7041  001FF8  C094  F02A         	movff	efgtoa@u,___flmul@b
  7042  001FFC  C095  F02B         	movff	efgtoa@u+1,___flmul@b+1
  7043  002000  C096  F02C         	movff	efgtoa@u+2,___flmul@b+2
  7044  002004  C097  F02D         	movff	efgtoa@u+3,___flmul@b+3
  7045  002008  EC19  F017         	call	___flmul	;wreg free
  7046  00200C  C02A  F047         	movff	?___flmul,___flge@ff2
  7047  002010  C02B  F048         	movff	?___flmul+1,___flge@ff2+1
  7048  002014  C02C  F049         	movff	?___flmul+2,___flge@ff2+2
  7049  002018  C02D  F04A         	movff	?___flmul+3,___flge@ff2+3
  7050  00201C  EC20  F028         	call	___flge	;wreg free
  7051  002020  B0D8               	btfsc	status,0,c
  7052  002022  EF15  F010         	goto	u6131
  7053  002026  EF17  F010         	goto	u6130
  7054  00202A                     u6131:
  7055  00202A  EFCF  F00F         	goto	l5238
  7056  00202E                     u6130:
  7057  00202E  EF37  F010         	goto	l5248
  7058  002032                     l5244:
  7059                           
  7060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  7061  002032  C094  F011         	movff	efgtoa@u,___fldiv@b
  7062  002036  C095  F012         	movff	efgtoa@u+1,___fldiv@b+1
  7063  00203A  C096  F013         	movff	efgtoa@u+2,___fldiv@b+2
  7064  00203E  C097  F014         	movff	efgtoa@u+3,___fldiv@b+3
  7065  002042  0E00               	movlw	0
  7066  002044  6E15               	movwf	___fldiv@a^0,c
  7067  002046  0E00               	movlw	0
  7068  002048  6E16               	movwf	(___fldiv@a+1)^0,c
  7069  00204A  0E20               	movlw	32
  7070  00204C  6E17               	movwf	(___fldiv@a+2)^0,c
  7071  00204E  0E41               	movlw	65
  7072  002050  6E18               	movwf	(___fldiv@a+3)^0,c
  7073  002052  EC2E  F019         	call	___fldiv	;wreg free
  7074  002056  C011  F094         	movff	?___fldiv,efgtoa@u
  7075  00205A  C012  F095         	movff	?___fldiv+1,efgtoa@u+1
  7076  00205E  C013  F096         	movff	?___fldiv+2,efgtoa@u+2
  7077  002062  C014  F097         	movff	?___fldiv+3,efgtoa@u+3
  7078  002066                     
  7079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  7080  002066  0100               	movlb	0	; () banked
  7081  002068  0790               	decf	efgtoa@e& (0+255),f,b
  7082  00206A  A0D8               	btfss	status,0,c
  7083  00206C  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  7084  00206E                     l5248:
  7085                           
  7086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  7087  00206E  C08C  F043         	movff	efgtoa@g,___flge@ff1
  7088  002072  C08D  F044         	movff	efgtoa@g+1,___flge@ff1+1
  7089  002076  C08E  F045         	movff	efgtoa@g+2,___flge@ff1+2
  7090  00207A  C08F  F046         	movff	efgtoa@g+3,___flge@ff1+3
  7091  00207E  C094  F047         	movff	efgtoa@u,___flge@ff2
  7092  002082  C095  F048         	movff	efgtoa@u+1,___flge@ff2+1
  7093  002086  C096  F049         	movff	efgtoa@u+2,___flge@ff2+2
  7094  00208A  C097  F04A         	movff	efgtoa@u+3,___flge@ff2+3
  7095  00208E  EC20  F028         	call	___flge	;wreg free
  7096  002092  A0D8               	btfss	status,0,c
  7097  002094  EF4E  F010         	goto	u6141
  7098  002098  EF50  F010         	goto	u6140
  7099  00209C                     u6141:
  7100  00209C  EF19  F010         	goto	l5244
  7101  0020A0                     u6140:
  7102  0020A0                     l5250:
  7103                           
  7104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  7105  0020A0  C055  F007         	movff	efgtoa@c,tolower@c
  7106  0020A4  6A08               	clrf	(tolower@c+1)^0,c
  7107  0020A6  ECB3  F02C         	call	_tolower	;wreg free
  7108  0020AA  5007               	movf	?_tolower^0,w,c
  7109  0020AC  0100               	movlb	0	; () banked
  7110  0020AE  6F81               	movwf	efgtoa@mode& (0+255),b
  7111  0020B0                     
  7112                           ; BSR set to: 0
  7113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  7114  0020B0  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  7115  0020B4                     
  7116                           ; BSR set to: 0
  7117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  7118  0020B4  0E67               	movlw	103
  7119  0020B6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7120  0020B8  A4D8               	btfss	status,2,c
  7121  0020BA  EF61  F010         	goto	u6151
  7122  0020BE  EF63  F010         	goto	u6150
  7123  0020C2                     u6151:
  7124  0020C2  EF89  F010         	goto	l5264
  7125  0020C6                     u6150:
  7126  0020C6                     
  7127                           ; BSR set to: 0
  7128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  7129  0020C6  51F3               	movf	_prec& (0+255),w,b
  7130  0020C8  11F4               	iorwf	(_prec+1)& (0+255),w,b
  7131  0020CA  A4D8               	btfss	status,2,c
  7132  0020CC  EF6A  F010         	goto	u6161
  7133  0020D0  EF6C  F010         	goto	u6160
  7134  0020D4                     u6161:
  7135  0020D4  EF70  F010         	goto	l5260
  7136  0020D8                     u6160:
  7137  0020D8                     
  7138                           ; BSR set to: 0
  7139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  7140  0020D8  0E00               	movlw	0
  7141  0020DA  6FF4               	movwf	(_prec+1)& (0+255),b
  7142  0020DC  0E01               	movlw	1
  7143  0020DE  6FF3               	movwf	_prec& (0+255),b
  7144  0020E0                     l5260:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  7148  0020E0  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  7149  0020E2  EF7D  F010         	goto	u6170
  7150  0020E6  51F4               	movf	(_prec+1)& (0+255),w,b
  7151  0020E8  E106               	bnz	u6171
  7152  0020EA  05F3               	decf	_prec& (0+255),w,b
  7153  0020EC  B0D8               	btfsc	status,0,c
  7154  0020EE  EF7B  F010         	goto	u6171
  7155  0020F2  EF7D  F010         	goto	u6170
  7156  0020F6                     u6171:
  7157  0020F6  EF83  F010         	goto	l1212
  7158  0020FA                     u6170:
  7159  0020FA                     l5262:
  7160                           
  7161                           ; BSR set to: 0
  7162  0020FA  0E00               	movlw	0
  7163  0020FC  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  7164  0020FE  0E06               	movlw	6
  7165  002100  6F7C               	movwf	efgtoa@p& (0+255),b
  7166  002102  EF92  F010         	goto	l5270
  7167  002106                     l1212:
  7168                           
  7169                           ; BSR set to: 0
  7170  002106  C0F3  F07C         	movff	_prec,efgtoa@p
  7171  00210A  C0F4  F07D         	movff	_prec+1,efgtoa@p+1
  7172  00210E  EF92  F010         	goto	l5270
  7173  002112                     l5264:
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  7177  002112  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  7178  002114  EF8E  F010         	goto	u6181
  7179  002118  EF90  F010         	goto	u6180
  7180  00211C                     u6181:
  7181  00211C  EF7D  F010         	goto	l5262
  7182  002120                     u6180:
  7183  002120  EF83  F010         	goto	l1212
  7184  002124                     l5270:
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  7188  002124  0E67               	movlw	103
  7189  002126  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7190  002128  A4D8               	btfss	status,2,c
  7191  00212A  EF99  F010         	goto	u6191
  7192  00212E  EF9B  F010         	goto	u6190
  7193  002132                     u6191:
  7194  002132  EFCA  F010         	goto	l5280
  7195  002136                     u6190:
  7196  002136                     
  7197                           ; BSR set to: 0
  7198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7199  002136  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  7200  002138  EFA9  F010         	goto	u6200
  7201  00213C  0EFC               	movlw	252
  7202  00213E  5D90               	subwf	efgtoa@e& (0+255),w,b
  7203  002140  0EFF               	movlw	255
  7204  002142  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7205  002144  A0D8               	btfss	status,0,c
  7206  002146  EFA7  F010         	goto	u6201
  7207  00214A  EFA9  F010         	goto	u6200
  7208  00214E                     u6201:
  7209  00214E  EFC8  F010         	goto	l5278
  7210  002152                     u6200:
  7211  002152                     
  7212                           ; BSR set to: 0
  7213  002152  0EFF               	movlw	255
  7214  002154  6E56               	movwf	??_efgtoa^0,c
  7215  002156  0EFF               	movlw	255
  7216  002158  6E57               	movwf	(??_efgtoa+1)^0,c
  7217  00215A  C07C  F058         	movff	efgtoa@p,??_efgtoa+2
  7218  00215E  C07D  F059         	movff	efgtoa@p+1,??_efgtoa+3
  7219  002162  5056               	movf	??_efgtoa^0,w,c
  7220  002164  2658               	addwf	(??_efgtoa+2)^0,f,c
  7221  002166  5057               	movf	(??_efgtoa+1)^0,w,c
  7222  002168  2259               	addwfc	(??_efgtoa+3)^0,f,c
  7223  00216A  5190               	movf	efgtoa@e& (0+255),w,b
  7224  00216C  5C58               	subwf	(??_efgtoa+2)^0,w,c
  7225  00216E  5059               	movf	(??_efgtoa+3)^0,w,c
  7226  002170  0A80               	xorlw	128
  7227  002172  6E5A               	movwf	(??_efgtoa+4)^0,c
  7228  002174  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  7229  002176  0A80               	xorlw	128
  7230  002178  585A               	subwfb	(??_efgtoa+4)^0,w,c
  7231  00217A  A0D8               	btfss	status,0,c
  7232  00217C  EFC2  F010         	goto	u6211
  7233  002180  EFC4  F010         	goto	u6210
  7234  002184                     u6211:
  7235  002184  EFC8  F010         	goto	l5278
  7236  002188                     u6210:
  7237  002188                     
  7238                           ; BSR set to: 0
  7239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  7240  002188  0E66               	movlw	102
  7241  00218A  6F80               	movwf	efgtoa@nmode& (0+255),b
  7242                           
  7243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  7244  00218C  EFCA  F010         	goto	l5280
  7245  002190                     l5278:
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  7249  002190  0E65               	movlw	101
  7250  002192  6F80               	movwf	efgtoa@nmode& (0+255),b
  7251  002194                     l5280:
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  7255  002194  C07C  F072         	movff	efgtoa@p,efgtoa@m
  7256  002198  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  7257  00219C                     
  7258                           ; BSR set to: 0
  7259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  7260  00219C  0E67               	movlw	103
  7261  00219E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7262  0021A0  A4D8               	btfss	status,2,c
  7263  0021A2  EFD5  F010         	goto	u6221
  7264  0021A6  EFD7  F010         	goto	u6220
  7265  0021AA                     u6221:
  7266  0021AA  EFE7  F010         	goto	l5288
  7267  0021AE                     u6220:
  7268  0021AE                     
  7269                           ; BSR set to: 0
  7270  0021AE  0E66               	movlw	102
  7271  0021B0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7272  0021B2  A4D8               	btfss	status,2,c
  7273  0021B4  EFDE  F010         	goto	u6231
  7274  0021B8  EFE0  F010         	goto	u6230
  7275  0021BC                     u6231:
  7276  0021BC  EFE9  F010         	goto	l5290
  7277  0021C0                     u6230:
  7278  0021C0                     
  7279                           ; BSR set to: 0
  7280  0021C0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7281  0021C2  EFE7  F010         	goto	u6240
  7282  0021C6  EFE5  F010         	goto	u6241
  7283  0021CA                     u6241:
  7284  0021CA  EFE9  F010         	goto	l5290
  7285  0021CE                     u6240:
  7286  0021CE                     l5288:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  7290  0021CE  4B72               	infsnz	efgtoa@m& (0+255),f,b
  7291  0021D0  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  7292  0021D2                     l5290:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  7296  0021D2  0E66               	movlw	102
  7297  0021D4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7298  0021D6  A4D8               	btfss	status,2,c
  7299  0021D8  EFF0  F010         	goto	u6251
  7300  0021DC  EFF2  F010         	goto	u6250
  7301  0021E0                     u6251:
  7302  0021E0  EF12  F011         	goto	l5300
  7303  0021E4                     u6250:
  7304  0021E4                     
  7305                           ; BSR set to: 0
  7306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  7307  0021E4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7308  0021E6  EFF9  F010         	goto	u6260
  7309  0021EA  EFF7  F010         	goto	u6261
  7310  0021EE                     u6261:
  7311  0021EE  EF05  F011         	goto	l5296
  7312  0021F2                     u6260:
  7313  0021F2                     
  7314                           ; BSR set to: 0
  7315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  7316  0021F2  0E00               	movlw	0
  7317  0021F4  6F94               	movwf	efgtoa@u& (0+255),b
  7318  0021F6  0E00               	movlw	0
  7319  0021F8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  7320  0021FA  0E80               	movlw	128
  7321  0021FC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  7322  0021FE  0E3F               	movlw	63
  7323  002200  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  7324                           
  7325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  7326  002202  0E00               	movlw	0
  7327  002204  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  7328  002206  0E00               	movlw	0
  7329  002208  6F90               	movwf	efgtoa@e& (0+255),b
  7330  00220A                     l5296:
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  7334  00220A  0E67               	movlw	103
  7335  00220C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7336  00220E  B4D8               	btfsc	status,2,c
  7337  002210  EF0C  F011         	goto	u6271
  7338  002214  EF0E  F011         	goto	u6270
  7339  002218                     u6271:
  7340  002218  EF12  F011         	goto	l5300
  7341  00221C                     u6270:
  7342  00221C                     
  7343                           ; BSR set to: 0
  7344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  7345  00221C  5190               	movf	efgtoa@e& (0+255),w,b
  7346  00221E  2772               	addwf	efgtoa@m& (0+255),f,b
  7347  002220  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  7348  002222  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7349  002224                     l5300:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  7353  002224  0E00               	movlw	0
  7354  002226  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  7355  002228  0E00               	movlw	0
  7356  00222A  6F8A               	movwf	efgtoa@i& (0+255),b
  7357  00222C                     
  7358                           ; BSR set to: 0
  7359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  7360  00222C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  7361  002230  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  7362  002234  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  7363  002238  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  7364  00223C                     
  7365                           ; BSR set to: 0
  7366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  7367  00223C  C094  F074         	movff	efgtoa@u,efgtoa@ou
  7368  002240  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  7369  002244  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  7370  002248  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  7371                           
  7372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7373  00224C  EFA3  F011         	goto	l5314
  7374  002250                     l5306:
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  7378  002250  C082  F011         	movff	efgtoa@h,___fldiv@b
  7379  002254  C083  F012         	movff	efgtoa@h+1,___fldiv@b+1
  7380  002258  C084  F013         	movff	efgtoa@h+2,___fldiv@b+2
  7381  00225C  C085  F014         	movff	efgtoa@h+3,___fldiv@b+3
  7382  002260  C094  F015         	movff	efgtoa@u,___fldiv@a
  7383  002264  C095  F016         	movff	efgtoa@u+1,___fldiv@a+1
  7384  002268  C096  F017         	movff	efgtoa@u+2,___fldiv@a+2
  7385  00226C  C097  F018         	movff	efgtoa@u+3,___fldiv@a+3
  7386  002270  EC2E  F019         	call	___fldiv	;wreg free
  7387  002274  C011  F02A         	movff	?___fldiv,floorf@x
  7388  002278  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  7389  00227C  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  7390  002280  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  7391  002284  EC0D  F01F         	call	_floorf	;wreg free
  7392  002288  C02A  F086         	movff	?_floorf,efgtoa@l
  7393  00228C  C02B  F087         	movff	?_floorf+1,efgtoa@l+1
  7394  002290  C02C  F088         	movff	?_floorf+2,efgtoa@l+2
  7395  002294  C02D  F089         	movff	?_floorf+3,efgtoa@l+3
  7396                           
  7397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  7398  002298  C086  F001         	movff	efgtoa@l,___fltol@f1
  7399  00229C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  7400  0022A0  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  7401  0022A4  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  7402  0022A8  EC9D  F027         	call	___fltol	;wreg free
  7403  0022AC  C001  F078         	movff	?___fltol,efgtoa@d
  7404  0022B0  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  7405  0022B4                     
  7406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  7407  0022B4  C082  F043         	movff	efgtoa@h,___flsub@b
  7408  0022B8  C083  F044         	movff	efgtoa@h+1,___flsub@b+1
  7409  0022BC  C084  F045         	movff	efgtoa@h+2,___flsub@b+2
  7410  0022C0  C085  F046         	movff	efgtoa@h+3,___flsub@b+3
  7411  0022C4  C094  F02E         	movff	efgtoa@u,___flmul@a
  7412  0022C8  C095  F02F         	movff	efgtoa@u+1,___flmul@a+1
  7413  0022CC  C096  F030         	movff	efgtoa@u+2,___flmul@a+2
  7414  0022D0  C097  F031         	movff	efgtoa@u+3,___flmul@a+3
  7415  0022D4  C086  F02A         	movff	efgtoa@l,___flmul@b
  7416  0022D8  C087  F02B         	movff	efgtoa@l+1,___flmul@b+1
  7417  0022DC  C088  F02C         	movff	efgtoa@l+2,___flmul@b+2
  7418  0022E0  C089  F02D         	movff	efgtoa@l+3,___flmul@b+3
  7419  0022E4  EC19  F017         	call	___flmul	;wreg free
  7420  0022E8  C02A  F047         	movff	?___flmul,___flsub@a
  7421  0022EC  C02B  F048         	movff	?___flmul+1,___flsub@a+1
  7422  0022F0  C02C  F049         	movff	?___flmul+2,___flsub@a+2
  7423  0022F4  C02D  F04A         	movff	?___flmul+3,___flsub@a+3
  7424  0022F8  EC25  F02E         	call	___flsub	;wreg free
  7425  0022FC  C043  F082         	movff	?___flsub,efgtoa@h
  7426  002300  C044  F083         	movff	?___flsub+1,efgtoa@h+1
  7427  002304  C045  F084         	movff	?___flsub+2,efgtoa@h+2
  7428  002308  C046  F085         	movff	?___flsub+3,efgtoa@h+3
  7429  00230C                     
  7430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  7431  00230C  C094  F011         	movff	efgtoa@u,___fldiv@b
  7432  002310  C095  F012         	movff	efgtoa@u+1,___fldiv@b+1
  7433  002314  C096  F013         	movff	efgtoa@u+2,___fldiv@b+2
  7434  002318  C097  F014         	movff	efgtoa@u+3,___fldiv@b+3
  7435  00231C  0E00               	movlw	0
  7436  00231E  6E15               	movwf	___fldiv@a^0,c
  7437  002320  0E00               	movlw	0
  7438  002322  6E16               	movwf	(___fldiv@a+1)^0,c
  7439  002324  0E20               	movlw	32
  7440  002326  6E17               	movwf	(___fldiv@a+2)^0,c
  7441  002328  0E41               	movlw	65
  7442  00232A  6E18               	movwf	(___fldiv@a+3)^0,c
  7443  00232C  EC2E  F019         	call	___fldiv	;wreg free
  7444  002330  C011  F094         	movff	?___fldiv,efgtoa@u
  7445  002334  C012  F095         	movff	?___fldiv+1,efgtoa@u+1
  7446  002338  C013  F096         	movff	?___fldiv+2,efgtoa@u+2
  7447  00233C  C014  F097         	movff	?___fldiv+3,efgtoa@u+3
  7448  002340                     
  7449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  7450  002340  0100               	movlb	0	; () banked
  7451  002342  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  7452  002344  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  7453  002346                     l5314:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7457  002346  5172               	movf	efgtoa@m& (0+255),w,b
  7458  002348  5D8A               	subwf	efgtoa@i& (0+255),w,b
  7459  00234A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  7460  00234C  0A80               	xorlw	128
  7461  00234E  6E56               	movwf	??_efgtoa^0,c
  7462  002350  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  7463  002352  0A80               	xorlw	128
  7464  002354  5856               	subwfb	??_efgtoa^0,w,c
  7465  002356  A0D8               	btfss	status,0,c
  7466  002358  EFB0  F011         	goto	u6281
  7467  00235C  EFB2  F011         	goto	u6280
  7468  002360                     u6281:
  7469  002360  EF28  F011         	goto	l5306
  7470  002364                     u6280:
  7471  002364                     
  7472                           ; BSR set to: 0
  7473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  7474  002364  C094  F02A         	movff	efgtoa@u,___flmul@b
  7475  002368  C095  F02B         	movff	efgtoa@u+1,___flmul@b+1
  7476  00236C  C096  F02C         	movff	efgtoa@u+2,___flmul@b+2
  7477  002370  C097  F02D         	movff	efgtoa@u+3,___flmul@b+3
  7478  002374  0E00               	movlw	0
  7479  002376  6E2E               	movwf	___flmul@a^0,c
  7480  002378  0E00               	movlw	0
  7481  00237A  6E2F               	movwf	(___flmul@a+1)^0,c
  7482  00237C  0EA0               	movlw	160
  7483  00237E  6E30               	movwf	(___flmul@a+2)^0,c
  7484  002380  0E40               	movlw	64
  7485  002382  6E31               	movwf	(___flmul@a+3)^0,c
  7486  002384  EC19  F017         	call	___flmul	;wreg free
  7487  002388  C02A  F086         	movff	?___flmul,efgtoa@l
  7488  00238C  C02B  F087         	movff	?___flmul+1,efgtoa@l+1
  7489  002390  C02C  F088         	movff	?___flmul+2,efgtoa@l+2
  7490  002394  C02D  F089         	movff	?___flmul+3,efgtoa@l+3
  7491  002398                     
  7492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  7493  002398  C082  F043         	movff	efgtoa@h,___flge@ff1
  7494  00239C  C083  F044         	movff	efgtoa@h+1,___flge@ff1+1
  7495  0023A0  C084  F045         	movff	efgtoa@h+2,___flge@ff1+2
  7496  0023A4  C085  F046         	movff	efgtoa@h+3,___flge@ff1+3
  7497  0023A8  C086  F047         	movff	efgtoa@l,___flge@ff2
  7498  0023AC  C087  F048         	movff	efgtoa@l+1,___flge@ff2+1
  7499  0023B0  C088  F049         	movff	efgtoa@l+2,___flge@ff2+2
  7500  0023B4  C089  F04A         	movff	efgtoa@l+3,___flge@ff2+3
  7501  0023B8  EC20  F028         	call	___flge	;wreg free
  7502  0023BC  B0D8               	btfsc	status,0,c
  7503  0023BE  EFE3  F011         	goto	u6291
  7504  0023C2  EFE5  F011         	goto	u6290
  7505  0023C6                     u6291:
  7506  0023C6  EFF0  F011         	goto	l5322
  7507  0023CA                     u6290:
  7508  0023CA                     
  7509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  7510  0023CA  0E00               	movlw	0
  7511  0023CC  0100               	movlb	0	; () banked
  7512  0023CE  6F86               	movwf	efgtoa@l& (0+255),b
  7513  0023D0  0E00               	movlw	0
  7514  0023D2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  7515  0023D4  0E00               	movlw	0
  7516  0023D6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  7517  0023D8  0E00               	movlw	0
  7518  0023DA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  7519                           
  7520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  7521  0023DC  EF19  F012         	goto	l5328
  7522  0023E0                     l5322:
  7523                           
  7524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  7525  0023E0  C082  F001         	movff	efgtoa@h,___fleq@ff1
  7526  0023E4  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  7527  0023E8  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  7528  0023EC  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  7529  0023F0  C086  F005         	movff	efgtoa@l,___fleq@ff2
  7530  0023F4  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  7531  0023F8  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  7532  0023FC  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  7533  002400  ECEF  F02B         	call	___fleq	;wreg free
  7534  002404  A0D8               	btfss	status,0,c
  7535  002406  EF07  F012         	goto	u6301
  7536  00240A  EF09  F012         	goto	u6300
  7537  00240E                     u6301:
  7538  00240E  EF19  F012         	goto	l5328
  7539  002412                     u6300:
  7540  002412  0100               	movlb	0	; () banked
  7541  002414  B178               	btfsc	efgtoa@d& (0+255),0,b
  7542  002416  EF0F  F012         	goto	u6311
  7543  00241A  EF11  F012         	goto	u6310
  7544  00241E                     u6311:
  7545  00241E  EF19  F012         	goto	l5328
  7546  002422                     u6310:
  7547  002422                     
  7548                           ; BSR set to: 0
  7549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  7550  002422  0E00               	movlw	0
  7551  002424  6F86               	movwf	efgtoa@l& (0+255),b
  7552  002426  0E00               	movlw	0
  7553  002428  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  7554  00242A  0E00               	movlw	0
  7555  00242C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  7556  00242E  0E00               	movlw	0
  7557  002430  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  7558  002432                     l5328:
  7559                           
  7560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  7561  002432  C08C  F001         	movff	efgtoa@g,___fladd@b
  7562  002436  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  7563  00243A  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  7564  00243E  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  7565  002442  C086  F005         	movff	efgtoa@l,___fladd@a
  7566  002446  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  7567  00244A  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  7568  00244E  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  7569  002452  ECB9  F014         	call	___fladd	;wreg free
  7570  002456  C001  F082         	movff	?___fladd,efgtoa@h
  7571  00245A  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  7572  00245E  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  7573  002462  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  7574  002466                     
  7575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  7576  002466  C082  F043         	movff	efgtoa@h,___flge@ff1
  7577  00246A  C083  F044         	movff	efgtoa@h+1,___flge@ff1+1
  7578  00246E  C084  F045         	movff	efgtoa@h+2,___flge@ff1+2
  7579  002472  C085  F046         	movff	efgtoa@h+3,___flge@ff1+3
  7580  002476  0E00               	movlw	0
  7581  002478  6E2E               	movwf	___flmul@a^0,c
  7582  00247A  0E00               	movlw	0
  7583  00247C  6E2F               	movwf	(___flmul@a+1)^0,c
  7584  00247E  0E20               	movlw	32
  7585  002480  6E30               	movwf	(___flmul@a+2)^0,c
  7586  002482  0E41               	movlw	65
  7587  002484  6E31               	movwf	(___flmul@a+3)^0,c
  7588  002486  C074  F02A         	movff	efgtoa@ou,___flmul@b
  7589  00248A  C075  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  7590  00248E  C076  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  7591  002492  C077  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  7592  002496  EC19  F017         	call	___flmul	;wreg free
  7593  00249A  C02A  F047         	movff	?___flmul,___flge@ff2
  7594  00249E  C02B  F048         	movff	?___flmul+1,___flge@ff2+1
  7595  0024A2  C02C  F049         	movff	?___flmul+2,___flge@ff2+2
  7596  0024A6  C02D  F04A         	movff	?___flmul+3,___flge@ff2+3
  7597  0024AA  EC20  F028         	call	___flge	;wreg free
  7598  0024AE  A0D8               	btfss	status,0,c
  7599  0024B0  EF5C  F012         	goto	u6321
  7600  0024B4  EF5E  F012         	goto	u6320
  7601  0024B8                     u6321:
  7602  0024B8  EF87  F012         	goto	l5340
  7603  0024BC                     u6320:
  7604  0024BC                     
  7605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  7606  0024BC  0100               	movlb	0	; () banked
  7607  0024BE  4B90               	infsnz	efgtoa@e& (0+255),f,b
  7608  0024C0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  7609  0024C2                     
  7610                           ; BSR set to: 0
  7611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  7612  0024C2  C074  F02A         	movff	efgtoa@ou,___flmul@b
  7613  0024C6  C075  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  7614  0024CA  C076  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  7615  0024CE  C077  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  7616  0024D2  0E00               	movlw	0
  7617  0024D4  6E2E               	movwf	___flmul@a^0,c
  7618  0024D6  0E00               	movlw	0
  7619  0024D8  6E2F               	movwf	(___flmul@a+1)^0,c
  7620  0024DA  0E20               	movlw	32
  7621  0024DC  6E30               	movwf	(___flmul@a+2)^0,c
  7622  0024DE  0E41               	movlw	65
  7623  0024E0  6E31               	movwf	(___flmul@a+3)^0,c
  7624  0024E2  EC19  F017         	call	___flmul	;wreg free
  7625  0024E6  C02A  F074         	movff	?___flmul,efgtoa@ou
  7626  0024EA  C02B  F075         	movff	?___flmul+1,efgtoa@ou+1
  7627  0024EE  C02C  F076         	movff	?___flmul+2,efgtoa@ou+2
  7628  0024F2  C02D  F077         	movff	?___flmul+3,efgtoa@ou+3
  7629  0024F6                     
  7630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7631  0024F6  0E66               	movlw	102
  7632  0024F8  0100               	movlb	0	; () banked
  7633  0024FA  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7634  0024FC  A4D8               	btfss	status,2,c
  7635  0024FE  EF83  F012         	goto	u6331
  7636  002502  EF85  F012         	goto	u6330
  7637  002506                     u6331:
  7638  002506  EF87  F012         	goto	l5340
  7639  00250A                     u6330:
  7640  00250A                     
  7641                           ; BSR set to: 0
  7642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  7643  00250A  4B72               	infsnz	efgtoa@m& (0+255),f,b
  7644  00250C  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  7645  00250E                     l5340:
  7646                           
  7647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7648  00250E  C074  F094         	movff	efgtoa@ou,efgtoa@u
  7649  002512  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  7650  002516  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  7651  00251A  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  7652  00251E                     
  7653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7654  00251E  0E65               	movlw	101
  7655  002520  0100               	movlb	0	; () banked
  7656  002522  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7657  002524  B4D8               	btfsc	status,2,c
  7658  002526  EF97  F012         	goto	u6341
  7659  00252A  EF99  F012         	goto	u6340
  7660  00252E                     u6341:
  7661  00252E  EF9F  F012         	goto	l5346
  7662  002532                     u6340:
  7663  002532                     
  7664                           ; BSR set to: 0
  7665  002532  C090  F070         	movff	efgtoa@e,efgtoa@ne
  7666  002536  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  7667  00253A  EFA3  F012         	goto	l1240
  7668  00253E                     l5346:
  7669                           
  7670                           ; BSR set to: 0
  7671  00253E  0E00               	movlw	0
  7672  002540  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  7673  002542  0E00               	movlw	0
  7674  002544  6F70               	movwf	efgtoa@ne& (0+255),b
  7675  002546                     l1240:
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7679  002546  0E00               	movlw	0
  7680  002548  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  7681  00254A  0E00               	movlw	0
  7682  00254C  6F6E               	movwf	efgtoa@pp& (0+255),b
  7683                           
  7684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7685  00254E  0E00               	movlw	0
  7686  002550  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  7687  002552  0E00               	movlw	0
  7688  002554  6F6C               	movwf	efgtoa@t& (0+255),b
  7689                           
  7690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7691  002556  0E00               	movlw	0
  7692  002558  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  7693  00255A  0E00               	movlw	0
  7694  00255C  6F8A               	movwf	efgtoa@i& (0+255),b
  7695                           
  7696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7697  00255E  EF9E  F013         	goto	l5396
  7698  002562                     l5348:
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7702  002562  C082  F011         	movff	efgtoa@h,___fldiv@b
  7703  002566  C083  F012         	movff	efgtoa@h+1,___fldiv@b+1
  7704  00256A  C084  F013         	movff	efgtoa@h+2,___fldiv@b+2
  7705  00256E  C085  F014         	movff	efgtoa@h+3,___fldiv@b+3
  7706  002572  C094  F015         	movff	efgtoa@u,___fldiv@a
  7707  002576  C095  F016         	movff	efgtoa@u+1,___fldiv@a+1
  7708  00257A  C096  F017         	movff	efgtoa@u+2,___fldiv@a+2
  7709  00257E  C097  F018         	movff	efgtoa@u+3,___fldiv@a+3
  7710  002582  EC2E  F019         	call	___fldiv	;wreg free
  7711  002586  C011  F02A         	movff	?___fldiv,floorf@x
  7712  00258A  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  7713  00258E  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  7714  002592  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  7715  002596  EC0D  F01F         	call	_floorf	;wreg free
  7716  00259A  C02A  F086         	movff	?_floorf,efgtoa@l
  7717  00259E  C02B  F087         	movff	?_floorf+1,efgtoa@l+1
  7718  0025A2  C02C  F088         	movff	?_floorf+2,efgtoa@l+2
  7719  0025A6  C02D  F089         	movff	?_floorf+3,efgtoa@l+3
  7720                           
  7721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7722  0025AA  C086  F001         	movff	efgtoa@l,___fltol@f1
  7723  0025AE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  7724  0025B2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  7725  0025B6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  7726  0025BA  EC9D  F027         	call	___fltol	;wreg free
  7727  0025BE  C001  F078         	movff	?___fltol,efgtoa@d
  7728  0025C2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  7729  0025C6                     
  7730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7731  0025C6  0100               	movlb	0	; () banked
  7732  0025C8  B9F5               	btfsc	_flags& (0+255),4,b
  7733  0025CA  EFE9  F012         	goto	u6351
  7734  0025CE  EFEB  F012         	goto	u6350
  7735  0025D2                     u6351:
  7736  0025D2  EF08  F013         	goto	l5360
  7737  0025D6                     u6350:
  7738  0025D6                     
  7739                           ; BSR set to: 0
  7740  0025D6  5178               	movf	efgtoa@d& (0+255),w,b
  7741  0025D8  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7742  0025DA  A4D8               	btfss	status,2,c
  7743  0025DC  EFF2  F012         	goto	u6361
  7744  0025E0  EFF4  F012         	goto	u6360
  7745  0025E4                     u6361:
  7746  0025E4  EF08  F013         	goto	l5360
  7747  0025E8                     u6360:
  7748  0025E8                     
  7749                           ; BSR set to: 0
  7750  0025E8  0E67               	movlw	103
  7751  0025EA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7752  0025EC  A4D8               	btfss	status,2,c
  7753  0025EE  EFFB  F012         	goto	u6371
  7754  0025F2  EFFD  F012         	goto	u6370
  7755  0025F6                     u6371:
  7756  0025F6  EF08  F013         	goto	l5360
  7757  0025FA                     u6370:
  7758  0025FA                     
  7759                           ; BSR set to: 0
  7760  0025FA  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7761  0025FC  EF04  F013         	goto	u6380
  7762  002600  EF02  F013         	goto	u6381
  7763  002604                     u6381:
  7764  002604  EF08  F013         	goto	l5360
  7765  002608                     u6380:
  7766  002608                     
  7767                           ; BSR set to: 0
  7768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7769  002608  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  7770  00260A  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  7771                           
  7772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7773  00260C  EF52  F013         	goto	l5388
  7774  002610                     l5360:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7778  002610  516E               	movf	efgtoa@pp& (0+255),w,b
  7779  002612  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7780  002614  A4D8               	btfss	status,2,c
  7781  002616  EF0F  F013         	goto	u6391
  7782  00261A  EF11  F013         	goto	u6390
  7783  00261E                     u6391:
  7784  00261E  EF3B  F013         	goto	l5380
  7785  002622                     u6390:
  7786  002622                     
  7787                           ; BSR set to: 0
  7788  002622  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7789  002624  EF18  F013         	goto	u6400
  7790  002628  EF16  F013         	goto	u6401
  7791  00262C                     u6401:
  7792  00262C  EF3B  F013         	goto	l5380
  7793  002630                     u6400:
  7794  002630                     
  7795                           ; BSR set to: 0
  7796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7797  002630  0E5C               	movlw	low _dbuf
  7798  002632  2592               	addwf	efgtoa@n& (0+255),w,b
  7799  002634  6ED9               	movwf	fsr2l,c
  7800  002636  0E01               	movlw	high _dbuf
  7801  002638  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7802  00263A  6EDA               	movwf	fsr2h,c
  7803  00263C  0E2E               	movlw	46
  7804  00263E  6EDF               	movwf	indf2,c
  7805  002640                     
  7806                           ; BSR set to: 0
  7807  002640  4B92               	infsnz	efgtoa@n& (0+255),f,b
  7808  002642  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  7809  002644                     
  7810                           ; BSR set to: 0
  7811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7812  002644  077E               	decf	efgtoa@w& (0+255),f,b
  7813  002646  A0D8               	btfss	status,0,c
  7814  002648  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7815  00264A                     
  7816                           ; BSR set to: 0
  7817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7818  00264A  0E00               	movlw	0
  7819  00264C  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  7820  00264E  0E01               	movlw	1
  7821  002650  6F6E               	movwf	efgtoa@pp& (0+255),b
  7822  002652  EF3B  F013         	goto	l5380
  7823  002656                     l5372:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7827  002656  0E5C               	movlw	low _dbuf
  7828  002658  2592               	addwf	efgtoa@n& (0+255),w,b
  7829  00265A  6ED9               	movwf	fsr2l,c
  7830  00265C  0E01               	movlw	high _dbuf
  7831  00265E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7832  002660  6EDA               	movwf	fsr2h,c
  7833  002662  0E30               	movlw	48
  7834  002664  6EDF               	movwf	indf2,c
  7835  002666                     
  7836                           ; BSR set to: 0
  7837  002666  4B92               	infsnz	efgtoa@n& (0+255),f,b
  7838  002668  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  7839  00266A                     
  7840                           ; BSR set to: 0
  7841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7842  00266A  077E               	decf	efgtoa@w& (0+255),f,b
  7843  00266C  A0D8               	btfss	status,0,c
  7844  00266E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7845  002670                     
  7846                           ; BSR set to: 0
  7847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7848  002670  076C               	decf	efgtoa@t& (0+255),f,b
  7849  002672  A0D8               	btfss	status,0,c
  7850  002674  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  7851  002676                     l5380:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7855  002676  516C               	movf	efgtoa@t& (0+255),w,b
  7856  002678  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7857  00267A  A4D8               	btfss	status,2,c
  7858  00267C  EF42  F013         	goto	u6411
  7859  002680  EF44  F013         	goto	u6410
  7860  002684                     u6411:
  7861  002684  EF2B  F013         	goto	l5372
  7862  002688                     u6410:
  7863  002688                     
  7864                           ; BSR set to: 0
  7865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7866  002688  0E5C               	movlw	low _dbuf
  7867  00268A  2592               	addwf	efgtoa@n& (0+255),w,b
  7868  00268C  6ED9               	movwf	fsr2l,c
  7869  00268E  0E01               	movlw	high _dbuf
  7870  002690  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7871  002692  6EDA               	movwf	fsr2h,c
  7872  002694  5178               	movf	efgtoa@d& (0+255),w,b
  7873  002696  0F30               	addlw	48
  7874  002698  6EDF               	movwf	indf2,c
  7875  00269A                     
  7876                           ; BSR set to: 0
  7877  00269A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  7878  00269C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  7879  00269E                     
  7880                           ; BSR set to: 0
  7881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7882  00269E  077E               	decf	efgtoa@w& (0+255),f,b
  7883  0026A0  A0D8               	btfss	status,0,c
  7884  0026A2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7885  0026A4                     l5388:
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7889  0026A4  C082  F043         	movff	efgtoa@h,___flsub@b
  7890  0026A8  C083  F044         	movff	efgtoa@h+1,___flsub@b+1
  7891  0026AC  C084  F045         	movff	efgtoa@h+2,___flsub@b+2
  7892  0026B0  C085  F046         	movff	efgtoa@h+3,___flsub@b+3
  7893  0026B4  C094  F02E         	movff	efgtoa@u,___flmul@a
  7894  0026B8  C095  F02F         	movff	efgtoa@u+1,___flmul@a+1
  7895  0026BC  C096  F030         	movff	efgtoa@u+2,___flmul@a+2
  7896  0026C0  C097  F031         	movff	efgtoa@u+3,___flmul@a+3
  7897  0026C4  C086  F02A         	movff	efgtoa@l,___flmul@b
  7898  0026C8  C087  F02B         	movff	efgtoa@l+1,___flmul@b+1
  7899  0026CC  C088  F02C         	movff	efgtoa@l+2,___flmul@b+2
  7900  0026D0  C089  F02D         	movff	efgtoa@l+3,___flmul@b+3
  7901  0026D4  EC19  F017         	call	___flmul	;wreg free
  7902  0026D8  C02A  F047         	movff	?___flmul,___flsub@a
  7903  0026DC  C02B  F048         	movff	?___flmul+1,___flsub@a+1
  7904  0026E0  C02C  F049         	movff	?___flmul+2,___flsub@a+2
  7905  0026E4  C02D  F04A         	movff	?___flmul+3,___flsub@a+3
  7906  0026E8  EC25  F02E         	call	___flsub	;wreg free
  7907  0026EC  C043  F082         	movff	?___flsub,efgtoa@h
  7908  0026F0  C044  F083         	movff	?___flsub+1,efgtoa@h+1
  7909  0026F4  C045  F084         	movff	?___flsub+2,efgtoa@h+2
  7910  0026F8  C046  F085         	movff	?___flsub+3,efgtoa@h+3
  7911  0026FC                     
  7912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7913  0026FC  C094  F011         	movff	efgtoa@u,___fldiv@b
  7914  002700  C095  F012         	movff	efgtoa@u+1,___fldiv@b+1
  7915  002704  C096  F013         	movff	efgtoa@u+2,___fldiv@b+2
  7916  002708  C097  F014         	movff	efgtoa@u+3,___fldiv@b+3
  7917  00270C  0E00               	movlw	0
  7918  00270E  6E15               	movwf	___fldiv@a^0,c
  7919  002710  0E00               	movlw	0
  7920  002712  6E16               	movwf	(___fldiv@a+1)^0,c
  7921  002714  0E20               	movlw	32
  7922  002716  6E17               	movwf	(___fldiv@a+2)^0,c
  7923  002718  0E41               	movlw	65
  7924  00271A  6E18               	movwf	(___fldiv@a+3)^0,c
  7925  00271C  EC2E  F019         	call	___fldiv	;wreg free
  7926  002720  C011  F094         	movff	?___fldiv,efgtoa@u
  7927  002724  C012  F095         	movff	?___fldiv+1,efgtoa@u+1
  7928  002728  C013  F096         	movff	?___fldiv+2,efgtoa@u+2
  7929  00272C  C014  F097         	movff	?___fldiv+3,efgtoa@u+3
  7930  002730                     
  7931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7932  002730  0100               	movlb	0	; () banked
  7933  002732  0770               	decf	efgtoa@ne& (0+255),f,b
  7934  002734  A0D8               	btfss	status,0,c
  7935  002736  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  7936  002738                     
  7937                           ; BSR set to: 0
  7938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7939  002738  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  7940  00273A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  7941  00273C                     l5396:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7945  00273C  5172               	movf	efgtoa@m& (0+255),w,b
  7946  00273E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  7947  002740  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  7948  002742  0A80               	xorlw	128
  7949  002744  6E56               	movwf	??_efgtoa^0,c
  7950  002746  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  7951  002748  0A80               	xorlw	128
  7952  00274A  5856               	subwfb	??_efgtoa^0,w,c
  7953  00274C  B0D8               	btfsc	status,0,c
  7954  00274E  EFAB  F013         	goto	u6421
  7955  002752  EFAD  F013         	goto	u6420
  7956  002756                     u6421:
  7957  002756  EFBB  F013         	goto	l5400
  7958  00275A                     u6420:
  7959  00275A                     
  7960                           ; BSR set to: 0
  7961  00275A  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7962  00275C  EFB9  F013         	goto	u6431
  7963  002760  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  7964  002762  E109               	bnz	u6430
  7965  002764  0E4B               	movlw	75
  7966  002766  5D92               	subwf	efgtoa@n& (0+255),w,b
  7967  002768  A0D8               	btfss	status,0,c
  7968  00276A  EFB9  F013         	goto	u6431
  7969  00276E  EFBB  F013         	goto	u6430
  7970  002772                     u6431:
  7971  002772  EFB1  F012         	goto	l5348
  7972  002776                     u6430:
  7973  002776                     l5400:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7977  002776  516E               	movf	efgtoa@pp& (0+255),w,b
  7978  002778  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7979  00277A  A4D8               	btfss	status,2,c
  7980  00277C  EFC2  F013         	goto	u6441
  7981  002780  EFC4  F013         	goto	u6440
  7982  002784                     u6441:
  7983  002784  EFD5  F013         	goto	l5408
  7984  002788                     u6440:
  7985  002788                     
  7986                           ; BSR set to: 0
  7987  002788  A9F5               	btfss	_flags& (0+255),4,b
  7988  00278A  EFC9  F013         	goto	u6451
  7989  00278E  EFCB  F013         	goto	u6450
  7990  002792                     u6451:
  7991  002792  EFD5  F013         	goto	l5408
  7992  002796                     u6450:
  7993  002796                     
  7994                           ; BSR set to: 0
  7995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7996  002796  0E5C               	movlw	low _dbuf
  7997  002798  2592               	addwf	efgtoa@n& (0+255),w,b
  7998  00279A  6ED9               	movwf	fsr2l,c
  7999  00279C  0E01               	movlw	high _dbuf
  8000  00279E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8001  0027A0  6EDA               	movwf	fsr2h,c
  8002  0027A2  0E2E               	movlw	46
  8003  0027A4  6EDF               	movwf	indf2,c
  8004  0027A6                     
  8005                           ; BSR set to: 0
  8006  0027A6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  8007  0027A8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  8008  0027AA                     l5408:
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  8012  0027AA  0E5C               	movlw	low _dbuf
  8013  0027AC  2592               	addwf	efgtoa@n& (0+255),w,b
  8014  0027AE  6ED9               	movwf	fsr2l,c
  8015  0027B0  0E01               	movlw	high _dbuf
  8016  0027B2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8017  0027B4  6EDA               	movwf	fsr2h,c
  8018  0027B6  0E00               	movlw	0
  8019  0027B8  6EDF               	movwf	indf2,c
  8020  0027BA                     
  8021                           ; BSR set to: 0
  8022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  8023  0027BA  0E65               	movlw	101
  8024  0027BC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  8025  0027BE  A4D8               	btfss	status,2,c
  8026  0027C0  EFE4  F013         	goto	u6461
  8027  0027C4  EFE6  F013         	goto	u6460
  8028  0027C8                     u6461:
  8029  0027C8  EF40  F00F         	goto	l5210
  8030  0027CC                     u6460:
  8031  0027CC                     
  8032                           ; BSR set to: 0
  8033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  8034  0027CC  0E00               	movlw	0
  8035  0027CE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  8036  0027D0  0E4F               	movlw	79
  8037  0027D2  6F8A               	movwf	efgtoa@i& (0+255),b
  8038  0027D4                     
  8039                           ; BSR set to: 0
  8040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  8041  0027D4  0E5C               	movlw	low _dbuf
  8042  0027D6  258A               	addwf	efgtoa@i& (0+255),w,b
  8043  0027D8  6ED9               	movwf	fsr2l,c
  8044  0027DA  0E01               	movlw	high _dbuf
  8045  0027DC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8046  0027DE  6EDA               	movwf	fsr2h,c
  8047  0027E0  0E00               	movlw	0
  8048  0027E2  6EDF               	movwf	indf2,c
  8049  0027E4                     
  8050                           ; BSR set to: 0
  8051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  8052  0027E4  0E00               	movlw	0
  8053  0027E6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8054  0027E8  0E00               	movlw	0
  8055  0027EA  6F7A               	movwf	efgtoa@sign& (0+255),b
  8056  0027EC                     
  8057                           ; BSR set to: 0
  8058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  8059  0027EC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8060  0027EE  EFFD  F013         	goto	u6470
  8061  0027F2  EFFB  F013         	goto	u6471
  8062  0027F6                     u6471:
  8063  0027F6  EF05  F014         	goto	l5424
  8064  0027FA                     u6470:
  8065  0027FA                     
  8066                           ; BSR set to: 0
  8067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  8068  0027FA  0E00               	movlw	0
  8069  0027FC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8070  0027FE  0E01               	movlw	1
  8071  002800  6F7A               	movwf	efgtoa@sign& (0+255),b
  8072  002802                     
  8073                           ; BSR set to: 0
  8074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  8075  002802  6D90               	negf	efgtoa@e& (0+255),b
  8076  002804  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  8077  002806  B0D8               	btfsc	status,0,c
  8078  002808  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  8079  00280A                     l5424:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  8083  00280A  0E00               	movlw	0
  8084  00280C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  8085  00280E  0E02               	movlw	2
  8086  002810  6F7C               	movwf	efgtoa@p& (0+255),b
  8087                           
  8088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  8089  002812  EF36  F014         	goto	l5436
  8090  002816                     l5426:
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  8094  002816  078A               	decf	efgtoa@i& (0+255),f,b
  8095  002818  A0D8               	btfss	status,0,c
  8096  00281A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  8097  00281C                     
  8098                           ; BSR set to: 0
  8099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  8100  00281C  0E5C               	movlw	low _dbuf
  8101  00281E  258A               	addwf	efgtoa@i& (0+255),w,b
  8102  002820  6ED9               	movwf	fsr2l,c
  8103  002822  0E01               	movlw	high _dbuf
  8104  002824  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8105  002826  6EDA               	movwf	fsr2h,c
  8106  002828  C090  F001         	movff	efgtoa@e,___awmod@dividend
  8107  00282C  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8108  002830  0E00               	movlw	0
  8109  002832  6E04               	movwf	(___awmod@divisor+1)^0,c
  8110  002834  0E0A               	movlw	10
  8111  002836  6E03               	movwf	___awmod@divisor^0,c
  8112  002838  EC97  F02B         	call	___awmod	;wreg free
  8113  00283C  5001               	movf	?___awmod^0,w,c
  8114  00283E  0F30               	addlw	48
  8115  002840  6EDF               	movwf	indf2,c
  8116  002842                     
  8117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  8118  002842  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  8119  002846  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8120  00284A  0E00               	movlw	0
  8121  00284C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8122  00284E  0E0A               	movlw	10
  8123  002850  6E03               	movwf	___awdiv@divisor^0,c
  8124  002852  EC35  F02B         	call	___awdiv	;wreg free
  8125  002856  C001  F090         	movff	?___awdiv,efgtoa@e
  8126  00285A  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  8127  00285E                     
  8128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  8129  00285E  0100               	movlb	0	; () banked
  8130  002860  077C               	decf	efgtoa@p& (0+255),f,b
  8131  002862  A0D8               	btfss	status,0,c
  8132  002864  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  8133  002866                     
  8134                           ; BSR set to: 0
  8135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  8136  002866  077E               	decf	efgtoa@w& (0+255),f,b
  8137  002868  A0D8               	btfss	status,0,c
  8138  00286A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  8139  00286C                     l5436:
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  8143  00286C  5190               	movf	efgtoa@e& (0+255),w,b
  8144  00286E  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8145  002870  A4D8               	btfss	status,2,c
  8146  002872  EF3D  F014         	goto	u6481
  8147  002876  EF3F  F014         	goto	u6480
  8148  00287A                     u6481:
  8149  00287A  EF0B  F014         	goto	l5426
  8150  00287E                     u6480:
  8151  00287E                     
  8152                           ; BSR set to: 0
  8153  00287E  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8154  002880  EF4C  F014         	goto	u6490
  8155  002884  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  8156  002886  E106               	bnz	u6491
  8157  002888  057C               	decf	efgtoa@p& (0+255),w,b
  8158  00288A  B0D8               	btfsc	status,0,c
  8159  00288C  EF4A  F014         	goto	u6491
  8160  002890  EF4C  F014         	goto	u6490
  8161  002894                     u6491:
  8162  002894  EF0B  F014         	goto	l5426
  8163  002898                     u6490:
  8164  002898                     
  8165                           ; BSR set to: 0
  8166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  8167  002898  078A               	decf	efgtoa@i& (0+255),f,b
  8168  00289A  A0D8               	btfss	status,0,c
  8169  00289C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  8170  00289E                     
  8171                           ; BSR set to: 0
  8172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  8173  00289E  517A               	movf	efgtoa@sign& (0+255),w,b
  8174  0028A0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8175  0028A2  A4D8               	btfss	status,2,c
  8176  0028A4  EF56  F014         	goto	u6501
  8177  0028A8  EF58  F014         	goto	u6500
  8178  0028AC                     u6501:
  8179  0028AC  EF5E  F014         	goto	l5446
  8180  0028B0                     u6500:
  8181  0028B0                     
  8182                           ; BSR set to: 0
  8183  0028B0  0E00               	movlw	0
  8184  0028B2  6F67               	movwf	(_efgtoa$1542+1)& (0+255),b
  8185  0028B4  0E2B               	movlw	43
  8186  0028B6  6F66               	movwf	_efgtoa$1542& (0+255),b
  8187  0028B8  EF62  F014         	goto	l5448
  8188  0028BC                     l5446:
  8189                           
  8190                           ; BSR set to: 0
  8191  0028BC  0E00               	movlw	0
  8192  0028BE  6F67               	movwf	(_efgtoa$1542+1)& (0+255),b
  8193  0028C0  0E2D               	movlw	45
  8194  0028C2  6F66               	movwf	_efgtoa$1542& (0+255),b
  8195  0028C4                     l5448:
  8196                           
  8197                           ; BSR set to: 0
  8198  0028C4  0E5C               	movlw	low _dbuf
  8199  0028C6  258A               	addwf	efgtoa@i& (0+255),w,b
  8200  0028C8  6ED9               	movwf	fsr2l,c
  8201  0028CA  0E01               	movlw	high _dbuf
  8202  0028CC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8203  0028CE  6EDA               	movwf	fsr2h,c
  8204  0028D0  C066  FFDF         	movff	_efgtoa$1542,indf2
  8205  0028D4                     
  8206                           ; BSR set to: 0
  8207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  8208  0028D4  077E               	decf	efgtoa@w& (0+255),f,b
  8209  0028D6  A0D8               	btfss	status,0,c
  8210  0028D8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  8211  0028DA                     
  8212                           ; BSR set to: 0
  8213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8214  0028DA  078A               	decf	efgtoa@i& (0+255),f,b
  8215  0028DC  A0D8               	btfss	status,0,c
  8216  0028DE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  8217  0028E0                     
  8218                           ; BSR set to: 0
  8219  0028E0  0EBF               	movlw	191
  8220  0028E2  6E56               	movwf	??_efgtoa^0,c
  8221  0028E4  0EFF               	movlw	255
  8222  0028E6  6E57               	movwf	(??_efgtoa+1)^0,c
  8223  0028E8  5055               	movf	efgtoa@c^0,w,c
  8224  0028EA  6E58               	movwf	(??_efgtoa+2)^0,c
  8225  0028EC  6A59               	clrf	(??_efgtoa+3)^0,c
  8226  0028EE  5056               	movf	??_efgtoa^0,w,c
  8227  0028F0  2658               	addwf	(??_efgtoa+2)^0,f,c
  8228  0028F2  5057               	movf	(??_efgtoa+1)^0,w,c
  8229  0028F4  2259               	addwfc	(??_efgtoa+3)^0,f,c
  8230  0028F6  5059               	movf	(??_efgtoa+3)^0,w,c
  8231  0028F8  E10A               	bnz	u6510
  8232  0028FA  0E1A               	movlw	26
  8233  0028FC  5C58               	subwf	(??_efgtoa+2)^0,w,c
  8234  0028FE  A0D8               	btfss	status,0,c
  8235  002900  EF84  F014         	goto	u6511
  8236  002904  EF87  F014         	goto	u6510
  8237  002908                     u6511:
  8238  002908  0E01               	movlw	1
  8239  00290A  EF88  F014         	goto	u6520
  8240  00290E                     u6510:
  8241  00290E  0E00               	movlw	0
  8242  002910                     u6520:
  8243  002910  6F6A               	movwf	_efgtoa$1544& (0+255),b
  8244  002912  6B6B               	clrf	(_efgtoa$1544+1)& (0+255),b
  8245  002914                     
  8246                           ; BSR set to: 0
  8247  002914  516A               	movf	_efgtoa$1544& (0+255),w,b
  8248  002916  116B               	iorwf	(_efgtoa$1544+1)& (0+255),w,b
  8249  002918  A4D8               	btfss	status,2,c
  8250  00291A  EF91  F014         	goto	u6531
  8251  00291E  EF93  F014         	goto	u6530
  8252  002922                     u6531:
  8253  002922  EF99  F014         	goto	l5462
  8254  002926                     u6530:
  8255  002926                     
  8256                           ; BSR set to: 0
  8257  002926  0E00               	movlw	0
  8258  002928  6F69               	movwf	(_efgtoa$1543+1)& (0+255),b
  8259  00292A  0E65               	movlw	101
  8260  00292C  6F68               	movwf	_efgtoa$1543& (0+255),b
  8261  00292E  EF9D  F014         	goto	l5464
  8262  002932                     l5462:
  8263                           
  8264                           ; BSR set to: 0
  8265  002932  0E00               	movlw	0
  8266  002934  6F69               	movwf	(_efgtoa$1543+1)& (0+255),b
  8267  002936  0E45               	movlw	69
  8268  002938  6F68               	movwf	_efgtoa$1543& (0+255),b
  8269  00293A                     l5464:
  8270                           
  8271                           ; BSR set to: 0
  8272  00293A  0E5C               	movlw	low _dbuf
  8273  00293C  258A               	addwf	efgtoa@i& (0+255),w,b
  8274  00293E  6ED9               	movwf	fsr2l,c
  8275  002940  0E01               	movlw	high _dbuf
  8276  002942  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8277  002944  6EDA               	movwf	fsr2h,c
  8278  002946  C068  FFDF         	movff	_efgtoa$1543,indf2
  8279  00294A                     
  8280                           ; BSR set to: 0
  8281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  8282  00294A  077E               	decf	efgtoa@w& (0+255),f,b
  8283  00294C  A0D8               	btfss	status,0,c
  8284  00294E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  8285  002950                     
  8286                           ; BSR set to: 0
  8287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8288  002950  0E5C               	movlw	low _dbuf
  8289  002952  2592               	addwf	efgtoa@n& (0+255),w,b
  8290  002954  6E01               	movwf	strcpy@dest^0,c
  8291  002956  0E01               	movlw	high _dbuf
  8292  002958  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8293  00295A  6E02               	movwf	(strcpy@dest+1)^0,c
  8294  00295C  0E5C               	movlw	low _dbuf
  8295  00295E  258A               	addwf	efgtoa@i& (0+255),w,b
  8296  002960  6E03               	movwf	strcpy@src^0,c
  8297  002962  0E01               	movlw	high _dbuf
  8298  002964  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8299  002966  6E04               	movwf	(strcpy@src+1)^0,c
  8300  002968  EC12  F02D         	call	_strcpy	;wreg free
  8301  00296C  EF40  F00F         	goto	l5210
  8302  002970                     l1194:
  8303  002970  0012               	return		;funcret
  8304  002972                     __end_of_efgtoa:
  8305                           	callstack 0
  8306                           
  8307 ;; *************** function _tolower *****************
  8308 ;; Defined at:
  8309 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  c               2    6[COMRAM] int 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  2    6[COMRAM] int 
  8316 ;; Registers used:
  8317 ;;		wreg, status,2, status,0
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8323 ;;      Params:         2       0       0       0       0       0       0       0       0
  8324 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8325 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8326 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8327 ;;Total ram usage:        8 bytes
  8328 ;; Hardware stack levels used: 1
  8329 ;; Hardware stack levels required when called: 1
  8330 ;; This function calls:
  8331 ;;		_isupper
  8332 ;; This function is called by:
  8333 ;;		_efgtoa
  8334 ;;		_vfpfcnvrt
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text17
  8339  005966                     __ptext17:
  8340                           	callstack 0
  8341  005966                     _tolower:
  8342                           	callstack 25
  8343  005966  0EBF               	movlw	191
  8344  005968  6E09               	movwf	??_tolower^0,c
  8345  00596A  0EFF               	movlw	255
  8346  00596C  6E0A               	movwf	(??_tolower+1)^0,c
  8347  00596E  C007  F00B         	movff	tolower@c,??_tolower+2
  8348  005972  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8349  005976  5009               	movf	??_tolower^0,w,c
  8350  005978  260B               	addwf	(??_tolower+2)^0,f,c
  8351  00597A  500A               	movf	(??_tolower+1)^0,w,c
  8352  00597C  220C               	addwfc	(??_tolower+3)^0,f,c
  8353  00597E  500C               	movf	(??_tolower+3)^0,w,c
  8354  005980  E10A               	bnz	u5580
  8355  005982  0E1A               	movlw	26
  8356  005984  5C0B               	subwf	(??_tolower+2)^0,w,c
  8357  005986  A0D8               	btfss	status,0,c
  8358  005988  EFC8  F02C         	goto	u5581
  8359  00598C  EFCB  F02C         	goto	u5580
  8360  005990                     u5581:
  8361  005990  0E01               	movlw	1
  8362  005992  EFCC  F02C         	goto	u5590
  8363  005996                     u5580:
  8364  005996  0E00               	movlw	0
  8365  005998                     u5590:
  8366  005998  6E0D               	movwf	_tolower$1854^0,c
  8367  00599A  6A0E               	clrf	(_tolower$1854+1)^0,c
  8368  00599C  500D               	movf	_tolower$1854^0,w,c
  8369  00599E  100E               	iorwf	(_tolower$1854+1)^0,w,c
  8370  0059A0  B4D8               	btfsc	status,2,c
  8371  0059A2  EFD5  F02C         	goto	u5601
  8372  0059A6  EFD7  F02C         	goto	u5600
  8373  0059AA                     u5601:
  8374  0059AA  EFDE  F02C         	goto	l1603
  8375  0059AE                     u5600:
  8376  0059AE  0E20               	movlw	32
  8377  0059B0  1007               	iorwf	tolower@c^0,w,c
  8378  0059B2  6E07               	movwf	?_tolower^0,c
  8379  0059B4  5008               	movf	(tolower@c+1)^0,w,c
  8380  0059B6  6E08               	movwf	(?_tolower+1)^0,c
  8381  0059B8  EFE2  F02C         	goto	l1608
  8382  0059BC                     l1603:
  8383  0059BC  C007  F007         	movff	tolower@c,?_tolower
  8384  0059C0  C008  F008         	movff	tolower@c+1,?_tolower+1
  8385  0059C4                     l1608:
  8386  0059C4  0012               	return		;funcret
  8387  0059C6                     __end_of_tolower:
  8388                           	callstack 0
  8389                           
  8390 ;; *************** function _isupper *****************
  8391 ;; Defined at:
  8392 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  c               2    0[COMRAM] int 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  2    0[COMRAM] int 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2, status,0
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8406 ;;      Params:         2       0       0       0       0       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8408 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8409 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8410 ;;Total ram usage:        6 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_efgtoa
  8416 ;;		_xtoa
  8417 ;;		_vfpfcnvrt
  8418 ;;		_tolower
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text18
  8423  005E02                     __ptext18:
  8424                           	callstack 0
  8425  005E02                     _isupper:
  8426                           	callstack 25
  8427  005E02  0EBF               	movlw	191
  8428  005E04  6E03               	movwf	??_isupper^0,c
  8429  005E06  0EFF               	movlw	255
  8430  005E08  6E04               	movwf	(??_isupper+1)^0,c
  8431  005E0A  C001  F005         	movff	isupper@c,??_isupper+2
  8432  005E0E  C002  F006         	movff	isupper@c+1,??_isupper+3
  8433  005E12  5003               	movf	??_isupper^0,w,c
  8434  005E14  2605               	addwf	(??_isupper+2)^0,f,c
  8435  005E16  5004               	movf	(??_isupper+1)^0,w,c
  8436  005E18  2206               	addwfc	(??_isupper+3)^0,f,c
  8437  005E1A  5006               	movf	(??_isupper+3)^0,w,c
  8438  005E1C  E10A               	bnz	u4500
  8439  005E1E  0E1A               	movlw	26
  8440  005E20  5C05               	subwf	(??_isupper+2)^0,w,c
  8441  005E22  A0D8               	btfss	status,0,c
  8442  005E24  EF16  F02F         	goto	u4501
  8443  005E28  EF19  F02F         	goto	u4500
  8444  005E2C                     u4501:
  8445  005E2C  0E01               	movlw	1
  8446  005E2E  EF1A  F02F         	goto	u4510
  8447  005E32                     u4500:
  8448  005E32  0E00               	movlw	0
  8449  005E34                     u4510:
  8450  005E34  6E01               	movwf	?_isupper^0,c
  8451  005E36  6A02               	clrf	(?_isupper+1)^0,c
  8452  005E38  0012               	return		;funcret
  8453  005E3A                     __end_of_isupper:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _strcpy *****************
  8457 ;; Defined at:
  8458 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8461 ;;		 -> dbuf(80), 
  8462 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8463 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  8464 ;;		 -> dbuf(80), 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  d               2    8[COMRAM] PTR unsigned char 
  8467 ;;		 -> dbuf(80), 
  8468 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8469 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  8470 ;;		 -> dbuf(80), 
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  2    0[COMRAM] PTR unsigned char 
  8473 ;; Registers used:
  8474 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8480 ;;      Params:         4       0       0       0       0       0       0       0       0
  8481 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8482 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8483 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8484 ;;Total ram usage:       10 bytes
  8485 ;; Hardware stack levels used: 1
  8486 ;; This function calls:
  8487 ;;		Nothing
  8488 ;; This function is called by:
  8489 ;;		_efgtoa
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text19
  8494  005A24                     __ptext19:
  8495                           	callstack 0
  8496  005A24                     _strcpy:
  8497                           	callstack 25
  8498  005A24  C003  F007         	movff	strcpy@src,strcpy@s
  8499  005A28  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8500  005A2C  C001  F009         	movff	strcpy@dest,strcpy@d
  8501  005A30  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8502  005A34                     l5006:
  8503  005A34  5007               	movf	strcpy@s^0,w,c
  8504  005A36  6E05               	movwf	??_strcpy^0,c
  8505  005A38  5008               	movf	(strcpy@s+1)^0,w,c
  8506  005A3A  6E06               	movwf	(??_strcpy+1)^0,c
  8507  005A3C  4A07               	infsnz	strcpy@s^0,f,c
  8508  005A3E  2A08               	incf	(strcpy@s+1)^0,f,c
  8509  005A40  C005  FFF6         	movff	??_strcpy,tblptrl
  8510  005A44  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8511  005A48  6AF8               	clrf	tblptru,c
  8512  005A4A  C009  FFD9         	movff	strcpy@d,fsr2l
  8513  005A4E  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8514  005A52  4A09               	infsnz	strcpy@d^0,f,c
  8515  005A54  2A0A               	incf	(strcpy@d+1)^0,f,c
  8516  005A56  0E07               	movlw	(high __ramtop+-1)
  8517  005A58  64F7               	cpfsgt	tblptrh,c
  8518  005A5A  D003               	bra	u5567
  8519  005A5C  0008               	tblrd		*
  8520  005A5E  50F5               	movf	tablat,w,c
  8521  005A60  D005               	bra	u5560
  8522  005A62                     u5567:
  8523  005A62  CFF6 FFE9          	movff	tblptrl,fsr0l
  8524  005A66  CFF7 FFEA          	movff	tblptrh,fsr0h
  8525  005A6A  50EF               	movf	indf0,w,c
  8526  005A6C                     u5560:
  8527  005A6C  6EDF               	movwf	indf2,c
  8528  005A6E  50DF               	movf	indf2,w,c
  8529  005A70  A4D8               	btfss	status,2,c
  8530  005A72  EF3D  F02D         	goto	u5571
  8531  005A76  EF3F  F02D         	goto	u5570
  8532  005A7A                     u5571:
  8533  005A7A  EF1A  F02D         	goto	l5006
  8534  005A7E                     u5570:
  8535  005A7E  0012               	return		;funcret
  8536  005A80                     __end_of_strcpy:
  8537                           	callstack 0
  8538                           
  8539 ;; *************** function _floorf *****************
  8540 ;; Defined at:
  8541 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  x               4   41[COMRAM] float 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  u               4   57[COMRAM] struct .
  8546 ;;  m               4   51[COMRAM] unsigned long 
  8547 ;;  e               2   55[COMRAM] int 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  4   41[COMRAM] float 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8557 ;;      Params:         4       0       0       0       0       0       0       0       0
  8558 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8559 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8560 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8561 ;;Total ram usage:       20 bytes
  8562 ;; Hardware stack levels used: 1
  8563 ;; This function calls:
  8564 ;;		Nothing
  8565 ;; This function is called by:
  8566 ;;		_efgtoa
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text20
  8571  003E1A                     __ptext20:
  8572                           	callstack 0
  8573  003E1A                     _floorf:
  8574                           	callstack 25
  8575  003E1A  C132  F03A         	movff	floorf@F527,floorf@u
  8576  003E1E  C133  F03B         	movff	floorf@F527+1,floorf@u+1
  8577  003E22  C134  F03C         	movff	floorf@F527+2,floorf@u+2
  8578  003E26  C135  F03D         	movff	floorf@F527+3,floorf@u+3
  8579  003E2A  C02A  F03A         	movff	floorf@x,floorf@u
  8580  003E2E  C02B  F03B         	movff	floorf@x+1,floorf@u+1
  8581  003E32  C02C  F03C         	movff	floorf@x+2,floorf@u+2
  8582  003E36  C02D  F03D         	movff	floorf@x+3,floorf@u+3
  8583  003E3A  0E81               	movlw	129
  8584  003E3C  6E2E               	movwf	??_floorf^0,c
  8585  003E3E  0EFF               	movlw	255
  8586  003E40  6E2F               	movwf	(??_floorf+1)^0,c
  8587  003E42  C03A  F030         	movff	floorf@u,??_floorf+2
  8588  003E46  C03B  F031         	movff	floorf@u+1,??_floorf+3
  8589  003E4A  C03C  F032         	movff	floorf@u+2,??_floorf+4
  8590  003E4E  C03D  F033         	movff	floorf@u+3,??_floorf+5
  8591  003E52  0E18               	movlw	24
  8592  003E54  EF31  F01F         	goto	u5610
  8593  003E58                     u5615:
  8594  003E58  90D8               	bcf	status,0,c
  8595  003E5A  3233               	rrcf	(??_floorf+5)^0,f,c
  8596  003E5C  3232               	rrcf	(??_floorf+4)^0,f,c
  8597  003E5E  3231               	rrcf	(??_floorf+3)^0,f,c
  8598  003E60  3230               	rrcf	(??_floorf+2)^0,f,c
  8599  003E62                     u5610:
  8600  003E62  2EE8               	decfsz	wreg,f,c
  8601  003E64  EF2C  F01F         	goto	u5615
  8602  003E68  5030               	movf	(??_floorf+2)^0,w,c
  8603  003E6A  242E               	addwf	??_floorf^0,w,c
  8604  003E6C  6E38               	movwf	floorf@e^0,c
  8605  003E6E  0E00               	movlw	0
  8606  003E70  202F               	addwfc	(??_floorf+1)^0,w,c
  8607  003E72  6E39               	movwf	(floorf@e+1)^0,c
  8608  003E74  BE39               	btfsc	(floorf@e+1)^0,7,c
  8609  003E76  EF46  F01F         	goto	u5621
  8610  003E7A  5039               	movf	(floorf@e+1)^0,w,c
  8611  003E7C  E109               	bnz	u5620
  8612  003E7E  0E17               	movlw	23
  8613  003E80  5C38               	subwf	floorf@e^0,w,c
  8614  003E82  A0D8               	btfss	status,0,c
  8615  003E84  EF46  F01F         	goto	u5621
  8616  003E88  EF48  F01F         	goto	u5620
  8617  003E8C                     u5621:
  8618  003E8C  EF52  F01F         	goto	l5024
  8619  003E90                     u5620:
  8620  003E90                     l5022:
  8621  003E90  C02A  F02A         	movff	floorf@x,?_floorf
  8622  003E94  C02B  F02B         	movff	floorf@x+1,?_floorf+1
  8623  003E98  C02C  F02C         	movff	floorf@x+2,?_floorf+2
  8624  003E9C  C02D  F02D         	movff	floorf@x+3,?_floorf+3
  8625  003EA0  EF15  F020         	goto	l1502
  8626  003EA4                     l5024:
  8627  003EA4  BE39               	btfsc	(floorf@e+1)^0,7,c
  8628  003EA6  EF57  F01F         	goto	u5631
  8629  003EAA  EF59  F01F         	goto	u5630
  8630  003EAE                     u5631:
  8631  003EAE  EFC9  F01F         	goto	l5034
  8632  003EB2                     u5630:
  8633  003EB2  C038  F02E         	movff	floorf@e,??_floorf
  8634  003EB6  0EFF               	movlw	255
  8635  003EB8  6E2F               	movwf	(??_floorf+1)^0,c
  8636  003EBA  0EFF               	movlw	255
  8637  003EBC  6E30               	movwf	(??_floorf+2)^0,c
  8638  003EBE  0E7F               	movlw	127
  8639  003EC0  6E31               	movwf	(??_floorf+3)^0,c
  8640  003EC2  0E00               	movlw	0
  8641  003EC4  6E32               	movwf	(??_floorf+4)^0,c
  8642  003EC6                     u5645:
  8643  003EC6  662E               	tstfsz	??_floorf^0,c
  8644  003EC8  EF68  F01F         	goto	u5646
  8645  003ECC  EF70  F01F         	goto	u5647
  8646  003ED0                     u5646:
  8647  003ED0  3432               	rlcf	(??_floorf+4)^0,w,c
  8648  003ED2  3232               	rrcf	(??_floorf+4)^0,f,c
  8649  003ED4  3231               	rrcf	(??_floorf+3)^0,f,c
  8650  003ED6  3230               	rrcf	(??_floorf+2)^0,f,c
  8651  003ED8  322F               	rrcf	(??_floorf+1)^0,f,c
  8652  003EDA  2E2E               	decfsz	??_floorf^0,f,c
  8653  003EDC  EF63  F01F         	goto	u5645
  8654  003EE0                     u5647:
  8655  003EE0  C02F  F034         	movff	??_floorf+1,floorf@m
  8656  003EE4  C030  F035         	movff	??_floorf+2,floorf@m+1
  8657  003EE8  C031  F036         	movff	??_floorf+3,floorf@m+2
  8658  003EEC  C032  F037         	movff	??_floorf+4,floorf@m+3
  8659  003EF0  5034               	movf	floorf@m^0,w,c
  8660  003EF2  143A               	andwf	floorf@u^0,w,c
  8661  003EF4  6E2E               	movwf	??_floorf^0,c
  8662  003EF6  5035               	movf	(floorf@m+1)^0,w,c
  8663  003EF8  143B               	andwf	(floorf@u+1)^0,w,c
  8664  003EFA  6E2F               	movwf	(??_floorf+1)^0,c
  8665  003EFC  5036               	movf	(floorf@m+2)^0,w,c
  8666  003EFE  143C               	andwf	(floorf@u+2)^0,w,c
  8667  003F00  6E30               	movwf	(??_floorf+2)^0,c
  8668  003F02  5037               	movf	(floorf@m+3)^0,w,c
  8669  003F04  143D               	andwf	(floorf@u+3)^0,w,c
  8670  003F06  6E31               	movwf	(??_floorf+3)^0,c
  8671  003F08  502E               	movf	??_floorf^0,w,c
  8672  003F0A  102F               	iorwf	(??_floorf+1)^0,w,c
  8673  003F0C  1030               	iorwf	(??_floorf+2)^0,w,c
  8674  003F0E  1031               	iorwf	(??_floorf+3)^0,w,c
  8675  003F10  A4D8               	btfss	status,2,c
  8676  003F12  EF8D  F01F         	goto	u5651
  8677  003F16  EF8F  F01F         	goto	u5650
  8678  003F1A                     u5651:
  8679  003F1A  EF91  F01F         	goto	l5030
  8680  003F1E                     u5650:
  8681  003F1E  EF48  F01F         	goto	l5022
  8682  003F22                     l5030:
  8683  003F22  C03A  F02E         	movff	floorf@u,??_floorf
  8684  003F26  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  8685  003F2A  C03C  F030         	movff	floorf@u+2,??_floorf+2
  8686  003F2E  C03D  F031         	movff	floorf@u+3,??_floorf+3
  8687  003F32  0E20               	movlw	32
  8688  003F34  EFA1  F01F         	goto	u5660
  8689  003F38                     u5665:
  8690  003F38  90D8               	bcf	status,0,c
  8691  003F3A  3231               	rrcf	(??_floorf+3)^0,f,c
  8692  003F3C  3230               	rrcf	(??_floorf+2)^0,f,c
  8693  003F3E  322F               	rrcf	(??_floorf+1)^0,f,c
  8694  003F40  322E               	rrcf	??_floorf^0,f,c
  8695  003F42                     u5660:
  8696  003F42  2EE8               	decfsz	wreg,f,c
  8697  003F44  EF9C  F01F         	goto	u5665
  8698  003F48  502E               	movf	??_floorf^0,w,c
  8699  003F4A  102F               	iorwf	(??_floorf+1)^0,w,c
  8700  003F4C  1030               	iorwf	(??_floorf+2)^0,w,c
  8701  003F4E  1031               	iorwf	(??_floorf+3)^0,w,c
  8702  003F50  B4D8               	btfsc	status,2,c
  8703  003F52  EFAD  F01F         	goto	u5671
  8704  003F56  EFAF  F01F         	goto	u5670
  8705  003F5A                     u5671:
  8706  003F5A  EFB7  F01F         	goto	l1505
  8707  003F5E                     u5670:
  8708  003F5E  5034               	movf	floorf@m^0,w,c
  8709  003F60  263A               	addwf	floorf@u^0,f,c
  8710  003F62  5035               	movf	(floorf@m+1)^0,w,c
  8711  003F64  223B               	addwfc	(floorf@u+1)^0,f,c
  8712  003F66  5036               	movf	(floorf@m+2)^0,w,c
  8713  003F68  223C               	addwfc	(floorf@u+2)^0,f,c
  8714  003F6A  5037               	movf	(floorf@m+3)^0,w,c
  8715  003F6C  223D               	addwfc	(floorf@u+3)^0,f,c
  8716  003F6E                     l1505:
  8717  003F6E  1C34               	comf	floorf@m^0,w,c
  8718  003F70  6E2E               	movwf	??_floorf^0,c
  8719  003F72  1C35               	comf	(floorf@m+1)^0,w,c
  8720  003F74  6E2F               	movwf	(??_floorf+1)^0,c
  8721  003F76  1C36               	comf	(floorf@m+2)^0,w,c
  8722  003F78  6E30               	movwf	(??_floorf+2)^0,c
  8723  003F7A  1C37               	comf	(floorf@m+3)^0,w,c
  8724  003F7C  6E31               	movwf	(??_floorf+3)^0,c
  8725  003F7E  502E               	movf	??_floorf^0,w,c
  8726  003F80  163A               	andwf	floorf@u^0,f,c
  8727  003F82  502F               	movf	(??_floorf+1)^0,w,c
  8728  003F84  163B               	andwf	(floorf@u+1)^0,f,c
  8729  003F86  5030               	movf	(??_floorf+2)^0,w,c
  8730  003F88  163C               	andwf	(floorf@u+2)^0,f,c
  8731  003F8A  5031               	movf	(??_floorf+3)^0,w,c
  8732  003F8C  163D               	andwf	(floorf@u+3)^0,f,c
  8733  003F8E  EF0D  F020         	goto	l5042
  8734  003F92                     l5034:
  8735  003F92  C03A  F02E         	movff	floorf@u,??_floorf
  8736  003F96  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  8737  003F9A  C03C  F030         	movff	floorf@u+2,??_floorf+2
  8738  003F9E  C03D  F031         	movff	floorf@u+3,??_floorf+3
  8739  003FA2  0E20               	movlw	32
  8740  003FA4  EFD9  F01F         	goto	u5680
  8741  003FA8                     u5685:
  8742  003FA8  90D8               	bcf	status,0,c
  8743  003FAA  3231               	rrcf	(??_floorf+3)^0,f,c
  8744  003FAC  3230               	rrcf	(??_floorf+2)^0,f,c
  8745  003FAE  322F               	rrcf	(??_floorf+1)^0,f,c
  8746  003FB0  322E               	rrcf	??_floorf^0,f,c
  8747  003FB2                     u5680:
  8748  003FB2  2EE8               	decfsz	wreg,f,c
  8749  003FB4  EFD4  F01F         	goto	u5685
  8750  003FB8  502E               	movf	??_floorf^0,w,c
  8751  003FBA  102F               	iorwf	(??_floorf+1)^0,w,c
  8752  003FBC  1030               	iorwf	(??_floorf+2)^0,w,c
  8753  003FBE  1031               	iorwf	(??_floorf+3)^0,w,c
  8754  003FC0  A4D8               	btfss	status,2,c
  8755  003FC2  EFE5  F01F         	goto	u5691
  8756  003FC6  EFE7  F01F         	goto	u5690
  8757  003FCA                     u5691:
  8758  003FCA  EFF1  F01F         	goto	l5038
  8759  003FCE                     u5690:
  8760  003FCE  0E00               	movlw	0
  8761  003FD0  6E3A               	movwf	floorf@u^0,c
  8762  003FD2  0E00               	movlw	0
  8763  003FD4  6E3B               	movwf	(floorf@u+1)^0,c
  8764  003FD6  0E00               	movlw	0
  8765  003FD8  6E3C               	movwf	(floorf@u+2)^0,c
  8766  003FDA  0E00               	movlw	0
  8767  003FDC  6E3D               	movwf	(floorf@u+3)^0,c
  8768  003FDE  EF0D  F020         	goto	l5042
  8769  003FE2                     l5038:
  8770  003FE2  90D8               	bcf	status,0,c
  8771  003FE4  343A               	rlcf	floorf@u^0,w,c
  8772  003FE6  6E2E               	movwf	??_floorf^0,c
  8773  003FE8  343B               	rlcf	(floorf@u+1)^0,w,c
  8774  003FEA  6E2F               	movwf	(??_floorf+1)^0,c
  8775  003FEC  343C               	rlcf	(floorf@u+2)^0,w,c
  8776  003FEE  6E30               	movwf	(??_floorf+2)^0,c
  8777  003FF0  343D               	rlcf	(floorf@u+3)^0,w,c
  8778  003FF2  6E31               	movwf	(??_floorf+3)^0,c
  8779  003FF4  502E               	movf	??_floorf^0,w,c
  8780  003FF6  102F               	iorwf	(??_floorf+1)^0,w,c
  8781  003FF8  1030               	iorwf	(??_floorf+2)^0,w,c
  8782  003FFA  1031               	iorwf	(??_floorf+3)^0,w,c
  8783  003FFC  B4D8               	btfsc	status,2,c
  8784  003FFE  EF03  F020         	goto	u5701
  8785  004002  EF05  F020         	goto	u5700
  8786  004006                     u5701:
  8787  004006  EF0D  F020         	goto	l5042
  8788  00400A                     u5700:
  8789  00400A  0E00               	movlw	0
  8790  00400C  6E3A               	movwf	floorf@u^0,c
  8791  00400E  0E00               	movlw	0
  8792  004010  6E3B               	movwf	(floorf@u+1)^0,c
  8793  004012  0E80               	movlw	128
  8794  004014  6E3C               	movwf	(floorf@u+2)^0,c
  8795  004016  0EBF               	movlw	191
  8796  004018  6E3D               	movwf	(floorf@u+3)^0,c
  8797  00401A                     l5042:
  8798  00401A  C03A  F02A         	movff	floorf@u,?_floorf
  8799  00401E  C03B  F02B         	movff	floorf@u+1,?_floorf+1
  8800  004022  C03C  F02C         	movff	floorf@u+2,?_floorf+2
  8801  004026  C03D  F02D         	movff	floorf@u+3,?_floorf+3
  8802  00402A                     l1502:
  8803  00402A  0012               	return		;funcret
  8804  00402C                     __end_of_floorf:
  8805                           	callstack 0
  8806                           
  8807 ;; *************** function ___fpclassifyf *****************
  8808 ;; Defined at:
  8809 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  x               4    0[COMRAM] float 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  u               4   10[COMRAM] struct .
  8814 ;;  e               2    8[COMRAM] int 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  2    0[COMRAM] int 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8824 ;;      Params:         4       0       0       0       0       0       0       0       0
  8825 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8826 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8827 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8828 ;;Total ram usage:       14 bytes
  8829 ;; Hardware stack levels used: 1
  8830 ;; This function calls:
  8831 ;;		Nothing
  8832 ;; This function is called by:
  8833 ;;		_efgtoa
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           	psect	text21
  8838  005144                     __ptext21:
  8839                           	callstack 0
  8840  005144                     ___fpclassifyf:
  8841                           	callstack 25
  8842  005144  C136  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8843  005148  C137  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8844  00514C  C138  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8845  005150  C139  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8846  005154  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8847  005158  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8848  00515C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8849  005160  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8850  005164  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8851  005168  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8852  00516C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8853  005170  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8854  005174  0E18               	movlw	24
  8855  005176  EFC2  F028         	goto	u5490
  8856  00517A                     u5495:
  8857  00517A  90D8               	bcf	status,0,c
  8858  00517C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8859  00517E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8860  005180  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8861  005182  3205               	rrcf	??___fpclassifyf^0,f,c
  8862  005184                     u5490:
  8863  005184  2EE8               	decfsz	wreg,f,c
  8864  005186  EFBD  F028         	goto	u5495
  8865  00518A  5005               	movf	??___fpclassifyf^0,w,c
  8866  00518C  6E09               	movwf	___fpclassifyf@e^0,c
  8867  00518E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8868  005190  5009               	movf	___fpclassifyf@e^0,w,c
  8869  005192  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8870  005194  A4D8               	btfss	status,2,c
  8871  005196  EFCF  F028         	goto	u5501
  8872  00519A  EFD1  F028         	goto	u5500
  8873  00519E                     u5501:
  8874  00519E  EFF1  F028         	goto	l4994
  8875  0051A2                     u5500:
  8876  0051A2  90D8               	bcf	status,0,c
  8877  0051A4  340B               	rlcf	___fpclassifyf@u^0,w,c
  8878  0051A6  6E05               	movwf	??___fpclassifyf^0,c
  8879  0051A8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8880  0051AA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8881  0051AC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8882  0051AE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8883  0051B0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8884  0051B2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8885  0051B4  5005               	movf	??___fpclassifyf^0,w,c
  8886  0051B6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8887  0051B8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8888  0051BA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8889  0051BC  A4D8               	btfss	status,2,c
  8890  0051BE  EFE3  F028         	goto	u5511
  8891  0051C2  EFE5  F028         	goto	u5510
  8892  0051C6                     u5511:
  8893  0051C6  EFEB  F028         	goto	l4990
  8894  0051CA                     u5510:
  8895  0051CA  0E00               	movlw	0
  8896  0051CC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8897  0051CE  0E02               	movlw	2
  8898  0051D0  6E01               	movwf	?___fpclassifyf^0,c
  8899  0051D2  EF20  F029         	goto	l1455
  8900  0051D6                     l4990:
  8901  0051D6  0E00               	movlw	0
  8902  0051D8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8903  0051DA  0E03               	movlw	3
  8904  0051DC  6E01               	movwf	?___fpclassifyf^0,c
  8905  0051DE  EF20  F029         	goto	l1455
  8906  0051E2                     l4994:
  8907  0051E2  2809               	incf	___fpclassifyf@e^0,w,c
  8908  0051E4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8909  0051E6  A4D8               	btfss	status,2,c
  8910  0051E8  EFF8  F028         	goto	u5521
  8911  0051EC  EFFA  F028         	goto	u5520
  8912  0051F0                     u5521:
  8913  0051F0  EF1C  F029         	goto	l5000
  8914  0051F4                     u5520:
  8915  0051F4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8916  0051F8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8917  0051FC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8918  005200  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8919  005204  0E09               	movlw	9
  8920  005206                     u5535:
  8921  005206  90D8               	bcf	status,0,c
  8922  005208  3605               	rlcf	??___fpclassifyf^0,f,c
  8923  00520A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8924  00520C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8925  00520E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8926  005210  2EE8               	decfsz	wreg,f,c
  8927  005212  EF03  F029         	goto	u5535
  8928  005216  5005               	movf	??___fpclassifyf^0,w,c
  8929  005218  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8930  00521A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8931  00521C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8932  00521E  B4D8               	btfsc	status,2,c
  8933  005220  EF14  F029         	goto	u5541
  8934  005224  EF17  F029         	goto	u5540
  8935  005228                     u5541:
  8936  005228  0E01               	movlw	1
  8937  00522A  EF18  F029         	goto	u5550
  8938  00522E                     u5540:
  8939  00522E  0E00               	movlw	0
  8940  005230                     u5550:
  8941  005230  6E01               	movwf	?___fpclassifyf^0,c
  8942  005232  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8943  005234  EF20  F029         	goto	l1455
  8944  005238                     l5000:
  8945  005238  0E00               	movlw	0
  8946  00523A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8947  00523C  0E04               	movlw	4
  8948  00523E  6E01               	movwf	?___fpclassifyf^0,c
  8949  005240                     l1455:
  8950  005240  0012               	return		;funcret
  8951  005242                     __end_of___fpclassifyf:
  8952                           	callstack 0
  8953                           
  8954 ;; *************** function ___fltol *****************
  8955 ;; Defined at:
  8956 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  f1              4    0[COMRAM] int 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  exp1            1    9[COMRAM] unsigned char 
  8961 ;;  sign1           1    8[COMRAM] unsigned char 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  4    0[COMRAM] long 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8971 ;;      Params:         4       0       0       0       0       0       0       0       0
  8972 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8973 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8974 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8975 ;;Total ram usage:       10 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; This function calls:
  8978 ;;		Nothing
  8979 ;; This function is called by:
  8980 ;;		_efgtoa
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           	psect	text22
  8985  004F3A                     __ptext22:
  8986                           	callstack 0
  8987  004F3A                     ___fltol:
  8988                           	callstack 25
  8989  004F3A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  8990  004F3C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  8991  004F3E  6E0A               	movwf	___fltol@exp1^0,c
  8992  004F40  500A               	movf	___fltol@exp1^0,w,c
  8993  004F42  A4D8               	btfss	status,2,c
  8994  004F44  EFA6  F027         	goto	u5301
  8995  004F48  EFA8  F027         	goto	u5300
  8996  004F4C                     u5301:
  8997  004F4C  EFB2  F027         	goto	l4880
  8998  004F50                     u5300:
  8999  004F50                     l4876:
  9000  004F50  0E00               	movlw	0
  9001  004F52  6E01               	movwf	?___fltol^0,c
  9002  004F54  0E00               	movlw	0
  9003  004F56  6E02               	movwf	(?___fltol+1)^0,c
  9004  004F58  0E00               	movlw	0
  9005  004F5A  6E03               	movwf	(?___fltol+2)^0,c
  9006  004F5C  0E00               	movlw	0
  9007  004F5E  6E04               	movwf	(?___fltol+3)^0,c
  9008  004F60  EF1F  F028         	goto	l686
  9009  004F64                     l4880:
  9010  004F64  C001  F005         	movff	___fltol@f1,??___fltol
  9011  004F68  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  9012  004F6C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  9013  004F70  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  9014  004F74  0E20               	movlw	32
  9015  004F76  EFC2  F027         	goto	u5310
  9016  004F7A                     u5315:
  9017  004F7A  90D8               	bcf	status,0,c
  9018  004F7C  3208               	rrcf	(??___fltol+3)^0,f,c
  9019  004F7E  3207               	rrcf	(??___fltol+2)^0,f,c
  9020  004F80  3206               	rrcf	(??___fltol+1)^0,f,c
  9021  004F82  3205               	rrcf	??___fltol^0,f,c
  9022  004F84                     u5310:
  9023  004F84  2EE8               	decfsz	wreg,f,c
  9024  004F86  EFBD  F027         	goto	u5315
  9025  004F8A  5005               	movf	??___fltol^0,w,c
  9026  004F8C  6E09               	movwf	___fltol@sign1^0,c
  9027  004F8E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  9028  004F90  0EFF               	movlw	255
  9029  004F92  1601               	andwf	___fltol@f1^0,f,c
  9030  004F94  0EFF               	movlw	255
  9031  004F96  1602               	andwf	(___fltol@f1+1)^0,f,c
  9032  004F98  0EFF               	movlw	255
  9033  004F9A  1603               	andwf	(___fltol@f1+2)^0,f,c
  9034  004F9C  0E00               	movlw	0
  9035  004F9E  1604               	andwf	(___fltol@f1+3)^0,f,c
  9036  004FA0  0E96               	movlw	150
  9037  004FA2  5E0A               	subwf	___fltol@exp1^0,f,c
  9038  004FA4  BE0A               	btfsc	___fltol@exp1^0,7,c
  9039  004FA6  EFD9  F027         	goto	u5320
  9040  004FAA  EFD7  F027         	goto	u5321
  9041  004FAE                     u5321:
  9042  004FAE  EFEF  F027         	goto	l4900
  9043  004FB2                     u5320:
  9044  004FB2  500A               	movf	___fltol@exp1^0,w,c
  9045  004FB4  0A80               	xorlw	128
  9046  004FB6  0F97               	addlw	151
  9047  004FB8  B0D8               	btfsc	status,0,c
  9048  004FBA  EFE1  F027         	goto	u5331
  9049  004FBE  EFE3  F027         	goto	u5330
  9050  004FC2                     u5331:
  9051  004FC2  EFE5  F027         	goto	l4896
  9052  004FC6                     u5330:
  9053  004FC6  EFA8  F027         	goto	l4876
  9054  004FCA                     l4896:
  9055  004FCA  90D8               	bcf	status,0,c
  9056  004FCC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  9057  004FCE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  9058  004FD0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  9059  004FD2  3201               	rrcf	___fltol@f1^0,f,c
  9060  004FD4  3E0A               	incfsz	___fltol@exp1^0,f,c
  9061  004FD6  EFE5  F027         	goto	l4896
  9062  004FDA  EF07  F028         	goto	l4910
  9063  004FDE                     l4900:
  9064  004FDE  0E1F               	movlw	31
  9065  004FE0  640A               	cpfsgt	___fltol@exp1^0,c
  9066  004FE2  EFF5  F027         	goto	u5341
  9067  004FE6  EFF7  F027         	goto	u5340
  9068  004FEA                     u5341:
  9069  004FEA  EFFF  F027         	goto	l4908
  9070  004FEE                     u5340:
  9071  004FEE  EFA8  F027         	goto	l4876
  9072  004FF2                     l4906:
  9073  004FF2  90D8               	bcf	status,0,c
  9074  004FF4  3601               	rlcf	___fltol@f1^0,f,c
  9075  004FF6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  9076  004FF8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  9077  004FFA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  9078  004FFC  060A               	decf	___fltol@exp1^0,f,c
  9079  004FFE                     l4908:
  9080  004FFE  500A               	movf	___fltol@exp1^0,w,c
  9081  005000  A4D8               	btfss	status,2,c
  9082  005002  EF05  F028         	goto	u5351
  9083  005006  EF07  F028         	goto	u5350
  9084  00500A                     u5351:
  9085  00500A  EFF9  F027         	goto	l4906
  9086  00500E                     u5350:
  9087  00500E                     l4910:
  9088  00500E  5009               	movf	___fltol@sign1^0,w,c
  9089  005010  B4D8               	btfsc	status,2,c
  9090  005012  EF0D  F028         	goto	u5361
  9091  005016  EF0F  F028         	goto	u5360
  9092  00501A                     u5361:
  9093  00501A  EF17  F028         	goto	l4914
  9094  00501E                     u5360:
  9095  00501E  1E04               	comf	(___fltol@f1+3)^0,f,c
  9096  005020  1E03               	comf	(___fltol@f1+2)^0,f,c
  9097  005022  1E02               	comf	(___fltol@f1+1)^0,f,c
  9098  005024  6C01               	negf	___fltol@f1^0,c
  9099  005026  0E00               	movlw	0
  9100  005028  2202               	addwfc	(___fltol@f1+1)^0,f,c
  9101  00502A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  9102  00502C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  9103  00502E                     l4914:
  9104  00502E  C001  F001         	movff	___fltol@f1,?___fltol
  9105  005032  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  9106  005036  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  9107  00503A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  9108  00503E                     l686:
  9109  00503E  0012               	return		;funcret
  9110  005040                     __end_of___fltol:
  9111                           	callstack 0
  9112                           
  9113 ;; *************** function ___flneg *****************
  9114 ;; Defined at:
  9115 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  f1              4    0[COMRAM] long 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  4    0[COMRAM] long 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9129 ;;      Params:         4       0       0       0       0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9132 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9133 ;;Total ram usage:        4 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_efgtoa
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text23
  9143  005E3A                     __ptext23:
  9144                           	callstack 0
  9145  005E3A                     ___flneg:
  9146                           	callstack 25
  9147  005E3A  5001               	movf	___flneg@f1^0,w,c
  9148  005E3C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9149  005E3E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9150  005E40  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9151  005E42  B4D8               	btfsc	status,2,c
  9152  005E44  EF26  F02F         	goto	u5291
  9153  005E48  EF28  F02F         	goto	u5290
  9154  005E4C                     u5291:
  9155  005E4C  EF30  F02F         	goto	l4870
  9156  005E50                     u5290:
  9157  005E50  0E00               	movlw	0
  9158  005E52  1A01               	xorwf	___flneg@f1^0,f,c
  9159  005E54  0E00               	movlw	0
  9160  005E56  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9161  005E58  0E00               	movlw	0
  9162  005E5A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9163  005E5C  0E80               	movlw	128
  9164  005E5E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9165  005E60                     l4870:
  9166  005E60  C001  F001         	movff	___flneg@f1,?___flneg
  9167  005E64  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9168  005E68  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9169  005E6C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9170  005E70  0012               	return		;funcret
  9171  005E72                     __end_of___flneg:
  9172                           	callstack 0
  9173                           
  9174 ;; *************** function ___fleq *****************
  9175 ;; Defined at:
  9176 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  ff1             4    0[COMRAM] long 
  9179 ;;  ff2             4    4[COMRAM] long 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;		None               void
  9184 ;; Registers used:
  9185 ;;		wreg, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9191 ;;      Params:         8       0       0       0       0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9193 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9194 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9195 ;;Total ram usage:       12 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_efgtoa
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text24
  9205  0057DE                     __ptext24:
  9206                           	callstack 0
  9207  0057DE                     ___fleq:
  9208                           	callstack 25
  9209  0057DE  0E00               	movlw	0
  9210  0057E0  1401               	andwf	___fleq@ff1^0,w,c
  9211  0057E2  6E09               	movwf	??___fleq^0,c
  9212  0057E4  0E00               	movlw	0
  9213  0057E6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9214  0057E8  6E0A               	movwf	(??___fleq+1)^0,c
  9215  0057EA  0E80               	movlw	128
  9216  0057EC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9217  0057EE  6E0B               	movwf	(??___fleq+2)^0,c
  9218  0057F0  0E7F               	movlw	127
  9219  0057F2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9220  0057F4  6E0C               	movwf	(??___fleq+3)^0,c
  9221  0057F6  5009               	movf	??___fleq^0,w,c
  9222  0057F8  100A               	iorwf	(??___fleq+1)^0,w,c
  9223  0057FA  100B               	iorwf	(??___fleq+2)^0,w,c
  9224  0057FC  100C               	iorwf	(??___fleq+3)^0,w,c
  9225  0057FE  A4D8               	btfss	status,2,c
  9226  005800  EF04  F02C         	goto	u5211
  9227  005804  EF06  F02C         	goto	u5210
  9228  005808                     u5211:
  9229  005808  EF0E  F02C         	goto	l4832
  9230  00580C                     u5210:
  9231  00580C  0E00               	movlw	0
  9232  00580E  6E01               	movwf	___fleq@ff1^0,c
  9233  005810  0E00               	movlw	0
  9234  005812  6E02               	movwf	(___fleq@ff1+1)^0,c
  9235  005814  0E00               	movlw	0
  9236  005816  6E03               	movwf	(___fleq@ff1+2)^0,c
  9237  005818  0E00               	movlw	0
  9238  00581A  6E04               	movwf	(___fleq@ff1+3)^0,c
  9239  00581C                     l4832:
  9240  00581C  0E00               	movlw	0
  9241  00581E  1405               	andwf	___fleq@ff2^0,w,c
  9242  005820  6E09               	movwf	??___fleq^0,c
  9243  005822  0E00               	movlw	0
  9244  005824  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9245  005826  6E0A               	movwf	(??___fleq+1)^0,c
  9246  005828  0E80               	movlw	128
  9247  00582A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9248  00582C  6E0B               	movwf	(??___fleq+2)^0,c
  9249  00582E  0E7F               	movlw	127
  9250  005830  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9251  005832  6E0C               	movwf	(??___fleq+3)^0,c
  9252  005834  5009               	movf	??___fleq^0,w,c
  9253  005836  100A               	iorwf	(??___fleq+1)^0,w,c
  9254  005838  100B               	iorwf	(??___fleq+2)^0,w,c
  9255  00583A  100C               	iorwf	(??___fleq+3)^0,w,c
  9256  00583C  A4D8               	btfss	status,2,c
  9257  00583E  EF23  F02C         	goto	u5221
  9258  005842  EF25  F02C         	goto	u5220
  9259  005846                     u5221:
  9260  005846  EF2D  F02C         	goto	l4836
  9261  00584A                     u5220:
  9262  00584A  0E00               	movlw	0
  9263  00584C  6E05               	movwf	___fleq@ff2^0,c
  9264  00584E  0E00               	movlw	0
  9265  005850  6E06               	movwf	(___fleq@ff2+1)^0,c
  9266  005852  0E00               	movlw	0
  9267  005854  6E07               	movwf	(___fleq@ff2+2)^0,c
  9268  005856  0E00               	movlw	0
  9269  005858  6E08               	movwf	(___fleq@ff2+3)^0,c
  9270  00585A                     l4836:
  9271  00585A  5005               	movf	___fleq@ff2^0,w,c
  9272  00585C  1801               	xorwf	___fleq@ff1^0,w,c
  9273  00585E  E10F               	bnz	u5230
  9274  005860  5006               	movf	(___fleq@ff2+1)^0,w,c
  9275  005862  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9276  005864  E10C               	bnz	u5230
  9277  005866  5007               	movf	(___fleq@ff2+2)^0,w,c
  9278  005868  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9279  00586A  E109               	bnz	u5230
  9280  00586C  5008               	movf	(___fleq@ff2+3)^0,w,c
  9281  00586E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9282  005870  B4D8               	btfsc	status,2,c
  9283  005872  EF3D  F02C         	goto	u5231
  9284  005876  EF3F  F02C         	goto	u5230
  9285  00587A                     u5231:
  9286  00587A  EF42  F02C         	goto	l4840
  9287  00587E                     u5230:
  9288  00587E  90D8               	bcf	status,0,c
  9289  005880  EF43  F02C         	goto	l648
  9290  005884                     l4840:
  9291  005884  80D8               	bsf	status,0,c
  9292  005886                     l648:
  9293  005886  0012               	return		;funcret
  9294  005888                     __end_of___fleq:
  9295                           	callstack 0
  9296                           
  9297 ;; *************** function ___awmod *****************
  9298 ;; Defined at:
  9299 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  dividend        2    0[COMRAM] int 
  9302 ;;  divisor         2    2[COMRAM] int 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  sign            1    5[COMRAM] unsigned char 
  9305 ;;  counter         1    4[COMRAM] unsigned char 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  2    0[COMRAM] int 
  9308 ;; Registers used:
  9309 ;;		wreg, status,2, status,0
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9315 ;;      Params:         4       0       0       0       0       0       0       0       0
  9316 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9318 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9319 ;;Total ram usage:        6 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_efgtoa
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           	psect	text25
  9329  00572E                     __ptext25:
  9330                           	callstack 0
  9331  00572E                     ___awmod:
  9332                           	callstack 25
  9333  00572E  0E00               	movlw	0
  9334  005730  6E06               	movwf	___awmod@sign^0,c
  9335  005732  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9336  005734  EFA0  F02B         	goto	u5150
  9337  005738  EF9E  F02B         	goto	u5151
  9338  00573C                     u5151:
  9339  00573C  EFA6  F02B         	goto	l4800
  9340  005740                     u5150:
  9341  005740  6C01               	negf	___awmod@dividend^0,c
  9342  005742  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9343  005744  B0D8               	btfsc	status,0,c
  9344  005746  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9345  005748  0E01               	movlw	1
  9346  00574A  6E06               	movwf	___awmod@sign^0,c
  9347  00574C                     l4800:
  9348  00574C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9349  00574E  EFAD  F02B         	goto	u5160
  9350  005752  EFAB  F02B         	goto	u5161
  9351  005756                     u5161:
  9352  005756  EFB1  F02B         	goto	l4804
  9353  00575A                     u5160:
  9354  00575A  6C03               	negf	___awmod@divisor^0,c
  9355  00575C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9356  00575E  B0D8               	btfsc	status,0,c
  9357  005760  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9358  005762                     l4804:
  9359  005762  5003               	movf	___awmod@divisor^0,w,c
  9360  005764  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9361  005766  B4D8               	btfsc	status,2,c
  9362  005768  EFB8  F02B         	goto	u5171
  9363  00576C  EFBA  F02B         	goto	u5170
  9364  005770                     u5171:
  9365  005770  EFDE  F02B         	goto	l4820
  9366  005774                     u5170:
  9367  005774  0E01               	movlw	1
  9368  005776  6E05               	movwf	___awmod@counter^0,c
  9369  005778  EFC2  F02B         	goto	l4810
  9370  00577C                     l4808:
  9371  00577C  90D8               	bcf	status,0,c
  9372  00577E  3603               	rlcf	___awmod@divisor^0,f,c
  9373  005780  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9374  005782  2A05               	incf	___awmod@counter^0,f,c
  9375  005784                     l4810:
  9376  005784  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9377  005786  EFC7  F02B         	goto	u5181
  9378  00578A  EFC9  F02B         	goto	u5180
  9379  00578E                     u5181:
  9380  00578E  EFBE  F02B         	goto	l4808
  9381  005792                     u5180:
  9382  005792                     l4812:
  9383  005792  5003               	movf	___awmod@divisor^0,w,c
  9384  005794  5C01               	subwf	___awmod@dividend^0,w,c
  9385  005796  5004               	movf	(___awmod@divisor+1)^0,w,c
  9386  005798  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9387  00579A  A0D8               	btfss	status,0,c
  9388  00579C  EFD2  F02B         	goto	u5191
  9389  0057A0  EFD4  F02B         	goto	u5190
  9390  0057A4                     u5191:
  9391  0057A4  EFD8  F02B         	goto	l4816
  9392  0057A8                     u5190:
  9393  0057A8  5003               	movf	___awmod@divisor^0,w,c
  9394  0057AA  5E01               	subwf	___awmod@dividend^0,f,c
  9395  0057AC  5004               	movf	(___awmod@divisor+1)^0,w,c
  9396  0057AE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9397  0057B0                     l4816:
  9398  0057B0  90D8               	bcf	status,0,c
  9399  0057B2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9400  0057B4  3203               	rrcf	___awmod@divisor^0,f,c
  9401  0057B6  2E05               	decfsz	___awmod@counter^0,f,c
  9402  0057B8  EFC9  F02B         	goto	l4812
  9403  0057BC                     l4820:
  9404  0057BC  5006               	movf	___awmod@sign^0,w,c
  9405  0057BE  B4D8               	btfsc	status,2,c
  9406  0057C0  EFE4  F02B         	goto	u5201
  9407  0057C4  EFE6  F02B         	goto	u5200
  9408  0057C8                     u5201:
  9409  0057C8  EFEA  F02B         	goto	l4824
  9410  0057CC                     u5200:
  9411  0057CC  6C01               	negf	___awmod@dividend^0,c
  9412  0057CE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9413  0057D0  B0D8               	btfsc	status,0,c
  9414  0057D2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9415  0057D4                     l4824:
  9416  0057D4  C001  F001         	movff	___awmod@dividend,?___awmod
  9417  0057D8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9418  0057DC  0012               	return		;funcret
  9419  0057DE                     __end_of___awmod:
  9420                           	callstack 0
  9421                           
  9422 ;; *************** function ___awdiv *****************
  9423 ;; Defined at:
  9424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  dividend        2    0[COMRAM] int 
  9427 ;;  divisor         2    2[COMRAM] int 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  quotient        2    6[COMRAM] int 
  9430 ;;  sign            1    5[COMRAM] unsigned char 
  9431 ;;  counter         1    4[COMRAM] unsigned char 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  2    0[COMRAM] int 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9441 ;;      Params:         4       0       0       0       0       0       0       0       0
  9442 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9444 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9445 ;;Total ram usage:        8 bytes
  9446 ;; Hardware stack levels used: 1
  9447 ;; This function calls:
  9448 ;;		Nothing
  9449 ;; This function is called by:
  9450 ;;		_efgtoa
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text26
  9455  00566A                     __ptext26:
  9456                           	callstack 0
  9457  00566A                     ___awdiv:
  9458                           	callstack 25
  9459  00566A  0E00               	movlw	0
  9460  00566C  6E06               	movwf	___awdiv@sign^0,c
  9461  00566E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9462  005670  EF3E  F02B         	goto	u5090
  9463  005674  EF3C  F02B         	goto	u5091
  9464  005678                     u5091:
  9465  005678  EF44  F02B         	goto	l4756
  9466  00567C                     u5090:
  9467  00567C  6C03               	negf	___awdiv@divisor^0,c
  9468  00567E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9469  005680  B0D8               	btfsc	status,0,c
  9470  005682  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9471  005684  0E01               	movlw	1
  9472  005686  6E06               	movwf	___awdiv@sign^0,c
  9473  005688                     l4756:
  9474  005688  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9475  00568A  EF4B  F02B         	goto	u5100
  9476  00568E  EF49  F02B         	goto	u5101
  9477  005692                     u5101:
  9478  005692  EF51  F02B         	goto	l4762
  9479  005696                     u5100:
  9480  005696  6C01               	negf	___awdiv@dividend^0,c
  9481  005698  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9482  00569A  B0D8               	btfsc	status,0,c
  9483  00569C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9484  00569E  0E01               	movlw	1
  9485  0056A0  1A06               	xorwf	___awdiv@sign^0,f,c
  9486  0056A2                     l4762:
  9487  0056A2  0E00               	movlw	0
  9488  0056A4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9489  0056A6  0E00               	movlw	0
  9490  0056A8  6E07               	movwf	___awdiv@quotient^0,c
  9491  0056AA  5003               	movf	___awdiv@divisor^0,w,c
  9492  0056AC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9493  0056AE  B4D8               	btfsc	status,2,c
  9494  0056B0  EF5C  F02B         	goto	u5111
  9495  0056B4  EF5E  F02B         	goto	u5110
  9496  0056B8                     u5111:
  9497  0056B8  EF86  F02B         	goto	l4784
  9498  0056BC                     u5110:
  9499  0056BC  0E01               	movlw	1
  9500  0056BE  6E05               	movwf	___awdiv@counter^0,c
  9501  0056C0  EF66  F02B         	goto	l4770
  9502  0056C4                     l4768:
  9503  0056C4  90D8               	bcf	status,0,c
  9504  0056C6  3603               	rlcf	___awdiv@divisor^0,f,c
  9505  0056C8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9506  0056CA  2A05               	incf	___awdiv@counter^0,f,c
  9507  0056CC                     l4770:
  9508  0056CC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9509  0056CE  EF6B  F02B         	goto	u5121
  9510  0056D2  EF6D  F02B         	goto	u5120
  9511  0056D6                     u5121:
  9512  0056D6  EF62  F02B         	goto	l4768
  9513  0056DA                     u5120:
  9514  0056DA                     l4772:
  9515  0056DA  90D8               	bcf	status,0,c
  9516  0056DC  3607               	rlcf	___awdiv@quotient^0,f,c
  9517  0056DE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9518  0056E0  5003               	movf	___awdiv@divisor^0,w,c
  9519  0056E2  5C01               	subwf	___awdiv@dividend^0,w,c
  9520  0056E4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9521  0056E6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9522  0056E8  A0D8               	btfss	status,0,c
  9523  0056EA  EF79  F02B         	goto	u5131
  9524  0056EE  EF7B  F02B         	goto	u5130
  9525  0056F2                     u5131:
  9526  0056F2  EF80  F02B         	goto	l4780
  9527  0056F6                     u5130:
  9528  0056F6  5003               	movf	___awdiv@divisor^0,w,c
  9529  0056F8  5E01               	subwf	___awdiv@dividend^0,f,c
  9530  0056FA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9531  0056FC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9532  0056FE  8007               	bsf	___awdiv@quotient^0,0,c
  9533  005700                     l4780:
  9534  005700  90D8               	bcf	status,0,c
  9535  005702  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9536  005704  3203               	rrcf	___awdiv@divisor^0,f,c
  9537  005706  2E05               	decfsz	___awdiv@counter^0,f,c
  9538  005708  EF6D  F02B         	goto	l4772
  9539  00570C                     l4784:
  9540  00570C  5006               	movf	___awdiv@sign^0,w,c
  9541  00570E  B4D8               	btfsc	status,2,c
  9542  005710  EF8C  F02B         	goto	u5141
  9543  005714  EF8E  F02B         	goto	u5140
  9544  005718                     u5141:
  9545  005718  EF92  F02B         	goto	l4788
  9546  00571C                     u5140:
  9547  00571C  6C07               	negf	___awdiv@quotient^0,c
  9548  00571E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9549  005720  B0D8               	btfsc	status,0,c
  9550  005722  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9551  005724                     l4788:
  9552  005724  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9553  005728  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9554  00572C  0012               	return		;funcret
  9555  00572E                     __end_of___awdiv:
  9556                           	callstack 0
  9557                           
  9558 ;; *************** function _dtoa *****************
  9559 ;; Defined at:
  9560 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  9563 ;;		 -> vsnprintf@f(6), 
  9564 ;;  d               8   31[COMRAM] long long 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;  n               8   55[COMRAM] long long 
  9567 ;;  i               2   63[COMRAM] int 
  9568 ;;  s               2   53[COMRAM] int 
  9569 ;;  w               2   51[COMRAM] int 
  9570 ;;  p               2   49[COMRAM] int 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  2   29[COMRAM] int 
  9573 ;; Registers used:
  9574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9580 ;;      Params:        10       0       0       0       0       0       0       0       0
  9581 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9582 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9583 ;;      Totals:        36       0       0       0       0       0       0       0       0
  9584 ;;Total ram usage:       36 bytes
  9585 ;; Hardware stack levels used: 1
  9586 ;; Hardware stack levels required when called: 5
  9587 ;; This function calls:
  9588 ;;		___aodiv
  9589 ;;		___aomod
  9590 ;;		_abs
  9591 ;;		_pad
  9592 ;; This function is called by:
  9593 ;;		_vfpfcnvrt
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text27
  9598  0035F6                     __ptext27:
  9599                           	callstack 0
  9600  0035F6                     _dtoa:
  9601                           	callstack 21
  9602  0035F6                     
  9603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9604  0035F6  C020  F038         	movff	dtoa@d,dtoa@n
  9605  0035FA  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  9606  0035FE  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  9607  003602  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  9608  003606  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  9609  00360A  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  9610  00360E  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  9611  003612  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  9612  003616                     
  9613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9614  003616  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  9615  003618  EF10  F01B         	goto	u5851
  9616  00361C  EF13  F01B         	goto	u5850
  9617  003620                     u5851:
  9618  003620  0E01               	movlw	1
  9619  003622  EF14  F01B         	goto	u5860
  9620  003626                     u5850:
  9621  003626  0E00               	movlw	0
  9622  003628                     u5860:
  9623  003628  6E36               	movwf	dtoa@s^0,c
  9624  00362A  6A37               	clrf	(dtoa@s+1)^0,c
  9625                           
  9626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9627  00362C  5036               	movf	dtoa@s^0,w,c
  9628  00362E  1037               	iorwf	(dtoa@s+1)^0,w,c
  9629  003630  B4D8               	btfsc	status,2,c
  9630  003632  EF1D  F01B         	goto	u5871
  9631  003636  EF1F  F01B         	goto	u5870
  9632  00363A                     u5871:
  9633  00363A  EF2F  F01B         	goto	l5110
  9634  00363E                     u5870:
  9635  00363E                     
  9636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9637  00363E  1E3F               	comf	(dtoa@n+7)^0,f,c
  9638  003640  1E3E               	comf	(dtoa@n+6)^0,f,c
  9639  003642  1E3D               	comf	(dtoa@n+5)^0,f,c
  9640  003644  1E3C               	comf	(dtoa@n+4)^0,f,c
  9641  003646  1E3B               	comf	(dtoa@n+3)^0,f,c
  9642  003648  1E3A               	comf	(dtoa@n+2)^0,f,c
  9643  00364A  1E39               	comf	(dtoa@n+1)^0,f,c
  9644  00364C  6C38               	negf	dtoa@n^0,c
  9645  00364E  0E00               	movlw	0
  9646  003650  2239               	addwfc	(dtoa@n+1)^0,f,c
  9647  003652  223A               	addwfc	(dtoa@n+2)^0,f,c
  9648  003654  223B               	addwfc	(dtoa@n+3)^0,f,c
  9649  003656  223C               	addwfc	(dtoa@n+4)^0,f,c
  9650  003658  223D               	addwfc	(dtoa@n+5)^0,f,c
  9651  00365A  223E               	addwfc	(dtoa@n+6)^0,f,c
  9652  00365C  223F               	addwfc	(dtoa@n+7)^0,f,c
  9653  00365E                     l5110:
  9654                           
  9655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9656  00365E  0100               	movlb	0	; () banked
  9657  003660  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  9658  003662  EF35  F01B         	goto	u5881
  9659  003666  EF37  F01B         	goto	u5880
  9660  00366A                     u5881:
  9661  00366A  EF38  F01B         	goto	l5114
  9662  00366E                     u5880:
  9663  00366E                     
  9664                           ; BSR set to: 0
  9665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9666  00366E  93F5               	bcf	_flags& (0+255),1,b
  9667  003670                     l5114:
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9671  003670  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  9672  003672  EF45  F01B         	goto	u5890
  9673  003676  51F4               	movf	(_prec+1)& (0+255),w,b
  9674  003678  E106               	bnz	u5891
  9675  00367A  05F3               	decf	_prec& (0+255),w,b
  9676  00367C  B0D8               	btfsc	status,0,c
  9677  00367E  EF43  F01B         	goto	u5891
  9678  003682  EF45  F01B         	goto	u5890
  9679  003686                     u5891:
  9680  003686  EF4B  F01B         	goto	l1156
  9681  00368A                     u5890:
  9682  00368A                     
  9683                           ; BSR set to: 0
  9684  00368A  0E00               	movlw	0
  9685  00368C  6E33               	movwf	(dtoa@p+1)^0,c
  9686  00368E  0E01               	movlw	1
  9687  003690  6E32               	movwf	dtoa@p^0,c
  9688  003692  EF4F  F01B         	goto	l1158
  9689  003696                     l1156:
  9690                           
  9691                           ; BSR set to: 0
  9692  003696  C0F3  F032         	movff	_prec,dtoa@p
  9693  00369A  C0F4  F033         	movff	_prec+1,dtoa@p+1
  9694  00369E                     l1158:
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9698  00369E  C0F1  F034         	movff	_width,dtoa@w
  9699  0036A2  C0F2  F035         	movff	_width+1,dtoa@w+1
  9700  0036A6                     
  9701                           ; BSR set to: 0
  9702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9703  0036A6  5036               	movf	dtoa@s^0,w,c
  9704  0036A8  1037               	iorwf	(dtoa@s+1)^0,w,c
  9705  0036AA  A4D8               	btfss	status,2,c
  9706  0036AC  EF5A  F01B         	goto	u5901
  9707  0036B0  EF5C  F01B         	goto	u5900
  9708  0036B4                     u5901:
  9709  0036B4  EF63  F01B         	goto	l5122
  9710  0036B8                     u5900:
  9711  0036B8                     
  9712                           ; BSR set to: 0
  9713  0036B8  A5F5               	btfss	_flags& (0+255),2,b
  9714  0036BA  EF61  F01B         	goto	u5911
  9715  0036BE  EF63  F01B         	goto	u5910
  9716  0036C2                     u5911:
  9717  0036C2  EF66  F01B         	goto	l5124
  9718  0036C6                     u5910:
  9719  0036C6                     l5122:
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9723  0036C6  0634               	decf	dtoa@w^0,f,c
  9724  0036C8  A0D8               	btfss	status,0,c
  9725  0036CA  0635               	decf	(dtoa@w+1)^0,f,c
  9726  0036CC                     l5124:
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9730  0036CC  0E00               	movlw	0
  9731  0036CE  6E41               	movwf	(dtoa@i+1)^0,c
  9732  0036D0  0E4F               	movlw	79
  9733  0036D2  6E40               	movwf	dtoa@i^0,c
  9734  0036D4                     
  9735                           ; BSR set to: 0
  9736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9737  0036D4  0E00               	movlw	0
  9738  0036D6  0101               	movlb	1	; () banked
  9739  0036D8  6FAB               	movwf	(_dbuf+79)& (0+255),b
  9740                           
  9741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9742  0036DA  EFEB  F01B         	goto	l5138
  9743  0036DE                     l5128:
  9744                           
  9745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9746  0036DE  0640               	decf	dtoa@i^0,f,c
  9747  0036E0  A0D8               	btfss	status,0,c
  9748  0036E2  0641               	decf	(dtoa@i+1)^0,f,c
  9749  0036E4                     
  9750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9751  0036E4  0E5C               	movlw	low _dbuf
  9752  0036E6  2440               	addwf	dtoa@i^0,w,c
  9753  0036E8  6ED9               	movwf	fsr2l,c
  9754  0036EA  0E01               	movlw	high _dbuf
  9755  0036EC  2041               	addwfc	(dtoa@i+1)^0,w,c
  9756  0036EE  6EDA               	movwf	fsr2h,c
  9757  0036F0  C038  F001         	movff	dtoa@n,___aomod@dividend
  9758  0036F4  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9759  0036F8  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9760  0036FC  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9761  003700  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9762  003704  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9763  003708  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9764  00370C  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9765  003710  0E0A               	movlw	10
  9766  003712  6E09               	movwf	___aomod@divisor^0,c
  9767  003714  0E00               	movlw	0
  9768  003716  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9769  003718  0E00               	movlw	0
  9770  00371A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9771  00371C  0E00               	movlw	0
  9772  00371E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9773  003720  0E00               	movlw	0
  9774  003722  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9775  003724  0E00               	movlw	0
  9776  003726  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9777  003728  0E00               	movlw	0
  9778  00372A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9779  00372C  0E00               	movlw	0
  9780  00372E  6E10               	movwf	(___aomod@divisor+7)^0,c
  9781  003730  EC39  F025         	call	___aomod	;wreg free
  9782  003734  C001  F028         	movff	?___aomod,??_dtoa
  9783  003738  C002  F029         	movff	?___aomod+1,??_dtoa+1
  9784  00373C  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  9785  003740  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  9786  003744  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  9787  003748  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  9788  00374C  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  9789  003750  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  9790  003754  C028  F013         	movff	??_dtoa,abs@a
  9791  003758  C02A  F014         	movff	??_dtoa+2,abs@a+1
  9792  00375C  EC6A  F02E         	call	_abs	;wreg free
  9793  003760  5013               	movf	?_abs^0,w,c
  9794  003762  0F30               	addlw	48
  9795  003764  6EDF               	movwf	indf2,c
  9796  003766                     
  9797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9798  003766  0632               	decf	dtoa@p^0,f,c
  9799  003768  A0D8               	btfss	status,0,c
  9800  00376A  0633               	decf	(dtoa@p+1)^0,f,c
  9801  00376C                     
  9802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9803  00376C  0634               	decf	dtoa@w^0,f,c
  9804  00376E  A0D8               	btfss	status,0,c
  9805  003770  0635               	decf	(dtoa@w+1)^0,f,c
  9806  003772                     
  9807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9808  003772  C038  F001         	movff	dtoa@n,___aodiv@dividend
  9809  003776  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9810  00377A  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9811  00377E  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9812  003782  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9813  003786  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9814  00378A  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9815  00378E  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9816  003792  0E0A               	movlw	10
  9817  003794  6E09               	movwf	___aodiv@divisor^0,c
  9818  003796  0E00               	movlw	0
  9819  003798  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9820  00379A  0E00               	movlw	0
  9821  00379C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9822  00379E  0E00               	movlw	0
  9823  0037A0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9824  0037A2  0E00               	movlw	0
  9825  0037A4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9826  0037A6  0E00               	movlw	0
  9827  0037A8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9828  0037AA  0E00               	movlw	0
  9829  0037AC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9830  0037AE  0E00               	movlw	0
  9831  0037B0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9832  0037B2  ECB2  F023         	call	___aodiv	;wreg free
  9833  0037B6  C001  F038         	movff	?___aodiv,dtoa@n
  9834  0037BA  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  9835  0037BE  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  9836  0037C2  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  9837  0037C6  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  9838  0037CA  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  9839  0037CE  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  9840  0037D2  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  9841  0037D6                     l5138:
  9842                           
  9843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9844  0037D6  BE41               	btfsc	(dtoa@i+1)^0,7,c
  9845  0037D8  EFF6  F01B         	goto	u5921
  9846  0037DC  5041               	movf	(dtoa@i+1)^0,w,c
  9847  0037DE  E108               	bnz	u5920
  9848  0037E0  0440               	decf	dtoa@i^0,w,c
  9849  0037E2  A0D8               	btfss	status,0,c
  9850  0037E4  EFF6  F01B         	goto	u5921
  9851  0037E8  EFF8  F01B         	goto	u5920
  9852  0037EC                     u5921:
  9853  0037EC  EF29  F01C         	goto	l5148
  9854  0037F0                     u5920:
  9855  0037F0  5038               	movf	dtoa@n^0,w,c
  9856  0037F2  1039               	iorwf	(dtoa@n+1)^0,w,c
  9857  0037F4  103A               	iorwf	(dtoa@n+2)^0,w,c
  9858  0037F6  103B               	iorwf	(dtoa@n+3)^0,w,c
  9859  0037F8  103C               	iorwf	(dtoa@n+4)^0,w,c
  9860  0037FA  103D               	iorwf	(dtoa@n+5)^0,w,c
  9861  0037FC  103E               	iorwf	(dtoa@n+6)^0,w,c
  9862  0037FE  103F               	iorwf	(dtoa@n+7)^0,w,c
  9863  003800  A4D8               	btfss	status,2,c
  9864  003802  EF05  F01C         	goto	u5931
  9865  003806  EF07  F01C         	goto	u5930
  9866  00380A                     u5931:
  9867  00380A  EF6F  F01B         	goto	l5128
  9868  00380E                     u5930:
  9869  00380E  BE33               	btfsc	(dtoa@p+1)^0,7,c
  9870  003810  EF14  F01C         	goto	u5940
  9871  003814  5033               	movf	(dtoa@p+1)^0,w,c
  9872  003816  E106               	bnz	u5941
  9873  003818  0432               	decf	dtoa@p^0,w,c
  9874  00381A  B0D8               	btfsc	status,0,c
  9875  00381C  EF12  F01C         	goto	u5941
  9876  003820  EF14  F01C         	goto	u5940
  9877  003824                     u5941:
  9878  003824  EF6F  F01B         	goto	l5128
  9879  003828                     u5940:
  9880  003828  BE35               	btfsc	(dtoa@w+1)^0,7,c
  9881  00382A  EF1F  F01C         	goto	u5951
  9882  00382E  5035               	movf	(dtoa@w+1)^0,w,c
  9883  003830  E108               	bnz	u5950
  9884  003832  0434               	decf	dtoa@w^0,w,c
  9885  003834  A0D8               	btfss	status,0,c
  9886  003836  EF1F  F01C         	goto	u5951
  9887  00383A  EF21  F01C         	goto	u5950
  9888  00383E                     u5951:
  9889  00383E  EF29  F01C         	goto	l5148
  9890  003842                     u5950:
  9891  003842  0100               	movlb	0	; () banked
  9892  003844  B3F5               	btfsc	_flags& (0+255),1,b
  9893  003846  EF27  F01C         	goto	u5961
  9894  00384A  EF29  F01C         	goto	u5960
  9895  00384E                     u5961:
  9896  00384E  EF6F  F01B         	goto	l5128
  9897  003852                     u5960:
  9898  003852                     l5148:
  9899                           
  9900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9901  003852  5036               	movf	dtoa@s^0,w,c
  9902  003854  1037               	iorwf	(dtoa@s+1)^0,w,c
  9903  003856  A4D8               	btfss	status,2,c
  9904  003858  EF30  F01C         	goto	u5971
  9905  00385C  EF32  F01C         	goto	u5970
  9906  003860                     u5971:
  9907  003860  EF3A  F01C         	goto	l5152
  9908  003864                     u5970:
  9909  003864  0100               	movlb	0	; () banked
  9910  003866  A5F5               	btfss	_flags& (0+255),2,b
  9911  003868  EF38  F01C         	goto	u5981
  9912  00386C  EF3A  F01C         	goto	u5980
  9913  003870                     u5981:
  9914  003870  EF58  F01C         	goto	l5162
  9915  003874                     u5980:
  9916  003874                     l5152:
  9917                           
  9918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9919  003874  0640               	decf	dtoa@i^0,f,c
  9920  003876  A0D8               	btfss	status,0,c
  9921  003878  0641               	decf	(dtoa@i+1)^0,f,c
  9922  00387A                     
  9923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9924  00387A  5036               	movf	dtoa@s^0,w,c
  9925  00387C  1037               	iorwf	(dtoa@s+1)^0,w,c
  9926  00387E  A4D8               	btfss	status,2,c
  9927  003880  EF44  F01C         	goto	u5991
  9928  003884  EF46  F01C         	goto	u5990
  9929  003888                     u5991:
  9930  003888  EF4C  F01C         	goto	l5158
  9931  00388C                     u5990:
  9932  00388C  0E00               	movlw	0
  9933  00388E  6E31               	movwf	(_dtoa$1509+1)^0,c
  9934  003890  0E2B               	movlw	43
  9935  003892  6E30               	movwf	_dtoa$1509^0,c
  9936  003894  EF50  F01C         	goto	l5160
  9937  003898                     l5158:
  9938  003898  0E00               	movlw	0
  9939  00389A  6E31               	movwf	(_dtoa$1509+1)^0,c
  9940  00389C  0E2D               	movlw	45
  9941  00389E  6E30               	movwf	_dtoa$1509^0,c
  9942  0038A0                     l5160:
  9943  0038A0  0E5C               	movlw	low _dbuf
  9944  0038A2  2440               	addwf	dtoa@i^0,w,c
  9945  0038A4  6ED9               	movwf	fsr2l,c
  9946  0038A6  0E01               	movlw	high _dbuf
  9947  0038A8  2041               	addwfc	(dtoa@i+1)^0,w,c
  9948  0038AA  6EDA               	movwf	fsr2h,c
  9949  0038AC  C030  FFDF         	movff	_dtoa$1509,indf2
  9950  0038B0                     l5162:
  9951                           
  9952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9953  0038B0  C01E  F013         	movff	dtoa@fp,pad@fp
  9954  0038B4  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  9955  0038B8  0E5C               	movlw	low _dbuf
  9956  0038BA  2440               	addwf	dtoa@i^0,w,c
  9957  0038BC  6E15               	movwf	pad@buf^0,c
  9958  0038BE  0E01               	movlw	high _dbuf
  9959  0038C0  2041               	addwfc	(dtoa@i+1)^0,w,c
  9960  0038C2  6E16               	movwf	(pad@buf+1)^0,c
  9961  0038C4  C034  F017         	movff	dtoa@w,pad@p
  9962  0038C8  C035  F018         	movff	dtoa@w+1,pad@p+1
  9963  0038CC  ECD2  F02A         	call	_pad	;wreg free
  9964  0038D0  C013  F01E         	movff	?_pad,?_dtoa
  9965  0038D4  C014  F01F         	movff	?_pad+1,?_dtoa+1
  9966  0038D8  0012               	return		;funcret
  9967  0038DA                     __end_of_dtoa:
  9968                           	callstack 0
  9969                           
  9970 ;; *************** function _pad *****************
  9971 ;; Defined at:
  9972 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  9975 ;;		 -> vsnprintf@f(6), 
  9976 ;;  buf             2   20[COMRAM] PTR unsigned char 
  9977 ;;		 -> dbuf(80), 
  9978 ;;  p               2   22[COMRAM] int 
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;  w               2   27[COMRAM] int 
  9981 ;;  i               2   25[COMRAM] int 
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  2   18[COMRAM] int 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9991 ;;      Params:         6       0       0       0       0       0       0       0       0
  9992 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9993 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9994 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9995 ;;Total ram usage:       11 bytes
  9996 ;; Hardware stack levels used: 1
  9997 ;; Hardware stack levels required when called: 4
  9998 ;; This function calls:
  9999 ;;		_fputc
 10000 ;;		_fputs
 10001 ;;		_strlen
 10002 ;; This function is called by:
 10003 ;;		_dtoa
 10004 ;;		_efgtoa
 10005 ;;		_otoa
 10006 ;;		_utoa
 10007 ;;		_xtoa
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text28
 10012  0055A4                     __ptext28:
 10013                           	callstack 0
 10014  0055A4                     _pad:
 10015                           	callstack 21
 10016  0055A4                     
 10017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 10018  0055A4  0100               	movlb	0	; () banked
 10019  0055A6  A1F5               	btfss	_flags& (0+255),0,b
 10020  0055A8  EFD8  F02A         	goto	u5441
 10021  0055AC  EFDA  F02A         	goto	u5440
 10022  0055B0                     u5441:
 10023  0055B0  EFE4  F02A         	goto	l4960
 10024  0055B4                     u5440:
 10025  0055B4                     
 10026                           ; BSR set to: 0
 10027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 10028  0055B4  C015  F00C         	movff	pad@buf,fputs@s
 10029  0055B8  C016  F00D         	movff	pad@buf+1,fputs@s+1
 10030  0055BC  C013  F00E         	movff	pad@fp,fputs@fp
 10031  0055C0  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 10032  0055C4  EC48  F02E         	call	_fputs	;wreg free
 10033  0055C8                     l4960:
 10034                           
 10035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 10036  0055C8  BE18               	btfsc	(pad@p+1)^0,7,c
 10037  0055CA  EFE9  F02A         	goto	u5451
 10038  0055CE  EFEB  F02A         	goto	u5450
 10039  0055D2                     u5451:
 10040  0055D2  EFF1  F02A         	goto	l4964
 10041  0055D6                     u5450:
 10042  0055D6  C017  F01C         	movff	pad@p,pad@w
 10043  0055DA  C018  F01D         	movff	pad@p+1,pad@w+1
 10044  0055DE  EFF5  F02A         	goto	l1129
 10045  0055E2                     l4964:
 10046  0055E2  0E00               	movlw	0
 10047  0055E4  6E1D               	movwf	(pad@w+1)^0,c
 10048  0055E6  0E00               	movlw	0
 10049  0055E8  6E1C               	movwf	pad@w^0,c
 10050  0055EA                     l1129:
 10051                           
 10052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10053  0055EA  0E00               	movlw	0
 10054  0055EC  6E1B               	movwf	(pad@i+1)^0,c
 10055  0055EE  0E00               	movlw	0
 10056  0055F0  6E1A               	movwf	pad@i^0,c
 10057                           
 10058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10059  0055F2  EF07  F02B         	goto	l4970
 10060  0055F6                     l4966:
 10061                           
 10062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10063  0055F6  0E00               	movlw	0
 10064  0055F8  6E04               	movwf	(fputc@c+1)^0,c
 10065  0055FA  0E20               	movlw	32
 10066  0055FC  6E03               	movwf	fputc@c^0,c
 10067  0055FE  C013  F005         	movff	pad@fp,fputc@fp
 10068  005602  C014  F006         	movff	pad@fp+1,fputc@fp+1
 10069  005606  EC6D  F02A         	call	_fputc	;wreg free
 10070  00560A                     
 10071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10072  00560A  4A1A               	infsnz	pad@i^0,f,c
 10073  00560C  2A1B               	incf	(pad@i+1)^0,f,c
 10074  00560E                     l4970:
 10075                           
 10076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10077  00560E  501C               	movf	pad@w^0,w,c
 10078  005610  5C1A               	subwf	pad@i^0,w,c
 10079  005612  501B               	movf	(pad@i+1)^0,w,c
 10080  005614  0A80               	xorlw	128
 10081  005616  6E19               	movwf	??_pad^0,c
 10082  005618  501D               	movf	(pad@w+1)^0,w,c
 10083  00561A  0A80               	xorlw	128
 10084  00561C  5819               	subwfb	??_pad^0,w,c
 10085  00561E  A0D8               	btfss	status,0,c
 10086  005620  EF14  F02B         	goto	u5461
 10087  005624  EF16  F02B         	goto	u5460
 10088  005628                     u5461:
 10089  005628  EFFB  F02A         	goto	l4966
 10090  00562C                     u5460:
 10091  00562C                     
 10092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10093  00562C  0100               	movlb	0	; () banked
 10094  00562E  B1F5               	btfsc	_flags& (0+255),0,b
 10095  005630  EF1C  F02B         	goto	u5471
 10096  005634  EF1E  F02B         	goto	u5470
 10097  005638                     u5471:
 10098  005638  EF28  F02B         	goto	l4974
 10099  00563C                     u5470:
 10100  00563C                     
 10101                           ; BSR set to: 0
 10102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10103  00563C  C015  F00C         	movff	pad@buf,fputs@s
 10104  005640  C016  F00D         	movff	pad@buf+1,fputs@s+1
 10105  005644  C013  F00E         	movff	pad@fp,fputs@fp
 10106  005648  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 10107  00564C  EC48  F02E         	call	_fputs	;wreg free
 10108  005650                     l4974:
 10109                           
 10110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 10111  005650  C015  F001         	movff	pad@buf,strlen@s
 10112  005654  C016  F002         	movff	pad@buf+1,strlen@s+1
 10113  005658  EC94  F02D         	call	_strlen	;wreg free
 10114  00565C  501C               	movf	pad@w^0,w,c
 10115  00565E  2401               	addwf	?_strlen^0,w,c
 10116  005660  6E13               	movwf	?_pad^0,c
 10117  005662  501D               	movf	(pad@w+1)^0,w,c
 10118  005664  2002               	addwfc	(?_strlen+1)^0,w,c
 10119  005666  6E14               	movwf	(?_pad+1)^0,c
 10120  005668  0012               	return		;funcret
 10121  00566A                     __end_of_pad:
 10122                           	callstack 0
 10123                           
 10124 ;; *************** function _strlen *****************
 10125 ;; Defined at:
 10126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10129 ;;		 -> stoa@nuls(7), dbuf(80), ?_snprintf(2), STR_8(3), 
 10130 ;;		 -> STR_6(6), STR_4(3), STR_2(6), 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10133 ;;		 -> stoa@nuls(7), dbuf(80), ?_snprintf(2), STR_8(3), 
 10134 ;;		 -> STR_6(6), STR_4(3), STR_2(6), 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  2    0[COMRAM] unsigned int 
 10137 ;; Registers used:
 10138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10144 ;;      Params:         2       0       0       0       0       0       0       0       0
 10145 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10147 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10148 ;;Total ram usage:        4 bytes
 10149 ;; Hardware stack levels used: 1
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_pad
 10154 ;;		_stoa
 10155 ;;		_strstr
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text29
 10160  005B28                     __ptext29:
 10161                           	callstack 0
 10162  005B28                     _strlen:
 10163                           	callstack 24
 10164  005B28  C001  F003         	movff	strlen@s,strlen@a
 10165  005B2C  C002  F004         	movff	strlen@s+1,strlen@a+1
 10166  005B30  EF9C  F02D         	goto	l4374
 10167  005B34                     l4372:
 10168  005B34  4A01               	infsnz	strlen@s^0,f,c
 10169  005B36  2A02               	incf	(strlen@s+1)^0,f,c
 10170  005B38                     l4374:
 10171  005B38  C001  FFF6         	movff	strlen@s,tblptrl
 10172  005B3C  C002  FFF7         	movff	strlen@s+1,tblptrh
 10173  005B40  6AF8               	clrf	tblptru,c
 10174  005B42  0E07               	movlw	(high __ramtop+-1)
 10175  005B44  64F7               	cpfsgt	tblptrh,c
 10176  005B46  D003               	bra	u4487
 10177  005B48  0008               	tblrd		*
 10178  005B4A  50F5               	movf	tablat,w,c
 10179  005B4C  D005               	bra	u4480
 10180  005B4E                     u4487:
 10181  005B4E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10182  005B52  CFF7 FFEA          	movff	tblptrh,fsr0h
 10183  005B56  50EF               	movf	indf0,w,c
 10184  005B58                     u4480:
 10185  005B58  0900               	iorlw	0
 10186  005B5A  A4D8               	btfss	status,2,c
 10187  005B5C  EFB2  F02D         	goto	u4491
 10188  005B60  EFB4  F02D         	goto	u4490
 10189  005B64                     u4491:
 10190  005B64  EF9A  F02D         	goto	l4372
 10191  005B68                     u4490:
 10192  005B68  5003               	movf	strlen@a^0,w,c
 10193  005B6A  5C01               	subwf	strlen@s^0,w,c
 10194  005B6C  6E01               	movwf	?_strlen^0,c
 10195  005B6E  5004               	movf	(strlen@a+1)^0,w,c
 10196  005B70  5802               	subwfb	(strlen@s+1)^0,w,c
 10197  005B72  6E02               	movwf	(?_strlen+1)^0,c
 10198  005B74  0012               	return		;funcret
 10199  005B76                     __end_of_strlen:
 10200                           	callstack 0
 10201                           
 10202 ;; *************** function _fputs *****************
 10203 ;; Defined at:
 10204 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10207 ;;		 -> dbuf(80), 
 10208 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 10209 ;;		 -> vsnprintf@f(6), 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  i               2   16[COMRAM] int 
 10212 ;;  c               1   15[COMRAM] unsigned char 
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  2   11[COMRAM] int 
 10215 ;; Registers used:
 10216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 0/0
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10222 ;;      Params:         4       0       0       0       0       0       0       0       0
 10223 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10225 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10226 ;;Total ram usage:        7 bytes
 10227 ;; Hardware stack levels used: 1
 10228 ;; Hardware stack levels required when called: 3
 10229 ;; This function calls:
 10230 ;;		_fputc
 10231 ;; This function is called by:
 10232 ;;		_pad
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           	psect	text30
 10237  005C90                     __ptext30:
 10238                           	callstack 0
 10239  005C90                     _fputs:
 10240                           	callstack 21
 10241  005C90  0E00               	movlw	0
 10242  005C92  6E12               	movwf	(fputs@i+1)^0,c
 10243  005C94  0E00               	movlw	0
 10244  005C96  6E11               	movwf	fputs@i^0,c
 10245  005C98  EF59  F02E         	goto	l4368
 10246  005C9C                     l4364:
 10247  005C9C  C010  F003         	movff	fputs@c,fputc@c
 10248  005CA0  6A04               	clrf	(fputc@c+1)^0,c
 10249  005CA2  C00E  F005         	movff	fputs@fp,fputc@fp
 10250  005CA6  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
 10251  005CAA  EC6D  F02A         	call	_fputc	;wreg free
 10252  005CAE  4A11               	infsnz	fputs@i^0,f,c
 10253  005CB0  2A12               	incf	(fputs@i+1)^0,f,c
 10254  005CB2                     l4368:
 10255  005CB2  5011               	movf	fputs@i^0,w,c
 10256  005CB4  240C               	addwf	fputs@s^0,w,c
 10257  005CB6  6ED9               	movwf	fsr2l,c
 10258  005CB8  5012               	movf	(fputs@i+1)^0,w,c
 10259  005CBA  200D               	addwfc	(fputs@s+1)^0,w,c
 10260  005CBC  6EDA               	movwf	fsr2h,c
 10261  005CBE  50DF               	movf	indf2,w,c
 10262  005CC0  6E10               	movwf	fputs@c^0,c
 10263  005CC2  5010               	movf	fputs@c^0,w,c
 10264  005CC4  A4D8               	btfss	status,2,c
 10265  005CC6  EF67  F02E         	goto	u4471
 10266  005CCA  EF69  F02E         	goto	u4470
 10267  005CCE                     u4471:
 10268  005CCE  EF4E  F02E         	goto	l4364
 10269  005CD2                     u4470:
 10270  005CD2  0012               	return		;funcret
 10271  005CD4                     __end_of_fputs:
 10272                           	callstack 0
 10273                           
 10274 ;; *************** function _abs *****************
 10275 ;; Defined at:
 10276 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;  a               2   18[COMRAM] int 
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;		None
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  2   18[COMRAM] int 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10290 ;;      Params:         2       0       0       0       0       0       0       0       0
 10291 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10292 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10293 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10294 ;;Total ram usage:        4 bytes
 10295 ;; Hardware stack levels used: 1
 10296 ;; This function calls:
 10297 ;;		Nothing
 10298 ;; This function is called by:
 10299 ;;		_dtoa
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text31
 10304  005CD4                     __ptext31:
 10305                           	callstack 0
 10306  005CD4                     _abs:
 10307                           	callstack 25
 10308  005CD4  BE14               	btfsc	(abs@a+1)^0,7,c
 10309  005CD6  EF77  F02E         	goto	u5480
 10310  005CDA  5014               	movf	(abs@a+1)^0,w,c
 10311  005CDC  E106               	bnz	u5481
 10312  005CDE  0413               	decf	abs@a^0,w,c
 10313  005CE0  B0D8               	btfsc	status,0,c
 10314  005CE2  EF75  F02E         	goto	u5481
 10315  005CE6  EF77  F02E         	goto	u5480
 10316  005CEA                     u5481:
 10317  005CEA  EF85  F02E         	goto	l1460
 10318  005CEE                     u5480:
 10319  005CEE  C013  F015         	movff	abs@a,??_abs
 10320  005CF2  C014  F016         	movff	abs@a+1,??_abs+1
 10321  005CF6  1E15               	comf	??_abs^0,f,c
 10322  005CF8  1E16               	comf	(??_abs+1)^0,f,c
 10323  005CFA  4A15               	infsnz	??_abs^0,f,c
 10324  005CFC  2A16               	incf	(??_abs+1)^0,f,c
 10325  005CFE  C015  F013         	movff	??_abs,?_abs
 10326  005D02  C016  F014         	movff	??_abs+1,?_abs+1
 10327  005D06  EF89  F02E         	goto	l1463
 10328  005D0A                     l1460:
 10329  005D0A  C013  F013         	movff	abs@a,?_abs
 10330  005D0E  C014  F014         	movff	abs@a+1,?_abs+1
 10331  005D12                     l1463:
 10332  005D12  0012               	return		;funcret
 10333  005D14                     __end_of_abs:
 10334                           	callstack 0
 10335                           
 10336 ;; *************** function ___aomod *****************
 10337 ;; Defined at:
 10338 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  dividend        8    0[COMRAM] long long 
 10341 ;;  divisor         8    8[COMRAM] long long 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  sign            1   17[COMRAM] unsigned char 
 10344 ;;  counter         1   16[COMRAM] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  8    0[COMRAM] long long 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10354 ;;      Params:        16       0       0       0       0       0       0       0       0
 10355 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10357 ;;      Totals:        18       0       0       0       0       0       0       0       0
 10358 ;;Total ram usage:       18 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_dtoa
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text32
 10368  004A72                     __ptext32:
 10369                           	callstack 0
 10370  004A72                     ___aomod:
 10371                           	callstack 25
 10372  004A72  0E00               	movlw	0
 10373  004A74  6E12               	movwf	___aomod@sign^0,c
 10374  004A76  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10375  004A78  EF42  F025         	goto	u4610
 10376  004A7C  EF40  F025         	goto	u4611
 10377  004A80                     u4611:
 10378  004A80  EF54  F025         	goto	l4446
 10379  004A84                     u4610:
 10380  004A84  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10381  004A86  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10382  004A88  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10383  004A8A  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10384  004A8C  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10385  004A8E  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10386  004A90  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10387  004A92  6C01               	negf	___aomod@dividend^0,c
 10388  004A94  0E00               	movlw	0
 10389  004A96  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10390  004A98  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10391  004A9A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10392  004A9C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10393  004A9E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10394  004AA0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10395  004AA2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10396  004AA4  0E01               	movlw	1
 10397  004AA6  6E12               	movwf	___aomod@sign^0,c
 10398  004AA8                     l4446:
 10399  004AA8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10400  004AAA  EF5B  F025         	goto	u4620
 10401  004AAE  EF59  F025         	goto	u4621
 10402  004AB2                     u4621:
 10403  004AB2  EF6B  F025         	goto	l4450
 10404  004AB6                     u4620:
 10405  004AB6  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10406  004AB8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10407  004ABA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10408  004ABC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10409  004ABE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10410  004AC0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10411  004AC2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10412  004AC4  6C09               	negf	___aomod@divisor^0,c
 10413  004AC6  0E00               	movlw	0
 10414  004AC8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10415  004ACA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10416  004ACC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10417  004ACE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10418  004AD0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10419  004AD2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10420  004AD4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10421  004AD6                     l4450:
 10422  004AD6  5009               	movf	___aomod@divisor^0,w,c
 10423  004AD8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10424  004ADA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10425  004ADC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10426  004ADE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10427  004AE0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10428  004AE2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10429  004AE4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10430  004AE6  B4D8               	btfsc	status,2,c
 10431  004AE8  EF78  F025         	goto	u4631
 10432  004AEC  EF7A  F025         	goto	u4630
 10433  004AF0                     u4631:
 10434  004AF0  EFC2  F025         	goto	l4466
 10435  004AF4                     u4630:
 10436  004AF4  0E01               	movlw	1
 10437  004AF6  6E11               	movwf	___aomod@counter^0,c
 10438  004AF8  EF88  F025         	goto	l4456
 10439  004AFC                     l4454:
 10440  004AFC  90D8               	bcf	status,0,c
 10441  004AFE  3609               	rlcf	___aomod@divisor^0,f,c
 10442  004B00  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10443  004B02  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10444  004B04  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10445  004B06  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10446  004B08  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10447  004B0A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10448  004B0C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10449  004B0E  2A11               	incf	___aomod@counter^0,f,c
 10450  004B10                     l4456:
 10451  004B10  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10452  004B12  EF8D  F025         	goto	u4641
 10453  004B16  EF8F  F025         	goto	u4640
 10454  004B1A                     u4641:
 10455  004B1A  EF7E  F025         	goto	l4454
 10456  004B1E                     u4640:
 10457  004B1E                     l4458:
 10458  004B1E  5009               	movf	___aomod@divisor^0,w,c
 10459  004B20  5C01               	subwf	___aomod@dividend^0,w,c
 10460  004B22  500A               	movf	(___aomod@divisor+1)^0,w,c
 10461  004B24  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10462  004B26  500B               	movf	(___aomod@divisor+2)^0,w,c
 10463  004B28  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10464  004B2A  500C               	movf	(___aomod@divisor+3)^0,w,c
 10465  004B2C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10466  004B2E  500D               	movf	(___aomod@divisor+4)^0,w,c
 10467  004B30  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10468  004B32  500E               	movf	(___aomod@divisor+5)^0,w,c
 10469  004B34  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10470  004B36  500F               	movf	(___aomod@divisor+6)^0,w,c
 10471  004B38  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10472  004B3A  5010               	movf	(___aomod@divisor+7)^0,w,c
 10473  004B3C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10474  004B3E  A0D8               	btfss	status,0,c
 10475  004B40  EFA4  F025         	goto	u4651
 10476  004B44  EFA6  F025         	goto	u4650
 10477  004B48                     u4651:
 10478  004B48  EFB6  F025         	goto	l4462
 10479  004B4C                     u4650:
 10480  004B4C  5009               	movf	___aomod@divisor^0,w,c
 10481  004B4E  5E01               	subwf	___aomod@dividend^0,f,c
 10482  004B50  500A               	movf	(___aomod@divisor+1)^0,w,c
 10483  004B52  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10484  004B54  500B               	movf	(___aomod@divisor+2)^0,w,c
 10485  004B56  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10486  004B58  500C               	movf	(___aomod@divisor+3)^0,w,c
 10487  004B5A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10488  004B5C  500D               	movf	(___aomod@divisor+4)^0,w,c
 10489  004B5E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10490  004B60  500E               	movf	(___aomod@divisor+5)^0,w,c
 10491  004B62  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10492  004B64  500F               	movf	(___aomod@divisor+6)^0,w,c
 10493  004B66  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10494  004B68  5010               	movf	(___aomod@divisor+7)^0,w,c
 10495  004B6A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10496  004B6C                     l4462:
 10497  004B6C  90D8               	bcf	status,0,c
 10498  004B6E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10499  004B70  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10500  004B72  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10501  004B74  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10502  004B76  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10503  004B78  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10504  004B7A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10505  004B7C  3209               	rrcf	___aomod@divisor^0,f,c
 10506  004B7E  2E11               	decfsz	___aomod@counter^0,f,c
 10507  004B80  EF8F  F025         	goto	l4458
 10508  004B84                     l4466:
 10509  004B84  5012               	movf	___aomod@sign^0,w,c
 10510  004B86  B4D8               	btfsc	status,2,c
 10511  004B88  EFC8  F025         	goto	u4661
 10512  004B8C  EFCA  F025         	goto	u4660
 10513  004B90                     u4661:
 10514  004B90  EFDA  F025         	goto	l4470
 10515  004B94                     u4660:
 10516  004B94  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10517  004B96  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10518  004B98  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10519  004B9A  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10520  004B9C  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10521  004B9E  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10522  004BA0  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10523  004BA2  6C01               	negf	___aomod@dividend^0,c
 10524  004BA4  0E00               	movlw	0
 10525  004BA6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10526  004BA8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10527  004BAA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10528  004BAC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10529  004BAE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10530  004BB0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10531  004BB2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10532  004BB4                     l4470:
 10533  004BB4  C001  F001         	movff	___aomod@dividend,?___aomod
 10534  004BB8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10535  004BBC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10536  004BC0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10537  004BC4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10538  004BC8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10539  004BCC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10540  004BD0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10541  004BD4  0012               	return		;funcret
 10542  004BD6                     __end_of___aomod:
 10543                           	callstack 0
 10544                           
 10545 ;; *************** function ___aodiv *****************
 10546 ;; Defined at:
 10547 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  dividend        8    0[COMRAM] long long 
 10550 ;;  divisor         8    8[COMRAM] long long 
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;  quotient        8   18[COMRAM] long long 
 10553 ;;  sign            1   17[COMRAM] unsigned char 
 10554 ;;  counter         1   16[COMRAM] unsigned char 
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  8    0[COMRAM] long long 
 10557 ;; Registers used:
 10558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10564 ;;      Params:        16       0       0       0       0       0       0       0       0
 10565 ;;      Locals:        10       0       0       0       0       0       0       0       0
 10566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10567 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10568 ;;Total ram usage:       26 bytes
 10569 ;; Hardware stack levels used: 1
 10570 ;; This function calls:
 10571 ;;		Nothing
 10572 ;; This function is called by:
 10573 ;;		_dtoa
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text33
 10578  004764                     __ptext33:
 10579                           	callstack 0
 10580  004764                     ___aodiv:
 10581                           	callstack 25
 10582  004764  0E00               	movlw	0
 10583  004766  6E12               	movwf	___aodiv@sign^0,c
 10584  004768  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10585  00476A  EFBB  F023         	goto	u4540
 10586  00476E  EFB9  F023         	goto	u4541
 10587  004772                     u4541:
 10588  004772  EFCD  F023         	goto	l4402
 10589  004776                     u4540:
 10590  004776  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10591  004778  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10592  00477A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10593  00477C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10594  00477E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10595  004780  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10596  004782  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10597  004784  6C09               	negf	___aodiv@divisor^0,c
 10598  004786  0E00               	movlw	0
 10599  004788  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10600  00478A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10601  00478C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10602  00478E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10603  004790  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10604  004792  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10605  004794  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10606  004796  0E01               	movlw	1
 10607  004798  6E12               	movwf	___aodiv@sign^0,c
 10608  00479A                     l4402:
 10609  00479A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10610  00479C  EFD4  F023         	goto	u4550
 10611  0047A0  EFD2  F023         	goto	u4551
 10612  0047A4                     u4551:
 10613  0047A4  EFE6  F023         	goto	l4408
 10614  0047A8                     u4550:
 10615  0047A8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10616  0047AA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10617  0047AC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10618  0047AE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10619  0047B0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10620  0047B2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10621  0047B4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10622  0047B6  6C01               	negf	___aodiv@dividend^0,c
 10623  0047B8  0E00               	movlw	0
 10624  0047BA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10625  0047BC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10626  0047BE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10627  0047C0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10628  0047C2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10629  0047C4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10630  0047C6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10631  0047C8  0E01               	movlw	1
 10632  0047CA  1A12               	xorwf	___aodiv@sign^0,f,c
 10633  0047CC                     l4408:
 10634  0047CC  EE20  F013         	lfsr	2,___aodiv@quotient
 10635  0047D0  0E07               	movlw	7
 10636  0047D2                     u4561:
 10637  0047D2  6ADE               	clrf	postinc2,c
 10638  0047D4  06E8               	decf	wreg,f,c
 10639  0047D6  E2FD               	bc	u4561
 10640  0047D8  5009               	movf	___aodiv@divisor^0,w,c
 10641  0047DA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10642  0047DC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10643  0047DE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10644  0047E0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10645  0047E2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10646  0047E4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10647  0047E6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10648  0047E8  B4D8               	btfsc	status,2,c
 10649  0047EA  EFF9  F023         	goto	u4571
 10650  0047EE  EFFB  F023         	goto	u4570
 10651  0047F2                     u4571:
 10652  0047F2  EF4D  F024         	goto	l4430
 10653  0047F6                     u4570:
 10654  0047F6  0E01               	movlw	1
 10655  0047F8  6E11               	movwf	___aodiv@counter^0,c
 10656  0047FA  EF09  F024         	goto	l4416
 10657  0047FE                     l4414:
 10658  0047FE  90D8               	bcf	status,0,c
 10659  004800  3609               	rlcf	___aodiv@divisor^0,f,c
 10660  004802  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10661  004804  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10662  004806  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10663  004808  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10664  00480A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10665  00480C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10666  00480E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10667  004810  2A11               	incf	___aodiv@counter^0,f,c
 10668  004812                     l4416:
 10669  004812  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10670  004814  EF0E  F024         	goto	u4581
 10671  004818  EF10  F024         	goto	u4580
 10672  00481C                     u4581:
 10673  00481C  EFFF  F023         	goto	l4414
 10674  004820                     u4580:
 10675  004820                     l4418:
 10676  004820  90D8               	bcf	status,0,c
 10677  004822  3613               	rlcf	___aodiv@quotient^0,f,c
 10678  004824  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10679  004826  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10680  004828  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10681  00482A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10682  00482C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10683  00482E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10684  004830  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10685  004832  5009               	movf	___aodiv@divisor^0,w,c
 10686  004834  5C01               	subwf	___aodiv@dividend^0,w,c
 10687  004836  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10688  004838  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10689  00483A  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10690  00483C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10691  00483E  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10692  004840  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10693  004842  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10694  004844  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10695  004846  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10696  004848  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10697  00484A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10698  00484C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10699  00484E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10700  004850  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10701  004852  A0D8               	btfss	status,0,c
 10702  004854  EF2E  F024         	goto	u4591
 10703  004858  EF30  F024         	goto	u4590
 10704  00485C                     u4591:
 10705  00485C  EF41  F024         	goto	l4426
 10706  004860                     u4590:
 10707  004860  5009               	movf	___aodiv@divisor^0,w,c
 10708  004862  5E01               	subwf	___aodiv@dividend^0,f,c
 10709  004864  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10710  004866  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10711  004868  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10712  00486A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10713  00486C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10714  00486E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10715  004870  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10716  004872  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10717  004874  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10718  004876  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10719  004878  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10720  00487A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10721  00487C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10722  00487E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10723  004880  8013               	bsf	___aodiv@quotient^0,0,c
 10724  004882                     l4426:
 10725  004882  90D8               	bcf	status,0,c
 10726  004884  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10727  004886  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10728  004888  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10729  00488A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10730  00488C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10731  00488E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10732  004890  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10733  004892  3209               	rrcf	___aodiv@divisor^0,f,c
 10734  004894  2E11               	decfsz	___aodiv@counter^0,f,c
 10735  004896  EF10  F024         	goto	l4418
 10736  00489A                     l4430:
 10737  00489A  5012               	movf	___aodiv@sign^0,w,c
 10738  00489C  B4D8               	btfsc	status,2,c
 10739  00489E  EF53  F024         	goto	u4601
 10740  0048A2  EF55  F024         	goto	u4600
 10741  0048A6                     u4601:
 10742  0048A6  EF65  F024         	goto	l4434
 10743  0048AA                     u4600:
 10744  0048AA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10745  0048AC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10746  0048AE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10747  0048B0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10748  0048B2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10749  0048B4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10750  0048B6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10751  0048B8  6C13               	negf	___aodiv@quotient^0,c
 10752  0048BA  0E00               	movlw	0
 10753  0048BC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10754  0048BE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10755  0048C0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10756  0048C2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10757  0048C4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10758  0048C6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10759  0048C8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10760  0048CA                     l4434:
 10761  0048CA  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10762  0048CE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10763  0048D2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10764  0048D6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10765  0048DA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10766  0048DE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10767  0048E2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10768  0048E6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10769  0048EA  0012               	return		;funcret
 10770  0048EC                     __end_of___aodiv:
 10771                           	callstack 0
 10772                           
 10773 ;; *************** function _ctoa *****************
 10774 ;; Defined at:
 10775 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10778 ;;		 -> vsnprintf@f(6), 
 10779 ;;  c               1   13[COMRAM] unsigned char 
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  w               2   17[COMRAM] int 
 10782 ;;  l               2   15[COMRAM] int 
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  2   11[COMRAM] int 
 10785 ;; Registers used:
 10786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10792 ;;      Params:         3       0       0       0       0       0       0       0       0
 10793 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10794 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10795 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10796 ;;Total ram usage:        8 bytes
 10797 ;; Hardware stack levels used: 1
 10798 ;; Hardware stack levels required when called: 3
 10799 ;; This function calls:
 10800 ;;		_fputc
 10801 ;; This function is called by:
 10802 ;;		_vfpfcnvrt
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text34
 10807  005332                     __ptext34:
 10808                           	callstack 0
 10809  005332                     _ctoa:
 10810                           	callstack 23
 10811  005332                     
 10812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 10813  005332  0100               	movlb	0	; () banked
 10814  005334  51F1               	movf	_width& (0+255),w,b
 10815  005336  11F2               	iorwf	(_width+1)& (0+255),w,b
 10816  005338  A4D8               	btfss	status,2,c
 10817  00533A  EFA1  F029         	goto	u5801
 10818  00533E  EFA3  F029         	goto	u5800
 10819  005342                     u5801:
 10820  005342  EFA9  F029         	goto	l5080
 10821  005346                     u5800:
 10822  005346                     
 10823                           ; BSR set to: 0
 10824  005346  C0F1  F012         	movff	_width,ctoa@w
 10825  00534A  C0F2  F013         	movff	_width+1,ctoa@w+1
 10826  00534E  EFAF  F029         	goto	l5082
 10827  005352                     l5080:
 10828                           
 10829                           ; BSR set to: 0
 10830  005352  0EFF               	movlw	255
 10831  005354  25F1               	addwf	_width& (0+255),w,b
 10832  005356  6E12               	movwf	ctoa@w^0,c
 10833  005358  0EFF               	movlw	255
 10834  00535A  21F2               	addwfc	(_width+1)& (0+255),w,b
 10835  00535C  6E13               	movwf	(ctoa@w+1)^0,c
 10836  00535E                     l5082:
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 10840  00535E  A1F5               	btfss	_flags& (0+255),0,b
 10841  005360  EFB4  F029         	goto	u5811
 10842  005364  EFB6  F029         	goto	u5810
 10843  005368                     u5811:
 10844  005368  EFBF  F029         	goto	l5086
 10845  00536C                     u5810:
 10846  00536C                     
 10847                           ; BSR set to: 0
 10848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 10849  00536C  C00E  F003         	movff	ctoa@c,fputc@c
 10850  005370  6A04               	clrf	(fputc@c+1)^0,c
 10851  005372  C00C  F005         	movff	ctoa@fp,fputc@fp
 10852  005376  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
 10853  00537A  EC6D  F02A         	call	_fputc	;wreg free
 10854  00537E                     l5086:
 10855                           
 10856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 10857  00537E  BE13               	btfsc	(ctoa@w+1)^0,7,c
 10858  005380  EFC4  F029         	goto	u5821
 10859  005384  EFC6  F029         	goto	u5820
 10860  005388                     u5821:
 10861  005388  EFC8  F029         	goto	l5090
 10862  00538C                     u5820:
 10863  00538C  EFCC  F029         	goto	l1145
 10864  005390                     l5090:
 10865  005390  0E00               	movlw	0
 10866  005392  6E13               	movwf	(ctoa@w+1)^0,c
 10867  005394  0E00               	movlw	0
 10868  005396  6E12               	movwf	ctoa@w^0,c
 10869  005398                     l1145:
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 10872  005398  0E00               	movlw	0
 10873  00539A  6E11               	movwf	(ctoa@l+1)^0,c
 10874  00539C  0E00               	movlw	0
 10875  00539E  6E10               	movwf	ctoa@l^0,c
 10876                           
 10877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10878  0053A0  EFDE  F029         	goto	l5096
 10879  0053A4                     l5092:
 10880                           
 10881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 10882  0053A4  0E00               	movlw	0
 10883  0053A6  6E04               	movwf	(fputc@c+1)^0,c
 10884  0053A8  0E20               	movlw	32
 10885  0053AA  6E03               	movwf	fputc@c^0,c
 10886  0053AC  C00C  F005         	movff	ctoa@fp,fputc@fp
 10887  0053B0  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
 10888  0053B4  EC6D  F02A         	call	_fputc	;wreg free
 10889  0053B8                     
 10890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
 10891  0053B8  4A10               	infsnz	ctoa@l^0,f,c
 10892  0053BA  2A11               	incf	(ctoa@l+1)^0,f,c
 10893  0053BC                     l5096:
 10894                           
 10895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10896  0053BC  5012               	movf	ctoa@w^0,w,c
 10897  0053BE  5C10               	subwf	ctoa@l^0,w,c
 10898  0053C0  5011               	movf	(ctoa@l+1)^0,w,c
 10899  0053C2  0A80               	xorlw	128
 10900  0053C4  6E0F               	movwf	??_ctoa^0,c
 10901  0053C6  5013               	movf	(ctoa@w+1)^0,w,c
 10902  0053C8  0A80               	xorlw	128
 10903  0053CA  580F               	subwfb	??_ctoa^0,w,c
 10904  0053CC  A0D8               	btfss	status,0,c
 10905  0053CE  EFEB  F029         	goto	u5831
 10906  0053D2  EFED  F029         	goto	u5830
 10907  0053D6                     u5831:
 10908  0053D6  EFD2  F029         	goto	l5092
 10909  0053DA                     u5830:
 10910  0053DA                     
 10911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 10912  0053DA  0100               	movlb	0	; () banked
 10913  0053DC  B1F5               	btfsc	_flags& (0+255),0,b
 10914  0053DE  EFF3  F029         	goto	u5841
 10915  0053E2  EFF5  F029         	goto	u5840
 10916  0053E6                     u5841:
 10917  0053E6  EFFE  F029         	goto	l5100
 10918  0053EA                     u5840:
 10919  0053EA                     
 10920                           ; BSR set to: 0
 10921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 10922  0053EA  C00E  F003         	movff	ctoa@c,fputc@c
 10923  0053EE  6A04               	clrf	(fputc@c+1)^0,c
 10924  0053F0  C00C  F005         	movff	ctoa@fp,fputc@fp
 10925  0053F4  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
 10926  0053F8  EC6D  F02A         	call	_fputc	;wreg free
 10927  0053FC                     l5100:
 10928                           
 10929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 10930  0053FC  0E01               	movlw	1
 10931  0053FE  2410               	addwf	ctoa@l^0,w,c
 10932  005400  6E0C               	movwf	?_ctoa^0,c
 10933  005402  0E00               	movlw	0
 10934  005404  2011               	addwfc	(ctoa@l+1)^0,w,c
 10935  005406  6E0D               	movwf	(?_ctoa+1)^0,c
 10936  005408  0012               	return		;funcret
 10937  00540A                     __end_of_ctoa:
 10938                           	callstack 0
 10939                           
 10940 ;; *************** function _fputc *****************
 10941 ;; Defined at:
 10942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  c               2    2[COMRAM] int 
 10945 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 10946 ;;		 -> vsnprintf@f(6), 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;		None
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  2    2[COMRAM] int 
 10951 ;; Registers used:
 10952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10958 ;;      Params:         4       0       0       0       0       0       0       0       0
 10959 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10960 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10961 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10962 ;;Total ram usage:        9 bytes
 10963 ;; Hardware stack levels used: 1
 10964 ;; Hardware stack levels required when called: 2
 10965 ;; This function calls:
 10966 ;;		_putch
 10967 ;; This function is called by:
 10968 ;;		_pad
 10969 ;;		_ctoa
 10970 ;;		_stoa
 10971 ;;		_vfpfcnvrt
 10972 ;;		_fputs
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text35
 10977  0054DA                     __ptext35:
 10978                           	callstack 0
 10979  0054DA                     _fputc:
 10980                           	callstack 21
 10981  0054DA  5005               	movf	fputc@fp^0,w,c
 10982  0054DC  1006               	iorwf	(fputc@fp+1)^0,w,c
 10983  0054DE  B4D8               	btfsc	status,2,c
 10984  0054E0  EF74  F02A         	goto	u4041
 10985  0054E4  EF76  F02A         	goto	u4040
 10986  0054E8                     u4041:
 10987  0054E8  EF7F  F02A         	goto	l4150
 10988  0054EC                     u4040:
 10989  0054EC  5005               	movf	fputc@fp^0,w,c
 10990  0054EE  1006               	iorwf	(fputc@fp+1)^0,w,c
 10991  0054F0  A4D8               	btfss	status,2,c
 10992  0054F2  EF7D  F02A         	goto	u4051
 10993  0054F6  EF7F  F02A         	goto	u4050
 10994  0054FA                     u4051:
 10995  0054FA  EF84  F02A         	goto	l4152
 10996  0054FE                     u4050:
 10997  0054FE                     l4150:
 10998  0054FE  5003               	movf	fputc@c^0,w,c
 10999  005500  EC46  F030         	call	_putch
 11000  005504  EFD1  F02A         	goto	l1547
 11001  005508                     l4152:
 11002  005508  EE20 F004          	lfsr	2,4
 11003  00550C  5005               	movf	fputc@fp^0,w,c
 11004  00550E  26D9               	addwf	fsr2l,f,c
 11005  005510  5006               	movf	(fputc@fp+1)^0,w,c
 11006  005512  22DA               	addwfc	fsr2h,f,c
 11007  005514  50DE               	movf	postinc2,w,c
 11008  005516  10DE               	iorwf	postinc2,w,c
 11009  005518  B4D8               	btfsc	status,2,c
 11010  00551A  EF91  F02A         	goto	u4061
 11011  00551E  EF93  F02A         	goto	u4060
 11012  005522                     u4061:
 11013  005522  EFAE  F02A         	goto	l4156
 11014  005526                     u4060:
 11015  005526  EE20 F004          	lfsr	2,4
 11016  00552A  5005               	movf	fputc@fp^0,w,c
 11017  00552C  26D9               	addwf	fsr2l,f,c
 11018  00552E  5006               	movf	(fputc@fp+1)^0,w,c
 11019  005530  22DA               	addwfc	fsr2h,f,c
 11020  005532  EE10 F002          	lfsr	1,2
 11021  005536  5005               	movf	fputc@fp^0,w,c
 11022  005538  26E1               	addwf	fsr1l,f,c
 11023  00553A  5006               	movf	(fputc@fp+1)^0,w,c
 11024  00553C  22E2               	addwfc	fsr1h,f,c
 11025  00553E  50DE               	movf	postinc2,w,c
 11026  005540  5CE6               	subwf	postinc1,w,c
 11027  005542  50E6               	movf	postinc1,w,c
 11028  005544  0A80               	xorlw	128
 11029  005546  6E0B               	movwf	(??_fputc+4)^0,c
 11030  005548  50DE               	movf	postinc2,w,c
 11031  00554A  0A80               	xorlw	128
 11032  00554C  580B               	subwfb	(??_fputc+4)^0,w,c
 11033  00554E  B0D8               	btfsc	status,0,c
 11034  005550  EFAC  F02A         	goto	u4071
 11035  005554  EFAE  F02A         	goto	u4070
 11036  005558                     u4071:
 11037  005558  EFD1  F02A         	goto	l1547
 11038  00555C                     u4070:
 11039  00555C                     l4156:
 11040  00555C  EE20 F002          	lfsr	2,2
 11041  005560  5005               	movf	fputc@fp^0,w,c
 11042  005562  26D9               	addwf	fsr2l,f,c
 11043  005564  5006               	movf	(fputc@fp+1)^0,w,c
 11044  005566  22DA               	addwfc	fsr2h,f,c
 11045  005568  CFDE F007          	movff	postinc2,??_fputc
 11046  00556C  CFDD F008          	movff	postdec2,??_fputc+1
 11047  005570  C005  FFD9         	movff	fputc@fp,fsr2l
 11048  005574  C006  FFDA         	movff	fputc@fp+1,fsr2h
 11049  005578  CFDE F009          	movff	postinc2,??_fputc+2
 11050  00557C  CFDD F00A          	movff	postdec2,??_fputc+3
 11051  005580  5007               	movf	??_fputc^0,w,c
 11052  005582  2409               	addwf	(??_fputc+2)^0,w,c
 11053  005584  6ED9               	movwf	fsr2l,c
 11054  005586  5008               	movf	(??_fputc+1)^0,w,c
 11055  005588  200A               	addwfc	(??_fputc+3)^0,w,c
 11056  00558A  6EDA               	movwf	fsr2h,c
 11057  00558C  C003  FFDF         	movff	fputc@c,indf2
 11058  005590  EE20 F002          	lfsr	2,2
 11059  005594  5005               	movf	fputc@fp^0,w,c
 11060  005596  26D9               	addwf	fsr2l,f,c
 11061  005598  5006               	movf	(fputc@fp+1)^0,w,c
 11062  00559A  22DA               	addwfc	fsr2h,f,c
 11063  00559C  2ADE               	incf	postinc2,f,c
 11064  00559E  0E00               	movlw	0
 11065  0055A0  22DD               	addwfc	postdec2,f,c
 11066  0055A2                     l1547:
 11067  0055A2  0012               	return		;funcret
 11068  0055A4                     __end_of_fputc:
 11069                           	callstack 0
 11070                           
 11071 ;; *************** function _putch *****************
 11072 ;; Defined at:
 11073 ;;		line 154 in file "mcc_generated_files/eusart1.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;  txData          1    wreg     unsigned char 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;  txData          1    1[COMRAM] unsigned char 
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      void 
 11080 ;; Registers used:
 11081 ;;		wreg, status,2, cstack
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11087 ;;      Params:         0       0       0       0       0       0       0       0       0
 11088 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11089 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11090 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11091 ;;Total ram usage:        1 bytes
 11092 ;; Hardware stack levels used: 1
 11093 ;; Hardware stack levels required when called: 1
 11094 ;; This function calls:
 11095 ;;		_EUSART1_Write
 11096 ;; This function is called by:
 11097 ;;		_fputc
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text36
 11102  00608C                     __ptext36:
 11103                           	callstack 0
 11104  00608C                     _putch:
 11105                           	callstack 21
 11106                           
 11107                           ;incstack = 0
 11108                           ;putch@txData stored from wreg
 11109  00608C  6E02               	movwf	putch@txData^0,c
 11110  00608E                     
 11111                           ;mcc_generated_files/eusart1.c: 154: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 155: {;mcc_generated_files/eusart1.c: 156:     EUSART1_Write(txData);
 11112  00608E  5002               	movf	putch@txData^0,w,c
 11113  006090  EC24  F030         	call	_EUSART1_Write
 11114  006094  0012               	return		;funcret
 11115  006096                     __end_of_putch:
 11116                           	callstack 0
 11117                           
 11118 ;; *************** function _atoi *****************
 11119 ;; Defined at:
 11120 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11123 ;;		 -> STR_9(12), 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  n               2   20[COMRAM] int 
 11126 ;;  neg             2   13[COMRAM] int 
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  2    7[COMRAM] int 
 11129 ;; Registers used:
 11130 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11136 ;;      Params:         2       0       0       0       0       0       0       0       0
 11137 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11138 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11139 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11140 ;;Total ram usage:       15 bytes
 11141 ;; Hardware stack levels used: 1
 11142 ;; Hardware stack levels required when called: 1
 11143 ;; This function calls:
 11144 ;;		___wmul
 11145 ;;		_isdigit
 11146 ;;		_isspace
 11147 ;; This function is called by:
 11148 ;;		_vfpfcnvrt
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text37
 11153  0045D4                     __ptext37:
 11154                           	callstack 0
 11155  0045D4                     _atoi:
 11156                           	callstack 25
 11157  0045D4  0E00               	movlw	0
 11158  0045D6  6E16               	movwf	(atoi@n+1)^0,c
 11159  0045D8  0E00               	movlw	0
 11160  0045DA  6E15               	movwf	atoi@n^0,c
 11161  0045DC  0E00               	movlw	0
 11162  0045DE  6E0F               	movwf	(atoi@neg+1)^0,c
 11163  0045E0  0E00               	movlw	0
 11164  0045E2  6E0E               	movwf	atoi@neg^0,c
 11165  0045E4  EFF6  F022         	goto	l5670
 11166  0045E8                     l5668:
 11167  0045E8  4A08               	infsnz	atoi@s^0,f,c
 11168  0045EA  2A09               	incf	(atoi@s+1)^0,f,c
 11169  0045EC                     l5670:
 11170  0045EC  0E01               	movlw	1
 11171  0045EE  6E14               	movwf	_atoi$1741^0,c
 11172  0045F0  C008  FFF6         	movff	atoi@s,tblptrl
 11173  0045F4  C009  FFF7         	movff	atoi@s+1,tblptrh
 11174  0045F8                     	if	0	;tblptru may be non-zero
 11175  0045F8                     	endif
 11176  0045F8                     	if	0	;tblptru may be non-zero
 11177  0045F8                     	endif
 11178  0045F8  0008               	tblrd		*
 11179  0045FA  50F5               	movf	tablat,w,c
 11180  0045FC  0A20               	xorlw	32
 11181  0045FE  B4D8               	btfsc	status,2,c
 11182  004600  EF04  F023         	goto	u6971
 11183  004604  EF06  F023         	goto	u6970
 11184  004608                     u6971:
 11185  004608  EF23  F023         	goto	l5678
 11186  00460C                     u6970:
 11187  00460C  0EF7               	movlw	247
 11188  00460E  6E0A               	movwf	??_atoi^0,c
 11189  004610  0EFF               	movlw	255
 11190  004612  6E0B               	movwf	(??_atoi+1)^0,c
 11191  004614  C008  FFF6         	movff	atoi@s,tblptrl
 11192  004618  C009  FFF7         	movff	atoi@s+1,tblptrh
 11193  00461C                     	if	0	;tblptru may be non-zero
 11194  00461C                     	endif
 11195  00461C                     	if	0	;tblptru may be non-zero
 11196  00461C                     	endif
 11197  00461C  0008               	tblrd		*
 11198  00461E  50F5               	movf	tablat,w,c
 11199  004620  6E0C               	movwf	(??_atoi+2)^0,c
 11200  004622  6A0D               	clrf	(??_atoi+3)^0,c
 11201  004624  500A               	movf	??_atoi^0,w,c
 11202  004626  260C               	addwf	(??_atoi+2)^0,f,c
 11203  004628  500B               	movf	(??_atoi+1)^0,w,c
 11204  00462A  220D               	addwfc	(??_atoi+3)^0,f,c
 11205  00462C  500D               	movf	(??_atoi+3)^0,w,c
 11206  00462E  E109               	bnz	u6980
 11207  004630  0E05               	movlw	5
 11208  004632  5C0C               	subwf	(??_atoi+2)^0,w,c
 11209  004634  A0D8               	btfss	status,0,c
 11210  004636  EF1F  F023         	goto	u6981
 11211  00463A  EF21  F023         	goto	u6980
 11212  00463E                     u6981:
 11213  00463E  EF23  F023         	goto	l5678
 11214  004642                     u6980:
 11215  004642  0E00               	movlw	0
 11216  004644  6E14               	movwf	_atoi$1741^0,c
 11217  004646                     l5678:
 11218  004646  C014  F010         	movff	_atoi$1741,_atoi$1740
 11219  00464A  6A11               	clrf	(_atoi$1740+1)^0,c
 11220  00464C  5010               	movf	_atoi$1740^0,w,c
 11221  00464E  1011               	iorwf	(_atoi$1740+1)^0,w,c
 11222  004650  A4D8               	btfss	status,2,c
 11223  004652  EF2D  F023         	goto	u6991
 11224  004656  EF2F  F023         	goto	u6990
 11225  00465A                     u6991:
 11226  00465A  EFF4  F022         	goto	l5668
 11227  00465E                     u6990:
 11228  00465E  EF39  F023         	goto	l5688
 11229  004662                     l5684:
 11230  004662  0E00               	movlw	0
 11231  004664  6E0F               	movwf	(atoi@neg+1)^0,c
 11232  004666  0E01               	movlw	1
 11233  004668  6E0E               	movwf	atoi@neg^0,c
 11234  00466A                     l5686:
 11235  00466A  4A08               	infsnz	atoi@s^0,f,c
 11236  00466C  2A09               	incf	(atoi@s+1)^0,f,c
 11237  00466E  EF6E  F023         	goto	l5694
 11238  004672                     l5688:
 11239  004672  C008  FFF6         	movff	atoi@s,tblptrl
 11240  004676  C009  FFF7         	movff	atoi@s+1,tblptrh
 11241  00467A                     	if	0	;tblptru may be non-zero
 11242  00467A                     	endif
 11243  00467A                     	if	0	;tblptru may be non-zero
 11244  00467A                     	endif
 11245  00467A  0008               	tblrd		*
 11246  00467C  50F5               	movf	tablat,w,c
 11247  00467E  6E0A               	movwf	??_atoi^0,c
 11248  004680  6A0B               	clrf	(??_atoi+1)^0,c
 11249                           
 11250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11251                           ; Switch size 1, requested type "simple"
 11252                           ; Number of cases is 1, Range of values is 0 to 0
 11253                           ; switch strategies available:
 11254                           ; Name         Instructions Cycles
 11255                           ; simple_byte            4     3 (average)
 11256                           ;	Chosen strategy is simple_byte
 11257  004682  500B               	movf	(??_atoi+1)^0,w,c
 11258  004684  0A00               	xorlw	0	; case 0
 11259  004686  B4D8               	btfsc	status,2,c
 11260  004688  EF48  F023         	goto	l6626
 11261  00468C  EF6E  F023         	goto	l5694
 11262  004690                     l6626:
 11263                           
 11264                           ; Switch size 1, requested type "simple"
 11265                           ; Number of cases is 2, Range of values is 43 to 45
 11266                           ; switch strategies available:
 11267                           ; Name         Instructions Cycles
 11268                           ; simple_byte            7     4 (average)
 11269                           ;	Chosen strategy is simple_byte
 11270  004690  500A               	movf	??_atoi^0,w,c
 11271  004692  0A2B               	xorlw	43	; case 43
 11272  004694  B4D8               	btfsc	status,2,c
 11273  004696  EF35  F023         	goto	l5686
 11274  00469A  0A06               	xorlw	6	; case 45
 11275  00469C  B4D8               	btfsc	status,2,c
 11276  00469E  EF31  F023         	goto	l5684
 11277  0046A2  EF6E  F023         	goto	l5694
 11278  0046A6                     l5690:
 11279  0046A6  C015  F001         	movff	atoi@n,___wmul@multiplier
 11280  0046AA  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11281  0046AE  0E00               	movlw	0
 11282  0046B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11283  0046B2  0E0A               	movlw	10
 11284  0046B4  6E03               	movwf	___wmul@multiplicand^0,c
 11285  0046B6  EC9C  F02F         	call	___wmul	;wreg free
 11286  0046BA  C008  FFF6         	movff	atoi@s,tblptrl
 11287  0046BE  C009  FFF7         	movff	atoi@s+1,tblptrh
 11288  0046C2                     	if	0	;tblptru may be non-zero
 11289  0046C2                     	endif
 11290  0046C2                     	if	0	;tblptru may be non-zero
 11291  0046C2                     	endif
 11292  0046C2  0008               	tblrd		*
 11293  0046C4  50F5               	movf	tablat,w,c
 11294  0046C6  5E01               	subwf	?___wmul^0,f,c
 11295  0046C8  0E00               	movlw	0
 11296  0046CA  5A02               	subwfb	(?___wmul+1)^0,f,c
 11297  0046CC  0E30               	movlw	48
 11298  0046CE  2401               	addwf	?___wmul^0,w,c
 11299  0046D0  6E15               	movwf	atoi@n^0,c
 11300  0046D2  0E00               	movlw	0
 11301  0046D4  2002               	addwfc	(?___wmul+1)^0,w,c
 11302  0046D6  6E16               	movwf	(atoi@n+1)^0,c
 11303  0046D8  EF35  F023         	goto	l5686
 11304  0046DC                     l5694:
 11305  0046DC  0ED0               	movlw	208
 11306  0046DE  6E0A               	movwf	??_atoi^0,c
 11307  0046E0  0EFF               	movlw	255
 11308  0046E2  6E0B               	movwf	(??_atoi+1)^0,c
 11309  0046E4  C008  FFF6         	movff	atoi@s,tblptrl
 11310  0046E8  C009  FFF7         	movff	atoi@s+1,tblptrh
 11311  0046EC                     	if	0	;tblptru may be non-zero
 11312  0046EC                     	endif
 11313  0046EC                     	if	0	;tblptru may be non-zero
 11314  0046EC                     	endif
 11315  0046EC  0008               	tblrd		*
 11316  0046EE  50F5               	movf	tablat,w,c
 11317  0046F0  6E0C               	movwf	(??_atoi+2)^0,c
 11318  0046F2  6A0D               	clrf	(??_atoi+3)^0,c
 11319  0046F4  500A               	movf	??_atoi^0,w,c
 11320  0046F6  260C               	addwf	(??_atoi+2)^0,f,c
 11321  0046F8  500B               	movf	(??_atoi+1)^0,w,c
 11322  0046FA  220D               	addwfc	(??_atoi+3)^0,f,c
 11323  0046FC  500D               	movf	(??_atoi+3)^0,w,c
 11324  0046FE  E10A               	bnz	u7000
 11325  004700  0E0A               	movlw	10
 11326  004702  5C0C               	subwf	(??_atoi+2)^0,w,c
 11327  004704  A0D8               	btfss	status,0,c
 11328  004706  EF87  F023         	goto	u7001
 11329  00470A  EF8A  F023         	goto	u7000
 11330  00470E                     u7001:
 11331  00470E  0E01               	movlw	1
 11332  004710  EF8B  F023         	goto	u7010
 11333  004714                     u7000:
 11334  004714  0E00               	movlw	0
 11335  004716                     u7010:
 11336  004716  6E12               	movwf	_atoi$1742^0,c
 11337  004718  6A13               	clrf	(_atoi$1742+1)^0,c
 11338  00471A  5012               	movf	_atoi$1742^0,w,c
 11339  00471C  1013               	iorwf	(_atoi$1742+1)^0,w,c
 11340  00471E  A4D8               	btfss	status,2,c
 11341  004720  EF94  F023         	goto	u7021
 11342  004724  EF96  F023         	goto	u7020
 11343  004728                     u7021:
 11344  004728  EF53  F023         	goto	l5690
 11345  00472C                     u7020:
 11346  00472C  500E               	movf	atoi@neg^0,w,c
 11347  00472E  100F               	iorwf	(atoi@neg+1)^0,w,c
 11348  004730  A4D8               	btfss	status,2,c
 11349  004732  EF9D  F023         	goto	u7031
 11350  004736  EF9F  F023         	goto	u7030
 11351  00473A                     u7031:
 11352  00473A  EFAD  F023         	goto	l1491
 11353  00473E                     u7030:
 11354  00473E  C015  F00A         	movff	atoi@n,??_atoi
 11355  004742  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11356  004746  1E0A               	comf	??_atoi^0,f,c
 11357  004748  1E0B               	comf	(??_atoi+1)^0,f,c
 11358  00474A  4A0A               	infsnz	??_atoi^0,f,c
 11359  00474C  2A0B               	incf	(??_atoi+1)^0,f,c
 11360  00474E  C00A  F008         	movff	??_atoi,?_atoi
 11361  004752  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11362  004756  EFB1  F023         	goto	l1494
 11363  00475A                     l1491:
 11364  00475A  C015  F008         	movff	atoi@n,?_atoi
 11365  00475E  C016  F009         	movff	atoi@n+1,?_atoi+1
 11366  004762                     l1494:
 11367  004762  0012               	return		;funcret
 11368  004764                     __end_of_atoi:
 11369                           	callstack 0
 11370                           
 11371 ;; *************** function _isspace *****************
 11372 ;; Defined at:
 11373 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  c               2    0[COMRAM] int 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  2    0[COMRAM] int 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11387 ;;      Params:         2       0       0       0       0       0       0       0       0
 11388 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11389 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11390 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11391 ;;Total ram usage:        7 bytes
 11392 ;; Hardware stack levels used: 1
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_atoi
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text38
 11401  005AD6                     __ptext38:
 11402                           	callstack 0
 11403  005AD6                     _isspace:
 11404                           	callstack 25
 11405  005AD6  0E01               	movlw	1
 11406  005AD8  6E07               	movwf	_isspace$1781^0,c
 11407  005ADA  0E20               	movlw	32
 11408  005ADC  1801               	xorwf	isspace@c^0,w,c
 11409  005ADE  1002               	iorwf	(isspace@c+1)^0,w,c
 11410  005AE0  B4D8               	btfsc	status,2,c
 11411  005AE2  EF75  F02D         	goto	u5781
 11412  005AE6  EF77  F02D         	goto	u5780
 11413  005AEA                     u5781:
 11414  005AEA  EF90  F02D         	goto	l5072
 11415  005AEE                     u5780:
 11416  005AEE  0EF7               	movlw	247
 11417  005AF0  6E03               	movwf	??_isspace^0,c
 11418  005AF2  0EFF               	movlw	255
 11419  005AF4  6E04               	movwf	(??_isspace+1)^0,c
 11420  005AF6  C001  F005         	movff	isspace@c,??_isspace+2
 11421  005AFA  C002  F006         	movff	isspace@c+1,??_isspace+3
 11422  005AFE  5003               	movf	??_isspace^0,w,c
 11423  005B00  2605               	addwf	(??_isspace+2)^0,f,c
 11424  005B02  5004               	movf	(??_isspace+1)^0,w,c
 11425  005B04  2206               	addwfc	(??_isspace+3)^0,f,c
 11426  005B06  5006               	movf	(??_isspace+3)^0,w,c
 11427  005B08  E109               	bnz	u5790
 11428  005B0A  0E05               	movlw	5
 11429  005B0C  5C05               	subwf	(??_isspace+2)^0,w,c
 11430  005B0E  A0D8               	btfss	status,0,c
 11431  005B10  EF8C  F02D         	goto	u5791
 11432  005B14  EF8E  F02D         	goto	u5790
 11433  005B18                     u5791:
 11434  005B18  EF90  F02D         	goto	l5072
 11435  005B1C                     u5790:
 11436  005B1C  0E00               	movlw	0
 11437  005B1E  6E07               	movwf	_isspace$1781^0,c
 11438  005B20                     l5072:
 11439  005B20  C007  F001         	movff	_isspace$1781,?_isspace
 11440  005B24  6A02               	clrf	(?_isspace+1)^0,c
 11441  005B26  0012               	return		;funcret
 11442  005B28                     __end_of_isspace:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function _isdigit *****************
 11446 ;; Defined at:
 11447 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  c               2    0[COMRAM] int 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;		None
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  2    0[COMRAM] int 
 11454 ;; Registers used:
 11455 ;;		wreg, status,2, status,0
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11461 ;;      Params:         2       0       0       0       0       0       0       0       0
 11462 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11463 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11464 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11465 ;;Total ram usage:        6 bytes
 11466 ;; Hardware stack levels used: 1
 11467 ;; This function calls:
 11468 ;;		Nothing
 11469 ;; This function is called by:
 11470 ;;		_vfpfcnvrt
 11471 ;;		_atoi
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text39
 11476  005E72                     __ptext39:
 11477                           	callstack 0
 11478  005E72                     _isdigit:
 11479                           	callstack 26
 11480  005E72  0ED0               	movlw	208
 11481  005E74  6E03               	movwf	??_isdigit^0,c
 11482  005E76  0EFF               	movlw	255
 11483  005E78  6E04               	movwf	(??_isdigit+1)^0,c
 11484  005E7A  C001  F005         	movff	isdigit@c,??_isdigit+2
 11485  005E7E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11486  005E82  5003               	movf	??_isdigit^0,w,c
 11487  005E84  2605               	addwf	(??_isdigit+2)^0,f,c
 11488  005E86  5004               	movf	(??_isdigit+1)^0,w,c
 11489  005E88  2206               	addwfc	(??_isdigit+3)^0,f,c
 11490  005E8A  5006               	movf	(??_isdigit+3)^0,w,c
 11491  005E8C  E10A               	bnz	u5760
 11492  005E8E  0E0A               	movlw	10
 11493  005E90  5C05               	subwf	(??_isdigit+2)^0,w,c
 11494  005E92  A0D8               	btfss	status,0,c
 11495  005E94  EF4E  F02F         	goto	u5761
 11496  005E98  EF51  F02F         	goto	u5760
 11497  005E9C                     u5761:
 11498  005E9C  0E01               	movlw	1
 11499  005E9E  EF52  F02F         	goto	u5770
 11500  005EA2                     u5760:
 11501  005EA2  0E00               	movlw	0
 11502  005EA4                     u5770:
 11503  005EA4  6E01               	movwf	?_isdigit^0,c
 11504  005EA6  6A02               	clrf	(?_isdigit+1)^0,c
 11505  005EA8  0012               	return		;funcret
 11506  005EAA                     __end_of_isdigit:
 11507                           	callstack 0
 11508                           
 11509 ;; *************** function ___wmul *****************
 11510 ;; Defined at:
 11511 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  multiplier      2    0[COMRAM] unsigned int 
 11514 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;  product         2    4[COMRAM] unsigned int 
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  2    0[COMRAM] unsigned int 
 11519 ;; Registers used:
 11520 ;;		wreg, status,2, status,0, prodl, prodh
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11526 ;;      Params:         4       0       0       0       0       0       0       0       0
 11527 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11528 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11529 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11530 ;;Total ram usage:        6 bytes
 11531 ;; Hardware stack levels used: 1
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_atoi
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text40
 11540  005F38                     __ptext40:
 11541                           	callstack 0
 11542  005F38                     ___wmul:
 11543                           	callstack 25
 11544  005F38  5001               	movf	___wmul@multiplier^0,w,c
 11545  005F3A  0203               	mulwf	___wmul@multiplicand^0,c
 11546  005F3C  CFF3 F005          	movff	prodl,___wmul@product
 11547  005F40  CFF4 F006          	movff	prodh,___wmul@product+1
 11548  005F44  5001               	movf	___wmul@multiplier^0,w,c
 11549  005F46  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11550  005F48  50F3               	movf	243,w,c
 11551  005F4A  2606               	addwf	(___wmul@product+1)^0,f,c
 11552  005F4C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11553  005F4E  0203               	mulwf	___wmul@multiplicand^0,c
 11554  005F50  50F3               	movf	243,w,c
 11555  005F52  2606               	addwf	(___wmul@product+1)^0,f,c
 11556  005F54  C005  F001         	movff	___wmul@product,?___wmul
 11557  005F58  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11558  005F5C  0012               	return		;funcret
 11559  005F5E                     __end_of___wmul:
 11560                           	callstack 0
 11561                           
 11562 ;; *************** function _nrf2401_recibe *****************
 11563 ;; Defined at:
 11564 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;		None
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;  valor_          1    2[COMRAM] unsigned char 
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      unsigned char 
 11571 ;; Registers used:
 11572 ;;		wreg, status,2, status,0, cstack
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0
 11579 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11581 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11582 ;;Total ram usage:        1 bytes
 11583 ;; Hardware stack levels used: 1
 11584 ;; Hardware stack levels required when called: 1
 11585 ;; This function calls:
 11586 ;;		_spi_s_read
 11587 ;;		_spi_s_write
 11588 ;; This function is called by:
 11589 ;;		_main
 11590 ;;		_nrf2401_recibe_Text
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text41
 11595  005FD4                     __ptext41:
 11596                           	callstack 0
 11597  005FD4                     _nrf2401_recibe:
 11598                           	callstack 29
 11599  005FD4                     
 11600                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
 11601  005FD4  948B               	bcf	139,2,c	;volatile
 11602  005FD6                     
 11603                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
 11604  005FD6  0E61               	movlw	97
 11605  005FD8  ECBB  F02D         	call	_spi_s_write
 11606                           
 11607                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
 11608  005FDC  ECDF  F02D         	call	_spi_s_read	;wreg free
 11609  005FE0  6E03               	movwf	nrf2401_recibe@valor_^0,c
 11610  005FE2                     
 11611                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
 11612  005FE2  848B               	bsf	139,2,c	;volatile
 11613  005FE4                     
 11614                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
 11615  005FE4  0E14               	movlw	20
 11616  005FE6                     u8117:
 11617  005FE6  2EE8               	decfsz	wreg,f,c
 11618  005FE8  D7FE               	bra	u8117
 11619  005FEA                     
 11620                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
 11621  005FEA  5003               	movf	nrf2401_recibe@valor_^0,w,c
 11622  005FEC  0012               	return		;funcret
 11623  005FEE                     __end_of_nrf2401_recibe:
 11624                           	callstack 0
 11625                           
 11626 ;; *************** function _nrf2401_haydatos *****************
 11627 ;; Defined at:
 11628 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;		None
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;		None
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  1    wreg      unsigned char 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2, status,0, cstack
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11642 ;;      Params:         0       0       0       0       0       0       0       0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11645 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11646 ;;Total ram usage:        0 bytes
 11647 ;; Hardware stack levels used: 1
 11648 ;; Hardware stack levels required when called: 3
 11649 ;; This function calls:
 11650 ;;		_get_Status
 11651 ;; This function is called by:
 11652 ;;		_main
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text42
 11657  005F7E                     __ptext42:
 11658                           	callstack 0
 11659  005F7E                     _nrf2401_haydatos:
 11660                           	callstack 27
 11661  005F7E                     
 11662                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
 11663  005F7E  EC5A  F030         	call	_get_Status	;wreg free
 11664  005F82  0A40               	xorlw	64
 11665  005F84  A4D8               	btfss	status,2,c
 11666  005F86  EFC7  F02F         	goto	u7891
 11667  005F8A  EFC9  F02F         	goto	u7890
 11668  005F8E                     u7891:
 11669  005F8E  EFCC  F02F         	goto	l6406
 11670  005F92                     u7890:
 11671  005F92  0E01               	movlw	1
 11672  005F94  EFCD  F02F         	goto	l313
 11673  005F98                     l6406:
 11674  005F98  0E00               	movlw	0
 11675  005F9A                     l313:
 11676  005F9A  0012               	return		;funcret
 11677  005F9C                     __end_of_nrf2401_haydatos:
 11678                           	callstack 0
 11679                           
 11680 ;; *************** function _get_Status *****************
 11681 ;; Defined at:
 11682 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;		None
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;		None
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  1    wreg      unsigned char 
 11689 ;; Registers used:
 11690 ;;		wreg, status,2, status,0, cstack
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11696 ;;      Params:         0       0       0       0       0       0       0       0       0
 11697 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11699 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11700 ;;Total ram usage:        0 bytes
 11701 ;; Hardware stack levels used: 1
 11702 ;; Hardware stack levels required when called: 2
 11703 ;; This function calls:
 11704 ;;		_nrf2401_read
 11705 ;; This function is called by:
 11706 ;;		_nrf2401_haydatos
 11707 ;;		_nrf2401_recibe_Text
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text43
 11712  0060B4                     __ptext43:
 11713                           	callstack 0
 11714  0060B4                     _get_Status:
 11715                           	callstack 27
 11716  0060B4                     
 11717                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
 11718  0060B4  0E07               	movlw	7
 11719  0060B6  ECCE  F02F         	call	_nrf2401_read
 11720  0060BA  0012               	return		;funcret
 11721  0060BC                     __end_of_get_Status:
 11722                           	callstack 0
 11723                           
 11724 ;; *************** function _nrf2401_read *****************
 11725 ;; Defined at:
 11726 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;  reg             1    wreg     unsigned char 
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;  reg             1    2[COMRAM] unsigned char 
 11731 ;;  dato_           1    3[COMRAM] unsigned char 
 11732 ;; Return value:  Size  Location     Type
 11733 ;;                  1    wreg      unsigned char 
 11734 ;; Registers used:
 11735 ;;		wreg, status,2, status,0, cstack
 11736 ;; Tracked objects:
 11737 ;;		On entry : 0/0
 11738 ;;		On exit  : 0/0
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11741 ;;      Params:         0       0       0       0       0       0       0       0       0
 11742 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11743 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11744 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11745 ;;Total ram usage:        2 bytes
 11746 ;; Hardware stack levels used: 1
 11747 ;; Hardware stack levels required when called: 1
 11748 ;; This function calls:
 11749 ;;		_spi_s_read
 11750 ;;		_spi_s_write
 11751 ;; This function is called by:
 11752 ;;		_get_Status
 11753 ;;		_get_fifo_status
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           
 11757                           	psect	text44
 11758  005F9C                     __ptext44:
 11759                           	callstack 0
 11760  005F9C                     _nrf2401_read:
 11761                           	callstack 27
 11762                           
 11763                           ;incstack = 0
 11764                           ;nrf2401_read@reg stored from wreg
 11765  005F9C  6E03               	movwf	nrf2401_read@reg^0,c
 11766  005F9E                     
 11767                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
 11768  005F9E  948B               	bcf	139,2,c	;volatile
 11769  005FA0                     
 11770                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
 11771  005FA0  5003               	movf	nrf2401_read@reg^0,w,c
 11772  005FA2  ECBB  F02D         	call	_spi_s_write
 11773  005FA6                     
 11774                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
 11775  005FA6  ECDF  F02D         	call	_spi_s_read	;wreg free
 11776  005FAA  6E04               	movwf	nrf2401_read@dato_^0,c
 11777  005FAC                     
 11778                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
 11779  005FAC  848B               	bsf	139,2,c	;volatile
 11780  005FAE                     
 11781                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
 11782  005FAE  0E14               	movlw	20
 11783  005FB0                     u8127:
 11784  005FB0  2EE8               	decfsz	wreg,f,c
 11785  005FB2  D7FE               	bra	u8127
 11786                           
 11787                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
 11788  005FB4  5004               	movf	nrf2401_read@dato_^0,w,c
 11789  005FB6  0012               	return		;funcret
 11790  005FB8                     __end_of_nrf2401_read:
 11791                           	callstack 0
 11792                           
 11793 ;; *************** function _spi_s_read *****************
 11794 ;; Defined at:
 11795 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;		None
 11798 ;; Auto vars:     Size  Location     Type
 11799 ;;  cont_s          1    1[COMRAM] unsigned char 
 11800 ;;  dato_           1    0[COMRAM] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      unsigned char 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0
 11811 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11813 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11814 ;;Total ram usage:        2 bytes
 11815 ;; Hardware stack levels used: 1
 11816 ;; This function calls:
 11817 ;;		Nothing
 11818 ;; This function is called by:
 11819 ;;		_nrf2401_read
 11820 ;;		_nrf2401_recibe
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text45
 11825  005BBE                     __ptext45:
 11826                           	callstack 0
 11827  005BBE                     _spi_s_read:
 11828                           	callstack 29
 11829  005BBE                     
 11830                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
 11831  005BBE  0E00               	movlw	0
 11832  005BC0  6E02               	movwf	spi_s_read@cont_s^0,c
 11833                           
 11834                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
 11835  005BC2  0E00               	movlw	0
 11836  005BC4  6E01               	movwf	spi_s_read@dato_^0,c
 11837                           
 11838                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
 11839  005BC6  0E00               	movlw	0
 11840  005BC8  6E02               	movwf	spi_s_read@cont_s^0,c
 11841  005BCA                     l5734:
 11842                           
 11843                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
 11844  005BCA  90D8               	bcf	status,0,c
 11845  005BCC  3601               	rlcf	spi_s_read@dato_^0,f,c
 11846  005BCE                     
 11847                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
 11848  005BCE  848A               	bsf	138,2,c	;volatile
 11849  005BD0                     
 11850                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
 11851  005BD0  0E04               	movlw	4
 11852  005BD2                     u8137:
 11853  005BD2  2EE8               	decfsz	wreg,f,c
 11854  005BD4  D7FE               	bra	u8137
 11855  005BD6                     
 11856                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
 11857  005BD6  A681               	btfss	129,3,c	;volatile
 11858  005BD8  EFF0  F02D         	goto	u7111
 11859  005BDC  EFF2  F02D         	goto	u7110
 11860  005BE0                     u7111:
 11861  005BE0  EFF3  F02D         	goto	l5744
 11862  005BE4                     u7110:
 11863  005BE4                     
 11864                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
 11865  005BE4  8001               	bsf	spi_s_read@dato_^0,0,c
 11866  005BE6                     l5744:
 11867                           
 11868                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
 11869  005BE6  948A               	bcf	138,2,c	;volatile
 11870  005BE8                     
 11871                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
 11872  005BE8  0E04               	movlw	4
 11873  005BEA                     u8147:
 11874  005BEA  2EE8               	decfsz	wreg,f,c
 11875  005BEC  D7FE               	bra	u8147
 11876  005BEE                     
 11877                           ;./Librerias/nRF24L01_2.h: 57:     }
 11878  005BEE  2A02               	incf	spi_s_read@cont_s^0,f,c
 11879  005BF0  0E07               	movlw	7
 11880  005BF2  6402               	cpfsgt	spi_s_read@cont_s^0,c
 11881  005BF4  EFFE  F02D         	goto	u7121
 11882  005BF8  EF00  F02E         	goto	u7120
 11883  005BFC                     u7121:
 11884  005BFC  EFE5  F02D         	goto	l5734
 11885  005C00                     u7120:
 11886  005C00                     
 11887                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
 11888  005C00  5001               	movf	spi_s_read@dato_^0,w,c
 11889  005C02  0012               	return		;funcret
 11890  005C04                     __end_of_spi_s_read:
 11891                           	callstack 0
 11892                           
 11893 ;; *************** function _nrF2401_init_RX *****************
 11894 ;; Defined at:
 11895 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;  canal           1    wreg     unsigned char 
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;  canal           1    8[COMRAM] unsigned char 
 11900 ;; Return value:  Size  Location     Type
 11901 ;;                  1    wreg      void 
 11902 ;; Registers used:
 11903 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11904 ;; Tracked objects:
 11905 ;;		On entry : 0/0
 11906 ;;		On exit  : 0/0
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11909 ;;      Params:         0       0       0       0       0       0       0       0       0
 11910 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11912 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11913 ;;Total ram usage:        1 bytes
 11914 ;; Hardware stack levels used: 1
 11915 ;; Hardware stack levels required when called: 3
 11916 ;; This function calls:
 11917 ;;		_flush_TX_RX
 11918 ;;		_nrf2401_direccion_TX_RX
 11919 ;;		_nrf2401_write
 11920 ;; This function is called by:
 11921 ;;		_main
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           	psect	text46
 11926  005888                     __ptext46:
 11927                           	callstack 0
 11928  005888                     _nrF2401_init_RX:
 11929                           	callstack 27
 11930                           
 11931                           ;incstack = 0
 11932                           ;nrF2401_init_RX@canal stored from wreg
 11933  005888  6E09               	movwf	nrF2401_init_RX@canal^0,c
 11934  00588A                     
 11935                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
 11936  00588A  928A               	bcf	138,1,c	;volatile
 11937  00588C                     
 11938                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
 11939  00588C  0E0C               	movlw	12
 11940  00588E  6E03               	movwf	nrf2401_write@valor^0,c
 11941  005890  0E00               	movlw	0
 11942  005892  ECDC  F02F         	call	_nrf2401_write
 11943                           
 11944                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
 11945  005896  0E00               	movlw	0
 11946  005898  6E03               	movwf	nrf2401_write@valor^0,c
 11947  00589A  0E04               	movlw	4
 11948  00589C  ECDC  F02F         	call	_nrf2401_write
 11949                           
 11950                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
 11951  0058A0  0E03               	movlw	3
 11952  0058A2  6E03               	movwf	nrf2401_write@valor^0,c
 11953  0058A4  0E03               	movlw	3
 11954  0058A6  ECDC  F02F         	call	_nrf2401_write
 11955                           
 11956                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x08 + 0x06);
 11957  0058AA  0E0E               	movlw	14
 11958  0058AC  6E03               	movwf	nrf2401_write@valor^0,c
 11959  0058AE  0E06               	movlw	6
 11960  0058B0  ECDC  F02F         	call	_nrf2401_write
 11961                           
 11962                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
 11963  0058B4  C009  F003         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
 11964  0058B8  0E05               	movlw	5
 11965  0058BA  ECDC  F02F         	call	_nrf2401_write
 11966                           
 11967                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
 11968  0058BE  0E00               	movlw	0
 11969  0058C0  6E03               	movwf	nrf2401_write@valor^0,c
 11970  0058C2  0E01               	movlw	1
 11971  0058C4  ECDC  F02F         	call	_nrf2401_write
 11972                           
 11973                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
 11974  0058C8  0E01               	movlw	1
 11975  0058CA  6E03               	movwf	nrf2401_write@valor^0,c
 11976  0058CC  0E11               	movlw	17
 11977  0058CE  ECDC  F02F         	call	_nrf2401_write
 11978                           
 11979                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
 11980  0058D2  0E0F               	movlw	15
 11981  0058D4  6E03               	movwf	nrf2401_write@valor^0,c
 11982  0058D6  0E00               	movlw	0
 11983  0058D8  ECDC  F02F         	call	_nrf2401_write
 11984  0058DC                     
 11985                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
 11986  0058DC  0E06               	movlw	low _direccion_tx
 11987  0058DE  6E03               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
 11988  0058E0  0E08               	movlw	high _direccion_tx
 11989  0058E2  6E04               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
 11990  0058E4  0E10               	movlw	16
 11991  0058E6  6E05               	movwf	nrf2401_direccion_TX_RX@registro^0,c
 11992  0058E8  EC02  F02E         	call	_nrf2401_direccion_TX_RX	;wreg free
 11993  0058EC                     
 11994                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
 11995  0058EC  0E06               	movlw	low _direccion_tx
 11996  0058EE  6E03               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
 11997  0058F0  0E08               	movlw	high _direccion_tx
 11998  0058F2  6E04               	movwf	(nrf2401_direccion_TX_RX@direccion_+1)^0,c
 11999  0058F4  0E0A               	movlw	10
 12000  0058F6  6E05               	movwf	nrf2401_direccion_TX_RX@registro^0,c
 12001  0058F8  EC02  F02E         	call	_nrf2401_direccion_TX_RX	;wreg free
 12002                           
 12003                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
 12004  0058FC  ECF7  F02F         	call	_flush_TX_RX	;wreg free
 12005  005900                     
 12006                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
 12007  005900  828A               	bsf	138,1,c	;volatile
 12008  005902  0012               	return		;funcret
 12009  005904                     __end_of_nrF2401_init_RX:
 12010                           	callstack 0
 12011                           
 12012 ;; *************** function _nrf2401_direccion_TX_RX *****************
 12013 ;; Defined at:
 12014 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;  direccion_      2    2[COMRAM] PTR const unsigned char 
 12017 ;;		 -> direccion_tx(5), 
 12018 ;;  registro        1    4[COMRAM] unsigned char 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  cont_s          1    7[COMRAM] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      void 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12030 ;;      Params:         3       0       0       0       0       0       0       0       0
 12031 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12032 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12033 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12034 ;;Total ram usage:        6 bytes
 12035 ;; Hardware stack levels used: 1
 12036 ;; Hardware stack levels required when called: 1
 12037 ;; This function calls:
 12038 ;;		_spi_s_write
 12039 ;; This function is called by:
 12040 ;;		_nrF2401_init_RX
 12041 ;;		_nrF2401_init_TX
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text47
 12046  005C04                     __ptext47:
 12047                           	callstack 0
 12048  005C04                     _nrf2401_direccion_TX_RX:
 12049                           	callstack 28
 12050  005C04                     
 12051                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
 12052  005C04  948B               	bcf	139,2,c	;volatile
 12053  005C06                     
 12054                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
 12055  005C06  5005               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
 12056  005C08  0920               	iorlw	32
 12057  005C0A  ECBB  F02D         	call	_spi_s_write
 12058  005C0E                     
 12059                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
 12060  005C0E  0E00               	movlw	0
 12061  005C10  6E08               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
 12062  005C12                     l6232:
 12063                           
 12064                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
 12065  005C12  5008               	movf	nrf2401_direccion_TX_RX@cont_s^0,w,c
 12066  005C14  2403               	addwf	nrf2401_direccion_TX_RX@direccion_^0,w,c
 12067  005C16  6E06               	movwf	??_nrf2401_direccion_TX_RX^0,c
 12068  005C18  0E00               	movlw	0
 12069  005C1A  2004               	addwfc	(nrf2401_direccion_TX_RX@direccion_+1)^0,w,c
 12070  005C1C  6E07               	movwf	(??_nrf2401_direccion_TX_RX+1)^0,c
 12071  005C1E  C006  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
 12072  005C22  C007  FFF7         	movff	??_nrf2401_direccion_TX_RX+1,tblptrh
 12073  005C26                     	if	0	;tblptru may be non-zero
 12074  005C26                     	endif
 12075  005C26                     	if	0	;tblptru may be non-zero
 12076  005C26                     	endif
 12077  005C26  0008               	tblrd		*
 12078  005C28  50F5               	movf	tablat,w,c
 12079  005C2A  ECBB  F02D         	call	_spi_s_write
 12080  005C2E                     
 12081                           ;./Librerias/nRF24L01_2.h: 120:     }
 12082  005C2E  2A08               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
 12083  005C30  0E04               	movlw	4
 12084  005C32  6408               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
 12085  005C34  EF1E  F02E         	goto	u7701
 12086  005C38  EF20  F02E         	goto	u7700
 12087  005C3C                     u7701:
 12088  005C3C  EF09  F02E         	goto	l6232
 12089  005C40                     u7700:
 12090  005C40                     
 12091                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
 12092  005C40  848B               	bsf	139,2,c	;volatile
 12093  005C42                     
 12094                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
 12095  005C42  0E14               	movlw	20
 12096  005C44                     u8157:
 12097  005C44  2EE8               	decfsz	wreg,f,c
 12098  005C46  D7FE               	bra	u8157
 12099  005C48  0012               	return		;funcret
 12100  005C4A                     __end_of_nrf2401_direccion_TX_RX:
 12101                           	callstack 0
 12102                           
 12103 ;; *************** function _flush_TX_RX *****************
 12104 ;; Defined at:
 12105 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg, status,2, status,0, cstack
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12119 ;;      Params:         0       0       0       0       0       0       0       0       0
 12120 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12122 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used: 1
 12125 ;; Hardware stack levels required when called: 2
 12126 ;; This function calls:
 12127 ;;		_nrf2401_comando
 12128 ;;		_nrf2401_write
 12129 ;; This function is called by:
 12130 ;;		_nrF2401_init_RX
 12131 ;;		_nrF2401_init_TX
 12132 ;; This function uses a non-reentrant model
 12133 ;;
 12134                           
 12135                           	psect	text48
 12136  005FEE                     __ptext48:
 12137                           	callstack 0
 12138  005FEE                     _flush_TX_RX:
 12139                           	callstack 27
 12140  005FEE                     
 12141                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
 12142  005FEE  0E70               	movlw	112
 12143  005FF0  6E03               	movwf	nrf2401_write@valor^0,c
 12144  005FF2  0E07               	movlw	7
 12145  005FF4  ECDC  F02F         	call	_nrf2401_write
 12146                           
 12147                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
 12148  005FF8  0EE1               	movlw	225
 12149  005FFA  EC2F  F030         	call	_nrf2401_comando
 12150                           
 12151                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
 12152  005FFE  0EE2               	movlw	226
 12153  006000  EC2F  F030         	call	_nrf2401_comando
 12154  006004  0012               	return		;funcret
 12155  006006                     __end_of_flush_TX_RX:
 12156                           	callstack 0
 12157                           
 12158 ;; *************** function _nrf2401_write *****************
 12159 ;; Defined at:
 12160 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  reg             1    wreg     unsigned char 
 12163 ;;  valor           1    2[COMRAM] unsigned char 
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;  reg             1    3[COMRAM] unsigned char 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      void 
 12168 ;; Registers used:
 12169 ;;		wreg, status,2, status,0, cstack
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12175 ;;      Params:         1       0       0       0       0       0       0       0       0
 12176 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12178 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12179 ;;Total ram usage:        2 bytes
 12180 ;; Hardware stack levels used: 1
 12181 ;; Hardware stack levels required when called: 1
 12182 ;; This function calls:
 12183 ;;		_spi_s_write
 12184 ;; This function is called by:
 12185 ;;		_flush_TX_RX
 12186 ;;		_nrF2401_init_RX
 12187 ;;		_flush_RX
 12188 ;;		_flush_TX
 12189 ;;		_nrf2401_envia
 12190 ;;		_nrF2401_init_TX
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text49
 12195  005FB8                     __ptext49:
 12196                           	callstack 0
 12197  005FB8                     _nrf2401_write:
 12198                           	callstack 28
 12199                           
 12200                           ;incstack = 0
 12201                           ;nrf2401_write@reg stored from wreg
 12202  005FB8  6E04               	movwf	nrf2401_write@reg^0,c
 12203  005FBA                     
 12204                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
 12205  005FBA  948B               	bcf	139,2,c	;volatile
 12206  005FBC                     
 12207                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
 12208  005FBC  5004               	movf	nrf2401_write@reg^0,w,c
 12209  005FBE  0920               	iorlw	32
 12210  005FC0  ECBB  F02D         	call	_spi_s_write
 12211                           
 12212                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
 12213  005FC4  5003               	movf	nrf2401_write@valor^0,w,c
 12214  005FC6  ECBB  F02D         	call	_spi_s_write
 12215  005FCA                     
 12216                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
 12217  005FCA  848B               	bsf	139,2,c	;volatile
 12218  005FCC                     
 12219                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
 12220  005FCC  0E14               	movlw	20
 12221  005FCE                     u8167:
 12222  005FCE  2EE8               	decfsz	wreg,f,c
 12223  005FD0  D7FE               	bra	u8167
 12224  005FD2  0012               	return		;funcret
 12225  005FD4                     __end_of_nrf2401_write:
 12226                           	callstack 0
 12227                           
 12228 ;; *************** function _nrf2401_comando *****************
 12229 ;; Defined at:
 12230 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;  comando         1    wreg     unsigned char 
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;  comando         1    2[COMRAM] unsigned char 
 12235 ;; Return value:  Size  Location     Type
 12236 ;;                  1    wreg      void 
 12237 ;; Registers used:
 12238 ;;		wreg, status,2, status,0, cstack
 12239 ;; Tracked objects:
 12240 ;;		On entry : 0/0
 12241 ;;		On exit  : 0/0
 12242 ;;		Unchanged: 0/0
 12243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12244 ;;      Params:         0       0       0       0       0       0       0       0       0
 12245 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12246 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12247 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12248 ;;Total ram usage:        1 bytes
 12249 ;; Hardware stack levels used: 1
 12250 ;; Hardware stack levels required when called: 1
 12251 ;; This function calls:
 12252 ;;		_spi_s_write
 12253 ;; This function is called by:
 12254 ;;		_flush_TX_RX
 12255 ;;		_flush_RX
 12256 ;;		_flush_TX
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           	psect	text50
 12261  00605E                     __ptext50:
 12262                           	callstack 0
 12263  00605E                     _nrf2401_comando:
 12264                           	callstack 27
 12265                           
 12266                           ;incstack = 0
 12267                           ;nrf2401_comando@comando stored from wreg
 12268  00605E  6E03               	movwf	nrf2401_comando@comando^0,c
 12269  006060                     
 12270                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
 12271  006060  948B               	bcf	139,2,c	;volatile
 12272  006062                     
 12273                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
 12274  006062  5003               	movf	nrf2401_comando@comando^0,w,c
 12275  006064  ECBB  F02D         	call	_spi_s_write
 12276  006068                     
 12277                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
 12278  006068  848B               	bsf	139,2,c	;volatile
 12279  00606A                     
 12280                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
 12281  00606A  0E14               	movlw	20
 12282  00606C                     u8177:
 12283  00606C  2EE8               	decfsz	wreg,f,c
 12284  00606E  D7FE               	bra	u8177
 12285  006070  0012               	return		;funcret
 12286  006072                     __end_of_nrf2401_comando:
 12287                           	callstack 0
 12288                           
 12289 ;; *************** function _spi_s_write *****************
 12290 ;; Defined at:
 12291 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;  dato_           1    wreg     unsigned char 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;  dato_           1    0[COMRAM] unsigned char 
 12296 ;;  cont_s          1    1[COMRAM] unsigned char 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      void 
 12299 ;; Registers used:
 12300 ;;		wreg, status,2, status,0
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12306 ;;      Params:         0       0       0       0       0       0       0       0       0
 12307 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12309 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12310 ;;Total ram usage:        2 bytes
 12311 ;; Hardware stack levels used: 1
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_nrf2401_write
 12316 ;;		_nrf2401_comando
 12317 ;;		_nrf2401_read
 12318 ;;		_nrf2401_direccion_TX_RX
 12319 ;;		_nrf2401_recibe
 12320 ;;		_nrf2401_envia
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text51
 12325  005B76                     __ptext51:
 12326                           	callstack 0
 12327  005B76                     _spi_s_write:
 12328                           	callstack 29
 12329                           
 12330                           ;incstack = 0
 12331                           ;spi_s_write@dato_ stored from wreg
 12332  005B76  6E01               	movwf	spi_s_write@dato_^0,c
 12333  005B78                     
 12334                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
 12335  005B78  0E00               	movlw	0
 12336  005B7A  6E02               	movwf	spi_s_write@cont_s^0,c
 12337                           
 12338                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
 12339  005B7C  0E00               	movlw	0
 12340  005B7E  6E02               	movwf	spi_s_write@cont_s^0,c
 12341  005B80                     l258:
 12342                           
 12343                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
 12344  005B80  AE01               	btfss	spi_s_write@dato_^0,7,c
 12345  005B82  EFC5  F02D         	goto	u7131
 12346  005B86  EFC7  F02D         	goto	u7130
 12347  005B8A                     u7131:
 12348  005B8A  EFCA  F02D         	goto	l260
 12349  005B8E                     u7130:
 12350  005B8E  828B               	bsf	139,1,c	;volatile
 12351  005B90  EFCB  F02D         	goto	l5764
 12352  005B94                     l260:
 12353  005B94  928B               	bcf	139,1,c	;volatile
 12354  005B96                     l5764:
 12355                           
 12356                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
 12357  005B96  90D8               	bcf	status,0,c
 12358  005B98  3601               	rlcf	spi_s_write@dato_^0,f,c
 12359  005B9A                     
 12360                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
 12361  005B9A  848A               	bsf	138,2,c	;volatile
 12362  005B9C                     
 12363                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
 12364  005B9C  0E14               	movlw	20
 12365  005B9E                     u8187:
 12366  005B9E  2EE8               	decfsz	wreg,f,c
 12367  005BA0  D7FE               	bra	u8187
 12368  005BA2                     
 12369                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
 12370  005BA2  948A               	bcf	138,2,c	;volatile
 12371  005BA4                     
 12372                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
 12373  005BA4  0E14               	movlw	20
 12374  005BA6                     u8197:
 12375  005BA6  2EE8               	decfsz	wreg,f,c
 12376  005BA8  D7FE               	bra	u8197
 12377  005BAA                     
 12378                           ;./Librerias/nRF24L01_2.h: 76:     }
 12379  005BAA  2A02               	incf	spi_s_write@cont_s^0,f,c
 12380  005BAC  0E07               	movlw	7
 12381  005BAE  6402               	cpfsgt	spi_s_write@cont_s^0,c
 12382  005BB0  EFDC  F02D         	goto	u7141
 12383  005BB4  EFDE  F02D         	goto	u7140
 12384  005BB8                     u7141:
 12385  005BB8  EFC0  F02D         	goto	l258
 12386  005BBC                     u7140:
 12387  005BBC  0012               	return		;funcret
 12388  005BBE                     __end_of_spi_s_write:
 12389                           	callstack 0
 12390                           
 12391 ;; *************** function _get_corriente_AC *****************
 12392 ;; Defined at:
 12393 ;;		line 130 in file "main.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;  n_muestras      2   78[COMRAM] int 
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;  i               2   87[COMRAM] int 
 12398 ;;  corriente       4   89[COMRAM] float 
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  4   78[COMRAM] float 
 12401 ;; Registers used:
 12402 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12408 ;;      Params:         4       0       0       0       0       0       0       0       0
 12409 ;;      Locals:        10       0       0       0       0       0       0       0       0
 12410 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12411 ;;      Totals:        15       0       0       0       0       0       0       0       0
 12412 ;;Total ram usage:       15 bytes
 12413 ;; Hardware stack levels used: 1
 12414 ;; Hardware stack levels required when called: 2
 12415 ;; This function calls:
 12416 ;;		_ADC_GetConversion
 12417 ;;		___fladd
 12418 ;;		___fldiv
 12419 ;;		___flge
 12420 ;;		___flmul
 12421 ;;		___flsub
 12422 ;;		___xxtofl
 12423 ;; This function is called by:
 12424 ;;		_main
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text52
 12429  003BB4                     __ptext52:
 12430                           	callstack 0
 12431  003BB4                     _get_corriente_AC:
 12432                           	callstack 28
 12433  003BB4                     
 12434                           ;main.c: 130: float get_corriente_AC(int n_muestras);main.c: 131: {;main.c: 132:   float
      +                           corriente = 0.0;
 12435  003BB4  0E00               	movlw	0
 12436  003BB6  6E5A               	movwf	get_corriente_AC@corriente^0,c
 12437  003BB8  0E00               	movlw	0
 12438  003BBA  6E5B               	movwf	(get_corriente_AC@corriente+1)^0,c
 12439  003BBC  0E00               	movlw	0
 12440  003BBE  6E5C               	movwf	(get_corriente_AC@corriente+2)^0,c
 12441  003BC0  0E00               	movlw	0
 12442  003BC2  6E5D               	movwf	(get_corriente_AC@corriente+3)^0,c
 12443                           
 12444                           ;main.c: 133:   I_max = 0.0;
 12445  003BC4  0E00               	movlw	0
 12446  003BC6  0101               	movlb	1	; () banked
 12447  003BC8  6F46               	movwf	_I_max& (0+255),b
 12448  003BCA  0E00               	movlw	0
 12449  003BCC  6F47               	movwf	(_I_max+1)& (0+255),b
 12450  003BCE  0E00               	movlw	0
 12451  003BD0  6F48               	movwf	(_I_max+2)& (0+255),b
 12452  003BD2  0E00               	movlw	0
 12453  003BD4  6F49               	movwf	(_I_max+3)& (0+255),b
 12454                           
 12455                           ;main.c: 134:   I_min = 0.0;
 12456  003BD6  0E00               	movlw	0
 12457  003BD8  6F42               	movwf	_I_min& (0+255),b
 12458  003BDA  0E00               	movlw	0
 12459  003BDC  6F43               	movwf	(_I_min+1)& (0+255),b
 12460  003BDE  0E00               	movlw	0
 12461  003BE0  6F44               	movwf	(_I_min+2)& (0+255),b
 12462  003BE2  0E00               	movlw	0
 12463  003BE4  6F45               	movwf	(_I_min+3)& (0+255),b
 12464                           
 12465                           ;main.c: 135:   for(int i = 0; i < n_muestras; i++)
 12466  003BE6  0E00               	movlw	0
 12467  003BE8  6E59               	movwf	(get_corriente_AC@i+1)^0,c
 12468  003BEA  0E00               	movlw	0
 12469  003BEC  6E58               	movwf	get_corriente_AC@i^0,c
 12470  003BEE  EFD1  F01E         	goto	l6430
 12471  003BF2                     l6412:
 12472                           
 12473                           ;main.c: 136:   {;main.c: 137:       valor = ADC_GetConversion(0);
 12474  003BF2  0E00               	movlw	0
 12475  003BF4  ECC8  F02E         	call	_ADC_GetConversion
 12476  003BF8  C001  F0F7         	movff	?_ADC_GetConversion,_valor
 12477  003BFC  C002  F0F8         	movff	?_ADC_GetConversion+1,_valor+1
 12478  003C00                     
 12479                           ;main.c: 138:       voltaje = valor * (5.0 / 1023.0);
 12480  003C00  C0F7  F001         	movff	_valor,___xxtofl@val
 12481  003C04  C0F8  F002         	movff	_valor+1,___xxtofl@val+1
 12482  003C08  6A03               	clrf	(___xxtofl@val+2)^0,c
 12483  003C0A  6A04               	clrf	(___xxtofl@val+3)^0,c
 12484  003C0C  0E00               	movlw	0
 12485  003C0E  EC10  F022         	call	___xxtofl
 12486  003C12  C001  F02A         	movff	?___xxtofl,___flmul@b
 12487  003C16  C002  F02B         	movff	?___xxtofl+1,___flmul@b+1
 12488  003C1A  C003  F02C         	movff	?___xxtofl+2,___flmul@b+2
 12489  003C1E  C004  F02D         	movff	?___xxtofl+3,___flmul@b+3
 12490  003C22  0E0A               	movlw	10
 12491  003C24  6E2E               	movwf	___flmul@a^0,c
 12492  003C26  0E28               	movlw	40
 12493  003C28  6E2F               	movwf	(___flmul@a+1)^0,c
 12494  003C2A  0EA0               	movlw	160
 12495  003C2C  6E30               	movwf	(___flmul@a+2)^0,c
 12496  003C2E  0E3B               	movlw	59
 12497  003C30  6E31               	movwf	(___flmul@a+3)^0,c
 12498  003C32  EC19  F017         	call	___flmul	;wreg free
 12499  003C36  C02A  F14E         	movff	?___flmul,_voltaje
 12500  003C3A  C02B  F14F         	movff	?___flmul+1,_voltaje+1
 12501  003C3E  C02C  F150         	movff	?___flmul+2,_voltaje+2
 12502  003C42  C02D  F151         	movff	?___flmul+3,_voltaje+3
 12503  003C46                     
 12504                           ;main.c: 139:       corriente = 0.9 * corriente + 0.1 * ((voltaje - 2.5) / sensibilidad)
      +                          ;
 12505  003C46  0ECD               	movlw	205
 12506  003C48  6E2E               	movwf	___flmul@a^0,c
 12507  003C4A  0ECC               	movlw	204
 12508  003C4C  6E2F               	movwf	(___flmul@a+1)^0,c
 12509  003C4E  0ECC               	movlw	204
 12510  003C50  6E30               	movwf	(___flmul@a+2)^0,c
 12511  003C52  0E3D               	movlw	61
 12512  003C54  6E31               	movwf	(___flmul@a+3)^0,c
 12513  003C56  0EA4               	movlw	164
 12514  003C58  6E15               	movwf	___fldiv@a^0,c
 12515  003C5A  0E70               	movlw	112
 12516  003C5C  6E16               	movwf	(___fldiv@a+1)^0,c
 12517  003C5E  0E3D               	movlw	61
 12518  003C60  6E17               	movwf	(___fldiv@a+2)^0,c
 12519  003C62  0E3E               	movlw	62
 12520  003C64  6E18               	movwf	(___fldiv@a+3)^0,c
 12521  003C66  0E00               	movlw	0
 12522  003C68  6E05               	movwf	___fladd@a^0,c
 12523  003C6A  0E00               	movlw	0
 12524  003C6C  6E06               	movwf	(___fladd@a+1)^0,c
 12525  003C6E  0E20               	movlw	32
 12526  003C70  6E07               	movwf	(___fladd@a+2)^0,c
 12527  003C72  0EC0               	movlw	192
 12528  003C74  6E08               	movwf	(___fladd@a+3)^0,c
 12529  003C76  C14E  F001         	movff	_voltaje,___fladd@b
 12530  003C7A  C14F  F002         	movff	_voltaje+1,___fladd@b+1
 12531  003C7E  C150  F003         	movff	_voltaje+2,___fladd@b+2
 12532  003C82  C151  F004         	movff	_voltaje+3,___fladd@b+3
 12533  003C86  ECB9  F014         	call	___fladd	;wreg free
 12534  003C8A  C001  F011         	movff	?___fladd,___fldiv@b
 12535  003C8E  C002  F012         	movff	?___fladd+1,___fldiv@b+1
 12536  003C92  C003  F013         	movff	?___fladd+2,___fldiv@b+2
 12537  003C96  C004  F014         	movff	?___fladd+3,___fldiv@b+3
 12538  003C9A  EC2E  F019         	call	___fldiv	;wreg free
 12539  003C9E  C011  F02A         	movff	?___fldiv,___flmul@b
 12540  003CA2  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
 12541  003CA6  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
 12542  003CAA  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
 12543  003CAE  EC19  F017         	call	___flmul	;wreg free
 12544  003CB2  C02A  F054         	movff	?___flmul,_get_corriente_AC$2188
 12545  003CB6  C02B  F055         	movff	?___flmul+1,_get_corriente_AC$2188+1
 12546  003CBA  C02C  F056         	movff	?___flmul+2,_get_corriente_AC$2188+2
 12547  003CBE  C02D  F057         	movff	?___flmul+3,_get_corriente_AC$2188+3
 12548  003CC2                     
 12549                           ;main.c: 139:       corriente = 0.9 * corriente + 0.1 * ((voltaje - 2.5) / sensibilidad)
      +                          ;
 12550  003CC2  0E66               	movlw	102
 12551  003CC4  6E2E               	movwf	___flmul@a^0,c
 12552  003CC6  0E66               	movlw	102
 12553  003CC8  6E2F               	movwf	(___flmul@a+1)^0,c
 12554  003CCA  0E66               	movlw	102
 12555  003CCC  6E30               	movwf	(___flmul@a+2)^0,c
 12556  003CCE  0E3F               	movlw	63
 12557  003CD0  6E31               	movwf	(___flmul@a+3)^0,c
 12558  003CD2  C05A  F02A         	movff	get_corriente_AC@corriente,___flmul@b
 12559  003CD6  C05B  F02B         	movff	get_corriente_AC@corriente+1,___flmul@b+1
 12560  003CDA  C05C  F02C         	movff	get_corriente_AC@corriente+2,___flmul@b+2
 12561  003CDE  C05D  F02D         	movff	get_corriente_AC@corriente+3,___flmul@b+3
 12562  003CE2  EC19  F017         	call	___flmul	;wreg free
 12563  003CE6  C02A  F001         	movff	?___flmul,___fladd@b
 12564  003CEA  C02B  F002         	movff	?___flmul+1,___fladd@b+1
 12565  003CEE  C02C  F003         	movff	?___flmul+2,___fladd@b+2
 12566  003CF2  C02D  F004         	movff	?___flmul+3,___fladd@b+3
 12567  003CF6  C054  F005         	movff	_get_corriente_AC$2188,___fladd@a
 12568  003CFA  C055  F006         	movff	_get_corriente_AC$2188+1,___fladd@a+1
 12569  003CFE  C056  F007         	movff	_get_corriente_AC$2188+2,___fladd@a+2
 12570  003D02  C057  F008         	movff	_get_corriente_AC$2188+3,___fladd@a+3
 12571  003D06  ECB9  F014         	call	___fladd	;wreg free
 12572  003D0A  C001  F05A         	movff	?___fladd,get_corriente_AC@corriente
 12573  003D0E  C002  F05B         	movff	?___fladd+1,get_corriente_AC@corriente+1
 12574  003D12  C003  F05C         	movff	?___fladd+2,get_corriente_AC@corriente+2
 12575  003D16  C004  F05D         	movff	?___fladd+3,get_corriente_AC@corriente+3
 12576  003D1A                     
 12577                           ;main.c: 140:       if (corriente > I_max) I_max = corriente;
 12578  003D1A  C146  F043         	movff	_I_max,___flge@ff1
 12579  003D1E  C147  F044         	movff	_I_max+1,___flge@ff1+1
 12580  003D22  C148  F045         	movff	_I_max+2,___flge@ff1+2
 12581  003D26  C149  F046         	movff	_I_max+3,___flge@ff1+3
 12582  003D2A  C05A  F047         	movff	get_corriente_AC@corriente,___flge@ff2
 12583  003D2E  C05B  F048         	movff	get_corriente_AC@corriente+1,___flge@ff2+1
 12584  003D32  C05C  F049         	movff	get_corriente_AC@corriente+2,___flge@ff2+2
 12585  003D36  C05D  F04A         	movff	get_corriente_AC@corriente+3,___flge@ff2+3
 12586  003D3A  EC20  F028         	call	___flge	;wreg free
 12587  003D3E  B0D8               	btfsc	status,0,c
 12588  003D40  EFA4  F01E         	goto	u7901
 12589  003D44  EFA6  F01E         	goto	u7900
 12590  003D48                     u7901:
 12591  003D48  EFAE  F01E         	goto	l6424
 12592  003D4C                     u7900:
 12593  003D4C  C05A  F146         	movff	get_corriente_AC@corriente,_I_max
 12594  003D50  C05B  F147         	movff	get_corriente_AC@corriente+1,_I_max+1
 12595  003D54  C05C  F148         	movff	get_corriente_AC@corriente+2,_I_max+2
 12596  003D58  C05D  F149         	movff	get_corriente_AC@corriente+3,_I_max+3
 12597  003D5C                     l6424:
 12598                           
 12599                           ;main.c: 141:       if (corriente < I_min) I_min = corriente;
 12600  003D5C  C05A  F043         	movff	get_corriente_AC@corriente,___flge@ff1
 12601  003D60  C05B  F044         	movff	get_corriente_AC@corriente+1,___flge@ff1+1
 12602  003D64  C05C  F045         	movff	get_corriente_AC@corriente+2,___flge@ff1+2
 12603  003D68  C05D  F046         	movff	get_corriente_AC@corriente+3,___flge@ff1+3
 12604  003D6C  C142  F047         	movff	_I_min,___flge@ff2
 12605  003D70  C143  F048         	movff	_I_min+1,___flge@ff2+1
 12606  003D74  C144  F049         	movff	_I_min+2,___flge@ff2+2
 12607  003D78  C145  F04A         	movff	_I_min+3,___flge@ff2+3
 12608  003D7C  EC20  F028         	call	___flge	;wreg free
 12609  003D80  B0D8               	btfsc	status,0,c
 12610  003D82  EFC5  F01E         	goto	u7911
 12611  003D86  EFC7  F01E         	goto	u7910
 12612  003D8A                     u7911:
 12613  003D8A  EFCF  F01E         	goto	l6428
 12614  003D8E                     u7910:
 12615  003D8E  C05A  F142         	movff	get_corriente_AC@corriente,_I_min
 12616  003D92  C05B  F143         	movff	get_corriente_AC@corriente+1,_I_min+1
 12617  003D96  C05C  F144         	movff	get_corriente_AC@corriente+2,_I_min+2
 12618  003D9A  C05D  F145         	movff	get_corriente_AC@corriente+3,_I_min+3
 12619  003D9E                     l6428:
 12620                           
 12621                           ;main.c: 142:   }
 12622  003D9E  4A58               	infsnz	get_corriente_AC@i^0,f,c
 12623  003DA0  2A59               	incf	(get_corriente_AC@i+1)^0,f,c
 12624  003DA2                     l6430:
 12625  003DA2  504F               	movf	get_corriente_AC@n_muestras^0,w,c
 12626  003DA4  5C58               	subwf	get_corriente_AC@i^0,w,c
 12627  003DA6  5059               	movf	(get_corriente_AC@i+1)^0,w,c
 12628  003DA8  0A80               	xorlw	128
 12629  003DAA  6E53               	movwf	??_get_corriente_AC^0,c
 12630  003DAC  5050               	movf	(get_corriente_AC@n_muestras+1)^0,w,c
 12631  003DAE  0A80               	xorlw	128
 12632  003DB0  5853               	subwfb	??_get_corriente_AC^0,w,c
 12633  003DB2  A0D8               	btfss	status,0,c
 12634  003DB4  EFDE  F01E         	goto	u7921
 12635  003DB8  EFE0  F01E         	goto	u7920
 12636  003DBC                     u7921:
 12637  003DBC  EFF9  F01D         	goto	l6412
 12638  003DC0                     u7920:
 12639  003DC0                     
 12640                           ;main.c: 145:   return(((I_max - I_min) / 2) - offset);
 12641  003DC0  C142  F047         	movff	_I_min,___flsub@a
 12642  003DC4  C143  F048         	movff	_I_min+1,___flsub@a+1
 12643  003DC8  C144  F049         	movff	_I_min+2,___flsub@a+2
 12644  003DCC  C145  F04A         	movff	_I_min+3,___flsub@a+3
 12645  003DD0  C146  F043         	movff	_I_max,___flsub@b
 12646  003DD4  C147  F044         	movff	_I_max+1,___flsub@b+1
 12647  003DD8  C148  F045         	movff	_I_max+2,___flsub@b+2
 12648  003DDC  C149  F046         	movff	_I_max+3,___flsub@b+3
 12649  003DE0  EC25  F02E         	call	___flsub	;wreg free
 12650  003DE4  C043  F011         	movff	?___flsub,___fldiv@b
 12651  003DE8  C044  F012         	movff	?___flsub+1,___fldiv@b+1
 12652  003DEC  C045  F013         	movff	?___flsub+2,___fldiv@b+2
 12653  003DF0  C046  F014         	movff	?___flsub+3,___fldiv@b+3
 12654  003DF4  0E00               	movlw	0
 12655  003DF6  6E15               	movwf	___fldiv@a^0,c
 12656  003DF8  0E00               	movlw	0
 12657  003DFA  6E16               	movwf	(___fldiv@a+1)^0,c
 12658  003DFC  0E00               	movlw	0
 12659  003DFE  6E17               	movwf	(___fldiv@a+2)^0,c
 12660  003E00  0E40               	movlw	64
 12661  003E02  6E18               	movwf	(___fldiv@a+3)^0,c
 12662  003E04  EC2E  F019         	call	___fldiv	;wreg free
 12663  003E08  C011  F04F         	movff	?___fldiv,?_get_corriente_AC
 12664  003E0C  C012  F050         	movff	?___fldiv+1,?_get_corriente_AC+1
 12665  003E10  C013  F051         	movff	?___fldiv+2,?_get_corriente_AC+2
 12666  003E14  C014  F052         	movff	?___fldiv+3,?_get_corriente_AC+3
 12667  003E18  0012               	return		;funcret
 12668  003E1A                     __end_of_get_corriente_AC:
 12669                           	callstack 0
 12670                           
 12671 ;; *************** function ___xxtofl *****************
 12672 ;; Defined at:
 12673 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;  sign            1    wreg     unsigned char 
 12676 ;;  val             4    0[COMRAM] long 
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;  sign            1    8[COMRAM] unsigned char 
 12679 ;;  arg             4   10[COMRAM] unsigned long 
 12680 ;;  exp             1    9[COMRAM] unsigned char 
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  4    0[COMRAM] unsigned char 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2, status,0
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12690 ;;      Params:         4       0       0       0       0       0       0       0       0
 12691 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12692 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12693 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12694 ;;Total ram usage:       14 bytes
 12695 ;; Hardware stack levels used: 1
 12696 ;; This function calls:
 12697 ;;		Nothing
 12698 ;; This function is called by:
 12699 ;;		_get_corriente_AC
 12700 ;; This function uses a non-reentrant model
 12701 ;;
 12702                           
 12703                           	psect	text53
 12704  004420                     __ptext53:
 12705                           	callstack 0
 12706  004420                     ___xxtofl:
 12707                           	callstack 29
 12708                           
 12709                           ;incstack = 0
 12710                           ;___xxtofl@sign stored from wreg
 12711  004420  6E09               	movwf	___xxtofl@sign^0,c
 12712  004422  5009               	movf	___xxtofl@sign^0,w,c
 12713  004424  B4D8               	btfsc	status,2,c
 12714  004426  EF17  F022         	goto	u7711
 12715  00442A  EF19  F022         	goto	u7710
 12716  00442E                     u7711:
 12717  00442E  EF3B  F022         	goto	l1044
 12718  004432                     u7710:
 12719  004432  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12720  004434  EF20  F022         	goto	u7720
 12721  004438  EF1E  F022         	goto	u7721
 12722  00443C                     u7721:
 12723  00443C  EF3B  F022         	goto	l1044
 12724  004440                     u7720:
 12725  004440  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12726  004444  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12727  004448  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12728  00444C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12729  004450  1E05               	comf	??___xxtofl^0,f,c
 12730  004452  1E06               	comf	(??___xxtofl+1)^0,f,c
 12731  004454  1E07               	comf	(??___xxtofl+2)^0,f,c
 12732  004456  1E08               	comf	(??___xxtofl+3)^0,f,c
 12733  004458  2A05               	incf	??___xxtofl^0,f,c
 12734  00445A  0E00               	movlw	0
 12735  00445C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12736  00445E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12737  004460  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12738  004462  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12739  004466  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12740  00446A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12741  00446E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12742  004472  EF43  F022         	goto	l6254
 12743  004476                     l1044:
 12744  004476  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12745  00447A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12746  00447E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12747  004482  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12748  004486                     l6254:
 12749  004486  5001               	movf	___xxtofl@val^0,w,c
 12750  004488  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12751  00448A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12752  00448C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12753  00448E  A4D8               	btfss	status,2,c
 12754  004490  EF4C  F022         	goto	u7731
 12755  004494  EF4E  F022         	goto	u7730
 12756  004498                     u7731:
 12757  004498  EF58  F022         	goto	l6260
 12758  00449C                     u7730:
 12759  00449C  0E00               	movlw	0
 12760  00449E  6E01               	movwf	?___xxtofl^0,c
 12761  0044A0  0E00               	movlw	0
 12762  0044A2  6E02               	movwf	(?___xxtofl+1)^0,c
 12763  0044A4  0E00               	movlw	0
 12764  0044A6  6E03               	movwf	(?___xxtofl+2)^0,c
 12765  0044A8  0E00               	movlw	0
 12766  0044AA  6E04               	movwf	(?___xxtofl+3)^0,c
 12767  0044AC  EFE9  F022         	goto	l1047
 12768  0044B0                     l6260:
 12769  0044B0  0E96               	movlw	150
 12770  0044B2  6E0A               	movwf	___xxtofl@exp^0,c
 12771  0044B4  EF62  F022         	goto	l6264
 12772  0044B8                     l6262:
 12773  0044B8  2A0A               	incf	___xxtofl@exp^0,f,c
 12774  0044BA  90D8               	bcf	status,0,c
 12775  0044BC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12776  0044BE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12777  0044C0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12778  0044C2  320B               	rrcf	___xxtofl@arg^0,f,c
 12779  0044C4                     l6264:
 12780  0044C4  0E00               	movlw	0
 12781  0044C6  140B               	andwf	___xxtofl@arg^0,w,c
 12782  0044C8  6E05               	movwf	??___xxtofl^0,c
 12783  0044CA  0E00               	movlw	0
 12784  0044CC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12785  0044CE  6E06               	movwf	(??___xxtofl+1)^0,c
 12786  0044D0  0E00               	movlw	0
 12787  0044D2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12788  0044D4  6E07               	movwf	(??___xxtofl+2)^0,c
 12789  0044D6  0EFE               	movlw	254
 12790  0044D8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12791  0044DA  6E08               	movwf	(??___xxtofl+3)^0,c
 12792  0044DC  5005               	movf	??___xxtofl^0,w,c
 12793  0044DE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12794  0044E0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12795  0044E2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12796  0044E4  A4D8               	btfss	status,2,c
 12797  0044E6  EF77  F022         	goto	u7741
 12798  0044EA  EF79  F022         	goto	u7740
 12799  0044EE                     u7741:
 12800  0044EE  EF5C  F022         	goto	l6262
 12801  0044F2                     u7740:
 12802  0044F2  EF87  F022         	goto	l1051
 12803  0044F6                     l6266:
 12804  0044F6  2A0A               	incf	___xxtofl@exp^0,f,c
 12805  0044F8  0E01               	movlw	1
 12806  0044FA  260B               	addwf	___xxtofl@arg^0,f,c
 12807  0044FC  0E00               	movlw	0
 12808  0044FE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12809  004500  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12810  004502  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12811  004504  90D8               	bcf	status,0,c
 12812  004506  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12813  004508  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12814  00450A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12815  00450C  320B               	rrcf	___xxtofl@arg^0,f,c
 12816  00450E                     l1051:
 12817  00450E  0E00               	movlw	0
 12818  004510  140B               	andwf	___xxtofl@arg^0,w,c
 12819  004512  6E05               	movwf	??___xxtofl^0,c
 12820  004514  0E00               	movlw	0
 12821  004516  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12822  004518  6E06               	movwf	(??___xxtofl+1)^0,c
 12823  00451A  0E00               	movlw	0
 12824  00451C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12825  00451E  6E07               	movwf	(??___xxtofl+2)^0,c
 12826  004520  0EFF               	movlw	255
 12827  004522  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12828  004524  6E08               	movwf	(??___xxtofl+3)^0,c
 12829  004526  5005               	movf	??___xxtofl^0,w,c
 12830  004528  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12831  00452A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12832  00452C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12833  00452E  A4D8               	btfss	status,2,c
 12834  004530  EF9C  F022         	goto	u7751
 12835  004534  EF9E  F022         	goto	u7750
 12836  004538                     u7751:
 12837  004538  EF7B  F022         	goto	l6266
 12838  00453C                     u7750:
 12839  00453C  EFA6  F022         	goto	l6274
 12840  004540                     l6272:
 12841  004540  060A               	decf	___xxtofl@exp^0,f,c
 12842  004542  90D8               	bcf	status,0,c
 12843  004544  360B               	rlcf	___xxtofl@arg^0,f,c
 12844  004546  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12845  004548  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12846  00454A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12847  00454C                     l6274:
 12848  00454C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12849  00454E  EFAB  F022         	goto	u7761
 12850  004552  EFAD  F022         	goto	u7760
 12851  004556                     u7761:
 12852  004556  EFB5  F022         	goto	l1058
 12853  00455A                     u7760:
 12854  00455A  0E02               	movlw	2
 12855  00455C  600A               	cpfslt	___xxtofl@exp^0,c
 12856  00455E  EFB3  F022         	goto	u7771
 12857  004562  EFB5  F022         	goto	u7770
 12858  004566                     u7771:
 12859  004566  EFA0  F022         	goto	l6272
 12860  00456A                     u7770:
 12861  00456A                     l1058:
 12862  00456A  B00A               	btfsc	___xxtofl@exp^0,0,c
 12863  00456C  EFBA  F022         	goto	u7781
 12864  004570  EFBC  F022         	goto	u7780
 12865  004574                     u7781:
 12866  004574  EFBD  F022         	goto	l6280
 12867  004578                     u7780:
 12868  004578  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12869  00457A                     l6280:
 12870  00457A  90D8               	bcf	status,0,c
 12871  00457C  320A               	rrcf	___xxtofl@exp^0,f,c
 12872  00457E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12873  004582  6A06               	clrf	(??___xxtofl+1)^0,c
 12874  004584  6A07               	clrf	(??___xxtofl+2)^0,c
 12875  004586  6A08               	clrf	(??___xxtofl+3)^0,c
 12876  004588  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12877  00458C  6A07               	clrf	(??___xxtofl+2)^0,c
 12878  00458E  6A06               	clrf	(??___xxtofl+1)^0,c
 12879  004590  6A05               	clrf	??___xxtofl^0,c
 12880  004592  5005               	movf	??___xxtofl^0,w,c
 12881  004594  120B               	iorwf	___xxtofl@arg^0,f,c
 12882  004596  5006               	movf	(??___xxtofl+1)^0,w,c
 12883  004598  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12884  00459A  5007               	movf	(??___xxtofl+2)^0,w,c
 12885  00459C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12886  00459E  5008               	movf	(??___xxtofl+3)^0,w,c
 12887  0045A0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12888  0045A2  5009               	movf	___xxtofl@sign^0,w,c
 12889  0045A4  B4D8               	btfsc	status,2,c
 12890  0045A6  EFD7  F022         	goto	u7791
 12891  0045AA  EFD9  F022         	goto	u7790
 12892  0045AE                     u7791:
 12893  0045AE  EFE1  F022         	goto	l6290
 12894  0045B2                     u7790:
 12895  0045B2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12896  0045B4  EFE0  F022         	goto	u7800
 12897  0045B8  EFDE  F022         	goto	u7801
 12898  0045BC                     u7801:
 12899  0045BC  EFE1  F022         	goto	l6290
 12900  0045C0                     u7800:
 12901  0045C0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12902  0045C2                     l6290:
 12903  0045C2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12904  0045C6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12905  0045CA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12906  0045CE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12907  0045D2                     l1047:
 12908  0045D2  0012               	return		;funcret
 12909  0045D4                     __end_of___xxtofl:
 12910                           	callstack 0
 12911                           
 12912 ;; *************** function ___flsub *****************
 12913 ;; Defined at:
 12914 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;  b               4   66[COMRAM] unsigned char 
 12917 ;;  a               4   70[COMRAM] unsigned char 
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;		None
 12920 ;; Return value:  Size  Location     Type
 12921 ;;                  4   66[COMRAM] unsigned char 
 12922 ;; Registers used:
 12923 ;;		wreg, status,2, status,0, cstack
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12929 ;;      Params:         8       0       0       0       0       0       0       0       0
 12930 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12932 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12933 ;;Total ram usage:        8 bytes
 12934 ;; Hardware stack levels used: 1
 12935 ;; Hardware stack levels required when called: 1
 12936 ;; This function calls:
 12937 ;;		___fladd
 12938 ;; This function is called by:
 12939 ;;		_get_corriente_AC
 12940 ;;		_efgtoa
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           	psect	text54
 12945  005C4A                     __ptext54:
 12946                           	callstack 0
 12947  005C4A                     ___flsub:
 12948                           	callstack 24
 12949  005C4A  0E00               	movlw	0
 12950  005C4C  1A47               	xorwf	___flsub@a^0,f,c
 12951  005C4E  0E00               	movlw	0
 12952  005C50  1A48               	xorwf	(___flsub@a+1)^0,f,c
 12953  005C52  0E00               	movlw	0
 12954  005C54  1A49               	xorwf	(___flsub@a+2)^0,f,c
 12955  005C56  0E80               	movlw	128
 12956  005C58  1A4A               	xorwf	(___flsub@a+3)^0,f,c
 12957  005C5A  C043  F001         	movff	___flsub@b,___fladd@b
 12958  005C5E  C044  F002         	movff	___flsub@b+1,___fladd@b+1
 12959  005C62  C045  F003         	movff	___flsub@b+2,___fladd@b+2
 12960  005C66  C046  F004         	movff	___flsub@b+3,___fladd@b+3
 12961  005C6A  C047  F005         	movff	___flsub@a,___fladd@a
 12962  005C6E  C048  F006         	movff	___flsub@a+1,___fladd@a+1
 12963  005C72  C049  F007         	movff	___flsub@a+2,___fladd@a+2
 12964  005C76  C04A  F008         	movff	___flsub@a+3,___fladd@a+3
 12965  005C7A  ECB9  F014         	call	___fladd	;wreg free
 12966  005C7E  C001  F043         	movff	?___fladd,?___flsub
 12967  005C82  C002  F044         	movff	?___fladd+1,?___flsub+1
 12968  005C86  C003  F045         	movff	?___fladd+2,?___flsub+2
 12969  005C8A  C004  F046         	movff	?___fladd+3,?___flsub+3
 12970  005C8E  0012               	return		;funcret
 12971  005C90                     __end_of___flsub:
 12972                           	callstack 0
 12973                           
 12974 ;; *************** function ___fladd *****************
 12975 ;; Defined at:
 12976 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;  b               4    0[COMRAM] unsigned char 
 12979 ;;  a               4    4[COMRAM] unsigned char 
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;  grs             1   15[COMRAM] unsigned char 
 12982 ;;  bexp            1   14[COMRAM] unsigned char 
 12983 ;;  aexp            1   13[COMRAM] unsigned char 
 12984 ;;  signs           1   12[COMRAM] unsigned char 
 12985 ;; Return value:  Size  Location     Type
 12986 ;;                  4    0[COMRAM] unsigned char 
 12987 ;; Registers used:
 12988 ;;		wreg, status,2, status,0
 12989 ;; Tracked objects:
 12990 ;;		On entry : 0/0
 12991 ;;		On exit  : 0/0
 12992 ;;		Unchanged: 0/0
 12993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12994 ;;      Params:         8       0       0       0       0       0       0       0       0
 12995 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12996 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12997 ;;      Totals:        16       0       0       0       0       0       0       0       0
 12998 ;;Total ram usage:       16 bytes
 12999 ;; Hardware stack levels used: 1
 13000 ;; This function calls:
 13001 ;;		Nothing
 13002 ;; This function is called by:
 13003 ;;		_get_corriente_AC
 13004 ;;		___flsub
 13005 ;;		_efgtoa
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009                           	psect	text55
 13010  002972                     __ptext55:
 13011                           	callstack 0
 13012  002972                     ___fladd:
 13013                           	callstack 24
 13014  002972  5004               	movf	(___fladd@b+3)^0,w,c
 13015  002974  0B80               	andlw	128
 13016  002976  6E0D               	movwf	___fladd@signs^0,c
 13017  002978  5004               	movf	(___fladd@b+3)^0,w,c
 13018  00297A  2404               	addwf	(___fladd@b+3)^0,w,c
 13019  00297C  6E0F               	movwf	___fladd@bexp^0,c
 13020  00297E  AE03               	btfss	(___fladd@b+2)^0,7,c
 13021  002980  EFC4  F014         	goto	u4081
 13022  002984  EFC6  F014         	goto	u4080
 13023  002988                     u4081:
 13024  002988  EFC7  F014         	goto	l4166
 13025  00298C                     u4080:
 13026  00298C  800F               	bsf	___fladd@bexp^0,0,c
 13027  00298E                     l4166:
 13028  00298E  500F               	movf	___fladd@bexp^0,w,c
 13029  002990  B4D8               	btfsc	status,2,c
 13030  002992  EFCD  F014         	goto	u4091
 13031  002996  EFCF  F014         	goto	u4090
 13032  00299A                     u4091:
 13033  00299A  EFE4  F014         	goto	l4176
 13034  00299E                     u4090:
 13035  00299E  280F               	incf	___fladd@bexp^0,w,c
 13036  0029A0  A4D8               	btfss	status,2,c
 13037  0029A2  EFD5  F014         	goto	u4101
 13038  0029A6  EFD7  F014         	goto	u4100
 13039  0029AA                     u4101:
 13040  0029AA  EFDF  F014         	goto	l4172
 13041  0029AE                     u4100:
 13042  0029AE  0E00               	movlw	0
 13043  0029B0  6E01               	movwf	___fladd@b^0,c
 13044  0029B2  0E00               	movlw	0
 13045  0029B4  6E02               	movwf	(___fladd@b+1)^0,c
 13046  0029B6  0E00               	movlw	0
 13047  0029B8  6E03               	movwf	(___fladd@b+2)^0,c
 13048  0029BA  0E00               	movlw	0
 13049  0029BC  6E04               	movwf	(___fladd@b+3)^0,c
 13050  0029BE                     l4172:
 13051  0029BE  8E03               	bsf	(___fladd@b+2)^0,7,c
 13052  0029C0  0E00               	movlw	0
 13053  0029C2  6E04               	movwf	(___fladd@b+3)^0,c
 13054  0029C4  EFEC  F014         	goto	l4178
 13055  0029C8                     l4176:
 13056  0029C8  0E00               	movlw	0
 13057  0029CA  6E01               	movwf	___fladd@b^0,c
 13058  0029CC  0E00               	movlw	0
 13059  0029CE  6E02               	movwf	(___fladd@b+1)^0,c
 13060  0029D0  0E00               	movlw	0
 13061  0029D2  6E03               	movwf	(___fladd@b+2)^0,c
 13062  0029D4  0E00               	movlw	0
 13063  0029D6  6E04               	movwf	(___fladd@b+3)^0,c
 13064  0029D8                     l4178:
 13065  0029D8  5008               	movf	(___fladd@a+3)^0,w,c
 13066  0029DA  0B80               	andlw	128
 13067  0029DC  6E0E               	movwf	___fladd@aexp^0,c
 13068  0029DE  500D               	movf	___fladd@signs^0,w,c
 13069  0029E0  180E               	xorwf	___fladd@aexp^0,w,c
 13070  0029E2  B4D8               	btfsc	status,2,c
 13071  0029E4  EFF6  F014         	goto	u4111
 13072  0029E8  EFF8  F014         	goto	u4110
 13073  0029EC                     u4111:
 13074  0029EC  EFF9  F014         	goto	l4184
 13075  0029F0                     u4110:
 13076  0029F0  8C0D               	bsf	___fladd@signs^0,6,c
 13077  0029F2                     l4184:
 13078  0029F2  5008               	movf	(___fladd@a+3)^0,w,c
 13079  0029F4  2408               	addwf	(___fladd@a+3)^0,w,c
 13080  0029F6  6E0E               	movwf	___fladd@aexp^0,c
 13081  0029F8  AE07               	btfss	(___fladd@a+2)^0,7,c
 13082  0029FA  EF01  F015         	goto	u4121
 13083  0029FE  EF03  F015         	goto	u4120
 13084  002A02                     u4121:
 13085  002A02  EF04  F015         	goto	l4190
 13086  002A06                     u4120:
 13087  002A06  800E               	bsf	___fladd@aexp^0,0,c
 13088  002A08                     l4190:
 13089  002A08  500E               	movf	___fladd@aexp^0,w,c
 13090  002A0A  B4D8               	btfsc	status,2,c
 13091  002A0C  EF0A  F015         	goto	u4131
 13092  002A10  EF0C  F015         	goto	u4130
 13093  002A14                     u4131:
 13094  002A14  EF21  F015         	goto	l4200
 13095  002A18                     u4130:
 13096  002A18  280E               	incf	___fladd@aexp^0,w,c
 13097  002A1A  A4D8               	btfss	status,2,c
 13098  002A1C  EF12  F015         	goto	u4141
 13099  002A20  EF14  F015         	goto	u4140
 13100  002A24                     u4141:
 13101  002A24  EF1C  F015         	goto	l4196
 13102  002A28                     u4140:
 13103  002A28  0E00               	movlw	0
 13104  002A2A  6E05               	movwf	___fladd@a^0,c
 13105  002A2C  0E00               	movlw	0
 13106  002A2E  6E06               	movwf	(___fladd@a+1)^0,c
 13107  002A30  0E00               	movlw	0
 13108  002A32  6E07               	movwf	(___fladd@a+2)^0,c
 13109  002A34  0E00               	movlw	0
 13110  002A36  6E08               	movwf	(___fladd@a+3)^0,c
 13111  002A38                     l4196:
 13112  002A38  8E07               	bsf	(___fladd@a+2)^0,7,c
 13113  002A3A  0E00               	movlw	0
 13114  002A3C  6E08               	movwf	(___fladd@a+3)^0,c
 13115  002A3E  EF29  F015         	goto	l4202
 13116  002A42                     l4200:
 13117  002A42  0E00               	movlw	0
 13118  002A44  6E05               	movwf	___fladd@a^0,c
 13119  002A46  0E00               	movlw	0
 13120  002A48  6E06               	movwf	(___fladd@a+1)^0,c
 13121  002A4A  0E00               	movlw	0
 13122  002A4C  6E07               	movwf	(___fladd@a+2)^0,c
 13123  002A4E  0E00               	movlw	0
 13124  002A50  6E08               	movwf	(___fladd@a+3)^0,c
 13125  002A52                     l4202:
 13126  002A52  500F               	movf	___fladd@bexp^0,w,c
 13127  002A54  5C0E               	subwf	___fladd@aexp^0,w,c
 13128  002A56  B0D8               	btfsc	status,0,c
 13129  002A58  EF30  F015         	goto	u4151
 13130  002A5C  EF32  F015         	goto	u4150
 13131  002A60                     u4151:
 13132  002A60  EF59  F015         	goto	l4238
 13133  002A64                     u4150:
 13134  002A64  AC0D               	btfss	___fladd@signs^0,6,c
 13135  002A66  EF37  F015         	goto	u4161
 13136  002A6A  EF39  F015         	goto	u4160
 13137  002A6E                     u4161:
 13138  002A6E  EF3B  F015         	goto	l4208
 13139  002A72                     u4160:
 13140  002A72  0E80               	movlw	128
 13141  002A74  1A0D               	xorwf	___fladd@signs^0,f,c
 13142  002A76                     l4208:
 13143  002A76  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13144  002A7A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13145  002A7E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13146  002A82  C001  F010         	movff	___fladd@b,___fladd@grs
 13147  002A86  C005  F001         	movff	___fladd@a,___fladd@b
 13148  002A8A  C010  F005         	movff	___fladd@grs,___fladd@a
 13149  002A8E  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13150  002A92  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13151  002A96  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13152  002A9A  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13153  002A9E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13154  002AA2  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13155  002AA6  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13156  002AAA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13157  002AAE  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13158  002AB2                     l4238:
 13159  002AB2  0E00               	movlw	0
 13160  002AB4  6E10               	movwf	___fladd@grs^0,c
 13161  002AB6  500F               	movf	___fladd@bexp^0,w,c
 13162  002AB8  C00E  F009         	movff	___fladd@aexp,??___fladd
 13163  002ABC  6A0A               	clrf	(??___fladd+1)^0,c
 13164  002ABE  5E09               	subwf	??___fladd^0,f,c
 13165  002AC0  0E00               	movlw	0
 13166  002AC2  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13167  002AC4  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13168  002AC6  EF6E  F015         	goto	u4171
 13169  002ACA  500A               	movf	(??___fladd+1)^0,w,c
 13170  002ACC  E109               	bnz	u4170
 13171  002ACE  0E1A               	movlw	26
 13172  002AD0  5C09               	subwf	??___fladd^0,w,c
 13173  002AD2  A0D8               	btfss	status,0,c
 13174  002AD4  EF6E  F015         	goto	u4171
 13175  002AD8  EF70  F015         	goto	u4170
 13176  002ADC                     u4171:
 13177  002ADC  EFA7  F015         	goto	l918
 13178  002AE0                     u4170:
 13179  002AE0  5001               	movf	___fladd@b^0,w,c
 13180  002AE2  1002               	iorwf	(___fladd@b+1)^0,w,c
 13181  002AE4  1003               	iorwf	(___fladd@b+2)^0,w,c
 13182  002AE6  1004               	iorwf	(___fladd@b+3)^0,w,c
 13183  002AE8  A4D8               	btfss	status,2,c
 13184  002AEA  EF79  F015         	goto	u4181
 13185  002AEE  EF7C  F015         	goto	u4180
 13186  002AF2                     u4181:
 13187  002AF2  0E01               	movlw	1
 13188  002AF4  EF7D  F015         	goto	u4190
 13189  002AF8                     u4180:
 13190  002AF8  0E00               	movlw	0
 13191  002AFA                     u4190:
 13192  002AFA  6E10               	movwf	___fladd@grs^0,c
 13193  002AFC  0E00               	movlw	0
 13194  002AFE  6E01               	movwf	___fladd@b^0,c
 13195  002B00  0E00               	movlw	0
 13196  002B02  6E02               	movwf	(___fladd@b+1)^0,c
 13197  002B04  0E00               	movlw	0
 13198  002B06  6E03               	movwf	(___fladd@b+2)^0,c
 13199  002B08  0E00               	movlw	0
 13200  002B0A  6E04               	movwf	(___fladd@b+3)^0,c
 13201  002B0C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13202  002B10  EFB0  F015         	goto	l917
 13203  002B14                     l919:
 13204  002B14  A010               	btfss	___fladd@grs^0,0,c
 13205  002B16  EF8F  F015         	goto	u4201
 13206  002B1A  EF91  F015         	goto	u4200
 13207  002B1E                     u4201:
 13208  002B1E  EF97  F015         	goto	l4250
 13209  002B22                     u4200:
 13210  002B22  90D8               	bcf	status,0,c
 13211  002B24  3010               	rrcf	___fladd@grs^0,w,c
 13212  002B26  0901               	iorlw	1
 13213  002B28  6E10               	movwf	___fladd@grs^0,c
 13214  002B2A  EF99  F015         	goto	l4252
 13215  002B2E                     l4250:
 13216  002B2E  90D8               	bcf	status,0,c
 13217  002B30  3210               	rrcf	___fladd@grs^0,f,c
 13218  002B32                     l4252:
 13219  002B32  A001               	btfss	___fladd@b^0,0,c
 13220  002B34  EF9E  F015         	goto	u4211
 13221  002B38  EFA0  F015         	goto	u4210
 13222  002B3C                     u4211:
 13223  002B3C  EFA1  F015         	goto	l4256
 13224  002B40                     u4210:
 13225  002B40  8E10               	bsf	___fladd@grs^0,7,c
 13226  002B42                     l4256:
 13227  002B42  3404               	rlcf	(___fladd@b+3)^0,w,c
 13228  002B44  3204               	rrcf	(___fladd@b+3)^0,f,c
 13229  002B46  3203               	rrcf	(___fladd@b+2)^0,f,c
 13230  002B48  3202               	rrcf	(___fladd@b+1)^0,f,c
 13231  002B4A  3201               	rrcf	___fladd@b^0,f,c
 13232  002B4C  2A0F               	incf	___fladd@bexp^0,f,c
 13233  002B4E                     l918:
 13234  002B4E  500E               	movf	___fladd@aexp^0,w,c
 13235  002B50  5C0F               	subwf	___fladd@bexp^0,w,c
 13236  002B52  A0D8               	btfss	status,0,c
 13237  002B54  EFAE  F015         	goto	u4221
 13238  002B58  EFB0  F015         	goto	u4220
 13239  002B5C                     u4221:
 13240  002B5C  EF8A  F015         	goto	l919
 13241  002B60                     u4220:
 13242  002B60                     l917:
 13243  002B60  BC0D               	btfsc	___fladd@signs^0,6,c
 13244  002B62  EFB5  F015         	goto	u4231
 13245  002B66  EFB7  F015         	goto	u4230
 13246  002B6A                     u4231:
 13247  002B6A  EFF7  F015         	goto	l4284
 13248  002B6E                     u4230:
 13249  002B6E  500F               	movf	___fladd@bexp^0,w,c
 13250  002B70  A4D8               	btfss	status,2,c
 13251  002B72  EFBD  F015         	goto	u4241
 13252  002B76  EFBF  F015         	goto	u4240
 13253  002B7A                     u4241:
 13254  002B7A  EFC9  F015         	goto	l4266
 13255  002B7E                     u4240:
 13256  002B7E  0E00               	movlw	0
 13257  002B80  6E01               	movwf	?___fladd^0,c
 13258  002B82  0E00               	movlw	0
 13259  002B84  6E02               	movwf	(?___fladd+1)^0,c
 13260  002B86  0E00               	movlw	0
 13261  002B88  6E03               	movwf	(?___fladd+2)^0,c
 13262  002B8A  0E00               	movlw	0
 13263  002B8C  6E04               	movwf	(?___fladd+3)^0,c
 13264  002B8E  EF18  F017         	goto	l926
 13265  002B92                     l4266:
 13266  002B92  5005               	movf	___fladd@a^0,w,c
 13267  002B94  2601               	addwf	___fladd@b^0,f,c
 13268  002B96  5006               	movf	(___fladd@a+1)^0,w,c
 13269  002B98  2202               	addwfc	(___fladd@b+1)^0,f,c
 13270  002B9A  5007               	movf	(___fladd@a+2)^0,w,c
 13271  002B9C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13272  002B9E  5008               	movf	(___fladd@a+3)^0,w,c
 13273  002BA0  2204               	addwfc	(___fladd@b+3)^0,f,c
 13274  002BA2  A004               	btfss	(___fladd@b+3)^0,0,c
 13275  002BA4  EFD6  F015         	goto	u4251
 13276  002BA8  EFD8  F015         	goto	u4250
 13277  002BAC                     u4251:
 13278  002BAC  EF84  F016         	goto	l4320
 13279  002BB0                     u4250:
 13280  002BB0  A010               	btfss	___fladd@grs^0,0,c
 13281  002BB2  EFDD  F015         	goto	u4261
 13282  002BB6  EFDF  F015         	goto	u4260
 13283  002BBA                     u4261:
 13284  002BBA  EFE5  F015         	goto	l4274
 13285  002BBE                     u4260:
 13286  002BBE  90D8               	bcf	status,0,c
 13287  002BC0  3010               	rrcf	___fladd@grs^0,w,c
 13288  002BC2  0901               	iorlw	1
 13289  002BC4  6E10               	movwf	___fladd@grs^0,c
 13290  002BC6  EFE7  F015         	goto	l4276
 13291  002BCA                     l4274:
 13292  002BCA  90D8               	bcf	status,0,c
 13293  002BCC  3210               	rrcf	___fladd@grs^0,f,c
 13294  002BCE                     l4276:
 13295  002BCE  A001               	btfss	___fladd@b^0,0,c
 13296  002BD0  EFEC  F015         	goto	u4271
 13297  002BD4  EFEE  F015         	goto	u4270
 13298  002BD8                     u4271:
 13299  002BD8  EFEF  F015         	goto	l4280
 13300  002BDC                     u4270:
 13301  002BDC  8E10               	bsf	___fladd@grs^0,7,c
 13302  002BDE                     l4280:
 13303  002BDE  3404               	rlcf	(___fladd@b+3)^0,w,c
 13304  002BE0  3204               	rrcf	(___fladd@b+3)^0,f,c
 13305  002BE2  3203               	rrcf	(___fladd@b+2)^0,f,c
 13306  002BE4  3202               	rrcf	(___fladd@b+1)^0,f,c
 13307  002BE6  3201               	rrcf	___fladd@b^0,f,c
 13308  002BE8  2A0F               	incf	___fladd@bexp^0,f,c
 13309  002BEA  EF84  F016         	goto	l4320
 13310  002BEE                     l4284:
 13311  002BEE  5005               	movf	___fladd@a^0,w,c
 13312  002BF0  5C01               	subwf	___fladd@b^0,w,c
 13313  002BF2  5006               	movf	(___fladd@a+1)^0,w,c
 13314  002BF4  5802               	subwfb	(___fladd@b+1)^0,w,c
 13315  002BF6  5007               	movf	(___fladd@a+2)^0,w,c
 13316  002BF8  5803               	subwfb	(___fladd@b+2)^0,w,c
 13317  002BFA  5004               	movf	(___fladd@b+3)^0,w,c
 13318  002BFC  0A80               	xorlw	128
 13319  002BFE  6E09               	movwf	??___fladd^0,c
 13320  002C00  5008               	movf	(___fladd@a+3)^0,w,c
 13321  002C02  0A80               	xorlw	128
 13322  002C04  5809               	subwfb	??___fladd^0,w,c
 13323  002C06  B0D8               	btfsc	status,0,c
 13324  002C08  EF08  F016         	goto	u4281
 13325  002C0C  EF0A  F016         	goto	u4280
 13326  002C10                     u4281:
 13327  002C10  EF35  F016         	goto	l4294
 13328  002C14                     u4280:
 13329  002C14  5001               	movf	___fladd@b^0,w,c
 13330  002C16  5C05               	subwf	___fladd@a^0,w,c
 13331  002C18  6E09               	movwf	??___fladd^0,c
 13332  002C1A  5002               	movf	(___fladd@b+1)^0,w,c
 13333  002C1C  5806               	subwfb	(___fladd@a+1)^0,w,c
 13334  002C1E  6E0A               	movwf	(??___fladd+1)^0,c
 13335  002C20  5003               	movf	(___fladd@b+2)^0,w,c
 13336  002C22  5807               	subwfb	(___fladd@a+2)^0,w,c
 13337  002C24  6E0B               	movwf	(??___fladd+2)^0,c
 13338  002C26  5004               	movf	(___fladd@b+3)^0,w,c
 13339  002C28  5808               	subwfb	(___fladd@a+3)^0,w,c
 13340  002C2A  6E0C               	movwf	(??___fladd+3)^0,c
 13341  002C2C  0EFF               	movlw	255
 13342  002C2E  2409               	addwf	??___fladd^0,w,c
 13343  002C30  6E01               	movwf	___fladd@b^0,c
 13344  002C32  0EFF               	movlw	255
 13345  002C34  200A               	addwfc	(??___fladd+1)^0,w,c
 13346  002C36  6E02               	movwf	(___fladd@b+1)^0,c
 13347  002C38  0EFF               	movlw	255
 13348  002C3A  200B               	addwfc	(??___fladd+2)^0,w,c
 13349  002C3C  6E03               	movwf	(___fladd@b+2)^0,c
 13350  002C3E  0EFF               	movlw	255
 13351  002C40  200C               	addwfc	(??___fladd+3)^0,w,c
 13352  002C42  6E04               	movwf	(___fladd@b+3)^0,c
 13353  002C44  0E80               	movlw	128
 13354  002C46  1A0D               	xorwf	___fladd@signs^0,f,c
 13355  002C48  6C10               	negf	___fladd@grs^0,c
 13356  002C4A  5010               	movf	___fladd@grs^0,w,c
 13357  002C4C  A4D8               	btfss	status,2,c
 13358  002C4E  EF2B  F016         	goto	u4291
 13359  002C52  EF2D  F016         	goto	u4290
 13360  002C56                     u4291:
 13361  002C56  EF3D  F016         	goto	l934
 13362  002C5A                     u4290:
 13363  002C5A  0E01               	movlw	1
 13364  002C5C  2601               	addwf	___fladd@b^0,f,c
 13365  002C5E  0E00               	movlw	0
 13366  002C60  2202               	addwfc	(___fladd@b+1)^0,f,c
 13367  002C62  2203               	addwfc	(___fladd@b+2)^0,f,c
 13368  002C64  2204               	addwfc	(___fladd@b+3)^0,f,c
 13369  002C66  EF3D  F016         	goto	l934
 13370  002C6A                     l4294:
 13371  002C6A  5005               	movf	___fladd@a^0,w,c
 13372  002C6C  5E01               	subwf	___fladd@b^0,f,c
 13373  002C6E  5006               	movf	(___fladd@a+1)^0,w,c
 13374  002C70  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13375  002C72  5007               	movf	(___fladd@a+2)^0,w,c
 13376  002C74  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13377  002C76  5008               	movf	(___fladd@a+3)^0,w,c
 13378  002C78  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13379  002C7A                     l934:
 13380  002C7A  5001               	movf	___fladd@b^0,w,c
 13381  002C7C  1002               	iorwf	(___fladd@b+1)^0,w,c
 13382  002C7E  1003               	iorwf	(___fladd@b+2)^0,w,c
 13383  002C80  1004               	iorwf	(___fladd@b+3)^0,w,c
 13384  002C82  A4D8               	btfss	status,2,c
 13385  002C84  EF46  F016         	goto	u4301
 13386  002C88  EF48  F016         	goto	u4300
 13387  002C8C                     u4301:
 13388  002C8C  EF7D  F016         	goto	l4318
 13389  002C90                     u4300:
 13390  002C90  5010               	movf	___fladd@grs^0,w,c
 13391  002C92  A4D8               	btfss	status,2,c
 13392  002C94  EF4E  F016         	goto	u4311
 13393  002C98  EF50  F016         	goto	u4310
 13394  002C9C                     u4311:
 13395  002C9C  EF7D  F016         	goto	l4318
 13396  002CA0                     u4310:
 13397  002CA0  0E00               	movlw	0
 13398  002CA2  6E01               	movwf	?___fladd^0,c
 13399  002CA4  0E00               	movlw	0
 13400  002CA6  6E02               	movwf	(?___fladd+1)^0,c
 13401  002CA8  0E00               	movlw	0
 13402  002CAA  6E03               	movwf	(?___fladd+2)^0,c
 13403  002CAC  0E00               	movlw	0
 13404  002CAE  6E04               	movwf	(?___fladd+3)^0,c
 13405  002CB0  EF18  F017         	goto	l926
 13406  002CB4                     l4302:
 13407  002CB4  90D8               	bcf	status,0,c
 13408  002CB6  3601               	rlcf	___fladd@b^0,f,c
 13409  002CB8  3602               	rlcf	(___fladd@b+1)^0,f,c
 13410  002CBA  3603               	rlcf	(___fladd@b+2)^0,f,c
 13411  002CBC  3604               	rlcf	(___fladd@b+3)^0,f,c
 13412  002CBE  AE10               	btfss	___fladd@grs^0,7,c
 13413  002CC0  EF64  F016         	goto	u4321
 13414  002CC4  EF66  F016         	goto	u4320
 13415  002CC8                     u4321:
 13416  002CC8  EF67  F016         	goto	l4308
 13417  002CCC                     u4320:
 13418  002CCC  8001               	bsf	___fladd@b^0,0,c
 13419  002CCE                     l4308:
 13420  002CCE  A010               	btfss	___fladd@grs^0,0,c
 13421  002CD0  EF6C  F016         	goto	u4331
 13422  002CD4  EF6E  F016         	goto	u4330
 13423  002CD8                     u4331:
 13424  002CD8  EF72  F016         	goto	l4312
 13425  002CDC                     u4330:
 13426  002CDC  80D8               	bsf	status,0,c
 13427  002CDE  3610               	rlcf	___fladd@grs^0,f,c
 13428  002CE0  EF74  F016         	goto	l4314
 13429  002CE4                     l4312:
 13430  002CE4  90D8               	bcf	status,0,c
 13431  002CE6  3610               	rlcf	___fladd@grs^0,f,c
 13432  002CE8                     l4314:
 13433  002CE8  500F               	movf	___fladd@bexp^0,w,c
 13434  002CEA  B4D8               	btfsc	status,2,c
 13435  002CEC  EF7A  F016         	goto	u4341
 13436  002CF0  EF7C  F016         	goto	u4340
 13437  002CF4                     u4341:
 13438  002CF4  EF7D  F016         	goto	l4318
 13439  002CF8                     u4340:
 13440  002CF8  060F               	decf	___fladd@bexp^0,f,c
 13441  002CFA                     l4318:
 13442  002CFA  AE03               	btfss	(___fladd@b+2)^0,7,c
 13443  002CFC  EF82  F016         	goto	u4351
 13444  002D00  EF84  F016         	goto	u4350
 13445  002D04                     u4351:
 13446  002D04  EF5A  F016         	goto	l4302
 13447  002D08                     u4350:
 13448  002D08                     l4320:
 13449  002D08  0E00               	movlw	0
 13450  002D0A  6E0E               	movwf	___fladd@aexp^0,c
 13451  002D0C  AE10               	btfss	___fladd@grs^0,7,c
 13452  002D0E  EF8B  F016         	goto	u4361
 13453  002D12  EF8D  F016         	goto	u4360
 13454  002D16                     u4361:
 13455  002D16  EFA5  F016         	goto	l943
 13456  002D1A                     u4360:
 13457  002D1A  C010  F009         	movff	___fladd@grs,??___fladd
 13458  002D1E  0E7F               	movlw	127
 13459  002D20  1609               	andwf	??___fladd^0,f,c
 13460  002D22  B4D8               	btfsc	status,2,c
 13461  002D24  EF96  F016         	goto	u4371
 13462  002D28  EF98  F016         	goto	u4370
 13463  002D2C                     u4371:
 13464  002D2C  EF9C  F016         	goto	l944
 13465  002D30                     u4370:
 13466  002D30                     l4326:
 13467  002D30  0E01               	movlw	1
 13468  002D32  6E0E               	movwf	___fladd@aexp^0,c
 13469  002D34  EFA5  F016         	goto	l943
 13470  002D38                     l944:
 13471  002D38  A001               	btfss	___fladd@b^0,0,c
 13472  002D3A  EFA1  F016         	goto	u4381
 13473  002D3E  EFA3  F016         	goto	u4380
 13474  002D42                     u4381:
 13475  002D42  EFA5  F016         	goto	l943
 13476  002D46                     u4380:
 13477  002D46  EF98  F016         	goto	l4326
 13478  002D4A                     l943:
 13479  002D4A  500E               	movf	___fladd@aexp^0,w,c
 13480  002D4C  B4D8               	btfsc	status,2,c
 13481  002D4E  EFAB  F016         	goto	u4391
 13482  002D52  EFAD  F016         	goto	u4390
 13483  002D56                     u4391:
 13484  002D56  EFD8  F016         	goto	l4338
 13485  002D5A                     u4390:
 13486  002D5A  0E01               	movlw	1
 13487  002D5C  2601               	addwf	___fladd@b^0,f,c
 13488  002D5E  0E00               	movlw	0
 13489  002D60  2202               	addwfc	(___fladd@b+1)^0,f,c
 13490  002D62  2203               	addwfc	(___fladd@b+2)^0,f,c
 13491  002D64  2204               	addwfc	(___fladd@b+3)^0,f,c
 13492  002D66  A004               	btfss	(___fladd@b+3)^0,0,c
 13493  002D68  EFB8  F016         	goto	u4401
 13494  002D6C  EFBA  F016         	goto	u4400
 13495  002D70                     u4401:
 13496  002D70  EFD8  F016         	goto	l4338
 13497  002D74                     u4400:
 13498  002D74  C001  F009         	movff	___fladd@b,??___fladd
 13499  002D78  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13500  002D7C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13501  002D80  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13502  002D84  340C               	rlcf	(??___fladd+3)^0,w,c
 13503  002D86  320C               	rrcf	(??___fladd+3)^0,f,c
 13504  002D88  320B               	rrcf	(??___fladd+2)^0,f,c
 13505  002D8A  320A               	rrcf	(??___fladd+1)^0,f,c
 13506  002D8C  3209               	rrcf	??___fladd^0,f,c
 13507  002D8E  C009  F001         	movff	??___fladd,___fladd@b
 13508  002D92  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13509  002D96  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13510  002D9A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13511  002D9E  280F               	incf	___fladd@bexp^0,w,c
 13512  002DA0  B4D8               	btfsc	status,2,c
 13513  002DA2  EFD5  F016         	goto	u4411
 13514  002DA6  EFD7  F016         	goto	u4410
 13515  002DAA                     u4411:
 13516  002DAA  EFD8  F016         	goto	l4338
 13517  002DAE                     u4410:
 13518  002DAE  2A0F               	incf	___fladd@bexp^0,f,c
 13519  002DB0                     l4338:
 13520  002DB0  280F               	incf	___fladd@bexp^0,w,c
 13521  002DB2  B4D8               	btfsc	status,2,c
 13522  002DB4  EFDE  F016         	goto	u4421
 13523  002DB8  EFE0  F016         	goto	u4420
 13524  002DBC                     u4421:
 13525  002DBC  EFE8  F016         	goto	l4342
 13526  002DC0                     u4420:
 13527  002DC0  500F               	movf	___fladd@bexp^0,w,c
 13528  002DC2  A4D8               	btfss	status,2,c
 13529  002DC4  EFE6  F016         	goto	u4431
 13530  002DC8  EFE8  F016         	goto	u4430
 13531  002DCC                     u4431:
 13532  002DCC  EFFA  F016         	goto	l4346
 13533  002DD0                     u4430:
 13534  002DD0                     l4342:
 13535  002DD0  0E00               	movlw	0
 13536  002DD2  6E01               	movwf	___fladd@b^0,c
 13537  002DD4  0E00               	movlw	0
 13538  002DD6  6E02               	movwf	(___fladd@b+1)^0,c
 13539  002DD8  0E00               	movlw	0
 13540  002DDA  6E03               	movwf	(___fladd@b+2)^0,c
 13541  002DDC  0E00               	movlw	0
 13542  002DDE  6E04               	movwf	(___fladd@b+3)^0,c
 13543  002DE0  500F               	movf	___fladd@bexp^0,w,c
 13544  002DE2  A4D8               	btfss	status,2,c
 13545  002DE4  EFF6  F016         	goto	u4441
 13546  002DE8  EFF8  F016         	goto	u4440
 13547  002DEC                     u4441:
 13548  002DEC  EFFA  F016         	goto	l4346
 13549  002DF0                     u4440:
 13550  002DF0  0E00               	movlw	0
 13551  002DF2  6E0D               	movwf	___fladd@signs^0,c
 13552  002DF4                     l4346:
 13553  002DF4  A00F               	btfss	___fladd@bexp^0,0,c
 13554  002DF6  EFFF  F016         	goto	u4451
 13555  002DFA  EF01  F017         	goto	u4450
 13556  002DFE                     u4451:
 13557  002DFE  EF04  F017         	goto	l4350
 13558  002E02                     u4450:
 13559  002E02  8E03               	bsf	(___fladd@b+2)^0,7,c
 13560  002E04  EF05  F017         	goto	l4352
 13561  002E08                     l4350:
 13562  002E08  9E03               	bcf	(___fladd@b+2)^0,7,c
 13563  002E0A                     l4352:
 13564  002E0A  90D8               	bcf	status,0,c
 13565  002E0C  300F               	rrcf	___fladd@bexp^0,w,c
 13566  002E0E  6E04               	movwf	(___fladd@b+3)^0,c
 13567  002E10  AE0D               	btfss	___fladd@signs^0,7,c
 13568  002E12  EF0D  F017         	goto	u4461
 13569  002E16  EF0F  F017         	goto	u4460
 13570  002E1A                     u4461:
 13571  002E1A  EF10  F017         	goto	l4358
 13572  002E1E                     u4460:
 13573  002E1E  8E04               	bsf	(___fladd@b+3)^0,7,c
 13574  002E20                     l4358:
 13575  002E20  C001  F001         	movff	___fladd@b,?___fladd
 13576  002E24  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13577  002E28  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13578  002E2C  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13579  002E30                     l926:
 13580  002E30  0012               	return		;funcret
 13581  002E32                     __end_of___fladd:
 13582                           	callstack 0
 13583                           
 13584 ;; *************** function ___flmul *****************
 13585 ;; Defined at:
 13586 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13587 ;; Parameters:    Size  Location     Type
 13588 ;;  b               4   41[COMRAM] unsigned char 
 13589 ;;  a               4   45[COMRAM] unsigned char 
 13590 ;; Auto vars:     Size  Location     Type
 13591 ;;  prod            4   60[COMRAM] struct .
 13592 ;;  grs             4   54[COMRAM] unsigned long 
 13593 ;;  temp            2   64[COMRAM] struct .
 13594 ;;  bexp            1   59[COMRAM] unsigned char 
 13595 ;;  aexp            1   58[COMRAM] unsigned char 
 13596 ;;  sign            1   53[COMRAM] unsigned char 
 13597 ;; Return value:  Size  Location     Type
 13598 ;;                  4   41[COMRAM] unsigned char 
 13599 ;; Registers used:
 13600 ;;		wreg, status,2, status,0, prodl, prodh
 13601 ;; Tracked objects:
 13602 ;;		On entry : 0/0
 13603 ;;		On exit  : 0/0
 13604 ;;		Unchanged: 0/0
 13605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13606 ;;      Params:         8       0       0       0       0       0       0       0       0
 13607 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13608 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13609 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13610 ;;Total ram usage:       25 bytes
 13611 ;; Hardware stack levels used: 1
 13612 ;; This function calls:
 13613 ;;		Nothing
 13614 ;; This function is called by:
 13615 ;;		_get_corriente_AC
 13616 ;;		_main
 13617 ;;		_efgtoa
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text56
 13622  002E32                     __ptext56:
 13623                           	callstack 0
 13624  002E32                     ___flmul:
 13625                           	callstack 25
 13626  002E32  502D               	movf	(___flmul@b+3)^0,w,c
 13627  002E34  0B80               	andlw	128
 13628  002E36  6E36               	movwf	___flmul@sign^0,c
 13629  002E38  502D               	movf	(___flmul@b+3)^0,w,c
 13630  002E3A  242D               	addwf	(___flmul@b+3)^0,w,c
 13631  002E3C  6E3C               	movwf	___flmul@bexp^0,c
 13632  002E3E  AE2C               	btfss	(___flmul@b+2)^0,7,c
 13633  002E40  EF24  F017         	goto	u4901
 13634  002E44  EF26  F017         	goto	u4900
 13635  002E48                     u4901:
 13636  002E48  EF27  F017         	goto	l4618
 13637  002E4C                     u4900:
 13638  002E4C  803C               	bsf	___flmul@bexp^0,0,c
 13639  002E4E                     l4618:
 13640  002E4E  503C               	movf	___flmul@bexp^0,w,c
 13641  002E50  B4D8               	btfsc	status,2,c
 13642  002E52  EF2D  F017         	goto	u4911
 13643  002E56  EF2F  F017         	goto	u4910
 13644  002E5A                     u4911:
 13645  002E5A  EF42  F017         	goto	l4626
 13646  002E5E                     u4910:
 13647  002E5E  283C               	incf	___flmul@bexp^0,w,c
 13648  002E60  A4D8               	btfss	status,2,c
 13649  002E62  EF35  F017         	goto	u4921
 13650  002E66  EF37  F017         	goto	u4920
 13651  002E6A                     u4921:
 13652  002E6A  EF3F  F017         	goto	l4624
 13653  002E6E                     u4920:
 13654  002E6E  0E00               	movlw	0
 13655  002E70  6E2A               	movwf	___flmul@b^0,c
 13656  002E72  0E00               	movlw	0
 13657  002E74  6E2B               	movwf	(___flmul@b+1)^0,c
 13658  002E76  0E00               	movlw	0
 13659  002E78  6E2C               	movwf	(___flmul@b+2)^0,c
 13660  002E7A  0E00               	movlw	0
 13661  002E7C  6E2D               	movwf	(___flmul@b+3)^0,c
 13662  002E7E                     l4624:
 13663  002E7E  8E2C               	bsf	(___flmul@b+2)^0,7,c
 13664  002E80  EF4A  F017         	goto	l4628
 13665  002E84                     l4626:
 13666  002E84  0E00               	movlw	0
 13667  002E86  6E2A               	movwf	___flmul@b^0,c
 13668  002E88  0E00               	movlw	0
 13669  002E8A  6E2B               	movwf	(___flmul@b+1)^0,c
 13670  002E8C  0E00               	movlw	0
 13671  002E8E  6E2C               	movwf	(___flmul@b+2)^0,c
 13672  002E90  0E00               	movlw	0
 13673  002E92  6E2D               	movwf	(___flmul@b+3)^0,c
 13674  002E94                     l4628:
 13675  002E94  5031               	movf	(___flmul@a+3)^0,w,c
 13676  002E96  0B80               	andlw	128
 13677  002E98  1A36               	xorwf	___flmul@sign^0,f,c
 13678  002E9A  5031               	movf	(___flmul@a+3)^0,w,c
 13679  002E9C  2431               	addwf	(___flmul@a+3)^0,w,c
 13680  002E9E  6E3B               	movwf	___flmul@aexp^0,c
 13681  002EA0  AE30               	btfss	(___flmul@a+2)^0,7,c
 13682  002EA2  EF55  F017         	goto	u4931
 13683  002EA6  EF57  F017         	goto	u4930
 13684  002EAA                     u4931:
 13685  002EAA  EF58  F017         	goto	l4636
 13686  002EAE                     u4930:
 13687  002EAE  803B               	bsf	___flmul@aexp^0,0,c
 13688  002EB0                     l4636:
 13689  002EB0  503B               	movf	___flmul@aexp^0,w,c
 13690  002EB2  B4D8               	btfsc	status,2,c
 13691  002EB4  EF5E  F017         	goto	u4941
 13692  002EB8  EF60  F017         	goto	u4940
 13693  002EBC                     u4941:
 13694  002EBC  EF73  F017         	goto	l4644
 13695  002EC0                     u4940:
 13696  002EC0  283B               	incf	___flmul@aexp^0,w,c
 13697  002EC2  A4D8               	btfss	status,2,c
 13698  002EC4  EF66  F017         	goto	u4951
 13699  002EC8  EF68  F017         	goto	u4950
 13700  002ECC                     u4951:
 13701  002ECC  EF70  F017         	goto	l4642
 13702  002ED0                     u4950:
 13703  002ED0  0E00               	movlw	0
 13704  002ED2  6E2E               	movwf	___flmul@a^0,c
 13705  002ED4  0E00               	movlw	0
 13706  002ED6  6E2F               	movwf	(___flmul@a+1)^0,c
 13707  002ED8  0E00               	movlw	0
 13708  002EDA  6E30               	movwf	(___flmul@a+2)^0,c
 13709  002EDC  0E00               	movlw	0
 13710  002EDE  6E31               	movwf	(___flmul@a+3)^0,c
 13711  002EE0                     l4642:
 13712  002EE0  8E30               	bsf	(___flmul@a+2)^0,7,c
 13713  002EE2  EF7B  F017         	goto	l1003
 13714  002EE6                     l4644:
 13715  002EE6  0E00               	movlw	0
 13716  002EE8  6E2E               	movwf	___flmul@a^0,c
 13717  002EEA  0E00               	movlw	0
 13718  002EEC  6E2F               	movwf	(___flmul@a+1)^0,c
 13719  002EEE  0E00               	movlw	0
 13720  002EF0  6E30               	movwf	(___flmul@a+2)^0,c
 13721  002EF2  0E00               	movlw	0
 13722  002EF4  6E31               	movwf	(___flmul@a+3)^0,c
 13723  002EF6                     l1003:
 13724  002EF6  503B               	movf	___flmul@aexp^0,w,c
 13725  002EF8  B4D8               	btfsc	status,2,c
 13726  002EFA  EF81  F017         	goto	u4961
 13727  002EFE  EF83  F017         	goto	u4960
 13728  002F02                     u4961:
 13729  002F02  EF8B  F017         	goto	l4648
 13730  002F06                     u4960:
 13731  002F06  503C               	movf	___flmul@bexp^0,w,c
 13732  002F08  A4D8               	btfss	status,2,c
 13733  002F0A  EF89  F017         	goto	u4971
 13734  002F0E  EF8B  F017         	goto	u4970
 13735  002F12                     u4971:
 13736  002F12  EF95  F017         	goto	l4652
 13737  002F16                     u4970:
 13738  002F16                     l4648:
 13739  002F16  0E00               	movlw	0
 13740  002F18  6E2A               	movwf	?___flmul^0,c
 13741  002F1A  0E00               	movlw	0
 13742  002F1C  6E2B               	movwf	(?___flmul+1)^0,c
 13743  002F1E  0E00               	movlw	0
 13744  002F20  6E2C               	movwf	(?___flmul+2)^0,c
 13745  002F22  0E00               	movlw	0
 13746  002F24  6E2D               	movwf	(?___flmul+3)^0,c
 13747  002F26  EF2D  F019         	goto	l1007
 13748  002F2A                     l4652:
 13749  002F2A  5030               	movf	(___flmul@a+2)^0,w,c
 13750  002F2C  022A               	mulwf	___flmul@b^0,c
 13751  002F2E  CFF3 F041          	movff	prodl,___flmul@temp
 13752  002F32  CFF4 F042          	movff	prodh,___flmul@temp+1
 13753  002F36  5041               	movf	___flmul@temp^0,w,c
 13754  002F38  6E37               	movwf	___flmul@grs^0,c
 13755  002F3A  6A38               	clrf	(___flmul@grs+1)^0,c
 13756  002F3C  6A39               	clrf	(___flmul@grs+2)^0,c
 13757  002F3E  6A3A               	clrf	(___flmul@grs+3)^0,c
 13758  002F40  5042               	movf	(___flmul@temp+1)^0,w,c
 13759  002F42  6E3D               	movwf	___flmul@prod^0,c
 13760  002F44  6A3E               	clrf	(___flmul@prod+1)^0,c
 13761  002F46  6A3F               	clrf	(___flmul@prod+2)^0,c
 13762  002F48  6A40               	clrf	(___flmul@prod+3)^0,c
 13763  002F4A  502F               	movf	(___flmul@a+1)^0,w,c
 13764  002F4C  022B               	mulwf	(___flmul@b+1)^0,c
 13765  002F4E  CFF3 F041          	movff	prodl,___flmul@temp
 13766  002F52  CFF4 F042          	movff	prodh,___flmul@temp+1
 13767  002F56  5041               	movf	___flmul@temp^0,w,c
 13768  002F58  2637               	addwf	___flmul@grs^0,f,c
 13769  002F5A  0E00               	movlw	0
 13770  002F5C  2238               	addwfc	(___flmul@grs+1)^0,f,c
 13771  002F5E  2239               	addwfc	(___flmul@grs+2)^0,f,c
 13772  002F60  223A               	addwfc	(___flmul@grs+3)^0,f,c
 13773  002F62  5042               	movf	(___flmul@temp+1)^0,w,c
 13774  002F64  263D               	addwf	___flmul@prod^0,f,c
 13775  002F66  0E00               	movlw	0
 13776  002F68  223E               	addwfc	(___flmul@prod+1)^0,f,c
 13777  002F6A  223F               	addwfc	(___flmul@prod+2)^0,f,c
 13778  002F6C  2240               	addwfc	(___flmul@prod+3)^0,f,c
 13779  002F6E  502E               	movf	___flmul@a^0,w,c
 13780  002F70  022C               	mulwf	(___flmul@b+2)^0,c
 13781  002F72  CFF3 F041          	movff	prodl,___flmul@temp
 13782  002F76  CFF4 F042          	movff	prodh,___flmul@temp+1
 13783  002F7A  5041               	movf	___flmul@temp^0,w,c
 13784  002F7C  2637               	addwf	___flmul@grs^0,f,c
 13785  002F7E  0E00               	movlw	0
 13786  002F80  2238               	addwfc	(___flmul@grs+1)^0,f,c
 13787  002F82  2239               	addwfc	(___flmul@grs+2)^0,f,c
 13788  002F84  223A               	addwfc	(___flmul@grs+3)^0,f,c
 13789  002F86  5042               	movf	(___flmul@temp+1)^0,w,c
 13790  002F88  263D               	addwf	___flmul@prod^0,f,c
 13791  002F8A  0E00               	movlw	0
 13792  002F8C  223E               	addwfc	(___flmul@prod+1)^0,f,c
 13793  002F8E  223F               	addwfc	(___flmul@prod+2)^0,f,c
 13794  002F90  2240               	addwfc	(___flmul@prod+3)^0,f,c
 13795  002F92  C039  F03A         	movff	___flmul@grs+2,___flmul@grs+3
 13796  002F96  C038  F039         	movff	___flmul@grs+1,___flmul@grs+2
 13797  002F9A  C037  F038         	movff	___flmul@grs,___flmul@grs+1
 13798  002F9E  6A37               	clrf	___flmul@grs^0,c
 13799  002FA0  502E               	movf	___flmul@a^0,w,c
 13800  002FA2  022B               	mulwf	(___flmul@b+1)^0,c
 13801  002FA4  CFF3 F041          	movff	prodl,___flmul@temp
 13802  002FA8  CFF4 F042          	movff	prodh,___flmul@temp+1
 13803  002FAC  5041               	movf	___flmul@temp^0,w,c
 13804  002FAE  2637               	addwf	___flmul@grs^0,f,c
 13805  002FB0  5042               	movf	(___flmul@temp+1)^0,w,c
 13806  002FB2  2238               	addwfc	(___flmul@grs+1)^0,f,c
 13807  002FB4  0E00               	movlw	0
 13808  002FB6  2239               	addwfc	(___flmul@grs+2)^0,f,c
 13809  002FB8  0E00               	movlw	0
 13810  002FBA  223A               	addwfc	(___flmul@grs+3)^0,f,c
 13811  002FBC  502F               	movf	(___flmul@a+1)^0,w,c
 13812  002FBE  022A               	mulwf	___flmul@b^0,c
 13813  002FC0  CFF3 F041          	movff	prodl,___flmul@temp
 13814  002FC4  CFF4 F042          	movff	prodh,___flmul@temp+1
 13815  002FC8  5041               	movf	___flmul@temp^0,w,c
 13816  002FCA  2637               	addwf	___flmul@grs^0,f,c
 13817  002FCC  5042               	movf	(___flmul@temp+1)^0,w,c
 13818  002FCE  2238               	addwfc	(___flmul@grs+1)^0,f,c
 13819  002FD0  0E00               	movlw	0
 13820  002FD2  2239               	addwfc	(___flmul@grs+2)^0,f,c
 13821  002FD4  0E00               	movlw	0
 13822  002FD6  223A               	addwfc	(___flmul@grs+3)^0,f,c
 13823  002FD8  C039  F03A         	movff	___flmul@grs+2,___flmul@grs+3
 13824  002FDC  C038  F039         	movff	___flmul@grs+1,___flmul@grs+2
 13825  002FE0  C037  F038         	movff	___flmul@grs,___flmul@grs+1
 13826  002FE4  6A37               	clrf	___flmul@grs^0,c
 13827  002FE6  502E               	movf	___flmul@a^0,w,c
 13828  002FE8  022A               	mulwf	___flmul@b^0,c
 13829  002FEA  CFF3 F041          	movff	prodl,___flmul@temp
 13830  002FEE  CFF4 F042          	movff	prodh,___flmul@temp+1
 13831  002FF2  5041               	movf	___flmul@temp^0,w,c
 13832  002FF4  2637               	addwf	___flmul@grs^0,f,c
 13833  002FF6  5042               	movf	(___flmul@temp+1)^0,w,c
 13834  002FF8  2238               	addwfc	(___flmul@grs+1)^0,f,c
 13835  002FFA  0E00               	movlw	0
 13836  002FFC  2239               	addwfc	(___flmul@grs+2)^0,f,c
 13837  002FFE  0E00               	movlw	0
 13838  003000  223A               	addwfc	(___flmul@grs+3)^0,f,c
 13839  003002  5030               	movf	(___flmul@a+2)^0,w,c
 13840  003004  022B               	mulwf	(___flmul@b+1)^0,c
 13841  003006  CFF3 F041          	movff	prodl,___flmul@temp
 13842  00300A  CFF4 F042          	movff	prodh,___flmul@temp+1
 13843  00300E  5041               	movf	___flmul@temp^0,w,c
 13844  003010  263D               	addwf	___flmul@prod^0,f,c
 13845  003012  5042               	movf	(___flmul@temp+1)^0,w,c
 13846  003014  223E               	addwfc	(___flmul@prod+1)^0,f,c
 13847  003016  0E00               	movlw	0
 13848  003018  223F               	addwfc	(___flmul@prod+2)^0,f,c
 13849  00301A  0E00               	movlw	0
 13850  00301C  2240               	addwfc	(___flmul@prod+3)^0,f,c
 13851  00301E  502F               	movf	(___flmul@a+1)^0,w,c
 13852  003020  022C               	mulwf	(___flmul@b+2)^0,c
 13853  003022  CFF3 F041          	movff	prodl,___flmul@temp
 13854  003026  CFF4 F042          	movff	prodh,___flmul@temp+1
 13855  00302A  5041               	movf	___flmul@temp^0,w,c
 13856  00302C  263D               	addwf	___flmul@prod^0,f,c
 13857  00302E  5042               	movf	(___flmul@temp+1)^0,w,c
 13858  003030  223E               	addwfc	(___flmul@prod+1)^0,f,c
 13859  003032  0E00               	movlw	0
 13860  003034  223F               	addwfc	(___flmul@prod+2)^0,f,c
 13861  003036  0E00               	movlw	0
 13862  003038  2240               	addwfc	(___flmul@prod+3)^0,f,c
 13863  00303A  5030               	movf	(___flmul@a+2)^0,w,c
 13864  00303C  022C               	mulwf	(___flmul@b+2)^0,c
 13865  00303E  CFF3 F041          	movff	prodl,___flmul@temp
 13866  003042  CFF4 F042          	movff	prodh,___flmul@temp+1
 13867  003046  5041               	movf	___flmul@temp^0,w,c
 13868  003048  6E32               	movwf	??___flmul^0,c
 13869  00304A  5042               	movf	(___flmul@temp+1)^0,w,c
 13870  00304C  6E33               	movwf	(??___flmul+1)^0,c
 13871  00304E  6A34               	clrf	(??___flmul+2)^0,c
 13872  003050  6A35               	clrf	(??___flmul+3)^0,c
 13873  003052  C034  F035         	movff	??___flmul+2,??___flmul+3
 13874  003056  C033  F034         	movff	??___flmul+1,??___flmul+2
 13875  00305A  C032  F033         	movff	??___flmul,??___flmul+1
 13876  00305E  6A32               	clrf	??___flmul^0,c
 13877  003060  5032               	movf	??___flmul^0,w,c
 13878  003062  263D               	addwf	___flmul@prod^0,f,c
 13879  003064  5033               	movf	(??___flmul+1)^0,w,c
 13880  003066  223E               	addwfc	(___flmul@prod+1)^0,f,c
 13881  003068  5034               	movf	(??___flmul+2)^0,w,c
 13882  00306A  223F               	addwfc	(___flmul@prod+2)^0,f,c
 13883  00306C  5035               	movf	(??___flmul+3)^0,w,c
 13884  00306E  2240               	addwfc	(___flmul@prod+3)^0,f,c
 13885  003070  C037  F032         	movff	___flmul@grs,??___flmul
 13886  003074  C038  F033         	movff	___flmul@grs+1,??___flmul+1
 13887  003078  C039  F034         	movff	___flmul@grs+2,??___flmul+2
 13888  00307C  C03A  F035         	movff	___flmul@grs+3,??___flmul+3
 13889  003080  0E19               	movlw	25
 13890  003082  EF48  F018         	goto	u4980
 13891  003086                     u4985:
 13892  003086  90D8               	bcf	status,0,c
 13893  003088  3235               	rrcf	(??___flmul+3)^0,f,c
 13894  00308A  3234               	rrcf	(??___flmul+2)^0,f,c
 13895  00308C  3233               	rrcf	(??___flmul+1)^0,f,c
 13896  00308E  3232               	rrcf	??___flmul^0,f,c
 13897  003090                     u4980:
 13898  003090  2EE8               	decfsz	wreg,f,c
 13899  003092  EF43  F018         	goto	u4985
 13900  003096  5032               	movf	??___flmul^0,w,c
 13901  003098  263D               	addwf	___flmul@prod^0,f,c
 13902  00309A  5033               	movf	(??___flmul+1)^0,w,c
 13903  00309C  223E               	addwfc	(___flmul@prod+1)^0,f,c
 13904  00309E  5034               	movf	(??___flmul+2)^0,w,c
 13905  0030A0  223F               	addwfc	(___flmul@prod+2)^0,f,c
 13906  0030A2  5035               	movf	(??___flmul+3)^0,w,c
 13907  0030A4  2240               	addwfc	(___flmul@prod+3)^0,f,c
 13908  0030A6  C039  F03A         	movff	___flmul@grs+2,___flmul@grs+3
 13909  0030AA  C038  F039         	movff	___flmul@grs+1,___flmul@grs+2
 13910  0030AE  C037  F038         	movff	___flmul@grs,___flmul@grs+1
 13911  0030B2  6A37               	clrf	___flmul@grs^0,c
 13912  0030B4  503B               	movf	___flmul@aexp^0,w,c
 13913  0030B6  C03C  F032         	movff	___flmul@bexp,??___flmul
 13914  0030BA  6A33               	clrf	(??___flmul+1)^0,c
 13915  0030BC  2632               	addwf	??___flmul^0,f,c
 13916  0030BE  0E00               	movlw	0
 13917  0030C0  2233               	addwfc	(??___flmul+1)^0,f,c
 13918  0030C2  0E82               	movlw	130
 13919  0030C4  2432               	addwf	??___flmul^0,w,c
 13920  0030C6  6E41               	movwf	___flmul@temp^0,c
 13921  0030C8  0EFF               	movlw	255
 13922  0030CA  2033               	addwfc	(??___flmul+1)^0,w,c
 13923  0030CC  6E42               	movwf	(___flmul@temp+1)^0,c
 13924  0030CE  EF7E  F018         	goto	l4700
 13925  0030D2                     l4694:
 13926  0030D2  90D8               	bcf	status,0,c
 13927  0030D4  363D               	rlcf	___flmul@prod^0,f,c
 13928  0030D6  363E               	rlcf	(___flmul@prod+1)^0,f,c
 13929  0030D8  363F               	rlcf	(___flmul@prod+2)^0,f,c
 13930  0030DA  3640               	rlcf	(___flmul@prod+3)^0,f,c
 13931  0030DC  AE3A               	btfss	(___flmul@grs+3)^0,7,c
 13932  0030DE  EF73  F018         	goto	u4991
 13933  0030E2  EF75  F018         	goto	u4990
 13934  0030E6                     u4991:
 13935  0030E6  EF76  F018         	goto	l1010
 13936  0030EA                     u4990:
 13937  0030EA  803D               	bsf	___flmul@prod^0,0,c
 13938  0030EC                     l1010:
 13939  0030EC  90D8               	bcf	status,0,c
 13940  0030EE  3637               	rlcf	___flmul@grs^0,f,c
 13941  0030F0  3638               	rlcf	(___flmul@grs+1)^0,f,c
 13942  0030F2  3639               	rlcf	(___flmul@grs+2)^0,f,c
 13943  0030F4  363A               	rlcf	(___flmul@grs+3)^0,f,c
 13944  0030F6  0641               	decf	___flmul@temp^0,f,c
 13945  0030F8  A0D8               	btfss	status,0,c
 13946  0030FA  0642               	decf	(___flmul@temp+1)^0,f,c
 13947  0030FC                     l4700:
 13948  0030FC  AE3F               	btfss	(___flmul@prod+2)^0,7,c
 13949  0030FE  EF83  F018         	goto	u5001
 13950  003102  EF85  F018         	goto	u5000
 13951  003106                     u5001:
 13952  003106  EF69  F018         	goto	l4694
 13953  00310A                     u5000:
 13954  00310A  0E00               	movlw	0
 13955  00310C  6E3B               	movwf	___flmul@aexp^0,c
 13956  00310E  AE3A               	btfss	(___flmul@grs+3)^0,7,c
 13957  003110  EF8C  F018         	goto	u5011
 13958  003114  EF8E  F018         	goto	u5010
 13959  003118                     u5011:
 13960  003118  EFB2  F018         	goto	l1012
 13961  00311C                     u5010:
 13962  00311C  0EFF               	movlw	255
 13963  00311E  1437               	andwf	___flmul@grs^0,w,c
 13964  003120  6E32               	movwf	??___flmul^0,c
 13965  003122  0EFF               	movlw	255
 13966  003124  1438               	andwf	(___flmul@grs+1)^0,w,c
 13967  003126  6E33               	movwf	(??___flmul+1)^0,c
 13968  003128  0EFF               	movlw	255
 13969  00312A  1439               	andwf	(___flmul@grs+2)^0,w,c
 13970  00312C  6E34               	movwf	(??___flmul+2)^0,c
 13971  00312E  0E7F               	movlw	127
 13972  003130  143A               	andwf	(___flmul@grs+3)^0,w,c
 13973  003132  6E35               	movwf	(??___flmul+3)^0,c
 13974  003134  5032               	movf	??___flmul^0,w,c
 13975  003136  1033               	iorwf	(??___flmul+1)^0,w,c
 13976  003138  1034               	iorwf	(??___flmul+2)^0,w,c
 13977  00313A  1035               	iorwf	(??___flmul+3)^0,w,c
 13978  00313C  B4D8               	btfsc	status,2,c
 13979  00313E  EFA3  F018         	goto	u5021
 13980  003142  EFA5  F018         	goto	u5020
 13981  003146                     u5021:
 13982  003146  EFA9  F018         	goto	l1013
 13983  00314A                     u5020:
 13984  00314A                     l4708:
 13985  00314A  0E01               	movlw	1
 13986  00314C  6E3B               	movwf	___flmul@aexp^0,c
 13987  00314E  EFB2  F018         	goto	l1012
 13988  003152                     l1013:
 13989  003152  A03D               	btfss	___flmul@prod^0,0,c
 13990  003154  EFAE  F018         	goto	u5031
 13991  003158  EFB0  F018         	goto	u5030
 13992  00315C                     u5031:
 13993  00315C  EFB2  F018         	goto	l1012
 13994  003160                     u5030:
 13995  003160  EFA5  F018         	goto	l4708
 13996  003164                     l1012:
 13997  003164  503B               	movf	___flmul@aexp^0,w,c
 13998  003166  B4D8               	btfsc	status,2,c
 13999  003168  EFB8  F018         	goto	u5041
 14000  00316C  EFBA  F018         	goto	u5040
 14001  003170                     u5041:
 14002  003170  EFDE  F018         	goto	l4720
 14003  003174                     u5040:
 14004  003174  0E01               	movlw	1
 14005  003176  263D               	addwf	___flmul@prod^0,f,c
 14006  003178  0E00               	movlw	0
 14007  00317A  223E               	addwfc	(___flmul@prod+1)^0,f,c
 14008  00317C  223F               	addwfc	(___flmul@prod+2)^0,f,c
 14009  00317E  2240               	addwfc	(___flmul@prod+3)^0,f,c
 14010  003180  A040               	btfss	(___flmul@prod+3)^0,0,c
 14011  003182  EFC5  F018         	goto	u5051
 14012  003186  EFC7  F018         	goto	u5050
 14013  00318A                     u5051:
 14014  00318A  EFDE  F018         	goto	l4720
 14015  00318E                     u5050:
 14016  00318E  C03D  F032         	movff	___flmul@prod,??___flmul
 14017  003192  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
 14018  003196  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
 14019  00319A  C040  F035         	movff	___flmul@prod+3,??___flmul+3
 14020  00319E  3435               	rlcf	(??___flmul+3)^0,w,c
 14021  0031A0  3235               	rrcf	(??___flmul+3)^0,f,c
 14022  0031A2  3234               	rrcf	(??___flmul+2)^0,f,c
 14023  0031A4  3233               	rrcf	(??___flmul+1)^0,f,c
 14024  0031A6  3232               	rrcf	??___flmul^0,f,c
 14025  0031A8  C032  F03D         	movff	??___flmul,___flmul@prod
 14026  0031AC  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
 14027  0031B0  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
 14028  0031B4  C035  F040         	movff	??___flmul+3,___flmul@prod+3
 14029  0031B8  4A41               	infsnz	___flmul@temp^0,f,c
 14030  0031BA  2A42               	incf	(___flmul@temp+1)^0,f,c
 14031  0031BC                     l4720:
 14032  0031BC  BE42               	btfsc	(___flmul@temp+1)^0,7,c
 14033  0031BE  EFE9  F018         	goto	u5061
 14034  0031C2  5042               	movf	(___flmul@temp+1)^0,w,c
 14035  0031C4  E108               	bnz	u5060
 14036  0031C6  2841               	incf	___flmul@temp^0,w,c
 14037  0031C8  A0D8               	btfss	status,0,c
 14038  0031CA  EFE9  F018         	goto	u5061
 14039  0031CE  EFEB  F018         	goto	u5060
 14040  0031D2                     u5061:
 14041  0031D2  EFF5  F018         	goto	l4724
 14042  0031D6                     u5060:
 14043  0031D6  0E00               	movlw	0
 14044  0031D8  6E3D               	movwf	___flmul@prod^0,c
 14045  0031DA  0E00               	movlw	0
 14046  0031DC  6E3E               	movwf	(___flmul@prod+1)^0,c
 14047  0031DE  0E80               	movlw	128
 14048  0031E0  6E3F               	movwf	(___flmul@prod+2)^0,c
 14049  0031E2  0E7F               	movlw	127
 14050  0031E4  6E40               	movwf	(___flmul@prod+3)^0,c
 14051  0031E6  EF23  F019         	goto	l4736
 14052  0031EA                     l4724:
 14053  0031EA  BE42               	btfsc	(___flmul@temp+1)^0,7,c
 14054  0031EC  EF02  F019         	goto	u5070
 14055  0031F0  5042               	movf	(___flmul@temp+1)^0,w,c
 14056  0031F2  E106               	bnz	u5071
 14057  0031F4  0441               	decf	___flmul@temp^0,w,c
 14058  0031F6  B0D8               	btfsc	status,0,c
 14059  0031F8  EF00  F019         	goto	u5071
 14060  0031FC  EF02  F019         	goto	u5070
 14061  003200                     u5071:
 14062  003200  EF0E  F019         	goto	l1020
 14063  003204                     u5070:
 14064  003204  0E00               	movlw	0
 14065  003206  6E3D               	movwf	___flmul@prod^0,c
 14066  003208  0E00               	movlw	0
 14067  00320A  6E3E               	movwf	(___flmul@prod+1)^0,c
 14068  00320C  0E00               	movlw	0
 14069  00320E  6E3F               	movwf	(___flmul@prod+2)^0,c
 14070  003210  0E00               	movlw	0
 14071  003212  6E40               	movwf	(___flmul@prod+3)^0,c
 14072  003214  0E00               	movlw	0
 14073  003216  6E36               	movwf	___flmul@sign^0,c
 14074  003218  EF23  F019         	goto	l4736
 14075  00321C                     l1020:
 14076  00321C  C041  F03C         	movff	___flmul@temp,___flmul@bexp
 14077  003220  0EFF               	movlw	255
 14078  003222  163D               	andwf	___flmul@prod^0,f,c
 14079  003224  0EFF               	movlw	255
 14080  003226  163E               	andwf	(___flmul@prod+1)^0,f,c
 14081  003228  0E7F               	movlw	127
 14082  00322A  163F               	andwf	(___flmul@prod+2)^0,f,c
 14083  00322C  0E00               	movlw	0
 14084  00322E  1640               	andwf	(___flmul@prod+3)^0,f,c
 14085  003230  A03C               	btfss	___flmul@bexp^0,0,c
 14086  003232  EF1D  F019         	goto	u5081
 14087  003236  EF1F  F019         	goto	u5080
 14088  00323A                     u5081:
 14089  00323A  EF20  F019         	goto	l4734
 14090  00323E                     u5080:
 14091  00323E  8E3F               	bsf	(___flmul@prod+2)^0,7,c
 14092  003240                     l4734:
 14093  003240  90D8               	bcf	status,0,c
 14094  003242  303C               	rrcf	___flmul@bexp^0,w,c
 14095  003244  6E40               	movwf	(___flmul@prod+3)^0,c
 14096  003246                     l4736:
 14097  003246  5036               	movf	___flmul@sign^0,w,c
 14098  003248  1240               	iorwf	(___flmul@prod+3)^0,f,c
 14099  00324A  C03D  F02A         	movff	___flmul@prod,?___flmul
 14100  00324E  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
 14101  003252  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
 14102  003256  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
 14103  00325A                     l1007:
 14104  00325A  0012               	return		;funcret
 14105  00325C                     __end_of___flmul:
 14106                           	callstack 0
 14107                           
 14108 ;; *************** function ___flge *****************
 14109 ;; Defined at:
 14110 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;  ff1             4   66[COMRAM] unsigned char 
 14113 ;;  ff2             4   70[COMRAM] unsigned char 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;		None               void
 14118 ;; Registers used:
 14119 ;;		wreg, status,2, status,0
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14125 ;;      Params:         8       0       0       0       0       0       0       0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14127 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14128 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14129 ;;Total ram usage:       12 bytes
 14130 ;; Hardware stack levels used: 1
 14131 ;; This function calls:
 14132 ;;		Nothing
 14133 ;; This function is called by:
 14134 ;;		_get_corriente_AC
 14135 ;;		_efgtoa
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text57
 14140  005040                     __ptext57:
 14141                           	callstack 0
 14142  005040                     ___flge:
 14143                           	callstack 25
 14144  005040  0E00               	movlw	0
 14145  005042  1443               	andwf	___flge@ff1^0,w,c
 14146  005044  6E4B               	movwf	??___flge^0,c
 14147  005046  0E00               	movlw	0
 14148  005048  1444               	andwf	(___flge@ff1+1)^0,w,c
 14149  00504A  6E4C               	movwf	(??___flge+1)^0,c
 14150  00504C  0E80               	movlw	128
 14151  00504E  1445               	andwf	(___flge@ff1+2)^0,w,c
 14152  005050  6E4D               	movwf	(??___flge+2)^0,c
 14153  005052  0E7F               	movlw	127
 14154  005054  1446               	andwf	(___flge@ff1+3)^0,w,c
 14155  005056  6E4E               	movwf	(??___flge+3)^0,c
 14156  005058  504B               	movf	??___flge^0,w,c
 14157  00505A  104C               	iorwf	(??___flge+1)^0,w,c
 14158  00505C  104D               	iorwf	(??___flge+2)^0,w,c
 14159  00505E  104E               	iorwf	(??___flge+3)^0,w,c
 14160  005060  A4D8               	btfss	status,2,c
 14161  005062  EF35  F028         	goto	u5241
 14162  005066  EF37  F028         	goto	u5240
 14163  00506A                     u5241:
 14164  00506A  EF3F  F028         	goto	l4848
 14165  00506E                     u5240:
 14166  00506E  0E00               	movlw	0
 14167  005070  6E43               	movwf	___flge@ff1^0,c
 14168  005072  0E00               	movlw	0
 14169  005074  6E44               	movwf	(___flge@ff1+1)^0,c
 14170  005076  0E00               	movlw	0
 14171  005078  6E45               	movwf	(___flge@ff1+2)^0,c
 14172  00507A  0E00               	movlw	0
 14173  00507C  6E46               	movwf	(___flge@ff1+3)^0,c
 14174  00507E                     l4848:
 14175  00507E  0E00               	movlw	0
 14176  005080  1447               	andwf	___flge@ff2^0,w,c
 14177  005082  6E4B               	movwf	??___flge^0,c
 14178  005084  0E00               	movlw	0
 14179  005086  1448               	andwf	(___flge@ff2+1)^0,w,c
 14180  005088  6E4C               	movwf	(??___flge+1)^0,c
 14181  00508A  0E80               	movlw	128
 14182  00508C  1449               	andwf	(___flge@ff2+2)^0,w,c
 14183  00508E  6E4D               	movwf	(??___flge+2)^0,c
 14184  005090  0E7F               	movlw	127
 14185  005092  144A               	andwf	(___flge@ff2+3)^0,w,c
 14186  005094  6E4E               	movwf	(??___flge+3)^0,c
 14187  005096  504B               	movf	??___flge^0,w,c
 14188  005098  104C               	iorwf	(??___flge+1)^0,w,c
 14189  00509A  104D               	iorwf	(??___flge+2)^0,w,c
 14190  00509C  104E               	iorwf	(??___flge+3)^0,w,c
 14191  00509E  A4D8               	btfss	status,2,c
 14192  0050A0  EF54  F028         	goto	u5251
 14193  0050A4  EF56  F028         	goto	u5250
 14194  0050A8                     u5251:
 14195  0050A8  EF5E  F028         	goto	l4852
 14196  0050AC                     u5250:
 14197  0050AC  0E00               	movlw	0
 14198  0050AE  6E47               	movwf	___flge@ff2^0,c
 14199  0050B0  0E00               	movlw	0
 14200  0050B2  6E48               	movwf	(___flge@ff2+1)^0,c
 14201  0050B4  0E00               	movlw	0
 14202  0050B6  6E49               	movwf	(___flge@ff2+2)^0,c
 14203  0050B8  0E00               	movlw	0
 14204  0050BA  6E4A               	movwf	(___flge@ff2+3)^0,c
 14205  0050BC                     l4852:
 14206  0050BC  AE46               	btfss	(___flge@ff1+3)^0,7,c
 14207  0050BE  EF63  F028         	goto	u5261
 14208  0050C2  EF65  F028         	goto	u5260
 14209  0050C6                     u5261:
 14210  0050C6  EF6E  F028         	goto	l4856
 14211  0050CA                     u5260:
 14212  0050CA  6C43               	negf	___flge@ff1^0,c
 14213  0050CC  1E44               	comf	(___flge@ff1+1)^0,f,c
 14214  0050CE  B0D8               	btfsc	status,0,c
 14215  0050D0  2A44               	incf	(___flge@ff1+1)^0,f,c
 14216  0050D2  1E45               	comf	(___flge@ff1+2)^0,f,c
 14217  0050D4  B0D8               	btfsc	status,0,c
 14218  0050D6  2A45               	incf	(___flge@ff1+2)^0,f,c
 14219  0050D8  0E80               	movlw	128
 14220  0050DA  5646               	subfwb	(___flge@ff1+3)^0,f,c
 14221  0050DC                     l4856:
 14222  0050DC  AE4A               	btfss	(___flge@ff2+3)^0,7,c
 14223  0050DE  EF73  F028         	goto	u5271
 14224  0050E2  EF75  F028         	goto	u5270
 14225  0050E6                     u5271:
 14226  0050E6  EF7E  F028         	goto	l654
 14227  0050EA                     u5270:
 14228  0050EA  6C47               	negf	___flge@ff2^0,c
 14229  0050EC  1E48               	comf	(___flge@ff2+1)^0,f,c
 14230  0050EE  B0D8               	btfsc	status,0,c
 14231  0050F0  2A48               	incf	(___flge@ff2+1)^0,f,c
 14232  0050F2  1E49               	comf	(___flge@ff2+2)^0,f,c
 14233  0050F4  B0D8               	btfsc	status,0,c
 14234  0050F6  2A49               	incf	(___flge@ff2+2)^0,f,c
 14235  0050F8  0E80               	movlw	128
 14236  0050FA  564A               	subfwb	(___flge@ff2+3)^0,f,c
 14237  0050FC                     l654:
 14238  0050FC  0E00               	movlw	0
 14239  0050FE  1A43               	xorwf	___flge@ff1^0,f,c
 14240  005100  0E00               	movlw	0
 14241  005102  1A44               	xorwf	(___flge@ff1+1)^0,f,c
 14242  005104  0E00               	movlw	0
 14243  005106  1A45               	xorwf	(___flge@ff1+2)^0,f,c
 14244  005108  0E80               	movlw	128
 14245  00510A  1A46               	xorwf	(___flge@ff1+3)^0,f,c
 14246  00510C  0E00               	movlw	0
 14247  00510E  1A47               	xorwf	___flge@ff2^0,f,c
 14248  005110  0E00               	movlw	0
 14249  005112  1A48               	xorwf	(___flge@ff2+1)^0,f,c
 14250  005114  0E00               	movlw	0
 14251  005116  1A49               	xorwf	(___flge@ff2+2)^0,f,c
 14252  005118  0E80               	movlw	128
 14253  00511A  1A4A               	xorwf	(___flge@ff2+3)^0,f,c
 14254  00511C  5047               	movf	___flge@ff2^0,w,c
 14255  00511E  5C43               	subwf	___flge@ff1^0,w,c
 14256  005120  5048               	movf	(___flge@ff2+1)^0,w,c
 14257  005122  5844               	subwfb	(___flge@ff1+1)^0,w,c
 14258  005124  5049               	movf	(___flge@ff2+2)^0,w,c
 14259  005126  5845               	subwfb	(___flge@ff1+2)^0,w,c
 14260  005128  504A               	movf	(___flge@ff2+3)^0,w,c
 14261  00512A  5846               	subwfb	(___flge@ff1+3)^0,w,c
 14262  00512C  B0D8               	btfsc	status,0,c
 14263  00512E  EF9B  F028         	goto	u5281
 14264  005132  EF9D  F028         	goto	u5280
 14265  005136                     u5281:
 14266  005136  EFA0  F028         	goto	l4862
 14267  00513A                     u5280:
 14268  00513A  90D8               	bcf	status,0,c
 14269  00513C  EFA1  F028         	goto	l659
 14270  005140                     l4862:
 14271  005140  80D8               	bsf	status,0,c
 14272  005142                     l659:
 14273  005142  0012               	return		;funcret
 14274  005144                     __end_of___flge:
 14275                           	callstack 0
 14276                           
 14277 ;; *************** function ___fldiv *****************
 14278 ;; Defined at:
 14279 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;  b               4   16[COMRAM] unsigned char 
 14282 ;;  a               4   20[COMRAM] unsigned char 
 14283 ;; Auto vars:     Size  Location     Type
 14284 ;;  grs             4   35[COMRAM] unsigned long 
 14285 ;;  rem             4   28[COMRAM] unsigned long 
 14286 ;;  new_exp         2   33[COMRAM] short 
 14287 ;;  aexp            1   40[COMRAM] unsigned char 
 14288 ;;  bexp            1   39[COMRAM] unsigned char 
 14289 ;;  sign            1   32[COMRAM] unsigned char 
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  4   16[COMRAM] unsigned char 
 14292 ;; Registers used:
 14293 ;;		wreg, status,2, status,0
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/0
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14299 ;;      Params:         8       0       0       0       0       0       0       0       0
 14300 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14301 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14302 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14303 ;;Total ram usage:       25 bytes
 14304 ;; Hardware stack levels used: 1
 14305 ;; This function calls:
 14306 ;;		Nothing
 14307 ;; This function is called by:
 14308 ;;		_get_corriente_AC
 14309 ;;		_efgtoa
 14310 ;; This function uses a non-reentrant model
 14311 ;;
 14312                           
 14313                           	psect	text58
 14314  00325C                     __ptext58:
 14315                           	callstack 0
 14316  00325C                     ___fldiv:
 14317                           	callstack 25
 14318  00325C  5014               	movf	(___fldiv@b+3)^0,w,c
 14319  00325E  0B80               	andlw	128
 14320  003260  6E21               	movwf	___fldiv@sign^0,c
 14321  003262  5014               	movf	(___fldiv@b+3)^0,w,c
 14322  003264  2414               	addwf	(___fldiv@b+3)^0,w,c
 14323  003266  6E28               	movwf	___fldiv@bexp^0,c
 14324  003268  AE13               	btfss	(___fldiv@b+2)^0,7,c
 14325  00326A  EF39  F019         	goto	u4671
 14326  00326E  EF3B  F019         	goto	u4670
 14327  003272                     u4671:
 14328  003272  EF3C  F019         	goto	l4480
 14329  003276                     u4670:
 14330  003276  8028               	bsf	___fldiv@bexp^0,0,c
 14331  003278                     l4480:
 14332  003278  5028               	movf	___fldiv@bexp^0,w,c
 14333  00327A  B4D8               	btfsc	status,2,c
 14334  00327C  EF42  F019         	goto	u4681
 14335  003280  EF44  F019         	goto	u4680
 14336  003284                     u4681:
 14337  003284  EF59  F019         	goto	l4490
 14338  003288                     u4680:
 14339  003288  2828               	incf	___fldiv@bexp^0,w,c
 14340  00328A  A4D8               	btfss	status,2,c
 14341  00328C  EF4A  F019         	goto	u4691
 14342  003290  EF4C  F019         	goto	u4690
 14343  003294                     u4691:
 14344  003294  EF54  F019         	goto	l4486
 14345  003298                     u4690:
 14346  003298  0E00               	movlw	0
 14347  00329A  6E11               	movwf	___fldiv@b^0,c
 14348  00329C  0E00               	movlw	0
 14349  00329E  6E12               	movwf	(___fldiv@b+1)^0,c
 14350  0032A0  0E00               	movlw	0
 14351  0032A2  6E13               	movwf	(___fldiv@b+2)^0,c
 14352  0032A4  0E00               	movlw	0
 14353  0032A6  6E14               	movwf	(___fldiv@b+3)^0,c
 14354  0032A8                     l4486:
 14355  0032A8  8E13               	bsf	(___fldiv@b+2)^0,7,c
 14356  0032AA  0E00               	movlw	0
 14357  0032AC  6E14               	movwf	(___fldiv@b+3)^0,c
 14358  0032AE  EF61  F019         	goto	l4492
 14359  0032B2                     l4490:
 14360  0032B2  0E00               	movlw	0
 14361  0032B4  6E11               	movwf	___fldiv@b^0,c
 14362  0032B6  0E00               	movlw	0
 14363  0032B8  6E12               	movwf	(___fldiv@b+1)^0,c
 14364  0032BA  0E00               	movlw	0
 14365  0032BC  6E13               	movwf	(___fldiv@b+2)^0,c
 14366  0032BE  0E00               	movlw	0
 14367  0032C0  6E14               	movwf	(___fldiv@b+3)^0,c
 14368  0032C2                     l4492:
 14369  0032C2  5018               	movf	(___fldiv@a+3)^0,w,c
 14370  0032C4  0B80               	andlw	128
 14371  0032C6  1A21               	xorwf	___fldiv@sign^0,f,c
 14372  0032C8  5018               	movf	(___fldiv@a+3)^0,w,c
 14373  0032CA  2418               	addwf	(___fldiv@a+3)^0,w,c
 14374  0032CC  6E29               	movwf	___fldiv@aexp^0,c
 14375  0032CE  AE17               	btfss	(___fldiv@a+2)^0,7,c
 14376  0032D0  EF6C  F019         	goto	u4701
 14377  0032D4  EF6E  F019         	goto	u4700
 14378  0032D8                     u4701:
 14379  0032D8  EF6F  F019         	goto	l4500
 14380  0032DC                     u4700:
 14381  0032DC  8029               	bsf	___fldiv@aexp^0,0,c
 14382  0032DE                     l4500:
 14383  0032DE  5029               	movf	___fldiv@aexp^0,w,c
 14384  0032E0  B4D8               	btfsc	status,2,c
 14385  0032E2  EF75  F019         	goto	u4711
 14386  0032E6  EF77  F019         	goto	u4710
 14387  0032EA                     u4711:
 14388  0032EA  EF8C  F019         	goto	l4510
 14389  0032EE                     u4710:
 14390  0032EE  2829               	incf	___fldiv@aexp^0,w,c
 14391  0032F0  A4D8               	btfss	status,2,c
 14392  0032F2  EF7D  F019         	goto	u4721
 14393  0032F6  EF7F  F019         	goto	u4720
 14394  0032FA                     u4721:
 14395  0032FA  EF87  F019         	goto	l4506
 14396  0032FE                     u4720:
 14397  0032FE  0E00               	movlw	0
 14398  003300  6E15               	movwf	___fldiv@a^0,c
 14399  003302  0E00               	movlw	0
 14400  003304  6E16               	movwf	(___fldiv@a+1)^0,c
 14401  003306  0E00               	movlw	0
 14402  003308  6E17               	movwf	(___fldiv@a+2)^0,c
 14403  00330A  0E00               	movlw	0
 14404  00330C  6E18               	movwf	(___fldiv@a+3)^0,c
 14405  00330E                     l4506:
 14406  00330E  8E17               	bsf	(___fldiv@a+2)^0,7,c
 14407  003310  0E00               	movlw	0
 14408  003312  6E18               	movwf	(___fldiv@a+3)^0,c
 14409  003314  EF94  F019         	goto	l4512
 14410  003318                     l4510:
 14411  003318  0E00               	movlw	0
 14412  00331A  6E15               	movwf	___fldiv@a^0,c
 14413  00331C  0E00               	movlw	0
 14414  00331E  6E16               	movwf	(___fldiv@a+1)^0,c
 14415  003320  0E00               	movlw	0
 14416  003322  6E17               	movwf	(___fldiv@a+2)^0,c
 14417  003324  0E00               	movlw	0
 14418  003326  6E18               	movwf	(___fldiv@a+3)^0,c
 14419  003328                     l4512:
 14420  003328  5015               	movf	___fldiv@a^0,w,c
 14421  00332A  1016               	iorwf	(___fldiv@a+1)^0,w,c
 14422  00332C  1017               	iorwf	(___fldiv@a+2)^0,w,c
 14423  00332E  1018               	iorwf	(___fldiv@a+3)^0,w,c
 14424  003330  A4D8               	btfss	status,2,c
 14425  003332  EF9D  F019         	goto	u4731
 14426  003336  EF9F  F019         	goto	u4730
 14427  00333A                     u4731:
 14428  00333A  EFB7  F019         	goto	l4524
 14429  00333E                     u4730:
 14430  00333E  0E00               	movlw	0
 14431  003340  6E11               	movwf	___fldiv@b^0,c
 14432  003342  0E00               	movlw	0
 14433  003344  6E12               	movwf	(___fldiv@b+1)^0,c
 14434  003346  0E00               	movlw	0
 14435  003348  6E13               	movwf	(___fldiv@b+2)^0,c
 14436  00334A  0E00               	movlw	0
 14437  00334C  6E14               	movwf	(___fldiv@b+3)^0,c
 14438  00334E  0E80               	movlw	128
 14439  003350  1213               	iorwf	(___fldiv@b+2)^0,f,c
 14440  003352  0E7F               	movlw	127
 14441  003354  1214               	iorwf	(___fldiv@b+3)^0,f,c
 14442  003356                     l4518:
 14443  003356  5021               	movf	___fldiv@sign^0,w,c
 14444  003358  1214               	iorwf	(___fldiv@b+3)^0,f,c
 14445  00335A  C011  F011         	movff	___fldiv@b,?___fldiv
 14446  00335E  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
 14447  003362  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
 14448  003366  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
 14449  00336A  EFFA  F01A         	goto	l971
 14450  00336E                     l4524:
 14451  00336E  5028               	movf	___fldiv@bexp^0,w,c
 14452  003370  A4D8               	btfss	status,2,c
 14453  003372  EFBD  F019         	goto	u4741
 14454  003376  EFBF  F019         	goto	u4740
 14455  00337A                     u4741:
 14456  00337A  EFC9  F019         	goto	l4532
 14457  00337E                     u4740:
 14458  00337E  0E00               	movlw	0
 14459  003380  6E11               	movwf	?___fldiv^0,c
 14460  003382  0E00               	movlw	0
 14461  003384  6E12               	movwf	(?___fldiv+1)^0,c
 14462  003386  0E00               	movlw	0
 14463  003388  6E13               	movwf	(?___fldiv+2)^0,c
 14464  00338A  0E00               	movlw	0
 14465  00338C  6E14               	movwf	(?___fldiv+3)^0,c
 14466  00338E  EFFA  F01A         	goto	l971
 14467  003392                     l4532:
 14468  003392  5029               	movf	___fldiv@aexp^0,w,c
 14469  003394  C028  F019         	movff	___fldiv@bexp,??___fldiv
 14470  003398  6A1A               	clrf	(??___fldiv+1)^0,c
 14471  00339A  5E19               	subwf	??___fldiv^0,f,c
 14472  00339C  0E00               	movlw	0
 14473  00339E  5A1A               	subwfb	(??___fldiv+1)^0,f,c
 14474  0033A0  0E7F               	movlw	127
 14475  0033A2  2419               	addwf	??___fldiv^0,w,c
 14476  0033A4  6E22               	movwf	___fldiv@new_exp^0,c
 14477  0033A6  0E00               	movlw	0
 14478  0033A8  201A               	addwfc	(??___fldiv+1)^0,w,c
 14479  0033AA  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 14480  0033AC  C011  F01D         	movff	___fldiv@b,___fldiv@rem
 14481  0033B0  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
 14482  0033B4  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
 14483  0033B8  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
 14484  0033BC  0E00               	movlw	0
 14485  0033BE  6E11               	movwf	___fldiv@b^0,c
 14486  0033C0  0E00               	movlw	0
 14487  0033C2  6E12               	movwf	(___fldiv@b+1)^0,c
 14488  0033C4  0E00               	movlw	0
 14489  0033C6  6E13               	movwf	(___fldiv@b+2)^0,c
 14490  0033C8  0E00               	movlw	0
 14491  0033CA  6E14               	movwf	(___fldiv@b+3)^0,c
 14492  0033CC  0E00               	movlw	0
 14493  0033CE  6E24               	movwf	___fldiv@grs^0,c
 14494  0033D0  0E00               	movlw	0
 14495  0033D2  6E25               	movwf	(___fldiv@grs+1)^0,c
 14496  0033D4  0E00               	movlw	0
 14497  0033D6  6E26               	movwf	(___fldiv@grs+2)^0,c
 14498  0033D8  0E00               	movlw	0
 14499  0033DA  6E27               	movwf	(___fldiv@grs+3)^0,c
 14500  0033DC  0E00               	movlw	0
 14501  0033DE  6E29               	movwf	___fldiv@aexp^0,c
 14502  0033E0  EF2A  F01A         	goto	l973
 14503  0033E4                     l4542:
 14504  0033E4  5029               	movf	___fldiv@aexp^0,w,c
 14505  0033E6  B4D8               	btfsc	status,2,c
 14506  0033E8  EFF8  F019         	goto	u4751
 14507  0033EC  EFFA  F019         	goto	u4750
 14508  0033F0                     u4751:
 14509  0033F0  EF11  F01A         	goto	l4550
 14510  0033F4                     u4750:
 14511  0033F4  90D8               	bcf	status,0,c
 14512  0033F6  361D               	rlcf	___fldiv@rem^0,f,c
 14513  0033F8  361E               	rlcf	(___fldiv@rem+1)^0,f,c
 14514  0033FA  361F               	rlcf	(___fldiv@rem+2)^0,f,c
 14515  0033FC  3620               	rlcf	(___fldiv@rem+3)^0,f,c
 14516  0033FE  90D8               	bcf	status,0,c
 14517  003400  3611               	rlcf	___fldiv@b^0,f,c
 14518  003402  3612               	rlcf	(___fldiv@b+1)^0,f,c
 14519  003404  3613               	rlcf	(___fldiv@b+2)^0,f,c
 14520  003406  3614               	rlcf	(___fldiv@b+3)^0,f,c
 14521  003408  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 14522  00340A  EF09  F01A         	goto	u4761
 14523  00340E  EF0B  F01A         	goto	u4760
 14524  003412                     u4761:
 14525  003412  EF0C  F01A         	goto	l976
 14526  003416                     u4760:
 14527  003416  8011               	bsf	___fldiv@b^0,0,c
 14528  003418                     l976:
 14529  003418  90D8               	bcf	status,0,c
 14530  00341A  3624               	rlcf	___fldiv@grs^0,f,c
 14531  00341C  3625               	rlcf	(___fldiv@grs+1)^0,f,c
 14532  00341E  3626               	rlcf	(___fldiv@grs+2)^0,f,c
 14533  003420  3627               	rlcf	(___fldiv@grs+3)^0,f,c
 14534  003422                     l4550:
 14535  003422  5015               	movf	___fldiv@a^0,w,c
 14536  003424  5C1D               	subwf	___fldiv@rem^0,w,c
 14537  003426  5016               	movf	(___fldiv@a+1)^0,w,c
 14538  003428  581E               	subwfb	(___fldiv@rem+1)^0,w,c
 14539  00342A  5017               	movf	(___fldiv@a+2)^0,w,c
 14540  00342C  581F               	subwfb	(___fldiv@rem+2)^0,w,c
 14541  00342E  5018               	movf	(___fldiv@a+3)^0,w,c
 14542  003430  5820               	subwfb	(___fldiv@rem+3)^0,w,c
 14543  003432  A0D8               	btfss	status,0,c
 14544  003434  EF1E  F01A         	goto	u4771
 14545  003438  EF20  F01A         	goto	u4770
 14546  00343C                     u4771:
 14547  00343C  EF29  F01A         	goto	l4556
 14548  003440                     u4770:
 14549  003440  8C27               	bsf	(___fldiv@grs+3)^0,6,c
 14550  003442  5015               	movf	___fldiv@a^0,w,c
 14551  003444  5E1D               	subwf	___fldiv@rem^0,f,c
 14552  003446  5016               	movf	(___fldiv@a+1)^0,w,c
 14553  003448  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
 14554  00344A  5017               	movf	(___fldiv@a+2)^0,w,c
 14555  00344C  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
 14556  00344E  5018               	movf	(___fldiv@a+3)^0,w,c
 14557  003450  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
 14558  003452                     l4556:
 14559  003452  2A29               	incf	___fldiv@aexp^0,f,c
 14560  003454                     l973:
 14561  003454  0E19               	movlw	25
 14562  003456  6429               	cpfsgt	___fldiv@aexp^0,c
 14563  003458  EF30  F01A         	goto	u4781
 14564  00345C  EF32  F01A         	goto	u4780
 14565  003460                     u4781:
 14566  003460  EFF2  F019         	goto	l4542
 14567  003464                     u4780:
 14568  003464  501D               	movf	___fldiv@rem^0,w,c
 14569  003466  101E               	iorwf	(___fldiv@rem+1)^0,w,c
 14570  003468  101F               	iorwf	(___fldiv@rem+2)^0,w,c
 14571  00346A  1020               	iorwf	(___fldiv@rem+3)^0,w,c
 14572  00346C  B4D8               	btfsc	status,2,c
 14573  00346E  EF3B  F01A         	goto	u4791
 14574  003472  EF3D  F01A         	goto	u4790
 14575  003476                     u4791:
 14576  003476  EF55  F01A         	goto	l4568
 14577  00347A                     u4790:
 14578  00347A  8024               	bsf	___fldiv@grs^0,0,c
 14579  00347C  EF55  F01A         	goto	l4568
 14580  003480                     l4562:
 14581  003480  90D8               	bcf	status,0,c
 14582  003482  3611               	rlcf	___fldiv@b^0,f,c
 14583  003484  3612               	rlcf	(___fldiv@b+1)^0,f,c
 14584  003486  3613               	rlcf	(___fldiv@b+2)^0,f,c
 14585  003488  3614               	rlcf	(___fldiv@b+3)^0,f,c
 14586  00348A  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 14587  00348C  EF4A  F01A         	goto	u4801
 14588  003490  EF4C  F01A         	goto	u4800
 14589  003494                     u4801:
 14590  003494  EF4D  F01A         	goto	l982
 14591  003498                     u4800:
 14592  003498  8011               	bsf	___fldiv@b^0,0,c
 14593  00349A                     l982:
 14594  00349A  90D8               	bcf	status,0,c
 14595  00349C  3624               	rlcf	___fldiv@grs^0,f,c
 14596  00349E  3625               	rlcf	(___fldiv@grs+1)^0,f,c
 14597  0034A0  3626               	rlcf	(___fldiv@grs+2)^0,f,c
 14598  0034A2  3627               	rlcf	(___fldiv@grs+3)^0,f,c
 14599  0034A4  0622               	decf	___fldiv@new_exp^0,f,c
 14600  0034A6  A0D8               	btfss	status,0,c
 14601  0034A8  0623               	decf	(___fldiv@new_exp+1)^0,f,c
 14602  0034AA                     l4568:
 14603  0034AA  AE13               	btfss	(___fldiv@b+2)^0,7,c
 14604  0034AC  EF5A  F01A         	goto	u4811
 14605  0034B0  EF5C  F01A         	goto	u4810
 14606  0034B4                     u4811:
 14607  0034B4  EF40  F01A         	goto	l4562
 14608  0034B8                     u4810:
 14609  0034B8  0E00               	movlw	0
 14610  0034BA  6E29               	movwf	___fldiv@aexp^0,c
 14611  0034BC  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 14612  0034BE  EF63  F01A         	goto	u4821
 14613  0034C2  EF65  F01A         	goto	u4820
 14614  0034C6                     u4821:
 14615  0034C6  EF89  F01A         	goto	l984
 14616  0034CA                     u4820:
 14617  0034CA  0EFF               	movlw	255
 14618  0034CC  1424               	andwf	___fldiv@grs^0,w,c
 14619  0034CE  6E19               	movwf	??___fldiv^0,c
 14620  0034D0  0EFF               	movlw	255
 14621  0034D2  1425               	andwf	(___fldiv@grs+1)^0,w,c
 14622  0034D4  6E1A               	movwf	(??___fldiv+1)^0,c
 14623  0034D6  0EFF               	movlw	255
 14624  0034D8  1426               	andwf	(___fldiv@grs+2)^0,w,c
 14625  0034DA  6E1B               	movwf	(??___fldiv+2)^0,c
 14626  0034DC  0E7F               	movlw	127
 14627  0034DE  1427               	andwf	(___fldiv@grs+3)^0,w,c
 14628  0034E0  6E1C               	movwf	(??___fldiv+3)^0,c
 14629  0034E2  5019               	movf	??___fldiv^0,w,c
 14630  0034E4  101A               	iorwf	(??___fldiv+1)^0,w,c
 14631  0034E6  101B               	iorwf	(??___fldiv+2)^0,w,c
 14632  0034E8  101C               	iorwf	(??___fldiv+3)^0,w,c
 14633  0034EA  B4D8               	btfsc	status,2,c
 14634  0034EC  EF7A  F01A         	goto	u4831
 14635  0034F0  EF7C  F01A         	goto	u4830
 14636  0034F4                     u4831:
 14637  0034F4  EF80  F01A         	goto	l985
 14638  0034F8                     u4830:
 14639  0034F8                     l4576:
 14640  0034F8  0E01               	movlw	1
 14641  0034FA  6E29               	movwf	___fldiv@aexp^0,c
 14642  0034FC  EF89  F01A         	goto	l984
 14643  003500                     l985:
 14644  003500  A011               	btfss	___fldiv@b^0,0,c
 14645  003502  EF85  F01A         	goto	u4841
 14646  003506  EF87  F01A         	goto	u4840
 14647  00350A                     u4841:
 14648  00350A  EF89  F01A         	goto	l984
 14649  00350E                     u4840:
 14650  00350E  EF7C  F01A         	goto	l4576
 14651  003512                     l984:
 14652  003512  5029               	movf	___fldiv@aexp^0,w,c
 14653  003514  B4D8               	btfsc	status,2,c
 14654  003516  EF8F  F01A         	goto	u4851
 14655  00351A  EF91  F01A         	goto	u4850
 14656  00351E                     u4851:
 14657  00351E  EFB5  F01A         	goto	l4588
 14658  003522                     u4850:
 14659  003522  0E01               	movlw	1
 14660  003524  2611               	addwf	___fldiv@b^0,f,c
 14661  003526  0E00               	movlw	0
 14662  003528  2212               	addwfc	(___fldiv@b+1)^0,f,c
 14663  00352A  2213               	addwfc	(___fldiv@b+2)^0,f,c
 14664  00352C  2214               	addwfc	(___fldiv@b+3)^0,f,c
 14665  00352E  A014               	btfss	(___fldiv@b+3)^0,0,c
 14666  003530  EF9C  F01A         	goto	u4861
 14667  003534  EF9E  F01A         	goto	u4860
 14668  003538                     u4861:
 14669  003538  EFB5  F01A         	goto	l4588
 14670  00353C                     u4860:
 14671  00353C  C011  F019         	movff	___fldiv@b,??___fldiv
 14672  003540  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
 14673  003544  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
 14674  003548  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
 14675  00354C  341C               	rlcf	(??___fldiv+3)^0,w,c
 14676  00354E  321C               	rrcf	(??___fldiv+3)^0,f,c
 14677  003550  321B               	rrcf	(??___fldiv+2)^0,f,c
 14678  003552  321A               	rrcf	(??___fldiv+1)^0,f,c
 14679  003554  3219               	rrcf	??___fldiv^0,f,c
 14680  003556  C019  F011         	movff	??___fldiv,___fldiv@b
 14681  00355A  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
 14682  00355E  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
 14683  003562  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
 14684  003566  4A22               	infsnz	___fldiv@new_exp^0,f,c
 14685  003568  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
 14686  00356A                     l4588:
 14687  00356A  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14688  00356C  EFC0  F01A         	goto	u4871
 14689  003570  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 14690  003572  E108               	bnz	u4870
 14691  003574  2822               	incf	___fldiv@new_exp^0,w,c
 14692  003576  A0D8               	btfss	status,0,c
 14693  003578  EFC0  F01A         	goto	u4871
 14694  00357C  EFC2  F01A         	goto	u4870
 14695  003580                     u4871:
 14696  003580  EFCD  F01A         	goto	l4592
 14697  003584                     u4870:
 14698  003584  0E00               	movlw	0
 14699  003586  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 14700  003588  6822               	setf	___fldiv@new_exp^0,c
 14701  00358A  0E00               	movlw	0
 14702  00358C  6E11               	movwf	___fldiv@b^0,c
 14703  00358E  0E00               	movlw	0
 14704  003590  6E12               	movwf	(___fldiv@b+1)^0,c
 14705  003592  0E00               	movlw	0
 14706  003594  6E13               	movwf	(___fldiv@b+2)^0,c
 14707  003596  0E00               	movlw	0
 14708  003598  6E14               	movwf	(___fldiv@b+3)^0,c
 14709  00359A                     l4592:
 14710  00359A  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14711  00359C  EFDA  F01A         	goto	u4880
 14712  0035A0  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 14713  0035A2  E106               	bnz	u4881
 14714  0035A4  0422               	decf	___fldiv@new_exp^0,w,c
 14715  0035A6  B0D8               	btfsc	status,0,c
 14716  0035A8  EFD8  F01A         	goto	u4881
 14717  0035AC  EFDA  F01A         	goto	u4880
 14718  0035B0                     u4881:
 14719  0035B0  EFE8  F01A         	goto	l4596
 14720  0035B4                     u4880:
 14721  0035B4  0E00               	movlw	0
 14722  0035B6  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 14723  0035B8  0E00               	movlw	0
 14724  0035BA  6E22               	movwf	___fldiv@new_exp^0,c
 14725  0035BC  0E00               	movlw	0
 14726  0035BE  6E11               	movwf	___fldiv@b^0,c
 14727  0035C0  0E00               	movlw	0
 14728  0035C2  6E12               	movwf	(___fldiv@b+1)^0,c
 14729  0035C4  0E00               	movlw	0
 14730  0035C6  6E13               	movwf	(___fldiv@b+2)^0,c
 14731  0035C8  0E00               	movlw	0
 14732  0035CA  6E14               	movwf	(___fldiv@b+3)^0,c
 14733  0035CC  0E00               	movlw	0
 14734  0035CE  6E21               	movwf	___fldiv@sign^0,c
 14735  0035D0                     l4596:
 14736  0035D0  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
 14737  0035D4  A028               	btfss	___fldiv@bexp^0,0,c
 14738  0035D6  EFEF  F01A         	goto	u4891
 14739  0035DA  EFF1  F01A         	goto	u4890
 14740  0035DE                     u4891:
 14741  0035DE  EFF4  F01A         	goto	l4602
 14742  0035E2                     u4890:
 14743  0035E2  8E13               	bsf	(___fldiv@b+2)^0,7,c
 14744  0035E4  EFF5  F01A         	goto	l4604
 14745  0035E8                     l4602:
 14746  0035E8  9E13               	bcf	(___fldiv@b+2)^0,7,c
 14747  0035EA                     l4604:
 14748  0035EA  90D8               	bcf	status,0,c
 14749  0035EC  3028               	rrcf	___fldiv@bexp^0,w,c
 14750  0035EE  6E14               	movwf	(___fldiv@b+3)^0,c
 14751  0035F0  EFAB  F019         	goto	l4518
 14752  0035F4                     l971:
 14753  0035F4  0012               	return		;funcret
 14754  0035F6                     __end_of___fldiv:
 14755                           	callstack 0
 14756                           
 14757 ;; *************** function _ADC_GetConversion *****************
 14758 ;; Defined at:
 14759 ;;		line 110 in file "mcc_generated_files/adc.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  channel         1    wreg     enum E4598
 14762 ;; Auto vars:     Size  Location     Type
 14763 ;;  channel         1    4[COMRAM] enum E4598
 14764 ;; Return value:  Size  Location     Type
 14765 ;;                  2    0[COMRAM] unsigned short 
 14766 ;; Registers used:
 14767 ;;		wreg, status,2, status,0
 14768 ;; Tracked objects:
 14769 ;;		On entry : 0/0
 14770 ;;		On exit  : 0/0
 14771 ;;		Unchanged: 0/0
 14772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14773 ;;      Params:         2       0       0       0       0       0       0       0       0
 14774 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14775 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14776 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14777 ;;Total ram usage:        5 bytes
 14778 ;; Hardware stack levels used: 1
 14779 ;; This function calls:
 14780 ;;		Nothing
 14781 ;; This function is called by:
 14782 ;;		_get_corriente_AC
 14783 ;; This function uses a non-reentrant model
 14784 ;;
 14785                           
 14786                           	psect	text59
 14787  005D90                     __ptext59:
 14788                           	callstack 0
 14789  005D90                     _ADC_GetConversion:
 14790                           	callstack 29
 14791                           
 14792                           ;incstack = 0
 14793                           ;ADC_GetConversion@channel stored from wreg
 14794  005D90  6E05               	movwf	ADC_GetConversion@channel^0,c
 14795  005D92                     
 14796                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
 14797  005D92  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 14798  005D96  4603               	rlncf	??_ADC_GetConversion^0,f,c
 14799  005D98  4603               	rlncf	??_ADC_GetConversion^0,f,c
 14800  005D9A  50C2               	movf	194,w,c	;volatile
 14801  005D9C  1803               	xorwf	??_ADC_GetConversion^0,w,c
 14802  005D9E  0B83               	andlw	-125
 14803  005DA0  1803               	xorwf	??_ADC_GetConversion^0,w,c
 14804  005DA2  6EC2               	movwf	194,c	;volatile
 14805  005DA4                     
 14806                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
 14807  005DA4  80C2               	bsf	194,0,c	;volatile
 14808  005DA6                     
 14809                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
 14810  005DA6  82C2               	bsf	194,1,c	;volatile
 14811  005DA8                     l202:
 14812                           
 14813                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
 14814  005DA8  B2C2               	btfsc	194,1,c	;volatile
 14815  005DAA  EFD9  F02E         	goto	u7691
 14816  005DAE  EFDB  F02E         	goto	u7690
 14817  005DB2                     u7691:
 14818  005DB2  EFD4  F02E         	goto	l202
 14819  005DB6                     u7690:
 14820  005DB6                     
 14821                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14822  005DB6  50C4               	movf	196,w,c	;volatile
 14823  005DB8  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
 14824  005DBA  6A03               	clrf	??_ADC_GetConversion^0,c
 14825  005DBC  50C3               	movf	195,w,c	;volatile
 14826  005DBE  2403               	addwf	??_ADC_GetConversion^0,w,c
 14827  005DC0  6E01               	movwf	?_ADC_GetConversion^0,c
 14828  005DC2  0E00               	movlw	0
 14829  005DC4  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 14830  005DC6  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
 14831  005DC8  0012               	return		;funcret
 14832  005DCA                     __end_of_ADC_GetConversion:
 14833                           	callstack 0
 14834                           
 14835 ;; *************** function _SYSTEM_Initialize *****************
 14836 ;; Defined at:
 14837 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14838 ;; Parameters:    Size  Location     Type
 14839 ;;		None
 14840 ;; Auto vars:     Size  Location     Type
 14841 ;;		None
 14842 ;; Return value:  Size  Location     Type
 14843 ;;                  1    wreg      void 
 14844 ;; Registers used:
 14845 ;;		wreg, status,2, status,0, cstack
 14846 ;; Tracked objects:
 14847 ;;		On entry : 0/0
 14848 ;;		On exit  : 0/0
 14849 ;;		Unchanged: 0/0
 14850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14851 ;;      Params:         0       0       0       0       0       0       0       0       0
 14852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14853 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14854 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14855 ;;Total ram usage:        0 bytes
 14856 ;; Hardware stack levels used: 1
 14857 ;; Hardware stack levels required when called: 2
 14858 ;; This function calls:
 14859 ;;		_ADC_Initialize
 14860 ;;		_CCP2_Initialize
 14861 ;;		_EUSART1_Initialize
 14862 ;;		_OSCILLATOR_Initialize
 14863 ;;		_PIN_MANAGER_Initialize
 14864 ;; This function is called by:
 14865 ;;		_main
 14866 ;; This function uses a non-reentrant model
 14867 ;;
 14868                           
 14869                           	psect	text60
 14870  00601C                     __ptext60:
 14871                           	callstack 0
 14872  00601C                     _SYSTEM_Initialize:
 14873                           	callstack 28
 14874  00601C                     
 14875                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 14876  00601C  EC85  F02F         	call	_PIN_MANAGER_Initialize	;wreg free
 14877                           
 14878                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 14879  006020  ECAF  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 14880                           
 14881                           ;mcc_generated_files/mcc.c: 55:     CCP2_Initialize();
 14882  006024  EC39  F030         	call	_CCP2_Initialize	;wreg free
 14883                           
 14884                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
 14885  006028  EC19  F030         	call	_ADC_Initialize	;wreg free
 14886  00602C                     
 14887                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 14888  00602C  EC8A  F02E         	call	_EUSART1_Initialize	;wreg free
 14889  006030  0012               	return		;funcret
 14890  006032                     __end_of_SYSTEM_Initialize:
 14891                           	callstack 0
 14892                           
 14893 ;; *************** function _PIN_MANAGER_Initialize *****************
 14894 ;; Defined at:
 14895 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;		None
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;		None
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  1    wreg      void 
 14902 ;; Registers used:
 14903 ;;		wreg, status,2
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14909 ;;      Params:         0       0       0       0       0       0       0       0       0
 14910 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14912 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14913 ;;Total ram usage:        0 bytes
 14914 ;; Hardware stack levels used: 1
 14915 ;; This function calls:
 14916 ;;		Nothing
 14917 ;; This function is called by:
 14918 ;;		_SYSTEM_Initialize
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           	psect	text61
 14923  005F0A                     __ptext61:
 14924                           	callstack 0
 14925  005F0A                     _PIN_MANAGER_Initialize:
 14926                           	callstack 29
 14927  005F0A                     
 14928                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 14929  005F0A  0E00               	movlw	0
 14930  005F0C  6E89               	movwf	137,c	;volatile
 14931                           
 14932                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 14933  005F0E  0E00               	movlw	0
 14934  005F10  6E8A               	movwf	138,c	;volatile
 14935                           
 14936                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 14937  005F12  0E00               	movlw	0
 14938  005F14  6E8B               	movwf	139,c	;volatile
 14939                           
 14940                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
 14941  005F16  0EC7               	movlw	199
 14942  005F18  6E92               	movwf	146,c	;volatile
 14943                           
 14944                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 14945  005F1A  0EFE               	movlw	254
 14946  005F1C  6E93               	movwf	147,c	;volatile
 14947                           
 14948                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
 14949  005F1E  0E87               	movlw	135
 14950  005F20  6E94               	movwf	148,c	;volatile
 14951                           
 14952                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
 14953  005F22  0E04               	movlw	4
 14954  005F24  010F               	movlb	15	; () banked
 14955  005F26  6F5D               	movwf	93,b	;volatile
 14956                           
 14957                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
 14958  005F28  0E3E               	movlw	62
 14959  005F2A  6F5C               	movwf	92,b	;volatile
 14960                           
 14961                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 14962  005F2C  0E07               	movlw	7
 14963  005F2E  6F5B               	movwf	91,b	;volatile
 14964                           
 14965                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 14966  005F30  0E00               	movlw	0
 14967  005F32  6E85               	movwf	133,c	;volatile
 14968  005F34                     
 14969                           ; BSR set to: 15
 14970                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
 14971  005F34  8EF1               	bsf	241,7,c	;volatile
 14972  005F36                     
 14973                           ; BSR set to: 15
 14974  005F36  0012               	return		;funcret
 14975  005F38                     __end_of_PIN_MANAGER_Initialize:
 14976                           	callstack 0
 14977                           
 14978 ;; *************** function _OSCILLATOR_Initialize *****************
 14979 ;; Defined at:
 14980 ;;		line 60 in file "mcc_generated_files/mcc.c"
 14981 ;; Parameters:    Size  Location     Type
 14982 ;;		None
 14983 ;; Auto vars:     Size  Location     Type
 14984 ;;		None
 14985 ;; Return value:  Size  Location     Type
 14986 ;;                  1    wreg      void 
 14987 ;; Registers used:
 14988 ;;		wreg, status,2
 14989 ;; Tracked objects:
 14990 ;;		On entry : 0/0
 14991 ;;		On exit  : 0/0
 14992 ;;		Unchanged: 0/0
 14993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14994 ;;      Params:         0       0       0       0       0       0       0       0       0
 14995 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14996 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14997 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14998 ;;Total ram usage:        0 bytes
 14999 ;; Hardware stack levels used: 1
 15000 ;; This function calls:
 15001 ;;		Nothing
 15002 ;; This function is called by:
 15003 ;;		_SYSTEM_Initialize
 15004 ;; This function uses a non-reentrant model
 15005 ;;
 15006                           
 15007                           	psect	text62
 15008  005F5E                     __ptext62:
 15009                           	callstack 0
 15010  005F5E                     _OSCILLATOR_Initialize:
 15011                           	callstack 29
 15012  005F5E                     
 15013                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
 15014  005F5E  0E70               	movlw	112
 15015  005F60  6ED3               	movwf	211,c	;volatile
 15016                           
 15017                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
 15018  005F62  0E00               	movlw	0
 15019  005F64  6ED2               	movwf	210,c	;volatile
 15020                           
 15021                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x80;
 15022  005F66  0E80               	movlw	128
 15023  005F68  6E9B               	movwf	155,c	;volatile
 15024                           
 15025                           ;mcc_generated_files/mcc.c: 69:     ACTCON = 0x00;
 15026  005F6A  0E00               	movlw	0
 15027  005F6C  6EB5               	movwf	181,c	;volatile
 15028  005F6E                     l126:
 15029                           
 15030                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
 15031  005F6E  AED2               	btfss	4050,7,c	;volatile
 15032  005F70  EFBC  F02F         	goto	u7681
 15033  005F74  EFBE  F02F         	goto	u7680
 15034  005F78                     u7681:
 15035  005F78  EFB7  F02F         	goto	l126
 15036  005F7C                     u7680:
 15037  005F7C  0012               	return		;funcret
 15038  005F7E                     __end_of_OSCILLATOR_Initialize:
 15039                           	callstack 0
 15040                           
 15041 ;; *************** function _EUSART1_Initialize *****************
 15042 ;; Defined at:
 15043 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;		None
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;		None
 15048 ;; Return value:  Size  Location     Type
 15049 ;;                  1    wreg      void 
 15050 ;; Registers used:
 15051 ;;		wreg, status,2, status,0, cstack
 15052 ;; Tracked objects:
 15053 ;;		On entry : 0/0
 15054 ;;		On exit  : 0/0
 15055 ;;		Unchanged: 0/0
 15056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15057 ;;      Params:         0       0       0       0       0       0       0       0       0
 15058 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15060 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15061 ;;Total ram usage:        0 bytes
 15062 ;; Hardware stack levels used: 1
 15063 ;; Hardware stack levels required when called: 1
 15064 ;; This function calls:
 15065 ;;		_EUSART1_SetErrorHandler
 15066 ;;		_EUSART1_SetFramingErrorHandler
 15067 ;;		_EUSART1_SetOverrunErrorHandler
 15068 ;; This function is called by:
 15069 ;;		_SYSTEM_Initialize
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073                           	psect	text63
 15074  005D14                     __ptext63:
 15075                           	callstack 0
 15076  005D14                     _EUSART1_Initialize:
 15077                           	callstack 28
 15078  005D14                     
 15079                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
 15080  005D14  0E08               	movlw	8
 15081  005D16  6EB8               	movwf	184,c	;volatile
 15082                           
 15083                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
 15084  005D18  0E90               	movlw	144
 15085  005D1A  6EAB               	movwf	171,c	;volatile
 15086                           
 15087                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
 15088  005D1C  0E24               	movlw	36
 15089  005D1E  6EAC               	movwf	172,c	;volatile
 15090                           
 15091                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xE1;
 15092  005D20  0EE1               	movlw	225
 15093  005D22  6EAF               	movwf	175,c	;volatile
 15094                           
 15095                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x04;
 15096  005D24  0E04               	movlw	4
 15097  005D26  6EB0               	movwf	176,c	;volatile
 15098  005D28                     
 15099                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 15100  005D28  0E00               	movlw	0
 15101  005D2A  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 15102  005D2C  0E00               	movlw	0
 15103  005D2E  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 15104  005D30  EC50  F030         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 15105  005D34                     
 15106                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 15107  005D34  0E00               	movlw	0
 15108  005D36  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 15109  005D38  0E00               	movlw	0
 15110  005D3A  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 15111  005D3C  EC4B  F030         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 15112  005D40                     
 15113                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 15114  005D40  0E00               	movlw	0
 15115  005D42  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 15116  005D44  0E00               	movlw	0
 15117  005D46  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 15118  005D48  EC55  F030         	call	_EUSART1_SetErrorHandler	;wreg free
 15119  005D4C                     
 15120                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 15121  005D4C  0E00               	movlw	0
 15122  005D4E  0100               	movlb	0	; () banked
 15123  005D50  6FFD               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 15124  005D52                     
 15125                           ; BSR set to: 0
 15126  005D52  0012               	return		;funcret
 15127  005D54                     __end_of_EUSART1_Initialize:
 15128                           	callstack 0
 15129                           
 15130 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 15131 ;; Defined at:
 15132 ;;		line 178 in file "mcc_generated_files/eusart1.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 15135 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  1    wreg      void 
 15140 ;; Registers used:
 15141 ;;		wreg, status,2, status,0
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15147 ;;      Params:         2       0       0       0       0       0       0       0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15150 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15151 ;;Total ram usage:        2 bytes
 15152 ;; Hardware stack levels used: 1
 15153 ;; This function calls:
 15154 ;;		Nothing
 15155 ;; This function is called by:
 15156 ;;		_EUSART1_Initialize
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160                           	psect	text64
 15161  006096                     __ptext64:
 15162                           	callstack 0
 15163  006096                     _EUSART1_SetOverrunErrorHandler:
 15164                           	callstack 28
 15165  006096                     
 15166                           ;mcc_generated_files/eusart1.c: 179:     EUSART1_OverrunErrorHandler = interruptHandler;
 15167  006096  C001  F158         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 15168  00609A  C002  F159         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 15169  00609E  0012               	return		;funcret
 15170  0060A0                     __end_of_EUSART1_SetOverrunErrorHandler:
 15171                           	callstack 0
 15172                           
 15173 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 15174 ;; Defined at:
 15175 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 15178 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 15179 ;; Auto vars:     Size  Location     Type
 15180 ;;		None
 15181 ;; Return value:  Size  Location     Type
 15182 ;;                  1    wreg      void 
 15183 ;; Registers used:
 15184 ;;		wreg, status,2, status,0
 15185 ;; Tracked objects:
 15186 ;;		On entry : 0/0
 15187 ;;		On exit  : 0/0
 15188 ;;		Unchanged: 0/0
 15189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15190 ;;      Params:         2       0       0       0       0       0       0       0       0
 15191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15193 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15194 ;;Total ram usage:        2 bytes
 15195 ;; Hardware stack levels used: 1
 15196 ;; This function calls:
 15197 ;;		Nothing
 15198 ;; This function is called by:
 15199 ;;		_EUSART1_Initialize
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           
 15203                           	psect	text65
 15204  0060A0                     __ptext65:
 15205                           	callstack 0
 15206  0060A0                     _EUSART1_SetFramingErrorHandler:
 15207                           	callstack 28
 15208  0060A0                     
 15209                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_FramingErrorHandler = interruptHandler;
 15210  0060A0  C001  F15A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 15211  0060A4  C002  F15B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 15212  0060A8  0012               	return		;funcret
 15213  0060AA                     __end_of_EUSART1_SetFramingErrorHandler:
 15214                           	callstack 0
 15215                           
 15216 ;; *************** function _EUSART1_SetErrorHandler *****************
 15217 ;; Defined at:
 15218 ;;		line 182 in file "mcc_generated_files/eusart1.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 15221 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 15222 ;; Auto vars:     Size  Location     Type
 15223 ;;		None
 15224 ;; Return value:  Size  Location     Type
 15225 ;;                  1    wreg      void 
 15226 ;; Registers used:
 15227 ;;		wreg, status,2, status,0
 15228 ;; Tracked objects:
 15229 ;;		On entry : 0/0
 15230 ;;		On exit  : 0/0
 15231 ;;		Unchanged: 0/0
 15232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15233 ;;      Params:         2       0       0       0       0       0       0       0       0
 15234 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15235 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15236 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15237 ;;Total ram usage:        2 bytes
 15238 ;; Hardware stack levels used: 1
 15239 ;; This function calls:
 15240 ;;		Nothing
 15241 ;; This function is called by:
 15242 ;;		_EUSART1_Initialize
 15243 ;; This function uses a non-reentrant model
 15244 ;;
 15245                           
 15246                           	psect	text66
 15247  0060AA                     __ptext66:
 15248                           	callstack 0
 15249  0060AA                     _EUSART1_SetErrorHandler:
 15250                           	callstack 28
 15251  0060AA                     
 15252                           ;mcc_generated_files/eusart1.c: 183:     EUSART1_ErrorHandler = interruptHandler;
 15253  0060AA  C001  F156         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 15254  0060AE  C002  F157         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 15255  0060B2  0012               	return		;funcret
 15256  0060B4                     __end_of_EUSART1_SetErrorHandler:
 15257                           	callstack 0
 15258                           
 15259 ;; *************** function _CCP2_Initialize *****************
 15260 ;; Defined at:
 15261 ;;		line 49 in file "mcc_generated_files/ccp2.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;		None
 15264 ;; Auto vars:     Size  Location     Type
 15265 ;;		None
 15266 ;; Return value:  Size  Location     Type
 15267 ;;                  1    wreg      void 
 15268 ;; Registers used:
 15269 ;;		wreg, status,2
 15270 ;; Tracked objects:
 15271 ;;		On entry : 0/0
 15272 ;;		On exit  : 0/0
 15273 ;;		Unchanged: 0/0
 15274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15275 ;;      Params:         0       0       0       0       0       0       0       0       0
 15276 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15277 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15278 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15279 ;;Total ram usage:        0 bytes
 15280 ;; Hardware stack levels used: 1
 15281 ;; This function calls:
 15282 ;;		Nothing
 15283 ;; This function is called by:
 15284 ;;		_SYSTEM_Initialize
 15285 ;; This function uses a non-reentrant model
 15286 ;;
 15287                           
 15288                           	psect	text67
 15289  006072                     __ptext67:
 15290                           	callstack 0
 15291  006072                     _CCP2_Initialize:
 15292                           	callstack 29
 15293  006072                     
 15294                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
 15295  006072  0E00               	movlw	0
 15296  006074  6E97               	movwf	151,c	;volatile
 15297                           
 15298                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
 15299  006076  0E00               	movlw	0
 15300  006078  6E90               	movwf	144,c	;volatile
 15301                           
 15302                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
 15303  00607A  0E00               	movlw	0
 15304  00607C  6E91               	movwf	145,c	;volatile
 15305  00607E  0012               	return		;funcret
 15306  006080                     __end_of_CCP2_Initialize:
 15307                           	callstack 0
 15308                           
 15309 ;; *************** function _ADC_Initialize *****************
 15310 ;; Defined at:
 15311 ;;		line 62 in file "mcc_generated_files/adc.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;		None
 15314 ;; Auto vars:     Size  Location     Type
 15315 ;;		None
 15316 ;; Return value:  Size  Location     Type
 15317 ;;                  1    wreg      void 
 15318 ;; Registers used:
 15319 ;;		wreg, status,2
 15320 ;; Tracked objects:
 15321 ;;		On entry : 0/0
 15322 ;;		On exit  : 0/0
 15323 ;;		Unchanged: 0/0
 15324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15325 ;;      Params:         0       0       0       0       0       0       0       0       0
 15326 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15327 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15328 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15329 ;;Total ram usage:        0 bytes
 15330 ;; Hardware stack levels used: 1
 15331 ;; This function calls:
 15332 ;;		Nothing
 15333 ;; This function is called by:
 15334 ;;		_SYSTEM_Initialize
 15335 ;; This function uses a non-reentrant model
 15336 ;;
 15337                           
 15338                           	psect	text68
 15339  006032                     __ptext68:
 15340                           	callstack 0
 15341  006032                     _ADC_Initialize:
 15342                           	callstack 29
 15343  006032                     
 15344                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
 15345  006032  0E00               	movlw	0
 15346  006034  6EC1               	movwf	193,c	;volatile
 15347                           
 15348                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
 15349  006036  0E87               	movlw	135
 15350  006038  6EC0               	movwf	192,c	;volatile
 15351                           
 15352                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
 15353  00603A  0E00               	movlw	0
 15354  00603C  6EC3               	movwf	195,c	;volatile
 15355                           
 15356                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 15357  00603E  0E00               	movlw	0
 15358  006040  6EC4               	movwf	196,c	;volatile
 15359                           
 15360                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
 15361  006042  0E01               	movlw	1
 15362  006044  6EC2               	movwf	194,c	;volatile
 15363  006046  0012               	return		;funcret
 15364  006048                     __end_of_ADC_Initialize:
 15365                           	callstack 0
 15366                           
 15367 ;; *************** function _EUSART1_Write_string *****************
 15368 ;; Defined at:
 15369 ;;		line 141 in file "mcc_generated_files/eusart1.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;  data            2    1[COMRAM] PTR const unsigned char 
 15372 ;;		 -> valor_string(28), 
 15373 ;; Auto vars:     Size  Location     Type
 15374 ;;		None
 15375 ;; Return value:  Size  Location     Type
 15376 ;;                  1    wreg      void 
 15377 ;; Registers used:
 15378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15379 ;; Tracked objects:
 15380 ;;		On entry : 0/0
 15381 ;;		On exit  : 0/0
 15382 ;;		Unchanged: 0/0
 15383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15384 ;;      Params:         2       0       0       0       0       0       0       0       0
 15385 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15386 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15387 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15388 ;;Total ram usage:        2 bytes
 15389 ;; Hardware stack levels used: 1
 15390 ;; Hardware stack levels required when called: 1
 15391 ;; This function calls:
 15392 ;;		_EUSART1_Write
 15393 ;; This function is called by:
 15394 ;;		_main
 15395 ;; This function uses a non-reentrant model
 15396 ;;
 15397                           
 15398                           	psect	text69
 15399  005EDA                     __ptext69:
 15400                           	callstack 0
 15401  005EDA                     _EUSART1_Write_string:
 15402                           	callstack 29
 15403  005EDA                     
 15404                           ;mcc_generated_files/eusart1.c: 141: void EUSART1_Write_string(const char* data);mcc_gen
      +                          erated_files/eusart1.c: 142: {;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
 15405  005EDA  EF78  F02F         	goto	l6344
 15406  005EDE                     l6340:
 15407                           
 15408                           ;mcc_generated_files/eusart1.c: 144:     {;mcc_generated_files/eusart1.c: 145:         E
      +                          USART1_Write(*data++);
 15409  005EDE  C002  FFD9         	movff	EUSART1_Write_string@data,fsr2l
 15410  005EE2  C003  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
 15411  005EE6  50DF               	movf	indf2,w,c
 15412  005EE8  EC24  F030         	call	_EUSART1_Write
 15413  005EEC  4A02               	infsnz	EUSART1_Write_string@data^0,f,c
 15414  005EEE  2A03               	incf	(EUSART1_Write_string@data+1)^0,f,c
 15415  005EF0                     l6344:
 15416                           
 15417                           ;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
 15418  005EF0  C002  FFD9         	movff	EUSART1_Write_string@data,fsr2l
 15419  005EF4  C003  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
 15420  005EF8  50DF               	movf	indf2,w,c
 15421  005EFA  A4D8               	btfss	status,2,c
 15422  005EFC  EF82  F02F         	goto	u7881
 15423  005F00  EF84  F02F         	goto	u7880
 15424  005F04                     u7881:
 15425  005F04  EF6F  F02F         	goto	l6340
 15426  005F08                     u7880:
 15427  005F08  0012               	return		;funcret
 15428  005F0A                     __end_of_EUSART1_Write_string:
 15429                           	callstack 0
 15430                           
 15431 ;; *************** function _EUSART1_Write *****************
 15432 ;; Defined at:
 15433 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 15434 ;; Parameters:    Size  Location     Type
 15435 ;;  txData          1    wreg     unsigned char 
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;  txData          1    0[COMRAM] unsigned char 
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  1    wreg      void 
 15440 ;; Registers used:
 15441 ;;		wreg
 15442 ;; Tracked objects:
 15443 ;;		On entry : 0/0
 15444 ;;		On exit  : 0/0
 15445 ;;		Unchanged: 0/0
 15446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15447 ;;      Params:         0       0       0       0       0       0       0       0       0
 15448 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15449 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15450 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15451 ;;Total ram usage:        1 bytes
 15452 ;; Hardware stack levels used: 1
 15453 ;; This function calls:
 15454 ;;		Nothing
 15455 ;; This function is called by:
 15456 ;;		_EUSART1_Write_string
 15457 ;;		_putch
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           	psect	text70
 15462  006048                     __ptext70:
 15463                           	callstack 0
 15464  006048                     _EUSART1_Write:
 15465                           	callstack 21
 15466                           
 15467                           ;incstack = 0
 15468                           ;EUSART1_Write@txData stored from wreg
 15469  006048  6E01               	movwf	EUSART1_Write@txData^0,c
 15470  00604A                     l67:
 15471                           
 15472                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 15473  00604A  A89E               	btfss	158,4,c	;volatile
 15474  00604C  EF2A  F030         	goto	u4031
 15475  006050  EF2C  F030         	goto	u4030
 15476  006054                     u4031:
 15477  006054  EF25  F030         	goto	l67
 15478  006058                     u4030:
 15479  006058                     
 15480                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 15481  006058  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 15482  00605C  0012               	return		;funcret
 15483  00605E                     __end_of_EUSART1_Write:
 15484                           	callstack 0
 15485                           
 15486                           	psect	rparam
 15487  0000                     
 15488                           	psect	idloc
 15489                           
 15490                           ;Config register IDLOC0 @ 0x200000
 15491                           ;	unspecified, using default values
 15492  200000                     	org	2097152
 15493  200000  FF                 	db	255
 15494                           
 15495                           ;Config register IDLOC1 @ 0x200001
 15496                           ;	unspecified, using default values
 15497  200001                     	org	2097153
 15498  200001  FF                 	db	255
 15499                           
 15500                           ;Config register IDLOC2 @ 0x200002
 15501                           ;	unspecified, using default values
 15502  200002                     	org	2097154
 15503  200002  FF                 	db	255
 15504                           
 15505                           ;Config register IDLOC3 @ 0x200003
 15506                           ;	unspecified, using default values
 15507  200003                     	org	2097155
 15508  200003  FF                 	db	255
 15509                           
 15510                           ;Config register IDLOC4 @ 0x200004
 15511                           ;	unspecified, using default values
 15512  200004                     	org	2097156
 15513  200004  FF                 	db	255
 15514                           
 15515                           ;Config register IDLOC5 @ 0x200005
 15516                           ;	unspecified, using default values
 15517  200005                     	org	2097157
 15518  200005  FF                 	db	255
 15519                           
 15520                           ;Config register IDLOC6 @ 0x200006
 15521                           ;	unspecified, using default values
 15522  200006                     	org	2097158
 15523  200006  FF                 	db	255
 15524                           
 15525                           ;Config register IDLOC7 @ 0x200007
 15526                           ;	unspecified, using default values
 15527  200007                     	org	2097159
 15528  200007  FF                 	db	255
 15529                           
 15530                           	psect	config
 15531                           
 15532                           ;Config register CONFIG1L @ 0x300000
 15533                           ;	PLL Selection
 15534                           ;	PLLSEL = PLL3X, 3x clock multiplier
 15535                           ;	PLL Enable Configuration bit
 15536                           ;	CFGPLLEN = ON, PLL Enabled
 15537                           ;	CPU System Clock Postscaler
 15538                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 15539                           ;	Low Speed USB mode with 48 MHz system clock
 15540                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
 15541  300000                     	org	3145728
 15542  300000  23                 	db	35
 15543                           
 15544                           ;Config register CONFIG1H @ 0x300001
 15545                           ;	Oscillator Selection
 15546                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
 15547                           ;	Primary Oscillator Shutdown
 15548                           ;	PCLKEN = ON, Primary oscillator enabled
 15549                           ;	Fail-Safe Clock Monitor
 15550                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15551                           ;	Internal/External Oscillator Switchover
 15552                           ;	IESO = OFF, Oscillator Switchover mode disabled
 15553  300001                     	org	3145729
 15554  300001  22                 	db	34
 15555                           
 15556                           ;Config register CONFIG2L @ 0x300002
 15557                           ;	Power-up Timer Enable
 15558                           ;	nPWRTEN = ON, Power up timer enabled
 15559                           ;	Brown-out Reset Enable
 15560                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 15561                           ;	Brown-out Reset Voltage
 15562                           ;	BORV = 190, BOR set to 1.9V nominal
 15563                           ;	Low-Power Brown-out Reset
 15564                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 15565  300002                     	org	3145730
 15566  300002  5E                 	db	94
 15567                           
 15568                           ;Config register CONFIG2H @ 0x300003
 15569                           ;	Watchdog Timer Enable bits
 15570                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 15571                           ;	Watchdog Timer Postscaler
 15572                           ;	WDTPS = 32768, 1:32768
 15573  300003                     	org	3145731
 15574  300003  3C                 	db	60
 15575                           
 15576                           ; Padding undefined space
 15577  300004                     	org	3145732
 15578  300004  FF                 	db	255
 15579                           
 15580                           ;Config register CONFIG3H @ 0x300005
 15581                           ;	CCP2 MUX bit
 15582                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 15583                           ;	PORTB A/D Enable bit
 15584                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15585                           ;	Timer3 Clock Input MUX bit
 15586                           ;	T3CMX = RC0, T3CKI function is on RC0
 15587                           ;	SDO Output MUX bit
 15588                           ;	SDOMX = RB3, SDO function is on RB3
 15589                           ;	Master Clear Reset Pin Enable
 15590                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 15591  300005                     	org	3145733
 15592  300005  D1                 	db	209
 15593                           
 15594                           ;Config register CONFIG4L @ 0x300006
 15595                           ;	Stack Full/Underflow Reset
 15596                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15597                           ;	Single-Supply ICSP Enable bit
 15598                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15599                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 15600                           ;	ICPRT = OFF, ICPORT disabled
 15601                           ;	Extended Instruction Set Enable bit
 15602                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 15603                           ;	Background Debugger Enable bit
 15604                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 15605  300006                     	org	3145734
 15606  300006  85                 	db	133
 15607                           
 15608                           ; Padding undefined space
 15609  300007                     	org	3145735
 15610  300007  FF                 	db	255
 15611                           
 15612                           ;Config register CONFIG5L @ 0x300008
 15613                           ;	Block 0 Code Protect
 15614                           ;	CP0 = OFF, Block 0 is not code-protected
 15615                           ;	Block 1 Code Protect
 15616                           ;	CP1 = OFF, Block 1 is not code-protected
 15617                           ;	Block 2 Code Protect
 15618                           ;	CP2 = OFF, Block 2 is not code-protected
 15619                           ;	Block 3 Code Protect
 15620                           ;	CP3 = OFF, Block 3 is not code-protected
 15621  300008                     	org	3145736
 15622  300008  0F                 	db	15
 15623                           
 15624                           ;Config register CONFIG5H @ 0x300009
 15625                           ;	Boot Block Code Protect
 15626                           ;	CPB = OFF, Boot block is not code-protected
 15627                           ;	Data EEPROM Code Protect
 15628                           ;	CPD = OFF, Data EEPROM is not code-protected
 15629  300009                     	org	3145737
 15630  300009  C0                 	db	192
 15631                           
 15632                           ;Config register CONFIG6L @ 0x30000A
 15633                           ;	Block 0 Write Protect
 15634                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 15635                           ;	Block 1 Write Protect
 15636                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 15637                           ;	Block 2 Write Protect
 15638                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 15639                           ;	Block 3 Write Protect
 15640                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 15641  30000A                     	org	3145738
 15642  30000A  0F                 	db	15
 15643                           
 15644                           ;Config register CONFIG6H @ 0x30000B
 15645                           ;	Configuration Registers Write Protect
 15646                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 15647                           ;	Boot Block Write Protect
 15648                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 15649                           ;	Data EEPROM Write Protect
 15650                           ;	WRTD = OFF, Data EEPROM is not write-protected
 15651  30000B                     	org	3145739
 15652  30000B  E0                 	db	224
 15653                           
 15654                           ;Config register CONFIG7L @ 0x30000C
 15655                           ;	Block 0 Table Read Protect
 15656                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 15657                           ;	Block 1 Table Read Protect
 15658                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 15659                           ;	Block 2 Table Read Protect
 15660                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 15661                           ;	Block 3 Table Read Protect
 15662                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 15663  30000C                     	org	3145740
 15664  30000C  0F                 	db	15
 15665                           
 15666                           ;Config register CONFIG7H @ 0x30000D
 15667                           ;	Boot Block Table Read Protect
 15668                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 15669  30000D                     	org	3145741
 15670  30000D  40                 	db	64
 15671                           tosu	equ	0xFFF
 15672                           tosh	equ	0xFFE
 15673                           tosl	equ	0xFFD
 15674                           stkptr	equ	0xFFC
 15675                           pclatu	equ	0xFFB
 15676                           pclath	equ	0xFFA
 15677                           pcl	equ	0xFF9
 15678                           tblptru	equ	0xFF8
 15679                           tblptrh	equ	0xFF7
 15680                           tblptrl	equ	0xFF6
 15681                           tablat	equ	0xFF5
 15682                           prodh	equ	0xFF4
 15683                           prodl	equ	0xFF3
 15684                           indf0	equ	0xFEF
 15685                           postinc0	equ	0xFEE
 15686                           postdec0	equ	0xFED
 15687                           preinc0	equ	0xFEC
 15688                           plusw0	equ	0xFEB
 15689                           fsr0h	equ	0xFEA
 15690                           fsr0l	equ	0xFE9
 15691                           wreg	equ	0xFE8
 15692                           indf1	equ	0xFE7
 15693                           postinc1	equ	0xFE6
 15694                           postdec1	equ	0xFE5
 15695                           preinc1	equ	0xFE4
 15696                           plusw1	equ	0xFE3
 15697                           fsr1h	equ	0xFE2
 15698                           fsr1l	equ	0xFE1
 15699                           bsr	equ	0xFE0
 15700                           indf2	equ	0xFDF
 15701                           postinc2	equ	0xFDE
 15702                           postdec2	equ	0xFDD
 15703                           preinc2	equ	0xFDC
 15704                           plusw2	equ	0xFDB
 15705                           fsr2h	equ	0xFDA
 15706                           fsr2l	equ	0xFD9
 15707                           status	equ	0xFD8

Data Sizes:
    Strings     95
    Constant    10
    Data        12
    BSS         245
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    143     159
    BANK1           256      0     241
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(BANK1[30]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), STR_106(CODE[3]), 
		 -> STR_101(CODE[4]), STR_97(CODE[4]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[4]), 
		 -> STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), STR_47(CODE[3]), 
		 -> STR_42(CODE[3]), STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), 
		 -> STR_24(CODE[4]), STR_20(CODE[4]), STR_8(CODE[3]), STR_6(CODE[6]), 
		 -> STR_4(CODE[3]), STR_2(CODE[6]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), STR_106(CODE[3]), 
		 -> STR_101(CODE[4]), STR_97(CODE[4]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[4]), 
		 -> STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), STR_47(CODE[3]), 
		 -> STR_42(CODE[3]), STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), 
		 -> STR_24(CODE[4]), STR_20(CODE[4]), STR_8(CODE[3]), STR_6(CODE[6]), 
		 -> STR_4(CODE[3]), STR_2(CODE[6]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 30
		 -> vfpfcnvrt@ct(BANK0[3]), STR_9(CODE[12]), NULL(NULL[0]), trama(BANK1[30]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 30
		 -> vfpfcnvrt@ct(BANK0[3]), STR_9(CODE[12]), NULL(NULL[0]), trama(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_snprintf(BANK0[2]), STR_8(CODE[3]), 
		 -> STR_6(CODE[6]), STR_4(CODE[3]), STR_2(CODE[6]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_snprintf(BANK0[2]), STR_8(CODE[3]), 
		 -> STR_6(CODE[6]), STR_4(CODE[3]), STR_2(CODE[6]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 28
		 -> valor_string(BANK1[28]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 28
		 -> valor_string(BANK1[28]), 

    S1379_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 28
		 -> valor_string(BANK1[28]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 28
		 -> valor_string(BANK1[28]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 28
		 -> valor_string(BANK1[28]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    valor_string	PTR unsigned char [14] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), trama(BANK1[30]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(2) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 28
		 -> valor_string(BANK1[28]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write
    _get_corriente_AC->___flge
    ___flsub->___flmul
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___fladd
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  102555
                                            141 BANK0      2     2      0
               _EUSART1_Write_string
                  _SYSTEM_Initialize
                            ___flmul
                   _get_corriente_AC
                    _nrF2401_init_RX
                   _nrf2401_haydatos
                     _nrf2401_recibe
                           _snprintf
                         _spi_s_init
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   80933
                                            129 BANK0     12     2     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           23    15      8   80553
                                            106 BANK0     23    15      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   79790
                                             98 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   79318
                                             90 COMRAM     4     4      0
                                             56 BANK0     42    36      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8975
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7635
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5433
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2703
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7080
                                             29 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   27316
                                             78 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             41 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8234
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6129
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     306
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2191
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2145
                                             11 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1790
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _nrf2401_recibe                                       1     1      0     165
                                              2 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (1) _nrf2401_haydatos                                     0     0      0     188
                         _get_Status
 ---------------------------------------------------------------------------------
 (2) _get_Status                                           0     0      0     188
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (3) _nrf2401_read                                         2     2      0     188
                                              2 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_read                                           2     2      0      72
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_RX                                      1     1      0    4020
                                              8 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              6     3      3     790
                                              2 COMRAM     6     3      3
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    1650
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1558
                                              2 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0      92
                                              2 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _spi_s_write                                          2     2      0      70
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_corriente_AC                                    15    11      4   13548
                                             78 COMRAM    15    11      4
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3481
                                             66 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3264
                                             41 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1094
                                             66 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                    _CCP2_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     143
                                              1 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___flmul
     ___fladd (ARG)
     ___fldiv (ARG)
       ___fladd (ARG)
     ___xxtofl (ARG)
   _get_corriente_AC
     _ADC_GetConversion
     ___fladd
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
       ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
     ___xxtofl
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _nrf2401_haydatos
     _get_Status
       _nrf2401_read
         _spi_s_read
         _spi_s_write
   _nrf2401_recibe
     _spi_s_read
     _spi_s_write
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _otoa
             _pad
           _stoa
             _fputc
             _strlen
           _strncmp
           _tolower
           _utoa
             ___lodiv
             ___lomod
             _pad
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _spi_s_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      F1       8       94.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      9F       5       99.4%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EF       6        0.0%
DATA                 0      0     1EF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 06 00:47:36 2022

                                             _I 014A                                    ___fldiv@aexp 0029  
                                  ___fldiv@bexp 0028                                    ___fldiv@sign 0021  
                                            l43 5D52                                              l70 605C  
                                            l82 6094                                              l67 604A  
                                            l76 5F08                                              l94 60A8  
                                            l97 609E                                    ___awdiv@sign 0006  
                                            _on 02F8                             ___wmul@multiplicand 0003  
                                           l100 60B2                                             l202 5DA8  
                                           l123 6030                                             l300 60BA  
                                           l205 5DC8                                             l126 5F6E  
                                           l129 5F7C                                             l313 5F9A  
                                           l156 5F36                                             l260 5B94  
                                           l262 5BBC                                             l255 5C02  
                                           l271 5FB6                                             l503 48EA  
                                           l168 607E                                             l265 5FD2  
                                           l249 601A                                             l258 5B80  
                                           l187 6046                                             l275 5C40  
                                           l291 5FEC                                             l268 6070  
                                           l276 5C48                                             l516 4BD4  
                                           l620 572C                                             l285 6004  
                                           l374 3E18                                             l294 5902  
                                           l633 57DC                                             l389 5F5C  
                                           l654 50FC                                             l663 5E70  
                                           l648 5886                                             l834 5330  
                                           l659 5142                                             l827 5310  
                                           l844 54D8                                             l917 2B60  
                                           l837 54B8                                             l934 2C7A  
                                           l926 2E30                                             l918 2B4E  
                                           l686 503E                                             l943 2D4A  
                                           l919 2B14                                             l944 2D38  
                                           l971 35F4                                             l973 3454  
                                           l982 349A                                             l959 5C8E  
                                           l984 3512                                             l976 3418  
                                           l985 3500                                             _abs 5CD4  
                                           _pad 55A4                                    ___awmod@sign 0006  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 003B                                    ___flmul@bexp 003C  
                                  ___flmul@sign 0036                                    ___flmul@temp 0041  
                                  ___flmul@prod 003D                                    ___fltol@exp1 000A  
                               _nrF2401_init_RX 5888                                            l1010 30EC  
                                          l1003 2EF6                                            l1020 321C  
                                          l1012 3164                                            l1013 3152  
                                          l1007 325A                                            l1051 450E  
                                          ?_abs 0013                                            l1044 4476  
                                          l1132 562C                                            l1212 2106  
                                          l1150 5408                                            l1134 5668  
                                          l1047 45D2                                            l1303 4A1E  
                                          l1240 2546                                            l1304 4A68  
                                          l1080 4DFE                                            l1145 5398  
                                          l1129 55EA                                            l1313 4064  
                                          l1058 456A                                            l1330 391A  
                                          l1323 422E                                            l1315 406C  
                                          l1075 4E1E                                            l1067 5ED8  
                                          l1148 53DA                                            l1156 3696  
                                          l1308 4A70                                            l1412 1148  
                                          l1158 369E                                            l1502 402A  
                                          l1351 3B4E                                            l1176 38D8  
                                          l1512 5D8E                                            l1328 3912  
                                          l1505 3F6E                                            l1353 3BB2  
                                          l1337 39B0                                            l1194 2970  
                                          l1274 4268                                            l1603 59BC  
                                          l1283 43B8                                            l1460 5D0A  
                                          l1532 5E38                                            l1276 4270  
                                          l1292 496C                                            l1444 595C  
                                          l1285 441E                                            l1621 5A22  
                                          l1445 5964                                            l1518 5EA8  
                                          l1526 5B26                                            l1294 4974  
                                          l1463 5D12                                            l1455 5240  
                                          l1367 095E                                            l4200 2A42  
                                          l5000 5238                                            l1608 59C4  
                                          l1616 5A1A                                            l1392 1D18  
                                          l1561 5A7E                                            l4210 2A7A  
                                          l4202 2A52                                            l1491 475A  
                                          l1547 55A2                                            l1555 5CD2  
                                          l1571 4F38                                            l1627 5E00  
                                          l4140 604A                                            l4220 2A8E  
                                          l4212 2A7E                                            l4204 2A64  
                                          l5100 53FC                                            l5020 3E3A  
                                          l5004 5A24                                            l5012 599C  
                                          l4142 6058                                            l4310 2CDC  
                                          l4302 2CB4                                            l4230 2AA2  
                                          l4222 2A92                                            l4214 2A82  
                                          l4206 2A72                                            l1494 4762  
                                          l4150 54FE                                            l5110 365E  
                                          l5030 3F22                                            l5022 3E90  
                                          l5006 5A34                                            l5014 59AE  
                                          l1567 5B74                                            l4312 2CE4  
                                          l4304 2CBE                                            l4320 2D08  
                                          l4240 2AB6                                            l4232 2AA6  
                                          l4224 2A96                                            l4216 2A86  
                                          l4208 2A76                                            l4160 2972  
                                          l4144 608E                                            l4152 5508  
                                          l4400 4796                                            l5120 36B8  
                                          l5112 366E                                            l5104 35F6  
                                          l5040 400A                                            l5032 3F5E  
                                          l5024 3EA4                                            l5008 5966  
                                          l4330 2D5A                                            l4322 2D0C  
                                          l4314 2CE8                                            l4306 2CCC  
                                          l4250 2B2E                                            l4242 2AE0  
                                          l4234 2AAA                                            l4226 2A9A  
                                          l4218 2A8A                                            l4170 29AE  
                                          l4162 297E                                            l4154 5526  
                                          l4146 54DA                                            l4410 47D8  
                                          l4402 479A                                            l5130 36E4  
                                          l5122 36C6                                            l5114 3670  
                                          l5106 3616                                            l5042 401A  
                                          l5026 3EB2                                            l5034 3F92  
                                          l5018 3E1A                                            l5210 1E80  
                                          l5202 1E30                                            l5050 59C6  
                                          l4500 32DE                                            l4340 2DC0  
                                          l4332 2D66                                            l4324 2D1A  
                                          l4316 2CF8                                            l4308 2CCE  
                                          l4260 2B6E                                            l4252 2B32  
                                          l4244 2AFC                                            l4236 2AAE  
                                          l4228 2A9E                                            l4180 29DE  
                                          l4172 29BE                                            l4164 298C  
                                          l5060 5E72                                            l4156 555C  
                                          l4148 54EC                                            l4420 4832  
                                          l4412 47F6                                            l4404 47A8  
                                          l5140 37F0                                            l5132 3766  
                                          l5124 36CC                                            l5116 368A  
                                          l5108 363E                                            l5036 3FCE  
                                          l5300 2224                                            l5220 1F04  
                                          l5204 1E42                                            l6004 150E  
                                          l4502 32EE                                            l4510 3318  
                                          l4350 2E08                                            l4342 2DD0  
                                          l4334 2D74                                            l4326 2D30  
                                          l4318 2CFA                                            l4270 2BB0  
                                          l4262 2B7E                                            l4254 2B40  
                                          l4246 2B0C                                            l4238 2AB2  
                                          l4190 2A08                                            l4182 29F0  
                                          l4174 29C0                                            l4166 298E  
                                          l5070 5B1C                                            l4422 4860  
                                          l4414 47FE                                            l4430 489A  
                                          l4406 47C8                                            l5150 3864  
                                          l5142 380E                                            l5134 376C  
                                          l5126 36D4                                            l5118 36A6  
                                          l5038 3FE2                                            l5310 230C  
                                          l5302 222C                                            l5222 1F16  
                                          l5206 1E5E                                            l5214 1EA8  
                                          l5046 5D54                                            l5054 59FC  
                                          l6110 1C2A                                            l6030 16B6  
                                          l6022 163C                                            l6006 1544  
                                          l6014 1590                                            l6200 5D4C  
                                          l4600 35E2                                            l4520 335A  
                                          l4512 3328                                            l4504 32FE  
                                          l4352 2E0A                                            l4344 2DF0  
                                          l4336 2DAE                                            l4280 2BDE  
                                          l4272 2BBE                                            l4256 2B42  
                                          l4248 2B22                                            l4192 2A18  
                                          l4184 29F2                                            l4168 299E  
                                          l4176 29C8                                            l5072 5B20  
                                          l5064 5AD6                                            l5080 5352  
                                          l4432 48AA                                            l4424 4880  
                                          l4416 4812                                            l4408 47CC  
                                          l4440 4A76                                            l5160 38A0  
                                          l5152 3874                                            l5144 3828  
                                          l5136 3772                                            l5128 36DE  
                                          l5400 2776                                            l5320 23CA  
                                          l5312 2340                                            l5304 223C  
                                          l5240 1FD2                                            l5224 1F32  
                                          l5216 1ECE                                            l5232 1F4E  
                                          l5208 1E76                                            l5056 5A0E  
                                          l6120 1CA0                                            l6112 1C3A  
                                          l6104 1B98                                            l6040 17A2  
                                          l6032 16EC                                            l6024 1660  
                                          l6016 15B4                                            l6008 157C  
                                          l6210 6032                                            l6202 5F0A  
                                          l4602 35E8                                            l4514 333E  
                                          l4506 330E                                            l4354 2E10  
                                          l4346 2DF4                                            l4338 2DB0  
                                          l4290 2C4A                                            l4282 2BE8  
                                          l4274 2BCA                                            l4266 2B92  
                                          l4258 2B4C                                            l4194 2A28  
                                          l4186 29F8                                            l4178 29D8  
                                          l5066 5ADA                                            l5090 5390  
                                          l5082 535E                                            l4434 48CA  
                                          l4426 4882                                            l4418 4820  
                                          l4450 4AD6                                            l4442 4A84  
                                          l4362 5C90                                            l4370 5B28  
                                          l5154 387A                                            l5162 38B0  
                                          l5146 3842                                            l5138 37D6  
                                          l5410 27BA                                            l5402 2788  
                                          l5330 2466                                            l5322 23E0  
                                          l5306 2250                                            l5314 2346  
                                          l5242 1FD8                                            l5250 20A0  
                                          l5234 1F68                                            l5170 1D34  
                                          l6122 1CAE                                            l6106 1BCE  
                                          l6034 1734                                            l6026 1696  
                                          l6018 1600                                            l6204 5F34  
                                          l6212 5D92                                            l4604 35EA  
                                          l4540 33DC                                            l4532 3392  
                                          l4516 334E                                            l4524 336E  
                                          l4508 3310                                            l4700 30FC  
                                          l4620 2E5E                                            l4612 2E32  
                                          l4356 2E1E                                            l4348 2E02  
                                          l4292 2C5A                                            l4276 2BCE  
                                          l4268 2BA2                                            l4284 2BEE  
                                          l4196 2A38                                            l4188 2A06  
                                          l5068 5AEE                                            l5092 53A4  
                                          l5084 536C                                            l5076 5332  
                                          l4428 4894                                            l4460 4B4C  
                                          l4452 4AF4                                            l4444 4AA4  
                                          l4364 5C9C                                            l4372 5B34  
                                          l5156 388C                                            l5148 3852  
                                          l4380 5E02                                            l5420 27FA  
                                          l5412 27CC                                            l5404 2796  
                                          l5332 24BC                                            l5340 250E  
                                          l5324 2412                                            l5316 2364  
                                          l5308 22B4                                            l5260 20E0  
                                          l5252 20B0                                            l5244 2032  
                                          l5180 1D80                                            l5172 1D42  
                                          l5500 433C                                            l6124 1CC2  
                                          l6108 1C04                                            l6150 6096  
                                          l6206 5F5E                                            l6214 5DA4  
                                          l4550 3422                                            l4542 33E4  
                                          l4534 33AC                                            l4526 337E  
                                          l4518 3356                                            l4702 310A  
                                          l4630 2E9A                                            l4622 2E6E  
                                          l4614 2E3E                                            l4358 2E20  
                                          l4286 2C14                                            l4294 2C6A  
                                          l4278 2BDC                                            l4198 2A3A  
                                          l6222 5C04                                            l4390 5F54  
                                          l5094 53B8                                            l5086 537E  
                                          l5078 5346                                            l4470 4BB4  
                                          l4462 4B6C                                            l4454 4AFC  
                                          l4446 4AA8                                            l4438 4A72  
                                          l4366 5CAE                                            l4374 5B38  
                                          l5158 3898                                            l5430 2842  
                                          l5422 2802                                            l5414 27D4  
                                          l5406 27A6                                            l5350 25C6  
                                          l5342 251E                                            l5334 24C2  
                                          l5326 2422                                            l5318 2398  
                                          l5270 2124                                            l5262 20FA  
                                          l5254 20B4                                            l5246 2066  
                                          l5238 1F9E                                            l5190 1DC6  
                                          l5182 1D92                                            l5174 1D4A  
                                          l5166 1D1A                                            l5510 43C8  
                                          l5502 4356                                            l6118 1C7C  
                                          l6070 1992                                            l6062 18F0  
                                          l6054 1868                                            l6046 17F4  
                                          l6038 176C                                            l6134 1CE2  
                                          l6310 4D72                                            l6302 4D2C  
                                          ?_pad 0013                                            l6208 6072  
                                          l6152 60AA                                            l6216 5DA6  
                                          l4560 347A                                            l4552 3440  
                                          l4544 33F4                                            l4536 33BC  
                                          l4528 337E                                            l4480 3278  
                                          l4712 3174                                            l4720 31BC  
                                          l4704 310E                                            l4640 2ED0  
                                          l4632 2EA0                                            l4624 2E7E  
                                          l4616 2E4C                                            l4296 2C90  
                                          l4288 2C48                                            l6160 5FCC  
                                          l6232 5C12                                            l6224 5C06  
                                          l6400 5F92                                            l5096 53BC  
                                          l4464 4B7E                                            l4456 4B10  
                                          l4448 4AB6                                            l4368 5CB2  
                                          l4376 5B68                                            l4800 574C  
                                          l5440 2898                                            l5432 285E  
                                          l5424 280A                                            l5416 27E4  
                                          l5408 27AA                                            l5352 25D6  
                                          l5360 2610                                            l5344 2532  
                                          l5336 24F6                                            l5328 2432  
                                          l5272 2136                                            l5280 2194  
                                          l5256 20C6                                            l5264 2112  
                                          l5248 206E                                            l5192 1DCA  
                                          l5184 1DA0                                            l5176 1D6E  
                                          l5168 1D24                                            l5512 43DA  
                                          l5504 4374                                            l4384 5DCA  
                                          l5600 38DA                                            l6136 1D06  
                                          l6128 1CD0                                            l6080 1A72  
                                          l6072 19CA                                            l6064 1926  
                                          l6056 189E                                            l6048 1818  
                                          l6320 4E06                                            l6312 4D96  
                                          l6304 4D4A                                            l6218 5DB6  
                                          l4570 34B8                                            l4562 3480  
                                          l4554 3442                                            l4546 3408  
                                          l4538 33CC                                            l4482 3288  
                                          l4490 32B2                                            l4474 325C  
                                          l4730 3230                                            l4722 31D6  
                                          l4714 3180                                            l4706 311C  
                                          l4642 2EE0                                            l4634 2EAE  
                                          l4626 2E84                                            l4618 2E4E  
                                          l4298 2CA0                                            l6250 4432  
                                          l6410 3BB4                                            l6162 6060  
                                          l6154 5FBA                                            l6242 5FEE  
                                          l6234 5C2E                                            l6226 5C0E  
                                          l6170 5F9E                                            l5098 53EA  
                                          l4394 4764                                            l4458 4B1E  
                                          l4466 4B84                                            l4810 5784  
                                          l4802 575A                                            l5450 28D4  
                                          l5442 289E                                            l5434 2866  
                                          l5426 2816                                            l5418 27EC  
                                          l5370 264A                                            l5362 2622  
                                          l5354 25E8                                            l5346 253E  
                                          l5338 250A                                            l5290 21D2  
                                          l5282 219C                                            l5274 2152  
                                          l5258 20D8                                            l5194 1DCE  
                                          l5186 1DB2                                            l5178 1D78  
                                          l5514 43E0                                            l5506 438E  
                                          l5530 4920                                            l5522 48EC  
                                          l5610 3938                                            l5602 38EA  
                                          l6082 1A98                                            l6090 1AEA  
                                          l6066 195C                                            l6314 4DAA  
                                          l6322 4E16                                            l6306 4D56  
                                          l6340 5EDE                                            l6148 60A0  
                                          l4580 3522                                            l4572 34BC  
                                          l4564 348A                                            l4556 3452  
                                          l4548 3416                                            l4492 32C2  
                                          l4484 3298                                            l4476 3268  
                                          l4732 323E                                            l4724 31EA  
                                          l4716 318E                                            l4708 314A  
                                          l4660 2F62                                            l4652 2F2A  
                                          l4644 2EE6                                            l4636 2EB0  
                                          l4628 2E94                                            l6260 44B0  
                                          l6252 4440                                            l6420 3D1A  
                                          l6412 3BF2                                            l6164 6062  
                                          l6156 5FBC                                            l6236 5C30  
                                          l6180 5FAE                                            l6172 5F9E  
                                          l6244 60B4                                            l4388 5F38  
                                          l5700 472C                                            l4396 4768  
                                          l4468 4B94                                            l4812 5792  
                                          l4820 57BC                                            l4804 5762  
                                          l4900 4FDE                                            l5460 2926  
                                          l5452 28DA                                            l5444 28B0  
                                          l5428 281C                                            l5436 286C  
                                          l5372 2656                                            l5364 2630  
                                          l5380 2676                                            l5356 25FA  
                                          l5348 2562                                            l5292 21E4  
                                          l5284 21AE                                            l5276 2188  
                                          l5188 1DBE                                            l5196 1DD4  
                                          l5516 43F0                                            l5508 43A8  
                                          l5540 4998                                            l5532 4934  
                                          l5524 48FE                                            l5620 3978  
                                          l5612 3958                                            l5604 38EC  
                                          l6092 1B0E                                            l6084 1AA8  
                                          l6068 1982                                            l6076 1A06  
                                          l6316 4DB8                                            l6308 4D62  
                                          l6342 5EEC                                            l4590 3584  
                                          l4582 352E                                            l4574 34CA  
                                          l4566 3498                                            l4558 3464  
                                          l4494 32C8                                            l4486 32A8  
                                          l4478 3276                                            l4734 3240  
                                          l4726 3204                                            l4718 31B8  
                                          l4670 2FAC                                            l4662 2F7A  
                                          l4654 2F36                                            l4646 2F06  
                                          l4638 2EC0                                            l4742 5C4A  
                                          l6270 4504                                            l6262 44B8  
                                          l6254 4486                                            l6422 3D4C  
                                          l6414 3C00                                            l6430 3DA2  
                                          l6166 6068                                            l6158 5FCA  
                                          l6238 5C42                                            l6174 5FA0  
                                          l6406 5F98                                            l5702 473E  
                                          l4398 4776                                            l4750 566E  
                                          l4822 57CC                                            l4814 57A8  
                                          l4806 5774                                            l4830 580C  
                                          l4910 500E                                            l5462 2932  
                                          l5454 28E0                                            l5446 28BC  
                                          l5438 287E                                            l5390 26FC  
                                          l5382 2688                                            l5374 2666  
                                          l5366 2640                                            l5358 2608  
                                          l5294 21F2                                            l5286 21C0  
                                          l5278 2190                                            l5198 1DFA  
                                          l5518 43F6                                            l5550 49F8  
                                          l5542 49AC                                            l5534 493C  
                                          l5526 4906                                            l5710 4E4A  
                                          l5630 39F6                                            l5622 3994  
                                          l5614 3960                                            l5606 3906  
                                          l6094 1B32                                            l6078 1A3C  
                                          l6190 5940                                            l6318 4DEE  
                                          l6350 6006                                            l6344 5EF0  
                                          l6192 5D14                                            l4592 359A  
                                          l4584 353C                                            l4576 34F8  
                                          l4568 34AA                                            l4496 32CE  
                                          l4488 32AA                                            l4728 3220  
                                          l4736 3246                                            l4680 3002  
                                          l4672 2FBC                                            l4664 2F86  
                                          l4656 2F40                                            l4648 2F16  
                                          l4744 5C5A                                            l6280 457A  
                                          l6272 4540                                            l6264 44C4  
                                          l6256 449C                                            l6248 4422  
                                          l6432 3DC0                                            l6424 3D5C  
                                          l6416 3C46                                            l6168 606A  
                                          l6176 5FA6                                            l4760 569E  
                                          l4752 567C                                            l4824 57D4  
                                          l4816 57B0                                            l4808 577C  
                                          l4840 5884                                            l4832 581C  
                                          l4912 501E                                            l5464 293A  
                                          l5448 28C4                                            l5392 2730  
                                          l5384 269A                                            l5376 266A  
                                          l5368 2644                                            l5296 220A  
                                          l5288 21CE                                            l5480 425C  
                                          l5560 4A46                                            l5552 49FC  
                                          l5544 49B0                                            l5536 494A  
                                          l5528 4918                                            l5720 4EB0  
                                          l4920 524E                                            l5640 3A66  
                                          l5624 39A4                                            l5616 396A  
                                          l5608 3930                                            l6096 1B48  
                                          l5800 08E0                                            l6184 5904  
                                          l6338 5EDA                                            l6194 5D28  
                                          l6346 601C                                            l4594 35B4  
                                          l4586 3566                                            l4498 32DC  
                                          l4850 50AC                                            l4738 324A  
                                          l4690 30A6                                            l4682 301E  
                                          l4674 2FC8                                            l4666 2F92  
                                          l4658 2F56                                            l6290 45C2  
                                          l6282 457E                                            l6274 454C  
                                          l6266 44F6                                            l6426 3D8E  
                                          l6418 3CC2                                            l6178 5FAC  
                                          l4770 56CC                                            l4762 56A2  
                                          l4754 5684                                            l4818 57B6  
                                          l4834 584A                                            l4914 502E  
                                          l4906 4FF2                                            l5466 294A  
                                          l5458 2914                                            l5394 2738  
                                          l5386 269E                                            l5378 2670  
                                          l5298 221C                                            l5490 42B8  
                                          l5482 4298                                            l5474 4230  
                                          l5562 4A4A                                            l5554 4A00  
                                          l5546 49CE                                            l5722 4EC2  
                                          l5714 4E56                                            l4930 52A8  
                                          l4922 526C                                            l5570 4058  
                                          l5650 3B0A                                            l5642 3A6C  
                                          l5634 3A30                                            l5618 3970  
                                          l6098 1B56                                            l6186 590C  
                                          l6530 4BE8                                            l6522 4BD6  
                                          l6196 5D34                                            l6348 602C  
                                          l4596 35D0                                            l4588 356A  
                                          l4860 513A                                            l4852 50BC  
                                          l4844 5040                                            l4692 30B4  
                                          l4684 302A                                            l4676 2FD8  
                                          l4668 2FA0                                            l6284 45A2  
                                          l6276 455A                                            l6268 44F8  
                                          l6428 3D9E                                            l5740 5BD6  
                                          l6380 5FE2                                            l4780 5700  
                                          l4772 56DA                                            l4764 56AA  
                                          l4756 5688                                            l4748 566A  
                                          l4836 585A                                            l4828 57DE  
                                          l4908 4FFE                                            l5468 2950  
                                          l5388 26A4                                            l5396 273C  
                                          l5492 42C0                                            l5484 42A0  
                                          l5476 4240                                            l5548 49DA  
                                          l5724 4F00                                            l5716 4E64  
                                          l5708 4E20                                            l4932 52D6  
                                          l4924 5274                                            l4940 540A  
                                          l5580 4122                                            l5572 4094  
                                          l5564 402C                                            l5660 3B74  
                                          l5652 3B24                                            l5644 3A72  
                                          l5636 3A42                                            l5628 39E4  
                                          l5820 0992                                            l5812 08F8  
                                          l5804 08E6                                            l6188 591A  
                                          l6436 5EAA                                            l6540 4C10  
                                          l6532 4BEA                                            l6524 4BDA  
                                          l6198 5D40                                            l4598 35D4  
                                          l4862 5140                                            l4854 50CA  
                                          l4846 506E                                            l4694 30D2  
                                          l4686 3046                                            l4678 2FF2  
                                          l6286 45B2                                            l6278 4578  
                                          l6390 588C                                            l5750 5BF0  
                                          l5742 5BE4                                            l5734 5BCA  
                                          l6382 5FE4                                            l5670 45EC  
                                          l4782 5706                                            l4774 56E0  
                                          l4766 56BC                                            l4758 5696  
                                          l4838 587E                                            l4870 5E60  
                                          l5398 275A                                            l5494 42D2  
                                          l5486 42A6                                            l5478 4242  
                                          l5558 4A32                                            l5718 4E94  
                                          l4934 52F6                                            l4926 5288  
                                          l4918 5242                                            l4950 5480  
                                          l4942 5428                                            l5590 41C2  
                                          l5582 4128                                            l5574 409C  
                                          l5566 403C                                            l5662 3B8A  
                                          l5654 3B3E                                            l5638 3A56  
                                          l5646 3AD0                                            l5830 0A12  
                                          l5822 09C8                                            l5814 094C  
                                          l6294 4D04                                            l6438 5EB4  
                                          l6550 4CAE                                            l6542 4C2C  
                                          l6534 4C04                                            l6526 4BE0  
                                          l4856 50DC                                            l4848 507E  
                                          l4696 30DC                                            l4688 3070  
                                          l6288 45C0                                            l6392 58DC  
                                          l5752 5C00                                            l5744 5BE6  
                                          l5736 5BCE                                            l5728 5BBE  
                                          l6384 5FEA                                            l6376 5FD4  
                                          l5672 45F0                                            l4960 55C8  
                                          l4776 56F6                                            l4768 56C4  
                                          l4784 570C                                            l4792 572E  
                                          l4880 4F64                                            l5496 42D8  
                                          l5488 42B2                                            l4936 52F8  
                                          l4928 5296                                            l4952 54A0  
                                          l4944 5430                                            l5592 41DC  
                                          l5584 412E                                            l5576 40A6  
                                          l5568 403E                                            l5656 3B5E  
                                          l5648 3AEC                                            l5920 0FDA  
                                          l5904 0EE4                                            l5840 0A98  
                                          l5824 09D6                                            l5816 096C  
                                          l6624 091E                                            l5808 08EC  
                                          l6296 4D18                                            l6552 4CB6  
                                          l6560 4CE2                                            l6544 4C60  
                                          l6536 4C06                                            l6528 4BE4  
                                          l4858 50EA                                            l4698 30EA  
                                          l5770 5BA2                                            l5762 5B8E  
                                          l6394 58EC                                            l5746 5BE8  
                                          l5738 5BD0                                            l6378 5FD6  
                                          l5690 46A6                                            l6626 4690  
                                          l5682 464C                                            l5674 460C  
                                          l5666 45D4                                            l4970 560E  
                                          l4962 55D6                                            l4786 571C  
                                          l4778 56FE                                            l4794 5732  
                                          l4866 5E3A                                            l4890 4FB2  
                                          l4882 4F8E                                            l4874 4F3A  
                                          l5498 42DE                                            l4938 530A  
                                          l4954 54B2                                            l4946 5444  
                                          l5594 41F6                                            l5578 40AC  
                                          l5586 4192                                            l5658 3B64  
                                          l5922 100A                                            l5914 0FA2  
                                          l5906 0F1A                                            l5850 0B32  
                                          l5842 0AA6                                            l5834 0A5A  
                                          l5826 09E4                                            l5818 096E  
                                          l6298 4D22                                            l6554 4CC6  
                                          l6546 4C8E                                            l6538 4C0A  
                                          l5772 5BA4                                            l5764 5B96  
                                          l5756 5B78                                            l6396 5900  
                                          l6388 588A                                            l5748 5BEE  
                                          l5684 4662                                            l5676 4642  
                                          l5668 45E8                                            l4980 5CEE  
                                          l4972 563C                                            l4964 55E2  
                                          l4956 55A4                                            l4788 5724  
                                          l4796 5740                                            l4868 5E50  
                                          l4884 4F90                                            l4876 4F50  
                                          l4948 5452                                            l5588 41A4  
                                          l5596 4206                                            l5932 10D2  
                                          l5916 0FB6                                            l5908 0F50  
                                          l5860 0BBE                                            l5844 0ACA  
                                          l5828 0A04                                            l5836 0A6C  
                                          l5780 0890                                            l6556 4CCE  
                                          l6548 4C9A                                            l5774 5BAA  
                                          l5766 5B9A                                            l6398 5F7E  
                                          l5694 46DC                                            l5686 466A  
                                          l5678 4646                                            l4974 5650  
                                          l4966 55F6                                            l4958 55B4  
                                          l4798 5748                                            l4886 4FA0  
                                          l4990 51D6                                            l4982 5144  
                                          l5950 1212                                            l5934 10E4  
                                          l5942 115C                                            l5918 0FCC  
                                          l5926 1036                                            l5870 0C88  
                                          l5862 0BF0                                            l5854 0B7A  
                                          l5846 0B04                                            l5838 0A90  
                                          l5790 08C2                                            l5782 089E  
                                          l6558 4CDE                                            l5776 5BAC  
                                          l5768 5B9C                                            l5688 4672  
                                          l4968 560A                                            l4896 4FCA  
                                          l4888 4FA4                                            l4984 5164  
                                          l5960 12BE                                            l5952 1248  
                                          l5944 1192                                            l5936 1118  
                                          l5928 1064                                            l5880 0D5A  
                                          l5864 0C00                                            l5848 0B24  
                                          l5856 0B8C                                            l5792 08D4  
                                          l5784 08B0                                            l5698 471A  
                                          l4978 5CD4                                            l4898 4FD4  
                                          l4986 51A2                                            l4994 51E2  
                                          l5946 11DA                                            l5874 0CA4  
                                          l5866 0C32                                            l5858 0BAE  
                                          l5786 08B4                                            l5778 086C  
                                          l4996 51F4                                            l4988 51CA  
                                          l5980 1410                                            l5884 0D92  
                                          l5876 0CDA                                            l5868 0C56  
                                          l5796 08DA                                            l5788 08C0  
                                          l5974 1396                                            l5966 130E  
                                          l5958 129A                                            l5894 0E4E  
                                          l5886 0DC8                                            l5878 0D10  
                                          l5976 13CC                                            l5984 141E  
                                          l5968 1344                                            l5896 0E72  
                                          l5888 0DFE                                            l5986 1454  
                                          l5994 14A0                                            l5978 1404  
                                          l5898 0E96                                            l5996 14C4  
                                          l5988 148C                                            l5998 14FA  
                                          STR_1 0817                                            STR_3 0867  
                                          STR_5 081D                                            STR_9 080B  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u4100 29AE  
                                          u4101 29AA                                            u4030 6058  
                                          u4110 29F0                                            u4031 6054  
                                          u4111 29EC                                            u5000 310A  
                                          u4200 2B22                                            u4120 2A06  
                                          u4040 54EC                                            u5001 3106  
                                          u4201 2B1E                                            u4121 2A02  
                                          u4041 54E8                                            u5010 311C  
                                          u4210 2B40                                            u4130 2A18  
                                          u4050 54FE                                            u5011 3118  
                                          u4211 2B3C                                            u4131 2A14  
                                          u4051 54FA                                            u5020 314A  
                                          u4300 2C90                                            u4220 2B60  
                                          u4140 2A28                                            u4060 5526  
                                          u5100 5696                                            u5021 3146  
                                          u4301 2C8C                                            u4221 2B5C  
                                          u4141 2A24                                            u4061 5522  
                                          u5101 5692                                            u5030 3160  
                                          u4310 2CA0                                            u4230 2B6E  
                                          u4150 2A64                                            u4070 555C  
                                          u5110 56BC                                            u5031 315C  
                                          u4311 2C9C                                            u4231 2B6A  
                                          u4151 2A60                                            u4071 5558  
                                          u5111 56B8                                            u5040 3174  
                                          u4400 2D74                                            u4320 2CCC  
                                          u4240 2B7E                                            u4160 2A72  
                                          u4080 298C                                            u5120 56DA  
                                          u5200 57CC                                            u6000 1D42  
                                          u5041 3170                                            u4401 2D70  
                                          u4321 2CC8                                            u4241 2B7A  
                                          u4161 2A6E                                            u4081 2988  
                                          u5121 56D6                                            u5201 57C8  
                                          u6001 1D3E                                            u5050 318E  
                                          u4410 2DAE                                            u4330 2CDC  
                                          u4250 2BB0                                            u4170 2AE0  
                                          u4090 299E                                            u5130 56F6  
                                          u5210 580C                                            u6010 1D92  
                                          u5051 318A                                            u4411 2DAA  
                                          u4331 2CD8                                            u4251 2BAC  
                                          u4171 2ADC                                            u4091 299A  
                                          u5131 56F2                                            u5211 5808  
                                          u6011 1D8E                                            u5060 31D6  
                                          u4420 2DC0                                            u4340 2CF8  
                                          u4260 2BBE                                            u4180 2AF8  
                                          u5140 571C                                            u5220 584A  
                                          u5300 4F50                                            u4500 5E32  
                                          u6100 1EFE                                            u6020 1DA0  
                                          u5061 31D2                                            u4421 2DBC  
                                          u4341 2CF4                                            u4261 2BBA  
                                          u4181 2AF2                                            u5141 5718  
                                          u5221 5846                                            u5301 4F4C  
                                          u4501 5E2C                                            u6021 1D9C  
                                          u5070 3204                                            u4430 2DD0  
                                          u4350 2D08                                            u4270 2BDC  
                                          u4190 2AFA                                            u5150 5740  
                                          u5230 587E                                            u5310 4F84  
                                          u4510 5E34                                            u6110 1F16  
                                          u6030 1DB2                                            u5071 3200  
                                          u4431 2DCC                                            u4351 2D04  
                                          u4271 2BD8                                            u5151 573C  
                                          u5231 587A                                            u6111 1F12  
                                          u6031 1DAE                                            u5240 506E  
                                          u5080 323E                                            u4440 2DF0  
                                          u4360 2D1A                                            u4280 2C14  
                                          u7000 4714                                            u4600 48AA  
                                          u5160 575A                                            u5320 4FB2  
                                          u6200 2152                                            u6120 1F9A  
                                          u6040 1DFA                                            u5400 52D6  
                                          u4520 5DFA                                            u5241 506A  
                                          u5081 323A                                            u4441 2DEC  
                                          u4361 2D16                                            u4281 2C10  
                                          u7001 470E                                            u4601 48A6  
                                          u5161 5756                                            u5321 4FAE  
                                          u6201 214E                                            u6121 1F96  
                                          u6041 1DF6                                            u5401 52D2  
                                          u4521 5DF4                                            u5250 50AC  
                                          u4450 2E02                                            u4370 2D30  
                                          u4290 2C5A                                            u7010 4716  
                                          u4610 4A84                                            u5090 567C  
                                          u5170 5774                                            u5330 4FC6  
                                          u6210 2188                                            u6130 202E  
                                          u6050 1E28                                            u5410 5428  
                                          u4530 5DFC                                            u5251 50A8  
                                          u4451 2DFE                                            u4371 2D2C  
                                          u4291 2C56                                            u4611 4A80  
                                          u5091 5678                                            u5171 5770  
                                          u5331 4FC2                                            u5315 4F7A  
                                          u6211 2184                                            u6131 202A  
                                          u6051 1E22                                            u5411 5424  
                                          u4700 32DC                                            u5260 50CA  
                                          u4460 2E1E                                            u4380 2D46  
                                          u7020 472C                                            u4540 4776  
                                          u4620 4AB6                                            u5180 5792  
                                          u5340 4FEE                                            u5500 51A2  
                                          u6300 2412                                            u6220 21AE  
                                          u6140 20A0                                            u6060 1E2A  
                                          u7100 4F20                                            u5420 5452  
                                          u4701 32D8                                            u5261 50C6  
                                          u4461 2E1A                                            u4381 2D42  
                                          u7021 4728                                            u4541 4772  
                                          u4621 4AB2                                            u5181 578E  
                                          u5341 4FEA                                            u5501 519E  
                                          u6301 240E                                            u6221 21AA  
                                          u6141 209C                                            u5421 544E  
                                          u4710 32EE                                            u5270 50EA  
                                          u4390 2D5A                                            u7110 5BE4  
                                          u7030 473E                                            u4550 47A8  
                                          u4630 4AF4                                            u4470 5CD2  
                                          u5190 57A8                                            u5350 500E  
                                          u5510 51CA                                            u6310 2422  
                                          u6230 21C0                                            u6150 20C6  
                                          u6070 1E42                                            u5430 5480  
                                          u4711 32EA                                            u5271 50E6  
                                          u4391 2D56                                            u7111 5BE0  
                                          u7031 473A                                            u4551 47A4  
                                          u4631 4AF0                                            u4471 5CCE  
                                          u5191 57A4                                            u5351 500A  
                                          u5511 51C6                                            u6311 241E  
                                          u6231 21BC                                            u6151 20C2  
                                          u6071 1E3E                                            u5431 547C  
                                          u4800 3498                                            u4720 32FE  
                                          u5280 513A                                            u7120 5C00  
                                          u4640 4B1E                                            u4480 5B58  
                                          u5440 55B4                                            u5360 501E  
                                          u5520 51F4                                            u5600 59AE  
                                          u6400 2630                                            u6320 24BC  
                                          u6240 21CE                                            u6160 20D8  
                                          u6080 1ECE                                            u7040 4E4A  
                                          u7200 0A52                                            u4801 3494  
                                          u4721 32FA                                            u5281 5136  
                                          u7121 5BFC                                            u4561 47D2  
                                          u4641 4B1A                                            u5441 55B0  
                                          u5361 501A                                            u5521 51F0  
                                          u5601 59AA                                            u6401 262C  
                                          u6321 24B8                                            u6241 21CA  
                                          u6161 20D4                                            u6081 1ECA  
                                          u7041 4E46                                            u7201 0A4C  
                                          u4810 34B8                                            u4730 333E  
                                          u7130 5B8E                                            u4570 47F6  
                                          u4650 4B4C                                            u4490 5B68  
                                          u5450 55D6                                            u5290 5E50  
                                          u5610 3E62                                            u6410 2688  
                                          u6330 250A                                            u6250 21E4  
                                          u6170 20FA                                            u6090 1EFC  
                                          u7050 4E84                                            u7210 0A54  
                                          u4811 34B4                                            u4731 333A  
                                          u7131 5B8A                                            u4571 47F2  
                                          u4651 4B48                                            u4491 5B64  
                                          u5451 55D2                                            u5291 5E4C  
                                          u6411 2684                                            u6331 2506  
                                          u6251 21E0                                            u6171 20F6  
                                          u6091 1EF6                                            u7107 4F16  
                                          u5371 5248                                            u4820 34CA  
                                          u4740 337E                                            u4900 2E4C  
                                          u7140 5BBC                                            u4580 4820  
                                          u4660 4B94                                            u5460 562C  
                                          u5540 522E                                            u5700 400A  
                                          u5620 3E90                                            u6500 28B0  
                                          u6420 275A                                            u6340 2532  
                                          u6260 21F2                                            u6180 2120  
                                          u7060 4E94                                            u5380 526C  
                                          u7300 0C56                                            u7220 0A6C  
                                          u4821 34C6                                            u4741 337A  
                                          u4901 2E48                                            u7141 5BB8  
                                          u4581 481C                                            u4661 4B90  
                                          u5461 5628                                            u5541 5228  
                                          u5701 4006                                            u5621 3E8C  
                                          u6501 28AC                                            u6421 2756  
                                          u6341 252E                                            u6261 21EE  
                                          u6181 211C                                            u7061 4E90  
                                          u5381 5268                                            u7301 0C52  
                                          u7221 0A68                                            u4830 34F8  
                                          u4750 33F4                                            u4670 3276  
                                          u4910 2E5E                                            u4590 4860  
                                          u5470 563C                                            u5550 5230  
                                          u5630 3EB2                                            u6510 290E  
                                          u6430 2776                                            u6350 25D6  
                                          u6270 221C                                            u6190 2136  
                                          u7070 4EB0                                            u5390 5296  
                                          u5710 5D88                                            u7310 0CDA  
                                          u7230 0A90                                            u7150 0890  
                                          u4831 34F4                                            u4751 33F0  
                                          u4671 3272                                            u4911 2E5A  
                                          u4591 485C                                            u4487 5B4E  
                                          u5471 5638                                            u5535 5206  
                                          u5631 3EAE                                            u5615 3E58  
                                          u6511 2908                                            u6431 2772  
                                          u6351 25D2                                            u6271 2218  
                                          u6191 2132                                            u7071 4EAC  
                                          u5391 5292                                            u5711 5D82  
                                          u7311 0CD6                                            u7231 0A8C  
                                          u7151 088C                                            u4840 350E  
                                          u4760 3416                                            u4680 3288  
                                          u4920 2E6E                                            u5800 5346  
                                          u5480 5CEE                                            u5560 5A6C  
                                          u6520 2910                                            u6440 2788  
                                          u6360 25E8                                            u6280 2364  
                                          u6600 43A8                                            u7080 4EC2  
                                          u5720 5D8A                                            u7400 1064  
                                          u7320 0D10                                            u7240 0ACA  
                                          u7160 095E                                            u8040 4CAE  
                                          u4841 350A                                            u4761 3412  
                                          u4681 3284                                            u4921 2E6A  
                                          u5801 5342                                            u5481 5CEA  
                                          u6441 2784                                            u6361 25E4  
                                          u6281 2360                                            u6601 43A4  
                                          u7081 4EBE                                            u7057 4E7A  
                                          u7401 1060                                            u7321 0D0C  
                                          u7241 0AC6                                            u7161 095A  
                                          u8041 4CAA                                            u4850 3522  
                                          u4770 3440                                            u4690 3298  
                                          u4930 2EAE                                            u5810 536C  
                                          u5490 5184                                            u5650 3F1E  
                                          u5570 5A7E                                            u6530 2926  
                                          u6450 2796                                            u6370 25FA  
                                          u6290 23CA                                            u6610 43B8  
                                          u7090 4F00                                            u5730 59F6  
                                          u7410 10CA                                            u7330 0DC8  
                                          u7250 0B72                                            u7170 096C  
                                          u8050 4CC6                                            u4851 351E  
                                          u4771 343C                                            u4691 3294  
                                          u4931 2EAA                                            u5811 5368  
                                          u5651 3F1A                                            u5571 5A7A  
                                          u6531 2922                                            u6451 2792  
                                          u6371 25F6                                            u6291 23C6  
                                          u6611 43B4                                            u7091 4EFC  
                                          u5731 59F0                                            u7411 10C4  
                                          u7331 0DC4                                            u7251 0B6C  
                                          u7171 0968                                            u8107 4CEE  
                                          u8051 4CC2                                            u4860 353C  
                                          u4780 3464                                            u4940 2EC0  
                                          u5820 538C                                            u5900 36B8  
                                          u5660 3F42                                            u5580 5996  
                                          u6460 27CC                                            u6380 2608  
                                          u6620 43C8                                            u6540 4240  
                                          u6700 4A1E                                            u5740 59F8  
                                          u7500 14C4                                            u7420 10CC  
                                          u7340 0DFE                                            u7260 0B74  
                                          u7180 0992                                            u8060 4CDE  
                                          u4861 3538                                            u4781 3460  
                                          u4941 2EBC                                            u8117 5FE6  
                                          u5821 5388                                            u5901 36B4  
                                          u5645 3EC6                                            u5581 5990  
                                          u6461 27C8                                            u6381 2604  
                                          u6621 43C4                                            u6541 423C  
                                          u6701 4A1A                                            u7501 14C0  
                                          u7341 0DFA                                            u7181 098E  
                                          u8061 4CDA                                            u4870 3584  
                                          u4790 347A                                            u4950 2ED0  
                                          u5830 53DA                                            u5910 36C6  
                                          u5670 3F5E                                            u5646 3ED0  
                                          u5590 5998                                            u6470 27FA  
                                          u6390 2622                                            u6630 43DA  
                                          u6550 425C                                            u6710 4A2E  
                                          u5750 5A0E                                            u7510 1544  
                                          u7430 10E4                                            u7350 0E72  
                                          u7270 0B8C                                            u7190 09D6  
                                          u4871 3580                                            u4791 3476  
                                          u4951 2ECC                                            u8127 5FB0  
                                          u5831 53D6                                            u5911 36C2  
                                          u5495 517A                                            u5671 3F5A  
                                          u5647 3EE0                                            u5567 5A62  
                                          u6471 27F6                                            u6391 261E  
                                          u6631 43D6                                            u6551 4258  
                                          u6711 4A2A                                            u7095 4EF0  
                                          u5751 5A0A                                            u7511 1540  
                                          u7431 10E0                                            u7351 0E6E  
                                          u7271 0B88                                            u7191 09D2  
                                          u4880 35B4                                            u4960 2F06  
                                          u5760 5EA2                                            u5840 53EA  
                                          u5920 37F0                                            u5680 3FB2  
                                          u6480 287E                                            u6560 4316  
                                          u6720 4A68                                            u6800 38EA  
                                          u7600 1A3C                                            u7520 15B4  
                                          u7440 1192                                            u7360 0E96  
                                          u7280 0BBE                                            u4881 35B0  
                                          u4961 2F02                                            u8137 5BD2  
                                          u5761 5E9C                                            u5841 53E6  
                                          u5921 37EC                                            u5665 3F38  
                                          u6481 287A                                            u6721 4A64  
                                          u6641 48F6                                            u7097 4EE6  
                                          u6801 38E6                                            u7601 1A38  
                                          u7521 15B0                                            u7441 118E  
                                          u7361 0E92                                            u7281 0BBA  
                                          u4890 35E2                                            u4970 2F16  
                                          u5770 5EA4                                            u5930 380E  
                                          u5850 3626                                            u5690 3FCE  
                                          u6490 2898                                            u6570 4356  
                                          u6650 4918                                            u6730 403C  
                                          u6810 3906                                            u7610 1A72  
                                          u7530 1660                                            u7450 1248  
                                          u7370 0F1A                                            u7290 0C00  
                                          u4891 35DE                                            u4971 2F12  
                                          u8147 5BEA                                            u5931 380A  
                                          u5851 3620                                            u5691 3FCA  
                                          u6491 2894                                            u6571 4352  
                                          u6651 4914                                            u6731 4038  
                                          u6811 3902                                            u7611 1A6E  
                                          u7531 165C                                            u7451 1244  
                                          u7371 0F16                                            u7291 0BFC  
                                          u4980 3090                                            u7700 5C40  
                                          u5780 5AEE                                            u5940 3828  
                                          u5860 3628                                            u6580 4374  
                                          u6660 494A                                            u6740 4058  
                                          u6900 3AAA                                            u6820 3930  
                                          u7620 1B0E                                            u7540 16EC  
                                          u7460 12BE                                            u7380 0F50  
                                          u8157 5C44                                            u7701 5C3C  
                                          u5781 5AEA                                            u5941 3824  
                                          u5685 3FA8                                            u6581 4370  
                                          u6565 4304                                            u6661 4946  
                                          u6741 4054                                            u6821 392C  
                                          u7621 1B0A                                            u7541 16E8  
                                          u7461 12BA                                            u7381 0F4C  
                                          u4990 30EA                                            u7710 4432  
                                          u5790 5B1C                                            u5950 3842  
                                          u5870 363E                                            u6590 438E  
                                          u6670 4968                                            u6750 41A4  
                                          u6910 3AEC                                            u6830 3994  
                                          u7630 1B32                                            u7550 17A2  
                                          u7470 1344                                            u7390 0FB6  
                                          u4991 30E6                                            u7711 442E  
                                          u8167 5FCE                                            u5791 5B18  
                                          u5951 383E                                            u5871 363A  
                                          u6591 438A                                            u6671 4964  
                                          u6751 41A0                                            u6911 3AE8  
                                          u6831 3990                                            u7631 1B2E  
                                          u7551 179E                                            u7471 1340  
                                          u7391 0FB2                                            u7800 45C0  
                                          u7720 4440                                            u5960 3852  
                                          u5880 366E                                            u6680 4994  
                                          u6760 41C2                                            u6920 3B0A  
                                          u6840 39DE                                            u7640 1BCE  
                                          u7560 1818                                            u7480 13CC  
                                          u4985 3086                                            u7801 45BC  
                                          u7721 443C                                            u8177 606C  
                                          u5961 384E                                            u5881 366A  
                                          u6681 4990                                            u6761 41BE  
                                          u6921 3B06                                            u6905 3A98  
                                          u6841 39D8                                            u7641 1BCA  
                                          u7561 1814                                            u7481 13C8  
                                          u8097 4BF6                                            u7730 449C  
                                          u5970 3864                                            u5890 368A  
                                          u6690 49CE                                            u6770 41DC  
                                          u6930 3B24                                            u6850 39E0  
                                          u7650 1C04                                            u7570 189E  
                                          u7490 1454                                            u7810 4D18  
                                          u7731 4498                                            u8187 5B9E  
                                          u5971 3860                                            u5891 3686  
                                          u6691 49CA                                            u6771 41D8  
                                          u6931 3B20                                            u7651 1C00  
                                          u7571 189A                                            u7491 1450  
                                          u7811 4D14                                            u7740 44F2  
                                          u7900 3D4C                                            u5980 3874  
                                          u6780 41F6                                            u6940 3B3E  
                                          u6860 39F6                                            u7660 1CA0  
                                          u7580 1926                                            u7820 4D4A  
                                          u7741 44EE                                            u7901 3D48  
                                          u8197 5BA6                                            u5981 3870  
                                          u6781 41F2                                            u6941 3B3A  
                                          u6861 39F2                                            u7661 1C9C  
                                          u7581 1922                                            u7821 4D46  
                                          u7750 453C                                            u7910 3D8E  
                                          u5990 388C                                            u6790 4206  
                                          u6950 3B4E                                            u6870 3A2A  
                                          u7590 195C                                            u7670 595C  
                                          u7830 4DAA                                            u7751 4538  
                                          u7911 3D8A                                            u5991 3888  
                                          u6791 4202                                            u6951 3B4A  
                                          u6871 3A24                                            u7591 1958  
                                          u7671 5958                                            u7831 4DA6  
                                          u7680 5F7C                                            u7760 455A  
                                          u7920 3DC0                                            u6960 3B5E  
                                          u6880 3A2C                                            u7840 4DB8  
                                          u7681 5F78                                            u7761 4556  
                                          u7921 3DBC                                            u6961 3B5A  
                                          u7841 4DB4                                            u7690 5DB6  
                                          u7770 456A                                            u6970 460C  
                                          u6890 3A42                                            u7850 4DEE  
                                          u7691 5DB2                                            u7771 4566  
                                          u6971 4608                                            u6891 3A3E  
                                          u7851 4DEA                                            u7780 4578  
                                          u6980 4642                                            u7781 4574  
                                          u6981 463E                                            u7790 45B2  
                                          u6990 465E                                            u7791 45AE  
                                          u6991 465A                                            u7880 5F08  
                                          u7881 5F04                                            u7890 5F92  
                                          u7891 5F8E                                            _WPUB 000F85  
                                 _EUSART1_Write 6048                                            abs@a 0013  
                                          _dbuf 015C                         __end_of_CCP2_Initialize 6080  
                                          _atoi 45D4                                            _ctoa 5332  
                                          _main 4BD6                                            _dtoa 35F6  
                                          _prec 00F3                                            _otoa 4230  
                                          _prob 00FE                                            _nout 00EF  
                                          pad@i 001A                                            pad@p 0017  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001C  
                                          fsr2l 000FD9                                            _stoa 48EC  
                                          _utoa 402C                                            _xtoa 38DA  
                                 ___fpclassifyf 5144                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                               ___fldiv@new_exp 0022                                nrf2401_write@reg 0004  
                                  _tolower$1854 000D                                    ?_flush_TX_RX 0001  
                                  ___param_bank 000000                                           ??_abs 0015  
                                         ??_pad 0019                 __end_of_nrf2401_direccion_TX_RX 5C4A  
                __size_of_OSCILLATOR_Initialize 0020                       get_corriente_AC@corriente 005A  
                 __end_of_OSCILLATOR_Initialize 5F7E                                   ___fltol@sign1 0009  
                               __end_of___aodiv 48EC                                           ?_atoi 0008  
                                         ?_ctoa 000C                                 __end_of___fladd 2E32  
                                         ?_main 0001                                           ?_dtoa 001E  
                               __end_of___aomod 4BD6                                 __end_of___fldiv 35F6  
                               __end_of___awdiv 572E                                 __end_of___flneg 5E72  
                                         STR_10 0823                                           STR_11 0833  
                                         STR_20 082F                                           STR_22 0837  
                                         STR_14 0827                                           STR_15 083B  
                                         STR_24 0837                                           STR_40 0858  
                                         STR_33 0838                                           STR_42 0858  
                                         STR_50 0843                                           STR_18 082F  
                                         STR_52 0843                                           STR_60 085E  
                                         STR_36 0852                                 __end_of___awmod 57DE  
                                         STR_29 0830                                           STR_45 0855  
                                         STR_38 0852                                           STR_62 085E  
                                         STR_47 0855                                           STR_72 0840  
                                         STR_80 0847                                           STR_57 0844  
                                         STR_65 083F                                           STR_82 0847  
                                         STR_90 0861                                           STR_67 083F  
                                         STR_75 085B                                           STR_92 0861  
                                         STR_77 085B                                           STR_87 0848  
                                         STR_95 084B                                 __end_of___flmul 325C  
                                         STR_97 084B                                           ?_otoa 001E  
                                         STR_99 082B                                 __end_of___flsub 5C90  
                               __end_of___fltol 5040                                           ?_stoa 000C  
                          nrf2401_recibe@valor_ 0003                                           ?_utoa 001E  
                  __end_of_EUSART1_Write_string 5F0A                                 __end_of___lodiv 5332  
                               ___awdiv@divisor 0003                                           ?_xtoa 001E  
                                         _LATB0 007C50                                           _LATA5 007C4D  
                               __end_of___lomod 54DA                                 ___awdiv@counter 0005  
                                  vfpfcnvrt@fmt 009A                                    vfpfcnvrt@llu 00BA  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _I_max 0146  
                                         _I_min 0142                                           _I_rms 013E  
                                         _flags 00F5                                           _errno 0152  
                                         _fputc 54DA                                 __end_of_isalpha 5D90  
                                         _fputs 5C90                                 __end_of_isdigit 5EAA  
                                         _valor 00F7                                           atoi@n 0015  
                                         pad@fp 0013                                           atoi@s 0008  
                                         _trama 01AC                                           _width 00F1  
                                         ctoa@c 000E                                           _texto 011E  
                                         _putch 608C                                           ctoa@l 0010  
                                         ctoa@w 0012                                           dtoa@d 0020  
                                         dtoa@i 0040                                           dtoa@n 0038  
                                         dtoa@p 0032                                           dtoa@s 0036  
                                         dtoa@w 0034                                 __end_of_islower 5E02  
                               __end_of_isspace 5B28                                  ?_EUSART1_Write 0001  
                                __pbitbssCOMRAM 02F8                                 __end_of_isupper 5E3A  
                                         tablat 000FF5                                           otoa@d 0020  
                                         otoa@i 003E                                           otoa@n 0036  
                                         otoa@p 0030                                           otoa@t 0032  
                                         otoa@w 0034                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 0018  
                                         stoa@l 0020                                           stoa@p 001E  
                                         stoa@s 000E                                           stoa@w 001A  
                                         utoa@d 0020                                           utoa@i 003C  
                                         utoa@n 0034                                           utoa@p 0030  
                                         utoa@w 0032                                           status 000FD8  
                                ?___fpclassifyf 0001                                 __end_of_tolower 59C6  
                                         xtoa@c 0043                                           xtoa@d 0020  
                                         xtoa@i 0041                                           xtoa@n 0039  
                                         xtoa@p 0035                                           xtoa@w 0037  
                                         xtoa@x 0028                                 __end_of_strncmp 4F3A  
                               __end_of_toupper 5A24                                ___lodiv@dividend 0001  
            _EUSART1_DefaultFramingErrorHandler 000000                       __size_of_get_corriente_AC 0266  
                                  _toupper$1869 000D                                 __initialization 5A80  
                                  __end_of_atoi 4764                                    __end_of_ctoa 540A  
                    __end_of_EUSART1_Initialize 5D54                                    __end_of_main 4D04  
                                  __end_of_dtoa 38DA                                    __end_of_otoa 4420  
                                  __end_of_stoa 4A72                                    __end_of_utoa 4230  
                                  __end_of_xtoa 3BB4                                spi_s_read@cont_s 0002  
                                        ??_atoi 000A                                          ??_ctoa 000F  
                                        ??_main 00ED                                          ??_dtoa 0028  
                                        ??_otoa 0028                                          ??_stoa 0010  
                                        ??_utoa 0028                                          ??_xtoa 0029  
                                 __activetblptr 000002                         __end_of_nrF2401_init_RX 5904  
                              ___lodiv@quotient 0011                            __end_of_nrf2401_read 5FB8  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0003  
                                        _ACTCON 000FB5                                          STR_101 082B  
                                        STR_110 082C                                          ?_fputs 000C  
                                        STR_113 0864                                          STR_106 084C  
                                        _ADRESH 000FC4                                          STR_115 0864  
                                        STR_117 084F                                          _ADRESL 000FC3  
                                        STR_119 084F                                          _CCPR2H 000F91  
                                        _CCPR2L 000F90                                ___awdiv@dividend 0001  
                                        _ANSELA 000F5B                                          ?_putch 0001  
                                        _ANSELB 000F5C                                          _ANSELC 000F5D  
                          __end_of_direccion_rx 0806                            __end_of_direccion_tx 080B  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 00A0                                          _SPBRG1 000FAF  
                              ?_CCP2_Initialize 0001                                          _TXREG1 000FAD  
                              __end_of___xxtofl 45D4                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 00C8                                          ___flge 5040  
                                        ___fleq 57DE                                 _nrf2401_comando 605E  
                                     ??___aodiv 0011                                       ??___fladd 0009  
                                     ??___aomod 0011                                          ___wmul 5F38  
                                     ??___fldiv 0019                                       ??___awdiv 0005  
                                     ??___flneg 0005                                       ??___awmod 0005  
                                     ??___flmul 0032                                       ??___flsub 004B  
                                     ??___fltol 0005                                       ??___lodiv 0011  
                                     ??___lomod 0011                                          _efgtoa 1D1A  
                                        _datorx 00FA                       __size_of_nrf2401_haydatos 001E  
                      ?_EUSART1_SetErrorHandler 0001                                          _floorf 3E1A  
                                        _offset 013A                                          clear_0 5AB8  
                                        clear_1 5AC4                                ___awdiv@quotient 0007  
                               ___awmod@divisor 0003                                          isa$std 000001  
                               ___awmod@counter 0005                                          pad@buf 0015  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                        ctoa@fp 000C                                          dtoa@fp 001E  
                                        _strcpy 5A24                                          _strlen 5B28  
                                        fputc@c 0003                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                     ??_isalpha 0003                                       ??_isdigit 0003  
                               ___fpclassifyf@e 0009                                 ___fpclassifyf@u 000B  
                               ___fpclassifyf@x 0001                                       ??_islower 0003  
                                  __mediumconst 0000                                       ??_isspace 0003  
                                        otoa@fp 001E                                          tblptrh 000FF7  
                                     ??_isupper 0003                                          tblptrl 000FF6  
                                        tblptru 000FF8                        ADC_GetConversion@channel 0005  
                                        stoa@cp 001C                                          stoa@fp 000C  
                              __end_of_vfprintf 5966                                 ??_EUSART1_Write 0001  
                                        utoa@fp 001E                                __end_of_snprintf 5EDA  
                                     ??_tolower 0009                                          xtoa@fp 001E  
                                     ??_strncmp 0007                                       ??_toupper 0009  
                                    ___flge@ff1 0043                                      ___flge@ff2 0047  
                               ??___fpclassifyf 0005                                    ___xxtofl@arg 000B  
                                  ___xxtofl@exp 000A                               _SYSTEM_Initialize 601C  
                                  ___xxtofl@val 0001                                      ___fleq@ff1 0001  
                                    ___fleq@ff2 0005                            nrF2401_init_RX@canal 0009  
                                    __accesstop 0060                         __end_of__initialization 5ACC  
                                    ___flneg@f1 0001                                    ?_spi_s_write 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0001                            _EUSART1_Write_string 5EDA  
                            nrf2401_write@valor 0003                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 60BC                                    __pidataBANK1 6080  
                           ??_SYSTEM_Initialize 0003                                   __end_of_fputc 55A4  
                          __size_of_flush_TX_RX 0018                                   __end_of_fputs 5CD4  
                                 __end_of_putch 6096                                ?_nrF2401_init_RX 0001  
                                       ??_fputc 0007                       __end_of_SYSTEM_Initialize 6032  
                                       ??_fputs 0010                                         ??_putch 0002  
                                    __pbssBANK0 00EF                                      __pbssBANK1 0100  
                       __end_of_nrf2401_comando 6072                           ?_EUSART1_Write_string 0002  
                              _get_corriente_AC 3BB4                 __end_of_EUSART1_SetErrorHandler 60B4  
                        nrf2401_comando@comando 0003                           __end_of_nrf2401_write 5FD4  
                                       ?___flge 0043                                         ?___fleq 0001  
                                       ?___wmul 0001                                         ?_efgtoa 004F  
                                       _CCP2CON 000F97                                         ?_floorf 002A  
                         __size_of_nrf2401_read 001C                         __size_of_ADC_Initialize 0016  
                                       ?_strcpy 0001                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler 60AA         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 60A0                                      _get_Status 60B4  
                                     ?___xxtofl 0001                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 14AE                        ?_nrf2401_direccion_TX_RX 0003  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                 nrf2401_direccion_TX_RX@cont_s 0008                                ___lomod@dividend 0001  
                          _ADC_InterruptHandler 0154                                         __Hparam 0000  
                                       __Lparam 0000                              __size_of_vsnprintf 011C  
                                  _nrf2401_read 5F9C                                 __size_of___flge 0104  
                               __size_of___fleq 00AA                                         ___aodiv 4764  
                                       ___fladd 2972                                         ___aomod 4A72  
                                       ___fldiv 325C                                         ___awdiv 566A  
                                       ___flneg 5E3A                                         ___awmod 572E  
                                       ___flmul 2E32                                         ___flsub 5C4A  
                                       ___fltol 4F3A                         __size_of_nrf2401_recibe 001A  
                               __size_of___wmul 0026                                         ___lodiv 5242  
                                       ___lomod 540A                                _nrf2401_haydatos 5F7E  
                                     ?_vfprintf 00C2                                    __psmallconst 0800  
                               __size_of_efgtoa 0C58                                       ?_snprintf 00E1  
                               __size_of_floorf 0212                                    _direccion_rx 0801  
                                  _direccion_tx 0806                                         __pcinit 5A80  
                                       __ramtop 0800                                         __ptext0 4BD6  
                                       _flag_rx 00F9                                         __ptext1 6006  
                                       __ptext2 5EAA                                         __ptext3 4D04  
                                       __ptext4 5904                                         __ptext5 086C  
                                       __ptext6 38DA                                         __ptext7 59C6  
                                       __ptext8 5DCA                                         __ptext9 5D54  
                               __size_of_strcpy 005C                                 __size_of_strlen 004E  
                              spi_s_write@dato_ 0001                           _OSCILLATOR_Initialize 5F5E  
                                  __size_of_abs 0040                                    __size_of_pad 00C6  
                                       _isalpha 5D54                                         _isdigit 5E72  
                                    ??___xxtofl 0005                                ___awmod@dividend 0001  
                            _EUSART1_Initialize 5D14                                         _islower 5DCA  
                      ??_PIN_MANAGER_Initialize 0001                                         _isspace 5AD6  
                                       _isupper 5E02                                         efgtoa@c 0055  
                                       efgtoa@d 0078                                         efgtoa@e 0090  
                                       efgtoa@f 0051                                         efgtoa@g 008C  
                                       efgtoa@h 0082                                         efgtoa@i 008A  
                                       efgtoa@l 0086                                         efgtoa@m 0072  
                                       efgtoa@n 0092                                         efgtoa@p 007C  
                                       efgtoa@t 006C                                         efgtoa@u 0094  
                                       efgtoa@w 007E                        EUSART1_Write_string@data 0002  
                                       _procesa 0100                                         atoi@neg 000E  
                                       _puntero 00FB                      __size_of_SYSTEM_Initialize 0016  
                                       _tolower 5966                                         _voltaje 014E  
             nrf2401_direccion_TX_RX@direccion_ 0003                                         _strncmp 4E20  
                                       _toupper 59C6                            end_of_initialization 5ACC  
                                       floorf@e 0038                                         floorf@m 0034  
                                       floorf@u 003A                                         floorf@x 002A  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0005  
                        ??_EUSART1_Write_string 0004                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0158                                         fputs@fp 000E  
                              ?_nrf2401_comando 0001                            __size_of_spi_s_write 0048  
                             __end_of_vfpfcnvrt 1D1A                                      efgtoa@mode 0081  
                                    efgtoa@sign 007A                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                    ??_vfprintf 005F                            ??_EUSART1_Initialize 0003  
                                    ??_snprintf 005F                                         strcpy@d 0009  
                                       strlen@a 0003                                         strcpy@s 0007  
                                       strlen@s 0001                                       _PORTBbits 000F81  
                                   ?_get_Status 0001                                      _spi_s_init 6006  
                                    _spi_s_read 5BBE                                     ___fladd@grs 0010  
                                 ___xxtofl@sign 0009                                 nrf2401_read@reg 0003  
                                     _TRISBbits 000F93                                       _TRISCbits 000F94  
                             __end_of_vsnprintf 4E20                                     ___fldiv@grs 0024  
                                   ___fldiv@rem 001D                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                                     ___flmul@grs 0037  
                         _get_corriente_AC$2188 0054                        __size_of_CCP2_Initialize 000E  
                                __end_of___flge 5144                                  __end_of___fleq 5888  
                                   vfpfcnvrt@ap 009C                                     vfpfcnvrt@cp 009E  
                                   vfpfcnvrt@ct 00AC                                     vfpfcnvrt@fp 0098  
                                   vfpfcnvrt@ll 00AF                                  __end_of___wmul 5F5E  
                                   vfpfcnvrt@vp 00B7                                  __end_of_efgtoa 2972  
                                _ADC_Initialize 6032                                  __end_of_floorf 402C  
                        ?_OSCILLATOR_Initialize 0001                                      floorf@F527 0132  
                                __end_of_strcpy 5A80                                  __end_of_strlen 5B76  
                           start_initialization 5A80                                 ___lodiv@divisor 0009  
                      __end_of_get_corriente_AC 3E1A                                 ___lodiv@counter 0019  
               __size_of_PIN_MANAGER_Initialize 002E                                     __end_of_abs 5D14  
                                   __end_of_pad 566A                                 spi_s_read@dato_ 0001  
                                   putch@txData 0002                           __end_of_EUSART1_Write 605E  
                         __end_of___fpclassifyf 5242                             __size_of_get_Status 0008  
                                 ??_flush_TX_RX 0005                                     vfprintf@fmt 00C4  
                                      ??___flge 004B                                        ??___fleq 0009  
                                _nrf2401_recibe 5FD4                                        ??___wmul 0005  
                                      ??_efgtoa 0056                          __end_of_ADC_Initialize 6048  
                                   __pdataBANK0 00FE                                     __pdataBANK1 01E6  
                                      ??_floorf 002E                                        ??_strcpy 0005  
                                      ??_strlen 0003                                       ___fladd@a 0005  
                                     ___fladd@b 0001                                    vsnprintf@cnt 00D9  
                                  vsnprintf@fmt 00CE                                     ?_spi_s_init 0001  
                                   ?_spi_s_read 0001                                       ___fldiv@a 0015  
                                     ___fldiv@b 0011                                       ___flmul@a 002E  
                                     ___flmul@b 002A                                       ___flsub@a 0047  
                                     ___flsub@b 0043                                   __pcstackBANK0 0060  
                              ___aodiv@dividend 0001                                     snprintf@fmt 00E5  
                             __size_of___xxtofl 01B4                               get_corriente_AC@i 0058  
                      __end_of_nrf2401_haydatos 5F9C                        __size_of_nrF2401_init_RX 007C  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                                     _atoi$1740 0010                                       _atoi$1741 0014  
                                     _atoi$1742 0012                __size_of_nrf2401_direccion_TX_RX 0046  
                                   _efgtoa$1533 0060                                     _efgtoa$1542 0066  
                                   _efgtoa$1534 0062                                     _efgtoa$1543 0068  
                                   _efgtoa$1544 006A                                     _efgtoa$1538 0064  
                        __end_of_nrf2401_recibe 5FEE                          _PIN_MANAGER_Initialize 5F0A  
                                     _dtoa$1509 0030                                        ?___aodiv 0001  
                                   _dato_serial 00FC                                        ?___fladd 0001  
                                      ?___aomod 0001                                        ?___fldiv 0011  
                                      ?___awdiv 0001                                ___aodiv@quotient 0013  
                                      ?___flneg 0001                                        ?___awmod 0001  
                                      ?___flmul 002A                                        ?___flsub 0043  
                                      ?___fltol 0001                                        ?___lodiv 0001  
                                      ?___lomod 0001                                 ?_ADC_Initialize 0001  
                           __end_of_flush_TX_RX 6006                               __size_of_vfprintf 0062  
                             __size_of_snprintf 0030                                 ___lomod@divisor 0009  
                                   __smallconst 0800                               ??_CCP2_Initialize 0001  
               nrf2401_direccion_TX_RX@registro 0005                                 ___lomod@counter 0011  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0001                                        ?_isdigit 0001  
                          _EUSART1_ErrorHandler 0156                                        ?_islower 0001  
                                      ?_isspace 0001                                        ?_isupper 0001  
                       _EUSART1_SetErrorHandler 60AA                                        ?_tolower 0007  
                        __size_of_nrf2401_write 001C                                  __size_of_fputc 00CA  
                                __size_of_fputs 0044                                        ?_strncmp 0001  
                                      ?_toupper 0007                                  __size_of_putch 000A  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                           __size_of_spi_s_init 0016                             __size_of_spi_s_read 0046  
                               ?_nrf2401_recibe 0001                                        _PIR1bits 000F9E  
                                     _vfpfcnvrt 086C                                       _xtoa$1580 0033  
                                     _xtoa$1579 0031                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0001                                    ??_get_Status 0005  
                                  _isspace$1781 0007                                      vfpfcnvrt@c 00B9  
                                    vfpfcnvrt@f 00A8                                     _INTCON2bits 000FF1  
                                     copy_data0 5A94                      get_corriente_AC@n_muestras 004F  
                                     _vsnprintf 4D04                                   ??_spi_s_write 0001  
                 __size_of_EUSART1_Write_string 0030                                        __Hrparam 0000  
                            __end_of_get_Status 60BC                               ??_nrF2401_init_RX 0009  
                                    vfprintf@ap 00C6                                        __Lrparam 0000  
                                    vfprintf@fp 00C2                               _ADC_GetConversion 5D90  
                                   _flush_TX_RX 5FEE                                   _nrf2401_write 5FB8  
                       ??_OSCILLATOR_Initialize 0001                        __size_of_nrf2401_comando 0014  
                            ?_ADC_GetConversion 0001                                __size_of___aodiv 0188  
                              __size_of___fladd 04C0                                __size_of___aomod 0164  
                              __size_of___fldiv 039A                                __size_of___awdiv 00C4  
                              __size_of___flneg 0038                                __size_of___awmod 00B0  
                                   vsnprintf@ap 00D0                                __size_of___flmul 042A  
                              __size_of___flsub 0046                                __size_of___fltol 0106  
                              __size_of___lodiv 00F0                     __size_of_EUSART1_Initialize 0040  
                              __size_of___lomod 00D0                                      ?_vfpfcnvrt 0098  
                                    snprintf@ap 00EB                                 ___aodiv@divisor 0009  
                               ___aodiv@counter 0011                              ___fpclassifyf@F465 0136  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                           ??_ADC_GetConversion 0003                                        ___xxtofl 4420  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                             ?_get_corriente_AC 004F                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 402C  
                                      __ptext11 540A                                        __ptext20 3E1A  
                                      __ptext12 5242                                        __ptext21 5144  
                                      __ptext13 4E20                                        __ptext30 5C90  
                                      __ptext22 4F3A                                        __ptext14 48EC  
                                      __ptext31 5CD4                                        __ptext23 5E3A  
                                      __ptext15 4230                                        __ptext40 5F38  
                                      __ptext32 4A72                                        __ptext24 57DE  
                                      __ptext16 1D1A                                        __ptext41 5FD4  
                                      __ptext33 4764                                        __ptext25 572E  
                                      __ptext17 5966                                        __ptext50 605E  
                                      __ptext42 5F7E                                        __ptext34 5332  
                                      __ptext26 566A                                        __ptext18 5E02  
                                      __ptext51 5B76                                        __ptext43 60B4  
                                      __ptext35 54DA                                        __ptext27 35F6  
                                      __ptext19 5A24                                        __ptext60 601C  
                                      __ptext52 3BB4                                        __ptext44 5F9C  
                                      __ptext36 608C                                        __ptext28 55A4  
                                      __ptext61 5F0A                                        __ptext53 4420  
                                      __ptext45 5BBE                                        __ptext37 45D4  
                                      __ptext29 5B28                                        __ptext70 6048  
                                      __ptext62 5F5E                                        __ptext54 5C4A  
                                      __ptext46 5888                                        __ptext38 5AD6  
                                      __ptext63 5D14                                        __ptext55 2972  
                                      __ptext47 5C04                                        __ptext39 5E72  
                                      __ptext64 6096                                        __ptext56 2E32  
                                      __ptext48 5FEE                                        __ptext65 60A0  
                                      __ptext57 5040                                        __ptext49 5FB8  
                                      __ptext66 60AA                                        __ptext58 325C  
                                      __ptext67 6072                                        __ptext59 5D90  
                                      __ptext68 6032                                        __ptext69 5EDA  
                              __size_of_isupper 0038                              ??_get_corriente_AC 0053  
                              __size_of_tolower 0060                                      strcpy@dest 0001  
                              __size_of_strncmp 011A                                __size_of_toupper 005E  
                                    ?_vsnprintf 00CA                                   __size_of_atoi 0190  
                                 __size_of_ctoa 00D8                               spi_s_write@cont_s 0002  
                                 __size_of_main 012E                                   __size_of_dtoa 02E4  
                                 __size_of_otoa 01F0                                   __size_of_stoa 0186  
                                 __size_of_utoa 0204                                   __size_of_xtoa 02DA  
                       _nrf2401_direccion_TX_RX 5C04                       __end_of_ADC_GetConversion 5DCA  
                                      efgtoa@fp 004F                                        efgtoa@ne 0070  
                                      efgtoa@pp 006E                                        efgtoa@ou 0074  
                                     stoa@F1176 01E6  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                      isa$xinst 000000                                  ?_nrf2401_write 0003  
                           __end_of_spi_s_write 5BBE                                        _vfprintf 5904  
                                      _snprintf 5EAA                     _EUSART1_FramingErrorHandler 015A  
                              ___aomod@dividend 0001                                    _sensibilidad 01ED  
                                  ??_spi_s_init 0001                                    ??_spi_s_read 0001  
                                _vfpfcnvrt$1616 00A6                                  _vfpfcnvrt$1594 00A2  
                                _vfpfcnvrt$1595 00A4                                      _INTCONbits 000FF2  
                                      isalpha@c 0001                                        isdigit@c 0001  
                                    vsnprintf@f 00DB                                      vsnprintf@n 00CC  
                                    vsnprintf@s 00CA                                       snprintf@n 00E3  
                                     snprintf@s 00E1                               ?_nrf2401_haydatos 0001  
                                  _valor_string 01CA                                        islower@c 0001  
                                      isspace@c 0001                         ?_PIN_MANAGER_Initialize 0001  
                            ??_nrf2401_haydatos 0005          __end_of_EUSART1_SetOverrunErrorHandler 60A0  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 6096  
                                     strcpy@src 0003                                      _RCSTA1bits 000FAB  
                                      isupper@c 0001                                       strncmp@_l 0001  
                                     strncmp@_r 0003                                ??_ADC_Initialize 0001  
                                 ?_nrf2401_read 0001                              __end_of_spi_s_init 601C  
                            __end_of_spi_s_read 5C04                                 _CCP2_Initialize 6072  
                                   efgtoa@nmode 0080  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                               ___aomod@divisor 0009                                     ??_vfpfcnvrt 005B  
                                      stoa@nuls 0011                                 ___aomod@counter 0011  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 00FD  
                                      tolower@c 0007                                  _vsnprintf$1403 00D7  
                        __size_of___fpclassifyf 00FE                               ??_nrf2401_comando 0003  
                                      strncmp@l 0008                                        strncmp@n 0005  
                                      strncmp@r 000A                                        toupper@c 0007  
                                 ___fladd@signs 000D                                    ___aodiv@sign 0012  
                     ??_nrf2401_direccion_TX_RX 0006                  __end_of_PIN_MANAGER_Initialize 5F38  
                                   ??_vsnprintf 00D2                                ??_nrf2401_recibe 0003  
                                  ___fladd@aexp 000E                                    ___fladd@bexp 000F  
                             nrf2401_read@dato_ 0004                                     _spi_s_write 5B76  
                    __size_of_ADC_GetConversion 003A                                    ___aomod@sign 0012  
                               ??_nrf2401_write 0004                                  ??_nrf2401_read 0003  
