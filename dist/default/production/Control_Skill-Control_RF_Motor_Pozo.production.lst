

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec 25 22:37:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Generated 21/07/2023 GMT
    86                           ; 
    87                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F25K50 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000000                     
   120 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   121   000000                     
   122 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   123   000000                     
   124 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   125   000000                     
   126                           	psect	idataBANK0
   127   0037F4                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _letra2
   131   0037F4  0062               	dw	98
   132                           
   133                           ;initializer for _letra1
   134   0037F6  0061               	dw	97
   135                           
   136                           ;initializer for _dato_serial
   137   0037F8  63                 	db	99
   138                           
   139                           	psect	idataBANK1
   140   0037AE                     __pidataBANK1:
   141                           	callstack 0
   142                           
   143                           ;initializer for _offset
   144                           ;main.c: 74: char dato_serial = 'c';;main.c: 75: int letra1 = 'a';;main.c: 76: int letra
      +                          2 = 'b';;main.c: 77: char texto = 0;;main.c: 78: _Bool estado = 0;;main.c: 85: unsigned 
      +                          int valor = 0;;main.c: 86: double voltaje = 0.0;;main.c: 87: double sensibilidad = 0.282
      +                          ;;main.c: 88: double relacion = 0.100;;main.c: 89: double I = 0.0;;main.c: 90: double I_
      +                          max = 0.0;;main.c: 91: double I_min = 0.0;;main.c: 92: double I_rms = 0.0;;main.c: 93: d
      +                          ouble offset = 0.100;
   145   0037AE  CCCD               	dw	52429
   146   0037B0  3DCC               	dw	15820
   147                           
   148                           ;initializer for _relacion
   149                           ;main.c: 74: char dato_serial = 'c';;main.c: 75: int letra1 = 'a';;main.c: 76: int letra
      +                          2 = 'b';;main.c: 77: char texto = 0;;main.c: 78: _Bool estado = 0;;main.c: 85: unsigned 
      +                          int valor = 0;;main.c: 86: double voltaje = 0.0;;main.c: 87: double sensibilidad = 0.282
      +                          ;;main.c: 88: double relacion = 0.100;
   150   0037B2  CCCD               	dw	52429
   151   0037B4  3DCC               	dw	15820
   152                           
   153                           ;initializer for _sensibilidad
   154                           ;main.c: 74: char dato_serial = 'c';;main.c: 75: int letra1 = 'a';;main.c: 76: int letra
      +                          2 = 'b';;main.c: 77: char texto = 0;;main.c: 78: _Bool estado = 0;;main.c: 85: unsigned 
      +                          int valor = 0;;main.c: 86: double voltaje = 0.0;;main.c: 87: double sensibilidad = 0.282
      +                          ;
   155   0037B6  624E               	dw	25166
   156   0037B8  3E90               	dw	16016
   157                           
   158                           	psect	smallconst
   159   000800                     __psmallconst:
   160                           	callstack 0
   161   000800  00                 	db	0
   162   000801                     _direccion_rx:
   163                           	callstack 0
   164   000801  11                 	db	17
   165   000802  11                 	db	17
   166   000803  11                 	db	17
   167   000804  11                 	db	17
   168   000805  11                 	db	17
   169   000806                     __end_of_direccion_rx:
   170                           	callstack 0
   171   000806  3840               	dw	14400
   172   000808  0000               	dw	0
   173   00080A                     __end_of_intervalo:
   174                           	callstack 0
   175   00080A                     _direccion_tx:
   176                           	callstack 0
   177   00080A  11                 	db	17
   178   00080B  11                 	db	17
   179   00080C  11                 	db	17
   180   00080D  11                 	db	17
   181   00080E  11                 	db	17
   182   00080F                     __end_of_direccion_tx:
   183                           	callstack 0
   184   000000                     _T1CON	set	4045
   185   000000                     _TMR1L	set	4046
   186   000000                     _TMR1H	set	4047
   187   000000                     _ADCON0	set	4034
   188   000000                     _ADRESL	set	4035
   189   000000                     _CCPR2H	set	3985
   190   000000                     _TXREG1	set	4013
   191   000000                     _RCREG1	set	4014
   192   000000                     _SPBRG1	set	4015
   193   000000                     _TXSTA1	set	4012
   194   000000                     _TMR1	set	4046
   195   000000                     _LATCbits	set	3979
   196   000000                     _LATBbits	set	3978
   197   000000                     _TRISBbits	set	3987
   198   000000                     _TRISCbits	set	3988
   199   000000                     _T1GCONbits	set	4044
   200   000000                     _T1CONbits	set	4045
   201   000000                     _ADCON0bits	set	4034
   202   000000                     _RCSTA1bits	set	4011
   203   000000                     _TXSTA1bits	set	4012
   204   000000                     _LATA5	set	31821
   205   000000                     _PLLRDY	set	32407
   206   000000                     _ANSELA	set	3931
   207   000000                     _ANSELB	set	3932
   208   000000                     _ANSELC	set	3933
   209   000000                     _LATA	set	3977
   210   000000                     _OSCTUNE	set	3995
   211   000000                     _PIR1bits	set	3998
   212   000000                     _RCSTA1	set	4011
   213   000000                     _BAUDCON1	set	4024
   214   000000                     _ADCON2	set	4032
   215   000000                     _ADCON1	set	4033
   216   000000                     _OSCCON2	set	4050
   217   000000                     _OSCCON	set	4051
   218   000000                     _ACTCON	set	4021
   219   000000                     _SPBRGH1	set	4016
   220   000000                     _INTCON2bits	set	4081
   221   000000                     _PIE1bits	set	3997
   222   000000                     _CCPR2L	set	3984
   223   000000                     _TRISA	set	3986
   224   000000                     _LATC	set	3979
   225   000000                     _LATB	set	3978
   226   000000                     _CCP2CON	set	3991
   227   000000                     _TRISC	set	3988
   228   000000                     _TRISB	set	3987
   229   000000                     _PORTBbits	set	3969
   230   000000                     _WPUB	set	3973
   231   000000                     _INTCONbits	set	4082
   232   000000                     _T1GCON	set	4044
   233   000000                     _RCONbits	set	4048
   234   000000                     _ADRESH	set	4036
   235   00080F                     STR_1:
   236   00080F  25                 	db	37
   237   000810  2E                 	db	46
   238   000811  33                 	db	51	;'3'
   239   000812  66                 	db	102	;'f'
   240   000813  20                 	db	32
   241   000814  41                 	db	65	;'A'
   242   000815  6D                 	db	109	;'m'
   243   000816  70                 	db	112	;'p'
   244   000817  2E                 	db	46
   245   000818  0A                 	db	10
   246   000819  0D                 	db	13
   247   00081A  00                 	db	0
   248   00081B                     STR_2:
   249   00081B  69                 	db	105	;'i'
   250   00081C  6E                 	db	110	;'n'
   251   00081D  66                 	db	102	;'f'
   252   00081E  00                 	db	0
   253   00081F                     STR_5:
   254   00081F  6E                 	db	110	;'n'
   255   000820  61                 	db	97	;'a'
   256   000821  6E                 	db	110	;'n'
   257   000822  00                 	db	0
   258   000823  00                 	db	0	; dummy byte at the end
   259   000000                     
   260                           ; #config settings
   261                           
   262                           	psect	cinit
   263   00307E                     __pcinit:
   264                           	callstack 0
   265   00307E                     start_initialization:
   266                           	callstack 0
   267   00307E                     __initialization:
   268                           	callstack 0
   269                           
   270                           ; Initialize objects allocated to BANK1 (12 bytes)
   271                           ; load TBLPTR registers with __pidataBANK1
   272   00307E  0EAE               	movlw	low __pidataBANK1
   273   003080  6EF6               	movwf	tblptrl,c
   274   003082  0E37               	movlw	high __pidataBANK1
   275   003084  6EF7               	movwf	tblptrh,c
   276   003086  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   277   003088  6EF8               	movwf	tblptru,c
   278   00308A  EE01  F06A         	lfsr	0,__pdataBANK1
   279   00308E  EE10 F00C          	lfsr	1,12
   280   003092                     copy_data0:
   281   003092  0009               	tblrd		*+
   282   003094  CFF5 FFEE          	movff	tablat,postinc0
   283   003098  50E5               	movf	postdec1,w,c
   284   00309A  50E1               	movf	fsr1l,w,c
   285   00309C  E1FA               	bnz	copy_data0
   286                           
   287                           ; Initialize objects allocated to BANK0 (5 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289   00309E  0EF4               	movlw	low __pidataBANK0
   290   0030A0  6EF6               	movwf	tblptrl,c
   291   0030A2  0E37               	movlw	high __pidataBANK0
   292   0030A4  6EF7               	movwf	tblptrh,c
   293   0030A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294   0030A8  6EF8               	movwf	tblptru,c
   295   0030AA  EE00  F0FB         	lfsr	0,__pdataBANK0
   296   0030AE  EE10 F005          	lfsr	1,5
   297   0030B2                     copy_data1:
   298   0030B2  0009               	tblrd		*+
   299   0030B4  CFF5 FFEE          	movff	tablat,postinc0
   300   0030B8  50E5               	movf	postdec1,w,c
   301   0030BA  50E1               	movf	fsr1l,w,c
   302   0030BC  E1FA               	bnz	copy_data1
   303                           
   304                           ; Clear objects allocated to BANK1 (106 bytes)
   305   0030BE  EE01  F000         	lfsr	0,__pbssBANK1
   306   0030C2  0E6A               	movlw	106
   307   0030C4                     clear_0:
   308   0030C4  6AEE               	clrf	postinc0,c
   309   0030C6  06E8               	decf	wreg,f,c
   310   0030C8  E1FD               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to BANK0 (56 bytes)
   313   0030CA  EE00  F0C3         	lfsr	0,__pbssBANK0
   314   0030CE  0E38               	movlw	56
   315   0030D0                     clear_1:
   316   0030D0  6AEE               	clrf	postinc0,c
   317   0030D2  06E8               	decf	wreg,f,c
   318   0030D4  E1FD               	bnz	clear_1
   319                           
   320                           ; Clear objects allocated to COMRAM (4 bytes)
   321   0030D6  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   322   0030D8  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   323   0030DA  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   324   0030DC  6A57               	clrf	__pbssCOMRAM& (0+255),c
   325   0030DE                     end_of_initialization:
   326                           	callstack 0
   327   0030DE                     __end_of__initialization:
   328                           	callstack 0
   329   0030DE  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   330   0030E0  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   331   0030E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   332   0030E4  6EF8               	movwf	tblptru,c
   333   0030E6  0100               	movlb	0
   334   0030E8  EFD5  F014         	goto	_main	;jump to C main() function
   335                           
   336                           	psect	bssCOMRAM
   337   000057                     __pbssCOMRAM:
   338                           	callstack 0
   339   000057                     _I:
   340                           	callstack 0
   341   000057                     	ds	4
   342                           
   343                           	psect	bssBANK0
   344   0000C3                     __pbssBANK0:
   345                           	callstack 0
   346   0000C3                     _previousMillis:
   347                           	callstack 0
   348   0000C3                     	ds	4
   349   0000C7                     _currentSeg:
   350                           	callstack 0
   351   0000C7                     	ds	4
   352   0000CB                     _I_min:
   353                           	callstack 0
   354   0000CB                     	ds	4
   355   0000CF                     _I_max:
   356                           	callstack 0
   357   0000CF                     	ds	4
   358   0000D3                     _voltaje:
   359                           	callstack 0
   360   0000D3                     	ds	4
   361   0000D7                     _conteo:
   362                           	callstack 0
   363   0000D7                     	ds	4
   364   0000DB                     _width:
   365                           	callstack 0
   366   0000DB                     	ds	2
   367   0000DD                     _prec:
   368                           	callstack 0
   369   0000DD                     	ds	2
   370   0000DF                     _l:
   371                           	callstack 0
   372   0000DF                     	ds	2
   373   0000E1                     _k:
   374                           	callstack 0
   375   0000E1                     	ds	2
   376   0000E3                     _j:
   377                           	callstack 0
   378   0000E3                     	ds	2
   379   0000E5                     _i:
   380                           	callstack 0
   381   0000E5                     	ds	2
   382   0000E7                     _valor:
   383                           	callstack 0
   384   0000E7                     	ds	2
   385   0000E9                     TMR1_ISR@CountCallBack:
   386                           	callstack 0
   387   0000E9                     	ds	2
   388   0000EB                     _TMR1_InterruptHandler:
   389                           	callstack 0
   390   0000EB                     	ds	2
   391   0000ED                     _timer1ReloadVal:
   392                           	callstack 0
   393   0000ED                     	ds	2
   394   0000EF                     _ADC_InterruptHandler:
   395                           	callstack 0
   396   0000EF                     	ds	2
   397   0000F1                     _EUSART1_ErrorHandler:
   398                           	callstack 0
   399   0000F1                     	ds	2
   400   0000F3                     _EUSART1_OverrunErrorHandler:
   401                           	callstack 0
   402   0000F3                     	ds	2
   403   0000F5                     _EUSART1_FramingErrorHandler:
   404                           	callstack 0
   405   0000F5                     	ds	2
   406   0000F7                     _flags:
   407                           	callstack 0
   408   0000F7                     	ds	1
   409   0000F8                     _estado:
   410                           	callstack 0
   411   0000F8                     	ds	1
   412   0000F9                     _texto:
   413                           	callstack 0
   414   0000F9                     	ds	1
   415   0000FA                     _eusart1RxLastError:
   416                           	callstack 0
   417   0000FA                     	ds	1
   418                           
   419                           	psect	dataBANK0
   420   0000FB                     __pdataBANK0:
   421                           	callstack 0
   422   0000FB                     _letra2:
   423                           	callstack 0
   424   0000FB                     	ds	2
   425   0000FD                     _letra1:
   426                           	callstack 0
   427   0000FD                     	ds	2
   428   0000FF                     _dato_serial:
   429                           	callstack 0
   430   0000FF                     	ds	1
   431                           
   432                           	psect	bssBANK1
   433   000100                     __pbssBANK1:
   434                           	callstack 0
   435   000100                     floorf@F521:
   436                           	callstack 0
   437   000100                     	ds	4
   438   000104                     ___fpclassifyf@F465:
   439                           	callstack 0
   440   000104                     	ds	4
   441   000108                     _I_rms:
   442                           	callstack 0
   443   000108                     	ds	4
   444   00010C                     _dbuf:
   445                           	callstack 0
   446   00010C                     	ds	80
   447   00015C                     _valor_string:
   448                           	callstack 0
   449   00015C                     	ds	14
   450                           
   451                           	psect	dataBANK1
   452   00016A                     __pdataBANK1:
   453                           	callstack 0
   454   00016A                     _offset:
   455                           	callstack 0
   456   00016A                     	ds	4
   457   00016E                     _relacion:
   458                           	callstack 0
   459   00016E                     	ds	4
   460   000172                     _sensibilidad:
   461                           	callstack 0
   462   000172                     	ds	4
   463                           
   464                           	psect	cstackBANK1
   465   000176                     __pcstackBANK1:
   466                           	callstack 0
   467   000176                     _main$2377:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x0
   471   000176                     	ds	4
   472                           
   473                           	psect	cstackBANK0
   474   000060                     __pcstackBANK0:
   475                           	callstack 0
   476   000060                     get_corriente_AC@i:
   477                           	callstack 0
   478   000060                     floorf@m:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x0
   482   000060                     	ds	2
   483   000062                     get_corriente_AC@corriente:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x2
   487   000062                     	ds	2
   488   000064                     floorf@e:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x4
   492   000064                     	ds	2
   493   000066                     floorf@u:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x6
   497   000066                     	ds	4
   498   00006A                     efgtoa@fp:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0xA
   502   00006A                     	ds	1
   503   00006B                     efgtoa@f:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0xB
   507   00006B                     	ds	4
   508   00006F                     efgtoa@c:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0xF
   512   00006F                     	ds	1
   513   000070                     ??_efgtoa:
   514                           
   515                           ; 1 bytes @ 0x10
   516   000070                     	ds	2
   517   000072                     efgtoa@ne:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x12
   521   000072                     	ds	2
   522   000074                     efgtoa@p:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x14
   526   000074                     	ds	2
   527   000076                     efgtoa@t:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x16
   531   000076                     	ds	2
   532   000078                     _efgtoa$1975:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x18
   536   000078                     	ds	2
   537   00007A                     efgtoa@pp:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x1A
   541   00007A                     	ds	1
   542   00007B                     efgtoa@mode:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x1B
   546   00007B                     	ds	1
   547   00007C                     efgtoa@nmode:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x1C
   551   00007C                     	ds	1
   552   00007D                     efgtoa@d:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1D
   556   00007D                     	ds	2
   557   00007F                     efgtoa@m:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x1F
   561   00007F                     	ds	2
   562   000081                     efgtoa@e:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x21
   566   000081                     	ds	2
   567   000083                     efgtoa@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x23
   571   000083                     	ds	2
   572   000085                     efgtoa@ou:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x25
   576   000085                     	ds	4
   577   000089                     efgtoa@i:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x29
   581   000089                     	ds	2
   582   00008B                     efgtoa@h:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x2B
   586   00008B                     	ds	4
   587   00008F                     efgtoa@l:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x2F
   591   00008F                     	ds	4
   592   000093                     efgtoa@sign:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x33
   596   000093                     	ds	1
   597   000094                     efgtoa@g:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x34
   601   000094                     	ds	4
   602   000098                     efgtoa@n:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x38
   606   000098                     	ds	2
   607   00009A                     efgtoa@u:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x3A
   611   00009A                     	ds	4
   612   00009E                     vfpfcnvrt@fp:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x3E
   616   00009E                     	ds	1
   617   00009F                     vfpfcnvrt@fmt:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x3F
   621   00009F                     	ds	1
   622   0000A0                     vfpfcnvrt@ap:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x40
   626   0000A0                     	ds	1
   627   0000A1                     ??_vfpfcnvrt:
   628                           
   629                           ; 1 bytes @ 0x41
   630   0000A1                     	ds	2
   631   0000A3                     vfpfcnvrt@convarg:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x43
   635   0000A3                     	ds	4
   636   0000A7                     vfpfcnvrt@c:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x47
   640   0000A7                     	ds	1
   641   0000A8                     vfpfcnvrt@cp:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x48
   645   0000A8                     	ds	1
   646   0000A9                     ?_vfprintf:
   647                           	callstack 0
   648   0000A9                     vfprintf@fp:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x49
   652   0000A9                     	ds	1
   653   0000AA                     vfprintf@fmt:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x4A
   657   0000AA                     	ds	1
   658   0000AB                     vfprintf@ap:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x4B
   662   0000AB                     	ds	1
   663   0000AC                     vfprintf@cfmt:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x4C
   667   0000AC                     	ds	1
   668   0000AD                     ?_sprintf:
   669                           	callstack 0
   670   0000AD                     sprintf@s:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x4D
   674   0000AD                     	ds	2
   675   0000AF                     sprintf@fmt:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x4F
   679   0000AF                     	ds	5
   680   0000B4                     sprintf@ap:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x54
   684   0000B4                     	ds	1
   685   0000B5                     sprintf@f:
   686                           	callstack 0
   687                           
   688                           ; 12 bytes @ 0x55
   689   0000B5                     	ds	12
   690   0000C1                     ??_main:
   691                           
   692                           ; 1 bytes @ 0x61
   693   0000C1                     	ds	2
   694                           
   695                           	psect	cstackCOMRAM
   696   000001                     __pcstackCOMRAM:
   697                           	callstack 0
   698   000001                     TMR1_WriteTimer@timerVal:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x0
   702   000001                     	ds	2
   703   000003                     ??_INTERRUPT_InterruptManager:
   704   000003                     
   705                           ; 1 bytes @ 0x2
   706   000003                     	ds	2
   707   000005                     ?___fpclassifyf:
   708                           	callstack 0
   709   000005                     ?_ADC_GetConversion:
   710                           	callstack 0
   711   000005                     ?___wmul:
   712                           	callstack 0
   713   000005                     ?___fladd:
   714                           	callstack 0
   715   000005                     ?_labs:
   716                           	callstack 0
   717   000005                     ?___flneg:
   718                           	callstack 0
   719   000005                     ?___fltol:
   720                           	callstack 0
   721   000005                     ?___xxtofl:
   722                           	callstack 0
   723   000005                     _EUSART1_is_tx_ready$282:
   724                           	callstack 0
   725   000005                     EUSART1_Write@txData:
   726                           	callstack 0
   727   000005                     spi_s_read@dato_:
   728                           	callstack 0
   729   000005                     spi_s_write@dato_:
   730                           	callstack 0
   731   000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   732                           	callstack 0
   733   000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   734                           	callstack 0
   735   000005                     EUSART1_SetErrorHandler@interruptHandler:
   736                           	callstack 0
   737   000005                     TMR1_SetInterruptHandler@InterruptHandler:
   738                           	callstack 0
   739   000005                     ___wmul@multiplier:
   740                           	callstack 0
   741   000005                     memcpy@d1:
   742                           	callstack 0
   743   000005                     strcpy@dest:
   744                           	callstack 0
   745   000005                     ___fleq@ff1:
   746                           	callstack 0
   747   000005                     ___flneg@f1:
   748                           	callstack 0
   749   000005                     ___fltol@f1:
   750                           	callstack 0
   751   000005                     ___fladd@b:
   752                           	callstack 0
   753   000005                     ___xxtofl@val:
   754                           	callstack 0
   755   000005                     ___fpclassifyf@x:
   756                           	callstack 0
   757   000005                     labs@a:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x4
   761   000005                     	ds	1
   762   000006                     putch@txData:
   763                           	callstack 0
   764   000006                     spi_s_read@cont_s:
   765                           	callstack 0
   766   000006                     spi_s_write@cont_s:
   767                           	callstack 0
   768   000006                     EUSART1_Write_string@data:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x5
   772   000006                     	ds	1
   773   000007                     ??_ADC_GetConversion:
   774   000007                     nrf2401_write@valor:
   775                           	callstack 0
   776   000007                     nrf2401_comando@comando:
   777                           	callstack 0
   778   000007                     nrf2401_read@reg:
   779                           	callstack 0
   780   000007                     nrf2401_direccion_TX_RX@direccion_:
   781                           	callstack 0
   782   000007                     nrf2401_recibe@valor_:
   783                           	callstack 0
   784   000007                     strcpy@src:
   785                           	callstack 0
   786   000007                     ___wmul@multiplicand:
   787                           	callstack 0
   788   000007                     memcpy@s1:
   789                           	callstack 0
   790   000007                     fputc@c:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x6
   794   000007                     	ds	1
   795   000008                     ??_strcpy:
   796   000008                     nrf2401_write@reg:
   797                           	callstack 0
   798   000008                     nrf2401_read@dato_:
   799                           	callstack 0
   800   000008                     nrf2401_direccion_TX_RX@registro:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x7
   804   000008                     	ds	1
   805   000009                     ??___fpclassifyf:
   806   000009                     ??_labs:
   807   000009                     ??_nrf2401_direccion_TX_RX:
   808   000009                     ??___fltol:
   809   000009                     ??___xxtofl:
   810   000009                     ADC_GetConversion@channel:
   811                           	callstack 0
   812   000009                     fputc@fp:
   813                           	callstack 0
   814   000009                     ___wmul@product:
   815                           	callstack 0
   816   000009                     memcpy@n:
   817                           	callstack 0
   818   000009                     strcpy@d:
   819                           	callstack 0
   820   000009                     ___fleq@ff2:
   821                           	callstack 0
   822   000009                     ___fladd@a:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x8
   826   000009                     	ds	1
   827   00000A                     ??_fputc:
   828   00000A                     nrf2401_direccion_TX_RX@cont_s:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x9
   832   00000A                     	ds	1
   833   00000B                     ?_read_prec_or_width:
   834                           	callstack 0
   835   00000B                     nrF2401_init_RX@canal:
   836                           	callstack 0
   837   00000B                     read_prec_or_width@fmt:
   838                           	callstack 0
   839   00000B                     memcpy@tmp:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0xA
   843   00000B                     	ds	1
   844   00000C                     read_prec_or_width@ap:
   845                           	callstack 0
   846   00000C                     memcpy@d:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0xB
   850   00000C                     	ds	1
   851   00000D                     ??___fladd:
   852   00000D                     ??___fleq:
   853   00000D                     ___fltol@sign1:
   854                           	callstack 0
   855   00000D                     ___xxtofl@sign:
   856                           	callstack 0
   857   00000D                     read_prec_or_width@c:
   858                           	callstack 0
   859   00000D                     ___fpclassifyf@e:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0xC
   863   00000D                     	ds	1
   864   00000E                     ___fltol@exp1:
   865                           	callstack 0
   866   00000E                     ___xxtofl@exp:
   867                           	callstack 0
   868   00000E                     read_prec_or_width@n:
   869                           	callstack 0
   870   00000E                     memcpy@s:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0xD
   874   00000E                     	ds	1
   875   00000F                     fputs@s:
   876                           	callstack 0
   877   00000F                     ___xxtofl@arg:
   878                           	callstack 0
   879   00000F                     ___fpclassifyf@u:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0xE
   883   00000F                     	ds	2
   884   000011                     ___fladd@signs:
   885                           	callstack 0
   886   000011                     fputs@fp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x10
   890   000011                     	ds	1
   891   000012                     ___fladd@aexp:
   892                           	callstack 0
   893   000012                     fputs@c:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x11
   897   000012                     	ds	1
   898   000013                     ?___flmul:
   899                           	callstack 0
   900   000013                     ___fladd@bexp:
   901                           	callstack 0
   902   000013                     fputs@i:
   903                           	callstack 0
   904   000013                     ___flmul@b:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x12
   908   000013                     	ds	1
   909   000014                     ___fladd@grs:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x13
   913   000014                     	ds	1
   914   000015                     pad@fp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x14
   918   000015                     	ds	1
   919   000016                     pad@buf:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x15
   923   000016                     	ds	1
   924   000017                     ___flmul@a:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x16
   928   000017                     	ds	1
   929   000018                     pad@p:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x17
   933   000018                     	ds	2
   934   00001A                     ??_pad:
   935                           
   936                           ; 1 bytes @ 0x19
   937   00001A                     	ds	1
   938   00001B                     ??___flmul:
   939   00001B                     pad@i:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x1A
   943   00001B                     	ds	4
   944   00001F                     ___flmul@sign:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x1E
   948   00001F                     	ds	1
   949   000020                     ___flmul@aexp:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x1F
   953   000020                     	ds	1
   954   000021                     ___flmul@grs:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x20
   958   000021                     	ds	4
   959   000025                     ___flmul@bexp:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x24
   963   000025                     	ds	1
   964   000026                     ___flmul@prod:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x25
   968   000026                     	ds	4
   969   00002A                     ___flmul@temp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x29
   973   00002A                     	ds	2
   974   00002C                     ?___flsub:
   975                           	callstack 0
   976   00002C                     ___flge@ff1:
   977                           	callstack 0
   978   00002C                     ___flsub@b:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x2B
   982   00002C                     	ds	4
   983   000030                     ___flge@ff2:
   984                           	callstack 0
   985   000030                     ___flsub@a:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x2F
   989   000030                     	ds	4
   990   000034                     ??___flge:
   991   000034                     ?___fldiv:
   992                           	callstack 0
   993   000034                     ___fldiv@b:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x33
   997   000034                     	ds	4
   998   000038                     ??_trip_protec_current:
   999   000038                     ___fldiv@a:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x37
  1003   000038                     	ds	4
  1004   00003C                     ??___fldiv:
  1005                           
  1006                           ; 1 bytes @ 0x3B
  1007   00003C                     	ds	4
  1008   000040                     ___fldiv@rem:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x3F
  1012   000040                     	ds	4
  1013   000044                     ___fldiv@sign:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x43
  1017   000044                     	ds	1
  1018   000045                     ___fldiv@new_exp:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x44
  1022   000045                     	ds	2
  1023   000047                     ___fldiv@grs:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x46
  1027   000047                     	ds	4
  1028   00004B                     ___fldiv@bexp:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x4A
  1032   00004B                     	ds	1
  1033   00004C                     ___fldiv@aexp:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x4B
  1037   00004C                     	ds	1
  1038   00004D                     ?_floorf:
  1039                           	callstack 0
  1040   00004D                     ?_get_corriente_AC:
  1041                           	callstack 0
  1042   00004D                     get_corriente_AC@n_muestras:
  1043                           	callstack 0
  1044   00004D                     floorf@x:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x4C
  1048   00004D                     	ds	4
  1049   000051                     ??_floorf:
  1050   000051                     ??_get_corriente_AC:
  1051                           
  1052                           ; 1 bytes @ 0x50
  1053   000051                     	ds	6
  1054   000057                     
  1055                           ; 1 bytes @ 0x56
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 264 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0
  1076 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1077 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1078 ;;      Totals:         0       2       4       0       0       0       0       0       0
  1079 ;;Total ram usage:        6 bytes
  1080 ;; Hardware stack levels required when called: 13
  1081 ;; This function calls:
  1082 ;;		_EUSART1_Write_string
  1083 ;;		_EUSART1_is_tx_ready
  1084 ;;		_SYSTEM_Initialize
  1085 ;;		___fladd
  1086 ;;		___fldiv
  1087 ;;		_get_corriente_AC
  1088 ;;		_nrF2401_init_RX
  1089 ;;		_recibido_1
  1090 ;;		_spi_s_init
  1091 ;;		_sprintf
  1092 ;;		_trip_protec_current
  1093 ;; This function is called by:
  1094 ;;		Startup code after reset
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text0
  1099   0029AA                     __ptext0:
  1100                           	callstack 0
  1101   0029AA                     _main:
  1102                           	callstack 18
  1103   0029AA                     
  1104                           ;main.c: 267:     SYSTEM_Initialize();
  1105   0029AA  EC61  F01B         	call	_SYSTEM_Initialize	;wreg free
  1106   0029AE                     
  1107                           ;main.c: 275:     (INTCONbits.GIE = 1);
  1108   0029AE  8EF2               	bsf	242,7,c	;volatile
  1109   0029B0                     
  1110                           ;main.c: 281:     (INTCONbits.PEIE = 1);
  1111   0029B0  8CF2               	bsf	242,6,c	;volatile
  1112   0029B2                     
  1113                           ;main.c: 286:     ANSELA = 0b00000111;
  1114   0029B2  0E07               	movlw	7
  1115   0029B4  010F               	movlb	15	; () banked
  1116   0029B6  6F5B               	movwf	91,b	;volatile
  1117   0029B8                     
  1118                           ; BSR set to: 15
  1119                           ;main.c: 287:     ANSELB = 0b00000000;
  1120   0029B8  0E00               	movlw	0
  1121   0029BA  6F5C               	movwf	92,b	;volatile
  1122   0029BC                     
  1123                           ; BSR set to: 15
  1124                           ;main.c: 288:     ANSELC = 0x00;
  1125   0029BC  0E00               	movlw	0
  1126   0029BE  6F5D               	movwf	93,b	;volatile
  1127   0029C0                     
  1128                           ; BSR set to: 15
  1129                           ;main.c: 296:     spi_s_init();
  1130   0029C0  ECA5  F01B         	call	_spi_s_init	;wreg free
  1131   0029C4                     
  1132                           ;main.c: 298:     nrF2401_init_RX(17);
  1133   0029C4  0E11               	movlw	17
  1134   0029C6  EC05  F018         	call	_nrF2401_init_RX
  1135   0029CA                     
  1136                           ;main.c: 302:     _delay((unsigned long)((2000)*(48000000/4000.0)));
  1137   0029CA  0E7A               	movlw	122
  1138   0029CC  0100               	movlb	0	; () banked
  1139   0029CE  6FC2               	movwf	(??_main+1)& (0+255),b
  1140   0029D0  0EC1               	movlw	193
  1141   0029D2  6FC1               	movwf	??_main& (0+255),b
  1142   0029D4  0E81               	movlw	129
  1143   0029D6                     u6527:
  1144   0029D6  2EE8               	decfsz	wreg,f,c
  1145   0029D8  D7FE               	bra	u6527
  1146   0029DA  2FC1               	decfsz	??_main& (0+255),f,b
  1147   0029DC  D7FC               	bra	u6527
  1148   0029DE  2FC2               	decfsz	(??_main+1)& (0+255),f,b
  1149   0029E0  D7FA               	bra	u6527
  1150   0029E2  D000               	nop2	
  1151   0029E4                     
  1152                           ;main.c: 303:     LATA5 = 1;
  1153   0029E4  8A89               	bsf	3977,5,c	;volatile
  1154   0029E6                     
  1155                           ;main.c: 304:     _delay((unsigned long)((3000)*(48000000/4000.0)));
  1156   0029E6  0EB7               	movlw	183
  1157   0029E8  0100               	movlb	0	; () banked
  1158   0029EA  6FC2               	movwf	(??_main+1)& (0+255),b
  1159   0029EC  0EA1               	movlw	161
  1160   0029EE  6FC1               	movwf	??_main& (0+255),b
  1161   0029F0  0EC3               	movlw	195
  1162   0029F2                     u6537:
  1163   0029F2  2EE8               	decfsz	wreg,f,c
  1164   0029F4  D7FE               	bra	u6537
  1165   0029F6  2FC1               	decfsz	??_main& (0+255),f,b
  1166   0029F8  D7FC               	bra	u6537
  1167   0029FA  2FC2               	decfsz	(??_main+1)& (0+255),f,b
  1168   0029FC  D7FA               	bra	u6537
  1169   0029FE  D000               	nop2	
  1170   002A00                     l6171:
  1171                           
  1172                           ;main.c: 307:     {;main.c: 311:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1173   002A00  0E07               	movlw	7
  1174   002A02  6E4E               	movwf	(get_corriente_AC@n_muestras+1)^0,c
  1175   002A04  0ED0               	movlw	208
  1176   002A06  6E4D               	movwf	get_corriente_AC@n_muestras^0,c
  1177   002A08  EC0D  F013         	call	_get_corriente_AC	;wreg free
  1178   002A0C  C04D  F176         	movff	?_get_corriente_AC,_main$2377
  1179   002A10  C04E  F177         	movff	?_get_corriente_AC+1,_main$2377+1
  1180   002A14  C04F  F178         	movff	?_get_corriente_AC+2,_main$2377+2
  1181   002A18  C050  F179         	movff	?_get_corriente_AC+3,_main$2377+3
  1182   002A1C                     
  1183                           ;main.c: 307:     {;main.c: 311:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1184   002A1C  0ECD               	movlw	205
  1185   002A1E  6E09               	movwf	___fladd@a^0,c
  1186   002A20  0ECC               	movlw	204
  1187   002A22  6E0A               	movwf	(___fladd@a+1)^0,c
  1188   002A24  0ECC               	movlw	204
  1189   002A26  6E0B               	movwf	(___fladd@a+2)^0,c
  1190   002A28  0EBD               	movlw	189
  1191   002A2A  6E0C               	movwf	(___fladd@a+3)^0,c
  1192   002A2C  C176  F005         	movff	_main$2377,___fladd@b
  1193   002A30  C177  F006         	movff	_main$2377+1,___fladd@b+1
  1194   002A34  C178  F007         	movff	_main$2377+2,___fladd@b+2
  1195   002A38  C179  F008         	movff	_main$2377+3,___fladd@b+3
  1196   002A3C  EC06  F009         	call	___fladd	;wreg free
  1197   002A40  C005  F034         	movff	?___fladd,___fldiv@b
  1198   002A44  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  1199   002A48  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  1200   002A4C  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  1201   002A50  0ECD               	movlw	205
  1202   002A52  6E38               	movwf	___fldiv@a^0,c
  1203   002A54  0ECC               	movlw	204
  1204   002A56  6E39               	movwf	(___fldiv@a+1)^0,c
  1205   002A58  0ECC               	movlw	204
  1206   002A5A  6E3A               	movwf	(___fldiv@a+2)^0,c
  1207   002A5C  0E3D               	movlw	61
  1208   002A5E  6E3B               	movwf	(___fldiv@a+3)^0,c
  1209   002A60  EC7B  F00D         	call	___fldiv	;wreg free
  1210   002A64  C034  F057         	movff	?___fldiv,_I
  1211   002A68  C035  F058         	movff	?___fldiv+1,_I+1
  1212   002A6C  C036  F059         	movff	?___fldiv+2,_I+2
  1213   002A70  C037  F05A         	movff	?___fldiv+3,_I+3
  1214   002A74                     
  1215                           ;main.c: 312:         sprintf(valor_string, "%.3f Amp.\n\r", I);
  1216   002A74  0E5C               	movlw	low _valor_string
  1217   002A76  0100               	movlb	0	; () banked
  1218   002A78  6FAD               	movwf	sprintf@s& (0+255),b
  1219   002A7A  0E01               	movlw	high _valor_string
  1220   002A7C  6FAE               	movwf	(sprintf@s+1)& (0+255),b
  1221   002A7E  0E0F               	movlw	low STR_1
  1222   002A80  6FAF               	movwf	sprintf@fmt& (0+255),b
  1223   002A82  C057  F0B0         	movff	_I,?_sprintf+3
  1224   002A86  C058  F0B1         	movff	_I+1,?_sprintf+4
  1225   002A8A  C059  F0B2         	movff	_I+2,?_sprintf+5
  1226   002A8E  C05A  F0B3         	movff	_I+3,?_sprintf+6
  1227   002A92  ECD0  F019         	call	_sprintf	;wreg free
  1228   002A96                     
  1229                           ;main.c: 313:         if (EUSART1_is_tx_ready()) EUSART1_Write_string(valor_string);
  1230   002A96  EC07  F01B         	call	_EUSART1_is_tx_ready	;wreg free
  1231   002A9A  0900               	iorlw	0
  1232   002A9C  B4D8               	btfsc	status,2,c
  1233   002A9E  EF53  F015         	goto	u6501
  1234   002AA2  EF55  F015         	goto	u6500
  1235   002AA6                     u6501:
  1236   002AA6  EF5B  F015         	goto	l6181
  1237   002AAA                     u6500:
  1238   002AAA  0E5C               	movlw	low _valor_string
  1239   002AAC  6E06               	movwf	EUSART1_Write_string@data^0,c
  1240   002AAE  0E01               	movlw	high _valor_string
  1241   002AB0  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
  1242   002AB2  ECC3  F01A         	call	_EUSART1_Write_string	;wreg free
  1243   002AB6                     l6181:
  1244                           
  1245                           ;main.c: 316:         trip_protec_current();
  1246   002AB6  EC48  F00F         	call	_trip_protec_current	;wreg free
  1247   002ABA                     
  1248                           ;main.c: 319:         if (estado == 0 ) recibido_1();
  1249   002ABA  0100               	movlb	0	; () banked
  1250   002ABC  51F8               	movf	_estado& (0+255),w,b
  1251   002ABE  A4D8               	btfss	status,2,c
  1252   002AC0  EF64  F015         	goto	u6511
  1253   002AC4  EF66  F015         	goto	u6510
  1254   002AC8                     u6511:
  1255   002AC8  EF6A  F015         	goto	l506
  1256   002ACC                     u6510:
  1257   002ACC                     
  1258                           ; BSR set to: 0
  1259   002ACC  ECFC  F018         	call	_recibido_1	;wreg free
  1260   002AD0  EF6B  F015         	goto	l6187
  1261   002AD4                     l506:
  1262                           
  1263                           ; BSR set to: 0
  1264   002AD4  9A89               	bcf	3977,5,c	;volatile
  1265   002AD6                     l6187:
  1266                           
  1267                           ;main.c: 323:         _delay((unsigned long)((50)*(48000000/4000.0)));
  1268   002AD6  0E04               	movlw	4
  1269   002AD8  0100               	movlb	0	; () banked
  1270   002ADA  6FC2               	movwf	(??_main+1)& (0+255),b
  1271   002ADC  0E0C               	movlw	12
  1272   002ADE  6FC1               	movwf	??_main& (0+255),b
  1273   002AE0  0E33               	movlw	51
  1274   002AE2                     u6547:
  1275   002AE2  2EE8               	decfsz	wreg,f,c
  1276   002AE4  D7FE               	bra	u6547
  1277   002AE6  2FC1               	decfsz	??_main& (0+255),f,b
  1278   002AE8  D7FC               	bra	u6547
  1279   002AEA  2FC2               	decfsz	(??_main+1)& (0+255),f,b
  1280   002AEC  D7FA               	bra	u6547
  1281   002AEE  D000               	nop2	
  1282   002AF0  EF00  F015         	goto	l6171
  1283   002AF4  EF26  F000         	goto	start
  1284   002AF8                     __end_of_main:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _trip_protec_current *****************
  1288 ;; Defined at:
  1289 ;;		line 199 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        4 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 5
  1310 ;; This function calls:
  1311 ;;		___flge
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text1
  1318   001E90                     __ptext1:
  1319                           	callstack 0
  1320   001E90                     _trip_protec_current:
  1321                           	callstack 25
  1322   001E90                     
  1323                           ;main.c: 201:     if (I > 9 && I < 16) estado = 0;
  1324   001E90  0E00               	movlw	0
  1325   001E92  6E2C               	movwf	___flge@ff1^0,c
  1326   001E94  0E00               	movlw	0
  1327   001E96  6E2D               	movwf	(___flge@ff1+1)^0,c
  1328   001E98  0E10               	movlw	16
  1329   001E9A  6E2E               	movwf	(___flge@ff1+2)^0,c
  1330   001E9C  0E41               	movlw	65
  1331   001E9E  6E2F               	movwf	(___flge@ff1+3)^0,c
  1332   001EA0  C057  F030         	movff	_I,___flge@ff2
  1333   001EA4  C058  F031         	movff	_I+1,___flge@ff2+1
  1334   001EA8  C059  F032         	movff	_I+2,___flge@ff2+2
  1335   001EAC  C05A  F033         	movff	_I+3,___flge@ff2+3
  1336   001EB0  ECFF  F015         	call	___flge	;wreg free
  1337   001EB4  B0D8               	btfsc	status,0,c
  1338   001EB6  EF5F  F00F         	goto	u6281
  1339   001EBA  EF61  F00F         	goto	u6280
  1340   001EBE                     u6281:
  1341   001EBE  EF7D  F00F         	goto	l6005
  1342   001EC2                     u6280:
  1343   001EC2  C057  F02C         	movff	_I,___flge@ff1
  1344   001EC6  C058  F02D         	movff	_I+1,___flge@ff1+1
  1345   001ECA  C059  F02E         	movff	_I+2,___flge@ff1+2
  1346   001ECE  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1347   001ED2  0E00               	movlw	0
  1348   001ED4  6E30               	movwf	___flge@ff2^0,c
  1349   001ED6  0E00               	movlw	0
  1350   001ED8  6E31               	movwf	(___flge@ff2+1)^0,c
  1351   001EDA  0E80               	movlw	128
  1352   001EDC  6E32               	movwf	(___flge@ff2+2)^0,c
  1353   001EDE  0E41               	movlw	65
  1354   001EE0  6E33               	movwf	(___flge@ff2+3)^0,c
  1355   001EE2  ECFF  F015         	call	___flge	;wreg free
  1356   001EE6  B0D8               	btfsc	status,0,c
  1357   001EE8  EF78  F00F         	goto	u6291
  1358   001EEC  EF7A  F00F         	goto	u6290
  1359   001EF0                     u6291:
  1360   001EF0  EF7D  F00F         	goto	l6005
  1361   001EF4                     u6290:
  1362   001EF4  0E00               	movlw	0
  1363   001EF6  0100               	movlb	0	; () banked
  1364   001EF8  6FF8               	movwf	_estado& (0+255),b
  1365   001EFA                     l6005:
  1366                           
  1367                           ;main.c: 203:     if (I <= 9)
  1368   001EFA  0E00               	movlw	0
  1369   001EFC  6E2C               	movwf	___flge@ff1^0,c
  1370   001EFE  0E00               	movlw	0
  1371   001F00  6E2D               	movwf	(___flge@ff1+1)^0,c
  1372   001F02  0E10               	movlw	16
  1373   001F04  6E2E               	movwf	(___flge@ff1+2)^0,c
  1374   001F06  0E41               	movlw	65
  1375   001F08  6E2F               	movwf	(___flge@ff1+3)^0,c
  1376   001F0A  C057  F030         	movff	_I,___flge@ff2
  1377   001F0E  C058  F031         	movff	_I+1,___flge@ff2+1
  1378   001F12  C059  F032         	movff	_I+2,___flge@ff2+2
  1379   001F16  C05A  F033         	movff	_I+3,___flge@ff2+3
  1380   001F1A  ECFF  F015         	call	___flge	;wreg free
  1381   001F1E  A0D8               	btfss	status,0,c
  1382   001F20  EF94  F00F         	goto	u6301
  1383   001F24  EF96  F00F         	goto	u6300
  1384   001F28                     u6301:
  1385   001F28  EFD2  F00F         	goto	l6023
  1386   001F2C                     u6300:
  1387   001F2C                     
  1388                           ;main.c: 204:     {;main.c: 205:         estado = 1;
  1389   001F2C  0E01               	movlw	1
  1390   001F2E  0100               	movlb	0	; () banked
  1391   001F30  6FF8               	movwf	_estado& (0+255),b
  1392   001F32                     
  1393                           ; BSR set to: 0
  1394                           ;main.c: 206:         LATA5 = 0;
  1395   001F32  9A89               	bcf	3977,5,c	;volatile
  1396   001F34                     
  1397                           ; BSR set to: 0
  1398                           ;main.c: 207:         currentSeg = conteo;
  1399   001F34  C0D7  F0C7         	movff	_conteo,_currentSeg
  1400   001F38  C0D8  F0C8         	movff	_conteo+1,_currentSeg+1
  1401   001F3C  C0D9  F0C9         	movff	_conteo+2,_currentSeg+2
  1402   001F40  C0DA  F0CA         	movff	_conteo+3,_currentSeg+3
  1403   001F44                     
  1404                           ; BSR set to: 0
  1405                           ;main.c: 208:         if (currentSeg - previousMillis >= intervalo)
  1406   001F44  51C3               	movf	_previousMillis& (0+255),w,b
  1407   001F46  5DC7               	subwf	_currentSeg& (0+255),w,b
  1408   001F48  6E38               	movwf	??_trip_protec_current^0,c
  1409   001F4A  51C4               	movf	(_previousMillis+1)& (0+255),w,b
  1410   001F4C  59C8               	subwfb	(_currentSeg+1)& (0+255),w,b
  1411   001F4E  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1412   001F50  51C5               	movf	(_previousMillis+2)& (0+255),w,b
  1413   001F52  59C9               	subwfb	(_currentSeg+2)& (0+255),w,b
  1414   001F54  6E3A               	movwf	(??_trip_protec_current+2)^0,c
  1415   001F56  51C6               	movf	(_previousMillis+3)& (0+255),w,b
  1416   001F58  59CA               	subwfb	(_currentSeg+3)& (0+255),w,b
  1417   001F5A  6E3B               	movwf	(??_trip_protec_current+3)^0,c
  1418   001F5C  503B               	movf	(??_trip_protec_current+3)^0,w,c
  1419   001F5E  103A               	iorwf	(??_trip_protec_current+2)^0,w,c
  1420   001F60  E10B               	bnz	u6310
  1421   001F62  0E40               	movlw	64
  1422   001F64  5C38               	subwf	??_trip_protec_current^0,w,c
  1423   001F66  0E38               	movlw	56
  1424   001F68  5839               	subwfb	(??_trip_protec_current+1)^0,w,c
  1425   001F6A  A0D8               	btfss	status,0,c
  1426   001F6C  EFBA  F00F         	goto	u6311
  1427   001F70  EFBC  F00F         	goto	u6310
  1428   001F74                     u6311:
  1429   001F74  EFD2  F00F         	goto	l6023
  1430   001F78                     u6310:
  1431   001F78                     
  1432                           ; BSR set to: 0
  1433                           ;main.c: 209:         {;main.c: 210:             estado = 0;
  1434   001F78  0E00               	movlw	0
  1435   001F7A  6FF8               	movwf	_estado& (0+255),b
  1436   001F7C                     
  1437                           ; BSR set to: 0
  1438                           ;main.c: 211:             previousMillis = currentSeg;
  1439   001F7C  C0C7  F0C3         	movff	_currentSeg,_previousMillis
  1440   001F80  C0C8  F0C4         	movff	_currentSeg+1,_previousMillis+1
  1441   001F84  C0C9  F0C5         	movff	_currentSeg+2,_previousMillis+2
  1442   001F88  C0CA  F0C6         	movff	_currentSeg+3,_previousMillis+3
  1443   001F8C                     
  1444                           ; BSR set to: 0
  1445                           ;main.c: 212:             LATA5 = 1;
  1446   001F8C  8A89               	bsf	3977,5,c	;volatile
  1447   001F8E                     
  1448                           ; BSR set to: 0
  1449                           ;main.c: 213:             _delay((unsigned long)((3000)*(48000000/4000.0)));
  1450   001F8E  0EB7               	movlw	183
  1451   001F90  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1452   001F92  0EA1               	movlw	161
  1453   001F94  6E38               	movwf	??_trip_protec_current^0,c
  1454   001F96  0EC4               	movlw	196
  1455   001F98                     u6557:
  1456   001F98  2EE8               	decfsz	wreg,f,c
  1457   001F9A  D7FE               	bra	u6557
  1458   001F9C  2E38               	decfsz	??_trip_protec_current^0,f,c
  1459   001F9E  D7FC               	bra	u6557
  1460   001FA0  2E39               	decfsz	(??_trip_protec_current+1)^0,f,c
  1461   001FA2  D7FA               	bra	u6557
  1462   001FA4                     l6023:
  1463                           
  1464                           ;main.c: 216:     if (I >= 16 && I < 17)
  1465   001FA4  C057  F02C         	movff	_I,___flge@ff1
  1466   001FA8  C058  F02D         	movff	_I+1,___flge@ff1+1
  1467   001FAC  C059  F02E         	movff	_I+2,___flge@ff1+2
  1468   001FB0  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1469   001FB4  0E00               	movlw	0
  1470   001FB6  6E30               	movwf	___flge@ff2^0,c
  1471   001FB8  0E00               	movlw	0
  1472   001FBA  6E31               	movwf	(___flge@ff2+1)^0,c
  1473   001FBC  0E80               	movlw	128
  1474   001FBE  6E32               	movwf	(___flge@ff2+2)^0,c
  1475   001FC0  0E41               	movlw	65
  1476   001FC2  6E33               	movwf	(___flge@ff2+3)^0,c
  1477   001FC4  ECFF  F015         	call	___flge	;wreg free
  1478   001FC8  A0D8               	btfss	status,0,c
  1479   001FCA  EFE9  F00F         	goto	u6321
  1480   001FCE  EFEB  F00F         	goto	u6320
  1481   001FD2                     u6321:
  1482   001FD2  EF22  F010         	goto	l6037
  1483   001FD6                     u6320:
  1484   001FD6  C057  F02C         	movff	_I,___flge@ff1
  1485   001FDA  C058  F02D         	movff	_I+1,___flge@ff1+1
  1486   001FDE  C059  F02E         	movff	_I+2,___flge@ff1+2
  1487   001FE2  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1488   001FE6  0E00               	movlw	0
  1489   001FE8  6E30               	movwf	___flge@ff2^0,c
  1490   001FEA  0E00               	movlw	0
  1491   001FEC  6E31               	movwf	(___flge@ff2+1)^0,c
  1492   001FEE  0E88               	movlw	136
  1493   001FF0  6E32               	movwf	(___flge@ff2+2)^0,c
  1494   001FF2  0E41               	movlw	65
  1495   001FF4  6E33               	movwf	(___flge@ff2+3)^0,c
  1496   001FF6  ECFF  F015         	call	___flge	;wreg free
  1497   001FFA  B0D8               	btfsc	status,0,c
  1498   001FFC  EF02  F010         	goto	u6331
  1499   002000  EF04  F010         	goto	u6330
  1500   002004                     u6331:
  1501   002004  EF22  F010         	goto	l6037
  1502   002008                     u6330:
  1503   002008                     
  1504                           ;main.c: 217:     {;main.c: 218:         estado = 1;
  1505   002008  0E01               	movlw	1
  1506   00200A  0100               	movlb	0	; () banked
  1507   00200C  6FF8               	movwf	_estado& (0+255),b
  1508   00200E                     
  1509                           ; BSR set to: 0
  1510                           ;main.c: 219:         i = i + 1;
  1511   00200E  0E01               	movlw	1
  1512   002010  25E5               	addwf	_i& (0+255),w,b
  1513   002012  6FE5               	movwf	_i& (0+255),b
  1514   002014  0E00               	movlw	0
  1515   002016  21E6               	addwfc	(_i+1)& (0+255),w,b
  1516   002018  6FE6               	movwf	(_i+1)& (0+255),b
  1517   00201A                     
  1518                           ; BSR set to: 0
  1519                           ;main.c: 220:         if (i > 600)
  1520   00201A  BFE6               	btfsc	(_i+1)& (0+255),7,b
  1521   00201C  EF19  F010         	goto	u6341
  1522   002020  0E59               	movlw	89
  1523   002022  5DE5               	subwf	_i& (0+255),w,b
  1524   002024  0E02               	movlw	2
  1525   002026  59E6               	subwfb	(_i+1)& (0+255),w,b
  1526   002028  A0D8               	btfss	status,0,c
  1527   00202A  EF19  F010         	goto	u6341
  1528   00202E  EF1B  F010         	goto	u6340
  1529   002032                     u6341:
  1530   002032  EF22  F010         	goto	l6037
  1531   002036                     u6340:
  1532   002036                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 221:         {;main.c: 222:             i = 0;
  1535   002036  0E00               	movlw	0
  1536   002038  6FE6               	movwf	(_i+1)& (0+255),b
  1537   00203A  0E00               	movlw	0
  1538   00203C  6FE5               	movwf	_i& (0+255),b
  1539   00203E                     
  1540                           ; BSR set to: 0
  1541                           ;main.c: 223:             LATA5 = 0;
  1542   00203E  9A89               	bcf	3977,5,c	;volatile
  1543   002040                     l481:
  1544   002040  EF20  F010         	goto	l481
  1545   002044                     l6037:
  1546                           
  1547                           ;main.c: 227:     if (I >= 17 && I < 18)
  1548   002044  C057  F02C         	movff	_I,___flge@ff1
  1549   002048  C058  F02D         	movff	_I+1,___flge@ff1+1
  1550   00204C  C059  F02E         	movff	_I+2,___flge@ff1+2
  1551   002050  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1552   002054  0E00               	movlw	0
  1553   002056  6E30               	movwf	___flge@ff2^0,c
  1554   002058  0E00               	movlw	0
  1555   00205A  6E31               	movwf	(___flge@ff2+1)^0,c
  1556   00205C  0E88               	movlw	136
  1557   00205E  6E32               	movwf	(___flge@ff2+2)^0,c
  1558   002060  0E41               	movlw	65
  1559   002062  6E33               	movwf	(___flge@ff2+3)^0,c
  1560   002064  ECFF  F015         	call	___flge	;wreg free
  1561   002068  A0D8               	btfss	status,0,c
  1562   00206A  EF39  F010         	goto	u6351
  1563   00206E  EF3B  F010         	goto	u6350
  1564   002072                     u6351:
  1565   002072  EF72  F010         	goto	l6051
  1566   002076                     u6350:
  1567   002076  C057  F02C         	movff	_I,___flge@ff1
  1568   00207A  C058  F02D         	movff	_I+1,___flge@ff1+1
  1569   00207E  C059  F02E         	movff	_I+2,___flge@ff1+2
  1570   002082  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1571   002086  0E00               	movlw	0
  1572   002088  6E30               	movwf	___flge@ff2^0,c
  1573   00208A  0E00               	movlw	0
  1574   00208C  6E31               	movwf	(___flge@ff2+1)^0,c
  1575   00208E  0E90               	movlw	144
  1576   002090  6E32               	movwf	(___flge@ff2+2)^0,c
  1577   002092  0E41               	movlw	65
  1578   002094  6E33               	movwf	(___flge@ff2+3)^0,c
  1579   002096  ECFF  F015         	call	___flge	;wreg free
  1580   00209A  B0D8               	btfsc	status,0,c
  1581   00209C  EF52  F010         	goto	u6361
  1582   0020A0  EF54  F010         	goto	u6360
  1583   0020A4                     u6361:
  1584   0020A4  EF72  F010         	goto	l6051
  1585   0020A8                     u6360:
  1586   0020A8                     
  1587                           ;main.c: 228:     {;main.c: 229:         estado = 1;
  1588   0020A8  0E01               	movlw	1
  1589   0020AA  0100               	movlb	0	; () banked
  1590   0020AC  6FF8               	movwf	_estado& (0+255),b
  1591   0020AE                     
  1592                           ; BSR set to: 0
  1593                           ;main.c: 230:         j = j + 1;
  1594   0020AE  0E01               	movlw	1
  1595   0020B0  25E3               	addwf	_j& (0+255),w,b
  1596   0020B2  6FE3               	movwf	_j& (0+255),b
  1597   0020B4  0E00               	movlw	0
  1598   0020B6  21E4               	addwfc	(_j+1)& (0+255),w,b
  1599   0020B8  6FE4               	movwf	(_j+1)& (0+255),b
  1600   0020BA                     
  1601                           ; BSR set to: 0
  1602                           ;main.c: 231:         if ( j > 300)
  1603   0020BA  BFE4               	btfsc	(_j+1)& (0+255),7,b
  1604   0020BC  EF69  F010         	goto	u6371
  1605   0020C0  0E2D               	movlw	45
  1606   0020C2  5DE3               	subwf	_j& (0+255),w,b
  1607   0020C4  0E01               	movlw	1
  1608   0020C6  59E4               	subwfb	(_j+1)& (0+255),w,b
  1609   0020C8  A0D8               	btfss	status,0,c
  1610   0020CA  EF69  F010         	goto	u6371
  1611   0020CE  EF6B  F010         	goto	u6370
  1612   0020D2                     u6371:
  1613   0020D2  EF72  F010         	goto	l6051
  1614   0020D6                     u6370:
  1615   0020D6                     
  1616                           ; BSR set to: 0
  1617                           ;main.c: 232:         {;main.c: 233:             j = 0;
  1618   0020D6  0E00               	movlw	0
  1619   0020D8  6FE4               	movwf	(_j+1)& (0+255),b
  1620   0020DA  0E00               	movlw	0
  1621   0020DC  6FE3               	movwf	_j& (0+255),b
  1622   0020DE                     
  1623                           ; BSR set to: 0
  1624                           ;main.c: 234:             LATA5 = 0;
  1625   0020DE  9A89               	bcf	3977,5,c	;volatile
  1626   0020E0                     l486:
  1627   0020E0  EF70  F010         	goto	l486
  1628   0020E4                     l6051:
  1629                           
  1630                           ;main.c: 238:     if (I >= 18 && I < 19)
  1631   0020E4  C057  F02C         	movff	_I,___flge@ff1
  1632   0020E8  C058  F02D         	movff	_I+1,___flge@ff1+1
  1633   0020EC  C059  F02E         	movff	_I+2,___flge@ff1+2
  1634   0020F0  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1635   0020F4  0E00               	movlw	0
  1636   0020F6  6E30               	movwf	___flge@ff2^0,c
  1637   0020F8  0E00               	movlw	0
  1638   0020FA  6E31               	movwf	(___flge@ff2+1)^0,c
  1639   0020FC  0E90               	movlw	144
  1640   0020FE  6E32               	movwf	(___flge@ff2+2)^0,c
  1641   002100  0E41               	movlw	65
  1642   002102  6E33               	movwf	(___flge@ff2+3)^0,c
  1643   002104  ECFF  F015         	call	___flge	;wreg free
  1644   002108  A0D8               	btfss	status,0,c
  1645   00210A  EF89  F010         	goto	u6381
  1646   00210E  EF8B  F010         	goto	u6380
  1647   002112                     u6381:
  1648   002112  EFC2  F010         	goto	l6065
  1649   002116                     u6380:
  1650   002116  C057  F02C         	movff	_I,___flge@ff1
  1651   00211A  C058  F02D         	movff	_I+1,___flge@ff1+1
  1652   00211E  C059  F02E         	movff	_I+2,___flge@ff1+2
  1653   002122  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1654   002126  0E00               	movlw	0
  1655   002128  6E30               	movwf	___flge@ff2^0,c
  1656   00212A  0E00               	movlw	0
  1657   00212C  6E31               	movwf	(___flge@ff2+1)^0,c
  1658   00212E  0E98               	movlw	152
  1659   002130  6E32               	movwf	(___flge@ff2+2)^0,c
  1660   002132  0E41               	movlw	65
  1661   002134  6E33               	movwf	(___flge@ff2+3)^0,c
  1662   002136  ECFF  F015         	call	___flge	;wreg free
  1663   00213A  B0D8               	btfsc	status,0,c
  1664   00213C  EFA2  F010         	goto	u6391
  1665   002140  EFA4  F010         	goto	u6390
  1666   002144                     u6391:
  1667   002144  EFC2  F010         	goto	l6065
  1668   002148                     u6390:
  1669   002148                     
  1670                           ;main.c: 239:     {;main.c: 240:         estado = 1;
  1671   002148  0E01               	movlw	1
  1672   00214A  0100               	movlb	0	; () banked
  1673   00214C  6FF8               	movwf	_estado& (0+255),b
  1674   00214E                     
  1675                           ; BSR set to: 0
  1676                           ;main.c: 241:         k = k + 1;
  1677   00214E  0E01               	movlw	1
  1678   002150  25E1               	addwf	_k& (0+255),w,b
  1679   002152  6FE1               	movwf	_k& (0+255),b
  1680   002154  0E00               	movlw	0
  1681   002156  21E2               	addwfc	(_k+1)& (0+255),w,b
  1682   002158  6FE2               	movwf	(_k+1)& (0+255),b
  1683   00215A                     
  1684                           ; BSR set to: 0
  1685                           ;main.c: 242:         if (k > 120)
  1686   00215A  BFE2               	btfsc	(_k+1)& (0+255),7,b
  1687   00215C  EFB9  F010         	goto	u6401
  1688   002160  51E2               	movf	(_k+1)& (0+255),w,b
  1689   002162  E109               	bnz	u6400
  1690   002164  0E79               	movlw	121
  1691   002166  5DE1               	subwf	_k& (0+255),w,b
  1692   002168  A0D8               	btfss	status,0,c
  1693   00216A  EFB9  F010         	goto	u6401
  1694   00216E  EFBB  F010         	goto	u6400
  1695   002172                     u6401:
  1696   002172  EFC2  F010         	goto	l6065
  1697   002176                     u6400:
  1698   002176                     
  1699                           ; BSR set to: 0
  1700                           ;main.c: 243:         {;main.c: 244:             k = 0;
  1701   002176  0E00               	movlw	0
  1702   002178  6FE2               	movwf	(_k+1)& (0+255),b
  1703   00217A  0E00               	movlw	0
  1704   00217C  6FE1               	movwf	_k& (0+255),b
  1705   00217E                     
  1706                           ; BSR set to: 0
  1707                           ;main.c: 245:             LATA5 = 0;
  1708   00217E  9A89               	bcf	3977,5,c	;volatile
  1709   002180                     l491:
  1710   002180  EFC0  F010         	goto	l491
  1711   002184                     l6065:
  1712                           
  1713                           ;main.c: 249:     if (I >= 19)
  1714   002184  C057  F02C         	movff	_I,___flge@ff1
  1715   002188  C058  F02D         	movff	_I+1,___flge@ff1+1
  1716   00218C  C059  F02E         	movff	_I+2,___flge@ff1+2
  1717   002190  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1718   002194  0E00               	movlw	0
  1719   002196  6E30               	movwf	___flge@ff2^0,c
  1720   002198  0E00               	movlw	0
  1721   00219A  6E31               	movwf	(___flge@ff2+1)^0,c
  1722   00219C  0E98               	movlw	152
  1723   00219E  6E32               	movwf	(___flge@ff2+2)^0,c
  1724   0021A0  0E41               	movlw	65
  1725   0021A2  6E33               	movwf	(___flge@ff2+3)^0,c
  1726   0021A4  ECFF  F015         	call	___flge	;wreg free
  1727   0021A8  A0D8               	btfss	status,0,c
  1728   0021AA  EFD9  F010         	goto	u6411
  1729   0021AE  EFDB  F010         	goto	u6410
  1730   0021B2                     u6411:
  1731   0021B2  EFF9  F010         	goto	l499
  1732   0021B6                     u6410:
  1733   0021B6                     
  1734                           ;main.c: 250:     {;main.c: 251:         estado = 1;
  1735   0021B6  0E01               	movlw	1
  1736   0021B8  0100               	movlb	0	; () banked
  1737   0021BA  6FF8               	movwf	_estado& (0+255),b
  1738   0021BC                     
  1739                           ; BSR set to: 0
  1740                           ;main.c: 252:         l = l + 1;
  1741   0021BC  0E01               	movlw	1
  1742   0021BE  25DF               	addwf	_l& (0+255),w,b
  1743   0021C0  6FDF               	movwf	_l& (0+255),b
  1744   0021C2  0E00               	movlw	0
  1745   0021C4  21E0               	addwfc	(_l+1)& (0+255),w,b
  1746   0021C6  6FE0               	movwf	(_l+1)& (0+255),b
  1747   0021C8                     
  1748                           ; BSR set to: 0
  1749                           ;main.c: 253:         if (l > 15)
  1750   0021C8  BFE0               	btfsc	(_l+1)& (0+255),7,b
  1751   0021CA  EFF0  F010         	goto	u6421
  1752   0021CE  51E0               	movf	(_l+1)& (0+255),w,b
  1753   0021D0  E109               	bnz	u6420
  1754   0021D2  0E10               	movlw	16
  1755   0021D4  5DDF               	subwf	_l& (0+255),w,b
  1756   0021D6  A0D8               	btfss	status,0,c
  1757   0021D8  EFF0  F010         	goto	u6421
  1758   0021DC  EFF2  F010         	goto	u6420
  1759   0021E0                     u6421:
  1760   0021E0  EFF9  F010         	goto	l499
  1761   0021E4                     u6420:
  1762   0021E4                     
  1763                           ; BSR set to: 0
  1764                           ;main.c: 254:         {;main.c: 255:             l = 0;
  1765   0021E4  0E00               	movlw	0
  1766   0021E6  6FE0               	movwf	(_l+1)& (0+255),b
  1767   0021E8  0E00               	movlw	0
  1768   0021EA  6FDF               	movwf	_l& (0+255),b
  1769   0021EC                     
  1770                           ; BSR set to: 0
  1771                           ;main.c: 256:             LATA5 = 0;
  1772   0021EC  9A89               	bcf	3977,5,c	;volatile
  1773   0021EE                     l496:
  1774   0021EE  EFF7  F010         	goto	l496
  1775   0021F2                     l499:
  1776   0021F2  0012               	return		;funcret
  1777   0021F4                     __end_of_trip_protec_current:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _sprintf *****************
  1781 ;; Defined at:
  1782 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  s               2   77[BANK0 ] PTR unsigned char 
  1785 ;;		 -> valor_string(14), 
  1786 ;;  fmt             1   79[BANK0 ] PTR const unsigned char 
  1787 ;;		 -> STR_1(12), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  f              12   85[BANK0 ] struct _IO_FILE
  1790 ;;  ret             2    0        int 
  1791 ;;  ap              1   84[BANK0 ] PTR void [1]
  1792 ;;		 -> ?_sprintf(2), 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2   77[BANK0 ] int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1802 ;;      Params:         0       7       0       0       0       0       0       0       0
  1803 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1806 ;;Total ram usage:       20 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 12
  1809 ;; This function calls:
  1810 ;;		_vfprintf
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text2
  1817   0033A0                     __ptext2:
  1818                           	callstack 0
  1819   0033A0                     _sprintf:
  1820                           	callstack 18
  1821   0033A0  0EB0               	movlw	low (?_sprintf+3)
  1822   0033A2  0100               	movlb	0	; () banked
  1823   0033A4  6FB4               	movwf	sprintf@ap& (0+255),b
  1824   0033A6  C0AD  F0B5         	movff	sprintf@s,sprintf@f
  1825   0033AA  C0AE  F0B6         	movff	sprintf@s+1,sprintf@f+1
  1826   0033AE                     
  1827                           ; BSR set to: 0
  1828   0033AE  0E00               	movlw	0
  1829   0033B0  6FB9               	movwf	(sprintf@f+4)& (0+255),b
  1830   0033B2  0E00               	movlw	0
  1831   0033B4  6FB8               	movwf	(sprintf@f+3)& (0+255),b
  1832   0033B6                     
  1833                           ; BSR set to: 0
  1834   0033B6  0E00               	movlw	0
  1835   0033B8  6FC0               	movwf	(sprintf@f+11)& (0+255),b
  1836   0033BA  0E00               	movlw	0
  1837   0033BC  6FBF               	movwf	(sprintf@f+10)& (0+255),b
  1838   0033BE                     
  1839                           ; BSR set to: 0
  1840   0033BE  0EB5               	movlw	low sprintf@f
  1841   0033C0  6FA9               	movwf	vfprintf@fp& (0+255),b
  1842   0033C2  C0AF  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  1843   0033C6  0EB4               	movlw	low sprintf@ap
  1844   0033C8  6FAB               	movwf	vfprintf@ap& (0+255),b
  1845   0033CA  ECAF  F019         	call	_vfprintf	;wreg free
  1846   0033CE  0100               	movlb	0	; () banked
  1847   0033D0  51B8               	movf	(sprintf@f+3)& (0+255),w,b
  1848   0033D2  25AD               	addwf	sprintf@s& (0+255),w,b
  1849   0033D4  6ED9               	movwf	fsr2l,c
  1850   0033D6  51B9               	movf	(sprintf@f+4)& (0+255),w,b
  1851   0033D8  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1852   0033DA  6EDA               	movwf	fsr2h,c
  1853   0033DC  6ADF               	clrf	indf2,c
  1854   0033DE                     
  1855                           ; BSR set to: 0
  1856   0033DE  0012               	return		;funcret
  1857   0033E0                     __end_of_sprintf:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _vfprintf *****************
  1861 ;; Defined at:
  1862 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  1865 ;;		 -> sprintf@f(12), 
  1866 ;;  fmt             1   74[BANK0 ] PTR const unsigned char 
  1867 ;;		 -> STR_1(12), 
  1868 ;;  ap              1   75[BANK0 ] PTR PTR void 
  1869 ;;		 -> sprintf@ap(1), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  cfmt            1   76[BANK0 ] PTR unsigned char 
  1872 ;;		 -> STR_1(12), 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2   73[BANK0 ] int 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1882 ;;      Params:         0       3       0       0       0       0       0       0       0
  1883 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1885 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1886 ;;Total ram usage:        4 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 11
  1889 ;; This function calls:
  1890 ;;		_vfpfcnvrt
  1891 ;; This function is called by:
  1892 ;;		_sprintf
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text3
  1897   00335E                     __ptext3:
  1898                           	callstack 0
  1899   00335E                     _vfprintf:
  1900                           	callstack 18
  1901   00335E                     
  1902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1903   00335E  C0AA  F0AC         	movff	vfprintf@fmt,vfprintf@cfmt
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1906   003362  EFBC  F019         	goto	l5901
  1907   003366                     l5899:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1910   003366  C0A9  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1911   00336A  0EAC               	movlw	low vfprintf@cfmt
  1912   00336C  0100               	movlb	0	; () banked
  1913   00336E  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1914   003370  C0AB  F0A0         	movff	vfprintf@ap,vfpfcnvrt@ap
  1915   003374  EC05  F012         	call	_vfpfcnvrt	;wreg free
  1916   003378                     l5901:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1919   003378  C0AC  FFF6         	movff	vfprintf@cfmt,tblptrl
  1920   00337C                     	if	1	;There is more than 1 active tblptr byte
  1921   00337C  0E08               	movlw	high __smallconst
  1922   00337E  6EF7               	movwf	tblptrh,c
  1923   003380                     	endif
  1924   003380                     	if	0	;tblptru may be non-zero
  1925   003380                     	endif
  1926   003380                     	if	0	;tblptru may be non-zero
  1927   003380                     	endif
  1928   003380  0008               	tblrd		*
  1929   003382  50F5               	movf	tablat,w,c
  1930   003384  0900               	iorlw	0
  1931   003386  A4D8               	btfss	status,2,c
  1932   003388  EFC8  F019         	goto	u6211
  1933   00338C  EFCA  F019         	goto	u6210
  1934   003390                     u6211:
  1935   003390  EFB3  F019         	goto	l5899
  1936   003394                     u6210:
  1937   003394                     
  1938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1939   003394  0E00               	movlw	0
  1940   003396  0100               	movlb	0	; () banked
  1941   003398  6FAA               	movwf	(?_vfprintf+1)& (0+255),b
  1942   00339A  0E00               	movlw	0
  1943   00339C  6FA9               	movwf	?_vfprintf& (0+255),b
  1944   00339E                     
  1945                           ; BSR set to: 0
  1946   00339E  0012               	return		;funcret
  1947   0033A0                     __end_of_vfprintf:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _vfpfcnvrt *****************
  1951 ;; Defined at:
  1952 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  1955 ;;		 -> sprintf@f(12), 
  1956 ;;  fmt             1   63[BANK0 ] PTR PTR unsigned char 
  1957 ;;		 -> vfprintf@cfmt(1), 
  1958 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1959 ;;		 -> sprintf@ap(1), 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  convarg         4   67[BANK0 ] struct .
  1962 ;;  cp              1   72[BANK0 ] PTR unsigned char 
  1963 ;;		 -> STR_1(12), 
  1964 ;;  c               1   71[BANK0 ] unsigned char 
  1965 ;;  done            1    0        _Bool 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1975 ;;      Params:         0       3       0       0       0       0       0       0       0
  1976 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1977 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1978 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1979 ;;Total ram usage:       11 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 10
  1982 ;; This function calls:
  1983 ;;		_efgtoa
  1984 ;;		_fputc
  1985 ;;		_read_prec_or_width
  1986 ;; This function is called by:
  1987 ;;		_vfprintf
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text4
  1992   00240A                     __ptext4:
  1993                           	callstack 0
  1994   00240A                     _vfpfcnvrt:
  1995                           	callstack 18
  1996   00240A                     
  1997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1998   00240A  0100               	movlb	0	; () banked
  1999   00240C  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2000   00240E  6ED9               	movwf	fsr2l,c
  2001   002410  6ADA               	clrf	fsr2h,c
  2002   002412  CFDF FFF6          	movff	indf2,tblptrl
  2003   002416                     	if	1	;There is more than 1 active tblptr byte
  2004   002416  0E08               	movlw	high __smallconst
  2005   002418  6EF7               	movwf	tblptrh,c
  2006   00241A                     	endif
  2007   00241A                     	if	0	;tblptru may be non-zero
  2008   00241A                     	endif
  2009   00241A                     	if	0	;tblptru may be non-zero
  2010   00241A                     	endif
  2011   00241A  0008               	tblrd		*
  2012   00241C  50F5               	movf	tablat,w,c
  2013   00241E  0A25               	xorlw	37
  2014   002420  A4D8               	btfss	status,2,c
  2015   002422  EF15  F012         	goto	u6041
  2016   002426  EF17  F012         	goto	u6040
  2017   00242A                     u6041:
  2018   00242A  EFFB  F012         	goto	l5743
  2019   00242E                     u6040:
  2020   00242E                     
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2023   00242E  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2024   002430  6ED9               	movwf	fsr2l,c
  2025   002432  6ADA               	clrf	fsr2h,c
  2026   002434  2ADF               	incf	indf2,f,c
  2027   002436                     
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2030   002436  0E00               	movlw	0
  2031   002438  6FDC               	movwf	(_width+1)& (0+255),b
  2032   00243A  0E00               	movlw	0
  2033   00243C  6FDB               	movwf	_width& (0+255),b
  2034   00243E  C0DB  F0F7         	movff	_width,_flags
  2035   002442                     
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2038   002442  69DD               	setf	_prec& (0+255),b
  2039   002444  69DE               	setf	(_prec+1)& (0+255),b
  2040   002446                     
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2043   002446  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2044   002448  6ED9               	movwf	fsr2l,c
  2045   00244A  6ADA               	clrf	fsr2h,c
  2046   00244C  CFDF FFF6          	movff	indf2,tblptrl
  2047   002450                     	if	1	;There is more than 1 active tblptr byte
  2048   002450  0E08               	movlw	high __smallconst
  2049   002452  6EF7               	movwf	tblptrh,c
  2050   002454                     	endif
  2051   002454                     	if	0	;tblptru may be non-zero
  2052   002454                     	endif
  2053   002454                     	if	0	;tblptru may be non-zero
  2054   002454                     	endif
  2055   002454  0008               	tblrd		*
  2056   002456  50F5               	movf	tablat,w,c
  2057   002458  0A2E               	xorlw	46
  2058   00245A  A4D8               	btfss	status,2,c
  2059   00245C  EF32  F012         	goto	u6051
  2060   002460  EF34  F012         	goto	u6050
  2061   002464                     u6051:
  2062   002464  EF42  F012         	goto	l5705
  2063   002468                     u6050:
  2064   002468                     
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2067   002468  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2068   00246A  6ED9               	movwf	fsr2l,c
  2069   00246C  6ADA               	clrf	fsr2h,c
  2070   00246E  2ADF               	incf	indf2,f,c
  2071   002470                     
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2074   002470  C09F  F00B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2075   002474  C0A0  F00C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2076   002478  ECB2  F017         	call	_read_prec_or_width	;wreg free
  2077   00247C  C00B  F0DD         	movff	?_read_prec_or_width,_prec
  2078   002480  C00C  F0DE         	movff	?_read_prec_or_width+1,_prec+1
  2079   002484                     l5705:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2082   002484  0100               	movlb	0	; () banked
  2083   002486  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2084   002488  6ED9               	movwf	fsr2l,c
  2085   00248A  6ADA               	clrf	fsr2h,c
  2086   00248C  50DF               	movf	indf2,w,c
  2087   00248E  6FA8               	movwf	vfpfcnvrt@cp& (0+255),b
  2088   002490                     
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2091   002490  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2092   002494                     	if	1	;There is more than 1 active tblptr byte
  2093   002494  0E08               	movlw	high __smallconst
  2094   002496  6EF7               	movwf	tblptrh,c
  2095   002498                     	endif
  2096   002498                     	if	0	;tblptru may be non-zero
  2097   002498                     	endif
  2098   002498                     	if	0	;tblptru may be non-zero
  2099   002498                     	endif
  2100   002498  0008               	tblrd		*
  2101   00249A  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2104   00249E  EF5C  F012         	goto	l5717
  2105   0024A2                     l5709:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2109   0024A2  2BA8               	incf	vfpfcnvrt@cp& (0+255),f,b
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  2112   0024A4  EF75  F012         	goto	l5719
  2113   0024A8                     l5711:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2117   0024A8  0E6C               	movlw	108
  2118   0024AA  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2121   0024AC  EF75  F012         	goto	l5719
  2122   0024B0                     l5713:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2126   0024B0  0E00               	movlw	0
  2127   0024B2  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2130   0024B4  EF75  F012         	goto	l5719
  2131   0024B8                     l5717:
  2132                           
  2133                           ; BSR set to: 0
  2134   0024B8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  2135   0024BA  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2136   0024BC  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2137                           
  2138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 1, Range of values is 0 to 0
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte            4     3 (average)
  2144                           ;	Chosen strategy is simple_byte
  2145   0024BE  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2146   0024C0  0A00               	xorlw	0	; case 0
  2147   0024C2  B4D8               	btfsc	status,2,c
  2148   0024C4  EF66  F012         	goto	l6249
  2149   0024C8  EF58  F012         	goto	l5713
  2150   0024CC                     l6249:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ; Switch size 1, requested type "simple"
  2154                           ; Number of cases is 3, Range of values is 76 to 108
  2155                           ; switch strategies available:
  2156                           ; Name         Instructions Cycles
  2157                           ; simple_byte           10     6 (average)
  2158                           ;	Chosen strategy is simple_byte
  2159   0024CC  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2160   0024CE  0A4C               	xorlw	76	; case 76
  2161   0024D0  B4D8               	btfsc	status,2,c
  2162   0024D2  EF51  F012         	goto	l5709
  2163   0024D6  0A2A               	xorlw	42	; case 102
  2164   0024D8  B4D8               	btfsc	status,2,c
  2165   0024DA  EF54  F012         	goto	l5711
  2166   0024DE  0A0A               	xorlw	10	; case 108
  2167   0024E0  B4D8               	btfsc	status,2,c
  2168   0024E2  EF51  F012         	goto	l5709
  2169   0024E6  EF58  F012         	goto	l5713
  2170   0024EA                     l5719:
  2171                           
  2172                           ; BSR set to: 0
  2173   0024EA  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2174   0024EE                     	if	1	;There is more than 1 active tblptr byte
  2175   0024EE  0E08               	movlw	high __smallconst
  2176   0024F0  6EF7               	movwf	tblptrh,c
  2177   0024F2                     	endif
  2178   0024F2                     	if	0	;tblptru may be non-zero
  2179   0024F2                     	endif
  2180   0024F2                     	if	0	;tblptru may be non-zero
  2181   0024F2                     	endif
  2182   0024F2  0008               	tblrd		*
  2183   0024F4  50F5               	movf	tablat,w,c
  2184   0024F6  0A66               	xorlw	102
  2185   0024F8  A4D8               	btfss	status,2,c
  2186   0024FA  EF81  F012         	goto	u6061
  2187   0024FE  EF83  F012         	goto	u6060
  2188   002502                     u6061:
  2189   002502  EFF4  F012         	goto	l5739
  2190   002506                     u6060:
  2191   002506  EFAD  F012         	goto	l5727
  2192   00250A                     l5721:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2196   00250A  51A0               	movf	vfpfcnvrt@ap& (0+255),w,b
  2197   00250C  6ED9               	movwf	fsr2l,c
  2198   00250E  6ADA               	clrf	fsr2h,c
  2199   002510  CFDF F0A1          	movff	indf2,??_vfpfcnvrt
  2200   002514  0E04               	movlw	4
  2201   002516  26DF               	addwf	indf2,f,c
  2202   002518  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2203   00251A  6ED9               	movwf	fsr2l,c
  2204   00251C  6ADA               	clrf	fsr2h,c
  2205   00251E  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  2206   002522  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  2207   002526  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  2208   00252A  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2211   00252E  EFC2  F012         	goto	l5729
  2212   002532                     l5723:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2216   002532  51A0               	movf	vfpfcnvrt@ap& (0+255),w,b
  2217   002534  6ED9               	movwf	fsr2l,c
  2218   002536  6ADA               	clrf	fsr2h,c
  2219   002538  CFDF F0A1          	movff	indf2,??_vfpfcnvrt
  2220   00253C  0E04               	movlw	4
  2221   00253E  26DF               	addwf	indf2,f,c
  2222   002540  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2223   002542  6ED9               	movwf	fsr2l,c
  2224   002544  6ADA               	clrf	fsr2h,c
  2225   002546  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  2226   00254A  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  2227   00254E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  2228   002552  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2231   002556  EFC2  F012         	goto	l5729
  2232   00255A                     l5727:
  2233                           
  2234                           ; BSR set to: 0
  2235   00255A  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  2236   00255C  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2237   00255E  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2238                           
  2239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2240                           ; Switch size 1, requested type "simple"
  2241                           ; Number of cases is 1, Range of values is 0 to 0
  2242                           ; switch strategies available:
  2243                           ; Name         Instructions Cycles
  2244                           ; simple_byte            4     3 (average)
  2245                           ;	Chosen strategy is simple_byte
  2246   002560  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2247   002562  0A00               	xorlw	0	; case 0
  2248   002564  B4D8               	btfsc	status,2,c
  2249   002566  EFB7  F012         	goto	l6251
  2250   00256A  EFC2  F012         	goto	l5729
  2251   00256E                     l6251:
  2252                           
  2253                           ; BSR set to: 0
  2254                           ; Switch size 1, requested type "simple"
  2255                           ; Number of cases is 2, Range of values is 76 to 108
  2256                           ; switch strategies available:
  2257                           ; Name         Instructions Cycles
  2258                           ; simple_byte            7     4 (average)
  2259                           ;	Chosen strategy is simple_byte
  2260   00256E  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2261   002570  0A4C               	xorlw	76	; case 76
  2262   002572  B4D8               	btfsc	status,2,c
  2263   002574  EF99  F012         	goto	l5723
  2264   002578  0A20               	xorlw	32	; case 108
  2265   00257A  B4D8               	btfsc	status,2,c
  2266   00257C  EF85  F012         	goto	l5721
  2267   002580  EFC2  F012         	goto	l5729
  2268   002584                     l5729:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2272   002584  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2273   002586  6ED9               	movwf	fsr2l,c
  2274   002588  6ADA               	clrf	fsr2h,c
  2275   00258A  29A8               	incf	vfpfcnvrt@cp& (0+255),w,b
  2276   00258C  6EDF               	movwf	indf2,c
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2279   00258E  EFDE  F012         	goto	l5737
  2280   002592                     l5731:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2284   002592  C09E  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2285   002596  C0A3  F06B         	movff	vfpfcnvrt@convarg,efgtoa@f
  2286   00259A  C0A4  F06C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2287   00259E  C0A5  F06D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2288   0025A2  C0A6  F06E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2289   0025A6  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2290   0025AA                     	if	1	;There is more than 1 active tblptr byte
  2291   0025AA  0E08               	movlw	high __smallconst
  2292   0025AC  6EF7               	movwf	tblptrh,c
  2293   0025AE                     	endif
  2294   0025AE                     	if	0	;tblptru may be non-zero
  2295   0025AE                     	endif
  2296   0025AE                     	if	0	;tblptru may be non-zero
  2297   0025AE                     	endif
  2298   0025AE  0008               	tblrd		*
  2299   0025B0  CFF5 F06F          	movff	tablat,efgtoa@c
  2300   0025B4  EC12  F004         	call	_efgtoa	;wreg free
  2301   0025B8  EF0C  F013         	goto	l1309
  2302   0025BC                     l5737:
  2303                           
  2304                           ; BSR set to: 0
  2305   0025BC  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2306   0025C0                     	if	1	;There is more than 1 active tblptr byte
  2307   0025C0  0E08               	movlw	high __smallconst
  2308   0025C2  6EF7               	movwf	tblptrh,c
  2309   0025C4                     	endif
  2310   0025C4                     	if	0	;tblptru may be non-zero
  2311   0025C4                     	endif
  2312   0025C4                     	if	0	;tblptru may be non-zero
  2313   0025C4                     	endif
  2314   0025C4  0008               	tblrd		*
  2315   0025C6  50F5               	movf	tablat,w,c
  2316   0025C8  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2317   0025CA  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2318                           
  2319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2320                           ; Switch size 1, requested type "simple"
  2321                           ; Number of cases is 1, Range of values is 0 to 0
  2322                           ; switch strategies available:
  2323                           ; Name         Instructions Cycles
  2324                           ; simple_byte            4     3 (average)
  2325                           ;	Chosen strategy is simple_byte
  2326   0025CC  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2327   0025CE  0A00               	xorlw	0	; case 0
  2328   0025D0  B4D8               	btfsc	status,2,c
  2329   0025D2  EFED  F012         	goto	l6253
  2330   0025D6  EFF4  F012         	goto	l5739
  2331   0025DA                     l6253:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ; Switch size 1, requested type "simple"
  2335                           ; Number of cases is 1, Range of values is 102 to 102
  2336                           ; switch strategies available:
  2337                           ; Name         Instructions Cycles
  2338                           ; simple_byte            4     3 (average)
  2339                           ;	Chosen strategy is simple_byte
  2340   0025DA  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2341   0025DC  0A66               	xorlw	102	; case 102
  2342   0025DE  B4D8               	btfsc	status,2,c
  2343   0025E0  EFC9  F012         	goto	l5731
  2344   0025E4  EFF4  F012         	goto	l5739
  2345   0025E8                     l5739:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2348   0025E8  0100               	movlb	0	; () banked
  2349   0025EA  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2350   0025EC  6ED9               	movwf	fsr2l,c
  2351   0025EE  6ADA               	clrf	fsr2h,c
  2352   0025F0  2ADF               	incf	indf2,f,c
  2353   0025F2  EF0C  F013         	goto	l1309
  2354   0025F6                     l5743:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2358   0025F6  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2359   0025F8  6ED9               	movwf	fsr2l,c
  2360   0025FA  6ADA               	clrf	fsr2h,c
  2361   0025FC  CFDF FFF6          	movff	indf2,tblptrl
  2362   002600                     	if	1	;There is more than 1 active tblptr byte
  2363   002600  0E08               	movlw	high __smallconst
  2364   002602  6EF7               	movwf	tblptrh,c
  2365   002604                     	endif
  2366   002604                     	if	0	;tblptru may be non-zero
  2367   002604                     	endif
  2368   002604                     	if	0	;tblptru may be non-zero
  2369   002604                     	endif
  2370   002604  0008               	tblrd		*
  2371   002606  50F5               	movf	tablat,w,c
  2372   002608  6E07               	movwf	fputc@c^0,c
  2373   00260A  6A08               	clrf	(fputc@c+1)^0,c
  2374   00260C  C09E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2375   002610  EC00  F017         	call	_fputc	;wreg free
  2376   002614  EFF4  F012         	goto	l5739
  2377   002618                     l1309:
  2378   002618  0012               	return		;funcret
  2379   00261A                     __end_of_vfpfcnvrt:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _read_prec_or_width *****************
  2383 ;; Defined at:
  2384 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  fmt             1   10[COMRAM] PTR PTR const unsigned c
  2387 ;;		 -> vfprintf@cfmt(1), 
  2388 ;;  ap              1   11[COMRAM] PTR PTR void [1]
  2389 ;;		 -> sprintf@ap(1), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  c               1   12[COMRAM] unsigned char 
  2392 ;;  n               2   13[COMRAM] int 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2   10[COMRAM] int 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2402 ;;      Params:         2       0       0       0       0       0       0       0       0
  2403 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2405 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2406 ;;Total ram usage:        5 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 5
  2409 ;; This function calls:
  2410 ;;		___wmul
  2411 ;; This function is called by:
  2412 ;;		_vfpfcnvrt
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text5
  2417   002F64                     __ptext5:
  2418                           	callstack 0
  2419   002F64                     _read_prec_or_width:
  2420                           	callstack 22
  2421   002F64                     
  2422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2423   002F64  0E00               	movlw	0
  2424   002F66  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2425   002F68  0E00               	movlw	0
  2426   002F6A  6E0E               	movwf	read_prec_or_width@n^0,c
  2427   002F6C                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2429   002F6C  500B               	movf	read_prec_or_width@fmt^0,w,c
  2430   002F6E  6ED9               	movwf	fsr2l,c
  2431   002F70  6ADA               	clrf	fsr2h,c
  2432   002F72  CFDF FFF6          	movff	indf2,tblptrl
  2433   002F76                     	if	1	;There is more than 1 active tblptr byte
  2434   002F76  0E08               	movlw	high __smallconst
  2435   002F78  6EF7               	movwf	tblptrh,c
  2436   002F7A                     	endif
  2437   002F7A                     	if	0	;tblptru may be non-zero
  2438   002F7A                     	endif
  2439   002F7A                     	if	0	;tblptru may be non-zero
  2440   002F7A                     	endif
  2441   002F7A  0008               	tblrd		*
  2442   002F7C  50F5               	movf	tablat,w,c
  2443   002F7E  0A2A               	xorlw	42
  2444   002F80  A4D8               	btfss	status,2,c
  2445   002F82  EFC5  F017         	goto	u6021
  2446   002F86  EFC7  F017         	goto	u6020
  2447   002F8A                     u6021:
  2448   002F8A  EFED  F017         	goto	l5661
  2449   002F8E                     u6020:
  2450   002F8E                     
  2451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2452   002F8E  500B               	movf	read_prec_or_width@fmt^0,w,c
  2453   002F90  6ED9               	movwf	fsr2l,c
  2454   002F92  6ADA               	clrf	fsr2h,c
  2455   002F94  2ADF               	incf	indf2,f,c
  2456   002F96                     
  2457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2458   002F96  500C               	movf	read_prec_or_width@ap^0,w,c
  2459   002F98  6ED9               	movwf	fsr2l,c
  2460   002F9A  6ADA               	clrf	fsr2h,c
  2461   002F9C  0E02               	movlw	2
  2462   002F9E  26DF               	addwf	indf2,f,c
  2463   002FA0  5CDF               	subwf	indf2,w,c
  2464   002FA2  6ED9               	movwf	fsr2l,c
  2465   002FA4  6ADA               	clrf	fsr2h,c
  2466   002FA6  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  2467   002FAA  CFDE F00F          	movff	postinc2,read_prec_or_width@n+1
  2468                           
  2469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2470   002FAE  EF00  F018         	goto	l1285
  2471   002FB2                     l5657:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2474   002FB2  C00E  F005         	movff	read_prec_or_width@n,___wmul@multiplier
  2475   002FB6  C00F  F006         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2476   002FBA  0E00               	movlw	0
  2477   002FBC  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2478   002FBE  0E0A               	movlw	10
  2479   002FC0  6E07               	movwf	___wmul@multiplicand^0,c
  2480   002FC2  EC2F  F01B         	call	___wmul	;wreg free
  2481   002FC6  500D               	movf	read_prec_or_width@c^0,w,c
  2482   002FC8  2405               	addwf	?___wmul^0,w,c
  2483   002FCA  6E0E               	movwf	read_prec_or_width@n^0,c
  2484   002FCC  0E00               	movlw	0
  2485   002FCE  2006               	addwfc	(?___wmul+1)^0,w,c
  2486   002FD0  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2487   002FD2                     
  2488                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2489   002FD2  500B               	movf	read_prec_or_width@fmt^0,w,c
  2490   002FD4  6ED9               	movwf	fsr2l,c
  2491   002FD6  6ADA               	clrf	fsr2h,c
  2492   002FD8  2ADF               	incf	indf2,f,c
  2493   002FDA                     l5661:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2496   002FDA  500B               	movf	read_prec_or_width@fmt^0,w,c
  2497   002FDC  6ED9               	movwf	fsr2l,c
  2498   002FDE  6ADA               	clrf	fsr2h,c
  2499   002FE0  CFDF FFF6          	movff	indf2,tblptrl
  2500   002FE4                     	if	1	;There is more than 1 active tblptr byte
  2501   002FE4  0E08               	movlw	high __smallconst
  2502   002FE6  6EF7               	movwf	tblptrh,c
  2503   002FE8                     	endif
  2504   002FE8                     	if	0	;tblptru may be non-zero
  2505   002FE8                     	endif
  2506   002FE8                     	if	0	;tblptru may be non-zero
  2507   002FE8                     	endif
  2508   002FE8  0008               	tblrd		*
  2509   002FEA  50F5               	movf	tablat,w,c
  2510   002FEC  0FD0               	addlw	208
  2511   002FEE  6E0D               	movwf	read_prec_or_width@c^0,c
  2512   002FF0  0E09               	movlw	9
  2513   002FF2  640D               	cpfsgt	read_prec_or_width@c^0,c
  2514   002FF4  EFFE  F017         	goto	u6031
  2515   002FF8  EF00  F018         	goto	u6030
  2516   002FFC                     u6031:
  2517   002FFC  EFD9  F017         	goto	l5657
  2518   003000                     u6030:
  2519   003000                     l1285:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2522   003000  C00E  F00B         	movff	read_prec_or_width@n,?_read_prec_or_width
  2523   003004  C00F  F00C         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2524   003008  0012               	return		;funcret
  2525   00300A                     __end_of_read_prec_or_width:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function ___wmul *****************
  2529 ;; Defined at:
  2530 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  multiplier      2    4[COMRAM] unsigned int 
  2533 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  product         2    8[COMRAM] unsigned int 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  2    4[COMRAM] unsigned int 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, prodl, prodh
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2545 ;;      Params:         4       0       0       0       0       0       0       0       0
  2546 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2548 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        6 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 4
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_read_prec_or_width
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text6
  2560   00365E                     __ptext6:
  2561                           	callstack 0
  2562   00365E                     ___wmul:
  2563                           	callstack 22
  2564   00365E  5005               	movf	___wmul@multiplier^0,w,c
  2565   003660  0207               	mulwf	___wmul@multiplicand^0,c
  2566   003662  CFF3 F009          	movff	prodl,___wmul@product
  2567   003666  CFF4 F00A          	movff	prodh,___wmul@product+1
  2568   00366A  5005               	movf	___wmul@multiplier^0,w,c
  2569   00366C  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2570   00366E  50F3               	movf	243,w,c
  2571   003670  260A               	addwf	(___wmul@product+1)^0,f,c
  2572   003672  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2573   003674  0207               	mulwf	___wmul@multiplicand^0,c
  2574   003676  50F3               	movf	243,w,c
  2575   003678  260A               	addwf	(___wmul@product+1)^0,f,c
  2576   00367A  C009  F005         	movff	___wmul@product,?___wmul
  2577   00367E  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2578   003682  0012               	return		;funcret
  2579   003684                     __end_of___wmul:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _efgtoa *****************
  2583 ;; Defined at:
  2584 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2587 ;;		 -> sprintf@f(12), 
  2588 ;;  f               4   11[BANK0 ] PTR struct _IO_FILE
  2589 ;;  c               1   15[BANK0 ] unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  u               4   58[BANK0 ] struct flui
  2592 ;;  g               4   52[BANK0 ] struct flui
  2593 ;;  l               4   47[BANK0 ] struct flui
  2594 ;;  h               4   43[BANK0 ] struct flui
  2595 ;;  ou              4   37[BANK0 ] struct flui
  2596 ;;  n               2   56[BANK0 ] int 
  2597 ;;  i               2   41[BANK0 ] int 
  2598 ;;  w               2   35[BANK0 ] int 
  2599 ;;  e               2   33[BANK0 ] int 
  2600 ;;  m               2   31[BANK0 ] int 
  2601 ;;  d               2   29[BANK0 ] int 
  2602 ;;  t               2   22[BANK0 ] int 
  2603 ;;  p               2   20[BANK0 ] int 
  2604 ;;  ne              2   18[BANK0 ] int 
  2605 ;;  sign            1   51[BANK0 ] unsigned char 
  2606 ;;  nmode           1   28[BANK0 ] unsigned char 
  2607 ;;  mode            1   27[BANK0 ] unsigned char 
  2608 ;;  pp              1   26[BANK0 ] unsigned char 
  2609 ;;  esign           1    0        unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2619 ;;      Params:         0       6       0       0       0       0       0       0       0
  2620 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2621 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2622 ;;      Totals:         0      52       0       0       0       0       0       0       0
  2623 ;;Total ram usage:       52 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 9
  2626 ;; This function calls:
  2627 ;;		___fladd
  2628 ;;		___fldiv
  2629 ;;		___fleq
  2630 ;;		___flge
  2631 ;;		___flmul
  2632 ;;		___flneg
  2633 ;;		___flsub
  2634 ;;		___fltol
  2635 ;;		___fpclassifyf
  2636 ;;		_floorf
  2637 ;;		_labs
  2638 ;;		_memcpy
  2639 ;;		_pad
  2640 ;;		_strcpy
  2641 ;; This function is called by:
  2642 ;;		_vfpfcnvrt
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text7
  2647   000824                     __ptext7:
  2648                           	callstack 0
  2649   000824                     _efgtoa:
  2650                           	callstack 18
  2651   000824                     
  2652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2653   000824  0E00               	movlw	0
  2654   000826  0100               	movlb	0	; () banked
  2655   000828  6F93               	movwf	efgtoa@sign& (0+255),b
  2656   00082A                     
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2659   00082A  C06B  F094         	movff	efgtoa@f,efgtoa@g
  2660   00082E  C06C  F095         	movff	efgtoa@f+1,efgtoa@g+1
  2661   000832  C06D  F096         	movff	efgtoa@f+2,efgtoa@g+2
  2662   000836  C06E  F097         	movff	efgtoa@f+3,efgtoa@g+3
  2663   00083A                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2666   00083A  BF97               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2667   00083C  EF24  F004         	goto	u5700
  2668   000840  EF22  F004         	goto	u5701
  2669   000844                     u5701:
  2670   000844  EF38  F004         	goto	l5437
  2671   000848                     u5700:
  2672   000848                     
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2675   000848  0E01               	movlw	1
  2676   00084A  6F93               	movwf	efgtoa@sign& (0+255),b
  2677   00084C                     
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2680   00084C  C094  F005         	movff	efgtoa@g,___flneg@f1
  2681   000850  C095  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2682   000854  C096  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2683   000858  C097  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2684   00085C  ECA7  F01A         	call	___flneg	;wreg free
  2685   000860  C005  F094         	movff	?___flneg,efgtoa@g
  2686   000864  C006  F095         	movff	?___flneg+1,efgtoa@g+1
  2687   000868  C007  F096         	movff	?___flneg+2,efgtoa@g+2
  2688   00086C  C008  F097         	movff	?___flneg+3,efgtoa@g+3
  2689   000870                     l5437:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2692   000870  0E00               	movlw	0
  2693   000872  0100               	movlb	0	; () banked
  2694   000874  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2695   000876  0E00               	movlw	0
  2696   000878  6F98               	movwf	efgtoa@n& (0+255),b
  2697   00087A                     
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2700   00087A  C0DB  F083         	movff	_width,efgtoa@w
  2701   00087E  C0DC  F084         	movff	_width+1,efgtoa@w+1
  2702   000882                     
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2705   000882  5193               	movf	efgtoa@sign& (0+255),w,b
  2706   000884  B4D8               	btfsc	status,2,c
  2707   000886  EF47  F004         	goto	u5711
  2708   00088A  EF49  F004         	goto	u5710
  2709   00088E                     u5711:
  2710   00088E  EF5D  F004         	goto	l5451
  2711   000892                     u5710:
  2712   000892                     
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2715   000892  5193               	movf	efgtoa@sign& (0+255),w,b
  2716   000894  A4D8               	btfss	status,2,c
  2717   000896  EF4F  F004         	goto	u5721
  2718   00089A  EF51  F004         	goto	u5720
  2719   00089E                     u5721:
  2720   00089E  EF57  F004         	goto	l5447
  2721   0008A2                     u5720:
  2722   0008A2                     
  2723                           ; BSR set to: 0
  2724   0008A2  0E00               	movlw	0
  2725   0008A4  6F79               	movwf	(_efgtoa$1975+1)& (0+255),b
  2726   0008A6  0E2B               	movlw	43
  2727   0008A8  6F78               	movwf	_efgtoa$1975& (0+255),b
  2728   0008AA  EF5B  F004         	goto	l5449
  2729   0008AE                     l5447:
  2730                           
  2731                           ; BSR set to: 0
  2732   0008AE  0E00               	movlw	0
  2733   0008B0  6F79               	movwf	(_efgtoa$1975+1)& (0+255),b
  2734   0008B2  0E2D               	movlw	45
  2735   0008B4  6F78               	movwf	_efgtoa$1975& (0+255),b
  2736   0008B6                     l5449:
  2737                           
  2738                           ; BSR set to: 0
  2739   0008B6  C078  F093         	movff	_efgtoa$1975,efgtoa@sign
  2740   0008BA                     l5451:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2744   0008BA  C094  F005         	movff	efgtoa@g,___fpclassifyf@x
  2745   0008BE  C095  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2746   0008C2  C096  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2747   0008C6  C097  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2748   0008CA  EC81  F016         	call	___fpclassifyf	;wreg free
  2749   0008CE  0405               	decf	?___fpclassifyf^0,w,c
  2750   0008D0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2751   0008D2  A4D8               	btfss	status,2,c
  2752   0008D4  EF6E  F004         	goto	u5731
  2753   0008D8  EF70  F004         	goto	u5730
  2754   0008DC                     u5731:
  2755   0008DC  EF9F  F004         	goto	l5469
  2756   0008E0                     u5730:
  2757   0008E0                     
  2758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2759   0008E0  0100               	movlb	0	; () banked
  2760   0008E2  5193               	movf	efgtoa@sign& (0+255),w,b
  2761   0008E4  B4D8               	btfsc	status,2,c
  2762   0008E6  EF77  F004         	goto	u5741
  2763   0008EA  EF79  F004         	goto	u5740
  2764   0008EE                     u5741:
  2765   0008EE  EF82  F004         	goto	l5461
  2766   0008F2                     u5740:
  2767   0008F2                     
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2770   0008F2  C093  F10C         	movff	efgtoa@sign,_dbuf
  2771   0008F6                     
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2774   0008F6  0783               	decf	efgtoa@w& (0+255),f,b
  2775   0008F8  A0D8               	btfss	status,0,c
  2776   0008FA  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  2777   0008FC                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2780   0008FC  0E00               	movlw	0
  2781   0008FE  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2782   000900  0E01               	movlw	1
  2783   000902  6F98               	movwf	efgtoa@n& (0+255),b
  2784   000904                     l5461:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2788   000904  0E0C               	movlw	low _dbuf
  2789   000906  2598               	addwf	efgtoa@n& (0+255),w,b
  2790   000908  6E05               	movwf	strcpy@dest^0,c
  2791   00090A  0E01               	movlw	high _dbuf
  2792   00090C  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2793   00090E  6E06               	movwf	(strcpy@dest+1)^0,c
  2794   000910  0E1B               	movlw	low STR_2
  2795   000912  6E07               	movwf	strcpy@src^0,c
  2796   000914  EC50  F01A         	call	_strcpy	;wreg free
  2797   000918                     l5463:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2800   000918  0100               	movlb	0	; () banked
  2801   00091A  0EFD               	movlw	253
  2802   00091C  2783               	addwf	efgtoa@w& (0+255),f,b
  2803   00091E  0EFF               	movlw	255
  2804   000920  2384               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2805   000922                     
  2806                           ; BSR set to: 0
  2807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2808   000922  C06A  F015         	movff	efgtoa@fp,pad@fp
  2809   000926  0E0C               	movlw	low _dbuf
  2810   000928  6E16               	movwf	pad@buf^0,c
  2811   00092A  0E01               	movlw	high _dbuf
  2812   00092C  6E17               	movwf	(pad@buf+1)^0,c
  2813   00092E  C083  F018         	movff	efgtoa@w,pad@p
  2814   000932  C084  F019         	movff	efgtoa@w+1,pad@p+1
  2815   000936  EC76  F018         	call	_pad	;wreg free
  2816   00093A  EF05  F009         	goto	l1240
  2817   00093E                     l5469:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2820   00093E  C094  F005         	movff	efgtoa@g,___fpclassifyf@x
  2821   000942  C095  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2822   000946  C096  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2823   00094A  C097  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2824   00094E  EC81  F016         	call	___fpclassifyf	;wreg free
  2825   000952  5005               	movf	?___fpclassifyf^0,w,c
  2826   000954  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2827   000956  A4D8               	btfss	status,2,c
  2828   000958  EFB0  F004         	goto	u5751
  2829   00095C  EFB2  F004         	goto	u5750
  2830   000960                     u5751:
  2831   000960  EFD0  F004         	goto	l5487
  2832   000964                     u5750:
  2833   000964                     
  2834                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2835   000964  0100               	movlb	0	; () banked
  2836   000966  5193               	movf	efgtoa@sign& (0+255),w,b
  2837   000968  B4D8               	btfsc	status,2,c
  2838   00096A  EFB9  F004         	goto	u5761
  2839   00096E  EFBB  F004         	goto	u5760
  2840   000972                     u5761:
  2841   000972  EFC4  F004         	goto	l5479
  2842   000976                     u5760:
  2843   000976                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2846   000976  C093  F10C         	movff	efgtoa@sign,_dbuf
  2847   00097A                     
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2850   00097A  0783               	decf	efgtoa@w& (0+255),f,b
  2851   00097C  A0D8               	btfss	status,0,c
  2852   00097E  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  2853   000980                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2856   000980  0E00               	movlw	0
  2857   000982  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2858   000984  0E01               	movlw	1
  2859   000986  6F98               	movwf	efgtoa@n& (0+255),b
  2860   000988                     l5479:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2864   000988  0E0C               	movlw	low _dbuf
  2865   00098A  2598               	addwf	efgtoa@n& (0+255),w,b
  2866   00098C  6E05               	movwf	strcpy@dest^0,c
  2867   00098E  0E01               	movlw	high _dbuf
  2868   000990  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2869   000992  6E06               	movwf	(strcpy@dest+1)^0,c
  2870   000994  0E1F               	movlw	low STR_5
  2871   000996  6E07               	movwf	strcpy@src^0,c
  2872   000998  EC50  F01A         	call	_strcpy	;wreg free
  2873   00099C  EF8C  F004         	goto	l5463
  2874   0009A0                     l5487:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2877   0009A0  0E00               	movlw	0
  2878   0009A2  0100               	movlb	0	; () banked
  2879   0009A4  6F9A               	movwf	efgtoa@u& (0+255),b
  2880   0009A6  0E00               	movlw	0
  2881   0009A8  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  2882   0009AA  0E80               	movlw	128
  2883   0009AC  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  2884   0009AE  0E3F               	movlw	63
  2885   0009B0  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2888   0009B2  0E00               	movlw	0
  2889   0009B4  6F82               	movwf	(efgtoa@e+1)& (0+255),b
  2890   0009B6  0E00               	movlw	0
  2891   0009B8  6F81               	movwf	efgtoa@e& (0+255),b
  2892   0009BA                     
  2893                           ; BSR set to: 0
  2894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2895   0009BA  C094  F005         	movff	efgtoa@g,___fleq@ff1
  2896   0009BE  C095  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2897   0009C2  C096  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2898   0009C6  C097  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2899   0009CA  0E00               	movlw	0
  2900   0009CC  6E09               	movwf	___fleq@ff2^0,c
  2901   0009CE  0E00               	movlw	0
  2902   0009D0  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2903   0009D2  0E00               	movlw	0
  2904   0009D4  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2905   0009D6  0E00               	movlw	0
  2906   0009D8  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2907   0009DA  EC5D  F017         	call	___fleq	;wreg free
  2908   0009DE  B0D8               	btfsc	status,0,c
  2909   0009E0  EFF4  F004         	goto	u5771
  2910   0009E4  EFF6  F004         	goto	u5770
  2911   0009E8                     u5771:
  2912   0009E8  EFD5  F005         	goto	l1243
  2913   0009EC                     u5770:
  2914   0009EC  EF03  F005         	goto	l5495
  2915   0009F0                     l1245:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2918   0009F0  C085  F09A         	movff	efgtoa@ou,efgtoa@u
  2919   0009F4  C086  F09B         	movff	efgtoa@ou+1,efgtoa@u+1
  2920   0009F8  C087  F09C         	movff	efgtoa@ou+2,efgtoa@u+2
  2921   0009FC  C088  F09D         	movff	efgtoa@ou+3,efgtoa@u+3
  2922   000A00                     
  2923                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2924   000A00  0100               	movlb	0	; () banked
  2925   000A02  4B81               	infsnz	efgtoa@e& (0+255),f,b
  2926   000A04  2B82               	incf	(efgtoa@e+1)& (0+255),f,b
  2927   000A06                     l5495:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2930   000A06  C09A  F013         	movff	efgtoa@u,___flmul@b
  2931   000A0A  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  2932   000A0E  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  2933   000A12  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  2934   000A16  0E00               	movlw	0
  2935   000A18  6E17               	movwf	___flmul@a^0,c
  2936   000A1A  0E00               	movlw	0
  2937   000A1C  6E18               	movwf	(___flmul@a+1)^0,c
  2938   000A1E  0E20               	movlw	32
  2939   000A20  6E19               	movwf	(___flmul@a+2)^0,c
  2940   000A22  0E41               	movlw	65
  2941   000A24  6E1A               	movwf	(___flmul@a+3)^0,c
  2942   000A26  EC66  F00B         	call	___flmul	;wreg free
  2943   000A2A  C013  F085         	movff	?___flmul,efgtoa@ou
  2944   000A2E  C014  F086         	movff	?___flmul+1,efgtoa@ou+1
  2945   000A32  C015  F087         	movff	?___flmul+2,efgtoa@ou+2
  2946   000A36  C016  F088         	movff	?___flmul+3,efgtoa@ou+3
  2947   000A3A  0100               	movlb	0	; () banked
  2948   000A3C  5185               	movf	efgtoa@ou& (0+255),w,b
  2949   000A3E  5D94               	subwf	efgtoa@g& (0+255),w,b
  2950   000A40  6E05               	movwf	labs@a^0,c
  2951   000A42  5186               	movf	(efgtoa@ou+1)& (0+255),w,b
  2952   000A44  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2953   000A46  6E06               	movwf	(labs@a+1)^0,c
  2954   000A48  5187               	movf	(efgtoa@ou+2)& (0+255),w,b
  2955   000A4A  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2956   000A4C  6E07               	movwf	(labs@a+2)^0,c
  2957   000A4E  5188               	movf	(efgtoa@ou+3)& (0+255),w,b
  2958   000A50  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2959   000A52  6E08               	movwf	(labs@a+3)^0,c
  2960   000A54  ECA9  F018         	call	_labs	;wreg free
  2961   000A58  BE08               	btfsc	(?_labs+3)^0,7,c
  2962   000A5A  EF3A  F005         	goto	u5781
  2963   000A5E  5008               	movf	(?_labs+3)^0,w,c
  2964   000A60  1007               	iorwf	(?_labs+2)^0,w,c
  2965   000A62  1006               	iorwf	(?_labs+1)^0,w,c
  2966   000A64  E109               	bnz	u5780
  2967   000A66  0E02               	movlw	2
  2968   000A68  5C05               	subwf	?_labs^0,w,c
  2969   000A6A  A0D8               	btfss	status,0,c
  2970   000A6C  EF3A  F005         	goto	u5781
  2971   000A70  EF3C  F005         	goto	u5780
  2972   000A74                     u5781:
  2973   000A74  EFF8  F004         	goto	l1245
  2974   000A78                     u5780:
  2975   000A78  C085  F02C         	movff	efgtoa@ou,___flge@ff1
  2976   000A7C  C086  F02D         	movff	efgtoa@ou+1,___flge@ff1+1
  2977   000A80  C087  F02E         	movff	efgtoa@ou+2,___flge@ff1+2
  2978   000A84  C088  F02F         	movff	efgtoa@ou+3,___flge@ff1+3
  2979   000A88  C094  F030         	movff	efgtoa@g,___flge@ff2
  2980   000A8C  C095  F031         	movff	efgtoa@g+1,___flge@ff2+1
  2981   000A90  C096  F032         	movff	efgtoa@g+2,___flge@ff2+2
  2982   000A94  C097  F033         	movff	efgtoa@g+3,___flge@ff2+3
  2983   000A98  ECFF  F015         	call	___flge	;wreg free
  2984   000A9C  A0D8               	btfss	status,0,c
  2985   000A9E  EF53  F005         	goto	u5791
  2986   000AA2  EF55  F005         	goto	u5790
  2987   000AA6                     u5791:
  2988   000AA6  EFF8  F004         	goto	l1245
  2989   000AAA                     u5790:
  2990   000AAA                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2992   000AAA  0100               	movlb	0	; () banked
  2993   000AAC  519A               	movf	efgtoa@u& (0+255),w,b
  2994   000AAE  5D94               	subwf	efgtoa@g& (0+255),w,b
  2995   000AB0  6E05               	movwf	labs@a^0,c
  2996   000AB2  519B               	movf	(efgtoa@u+1)& (0+255),w,b
  2997   000AB4  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2998   000AB6  6E06               	movwf	(labs@a+1)^0,c
  2999   000AB8  519C               	movf	(efgtoa@u+2)& (0+255),w,b
  3000   000ABA  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3001   000ABC  6E07               	movwf	(labs@a+2)^0,c
  3002   000ABE  519D               	movf	(efgtoa@u+3)& (0+255),w,b
  3003   000AC0  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3004   000AC2  6E08               	movwf	(labs@a+3)^0,c
  3005   000AC4  ECA9  F018         	call	_labs	;wreg free
  3006   000AC8  BE08               	btfsc	(?_labs+3)^0,7,c
  3007   000ACA  EF74  F005         	goto	u5800
  3008   000ACE  5008               	movf	(?_labs+3)^0,w,c
  3009   000AD0  1007               	iorwf	(?_labs+2)^0,w,c
  3010   000AD2  1006               	iorwf	(?_labs+1)^0,w,c
  3011   000AD4  E107               	bnz	u5801
  3012   000AD6  0E02               	movlw	2
  3013   000AD8  5C05               	subwf	?_labs^0,w,c
  3014   000ADA  B0D8               	btfsc	status,0,c
  3015   000ADC  EF72  F005         	goto	u5801
  3016   000AE0  EF74  F005         	goto	u5800
  3017   000AE4                     u5801:
  3018   000AE4  EFBC  F005         	goto	l5513
  3019   000AE8                     u5800:
  3020   000AE8                     l5503:
  3021                           
  3022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3023   000AE8  C09A  F094         	movff	efgtoa@u,efgtoa@g
  3024   000AEC  C09B  F095         	movff	efgtoa@u+1,efgtoa@g+1
  3025   000AF0  C09C  F096         	movff	efgtoa@u+2,efgtoa@g+2
  3026   000AF4  C09D  F097         	movff	efgtoa@u+3,efgtoa@g+3
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  3029   000AF8  EFD5  F005         	goto	l1243
  3030   000AFC                     l5505:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3033   000AFC  C09A  F034         	movff	efgtoa@u,___fldiv@b
  3034   000B00  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3035   000B04  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3036   000B08  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3037   000B0C  0E00               	movlw	0
  3038   000B0E  6E38               	movwf	___fldiv@a^0,c
  3039   000B10  0E00               	movlw	0
  3040   000B12  6E39               	movwf	(___fldiv@a+1)^0,c
  3041   000B14  0E20               	movlw	32
  3042   000B16  6E3A               	movwf	(___fldiv@a+2)^0,c
  3043   000B18  0E41               	movlw	65
  3044   000B1A  6E3B               	movwf	(___fldiv@a+3)^0,c
  3045   000B1C  EC7B  F00D         	call	___fldiv	;wreg free
  3046   000B20  C034  F09A         	movff	?___fldiv,efgtoa@u
  3047   000B24  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3048   000B28  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3049   000B2C  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3050   000B30                     
  3051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  3052   000B30  0100               	movlb	0	; () banked
  3053   000B32  0781               	decf	efgtoa@e& (0+255),f,b
  3054   000B34  A0D8               	btfss	status,0,c
  3055   000B36  0782               	decf	(efgtoa@e+1)& (0+255),f,b
  3056   000B38                     
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3059   000B38  519A               	movf	efgtoa@u& (0+255),w,b
  3060   000B3A  5D94               	subwf	efgtoa@g& (0+255),w,b
  3061   000B3C  6E05               	movwf	labs@a^0,c
  3062   000B3E  519B               	movf	(efgtoa@u+1)& (0+255),w,b
  3063   000B40  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3064   000B42  6E06               	movwf	(labs@a+1)^0,c
  3065   000B44  519C               	movf	(efgtoa@u+2)& (0+255),w,b
  3066   000B46  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3067   000B48  6E07               	movwf	(labs@a+2)^0,c
  3068   000B4A  519D               	movf	(efgtoa@u+3)& (0+255),w,b
  3069   000B4C  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3070   000B4E  6E08               	movwf	(labs@a+3)^0,c
  3071   000B50  ECA9  F018         	call	_labs	;wreg free
  3072   000B54  BE08               	btfsc	(?_labs+3)^0,7,c
  3073   000B56  EFBA  F005         	goto	u5810
  3074   000B5A  5008               	movf	(?_labs+3)^0,w,c
  3075   000B5C  1007               	iorwf	(?_labs+2)^0,w,c
  3076   000B5E  1006               	iorwf	(?_labs+1)^0,w,c
  3077   000B60  E107               	bnz	u5811
  3078   000B62  0E02               	movlw	2
  3079   000B64  5C05               	subwf	?_labs^0,w,c
  3080   000B66  B0D8               	btfsc	status,0,c
  3081   000B68  EFB8  F005         	goto	u5811
  3082   000B6C  EFBA  F005         	goto	u5810
  3083   000B70                     u5811:
  3084   000B70  EFBC  F005         	goto	l5513
  3085   000B74                     u5810:
  3086   000B74  EF74  F005         	goto	l5503
  3087   000B78                     l5513:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3090   000B78  C094  F02C         	movff	efgtoa@g,___flge@ff1
  3091   000B7C  C095  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3092   000B80  C096  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3093   000B84  C097  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3094   000B88  C09A  F030         	movff	efgtoa@u,___flge@ff2
  3095   000B8C  C09B  F031         	movff	efgtoa@u+1,___flge@ff2+1
  3096   000B90  C09C  F032         	movff	efgtoa@u+2,___flge@ff2+2
  3097   000B94  C09D  F033         	movff	efgtoa@u+3,___flge@ff2+3
  3098   000B98  ECFF  F015         	call	___flge	;wreg free
  3099   000B9C  A0D8               	btfss	status,0,c
  3100   000B9E  EFD3  F005         	goto	u5821
  3101   000BA2  EFD5  F005         	goto	u5820
  3102   000BA6                     u5821:
  3103   000BA6  EF7E  F005         	goto	l5505
  3104   000BAA                     u5820:
  3105   000BAA                     l1243:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3108   000BAA  C06F  F07B         	movff	efgtoa@c,efgtoa@mode
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3111   000BAE  C07B  F07C         	movff	efgtoa@mode,efgtoa@nmode
  3112   000BB2                     
  3113                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3114   000BB2  0100               	movlb	0	; () banked
  3115   000BB4  BFDE               	btfsc	(_prec+1)& (0+255),7,b
  3116   000BB6  EFDF  F005         	goto	u5831
  3117   000BBA  EFE1  F005         	goto	u5830
  3118   000BBE                     u5831:
  3119   000BBE  EFE7  F005         	goto	l5519
  3120   000BC2                     u5830:
  3121   000BC2                     
  3122                           ; BSR set to: 0
  3123   000BC2  C0DD  F074         	movff	_prec,efgtoa@p
  3124   000BC6  C0DE  F075         	movff	_prec+1,efgtoa@p+1
  3125   000BCA  EFEB  F005         	goto	l5521
  3126   000BCE                     l5519:
  3127                           
  3128                           ; BSR set to: 0
  3129   000BCE  0E00               	movlw	0
  3130   000BD0  6F75               	movwf	(efgtoa@p+1)& (0+255),b
  3131   000BD2  0E06               	movlw	6
  3132   000BD4  6F74               	movwf	efgtoa@p& (0+255),b
  3133   000BD6                     l5521:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3137   000BD6  C074  F07F         	movff	efgtoa@p,efgtoa@m
  3138   000BDA  C075  F080         	movff	efgtoa@p+1,efgtoa@m+1
  3139   000BDE                     
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3142   000BDE  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  3143   000BE0  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  3144   000BE2                     
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3147   000BE2  0E66               	movlw	102
  3148   000BE4  197C               	xorwf	efgtoa@nmode& (0+255),w,b
  3149   000BE6  A4D8               	btfss	status,2,c
  3150   000BE8  EFF8  F005         	goto	u5841
  3151   000BEC  EFFA  F005         	goto	u5840
  3152   000BF0                     u5841:
  3153   000BF0  EF1A  F006         	goto	l5535
  3154   000BF4                     u5840:
  3155   000BF4                     
  3156                           ; BSR set to: 0
  3157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3158   000BF4  BF82               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3159   000BF6  EF01  F006         	goto	u5850
  3160   000BFA  EFFF  F005         	goto	u5851
  3161   000BFE                     u5851:
  3162   000BFE  EF0D  F006         	goto	l5531
  3163   000C02                     u5850:
  3164   000C02                     
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3167   000C02  0E00               	movlw	0
  3168   000C04  6F9A               	movwf	efgtoa@u& (0+255),b
  3169   000C06  0E00               	movlw	0
  3170   000C08  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  3171   000C0A  0E80               	movlw	128
  3172   000C0C  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  3173   000C0E  0E3F               	movlw	63
  3174   000C10  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3177   000C12  0E00               	movlw	0
  3178   000C14  6F82               	movwf	(efgtoa@e+1)& (0+255),b
  3179   000C16  0E00               	movlw	0
  3180   000C18  6F81               	movwf	efgtoa@e& (0+255),b
  3181   000C1A                     l5531:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3185   000C1A  0E67               	movlw	103
  3186   000C1C  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3187   000C1E  B4D8               	btfsc	status,2,c
  3188   000C20  EF14  F006         	goto	u5861
  3189   000C24  EF16  F006         	goto	u5860
  3190   000C28                     u5861:
  3191   000C28  EF1A  F006         	goto	l5535
  3192   000C2C                     u5860:
  3193   000C2C                     
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3196   000C2C  5181               	movf	efgtoa@e& (0+255),w,b
  3197   000C2E  277F               	addwf	efgtoa@m& (0+255),f,b
  3198   000C30  5182               	movf	(efgtoa@e+1)& (0+255),w,b
  3199   000C32  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3200   000C34                     l5535:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3204   000C34  0E00               	movlw	0
  3205   000C36  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3206   000C38  0E00               	movlw	0
  3207   000C3A  6F89               	movwf	efgtoa@i& (0+255),b
  3208   000C3C                     
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3211   000C3C  C094  F08B         	movff	efgtoa@g,efgtoa@h
  3212   000C40  C095  F08C         	movff	efgtoa@g+1,efgtoa@h+1
  3213   000C44  C096  F08D         	movff	efgtoa@g+2,efgtoa@h+2
  3214   000C48  C097  F08E         	movff	efgtoa@g+3,efgtoa@h+3
  3215   000C4C                     
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3218   000C4C  C09A  F085         	movff	efgtoa@u,efgtoa@ou
  3219   000C50  C09B  F086         	movff	efgtoa@u+1,efgtoa@ou+1
  3220   000C54  C09C  F087         	movff	efgtoa@u+2,efgtoa@ou+2
  3221   000C58  C09D  F088         	movff	efgtoa@u+3,efgtoa@ou+3
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3224   000C5C  EFAB  F006         	goto	l5549
  3225   000C60                     l5541:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3229   000C60  C08B  F034         	movff	efgtoa@h,___fldiv@b
  3230   000C64  C08C  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3231   000C68  C08D  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3232   000C6C  C08E  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3233   000C70  C09A  F038         	movff	efgtoa@u,___fldiv@a
  3234   000C74  C09B  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3235   000C78  C09C  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3236   000C7C  C09D  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3237   000C80  EC7B  F00D         	call	___fldiv	;wreg free
  3238   000C84  C034  F04D         	movff	?___fldiv,floorf@x
  3239   000C88  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3240   000C8C  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3241   000C90  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3242   000C94  ECFA  F010         	call	_floorf	;wreg free
  3243   000C98  C04D  F08F         	movff	?_floorf,efgtoa@l
  3244   000C9C  C04E  F090         	movff	?_floorf+1,efgtoa@l+1
  3245   000CA0  C04F  F091         	movff	?_floorf+2,efgtoa@l+2
  3246   000CA4  C050  F092         	movff	?_floorf+3,efgtoa@l+3
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3249   000CA8  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3250   000CAC  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3251   000CB0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3252   000CB4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3253   000CB8  EC7C  F015         	call	___fltol	;wreg free
  3254   000CBC  C005  F07D         	movff	?___fltol,efgtoa@d
  3255   000CC0  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3256   000CC4                     
  3257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3258   000CC4  C08B  F02C         	movff	efgtoa@h,___flsub@b
  3259   000CC8  C08C  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3260   000CCC  C08D  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3261   000CD0  C08E  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3262   000CD4  C08F  F017         	movff	efgtoa@l,___flmul@a
  3263   000CD8  C090  F018         	movff	efgtoa@l+1,___flmul@a+1
  3264   000CDC  C091  F019         	movff	efgtoa@l+2,___flmul@a+2
  3265   000CE0  C092  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3266   000CE4  C09A  F013         	movff	efgtoa@u,___flmul@b
  3267   000CE8  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3268   000CEC  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3269   000CF0  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3270   000CF4  EC66  F00B         	call	___flmul	;wreg free
  3271   000CF8  C013  F030         	movff	?___flmul,___flsub@a
  3272   000CFC  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3273   000D00  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3274   000D04  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3275   000D08  EC8C  F019         	call	___flsub	;wreg free
  3276   000D0C  C02C  F08B         	movff	?___flsub,efgtoa@h
  3277   000D10  C02D  F08C         	movff	?___flsub+1,efgtoa@h+1
  3278   000D14  C02E  F08D         	movff	?___flsub+2,efgtoa@h+2
  3279   000D18  C02F  F08E         	movff	?___flsub+3,efgtoa@h+3
  3280   000D1C                     
  3281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3282   000D1C  C09A  F034         	movff	efgtoa@u,___fldiv@b
  3283   000D20  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3284   000D24  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3285   000D28  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3286   000D2C  0E00               	movlw	0
  3287   000D2E  6E38               	movwf	___fldiv@a^0,c
  3288   000D30  0E00               	movlw	0
  3289   000D32  6E39               	movwf	(___fldiv@a+1)^0,c
  3290   000D34  0E20               	movlw	32
  3291   000D36  6E3A               	movwf	(___fldiv@a+2)^0,c
  3292   000D38  0E41               	movlw	65
  3293   000D3A  6E3B               	movwf	(___fldiv@a+3)^0,c
  3294   000D3C  EC7B  F00D         	call	___fldiv	;wreg free
  3295   000D40  C034  F09A         	movff	?___fldiv,efgtoa@u
  3296   000D44  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3297   000D48  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3298   000D4C  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3299   000D50                     
  3300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3301   000D50  0100               	movlb	0	; () banked
  3302   000D52  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3303   000D54  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3304   000D56                     l5549:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3308   000D56  517F               	movf	efgtoa@m& (0+255),w,b
  3309   000D58  5D89               	subwf	efgtoa@i& (0+255),w,b
  3310   000D5A  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3311   000D5C  0A80               	xorlw	128
  3312   000D5E  6F70               	movwf	??_efgtoa& (0+255),b
  3313   000D60  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  3314   000D62  0A80               	xorlw	128
  3315   000D64  5970               	subwfb	??_efgtoa& (0+255),w,b
  3316   000D66  A0D8               	btfss	status,0,c
  3317   000D68  EFB8  F006         	goto	u5871
  3318   000D6C  EFBA  F006         	goto	u5870
  3319   000D70                     u5871:
  3320   000D70  EF30  F006         	goto	l5541
  3321   000D74                     u5870:
  3322   000D74                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3325   000D74  C09A  F013         	movff	efgtoa@u,___flmul@b
  3326   000D78  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3327   000D7C  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3328   000D80  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3329   000D84  0E00               	movlw	0
  3330   000D86  6E17               	movwf	___flmul@a^0,c
  3331   000D88  0E00               	movlw	0
  3332   000D8A  6E18               	movwf	(___flmul@a+1)^0,c
  3333   000D8C  0EA0               	movlw	160
  3334   000D8E  6E19               	movwf	(___flmul@a+2)^0,c
  3335   000D90  0E40               	movlw	64
  3336   000D92  6E1A               	movwf	(___flmul@a+3)^0,c
  3337   000D94  EC66  F00B         	call	___flmul	;wreg free
  3338   000D98  C013  F08F         	movff	?___flmul,efgtoa@l
  3339   000D9C  C014  F090         	movff	?___flmul+1,efgtoa@l+1
  3340   000DA0  C015  F091         	movff	?___flmul+2,efgtoa@l+2
  3341   000DA4  C016  F092         	movff	?___flmul+3,efgtoa@l+3
  3342   000DA8                     
  3343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3344   000DA8  C08B  F02C         	movff	efgtoa@h,___flge@ff1
  3345   000DAC  C08C  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3346   000DB0  C08D  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3347   000DB4  C08E  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3348   000DB8  C08F  F030         	movff	efgtoa@l,___flge@ff2
  3349   000DBC  C090  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3350   000DC0  C091  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3351   000DC4  C092  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3352   000DC8  ECFF  F015         	call	___flge	;wreg free
  3353   000DCC  B0D8               	btfsc	status,0,c
  3354   000DCE  EFEB  F006         	goto	u5881
  3355   000DD2  EFED  F006         	goto	u5880
  3356   000DD6                     u5881:
  3357   000DD6  EFF8  F006         	goto	l5557
  3358   000DDA                     u5880:
  3359   000DDA                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3361   000DDA  0E00               	movlw	0
  3362   000DDC  0100               	movlb	0	; () banked
  3363   000DDE  6F8F               	movwf	efgtoa@l& (0+255),b
  3364   000DE0  0E00               	movlw	0
  3365   000DE2  6F90               	movwf	(efgtoa@l+1)& (0+255),b
  3366   000DE4  0E00               	movlw	0
  3367   000DE6  6F91               	movwf	(efgtoa@l+2)& (0+255),b
  3368   000DE8  0E00               	movlw	0
  3369   000DEA  6F92               	movwf	(efgtoa@l+3)& (0+255),b
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3372   000DEC  EF21  F007         	goto	l5563
  3373   000DF0                     l5557:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3376   000DF0  C08B  F005         	movff	efgtoa@h,___fleq@ff1
  3377   000DF4  C08C  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3378   000DF8  C08D  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3379   000DFC  C08E  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3380   000E00  C08F  F009         	movff	efgtoa@l,___fleq@ff2
  3381   000E04  C090  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3382   000E08  C091  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3383   000E0C  C092  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3384   000E10  EC5D  F017         	call	___fleq	;wreg free
  3385   000E14  A0D8               	btfss	status,0,c
  3386   000E16  EF0F  F007         	goto	u5891
  3387   000E1A  EF11  F007         	goto	u5890
  3388   000E1E                     u5891:
  3389   000E1E  EF21  F007         	goto	l5563
  3390   000E22                     u5890:
  3391   000E22  0100               	movlb	0	; () banked
  3392   000E24  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3393   000E26  EF17  F007         	goto	u5901
  3394   000E2A  EF19  F007         	goto	u5900
  3395   000E2E                     u5901:
  3396   000E2E  EF21  F007         	goto	l5563
  3397   000E32                     u5900:
  3398   000E32                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3401   000E32  0E00               	movlw	0
  3402   000E34  6F8F               	movwf	efgtoa@l& (0+255),b
  3403   000E36  0E00               	movlw	0
  3404   000E38  6F90               	movwf	(efgtoa@l+1)& (0+255),b
  3405   000E3A  0E00               	movlw	0
  3406   000E3C  6F91               	movwf	(efgtoa@l+2)& (0+255),b
  3407   000E3E  0E00               	movlw	0
  3408   000E40  6F92               	movwf	(efgtoa@l+3)& (0+255),b
  3409   000E42                     l5563:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3412   000E42  C094  F005         	movff	efgtoa@g,___fladd@b
  3413   000E46  C095  F006         	movff	efgtoa@g+1,___fladd@b+1
  3414   000E4A  C096  F007         	movff	efgtoa@g+2,___fladd@b+2
  3415   000E4E  C097  F008         	movff	efgtoa@g+3,___fladd@b+3
  3416   000E52  C08F  F009         	movff	efgtoa@l,___fladd@a
  3417   000E56  C090  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3418   000E5A  C091  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3419   000E5E  C092  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3420   000E62  EC06  F009         	call	___fladd	;wreg free
  3421   000E66  C005  F08B         	movff	?___fladd,efgtoa@h
  3422   000E6A  C006  F08C         	movff	?___fladd+1,efgtoa@h+1
  3423   000E6E  C007  F08D         	movff	?___fladd+2,efgtoa@h+2
  3424   000E72  C008  F08E         	movff	?___fladd+3,efgtoa@h+3
  3425   000E76                     
  3426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3427   000E76  C08B  F02C         	movff	efgtoa@h,___flge@ff1
  3428   000E7A  C08C  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3429   000E7E  C08D  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3430   000E82  C08E  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3431   000E86  0E00               	movlw	0
  3432   000E88  6E17               	movwf	___flmul@a^0,c
  3433   000E8A  0E00               	movlw	0
  3434   000E8C  6E18               	movwf	(___flmul@a+1)^0,c
  3435   000E8E  0E20               	movlw	32
  3436   000E90  6E19               	movwf	(___flmul@a+2)^0,c
  3437   000E92  0E41               	movlw	65
  3438   000E94  6E1A               	movwf	(___flmul@a+3)^0,c
  3439   000E96  C085  F013         	movff	efgtoa@ou,___flmul@b
  3440   000E9A  C086  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3441   000E9E  C087  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3442   000EA2  C088  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3443   000EA6  EC66  F00B         	call	___flmul	;wreg free
  3444   000EAA  C013  F030         	movff	?___flmul,___flge@ff2
  3445   000EAE  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3446   000EB2  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3447   000EB6  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3448   000EBA  ECFF  F015         	call	___flge	;wreg free
  3449   000EBE  A0D8               	btfss	status,0,c
  3450   000EC0  EF64  F007         	goto	u5911
  3451   000EC4  EF66  F007         	goto	u5910
  3452   000EC8                     u5911:
  3453   000EC8  EF8F  F007         	goto	l5575
  3454   000ECC                     u5910:
  3455   000ECC                     
  3456                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3457   000ECC  0100               	movlb	0	; () banked
  3458   000ECE  4B81               	infsnz	efgtoa@e& (0+255),f,b
  3459   000ED0  2B82               	incf	(efgtoa@e+1)& (0+255),f,b
  3460   000ED2                     
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3463   000ED2  C085  F013         	movff	efgtoa@ou,___flmul@b
  3464   000ED6  C086  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3465   000EDA  C087  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3466   000EDE  C088  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3467   000EE2  0E00               	movlw	0
  3468   000EE4  6E17               	movwf	___flmul@a^0,c
  3469   000EE6  0E00               	movlw	0
  3470   000EE8  6E18               	movwf	(___flmul@a+1)^0,c
  3471   000EEA  0E20               	movlw	32
  3472   000EEC  6E19               	movwf	(___flmul@a+2)^0,c
  3473   000EEE  0E41               	movlw	65
  3474   000EF0  6E1A               	movwf	(___flmul@a+3)^0,c
  3475   000EF2  EC66  F00B         	call	___flmul	;wreg free
  3476   000EF6  C013  F085         	movff	?___flmul,efgtoa@ou
  3477   000EFA  C014  F086         	movff	?___flmul+1,efgtoa@ou+1
  3478   000EFE  C015  F087         	movff	?___flmul+2,efgtoa@ou+2
  3479   000F02  C016  F088         	movff	?___flmul+3,efgtoa@ou+3
  3480   000F06                     
  3481                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3482   000F06  0E66               	movlw	102
  3483   000F08  0100               	movlb	0	; () banked
  3484   000F0A  197C               	xorwf	efgtoa@nmode& (0+255),w,b
  3485   000F0C  A4D8               	btfss	status,2,c
  3486   000F0E  EF8B  F007         	goto	u5921
  3487   000F12  EF8D  F007         	goto	u5920
  3488   000F16                     u5921:
  3489   000F16  EF8F  F007         	goto	l5575
  3490   000F1A                     u5920:
  3491   000F1A                     
  3492                           ; BSR set to: 0
  3493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3494   000F1A  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  3495   000F1C  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  3496   000F1E                     l5575:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3499   000F1E  C085  F09A         	movff	efgtoa@ou,efgtoa@u
  3500   000F22  C086  F09B         	movff	efgtoa@ou+1,efgtoa@u+1
  3501   000F26  C087  F09C         	movff	efgtoa@ou+2,efgtoa@u+2
  3502   000F2A  C088  F09D         	movff	efgtoa@ou+3,efgtoa@u+3
  3503   000F2E                     
  3504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3505   000F2E  C081  F072         	movff	efgtoa@e,efgtoa@ne
  3506   000F32  C082  F073         	movff	efgtoa@e+1,efgtoa@ne+1
  3507   000F36                     
  3508                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3509   000F36  0E00               	movlw	0
  3510   000F38  0100               	movlb	0	; () banked
  3511   000F3A  6F7A               	movwf	efgtoa@pp& (0+255),b
  3512   000F3C                     
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3515   000F3C  0E00               	movlw	0
  3516   000F3E  6F77               	movwf	(efgtoa@t+1)& (0+255),b
  3517   000F40  0E00               	movlw	0
  3518   000F42  6F76               	movwf	efgtoa@t& (0+255),b
  3519   000F44                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3522   000F44  0E00               	movlw	0
  3523   000F46  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3524   000F48  0E00               	movlw	0
  3525   000F4A  6F89               	movwf	efgtoa@i& (0+255),b
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3528   000F4C  EF8D  F008         	goto	l5625
  3529   000F50                     l5585:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3533   000F50  C08B  F034         	movff	efgtoa@h,___fldiv@b
  3534   000F54  C08C  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3535   000F58  C08D  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3536   000F5C  C08E  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3537   000F60  C09A  F038         	movff	efgtoa@u,___fldiv@a
  3538   000F64  C09B  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3539   000F68  C09C  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3540   000F6C  C09D  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3541   000F70  EC7B  F00D         	call	___fldiv	;wreg free
  3542   000F74  C034  F04D         	movff	?___fldiv,floorf@x
  3543   000F78  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3544   000F7C  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3545   000F80  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3546   000F84  ECFA  F010         	call	_floorf	;wreg free
  3547   000F88  C04D  F08F         	movff	?_floorf,efgtoa@l
  3548   000F8C  C04E  F090         	movff	?_floorf+1,efgtoa@l+1
  3549   000F90  C04F  F091         	movff	?_floorf+2,efgtoa@l+2
  3550   000F94  C050  F092         	movff	?_floorf+3,efgtoa@l+3
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3553   000F98  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3554   000F9C  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3555   000FA0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3556   000FA4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3557   000FA8  EC7C  F015         	call	___fltol	;wreg free
  3558   000FAC  BE06               	btfsc	(?___fltol+1)^0,7,c
  3559   000FAE  EFE4  F007         	goto	u5930
  3560   000FB2  5006               	movf	(?___fltol+1)^0,w,c
  3561   000FB4  E107               	bnz	u5931
  3562   000FB6  0E0A               	movlw	10
  3563   000FB8  5C05               	subwf	?___fltol^0,w,c
  3564   000FBA  B0D8               	btfsc	status,0,c
  3565   000FBC  EFE2  F007         	goto	u5931
  3566   000FC0  EFE4  F007         	goto	u5930
  3567   000FC4                     u5931:
  3568   000FC4  EFF4  F007         	goto	l5589
  3569   000FC8                     u5930:
  3570   000FC8  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3571   000FCC  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3572   000FD0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3573   000FD4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3574   000FD8  EC7C  F015         	call	___fltol	;wreg free
  3575   000FDC  C005  F07D         	movff	?___fltol,efgtoa@d
  3576   000FE0  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3577   000FE4  EFF9  F007         	goto	l1273
  3578   000FE8                     l5589:
  3579   000FE8  0E00               	movlw	0
  3580   000FEA  0100               	movlb	0	; () banked
  3581   000FEC  6F7E               	movwf	(efgtoa@d+1)& (0+255),b
  3582   000FEE  0E09               	movlw	9
  3583   000FF0  6F7D               	movwf	efgtoa@d& (0+255),b
  3584   000FF2                     l1273:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3587   000FF2  0100               	movlb	0	; () banked
  3588   000FF4  517A               	movf	efgtoa@pp& (0+255),w,b
  3589   000FF6  A4D8               	btfss	status,2,c
  3590   000FF8  EF00  F008         	goto	u5941
  3591   000FFC  EF02  F008         	goto	u5940
  3592   001000                     u5941:
  3593   001000  EF2A  F008         	goto	l5609
  3594   001004                     u5940:
  3595   001004                     
  3596                           ; BSR set to: 0
  3597   001004  BF73               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3598   001006  EF09  F008         	goto	u5950
  3599   00100A  EF07  F008         	goto	u5951
  3600   00100E                     u5951:
  3601   00100E  EF2A  F008         	goto	l5609
  3602   001012                     u5950:
  3603   001012                     
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3606   001012  0E0C               	movlw	low _dbuf
  3607   001014  2598               	addwf	efgtoa@n& (0+255),w,b
  3608   001016  6ED9               	movwf	fsr2l,c
  3609   001018  0E01               	movlw	high _dbuf
  3610   00101A  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3611   00101C  6EDA               	movwf	fsr2h,c
  3612   00101E  0E2E               	movlw	46
  3613   001020  6EDF               	movwf	indf2,c
  3614   001022                     
  3615                           ; BSR set to: 0
  3616   001022  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3617   001024  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3618   001026                     
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3621   001026  0783               	decf	efgtoa@w& (0+255),f,b
  3622   001028  A0D8               	btfss	status,0,c
  3623   00102A  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3624   00102C                     
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3627   00102C  0E01               	movlw	1
  3628   00102E  6F7A               	movwf	efgtoa@pp& (0+255),b
  3629   001030  EF2A  F008         	goto	l5609
  3630   001034                     l5601:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3634   001034  0E0C               	movlw	low _dbuf
  3635   001036  2598               	addwf	efgtoa@n& (0+255),w,b
  3636   001038  6ED9               	movwf	fsr2l,c
  3637   00103A  0E01               	movlw	high _dbuf
  3638   00103C  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3639   00103E  6EDA               	movwf	fsr2h,c
  3640   001040  0E30               	movlw	48
  3641   001042  6EDF               	movwf	indf2,c
  3642   001044                     
  3643                           ; BSR set to: 0
  3644   001044  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3645   001046  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3646   001048                     
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3649   001048  0783               	decf	efgtoa@w& (0+255),f,b
  3650   00104A  A0D8               	btfss	status,0,c
  3651   00104C  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3652   00104E                     
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3655   00104E  0776               	decf	efgtoa@t& (0+255),f,b
  3656   001050  A0D8               	btfss	status,0,c
  3657   001052  0777               	decf	(efgtoa@t+1)& (0+255),f,b
  3658   001054                     l5609:
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3662   001054  5176               	movf	efgtoa@t& (0+255),w,b
  3663   001056  1177               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3664   001058  A4D8               	btfss	status,2,c
  3665   00105A  EF31  F008         	goto	u5961
  3666   00105E  EF33  F008         	goto	u5960
  3667   001062                     u5961:
  3668   001062  EF1A  F008         	goto	l5601
  3669   001066                     u5960:
  3670   001066                     
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3673   001066  0E0C               	movlw	low _dbuf
  3674   001068  2598               	addwf	efgtoa@n& (0+255),w,b
  3675   00106A  6ED9               	movwf	fsr2l,c
  3676   00106C  0E01               	movlw	high _dbuf
  3677   00106E  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3678   001070  6EDA               	movwf	fsr2h,c
  3679   001072  517D               	movf	efgtoa@d& (0+255),w,b
  3680   001074  0F30               	addlw	48
  3681   001076  6EDF               	movwf	indf2,c
  3682   001078                     
  3683                           ; BSR set to: 0
  3684   001078  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3685   00107A  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3686   00107C                     
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3689   00107C  0783               	decf	efgtoa@w& (0+255),f,b
  3690   00107E  A0D8               	btfss	status,0,c
  3691   001080  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3692   001082                     
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3695   001082  C08B  F02C         	movff	efgtoa@h,___flsub@b
  3696   001086  C08C  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3697   00108A  C08D  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3698   00108E  C08E  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3699   001092  C08F  F017         	movff	efgtoa@l,___flmul@a
  3700   001096  C090  F018         	movff	efgtoa@l+1,___flmul@a+1
  3701   00109A  C091  F019         	movff	efgtoa@l+2,___flmul@a+2
  3702   00109E  C092  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3703   0010A2  C09A  F013         	movff	efgtoa@u,___flmul@b
  3704   0010A6  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3705   0010AA  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3706   0010AE  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3707   0010B2  EC66  F00B         	call	___flmul	;wreg free
  3708   0010B6  C013  F030         	movff	?___flmul,___flsub@a
  3709   0010BA  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3710   0010BE  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3711   0010C2  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3712   0010C6  EC8C  F019         	call	___flsub	;wreg free
  3713   0010CA  C02C  F08B         	movff	?___flsub,efgtoa@h
  3714   0010CE  C02D  F08C         	movff	?___flsub+1,efgtoa@h+1
  3715   0010D2  C02E  F08D         	movff	?___flsub+2,efgtoa@h+2
  3716   0010D6  C02F  F08E         	movff	?___flsub+3,efgtoa@h+3
  3717   0010DA                     
  3718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3719   0010DA  C09A  F034         	movff	efgtoa@u,___fldiv@b
  3720   0010DE  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3721   0010E2  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3722   0010E6  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3723   0010EA  0E00               	movlw	0
  3724   0010EC  6E38               	movwf	___fldiv@a^0,c
  3725   0010EE  0E00               	movlw	0
  3726   0010F0  6E39               	movwf	(___fldiv@a+1)^0,c
  3727   0010F2  0E20               	movlw	32
  3728   0010F4  6E3A               	movwf	(___fldiv@a+2)^0,c
  3729   0010F6  0E41               	movlw	65
  3730   0010F8  6E3B               	movwf	(___fldiv@a+3)^0,c
  3731   0010FA  EC7B  F00D         	call	___fldiv	;wreg free
  3732   0010FE  C034  F09A         	movff	?___fldiv,efgtoa@u
  3733   001102  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3734   001106  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3735   00110A  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3736   00110E                     
  3737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3738   00110E  0100               	movlb	0	; () banked
  3739   001110  0772               	decf	efgtoa@ne& (0+255),f,b
  3740   001112  A0D8               	btfss	status,0,c
  3741   001114  0773               	decf	(efgtoa@ne+1)& (0+255),f,b
  3742   001116                     
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3745   001116  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3746   001118  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3747   00111A                     l5625:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3751   00111A  517F               	movf	efgtoa@m& (0+255),w,b
  3752   00111C  5D89               	subwf	efgtoa@i& (0+255),w,b
  3753   00111E  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3754   001120  0A80               	xorlw	128
  3755   001122  6F70               	movwf	??_efgtoa& (0+255),b
  3756   001124  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  3757   001126  0A80               	xorlw	128
  3758   001128  5970               	subwfb	??_efgtoa& (0+255),w,b
  3759   00112A  B0D8               	btfsc	status,0,c
  3760   00112C  EF9A  F008         	goto	u5971
  3761   001130  EF9C  F008         	goto	u5970
  3762   001134                     u5971:
  3763   001134  EFAA  F008         	goto	l5629
  3764   001138                     u5970:
  3765   001138                     
  3766                           ; BSR set to: 0
  3767   001138  BF99               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3768   00113A  EFA8  F008         	goto	u5981
  3769   00113E  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3770   001140  E109               	bnz	u5980
  3771   001142  0E4B               	movlw	75
  3772   001144  5D98               	subwf	efgtoa@n& (0+255),w,b
  3773   001146  A0D8               	btfss	status,0,c
  3774   001148  EFA8  F008         	goto	u5981
  3775   00114C  EFAA  F008         	goto	u5980
  3776   001150                     u5981:
  3777   001150  EFA8  F007         	goto	l5585
  3778   001154                     u5980:
  3779   001154                     l5629:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3783   001154  0E00               	movlw	0
  3784   001156  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3785   001158  0E4F               	movlw	79
  3786   00115A  6F89               	movwf	efgtoa@i& (0+255),b
  3787   00115C                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3790   00115C  0E0C               	movlw	low _dbuf
  3791   00115E  2589               	addwf	efgtoa@i& (0+255),w,b
  3792   001160  6ED9               	movwf	fsr2l,c
  3793   001162  0E01               	movlw	high _dbuf
  3794   001164  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3795   001166  6EDA               	movwf	fsr2h,c
  3796   001168  6ADF               	clrf	indf2,c
  3797   00116A                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3800   00116A  0E0C               	movlw	low _dbuf
  3801   00116C  6F70               	movwf	??_efgtoa& (0+255),b
  3802   00116E  0E01               	movlw	high _dbuf
  3803   001170  6F71               	movwf	(??_efgtoa+1)& (0+255),b
  3804   001172  5198               	movf	efgtoa@n& (0+255),w,b
  3805   001174  5F70               	subwf	??_efgtoa& (0+255),f,b
  3806   001176  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3807   001178  5B71               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3808   00117A  5189               	movf	efgtoa@i& (0+255),w,b
  3809   00117C  2570               	addwf	??_efgtoa& (0+255),w,b
  3810   00117E  6E05               	movwf	memcpy@d1^0,c
  3811   001180  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3812   001182  2171               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3813   001184  6E06               	movwf	(memcpy@d1+1)^0,c
  3814   001186  0E0C               	movlw	low _dbuf
  3815   001188  6E07               	movwf	memcpy@s1^0,c
  3816   00118A  0E01               	movlw	high _dbuf
  3817   00118C  6E08               	movwf	(memcpy@s1+1)^0,c
  3818   00118E  C098  F009         	movff	efgtoa@n,memcpy@n
  3819   001192  C099  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3820   001196  ECD4  F018         	call	_memcpy	;wreg free
  3821   00119A                     
  3822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3823   00119A  0100               	movlb	0	; () banked
  3824   00119C  5198               	movf	efgtoa@n& (0+255),w,b
  3825   00119E  5D89               	subwf	efgtoa@i& (0+255),w,b
  3826   0011A0  6F98               	movwf	efgtoa@n& (0+255),b
  3827   0011A2  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3828   0011A4  598A               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3829   0011A6  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  3830   0011A8                     
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3833   0011A8  5193               	movf	efgtoa@sign& (0+255),w,b
  3834   0011AA  A4D8               	btfss	status,2,c
  3835   0011AC  EFDA  F008         	goto	u5991
  3836   0011B0  EFDD  F008         	goto	u5990
  3837   0011B4                     u5991:
  3838   0011B4  0E01               	movlw	1
  3839   0011B6  EFDE  F008         	goto	u6000
  3840   0011BA                     u5990:
  3841   0011BA  0E00               	movlw	0
  3842   0011BC                     u6000:
  3843   0011BC  6F89               	movwf	efgtoa@i& (0+255),b
  3844   0011BE  6B8A               	clrf	(efgtoa@i+1)& (0+255),b
  3845   0011C0                     
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3848   0011C0  5193               	movf	efgtoa@sign& (0+255),w,b
  3849   0011C2  B4D8               	btfsc	status,2,c
  3850   0011C4  EFE6  F008         	goto	u6011
  3851   0011C8  EFE8  F008         	goto	u6010
  3852   0011CC                     u6011:
  3853   0011CC  EFF3  F008         	goto	l5643
  3854   0011D0                     u6010:
  3855   0011D0                     
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3858   0011D0  0798               	decf	efgtoa@n& (0+255),f,b
  3859   0011D2  A0D8               	btfss	status,0,c
  3860   0011D4  0799               	decf	(efgtoa@n+1)& (0+255),f,b
  3861   0011D6  0E0C               	movlw	low _dbuf
  3862   0011D8  2598               	addwf	efgtoa@n& (0+255),w,b
  3863   0011DA  6ED9               	movwf	fsr2l,c
  3864   0011DC  0E01               	movlw	high _dbuf
  3865   0011DE  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3866   0011E0  6EDA               	movwf	fsr2h,c
  3867   0011E2  C093  FFDF         	movff	efgtoa@sign,indf2
  3868   0011E6                     l5643:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3872   0011E6  5189               	movf	efgtoa@i& (0+255),w,b
  3873   0011E8  5F83               	subwf	efgtoa@w& (0+255),f,b
  3874   0011EA  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3875   0011EC  5B84               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3876   0011EE                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3879   0011EE  C06A  F015         	movff	efgtoa@fp,pad@fp
  3880   0011F2  0E0C               	movlw	low _dbuf
  3881   0011F4  2598               	addwf	efgtoa@n& (0+255),w,b
  3882   0011F6  6E16               	movwf	pad@buf^0,c
  3883   0011F8  0E01               	movlw	high _dbuf
  3884   0011FA  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3885   0011FC  6E17               	movwf	(pad@buf+1)^0,c
  3886   0011FE  C083  F018         	movff	efgtoa@w,pad@p
  3887   001202  C084  F019         	movff	efgtoa@w+1,pad@p+1
  3888   001206  EC76  F018         	call	_pad	;wreg free
  3889   00120A                     l1240:
  3890   00120A  0012               	return		;funcret
  3891   00120C                     __end_of_efgtoa:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _strcpy *****************
  3895 ;; Defined at:
  3896 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3899 ;;		 -> dbuf(80), 
  3900 ;;  src             1    6[COMRAM] PTR const unsigned char 
  3901 ;;		 -> STR_5(4), STR_2(4), 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  d               2    8[COMRAM] PTR unsigned char 
  3904 ;;		 -> dbuf(80), 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2    4[COMRAM] PTR unsigned char 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3914 ;;      Params:         3       0       0       0       0       0       0       0       0
  3915 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3916 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3917 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3918 ;;Total ram usage:        6 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; Hardware stack levels required when called: 4
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_efgtoa
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text8
  3929   0034A0                     __ptext8:
  3930                           	callstack 0
  3931   0034A0                     _strcpy:
  3932                           	callstack 22
  3933   0034A0  C005  F009         	movff	strcpy@dest,strcpy@d
  3934   0034A4  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3935   0034A8                     l5363:
  3936   0034A8  2A07               	incf	strcpy@src^0,f,c
  3937   0034AA  0407               	decf	strcpy@src^0,w,c
  3938   0034AC  6E08               	movwf	??_strcpy^0,c
  3939   0034AE  C008  FFF6         	movff	??_strcpy,tblptrl
  3940   0034B2                     	if	1	;There is more than 1 active tblptr byte
  3941   0034B2  0E08               	movlw	high __smallconst
  3942   0034B4  6EF7               	movwf	tblptrh,c
  3943   0034B6                     	endif
  3944   0034B6                     	if	0	;tblptru may be non-zero
  3945   0034B6                     	endif
  3946   0034B6                     	if	0	;tblptru may be non-zero
  3947   0034B6                     	endif
  3948   0034B6  C009  FFD9         	movff	strcpy@d,fsr2l
  3949   0034BA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3950   0034BE  4A09               	infsnz	strcpy@d^0,f,c
  3951   0034C0  2A0A               	incf	(strcpy@d+1)^0,f,c
  3952   0034C2  0008               	tblrd		*
  3953   0034C4  CFF5 FFDF          	movff	tablat,indf2
  3954   0034C8  50DF               	movf	indf2,w,c
  3955   0034CA  A4D8               	btfss	status,2,c
  3956   0034CC  EF6A  F01A         	goto	u5571
  3957   0034D0  EF6C  F01A         	goto	u5570
  3958   0034D4                     u5571:
  3959   0034D4  EF54  F01A         	goto	l5363
  3960   0034D8                     u5570:
  3961   0034D8  0012               	return		;funcret
  3962   0034DA                     __end_of_strcpy:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function _pad *****************
  3966 ;; Defined at:
  3967 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  3970 ;;		 -> sprintf@f(12), 
  3971 ;;  buf             2   21[COMRAM] PTR unsigned char 
  3972 ;;		 -> dbuf(80), 
  3973 ;;  p               2   23[COMRAM] int 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  i               2   26[COMRAM] int 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3985 ;;      Params:         5       0       0       0       0       0       0       0       0
  3986 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3987 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3988 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3989 ;;Total ram usage:        8 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 8
  3992 ;; This function calls:
  3993 ;;		_fputc
  3994 ;;		_fputs
  3995 ;; This function is called by:
  3996 ;;		_efgtoa
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text9
  4001   0030EC                     __ptext9:
  4002                           	callstack 0
  4003   0030EC                     _pad:
  4004                           	callstack 18
  4005   0030EC                     
  4006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4007   0030EC  BE19               	btfsc	(pad@p+1)^0,7,c
  4008   0030EE  EF7D  F018         	goto	u5480
  4009   0030F2  EF7B  F018         	goto	u5481
  4010   0030F6                     u5481:
  4011   0030F6  EF81  F018         	goto	l1225
  4012   0030FA                     u5480:
  4013   0030FA                     
  4014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4015   0030FA  0E00               	movlw	0
  4016   0030FC  6E19               	movwf	(pad@p+1)^0,c
  4017   0030FE  0E00               	movlw	0
  4018   003100  6E18               	movwf	pad@p^0,c
  4019   003102                     l1225:
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4022   003102  0E00               	movlw	0
  4023   003104  6E1C               	movwf	(pad@i+1)^0,c
  4024   003106  0E00               	movlw	0
  4025   003108  6E1B               	movwf	pad@i^0,c
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4028   00310A  EF91  F018         	goto	l5335
  4029   00310E                     l5331:
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4032   00310E  0E00               	movlw	0
  4033   003110  6E08               	movwf	(fputc@c+1)^0,c
  4034   003112  0E20               	movlw	32
  4035   003114  6E07               	movwf	fputc@c^0,c
  4036   003116  C015  F009         	movff	pad@fp,fputc@fp
  4037   00311A  EC00  F017         	call	_fputc	;wreg free
  4038   00311E                     
  4039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4040   00311E  4A1B               	infsnz	pad@i^0,f,c
  4041   003120  2A1C               	incf	(pad@i+1)^0,f,c
  4042   003122                     l5335:
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4045   003122  5018               	movf	pad@p^0,w,c
  4046   003124  5C1B               	subwf	pad@i^0,w,c
  4047   003126  501C               	movf	(pad@i+1)^0,w,c
  4048   003128  0A80               	xorlw	128
  4049   00312A  6E1A               	movwf	??_pad^0,c
  4050   00312C  5019               	movf	(pad@p+1)^0,w,c
  4051   00312E  0A80               	xorlw	128
  4052   003130  581A               	subwfb	??_pad^0,w,c
  4053   003132  A0D8               	btfss	status,0,c
  4054   003134  EF9E  F018         	goto	u5491
  4055   003138  EFA0  F018         	goto	u5490
  4056   00313C                     u5491:
  4057   00313C  EF87  F018         	goto	l5331
  4058   003140                     u5490:
  4059   003140                     
  4060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4061   003140  C016  F00F         	movff	pad@buf,fputs@s
  4062   003144  C017  F010         	movff	pad@buf+1,fputs@s+1
  4063   003148  C015  F011         	movff	pad@fp,fputs@fp
  4064   00314C  ECF0  F019         	call	_fputs	;wreg free
  4065   003150  0012               	return		;funcret
  4066   003152                     __end_of_pad:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _fputs *****************
  4070 ;; Defined at:
  4071 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4074 ;;		 -> dbuf(80), 
  4075 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  4076 ;;		 -> sprintf@f(12), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  i               2   18[COMRAM] int 
  4079 ;;  c               1   17[COMRAM] unsigned char 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  2   14[COMRAM] int 
  4082 ;; Registers used:
  4083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4089 ;;      Params:         3       0       0       0       0       0       0       0       0
  4090 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4092 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4093 ;;Total ram usage:        6 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 7
  4096 ;; This function calls:
  4097 ;;		_fputc
  4098 ;; This function is called by:
  4099 ;;		_pad
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text10
  4104   0033E0                     __ptext10:
  4105                           	callstack 0
  4106   0033E0                     _fputs:
  4107                           	callstack 18
  4108   0033E0  0E00               	movlw	0
  4109   0033E2  6E14               	movwf	(fputs@i+1)^0,c
  4110   0033E4  0E00               	movlw	0
  4111   0033E6  6E13               	movwf	fputs@i^0,c
  4112   0033E8  EFFF  F019         	goto	l4905
  4113   0033EC                     l4901:
  4114   0033EC  C012  F007         	movff	fputs@c,fputc@c
  4115   0033F0  6A08               	clrf	(fputc@c+1)^0,c
  4116   0033F2  C011  F009         	movff	fputs@fp,fputc@fp
  4117   0033F6  EC00  F017         	call	_fputc	;wreg free
  4118   0033FA  4A13               	infsnz	fputs@i^0,f,c
  4119   0033FC  2A14               	incf	(fputs@i+1)^0,f,c
  4120   0033FE                     l4905:
  4121   0033FE  5013               	movf	fputs@i^0,w,c
  4122   003400  240F               	addwf	fputs@s^0,w,c
  4123   003402  6ED9               	movwf	fsr2l,c
  4124   003404  5014               	movf	(fputs@i+1)^0,w,c
  4125   003406  2010               	addwfc	(fputs@s+1)^0,w,c
  4126   003408  6EDA               	movwf	fsr2h,c
  4127   00340A  50DF               	movf	indf2,w,c
  4128   00340C  6E12               	movwf	fputs@c^0,c
  4129   00340E  5012               	movf	fputs@c^0,w,c
  4130   003410  A4D8               	btfss	status,2,c
  4131   003412  EF0D  F01A         	goto	u4851
  4132   003416  EF0F  F01A         	goto	u4850
  4133   00341A                     u4851:
  4134   00341A  EFF6  F019         	goto	l4901
  4135   00341E                     u4850:
  4136   00341E  0012               	return		;funcret
  4137   003420                     __end_of_fputs:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _fputc *****************
  4141 ;; Defined at:
  4142 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  c               2    6[COMRAM] int 
  4145 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  4146 ;;		 -> sprintf@f(12), 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  2    6[COMRAM] int 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         3       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:        8 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 6
  4165 ;; This function calls:
  4166 ;;		_putch
  4167 ;; This function is called by:
  4168 ;;		_pad
  4169 ;;		_vfpfcnvrt
  4170 ;;		_fputs
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text11
  4175   002E00                     __ptext11:
  4176                           	callstack 0
  4177   002E00                     _fputc:
  4178                           	callstack 21
  4179   002E00  5009               	movf	fputc@fp^0,w,c
  4180   002E02  B4D8               	btfsc	status,2,c
  4181   002E04  EF06  F017         	goto	u4421
  4182   002E08  EF08  F017         	goto	u4420
  4183   002E0C                     u4421:
  4184   002E0C  EF10  F017         	goto	l4687
  4185   002E10                     u4420:
  4186   002E10  5009               	movf	fputc@fp^0,w,c
  4187   002E12  A4D8               	btfss	status,2,c
  4188   002E14  EF0E  F017         	goto	u4431
  4189   002E18  EF10  F017         	goto	u4430
  4190   002E1C                     u4431:
  4191   002E1C  EF15  F017         	goto	l4689
  4192   002E20                     u4430:
  4193   002E20                     l4687:
  4194   002E20  5007               	movf	fputc@c^0,w,c
  4195   002E22  ECDD  F01B         	call	_putch
  4196   002E26  EF5C  F017         	goto	l1365
  4197   002E2A                     l4689:
  4198   002E2A  5009               	movf	fputc@fp^0,w,c
  4199   002E2C  6ED9               	movwf	fsr2l,c
  4200   002E2E  6ADA               	clrf	fsr2h,c
  4201   002E30  0E0A               	movlw	10
  4202   002E32  26D9               	addwf	fsr2l,f,c
  4203   002E34  50DE               	movf	postinc2,w,c
  4204   002E36  10DE               	iorwf	postinc2,w,c
  4205   002E38  B4D8               	btfsc	status,2,c
  4206   002E3A  EF21  F017         	goto	u4441
  4207   002E3E  EF23  F017         	goto	u4440
  4208   002E42                     u4441:
  4209   002E42  EF3C  F017         	goto	l4693
  4210   002E46                     u4440:
  4211   002E46  5009               	movf	fputc@fp^0,w,c
  4212   002E48  6ED9               	movwf	fsr2l,c
  4213   002E4A  6ADA               	clrf	fsr2h,c
  4214   002E4C  0E0A               	movlw	10
  4215   002E4E  26D9               	addwf	fsr2l,f,c
  4216   002E50  5009               	movf	fputc@fp^0,w,c
  4217   002E52  6EE1               	movwf	fsr1l,c
  4218   002E54  6AE2               	clrf	fsr1h,c
  4219   002E56  0E03               	movlw	3
  4220   002E58  26E1               	addwf	fsr1l,f,c
  4221   002E5A  50DE               	movf	postinc2,w,c
  4222   002E5C  5CE6               	subwf	postinc1,w,c
  4223   002E5E  50E6               	movf	postinc1,w,c
  4224   002E60  0A80               	xorlw	128
  4225   002E62  6E0E               	movwf	(??_fputc+4)^0,c
  4226   002E64  50DE               	movf	postinc2,w,c
  4227   002E66  0A80               	xorlw	128
  4228   002E68  580E               	subwfb	(??_fputc+4)^0,w,c
  4229   002E6A  B0D8               	btfsc	status,0,c
  4230   002E6C  EF3A  F017         	goto	u4451
  4231   002E70  EF3C  F017         	goto	u4450
  4232   002E74                     u4451:
  4233   002E74  EF5C  F017         	goto	l1365
  4234   002E78                     u4450:
  4235   002E78                     l4693:
  4236   002E78  5009               	movf	fputc@fp^0,w,c
  4237   002E7A  6ED9               	movwf	fsr2l,c
  4238   002E7C  6ADA               	clrf	fsr2h,c
  4239   002E7E  0E03               	movlw	3
  4240   002E80  26D9               	addwf	fsr2l,f,c
  4241   002E82  CFDE F00A          	movff	postinc2,??_fputc
  4242   002E86  CFDD F00B          	movff	postdec2,??_fputc+1
  4243   002E8A  5009               	movf	fputc@fp^0,w,c
  4244   002E8C  6ED9               	movwf	fsr2l,c
  4245   002E8E  6ADA               	clrf	fsr2h,c
  4246   002E90  CFDE F00C          	movff	postinc2,??_fputc+2
  4247   002E94  CFDD F00D          	movff	postdec2,??_fputc+3
  4248   002E98  500A               	movf	??_fputc^0,w,c
  4249   002E9A  240C               	addwf	(??_fputc+2)^0,w,c
  4250   002E9C  6ED9               	movwf	fsr2l,c
  4251   002E9E  500B               	movf	(??_fputc+1)^0,w,c
  4252   002EA0  200D               	addwfc	(??_fputc+3)^0,w,c
  4253   002EA2  6EDA               	movwf	fsr2h,c
  4254   002EA4  C007  FFDF         	movff	fputc@c,indf2
  4255   002EA8  5009               	movf	fputc@fp^0,w,c
  4256   002EAA  6ED9               	movwf	fsr2l,c
  4257   002EAC  6ADA               	clrf	fsr2h,c
  4258   002EAE  0E03               	movlw	3
  4259   002EB0  26D9               	addwf	fsr2l,f,c
  4260   002EB2  2ADE               	incf	postinc2,f,c
  4261   002EB4  0E00               	movlw	0
  4262   002EB6  22DD               	addwfc	postdec2,f,c
  4263   002EB8                     l1365:
  4264   002EB8  0012               	return		;funcret
  4265   002EBA                     __end_of_fputc:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _putch *****************
  4269 ;; Defined at:
  4270 ;;		line 154 in file "mcc_generated_files/eusart1.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  txData          1    wreg     unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  txData          1    5[COMRAM] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        1 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; Hardware stack levels required when called: 5
  4291 ;; This function calls:
  4292 ;;		_EUSART1_Write
  4293 ;; This function is called by:
  4294 ;;		_fputc
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text12
  4299   0037BA                     __ptext12:
  4300                           	callstack 0
  4301   0037BA                     _putch:
  4302                           	callstack 21
  4303                           
  4304                           ;incstack = 0
  4305                           ;putch@txData stored from wreg
  4306   0037BA  6E06               	movwf	putch@txData^0,c
  4307   0037BC                     
  4308                           ;mcc_generated_files/eusart1.c: 154: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 155: {;mcc_generated_files/eusart1.c: 156:     EUSART1_Write(txData);
  4309   0037BC  5006               	movf	putch@txData^0,w,c
  4310   0037BE  ECBB  F01B         	call	_EUSART1_Write
  4311   0037C2  0012               	return		;funcret
  4312   0037C4                     __end_of_putch:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _memcpy *****************
  4316 ;; Defined at:
  4317 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  d1              2    4[COMRAM] PTR void 
  4320 ;;		 -> dbuf(80), 
  4321 ;;  s1              2    6[COMRAM] PTR const void 
  4322 ;;		 -> dbuf(80), 
  4323 ;;  n               2    8[COMRAM] unsigned int 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4326 ;;		 -> dbuf(80), 
  4327 ;;  d               2   11[COMRAM] PTR unsigned char 
  4328 ;;		 -> dbuf(80), 
  4329 ;;  tmp             1   10[COMRAM] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  2    4[COMRAM] PTR void 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4339 ;;      Params:         6       0       0       0       0       0       0       0       0
  4340 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4342 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4343 ;;Total ram usage:       11 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 4
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_efgtoa
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text13
  4354   0031A8                     __ptext13:
  4355                           	callstack 0
  4356   0031A8                     _memcpy:
  4357                           	callstack 22
  4358   0031A8  C007  F00E         	movff	memcpy@s1,memcpy@s
  4359   0031AC  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  4360   0031B0  C005  F00C         	movff	memcpy@d1,memcpy@d
  4361   0031B4  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  4362   0031B8  EFEE  F018         	goto	l5411
  4363   0031BC                     l5403:
  4364   0031BC  C00E  FFD9         	movff	memcpy@s,fsr2l
  4365   0031C0  C00F  FFDA         	movff	memcpy@s+1,fsr2h
  4366   0031C4  50DF               	movf	indf2,w,c
  4367   0031C6  6E0B               	movwf	memcpy@tmp^0,c
  4368   0031C8  4A0E               	infsnz	memcpy@s^0,f,c
  4369   0031CA  2A0F               	incf	(memcpy@s+1)^0,f,c
  4370   0031CC  C00C  FFD9         	movff	memcpy@d,fsr2l
  4371   0031D0  C00D  FFDA         	movff	memcpy@d+1,fsr2h
  4372   0031D4  C00B  FFDF         	movff	memcpy@tmp,indf2
  4373   0031D8  4A0C               	infsnz	memcpy@d^0,f,c
  4374   0031DA  2A0D               	incf	(memcpy@d+1)^0,f,c
  4375   0031DC                     l5411:
  4376   0031DC  0609               	decf	memcpy@n^0,f,c
  4377   0031DE  A0D8               	btfss	status,0,c
  4378   0031E0  060A               	decf	(memcpy@n+1)^0,f,c
  4379   0031E2  2809               	incf	memcpy@n^0,w,c
  4380   0031E4  E106               	bnz	u5691
  4381   0031E6  280A               	incf	(memcpy@n+1)^0,w,c
  4382   0031E8  A4D8               	btfss	status,2,c
  4383   0031EA  EFF9  F018         	goto	u5691
  4384   0031EE  EFFB  F018         	goto	u5690
  4385   0031F2                     u5691:
  4386   0031F2  EFDE  F018         	goto	l5403
  4387   0031F6                     u5690:
  4388   0031F6  0012               	return		;funcret
  4389   0031F8                     __end_of_memcpy:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _labs *****************
  4393 ;; Defined at:
  4394 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  a               4    4[COMRAM] long 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  4    4[COMRAM] long 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4408 ;;      Params:         4       0       0       0       0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4410 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4411 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4412 ;;Total ram usage:        8 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 4
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_efgtoa
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text14
  4423   003152                     __ptext14:
  4424                           	callstack 0
  4425   003152                     _labs:
  4426                           	callstack 22
  4427   003152  BE08               	btfsc	(labs@a+3)^0,7,c
  4428   003154  EFAE  F018         	goto	u5581
  4429   003158  EFB0  F018         	goto	u5580
  4430   00315C                     u5581:
  4431   00315C  EFBA  F018         	goto	l5369
  4432   003160                     u5580:
  4433   003160  C005  F005         	movff	labs@a,?_labs
  4434   003164  C006  F006         	movff	labs@a+1,?_labs+1
  4435   003168  C007  F007         	movff	labs@a+2,?_labs+2
  4436   00316C  C008  F008         	movff	labs@a+3,?_labs+3
  4437   003170  EFD3  F018         	goto	l1347
  4438   003174                     l5369:
  4439   003174  C005  F009         	movff	labs@a,??_labs
  4440   003178  C006  F00A         	movff	labs@a+1,??_labs+1
  4441   00317C  C007  F00B         	movff	labs@a+2,??_labs+2
  4442   003180  C008  F00C         	movff	labs@a+3,??_labs+3
  4443   003184  1E09               	comf	??_labs^0,f,c
  4444   003186  1E0A               	comf	(??_labs+1)^0,f,c
  4445   003188  1E0B               	comf	(??_labs+2)^0,f,c
  4446   00318A  1E0C               	comf	(??_labs+3)^0,f,c
  4447   00318C  2A09               	incf	??_labs^0,f,c
  4448   00318E  0E00               	movlw	0
  4449   003190  220A               	addwfc	(??_labs+1)^0,f,c
  4450   003192  220B               	addwfc	(??_labs+2)^0,f,c
  4451   003194  220C               	addwfc	(??_labs+3)^0,f,c
  4452   003196  C009  F005         	movff	??_labs,?_labs
  4453   00319A  C00A  F006         	movff	??_labs+1,?_labs+1
  4454   00319E  C00B  F007         	movff	??_labs+2,?_labs+2
  4455   0031A2  C00C  F008         	movff	??_labs+3,?_labs+3
  4456   0031A6                     l1347:
  4457   0031A6  0012               	return		;funcret
  4458   0031A8                     __end_of_labs:
  4459                           	callstack 0
  4460                           
  4461 ;; *************** function _floorf *****************
  4462 ;; Defined at:
  4463 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  x               4   76[COMRAM] float 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  u               4    6[BANK0 ] struct .
  4468 ;;  m               4    0[BANK0 ] unsigned long 
  4469 ;;  e               2    4[BANK0 ] int 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  4   76[COMRAM] float 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4479 ;;      Params:         4       0       0       0       0       0       0       0       0
  4480 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4481 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4482 ;;      Totals:        10      10       0       0       0       0       0       0       0
  4483 ;;Total ram usage:       20 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 4
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_efgtoa
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text15
  4494   0021F4                     __ptext15:
  4495                           	callstack 0
  4496   0021F4                     _floorf:
  4497                           	callstack 22
  4498   0021F4  C100  F066         	movff	floorf@F521,floorf@u
  4499   0021F8  C101  F067         	movff	floorf@F521+1,floorf@u+1
  4500   0021FC  C102  F068         	movff	floorf@F521+2,floorf@u+2
  4501   002200  C103  F069         	movff	floorf@F521+3,floorf@u+3
  4502   002204  C04D  F066         	movff	floorf@x,floorf@u
  4503   002208  C04E  F067         	movff	floorf@x+1,floorf@u+1
  4504   00220C  C04F  F068         	movff	floorf@x+2,floorf@u+2
  4505   002210  C050  F069         	movff	floorf@x+3,floorf@u+3
  4506   002214  0E81               	movlw	129
  4507   002216  6E51               	movwf	??_floorf^0,c
  4508   002218  0EFF               	movlw	255
  4509   00221A  6E52               	movwf	(??_floorf+1)^0,c
  4510   00221C  C066  F053         	movff	floorf@u,??_floorf+2
  4511   002220  C067  F054         	movff	floorf@u+1,??_floorf+3
  4512   002224  C068  F055         	movff	floorf@u+2,??_floorf+4
  4513   002228  C069  F056         	movff	floorf@u+3,??_floorf+5
  4514   00222C  0E18               	movlw	24
  4515   00222E  EF1E  F011         	goto	u5590
  4516   002232                     u5595:
  4517   002232  90D8               	bcf	status,0,c
  4518   002234  3256               	rrcf	(??_floorf+5)^0,f,c
  4519   002236  3255               	rrcf	(??_floorf+4)^0,f,c
  4520   002238  3254               	rrcf	(??_floorf+3)^0,f,c
  4521   00223A  3253               	rrcf	(??_floorf+2)^0,f,c
  4522   00223C                     u5590:
  4523   00223C  2EE8               	decfsz	wreg,f,c
  4524   00223E  EF19  F011         	goto	u5595
  4525   002242  5053               	movf	(??_floorf+2)^0,w,c
  4526   002244  2451               	addwf	??_floorf^0,w,c
  4527   002246  0100               	movlb	0	; () banked
  4528   002248  6F64               	movwf	floorf@e& (0+255),b
  4529   00224A  0E00               	movlw	0
  4530   00224C  2052               	addwfc	(??_floorf+1)^0,w,c
  4531   00224E  6F65               	movwf	(floorf@e+1)& (0+255),b
  4532   002250  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4533   002252  EF34  F011         	goto	u5601
  4534   002256  5165               	movf	(floorf@e+1)& (0+255),w,b
  4535   002258  E109               	bnz	u5600
  4536   00225A  0E17               	movlw	23
  4537   00225C  5D64               	subwf	floorf@e& (0+255),w,b
  4538   00225E  A0D8               	btfss	status,0,c
  4539   002260  EF34  F011         	goto	u5601
  4540   002264  EF36  F011         	goto	u5600
  4541   002268                     u5601:
  4542   002268  EF40  F011         	goto	l5379
  4543   00226C                     u5600:
  4544   00226C                     l5377:
  4545                           
  4546                           ; BSR set to: 0
  4547   00226C  C04D  F04D         	movff	floorf@x,?_floorf
  4548   002270  C04E  F04E         	movff	floorf@x+1,?_floorf+1
  4549   002274  C04F  F04F         	movff	floorf@x+2,?_floorf+2
  4550   002278  C050  F050         	movff	floorf@x+3,?_floorf+3
  4551   00227C  EF04  F012         	goto	l1333
  4552   002280                     l5379:
  4553                           
  4554                           ; BSR set to: 0
  4555   002280  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4556   002282  EF45  F011         	goto	u5611
  4557   002286  EF47  F011         	goto	u5610
  4558   00228A                     u5611:
  4559   00228A  EFB8  F011         	goto	l5389
  4560   00228E                     u5610:
  4561   00228E                     
  4562                           ; BSR set to: 0
  4563   00228E  C064  F051         	movff	floorf@e,??_floorf
  4564   002292  0EFF               	movlw	255
  4565   002294  6E52               	movwf	(??_floorf+1)^0,c
  4566   002296  0EFF               	movlw	255
  4567   002298  6E53               	movwf	(??_floorf+2)^0,c
  4568   00229A  0E7F               	movlw	127
  4569   00229C  6E54               	movwf	(??_floorf+3)^0,c
  4570   00229E  0E00               	movlw	0
  4571   0022A0  6E55               	movwf	(??_floorf+4)^0,c
  4572   0022A2                     u5625:
  4573   0022A2  6651               	tstfsz	??_floorf^0,c
  4574   0022A4  EF56  F011         	goto	u5626
  4575   0022A8  EF5E  F011         	goto	u5627
  4576   0022AC                     u5626:
  4577   0022AC  3455               	rlcf	(??_floorf+4)^0,w,c
  4578   0022AE  3255               	rrcf	(??_floorf+4)^0,f,c
  4579   0022B0  3254               	rrcf	(??_floorf+3)^0,f,c
  4580   0022B2  3253               	rrcf	(??_floorf+2)^0,f,c
  4581   0022B4  3252               	rrcf	(??_floorf+1)^0,f,c
  4582   0022B6  2E51               	decfsz	??_floorf^0,f,c
  4583   0022B8  EF51  F011         	goto	u5625
  4584   0022BC                     u5627:
  4585   0022BC  C052  F060         	movff	??_floorf+1,floorf@m
  4586   0022C0  C053  F061         	movff	??_floorf+2,floorf@m+1
  4587   0022C4  C054  F062         	movff	??_floorf+3,floorf@m+2
  4588   0022C8  C055  F063         	movff	??_floorf+4,floorf@m+3
  4589   0022CC  0100               	movlb	0	; () banked
  4590   0022CE  5160               	movf	floorf@m& (0+255),w,b
  4591   0022D0  1566               	andwf	floorf@u& (0+255),w,b
  4592   0022D2  6E51               	movwf	??_floorf^0,c
  4593   0022D4  5161               	movf	(floorf@m+1)& (0+255),w,b
  4594   0022D6  1567               	andwf	(floorf@u+1)& (0+255),w,b
  4595   0022D8  6E52               	movwf	(??_floorf+1)^0,c
  4596   0022DA  5162               	movf	(floorf@m+2)& (0+255),w,b
  4597   0022DC  1568               	andwf	(floorf@u+2)& (0+255),w,b
  4598   0022DE  6E53               	movwf	(??_floorf+2)^0,c
  4599   0022E0  5163               	movf	(floorf@m+3)& (0+255),w,b
  4600   0022E2  1569               	andwf	(floorf@u+3)& (0+255),w,b
  4601   0022E4  6E54               	movwf	(??_floorf+3)^0,c
  4602   0022E6  5051               	movf	??_floorf^0,w,c
  4603   0022E8  1052               	iorwf	(??_floorf+1)^0,w,c
  4604   0022EA  1053               	iorwf	(??_floorf+2)^0,w,c
  4605   0022EC  1054               	iorwf	(??_floorf+3)^0,w,c
  4606   0022EE  A4D8               	btfss	status,2,c
  4607   0022F0  EF7C  F011         	goto	u5631
  4608   0022F4  EF7E  F011         	goto	u5630
  4609   0022F8                     u5631:
  4610   0022F8  EF80  F011         	goto	l5385
  4611   0022FC                     u5630:
  4612   0022FC  EF36  F011         	goto	l5377
  4613   002300                     l5385:
  4614                           
  4615                           ; BSR set to: 0
  4616   002300  C066  F051         	movff	floorf@u,??_floorf
  4617   002304  C067  F052         	movff	floorf@u+1,??_floorf+1
  4618   002308  C068  F053         	movff	floorf@u+2,??_floorf+2
  4619   00230C  C069  F054         	movff	floorf@u+3,??_floorf+3
  4620   002310  0E20               	movlw	32
  4621   002312  EF90  F011         	goto	u5640
  4622   002316                     u5645:
  4623   002316  90D8               	bcf	status,0,c
  4624   002318  3254               	rrcf	(??_floorf+3)^0,f,c
  4625   00231A  3253               	rrcf	(??_floorf+2)^0,f,c
  4626   00231C  3252               	rrcf	(??_floorf+1)^0,f,c
  4627   00231E  3251               	rrcf	??_floorf^0,f,c
  4628   002320                     u5640:
  4629   002320  2EE8               	decfsz	wreg,f,c
  4630   002322  EF8B  F011         	goto	u5645
  4631   002326  5051               	movf	??_floorf^0,w,c
  4632   002328  1052               	iorwf	(??_floorf+1)^0,w,c
  4633   00232A  1053               	iorwf	(??_floorf+2)^0,w,c
  4634   00232C  1054               	iorwf	(??_floorf+3)^0,w,c
  4635   00232E  B4D8               	btfsc	status,2,c
  4636   002330  EF9C  F011         	goto	u5651
  4637   002334  EF9E  F011         	goto	u5650
  4638   002338                     u5651:
  4639   002338  EFA6  F011         	goto	l1336
  4640   00233C                     u5650:
  4641   00233C                     
  4642                           ; BSR set to: 0
  4643   00233C  5160               	movf	floorf@m& (0+255),w,b
  4644   00233E  2766               	addwf	floorf@u& (0+255),f,b
  4645   002340  5161               	movf	(floorf@m+1)& (0+255),w,b
  4646   002342  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  4647   002344  5162               	movf	(floorf@m+2)& (0+255),w,b
  4648   002346  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  4649   002348  5163               	movf	(floorf@m+3)& (0+255),w,b
  4650   00234A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  4651   00234C                     l1336:
  4652                           
  4653                           ; BSR set to: 0
  4654   00234C  1D60               	comf	floorf@m& (0+255),w,b
  4655   00234E  6E51               	movwf	??_floorf^0,c
  4656   002350  1D61               	comf	(floorf@m+1)& (0+255),w,b
  4657   002352  6E52               	movwf	(??_floorf+1)^0,c
  4658   002354  1D62               	comf	(floorf@m+2)& (0+255),w,b
  4659   002356  6E53               	movwf	(??_floorf+2)^0,c
  4660   002358  1D63               	comf	(floorf@m+3)& (0+255),w,b
  4661   00235A  6E54               	movwf	(??_floorf+3)^0,c
  4662   00235C  5051               	movf	??_floorf^0,w,c
  4663   00235E  1766               	andwf	floorf@u& (0+255),f,b
  4664   002360  5052               	movf	(??_floorf+1)^0,w,c
  4665   002362  1767               	andwf	(floorf@u+1)& (0+255),f,b
  4666   002364  5053               	movf	(??_floorf+2)^0,w,c
  4667   002366  1768               	andwf	(floorf@u+2)& (0+255),f,b
  4668   002368  5054               	movf	(??_floorf+3)^0,w,c
  4669   00236A  1769               	andwf	(floorf@u+3)& (0+255),f,b
  4670   00236C  EFFC  F011         	goto	l5397
  4671   002370                     l5389:
  4672                           
  4673                           ; BSR set to: 0
  4674   002370  C066  F051         	movff	floorf@u,??_floorf
  4675   002374  C067  F052         	movff	floorf@u+1,??_floorf+1
  4676   002378  C068  F053         	movff	floorf@u+2,??_floorf+2
  4677   00237C  C069  F054         	movff	floorf@u+3,??_floorf+3
  4678   002380  0E20               	movlw	32
  4679   002382  EFC8  F011         	goto	u5660
  4680   002386                     u5665:
  4681   002386  90D8               	bcf	status,0,c
  4682   002388  3254               	rrcf	(??_floorf+3)^0,f,c
  4683   00238A  3253               	rrcf	(??_floorf+2)^0,f,c
  4684   00238C  3252               	rrcf	(??_floorf+1)^0,f,c
  4685   00238E  3251               	rrcf	??_floorf^0,f,c
  4686   002390                     u5660:
  4687   002390  2EE8               	decfsz	wreg,f,c
  4688   002392  EFC3  F011         	goto	u5665
  4689   002396  5051               	movf	??_floorf^0,w,c
  4690   002398  1052               	iorwf	(??_floorf+1)^0,w,c
  4691   00239A  1053               	iorwf	(??_floorf+2)^0,w,c
  4692   00239C  1054               	iorwf	(??_floorf+3)^0,w,c
  4693   00239E  A4D8               	btfss	status,2,c
  4694   0023A0  EFD4  F011         	goto	u5671
  4695   0023A4  EFD6  F011         	goto	u5670
  4696   0023A8                     u5671:
  4697   0023A8  EFE0  F011         	goto	l5393
  4698   0023AC                     u5670:
  4699   0023AC                     
  4700                           ; BSR set to: 0
  4701   0023AC  0E00               	movlw	0
  4702   0023AE  6F66               	movwf	floorf@u& (0+255),b
  4703   0023B0  0E00               	movlw	0
  4704   0023B2  6F67               	movwf	(floorf@u+1)& (0+255),b
  4705   0023B4  0E00               	movlw	0
  4706   0023B6  6F68               	movwf	(floorf@u+2)& (0+255),b
  4707   0023B8  0E00               	movlw	0
  4708   0023BA  6F69               	movwf	(floorf@u+3)& (0+255),b
  4709   0023BC  EFFC  F011         	goto	l5397
  4710   0023C0                     l5393:
  4711                           
  4712                           ; BSR set to: 0
  4713   0023C0  90D8               	bcf	status,0,c
  4714   0023C2  3566               	rlcf	floorf@u& (0+255),w,b
  4715   0023C4  6E51               	movwf	??_floorf^0,c
  4716   0023C6  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  4717   0023C8  6E52               	movwf	(??_floorf+1)^0,c
  4718   0023CA  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  4719   0023CC  6E53               	movwf	(??_floorf+2)^0,c
  4720   0023CE  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  4721   0023D0  6E54               	movwf	(??_floorf+3)^0,c
  4722   0023D2  5051               	movf	??_floorf^0,w,c
  4723   0023D4  1052               	iorwf	(??_floorf+1)^0,w,c
  4724   0023D6  1053               	iorwf	(??_floorf+2)^0,w,c
  4725   0023D8  1054               	iorwf	(??_floorf+3)^0,w,c
  4726   0023DA  B4D8               	btfsc	status,2,c
  4727   0023DC  EFF2  F011         	goto	u5681
  4728   0023E0  EFF4  F011         	goto	u5680
  4729   0023E4                     u5681:
  4730   0023E4  EFFC  F011         	goto	l5397
  4731   0023E8                     u5680:
  4732   0023E8                     
  4733                           ; BSR set to: 0
  4734   0023E8  0E00               	movlw	0
  4735   0023EA  6F66               	movwf	floorf@u& (0+255),b
  4736   0023EC  0E00               	movlw	0
  4737   0023EE  6F67               	movwf	(floorf@u+1)& (0+255),b
  4738   0023F0  0E80               	movlw	128
  4739   0023F2  6F68               	movwf	(floorf@u+2)& (0+255),b
  4740   0023F4  0EBF               	movlw	191
  4741   0023F6  6F69               	movwf	(floorf@u+3)& (0+255),b
  4742   0023F8                     l5397:
  4743                           
  4744                           ; BSR set to: 0
  4745   0023F8  C066  F04D         	movff	floorf@u,?_floorf
  4746   0023FC  C067  F04E         	movff	floorf@u+1,?_floorf+1
  4747   002400  C068  F04F         	movff	floorf@u+2,?_floorf+2
  4748   002404  C069  F050         	movff	floorf@u+3,?_floorf+3
  4749   002408                     l1333:
  4750                           
  4751                           ; BSR set to: 0
  4752   002408  0012               	return		;funcret
  4753   00240A                     __end_of_floorf:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function ___fpclassifyf *****************
  4757 ;; Defined at:
  4758 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  x               4    4[COMRAM] float 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  u               4   14[COMRAM] struct .
  4763 ;;  e               2   12[COMRAM] int 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  2    4[COMRAM] int 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4773 ;;      Params:         4       0       0       0       0       0       0       0       0
  4774 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4775 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4776 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4777 ;;Total ram usage:       14 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 4
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_efgtoa
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text16
  4788   002D02                     __ptext16:
  4789                           	callstack 0
  4790   002D02                     ___fpclassifyf:
  4791                           	callstack 22
  4792   002D02  C104  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4793   002D06  C105  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4794   002D0A  C106  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4795   002D0E  C107  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4796   002D12  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4797   002D16  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4798   002D1A  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4799   002D1E  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4800   002D22  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4801   002D26  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4802   002D2A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4803   002D2E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4804   002D32  0E18               	movlw	24
  4805   002D34  EFA1  F016         	goto	u5500
  4806   002D38                     u5505:
  4807   002D38  90D8               	bcf	status,0,c
  4808   002D3A  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4809   002D3C  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4810   002D3E  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4811   002D40  3209               	rrcf	??___fpclassifyf^0,f,c
  4812   002D42                     u5500:
  4813   002D42  2EE8               	decfsz	wreg,f,c
  4814   002D44  EF9C  F016         	goto	u5505
  4815   002D48  5009               	movf	??___fpclassifyf^0,w,c
  4816   002D4A  6E0D               	movwf	___fpclassifyf@e^0,c
  4817   002D4C  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4818   002D4E  500D               	movf	___fpclassifyf@e^0,w,c
  4819   002D50  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4820   002D52  A4D8               	btfss	status,2,c
  4821   002D54  EFAE  F016         	goto	u5511
  4822   002D58  EFB0  F016         	goto	u5510
  4823   002D5C                     u5511:
  4824   002D5C  EFD0  F016         	goto	l5351
  4825   002D60                     u5510:
  4826   002D60  90D8               	bcf	status,0,c
  4827   002D62  340F               	rlcf	___fpclassifyf@u^0,w,c
  4828   002D64  6E09               	movwf	??___fpclassifyf^0,c
  4829   002D66  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4830   002D68  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4831   002D6A  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4832   002D6C  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4833   002D6E  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4834   002D70  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4835   002D72  5009               	movf	??___fpclassifyf^0,w,c
  4836   002D74  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4837   002D76  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4838   002D78  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4839   002D7A  A4D8               	btfss	status,2,c
  4840   002D7C  EFC2  F016         	goto	u5521
  4841   002D80  EFC4  F016         	goto	u5520
  4842   002D84                     u5521:
  4843   002D84  EFCA  F016         	goto	l5347
  4844   002D88                     u5520:
  4845   002D88  0E00               	movlw	0
  4846   002D8A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4847   002D8C  0E02               	movlw	2
  4848   002D8E  6E05               	movwf	?___fpclassifyf^0,c
  4849   002D90  EFFF  F016         	goto	l1326
  4850   002D94                     l5347:
  4851   002D94  0E00               	movlw	0
  4852   002D96  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4853   002D98  0E03               	movlw	3
  4854   002D9A  6E05               	movwf	?___fpclassifyf^0,c
  4855   002D9C  EFFF  F016         	goto	l1326
  4856   002DA0                     l5351:
  4857   002DA0  280D               	incf	___fpclassifyf@e^0,w,c
  4858   002DA2  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4859   002DA4  A4D8               	btfss	status,2,c
  4860   002DA6  EFD7  F016         	goto	u5531
  4861   002DAA  EFD9  F016         	goto	u5530
  4862   002DAE                     u5531:
  4863   002DAE  EFFB  F016         	goto	l5357
  4864   002DB2                     u5530:
  4865   002DB2  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4866   002DB6  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4867   002DBA  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4868   002DBE  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4869   002DC2  0E09               	movlw	9
  4870   002DC4                     u5545:
  4871   002DC4  90D8               	bcf	status,0,c
  4872   002DC6  3609               	rlcf	??___fpclassifyf^0,f,c
  4873   002DC8  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4874   002DCA  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4875   002DCC  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4876   002DCE  2EE8               	decfsz	wreg,f,c
  4877   002DD0  EFE2  F016         	goto	u5545
  4878   002DD4  5009               	movf	??___fpclassifyf^0,w,c
  4879   002DD6  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4880   002DD8  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4881   002DDA  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4882   002DDC  B4D8               	btfsc	status,2,c
  4883   002DDE  EFF3  F016         	goto	u5551
  4884   002DE2  EFF6  F016         	goto	u5550
  4885   002DE6                     u5551:
  4886   002DE6  0E01               	movlw	1
  4887   002DE8  EFF7  F016         	goto	u5560
  4888   002DEC                     u5550:
  4889   002DEC  0E00               	movlw	0
  4890   002DEE                     u5560:
  4891   002DEE  6E05               	movwf	?___fpclassifyf^0,c
  4892   002DF0  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4893   002DF2  EFFF  F016         	goto	l1326
  4894   002DF6                     l5357:
  4895   002DF6  0E00               	movlw	0
  4896   002DF8  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4897   002DFA  0E04               	movlw	4
  4898   002DFC  6E05               	movwf	?___fpclassifyf^0,c
  4899   002DFE                     l1326:
  4900   002DFE  0012               	return		;funcret
  4901   002E00                     __end_of___fpclassifyf:
  4902                           	callstack 0
  4903                           
  4904 ;; *************** function ___fltol *****************
  4905 ;; Defined at:
  4906 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  f1              4    4[COMRAM] int 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  exp1            1   13[COMRAM] unsigned char 
  4911 ;;  sign1           1   12[COMRAM] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  4    4[COMRAM] long 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4921 ;;      Params:         4       0       0       0       0       0       0       0       0
  4922 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4923 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4924 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4925 ;;Total ram usage:       10 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 4
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_efgtoa
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text17
  4936   002AF8                     __ptext17:
  4937                           	callstack 0
  4938   002AF8                     ___fltol:
  4939                           	callstack 22
  4940   002AF8  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4941   002AFA  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4942   002AFC  6E0E               	movwf	___fltol@exp1^0,c
  4943   002AFE  500E               	movf	___fltol@exp1^0,w,c
  4944   002B00  A4D8               	btfss	status,2,c
  4945   002B02  EF85  F015         	goto	u5411
  4946   002B06  EF87  F015         	goto	u5410
  4947   002B0A                     u5411:
  4948   002B0A  EF91  F015         	goto	l5289
  4949   002B0E                     u5410:
  4950   002B0E                     l5285:
  4951   002B0E  0E00               	movlw	0
  4952   002B10  6E05               	movwf	?___fltol^0,c
  4953   002B12  0E00               	movlw	0
  4954   002B14  6E06               	movwf	(?___fltol+1)^0,c
  4955   002B16  0E00               	movlw	0
  4956   002B18  6E07               	movwf	(?___fltol+2)^0,c
  4957   002B1A  0E00               	movlw	0
  4958   002B1C  6E08               	movwf	(?___fltol+3)^0,c
  4959   002B1E  EFFE  F015         	goto	l817
  4960   002B22                     l5289:
  4961   002B22  C005  F009         	movff	___fltol@f1,??___fltol
  4962   002B26  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4963   002B2A  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4964   002B2E  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4965   002B32  0E20               	movlw	32
  4966   002B34  EFA1  F015         	goto	u5420
  4967   002B38                     u5425:
  4968   002B38  90D8               	bcf	status,0,c
  4969   002B3A  320C               	rrcf	(??___fltol+3)^0,f,c
  4970   002B3C  320B               	rrcf	(??___fltol+2)^0,f,c
  4971   002B3E  320A               	rrcf	(??___fltol+1)^0,f,c
  4972   002B40  3209               	rrcf	??___fltol^0,f,c
  4973   002B42                     u5420:
  4974   002B42  2EE8               	decfsz	wreg,f,c
  4975   002B44  EF9C  F015         	goto	u5425
  4976   002B48  5009               	movf	??___fltol^0,w,c
  4977   002B4A  6E0D               	movwf	___fltol@sign1^0,c
  4978   002B4C  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4979   002B4E  0EFF               	movlw	255
  4980   002B50  1605               	andwf	___fltol@f1^0,f,c
  4981   002B52  0EFF               	movlw	255
  4982   002B54  1606               	andwf	(___fltol@f1+1)^0,f,c
  4983   002B56  0EFF               	movlw	255
  4984   002B58  1607               	andwf	(___fltol@f1+2)^0,f,c
  4985   002B5A  0E00               	movlw	0
  4986   002B5C  1608               	andwf	(___fltol@f1+3)^0,f,c
  4987   002B5E  0E96               	movlw	150
  4988   002B60  5E0E               	subwf	___fltol@exp1^0,f,c
  4989   002B62  BE0E               	btfsc	___fltol@exp1^0,7,c
  4990   002B64  EFB8  F015         	goto	u5430
  4991   002B68  EFB6  F015         	goto	u5431
  4992   002B6C                     u5431:
  4993   002B6C  EFCE  F015         	goto	l5309
  4994   002B70                     u5430:
  4995   002B70  500E               	movf	___fltol@exp1^0,w,c
  4996   002B72  0A80               	xorlw	128
  4997   002B74  0F97               	addlw	151
  4998   002B76  B0D8               	btfsc	status,0,c
  4999   002B78  EFC0  F015         	goto	u5441
  5000   002B7C  EFC2  F015         	goto	u5440
  5001   002B80                     u5441:
  5002   002B80  EFC4  F015         	goto	l5305
  5003   002B84                     u5440:
  5004   002B84  EF87  F015         	goto	l5285
  5005   002B88                     l5305:
  5006   002B88  90D8               	bcf	status,0,c
  5007   002B8A  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5008   002B8C  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5009   002B8E  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5010   002B90  3205               	rrcf	___fltol@f1^0,f,c
  5011   002B92  3E0E               	incfsz	___fltol@exp1^0,f,c
  5012   002B94  EFC4  F015         	goto	l5305
  5013   002B98  EFE6  F015         	goto	l5319
  5014   002B9C                     l5309:
  5015   002B9C  0E1F               	movlw	31
  5016   002B9E  640E               	cpfsgt	___fltol@exp1^0,c
  5017   002BA0  EFD4  F015         	goto	u5451
  5018   002BA4  EFD6  F015         	goto	u5450
  5019   002BA8                     u5451:
  5020   002BA8  EFDE  F015         	goto	l5317
  5021   002BAC                     u5450:
  5022   002BAC  EF87  F015         	goto	l5285
  5023   002BB0                     l5315:
  5024   002BB0  90D8               	bcf	status,0,c
  5025   002BB2  3605               	rlcf	___fltol@f1^0,f,c
  5026   002BB4  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5027   002BB6  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5028   002BB8  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5029   002BBA  060E               	decf	___fltol@exp1^0,f,c
  5030   002BBC                     l5317:
  5031   002BBC  500E               	movf	___fltol@exp1^0,w,c
  5032   002BBE  A4D8               	btfss	status,2,c
  5033   002BC0  EFE4  F015         	goto	u5461
  5034   002BC4  EFE6  F015         	goto	u5460
  5035   002BC8                     u5461:
  5036   002BC8  EFD8  F015         	goto	l5315
  5037   002BCC                     u5460:
  5038   002BCC                     l5319:
  5039   002BCC  500D               	movf	___fltol@sign1^0,w,c
  5040   002BCE  B4D8               	btfsc	status,2,c
  5041   002BD0  EFEC  F015         	goto	u5471
  5042   002BD4  EFEE  F015         	goto	u5470
  5043   002BD8                     u5471:
  5044   002BD8  EFF6  F015         	goto	l5323
  5045   002BDC                     u5470:
  5046   002BDC  1E08               	comf	(___fltol@f1+3)^0,f,c
  5047   002BDE  1E07               	comf	(___fltol@f1+2)^0,f,c
  5048   002BE0  1E06               	comf	(___fltol@f1+1)^0,f,c
  5049   002BE2  6C05               	negf	___fltol@f1^0,c
  5050   002BE4  0E00               	movlw	0
  5051   002BE6  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5052   002BE8  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5053   002BEA  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5054   002BEC                     l5323:
  5055   002BEC  C005  F005         	movff	___fltol@f1,?___fltol
  5056   002BF0  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5057   002BF4  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5058   002BF8  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5059   002BFC                     l817:
  5060   002BFC  0012               	return		;funcret
  5061   002BFE                     __end_of___fltol:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function ___flneg *****************
  5065 ;; Defined at:
  5066 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  f1              4    4[COMRAM] long 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  4    4[COMRAM] long 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5080 ;;      Params:         4       0       0       0       0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5083 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5084 ;;Total ram usage:        4 bytes
  5085 ;; Hardware stack levels used: 1
  5086 ;; Hardware stack levels required when called: 4
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_efgtoa
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text18
  5095   00354E                     __ptext18:
  5096                           	callstack 0
  5097   00354E                     ___flneg:
  5098                           	callstack 22
  5099   00354E  5005               	movf	___flneg@f1^0,w,c
  5100   003550  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5101   003552  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5102   003554  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5103   003556  B4D8               	btfsc	status,2,c
  5104   003558  EFB0  F01A         	goto	u5401
  5105   00355C  EFB2  F01A         	goto	u5400
  5106   003560                     u5401:
  5107   003560  EFBA  F01A         	goto	l5279
  5108   003564                     u5400:
  5109   003564  0E00               	movlw	0
  5110   003566  1A05               	xorwf	___flneg@f1^0,f,c
  5111   003568  0E00               	movlw	0
  5112   00356A  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5113   00356C  0E00               	movlw	0
  5114   00356E  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5115   003570  0E80               	movlw	128
  5116   003572  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5117   003574                     l5279:
  5118   003574  C005  F005         	movff	___flneg@f1,?___flneg
  5119   003578  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5120   00357C  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5121   003580  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5122   003584  0012               	return		;funcret
  5123   003586                     __end_of___flneg:
  5124                           	callstack 0
  5125                           
  5126 ;; *************** function ___fleq *****************
  5127 ;; Defined at:
  5128 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  ff1             4    4[COMRAM] long 
  5131 ;;  ff2             4    8[COMRAM] long 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;		None               void
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5143 ;;      Params:         8       0       0       0       0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5145 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5146 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5147 ;;Total ram usage:       12 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; Hardware stack levels required when called: 4
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		_efgtoa
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text19
  5158   002EBA                     __ptext19:
  5159                           	callstack 0
  5160   002EBA                     ___fleq:
  5161                           	callstack 22
  5162   002EBA  0E00               	movlw	0
  5163   002EBC  1405               	andwf	___fleq@ff1^0,w,c
  5164   002EBE  6E0D               	movwf	??___fleq^0,c
  5165   002EC0  0E00               	movlw	0
  5166   002EC2  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5167   002EC4  6E0E               	movwf	(??___fleq+1)^0,c
  5168   002EC6  0E80               	movlw	128
  5169   002EC8  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5170   002ECA  6E0F               	movwf	(??___fleq+2)^0,c
  5171   002ECC  0E7F               	movlw	127
  5172   002ECE  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5173   002ED0  6E10               	movwf	(??___fleq+3)^0,c
  5174   002ED2  500D               	movf	??___fleq^0,w,c
  5175   002ED4  100E               	iorwf	(??___fleq+1)^0,w,c
  5176   002ED6  100F               	iorwf	(??___fleq+2)^0,w,c
  5177   002ED8  1010               	iorwf	(??___fleq+3)^0,w,c
  5178   002EDA  A4D8               	btfss	status,2,c
  5179   002EDC  EF72  F017         	goto	u5321
  5180   002EE0  EF74  F017         	goto	u5320
  5181   002EE4                     u5321:
  5182   002EE4  EF7C  F017         	goto	l5241
  5183   002EE8                     u5320:
  5184   002EE8  0E00               	movlw	0
  5185   002EEA  6E05               	movwf	___fleq@ff1^0,c
  5186   002EEC  0E00               	movlw	0
  5187   002EEE  6E06               	movwf	(___fleq@ff1+1)^0,c
  5188   002EF0  0E00               	movlw	0
  5189   002EF2  6E07               	movwf	(___fleq@ff1+2)^0,c
  5190   002EF4  0E00               	movlw	0
  5191   002EF6  6E08               	movwf	(___fleq@ff1+3)^0,c
  5192   002EF8                     l5241:
  5193   002EF8  0E00               	movlw	0
  5194   002EFA  1409               	andwf	___fleq@ff2^0,w,c
  5195   002EFC  6E0D               	movwf	??___fleq^0,c
  5196   002EFE  0E00               	movlw	0
  5197   002F00  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5198   002F02  6E0E               	movwf	(??___fleq+1)^0,c
  5199   002F04  0E80               	movlw	128
  5200   002F06  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5201   002F08  6E0F               	movwf	(??___fleq+2)^0,c
  5202   002F0A  0E7F               	movlw	127
  5203   002F0C  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5204   002F0E  6E10               	movwf	(??___fleq+3)^0,c
  5205   002F10  500D               	movf	??___fleq^0,w,c
  5206   002F12  100E               	iorwf	(??___fleq+1)^0,w,c
  5207   002F14  100F               	iorwf	(??___fleq+2)^0,w,c
  5208   002F16  1010               	iorwf	(??___fleq+3)^0,w,c
  5209   002F18  A4D8               	btfss	status,2,c
  5210   002F1A  EF91  F017         	goto	u5331
  5211   002F1E  EF93  F017         	goto	u5330
  5212   002F22                     u5331:
  5213   002F22  EF9B  F017         	goto	l5245
  5214   002F26                     u5330:
  5215   002F26  0E00               	movlw	0
  5216   002F28  6E09               	movwf	___fleq@ff2^0,c
  5217   002F2A  0E00               	movlw	0
  5218   002F2C  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5219   002F2E  0E00               	movlw	0
  5220   002F30  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5221   002F32  0E00               	movlw	0
  5222   002F34  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5223   002F36                     l5245:
  5224   002F36  5009               	movf	___fleq@ff2^0,w,c
  5225   002F38  1805               	xorwf	___fleq@ff1^0,w,c
  5226   002F3A  E10F               	bnz	u5340
  5227   002F3C  500A               	movf	(___fleq@ff2+1)^0,w,c
  5228   002F3E  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5229   002F40  E10C               	bnz	u5340
  5230   002F42  500B               	movf	(___fleq@ff2+2)^0,w,c
  5231   002F44  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5232   002F46  E109               	bnz	u5340
  5233   002F48  500C               	movf	(___fleq@ff2+3)^0,w,c
  5234   002F4A  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5235   002F4C  B4D8               	btfsc	status,2,c
  5236   002F4E  EFAB  F017         	goto	u5341
  5237   002F52  EFAD  F017         	goto	u5340
  5238   002F56                     u5341:
  5239   002F56  EFB0  F017         	goto	l5249
  5240   002F5A                     u5340:
  5241   002F5A  90D8               	bcf	status,0,c
  5242   002F5C  EFB1  F017         	goto	l779
  5243   002F60                     l5249:
  5244   002F60  80D8               	bsf	status,0,c
  5245   002F62                     l779:
  5246   002F62  0012               	return		;funcret
  5247   002F64                     __end_of___fleq:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function _spi_s_init *****************
  5251 ;; Defined at:
  5252 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		None
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; Hardware stack levels required when called: 4
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_main
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text20
  5281   00374A                     __ptext20:
  5282                           	callstack 0
  5283   00374A                     _spi_s_init:
  5284                           	callstack 26
  5285   00374A                     
  5286                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
  5287   00374A  9294               	bcf	148,1,c	;volatile
  5288                           
  5289                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
  5290   00374C  9493               	bcf	147,2,c	;volatile
  5291                           
  5292                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
  5293   00374E  9494               	bcf	148,2,c	;volatile
  5294                           
  5295                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
  5296   003750  8693               	bsf	147,3,c	;volatile
  5297                           
  5298                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
  5299   003752  9293               	bcf	147,1,c	;volatile
  5300                           
  5301                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
  5302   003754  8094               	bsf	148,0,c	;volatile
  5303                           
  5304                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
  5305   003756  948A               	bcf	138,2,c	;volatile
  5306                           
  5307                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
  5308   003758  948B               	bcf	139,2,c	;volatile
  5309                           
  5310                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
  5311   00375A  928B               	bcf	139,1,c	;volatile
  5312                           
  5313                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
  5314   00375C  928A               	bcf	138,1,c	;volatile
  5315   00375E  0012               	return		;funcret
  5316   003760                     __end_of_spi_s_init:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _recibido_1 *****************
  5320 ;; Defined at:
  5321 ;;		line 329 in file "main.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5339 ;;Total ram usage:        0 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 8
  5342 ;; This function calls:
  5343 ;;		_nrf2401_haydatos
  5344 ;;		_nrf2401_recibe
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text21
  5351   0031F8                     __ptext21:
  5352                           	callstack 0
  5353   0031F8                     _recibido_1:
  5354                           	callstack 22
  5355   0031F8                     
  5356                           ;main.c: 331:     if(nrf2401_haydatos() == 1)
  5357   0031F8  EC52  F01B         	call	_nrf2401_haydatos	;wreg free
  5358   0031FC  06E8               	decf	wreg,f,c
  5359   0031FE  A4D8               	btfss	status,2,c
  5360   003200  EF04  F019         	goto	u6431
  5361   003204  EF06  F019         	goto	u6430
  5362   003208                     u6431:
  5363   003208  EF20  F019         	goto	l517
  5364   00320C                     u6430:
  5365   00320C                     
  5366                           ;main.c: 332:     {;main.c: 333:         dato_serial = nrf2401_recibe();
  5367   00320C  EC8C  F01B         	call	_nrf2401_recibe	;wreg free
  5368   003210  0100               	movlb	0	; () banked
  5369   003212  6FFF               	movwf	_dato_serial& (0+255),b
  5370   003214                     
  5371                           ; BSR set to: 0
  5372                           ;main.c: 334:         if (dato_serial == letra1) LATA5 = 1;
  5373   003214  0E61               	movlw	97
  5374   003216  19FF               	xorwf	_dato_serial& (0+255),w,b
  5375   003218  A4D8               	btfss	status,2,c
  5376   00321A  EF11  F019         	goto	u6441
  5377   00321E  EF13  F019         	goto	u6440
  5378   003222                     u6441:
  5379   003222  EF16  F019         	goto	l6097
  5380   003226                     u6440:
  5381   003226                     
  5382                           ; BSR set to: 0
  5383   003226  8A89               	bsf	3977,5,c	;volatile
  5384   003228  EF20  F019         	goto	l517
  5385   00322C                     l6097:
  5386                           
  5387                           ; BSR set to: 0
  5388   00322C  0E62               	movlw	98
  5389   00322E  19FF               	xorwf	_dato_serial& (0+255),w,b
  5390   003230  A4D8               	btfss	status,2,c
  5391   003232  EF1D  F019         	goto	u6451
  5392   003236  EF1F  F019         	goto	u6450
  5393   00323A                     u6451:
  5394   00323A  EF20  F019         	goto	l517
  5395   00323E                     u6450:
  5396   00323E                     
  5397                           ; BSR set to: 0
  5398   00323E  9A89               	bcf	3977,5,c	;volatile
  5399   003240                     l517:
  5400   003240  0012               	return		;funcret
  5401   003242                     __end_of_recibido_1:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _nrf2401_recibe *****************
  5405 ;; Defined at:
  5406 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  valor_          1    6[COMRAM] unsigned char 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      unsigned char 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0
  5421 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5423 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5424 ;;Total ram usage:        1 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 5
  5427 ;; This function calls:
  5428 ;;		_spi_s_read
  5429 ;;		_spi_s_write
  5430 ;; This function is called by:
  5431 ;;		_recibido_1
  5432 ;;		_nrf2401_recibe_Text
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text22
  5437   003718                     __ptext22:
  5438                           	callstack 0
  5439   003718                     _nrf2401_recibe:
  5440                           	callstack 24
  5441   003718                     
  5442                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
  5443   003718  948B               	bcf	139,2,c	;volatile
  5444   00371A                     
  5445                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
  5446   00371A  0E61               	movlw	97
  5447   00371C  EC21  F019         	call	_spi_s_write
  5448                           
  5449                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
  5450   003720  EC69  F019         	call	_spi_s_read	;wreg free
  5451   003724  6E07               	movwf	nrf2401_recibe@valor_^0,c
  5452   003726                     
  5453                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
  5454   003726  848B               	bsf	139,2,c	;volatile
  5455   003728                     
  5456                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5457   003728  0E14               	movlw	20
  5458   00372A                     u6567:
  5459   00372A  2EE8               	decfsz	wreg,f,c
  5460   00372C  D7FE               	bra	u6567
  5461   00372E                     
  5462                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
  5463   00372E  5007               	movf	nrf2401_recibe@valor_^0,w,c
  5464   003730  0012               	return		;funcret
  5465   003732                     __end_of_nrf2401_recibe:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function _nrf2401_haydatos *****************
  5469 ;; Defined at:
  5470 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      unsigned char 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5487 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5488 ;;Total ram usage:        0 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; Hardware stack levels required when called: 7
  5491 ;; This function calls:
  5492 ;;		_get_Status
  5493 ;; This function is called by:
  5494 ;;		_recibido_1
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text23
  5499   0036A4                     __ptext23:
  5500                           	callstack 0
  5501   0036A4                     _nrf2401_haydatos:
  5502                           	callstack 22
  5503   0036A4                     
  5504                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
  5505   0036A4  ECF6  F01B         	call	_get_Status	;wreg free
  5506   0036A8  0A40               	xorlw	64
  5507   0036AA  A4D8               	btfss	status,2,c
  5508   0036AC  EF5A  F01B         	goto	u6101
  5509   0036B0  EF5C  F01B         	goto	u6100
  5510   0036B4                     u6101:
  5511   0036B4  EF5F  F01B         	goto	l5847
  5512   0036B8                     u6100:
  5513   0036B8  0E01               	movlw	1
  5514   0036BA  EF60  F01B         	goto	l411
  5515   0036BE                     l5847:
  5516   0036BE  0E00               	movlw	0
  5517   0036C0                     l411:
  5518   0036C0  0012               	return		;funcret
  5519   0036C2                     __end_of_nrf2401_haydatos:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _get_Status *****************
  5523 ;; Defined at:
  5524 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      unsigned char 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0, cstack
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5541 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 6
  5545 ;; This function calls:
  5546 ;;		_nrf2401_read
  5547 ;; This function is called by:
  5548 ;;		_nrf2401_haydatos
  5549 ;;		_nrf2401_recibe_Text
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text24
  5554   0037EC                     __ptext24:
  5555                           	callstack 0
  5556   0037EC                     _get_Status:
  5557                           	callstack 22
  5558   0037EC                     
  5559                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
  5560   0037EC  0E07               	movlw	7
  5561   0037EE  EC70  F01B         	call	_nrf2401_read
  5562   0037F2  0012               	return		;funcret
  5563   0037F4                     __end_of_get_Status:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _nrf2401_read *****************
  5567 ;; Defined at:
  5568 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  reg             1    wreg     unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  reg             1    6[COMRAM] unsigned char 
  5573 ;;  dato_           1    7[COMRAM] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      unsigned char 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0
  5584 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5586 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5587 ;;Total ram usage:        2 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 5
  5590 ;; This function calls:
  5591 ;;		_spi_s_read
  5592 ;;		_spi_s_write
  5593 ;; This function is called by:
  5594 ;;		_get_Status
  5595 ;;		_get_fifo_status
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text25
  5600   0036E0                     __ptext25:
  5601                           	callstack 0
  5602   0036E0                     _nrf2401_read:
  5603                           	callstack 22
  5604                           
  5605                           ;incstack = 0
  5606                           ;nrf2401_read@reg stored from wreg
  5607   0036E0  6E07               	movwf	nrf2401_read@reg^0,c
  5608   0036E2                     
  5609                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
  5610   0036E2  948B               	bcf	139,2,c	;volatile
  5611   0036E4                     
  5612                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
  5613   0036E4  5007               	movf	nrf2401_read@reg^0,w,c
  5614   0036E6  EC21  F019         	call	_spi_s_write
  5615   0036EA                     
  5616                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
  5617   0036EA  EC69  F019         	call	_spi_s_read	;wreg free
  5618   0036EE  6E08               	movwf	nrf2401_read@dato_^0,c
  5619   0036F0                     
  5620                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
  5621   0036F0  848B               	bsf	139,2,c	;volatile
  5622   0036F2                     
  5623                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5624   0036F2  0E14               	movlw	20
  5625   0036F4                     u6577:
  5626   0036F4  2EE8               	decfsz	wreg,f,c
  5627   0036F6  D7FE               	bra	u6577
  5628                           
  5629                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
  5630   0036F8  5008               	movf	nrf2401_read@dato_^0,w,c
  5631   0036FA  0012               	return		;funcret
  5632   0036FC                     __end_of_nrf2401_read:
  5633                           	callstack 0
  5634                           
  5635 ;; *************** function _spi_s_read *****************
  5636 ;; Defined at:
  5637 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  cont_s          1    5[COMRAM] unsigned char 
  5642 ;;  dato_           1    4[COMRAM] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      unsigned char 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0
  5653 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5655 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5656 ;;Total ram usage:        2 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 4
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_nrf2401_read
  5663 ;;		_nrf2401_recibe
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text26
  5668   0032D2                     __ptext26:
  5669                           	callstack 0
  5670   0032D2                     _spi_s_read:
  5671                           	callstack 24
  5672   0032D2                     
  5673                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
  5674   0032D2  0E00               	movlw	0
  5675   0032D4  6E06               	movwf	spi_s_read@cont_s^0,c
  5676                           
  5677                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
  5678   0032D6  0E00               	movlw	0
  5679   0032D8  6E05               	movwf	spi_s_read@dato_^0,c
  5680                           
  5681                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
  5682   0032DA  0E00               	movlw	0
  5683   0032DC  6E06               	movwf	spi_s_read@cont_s^0,c
  5684   0032DE                     l4913:
  5685                           
  5686                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
  5687   0032DE  90D8               	bcf	status,0,c
  5688   0032E0  3605               	rlcf	spi_s_read@dato_^0,f,c
  5689   0032E2                     
  5690                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
  5691   0032E2  848A               	bsf	138,2,c	;volatile
  5692   0032E4                     
  5693                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  5694   0032E4  0E04               	movlw	4
  5695   0032E6                     u6587:
  5696   0032E6  2EE8               	decfsz	wreg,f,c
  5697   0032E8  D7FE               	bra	u6587
  5698   0032EA                     
  5699                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
  5700   0032EA  A681               	btfss	129,3,c	;volatile
  5701   0032EC  EF7A  F019         	goto	u4861
  5702   0032F0  EF7C  F019         	goto	u4860
  5703   0032F4                     u4861:
  5704   0032F4  EF7D  F019         	goto	l4923
  5705   0032F8                     u4860:
  5706   0032F8                     
  5707                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
  5708   0032F8  8005               	bsf	spi_s_read@dato_^0,0,c
  5709   0032FA                     l4923:
  5710                           
  5711                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
  5712   0032FA  948A               	bcf	138,2,c	;volatile
  5713   0032FC                     
  5714                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  5715   0032FC  0E04               	movlw	4
  5716   0032FE                     u6597:
  5717   0032FE  2EE8               	decfsz	wreg,f,c
  5718   003300  D7FE               	bra	u6597
  5719   003302                     
  5720                           ;./Librerias/nRF24L01_2.h: 57:     }
  5721   003302  2A06               	incf	spi_s_read@cont_s^0,f,c
  5722   003304  0E07               	movlw	7
  5723   003306  6406               	cpfsgt	spi_s_read@cont_s^0,c
  5724   003308  EF88  F019         	goto	u4871
  5725   00330C  EF8A  F019         	goto	u4870
  5726   003310                     u4871:
  5727   003310  EF6F  F019         	goto	l4913
  5728   003314                     u4870:
  5729   003314                     
  5730                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
  5731   003314  5005               	movf	spi_s_read@dato_^0,w,c
  5732   003316  0012               	return		;funcret
  5733   003318                     __end_of_spi_s_read:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function _nrF2401_init_RX *****************
  5737 ;; Defined at:
  5738 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  canal           1    wreg     unsigned char 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  canal           1   10[COMRAM] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0
  5753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5755 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5756 ;;Total ram usage:        1 bytes
  5757 ;; Hardware stack levels used: 1
  5758 ;; Hardware stack levels required when called: 7
  5759 ;; This function calls:
  5760 ;;		_flush_TX_RX
  5761 ;;		_nrf2401_direccion_TX_RX
  5762 ;;		_nrf2401_write
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text27
  5769   00300A                     __ptext27:
  5770                           	callstack 0
  5771   00300A                     _nrF2401_init_RX:
  5772                           	callstack 23
  5773                           
  5774                           ;incstack = 0
  5775                           ;nrF2401_init_RX@canal stored from wreg
  5776   00300A  6E0B               	movwf	nrF2401_init_RX@canal^0,c
  5777   00300C                     
  5778                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
  5779   00300C  928A               	bcf	138,1,c	;volatile
  5780   00300E                     
  5781                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
  5782   00300E  0E0C               	movlw	12
  5783   003010  6E07               	movwf	nrf2401_write@valor^0,c
  5784   003012  0E00               	movlw	0
  5785   003014  EC7E  F01B         	call	_nrf2401_write
  5786                           
  5787                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
  5788   003018  0E00               	movlw	0
  5789   00301A  6E07               	movwf	nrf2401_write@valor^0,c
  5790   00301C  0E04               	movlw	4
  5791   00301E  EC7E  F01B         	call	_nrf2401_write
  5792                           
  5793                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
  5794   003022  0E03               	movlw	3
  5795   003024  6E07               	movwf	nrf2401_write@valor^0,c
  5796   003026  0E03               	movlw	3
  5797   003028  EC7E  F01B         	call	_nrf2401_write
  5798                           
  5799                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x10 + 0x06);
  5800   00302C  0E16               	movlw	22
  5801   00302E  6E07               	movwf	nrf2401_write@valor^0,c
  5802   003030  0E06               	movlw	6
  5803   003032  EC7E  F01B         	call	_nrf2401_write
  5804                           
  5805                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
  5806   003036  C00B  F007         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
  5807   00303A  0E05               	movlw	5
  5808   00303C  EC7E  F01B         	call	_nrf2401_write
  5809                           
  5810                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
  5811   003040  0E00               	movlw	0
  5812   003042  6E07               	movwf	nrf2401_write@valor^0,c
  5813   003044  0E01               	movlw	1
  5814   003046  EC7E  F01B         	call	_nrf2401_write
  5815                           
  5816                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
  5817   00304A  0E01               	movlw	1
  5818   00304C  6E07               	movwf	nrf2401_write@valor^0,c
  5819   00304E  0E11               	movlw	17
  5820   003050  EC7E  F01B         	call	_nrf2401_write
  5821                           
  5822                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
  5823   003054  0E0F               	movlw	15
  5824   003056  6E07               	movwf	nrf2401_write@valor^0,c
  5825   003058  0E00               	movlw	0
  5826   00305A  EC7E  F01B         	call	_nrf2401_write
  5827   00305E                     
  5828                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
  5829   00305E  0E0A               	movlw	low _direccion_tx
  5830   003060  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  5831   003062  0E10               	movlw	16
  5832   003064  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  5833   003066  EC10  F01A         	call	_nrf2401_direccion_TX_RX	;wreg free
  5834   00306A                     
  5835                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
  5836   00306A  0E0A               	movlw	low _direccion_tx
  5837   00306C  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  5838   00306E  0E0A               	movlw	10
  5839   003070  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  5840   003072  EC10  F01A         	call	_nrf2401_direccion_TX_RX	;wreg free
  5841                           
  5842                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
  5843   003076  EC99  F01B         	call	_flush_TX_RX	;wreg free
  5844   00307A                     
  5845                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
  5846   00307A  828A               	bsf	138,1,c	;volatile
  5847   00307C  0012               	return		;funcret
  5848   00307E                     __end_of_nrF2401_init_RX:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _nrf2401_direccion_TX_RX *****************
  5852 ;; Defined at:
  5853 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  direccion_      1    6[COMRAM] PTR const unsigned char 
  5856 ;;		 -> direccion_tx(5), 
  5857 ;;  registro        1    7[COMRAM] unsigned char 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  cont_s          1    9[COMRAM] unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      void 
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5869 ;;      Params:         2       0       0       0       0       0       0       0       0
  5870 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5871 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5872 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5873 ;;Total ram usage:        4 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 5
  5876 ;; This function calls:
  5877 ;;		_spi_s_write
  5878 ;; This function is called by:
  5879 ;;		_nrF2401_init_RX
  5880 ;;		_nrF2401_init_TX
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text28
  5885   003420                     __ptext28:
  5886                           	callstack 0
  5887   003420                     _nrf2401_direccion_TX_RX:
  5888                           	callstack 24
  5889   003420                     
  5890                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
  5891   003420  948B               	bcf	139,2,c	;volatile
  5892   003422                     
  5893                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
  5894   003422  5008               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
  5895   003424  0920               	iorlw	32
  5896   003426  EC21  F019         	call	_spi_s_write
  5897   00342A                     
  5898                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
  5899   00342A  0E00               	movlw	0
  5900   00342C  6E0A               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
  5901   00342E                     l5815:
  5902                           
  5903                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
  5904   00342E  5007               	movf	nrf2401_direccion_TX_RX@direccion_^0,w,c
  5905   003430  240A               	addwf	nrf2401_direccion_TX_RX@cont_s^0,w,c
  5906   003432  6E09               	movwf	??_nrf2401_direccion_TX_RX^0,c
  5907   003434  C009  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
  5908   003438                     	if	1	;There is more than 1 active tblptr byte
  5909   003438  0E08               	movlw	high __smallconst
  5910   00343A  6EF7               	movwf	tblptrh,c
  5911   00343C                     	endif
  5912   00343C                     	if	0	;tblptru may be non-zero
  5913   00343C                     	endif
  5914   00343C                     	if	0	;tblptru may be non-zero
  5915   00343C                     	endif
  5916   00343C  0008               	tblrd		*
  5917   00343E  50F5               	movf	tablat,w,c
  5918   003440  EC21  F019         	call	_spi_s_write
  5919   003444                     
  5920                           ;./Librerias/nRF24L01_2.h: 120:     }
  5921   003444  2A0A               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
  5922   003446  0E04               	movlw	4
  5923   003448  640A               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
  5924   00344A  EF29  F01A         	goto	u6091
  5925   00344E  EF2B  F01A         	goto	u6090
  5926   003452                     u6091:
  5927   003452  EF17  F01A         	goto	l5815
  5928   003456                     u6090:
  5929   003456                     
  5930                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
  5931   003456  848B               	bsf	139,2,c	;volatile
  5932   003458                     
  5933                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5934   003458  0E14               	movlw	20
  5935   00345A                     u6607:
  5936   00345A  2EE8               	decfsz	wreg,f,c
  5937   00345C  D7FE               	bra	u6607
  5938   00345E  0012               	return		;funcret
  5939   003460                     __end_of_nrf2401_direccion_TX_RX:
  5940                           	callstack 0
  5941                           
  5942 ;; *************** function _flush_TX_RX *****************
  5943 ;; Defined at:
  5944 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5958 ;;      Params:         0       0       0       0       0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 6
  5965 ;; This function calls:
  5966 ;;		_nrf2401_comando
  5967 ;;		_nrf2401_write
  5968 ;; This function is called by:
  5969 ;;		_nrF2401_init_RX
  5970 ;;		_nrF2401_init_TX
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text29
  5975   003732                     __ptext29:
  5976                           	callstack 0
  5977   003732                     _flush_TX_RX:
  5978                           	callstack 23
  5979   003732                     
  5980                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
  5981   003732  0E70               	movlw	112
  5982   003734  6E07               	movwf	nrf2401_write@valor^0,c
  5983   003736  0E07               	movlw	7
  5984   003738  EC7E  F01B         	call	_nrf2401_write
  5985                           
  5986                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
  5987   00373C  0EE1               	movlw	225
  5988   00373E  ECC6  F01B         	call	_nrf2401_comando
  5989                           
  5990                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
  5991   003742  0EE2               	movlw	226
  5992   003744  ECC6  F01B         	call	_nrf2401_comando
  5993   003748  0012               	return		;funcret
  5994   00374A                     __end_of_flush_TX_RX:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _nrf2401_write *****************
  5998 ;; Defined at:
  5999 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  reg             1    wreg     unsigned char 
  6002 ;;  valor           1    6[COMRAM] unsigned char 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  reg             1    7[COMRAM] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0, cstack
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6014 ;;      Params:         1       0       0       0       0       0       0       0       0
  6015 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6017 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6018 ;;Total ram usage:        2 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; Hardware stack levels required when called: 5
  6021 ;; This function calls:
  6022 ;;		_spi_s_write
  6023 ;; This function is called by:
  6024 ;;		_flush_TX_RX
  6025 ;;		_nrF2401_init_RX
  6026 ;;		_flush_RX
  6027 ;;		_flush_TX
  6028 ;;		_nrf2401_envia
  6029 ;;		_nrF2401_init_TX
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text30
  6034   0036FC                     __ptext30:
  6035                           	callstack 0
  6036   0036FC                     _nrf2401_write:
  6037                           	callstack 24
  6038                           
  6039                           ;incstack = 0
  6040                           ;nrf2401_write@reg stored from wreg
  6041   0036FC  6E08               	movwf	nrf2401_write@reg^0,c
  6042   0036FE                     
  6043                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
  6044   0036FE  948B               	bcf	139,2,c	;volatile
  6045   003700                     
  6046                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
  6047   003700  5008               	movf	nrf2401_write@reg^0,w,c
  6048   003702  0920               	iorlw	32
  6049   003704  EC21  F019         	call	_spi_s_write
  6050                           
  6051                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
  6052   003708  5007               	movf	nrf2401_write@valor^0,w,c
  6053   00370A  EC21  F019         	call	_spi_s_write
  6054   00370E                     
  6055                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
  6056   00370E  848B               	bsf	139,2,c	;volatile
  6057   003710                     
  6058                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  6059   003710  0E14               	movlw	20
  6060   003712                     u6617:
  6061   003712  2EE8               	decfsz	wreg,f,c
  6062   003714  D7FE               	bra	u6617
  6063   003716  0012               	return		;funcret
  6064   003718                     __end_of_nrf2401_write:
  6065                           	callstack 0
  6066                           
  6067 ;; *************** function _nrf2401_comando *****************
  6068 ;; Defined at:
  6069 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  comando         1    wreg     unsigned char 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  comando         1    6[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6086 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6087 ;;Total ram usage:        1 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 5
  6090 ;; This function calls:
  6091 ;;		_spi_s_write
  6092 ;; This function is called by:
  6093 ;;		_flush_TX_RX
  6094 ;;		_flush_RX
  6095 ;;		_flush_TX
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text31
  6100   00378C                     __ptext31:
  6101                           	callstack 0
  6102   00378C                     _nrf2401_comando:
  6103                           	callstack 23
  6104                           
  6105                           ;incstack = 0
  6106                           ;nrf2401_comando@comando stored from wreg
  6107   00378C  6E07               	movwf	nrf2401_comando@comando^0,c
  6108   00378E                     
  6109                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  6110   00378E  948B               	bcf	139,2,c	;volatile
  6111   003790                     
  6112                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  6113   003790  5007               	movf	nrf2401_comando@comando^0,w,c
  6114   003792  EC21  F019         	call	_spi_s_write
  6115   003796                     
  6116                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  6117   003796  848B               	bsf	139,2,c	;volatile
  6118   003798                     
  6119                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  6120   003798  0E14               	movlw	20
  6121   00379A                     u6627:
  6122   00379A  2EE8               	decfsz	wreg,f,c
  6123   00379C  D7FE               	bra	u6627
  6124   00379E  0012               	return		;funcret
  6125   0037A0                     __end_of_nrf2401_comando:
  6126                           	callstack 0
  6127                           
  6128 ;; *************** function _spi_s_write *****************
  6129 ;; Defined at:
  6130 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  dato_           1    wreg     unsigned char 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  dato_           1    4[COMRAM] unsigned char 
  6135 ;;  cont_s          1    5[COMRAM] unsigned char 
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6145 ;;      Params:         0       0       0       0       0       0       0       0       0
  6146 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6148 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6149 ;;Total ram usage:        2 bytes
  6150 ;; Hardware stack levels used: 1
  6151 ;; Hardware stack levels required when called: 4
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_nrf2401_write
  6156 ;;		_nrf2401_comando
  6157 ;;		_nrf2401_read
  6158 ;;		_nrf2401_direccion_TX_RX
  6159 ;;		_nrf2401_recibe
  6160 ;;		_nrf2401_envia
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text32
  6165   003242                     __ptext32:
  6166                           	callstack 0
  6167   003242                     _spi_s_write:
  6168                           	callstack 24
  6169                           
  6170                           ;incstack = 0
  6171                           ;spi_s_write@dato_ stored from wreg
  6172   003242  6E05               	movwf	spi_s_write@dato_^0,c
  6173   003244                     
  6174                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  6175   003244  0E00               	movlw	0
  6176   003246  6E06               	movwf	spi_s_write@cont_s^0,c
  6177                           
  6178                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  6179   003248  0E00               	movlw	0
  6180   00324A  6E06               	movwf	spi_s_write@cont_s^0,c
  6181   00324C                     l356:
  6182                           
  6183                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  6184   00324C  AE05               	btfss	spi_s_write@dato_^0,7,c
  6185   00324E  EF2B  F019         	goto	u4881
  6186   003252  EF2D  F019         	goto	u4880
  6187   003256                     u4881:
  6188   003256  EF30  F019         	goto	l358
  6189   00325A                     u4880:
  6190   00325A  828B               	bsf	139,1,c	;volatile
  6191   00325C  EF31  F019         	goto	l4943
  6192   003260                     l358:
  6193   003260  928B               	bcf	139,1,c	;volatile
  6194   003262                     l4943:
  6195                           
  6196                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  6197   003262  90D8               	bcf	status,0,c
  6198   003264  3605               	rlcf	spi_s_write@dato_^0,f,c
  6199   003266                     
  6200                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  6201   003266  848A               	bsf	138,2,c	;volatile
  6202   003268                     
  6203                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  6204   003268  0E14               	movlw	20
  6205   00326A                     u6637:
  6206   00326A  2EE8               	decfsz	wreg,f,c
  6207   00326C  D7FE               	bra	u6637
  6208   00326E                     
  6209                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  6210   00326E  948A               	bcf	138,2,c	;volatile
  6211   003270                     
  6212                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  6213   003270  0E14               	movlw	20
  6214   003272                     u6647:
  6215   003272  2EE8               	decfsz	wreg,f,c
  6216   003274  D7FE               	bra	u6647
  6217   003276                     
  6218                           ;./Librerias/nRF24L01_2.h: 76:     }
  6219   003276  2A06               	incf	spi_s_write@cont_s^0,f,c
  6220   003278  0E07               	movlw	7
  6221   00327A  6406               	cpfsgt	spi_s_write@cont_s^0,c
  6222   00327C  EF42  F019         	goto	u4891
  6223   003280  EF44  F019         	goto	u4890
  6224   003284                     u4891:
  6225   003284  EF26  F019         	goto	l356
  6226   003288                     u4890:
  6227   003288  0012               	return		;funcret
  6228   00328A                     __end_of_spi_s_write:
  6229                           	callstack 0
  6230                           
  6231 ;; *************** function _get_corriente_AC *****************
  6232 ;; Defined at:
  6233 ;;		line 138 in file "main.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  n_muestras      2   76[COMRAM] int 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  i               2    0[BANK0 ] int 
  6238 ;;  corriente       4    2[BANK0 ] int 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  4   76[COMRAM] int 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6248 ;;      Params:         4       0       0       0       0       0       0       0       0
  6249 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6250 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6251 ;;      Totals:         5       6       0       0       0       0       0       0       0
  6252 ;;Total ram usage:       11 bytes
  6253 ;; Hardware stack levels used: 1
  6254 ;; Hardware stack levels required when called: 6
  6255 ;; This function calls:
  6256 ;;		_ADC_GetConversion
  6257 ;;		___fladd
  6258 ;;		___fldiv
  6259 ;;		___flge
  6260 ;;		___flmul
  6261 ;;		___flsub
  6262 ;;		___xxtofl
  6263 ;; This function is called by:
  6264 ;;		_main
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text33
  6269   00261A                     __ptext33:
  6270                           	callstack 0
  6271   00261A                     _get_corriente_AC:
  6272                           	callstack 24
  6273   00261A                     
  6274                           ;main.c: 141:   I_max = 0.0;
  6275   00261A  0E00               	movlw	0
  6276   00261C  0100               	movlb	0	; () banked
  6277   00261E  6FCF               	movwf	_I_max& (0+255),b
  6278   002620  0E00               	movlw	0
  6279   002622  6FD0               	movwf	(_I_max+1)& (0+255),b
  6280   002624  0E00               	movlw	0
  6281   002626  6FD1               	movwf	(_I_max+2)& (0+255),b
  6282   002628  0E00               	movlw	0
  6283   00262A  6FD2               	movwf	(_I_max+3)& (0+255),b
  6284                           
  6285                           ;main.c: 142:   I_min = 0.0;
  6286   00262C  0E00               	movlw	0
  6287   00262E  6FCB               	movwf	_I_min& (0+255),b
  6288   002630  0E00               	movlw	0
  6289   002632  6FCC               	movwf	(_I_min+1)& (0+255),b
  6290   002634  0E00               	movlw	0
  6291   002636  6FCD               	movwf	(_I_min+2)& (0+255),b
  6292   002638  0E00               	movlw	0
  6293   00263A  6FCE               	movwf	(_I_min+3)& (0+255),b
  6294                           
  6295                           ;main.c: 143:   for(int i = 0; i < n_muestras; i++)
  6296   00263C  0E00               	movlw	0
  6297   00263E  6F61               	movwf	(get_corriente_AC@i+1)& (0+255),b
  6298   002640  0E00               	movlw	0
  6299   002642  6F60               	movwf	get_corriente_AC@i& (0+255),b
  6300   002644  EFBF  F013         	goto	l5993
  6301   002648                     l5977:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;main.c: 144:   {;main.c: 145:       valor = ADC_GetConversion(0);
  6305   002648  0E00               	movlw	0
  6306   00264A  EC6D  F01A         	call	_ADC_GetConversion
  6307   00264E  C005  F0E7         	movff	?_ADC_GetConversion,_valor
  6308   002652  C006  F0E8         	movff	?_ADC_GetConversion+1,_valor+1
  6309   002656                     
  6310                           ;main.c: 146:       voltaje = valor * (5.0 / 1023.0);
  6311   002656  C0E7  F005         	movff	_valor,___xxtofl@val
  6312   00265A  C0E8  F006         	movff	_valor+1,___xxtofl@val+1
  6313   00265E  6A07               	clrf	(___xxtofl@val+2)^0,c
  6314   002660  6A08               	clrf	(___xxtofl@val+3)^0,c
  6315   002662  0E00               	movlw	0
  6316   002664  ECFB  F013         	call	___xxtofl
  6317   002668  C005  F013         	movff	?___xxtofl,___flmul@b
  6318   00266C  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  6319   002670  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  6320   002674  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  6321   002678  0E0A               	movlw	10
  6322   00267A  6E17               	movwf	___flmul@a^0,c
  6323   00267C  0E28               	movlw	40
  6324   00267E  6E18               	movwf	(___flmul@a+1)^0,c
  6325   002680  0EA0               	movlw	160
  6326   002682  6E19               	movwf	(___flmul@a+2)^0,c
  6327   002684  0E3B               	movlw	59
  6328   002686  6E1A               	movwf	(___flmul@a+3)^0,c
  6329   002688  EC66  F00B         	call	___flmul	;wreg free
  6330   00268C  C013  F0D3         	movff	?___flmul,_voltaje
  6331   002690  C014  F0D4         	movff	?___flmul+1,_voltaje+1
  6332   002694  C015  F0D5         	movff	?___flmul+2,_voltaje+2
  6333   002698  C016  F0D6         	movff	?___flmul+3,_voltaje+3
  6334   00269C                     
  6335                           ;main.c: 147:       corriente = ((voltaje - 2.527) / sensibilidad);
  6336   00269C  0E5E               	movlw	94
  6337   00269E  6E09               	movwf	___fladd@a^0,c
  6338   0026A0  0EBA               	movlw	186
  6339   0026A2  6E0A               	movwf	(___fladd@a+1)^0,c
  6340   0026A4  0E21               	movlw	33
  6341   0026A6  6E0B               	movwf	(___fladd@a+2)^0,c
  6342   0026A8  0EC0               	movlw	192
  6343   0026AA  6E0C               	movwf	(___fladd@a+3)^0,c
  6344   0026AC  C0D3  F005         	movff	_voltaje,___fladd@b
  6345   0026B0  C0D4  F006         	movff	_voltaje+1,___fladd@b+1
  6346   0026B4  C0D5  F007         	movff	_voltaje+2,___fladd@b+2
  6347   0026B8  C0D6  F008         	movff	_voltaje+3,___fladd@b+3
  6348   0026BC  EC06  F009         	call	___fladd	;wreg free
  6349   0026C0  C005  F034         	movff	?___fladd,___fldiv@b
  6350   0026C4  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  6351   0026C8  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  6352   0026CC  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  6353   0026D0  0E4E               	movlw	78
  6354   0026D2  6E38               	movwf	___fldiv@a^0,c
  6355   0026D4  0E62               	movlw	98
  6356   0026D6  6E39               	movwf	(___fldiv@a+1)^0,c
  6357   0026D8  0E90               	movlw	144
  6358   0026DA  6E3A               	movwf	(___fldiv@a+2)^0,c
  6359   0026DC  0E3E               	movlw	62
  6360   0026DE  6E3B               	movwf	(___fldiv@a+3)^0,c
  6361   0026E0  EC7B  F00D         	call	___fldiv	;wreg free
  6362   0026E4  C034  F062         	movff	?___fldiv,get_corriente_AC@corriente
  6363   0026E8  C035  F063         	movff	?___fldiv+1,get_corriente_AC@corriente+1
  6364   0026EC  C036  F064         	movff	?___fldiv+2,get_corriente_AC@corriente+2
  6365   0026F0  C037  F065         	movff	?___fldiv+3,get_corriente_AC@corriente+3
  6366   0026F4                     
  6367                           ;main.c: 148:       if (corriente > I_max) I_max = corriente;
  6368   0026F4  C0CF  F02C         	movff	_I_max,___flge@ff1
  6369   0026F8  C0D0  F02D         	movff	_I_max+1,___flge@ff1+1
  6370   0026FC  C0D1  F02E         	movff	_I_max+2,___flge@ff1+2
  6371   002700  C0D2  F02F         	movff	_I_max+3,___flge@ff1+3
  6372   002704  C062  F030         	movff	get_corriente_AC@corriente,___flge@ff2
  6373   002708  C063  F031         	movff	get_corriente_AC@corriente+1,___flge@ff2+1
  6374   00270C  C064  F032         	movff	get_corriente_AC@corriente+2,___flge@ff2+2
  6375   002710  C065  F033         	movff	get_corriente_AC@corriente+3,___flge@ff2+3
  6376   002714  ECFF  F015         	call	___flge	;wreg free
  6377   002718  B0D8               	btfsc	status,0,c
  6378   00271A  EF91  F013         	goto	u6251
  6379   00271E  EF93  F013         	goto	u6250
  6380   002722                     u6251:
  6381   002722  EF9B  F013         	goto	l5987
  6382   002726                     u6250:
  6383   002726  C062  F0CF         	movff	get_corriente_AC@corriente,_I_max
  6384   00272A  C063  F0D0         	movff	get_corriente_AC@corriente+1,_I_max+1
  6385   00272E  C064  F0D1         	movff	get_corriente_AC@corriente+2,_I_max+2
  6386   002732  C065  F0D2         	movff	get_corriente_AC@corriente+3,_I_max+3
  6387   002736                     l5987:
  6388                           
  6389                           ;main.c: 149:       if (corriente < I_min) I_min = corriente;
  6390   002736  C062  F02C         	movff	get_corriente_AC@corriente,___flge@ff1
  6391   00273A  C063  F02D         	movff	get_corriente_AC@corriente+1,___flge@ff1+1
  6392   00273E  C064  F02E         	movff	get_corriente_AC@corriente+2,___flge@ff1+2
  6393   002742  C065  F02F         	movff	get_corriente_AC@corriente+3,___flge@ff1+3
  6394   002746  C0CB  F030         	movff	_I_min,___flge@ff2
  6395   00274A  C0CC  F031         	movff	_I_min+1,___flge@ff2+1
  6396   00274E  C0CD  F032         	movff	_I_min+2,___flge@ff2+2
  6397   002752  C0CE  F033         	movff	_I_min+3,___flge@ff2+3
  6398   002756  ECFF  F015         	call	___flge	;wreg free
  6399   00275A  B0D8               	btfsc	status,0,c
  6400   00275C  EFB2  F013         	goto	u6261
  6401   002760  EFB4  F013         	goto	u6260
  6402   002764                     u6261:
  6403   002764  EFBC  F013         	goto	l5991
  6404   002768                     u6260:
  6405   002768  C062  F0CB         	movff	get_corriente_AC@corriente,_I_min
  6406   00276C  C063  F0CC         	movff	get_corriente_AC@corriente+1,_I_min+1
  6407   002770  C064  F0CD         	movff	get_corriente_AC@corriente+2,_I_min+2
  6408   002774  C065  F0CE         	movff	get_corriente_AC@corriente+3,_I_min+3
  6409   002778                     l5991:
  6410                           
  6411                           ;main.c: 150:   }
  6412   002778  0100               	movlb	0	; () banked
  6413   00277A  4B60               	infsnz	get_corriente_AC@i& (0+255),f,b
  6414   00277C  2B61               	incf	(get_corriente_AC@i+1)& (0+255),f,b
  6415   00277E                     l5993:
  6416                           
  6417                           ; BSR set to: 0
  6418   00277E  504D               	movf	get_corriente_AC@n_muestras^0,w,c
  6419   002780  5D60               	subwf	get_corriente_AC@i& (0+255),w,b
  6420   002782  5161               	movf	(get_corriente_AC@i+1)& (0+255),w,b
  6421   002784  0A80               	xorlw	128
  6422   002786  6E51               	movwf	??_get_corriente_AC^0,c
  6423   002788  504E               	movf	(get_corriente_AC@n_muestras+1)^0,w,c
  6424   00278A  0A80               	xorlw	128
  6425   00278C  5851               	subwfb	??_get_corriente_AC^0,w,c
  6426   00278E  A0D8               	btfss	status,0,c
  6427   002790  EFCC  F013         	goto	u6271
  6428   002794  EFCE  F013         	goto	u6270
  6429   002798                     u6271:
  6430   002798  EF24  F013         	goto	l5977
  6431   00279C                     u6270:
  6432   00279C                     
  6433                           ; BSR set to: 0
  6434                           ;main.c: 153:   return(((I_max - I_min) / 2));
  6435   00279C  C0CB  F030         	movff	_I_min,___flsub@a
  6436   0027A0  C0CC  F031         	movff	_I_min+1,___flsub@a+1
  6437   0027A4  C0CD  F032         	movff	_I_min+2,___flsub@a+2
  6438   0027A8  C0CE  F033         	movff	_I_min+3,___flsub@a+3
  6439   0027AC  C0CF  F02C         	movff	_I_max,___flsub@b
  6440   0027B0  C0D0  F02D         	movff	_I_max+1,___flsub@b+1
  6441   0027B4  C0D1  F02E         	movff	_I_max+2,___flsub@b+2
  6442   0027B8  C0D2  F02F         	movff	_I_max+3,___flsub@b+3
  6443   0027BC  EC8C  F019         	call	___flsub	;wreg free
  6444   0027C0  C02C  F034         	movff	?___flsub,___fldiv@b
  6445   0027C4  C02D  F035         	movff	?___flsub+1,___fldiv@b+1
  6446   0027C8  C02E  F036         	movff	?___flsub+2,___fldiv@b+2
  6447   0027CC  C02F  F037         	movff	?___flsub+3,___fldiv@b+3
  6448   0027D0  0E00               	movlw	0
  6449   0027D2  6E38               	movwf	___fldiv@a^0,c
  6450   0027D4  0E00               	movlw	0
  6451   0027D6  6E39               	movwf	(___fldiv@a+1)^0,c
  6452   0027D8  0E00               	movlw	0
  6453   0027DA  6E3A               	movwf	(___fldiv@a+2)^0,c
  6454   0027DC  0E40               	movlw	64
  6455   0027DE  6E3B               	movwf	(___fldiv@a+3)^0,c
  6456   0027E0  EC7B  F00D         	call	___fldiv	;wreg free
  6457   0027E4  C034  F04D         	movff	?___fldiv,?_get_corriente_AC
  6458   0027E8  C035  F04E         	movff	?___fldiv+1,?_get_corriente_AC+1
  6459   0027EC  C036  F04F         	movff	?___fldiv+2,?_get_corriente_AC+2
  6460   0027F0  C037  F050         	movff	?___fldiv+3,?_get_corriente_AC+3
  6461   0027F4  0012               	return		;funcret
  6462   0027F6                     __end_of_get_corriente_AC:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function ___xxtofl *****************
  6466 ;; Defined at:
  6467 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  sign            1    wreg     unsigned char 
  6470 ;;  val             4    4[COMRAM] long 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  sign            1   12[COMRAM] unsigned char 
  6473 ;;  arg             4   14[COMRAM] unsigned long 
  6474 ;;  exp             1   13[COMRAM] unsigned char 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  4    4[COMRAM] unsigned char 
  6477 ;; Registers used:
  6478 ;;		wreg, status,2, status,0
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6484 ;;      Params:         4       0       0       0       0       0       0       0       0
  6485 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6486 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6487 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6488 ;;Total ram usage:       14 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 4
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_get_corriente_AC
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text34
  6499   0027F6                     __ptext34:
  6500                           	callstack 0
  6501   0027F6                     ___xxtofl:
  6502                           	callstack 25
  6503                           
  6504                           ;incstack = 0
  6505                           ;___xxtofl@sign stored from wreg
  6506   0027F6  6E0D               	movwf	___xxtofl@sign^0,c
  6507   0027F8  500D               	movf	___xxtofl@sign^0,w,c
  6508   0027FA  B4D8               	btfsc	status,2,c
  6509   0027FC  EF02  F014         	goto	u6111
  6510   002800  EF04  F014         	goto	u6110
  6511   002804                     u6111:
  6512   002804  EF26  F014         	goto	l1175
  6513   002808                     u6110:
  6514   002808  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6515   00280A  EF0B  F014         	goto	u6120
  6516   00280E  EF09  F014         	goto	u6121
  6517   002812                     u6121:
  6518   002812  EF26  F014         	goto	l1175
  6519   002816                     u6120:
  6520   002816  C005  F009         	movff	___xxtofl@val,??___xxtofl
  6521   00281A  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  6522   00281E  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  6523   002822  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  6524   002826  1E09               	comf	??___xxtofl^0,f,c
  6525   002828  1E0A               	comf	(??___xxtofl+1)^0,f,c
  6526   00282A  1E0B               	comf	(??___xxtofl+2)^0,f,c
  6527   00282C  1E0C               	comf	(??___xxtofl+3)^0,f,c
  6528   00282E  2A09               	incf	??___xxtofl^0,f,c
  6529   002830  0E00               	movlw	0
  6530   002832  220A               	addwfc	(??___xxtofl+1)^0,f,c
  6531   002834  220B               	addwfc	(??___xxtofl+2)^0,f,c
  6532   002836  220C               	addwfc	(??___xxtofl+3)^0,f,c
  6533   002838  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  6534   00283C  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  6535   002840  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  6536   002844  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  6537   002848  EF2E  F014         	goto	l5857
  6538   00284C                     l1175:
  6539   00284C  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  6540   002850  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6541   002854  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6542   002858  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6543   00285C                     l5857:
  6544   00285C  5005               	movf	___xxtofl@val^0,w,c
  6545   00285E  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  6546   002860  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  6547   002862  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  6548   002864  A4D8               	btfss	status,2,c
  6549   002866  EF37  F014         	goto	u6131
  6550   00286A  EF39  F014         	goto	u6130
  6551   00286E                     u6131:
  6552   00286E  EF43  F014         	goto	l5863
  6553   002872                     u6130:
  6554   002872  0E00               	movlw	0
  6555   002874  6E05               	movwf	?___xxtofl^0,c
  6556   002876  0E00               	movlw	0
  6557   002878  6E06               	movwf	(?___xxtofl+1)^0,c
  6558   00287A  0E00               	movlw	0
  6559   00287C  6E07               	movwf	(?___xxtofl+2)^0,c
  6560   00287E  0E00               	movlw	0
  6561   002880  6E08               	movwf	(?___xxtofl+3)^0,c
  6562   002882  EFD4  F014         	goto	l1178
  6563   002886                     l5863:
  6564   002886  0E96               	movlw	150
  6565   002888  6E0E               	movwf	___xxtofl@exp^0,c
  6566   00288A  EF4D  F014         	goto	l5867
  6567   00288E                     l5865:
  6568   00288E  2A0E               	incf	___xxtofl@exp^0,f,c
  6569   002890  90D8               	bcf	status,0,c
  6570   002892  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6571   002894  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6572   002896  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6573   002898  320F               	rrcf	___xxtofl@arg^0,f,c
  6574   00289A                     l5867:
  6575   00289A  0E00               	movlw	0
  6576   00289C  140F               	andwf	___xxtofl@arg^0,w,c
  6577   00289E  6E09               	movwf	??___xxtofl^0,c
  6578   0028A0  0E00               	movlw	0
  6579   0028A2  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6580   0028A4  6E0A               	movwf	(??___xxtofl+1)^0,c
  6581   0028A6  0E00               	movlw	0
  6582   0028A8  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6583   0028AA  6E0B               	movwf	(??___xxtofl+2)^0,c
  6584   0028AC  0EFE               	movlw	254
  6585   0028AE  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6586   0028B0  6E0C               	movwf	(??___xxtofl+3)^0,c
  6587   0028B2  5009               	movf	??___xxtofl^0,w,c
  6588   0028B4  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6589   0028B6  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6590   0028B8  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6591   0028BA  A4D8               	btfss	status,2,c
  6592   0028BC  EF62  F014         	goto	u6141
  6593   0028C0  EF64  F014         	goto	u6140
  6594   0028C4                     u6141:
  6595   0028C4  EF47  F014         	goto	l5865
  6596   0028C8                     u6140:
  6597   0028C8  EF72  F014         	goto	l1182
  6598   0028CC                     l5869:
  6599   0028CC  2A0E               	incf	___xxtofl@exp^0,f,c
  6600   0028CE  0E01               	movlw	1
  6601   0028D0  260F               	addwf	___xxtofl@arg^0,f,c
  6602   0028D2  0E00               	movlw	0
  6603   0028D4  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  6604   0028D6  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  6605   0028D8  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  6606   0028DA  90D8               	bcf	status,0,c
  6607   0028DC  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6608   0028DE  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6609   0028E0  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6610   0028E2  320F               	rrcf	___xxtofl@arg^0,f,c
  6611   0028E4                     l1182:
  6612   0028E4  0E00               	movlw	0
  6613   0028E6  140F               	andwf	___xxtofl@arg^0,w,c
  6614   0028E8  6E09               	movwf	??___xxtofl^0,c
  6615   0028EA  0E00               	movlw	0
  6616   0028EC  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6617   0028EE  6E0A               	movwf	(??___xxtofl+1)^0,c
  6618   0028F0  0E00               	movlw	0
  6619   0028F2  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6620   0028F4  6E0B               	movwf	(??___xxtofl+2)^0,c
  6621   0028F6  0EFF               	movlw	255
  6622   0028F8  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6623   0028FA  6E0C               	movwf	(??___xxtofl+3)^0,c
  6624   0028FC  5009               	movf	??___xxtofl^0,w,c
  6625   0028FE  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6626   002900  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6627   002902  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6628   002904  A4D8               	btfss	status,2,c
  6629   002906  EF87  F014         	goto	u6151
  6630   00290A  EF89  F014         	goto	u6150
  6631   00290E                     u6151:
  6632   00290E  EF66  F014         	goto	l5869
  6633   002912                     u6150:
  6634   002912  EF91  F014         	goto	l5877
  6635   002916                     l5875:
  6636   002916  060E               	decf	___xxtofl@exp^0,f,c
  6637   002918  90D8               	bcf	status,0,c
  6638   00291A  360F               	rlcf	___xxtofl@arg^0,f,c
  6639   00291C  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  6640   00291E  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  6641   002920  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  6642   002922                     l5877:
  6643   002922  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  6644   002924  EF96  F014         	goto	u6161
  6645   002928  EF98  F014         	goto	u6160
  6646   00292C                     u6161:
  6647   00292C  EFA0  F014         	goto	l1189
  6648   002930                     u6160:
  6649   002930  0E02               	movlw	2
  6650   002932  600E               	cpfslt	___xxtofl@exp^0,c
  6651   002934  EF9E  F014         	goto	u6171
  6652   002938  EFA0  F014         	goto	u6170
  6653   00293C                     u6171:
  6654   00293C  EF8B  F014         	goto	l5875
  6655   002940                     u6170:
  6656   002940                     l1189:
  6657   002940  B00E               	btfsc	___xxtofl@exp^0,0,c
  6658   002942  EFA5  F014         	goto	u6181
  6659   002946  EFA7  F014         	goto	u6180
  6660   00294A                     u6181:
  6661   00294A  EFA8  F014         	goto	l5883
  6662   00294E                     u6180:
  6663   00294E  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  6664   002950                     l5883:
  6665   002950  90D8               	bcf	status,0,c
  6666   002952  320E               	rrcf	___xxtofl@exp^0,f,c
  6667   002954  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  6668   002958  6A0A               	clrf	(??___xxtofl+1)^0,c
  6669   00295A  6A0B               	clrf	(??___xxtofl+2)^0,c
  6670   00295C  6A0C               	clrf	(??___xxtofl+3)^0,c
  6671   00295E  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  6672   002962  6A0B               	clrf	(??___xxtofl+2)^0,c
  6673   002964  6A0A               	clrf	(??___xxtofl+1)^0,c
  6674   002966  6A09               	clrf	??___xxtofl^0,c
  6675   002968  5009               	movf	??___xxtofl^0,w,c
  6676   00296A  120F               	iorwf	___xxtofl@arg^0,f,c
  6677   00296C  500A               	movf	(??___xxtofl+1)^0,w,c
  6678   00296E  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  6679   002970  500B               	movf	(??___xxtofl+2)^0,w,c
  6680   002972  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  6681   002974  500C               	movf	(??___xxtofl+3)^0,w,c
  6682   002976  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  6683   002978  500D               	movf	___xxtofl@sign^0,w,c
  6684   00297A  B4D8               	btfsc	status,2,c
  6685   00297C  EFC2  F014         	goto	u6191
  6686   002980  EFC4  F014         	goto	u6190
  6687   002984                     u6191:
  6688   002984  EFCC  F014         	goto	l5893
  6689   002988                     u6190:
  6690   002988  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6691   00298A  EFCB  F014         	goto	u6200
  6692   00298E  EFC9  F014         	goto	u6201
  6693   002992                     u6201:
  6694   002992  EFCC  F014         	goto	l5893
  6695   002996                     u6200:
  6696   002996  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  6697   002998                     l5893:
  6698   002998  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  6699   00299C  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  6700   0029A0  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  6701   0029A4  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  6702   0029A8                     l1178:
  6703   0029A8  0012               	return		;funcret
  6704   0029AA                     __end_of___xxtofl:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function ___flsub *****************
  6708 ;; Defined at:
  6709 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  b               4   43[COMRAM] unsigned char 
  6712 ;;  a               4   47[COMRAM] unsigned char 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  4   43[COMRAM] unsigned char 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6724 ;;      Params:         8       0       0       0       0       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6727 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6728 ;;Total ram usage:        8 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; Hardware stack levels required when called: 5
  6731 ;; This function calls:
  6732 ;;		___fladd
  6733 ;; This function is called by:
  6734 ;;		_get_corriente_AC
  6735 ;;		_main
  6736 ;;		_efgtoa
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text35
  6741   003318                     __ptext35:
  6742                           	callstack 0
  6743   003318                     ___flsub:
  6744                           	callstack 21
  6745   003318  0E00               	movlw	0
  6746   00331A  1A30               	xorwf	___flsub@a^0,f,c
  6747   00331C  0E00               	movlw	0
  6748   00331E  1A31               	xorwf	(___flsub@a+1)^0,f,c
  6749   003320  0E00               	movlw	0
  6750   003322  1A32               	xorwf	(___flsub@a+2)^0,f,c
  6751   003324  0E80               	movlw	128
  6752   003326  1A33               	xorwf	(___flsub@a+3)^0,f,c
  6753   003328  C02C  F005         	movff	___flsub@b,___fladd@b
  6754   00332C  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  6755   003330  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  6756   003334  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  6757   003338  C030  F009         	movff	___flsub@a,___fladd@a
  6758   00333C  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  6759   003340  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  6760   003344  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  6761   003348  EC06  F009         	call	___fladd	;wreg free
  6762   00334C  C005  F02C         	movff	?___fladd,?___flsub
  6763   003350  C006  F02D         	movff	?___fladd+1,?___flsub+1
  6764   003354  C007  F02E         	movff	?___fladd+2,?___flsub+2
  6765   003358  C008  F02F         	movff	?___fladd+3,?___flsub+3
  6766   00335C  0012               	return		;funcret
  6767   00335E                     __end_of___flsub:
  6768                           	callstack 0
  6769                           
  6770 ;; *************** function ___fladd *****************
  6771 ;; Defined at:
  6772 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  b               4    4[COMRAM] unsigned char 
  6775 ;;  a               4    8[COMRAM] unsigned char 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  grs             1   19[COMRAM] unsigned char 
  6778 ;;  bexp            1   18[COMRAM] unsigned char 
  6779 ;;  aexp            1   17[COMRAM] unsigned char 
  6780 ;;  signs           1   16[COMRAM] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  4    4[COMRAM] unsigned char 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6790 ;;      Params:         8       0       0       0       0       0       0       0       0
  6791 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6792 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6793 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6794 ;;Total ram usage:       16 bytes
  6795 ;; Hardware stack levels used: 1
  6796 ;; Hardware stack levels required when called: 4
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_get_corriente_AC
  6801 ;;		___flsub
  6802 ;;		_efgtoa
  6803 ;;		_main
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text36
  6808   00120C                     __ptext36:
  6809                           	callstack 0
  6810   00120C                     ___fladd:
  6811                           	callstack 21
  6812   00120C  5008               	movf	(___fladd@b+3)^0,w,c
  6813   00120E  0B80               	andlw	128
  6814   001210  6E11               	movwf	___fladd@signs^0,c
  6815   001212  5008               	movf	(___fladd@b+3)^0,w,c
  6816   001214  2408               	addwf	(___fladd@b+3)^0,w,c
  6817   001216  6E13               	movwf	___fladd@bexp^0,c
  6818   001218  AE07               	btfss	(___fladd@b+2)^0,7,c
  6819   00121A  EF11  F009         	goto	u4461
  6820   00121E  EF13  F009         	goto	u4460
  6821   001222                     u4461:
  6822   001222  EF14  F009         	goto	l4703
  6823   001226                     u4460:
  6824   001226  8013               	bsf	___fladd@bexp^0,0,c
  6825   001228                     l4703:
  6826   001228  5013               	movf	___fladd@bexp^0,w,c
  6827   00122A  B4D8               	btfsc	status,2,c
  6828   00122C  EF1A  F009         	goto	u4471
  6829   001230  EF1C  F009         	goto	u4470
  6830   001234                     u4471:
  6831   001234  EF31  F009         	goto	l4713
  6832   001238                     u4470:
  6833   001238  2813               	incf	___fladd@bexp^0,w,c
  6834   00123A  A4D8               	btfss	status,2,c
  6835   00123C  EF22  F009         	goto	u4481
  6836   001240  EF24  F009         	goto	u4480
  6837   001244                     u4481:
  6838   001244  EF2C  F009         	goto	l4709
  6839   001248                     u4480:
  6840   001248  0E00               	movlw	0
  6841   00124A  6E05               	movwf	___fladd@b^0,c
  6842   00124C  0E00               	movlw	0
  6843   00124E  6E06               	movwf	(___fladd@b+1)^0,c
  6844   001250  0E00               	movlw	0
  6845   001252  6E07               	movwf	(___fladd@b+2)^0,c
  6846   001254  0E00               	movlw	0
  6847   001256  6E08               	movwf	(___fladd@b+3)^0,c
  6848   001258                     l4709:
  6849   001258  8E07               	bsf	(___fladd@b+2)^0,7,c
  6850   00125A  0E00               	movlw	0
  6851   00125C  6E08               	movwf	(___fladd@b+3)^0,c
  6852   00125E  EF39  F009         	goto	l4715
  6853   001262                     l4713:
  6854   001262  0E00               	movlw	0
  6855   001264  6E05               	movwf	___fladd@b^0,c
  6856   001266  0E00               	movlw	0
  6857   001268  6E06               	movwf	(___fladd@b+1)^0,c
  6858   00126A  0E00               	movlw	0
  6859   00126C  6E07               	movwf	(___fladd@b+2)^0,c
  6860   00126E  0E00               	movlw	0
  6861   001270  6E08               	movwf	(___fladd@b+3)^0,c
  6862   001272                     l4715:
  6863   001272  500C               	movf	(___fladd@a+3)^0,w,c
  6864   001274  0B80               	andlw	128
  6865   001276  6E12               	movwf	___fladd@aexp^0,c
  6866   001278  5011               	movf	___fladd@signs^0,w,c
  6867   00127A  1812               	xorwf	___fladd@aexp^0,w,c
  6868   00127C  B4D8               	btfsc	status,2,c
  6869   00127E  EF43  F009         	goto	u4491
  6870   001282  EF45  F009         	goto	u4490
  6871   001286                     u4491:
  6872   001286  EF46  F009         	goto	l4721
  6873   00128A                     u4490:
  6874   00128A  8C11               	bsf	___fladd@signs^0,6,c
  6875   00128C                     l4721:
  6876   00128C  500C               	movf	(___fladd@a+3)^0,w,c
  6877   00128E  240C               	addwf	(___fladd@a+3)^0,w,c
  6878   001290  6E12               	movwf	___fladd@aexp^0,c
  6879   001292  AE0B               	btfss	(___fladd@a+2)^0,7,c
  6880   001294  EF4E  F009         	goto	u4501
  6881   001298  EF50  F009         	goto	u4500
  6882   00129C                     u4501:
  6883   00129C  EF51  F009         	goto	l4727
  6884   0012A0                     u4500:
  6885   0012A0  8012               	bsf	___fladd@aexp^0,0,c
  6886   0012A2                     l4727:
  6887   0012A2  5012               	movf	___fladd@aexp^0,w,c
  6888   0012A4  B4D8               	btfsc	status,2,c
  6889   0012A6  EF57  F009         	goto	u4511
  6890   0012AA  EF59  F009         	goto	u4510
  6891   0012AE                     u4511:
  6892   0012AE  EF6E  F009         	goto	l4737
  6893   0012B2                     u4510:
  6894   0012B2  2812               	incf	___fladd@aexp^0,w,c
  6895   0012B4  A4D8               	btfss	status,2,c
  6896   0012B6  EF5F  F009         	goto	u4521
  6897   0012BA  EF61  F009         	goto	u4520
  6898   0012BE                     u4521:
  6899   0012BE  EF69  F009         	goto	l4733
  6900   0012C2                     u4520:
  6901   0012C2  0E00               	movlw	0
  6902   0012C4  6E09               	movwf	___fladd@a^0,c
  6903   0012C6  0E00               	movlw	0
  6904   0012C8  6E0A               	movwf	(___fladd@a+1)^0,c
  6905   0012CA  0E00               	movlw	0
  6906   0012CC  6E0B               	movwf	(___fladd@a+2)^0,c
  6907   0012CE  0E00               	movlw	0
  6908   0012D0  6E0C               	movwf	(___fladd@a+3)^0,c
  6909   0012D2                     l4733:
  6910   0012D2  8E0B               	bsf	(___fladd@a+2)^0,7,c
  6911   0012D4  0E00               	movlw	0
  6912   0012D6  6E0C               	movwf	(___fladd@a+3)^0,c
  6913   0012D8  EF76  F009         	goto	l4739
  6914   0012DC                     l4737:
  6915   0012DC  0E00               	movlw	0
  6916   0012DE  6E09               	movwf	___fladd@a^0,c
  6917   0012E0  0E00               	movlw	0
  6918   0012E2  6E0A               	movwf	(___fladd@a+1)^0,c
  6919   0012E4  0E00               	movlw	0
  6920   0012E6  6E0B               	movwf	(___fladd@a+2)^0,c
  6921   0012E8  0E00               	movlw	0
  6922   0012EA  6E0C               	movwf	(___fladd@a+3)^0,c
  6923   0012EC                     l4739:
  6924   0012EC  5013               	movf	___fladd@bexp^0,w,c
  6925   0012EE  5C12               	subwf	___fladd@aexp^0,w,c
  6926   0012F0  B0D8               	btfsc	status,0,c
  6927   0012F2  EF7D  F009         	goto	u4531
  6928   0012F6  EF7F  F009         	goto	u4530
  6929   0012FA                     u4531:
  6930   0012FA  EFA6  F009         	goto	l4775
  6931   0012FE                     u4530:
  6932   0012FE  AC11               	btfss	___fladd@signs^0,6,c
  6933   001300  EF84  F009         	goto	u4541
  6934   001304  EF86  F009         	goto	u4540
  6935   001308                     u4541:
  6936   001308  EF88  F009         	goto	l4745
  6937   00130C                     u4540:
  6938   00130C  0E80               	movlw	128
  6939   00130E  1A11               	xorwf	___fladd@signs^0,f,c
  6940   001310                     l4745:
  6941   001310  C013  F014         	movff	___fladd@bexp,___fladd@grs
  6942   001314  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6943   001318  C014  F012         	movff	___fladd@grs,___fladd@aexp
  6944   00131C  C005  F014         	movff	___fladd@b,___fladd@grs
  6945   001320  C009  F005         	movff	___fladd@a,___fladd@b
  6946   001324  C014  F009         	movff	___fladd@grs,___fladd@a
  6947   001328  C006  F014         	movff	___fladd@b+1,___fladd@grs
  6948   00132C  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  6949   001330  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  6950   001334  C007  F014         	movff	___fladd@b+2,___fladd@grs
  6951   001338  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  6952   00133C  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  6953   001340  C008  F014         	movff	___fladd@b+3,___fladd@grs
  6954   001344  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  6955   001348  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  6956   00134C                     l4775:
  6957   00134C  0E00               	movlw	0
  6958   00134E  6E14               	movwf	___fladd@grs^0,c
  6959   001350  5013               	movf	___fladd@bexp^0,w,c
  6960   001352  C012  F00D         	movff	___fladd@aexp,??___fladd
  6961   001356  6A0E               	clrf	(??___fladd+1)^0,c
  6962   001358  5E0D               	subwf	??___fladd^0,f,c
  6963   00135A  0E00               	movlw	0
  6964   00135C  5A0E               	subwfb	(??___fladd+1)^0,f,c
  6965   00135E  BE0E               	btfsc	(??___fladd+1)^0,7,c
  6966   001360  EFBB  F009         	goto	u4551
  6967   001364  500E               	movf	(??___fladd+1)^0,w,c
  6968   001366  E109               	bnz	u4550
  6969   001368  0E1A               	movlw	26
  6970   00136A  5C0D               	subwf	??___fladd^0,w,c
  6971   00136C  A0D8               	btfss	status,0,c
  6972   00136E  EFBB  F009         	goto	u4551
  6973   001372  EFBD  F009         	goto	u4550
  6974   001376                     u4551:
  6975   001376  EFF4  F009         	goto	l1049
  6976   00137A                     u4550:
  6977   00137A  5005               	movf	___fladd@b^0,w,c
  6978   00137C  1006               	iorwf	(___fladd@b+1)^0,w,c
  6979   00137E  1007               	iorwf	(___fladd@b+2)^0,w,c
  6980   001380  1008               	iorwf	(___fladd@b+3)^0,w,c
  6981   001382  A4D8               	btfss	status,2,c
  6982   001384  EFC6  F009         	goto	u4561
  6983   001388  EFC9  F009         	goto	u4560
  6984   00138C                     u4561:
  6985   00138C  0E01               	movlw	1
  6986   00138E  EFCA  F009         	goto	u4570
  6987   001392                     u4560:
  6988   001392  0E00               	movlw	0
  6989   001394                     u4570:
  6990   001394  6E14               	movwf	___fladd@grs^0,c
  6991   001396  0E00               	movlw	0
  6992   001398  6E05               	movwf	___fladd@b^0,c
  6993   00139A  0E00               	movlw	0
  6994   00139C  6E06               	movwf	(___fladd@b+1)^0,c
  6995   00139E  0E00               	movlw	0
  6996   0013A0  6E07               	movwf	(___fladd@b+2)^0,c
  6997   0013A2  0E00               	movlw	0
  6998   0013A4  6E08               	movwf	(___fladd@b+3)^0,c
  6999   0013A6  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  7000   0013AA  EFFD  F009         	goto	l1048
  7001   0013AE                     l1050:
  7002   0013AE  A014               	btfss	___fladd@grs^0,0,c
  7003   0013B0  EFDC  F009         	goto	u4581
  7004   0013B4  EFDE  F009         	goto	u4580
  7005   0013B8                     u4581:
  7006   0013B8  EFE4  F009         	goto	l4787
  7007   0013BC                     u4580:
  7008   0013BC  90D8               	bcf	status,0,c
  7009   0013BE  3014               	rrcf	___fladd@grs^0,w,c
  7010   0013C0  0901               	iorlw	1
  7011   0013C2  6E14               	movwf	___fladd@grs^0,c
  7012   0013C4  EFE6  F009         	goto	l4789
  7013   0013C8                     l4787:
  7014   0013C8  90D8               	bcf	status,0,c
  7015   0013CA  3214               	rrcf	___fladd@grs^0,f,c
  7016   0013CC                     l4789:
  7017   0013CC  A005               	btfss	___fladd@b^0,0,c
  7018   0013CE  EFEB  F009         	goto	u4591
  7019   0013D2  EFED  F009         	goto	u4590
  7020   0013D6                     u4591:
  7021   0013D6  EFEE  F009         	goto	l4793
  7022   0013DA                     u4590:
  7023   0013DA  8E14               	bsf	___fladd@grs^0,7,c
  7024   0013DC                     l4793:
  7025   0013DC  3408               	rlcf	(___fladd@b+3)^0,w,c
  7026   0013DE  3208               	rrcf	(___fladd@b+3)^0,f,c
  7027   0013E0  3207               	rrcf	(___fladd@b+2)^0,f,c
  7028   0013E2  3206               	rrcf	(___fladd@b+1)^0,f,c
  7029   0013E4  3205               	rrcf	___fladd@b^0,f,c
  7030   0013E6  2A13               	incf	___fladd@bexp^0,f,c
  7031   0013E8                     l1049:
  7032   0013E8  5012               	movf	___fladd@aexp^0,w,c
  7033   0013EA  5C13               	subwf	___fladd@bexp^0,w,c
  7034   0013EC  A0D8               	btfss	status,0,c
  7035   0013EE  EFFB  F009         	goto	u4601
  7036   0013F2  EFFD  F009         	goto	u4600
  7037   0013F6                     u4601:
  7038   0013F6  EFD7  F009         	goto	l1050
  7039   0013FA                     u4600:
  7040   0013FA                     l1048:
  7041   0013FA  BC11               	btfsc	___fladd@signs^0,6,c
  7042   0013FC  EF02  F00A         	goto	u4611
  7043   001400  EF04  F00A         	goto	u4610
  7044   001404                     u4611:
  7045   001404  EF44  F00A         	goto	l4821
  7046   001408                     u4610:
  7047   001408  5013               	movf	___fladd@bexp^0,w,c
  7048   00140A  A4D8               	btfss	status,2,c
  7049   00140C  EF0A  F00A         	goto	u4621
  7050   001410  EF0C  F00A         	goto	u4620
  7051   001414                     u4621:
  7052   001414  EF16  F00A         	goto	l4803
  7053   001418                     u4620:
  7054   001418  0E00               	movlw	0
  7055   00141A  6E05               	movwf	?___fladd^0,c
  7056   00141C  0E00               	movlw	0
  7057   00141E  6E06               	movwf	(?___fladd+1)^0,c
  7058   001420  0E00               	movlw	0
  7059   001422  6E07               	movwf	(?___fladd+2)^0,c
  7060   001424  0E00               	movlw	0
  7061   001426  6E08               	movwf	(?___fladd+3)^0,c
  7062   001428  EF65  F00B         	goto	l1057
  7063   00142C                     l4803:
  7064   00142C  5009               	movf	___fladd@a^0,w,c
  7065   00142E  2605               	addwf	___fladd@b^0,f,c
  7066   001430  500A               	movf	(___fladd@a+1)^0,w,c
  7067   001432  2206               	addwfc	(___fladd@b+1)^0,f,c
  7068   001434  500B               	movf	(___fladd@a+2)^0,w,c
  7069   001436  2207               	addwfc	(___fladd@b+2)^0,f,c
  7070   001438  500C               	movf	(___fladd@a+3)^0,w,c
  7071   00143A  2208               	addwfc	(___fladd@b+3)^0,f,c
  7072   00143C  A008               	btfss	(___fladd@b+3)^0,0,c
  7073   00143E  EF23  F00A         	goto	u4631
  7074   001442  EF25  F00A         	goto	u4630
  7075   001446                     u4631:
  7076   001446  EFD1  F00A         	goto	l4857
  7077   00144A                     u4630:
  7078   00144A  A014               	btfss	___fladd@grs^0,0,c
  7079   00144C  EF2A  F00A         	goto	u4641
  7080   001450  EF2C  F00A         	goto	u4640
  7081   001454                     u4641:
  7082   001454  EF32  F00A         	goto	l4811
  7083   001458                     u4640:
  7084   001458  90D8               	bcf	status,0,c
  7085   00145A  3014               	rrcf	___fladd@grs^0,w,c
  7086   00145C  0901               	iorlw	1
  7087   00145E  6E14               	movwf	___fladd@grs^0,c
  7088   001460  EF34  F00A         	goto	l4813
  7089   001464                     l4811:
  7090   001464  90D8               	bcf	status,0,c
  7091   001466  3214               	rrcf	___fladd@grs^0,f,c
  7092   001468                     l4813:
  7093   001468  A005               	btfss	___fladd@b^0,0,c
  7094   00146A  EF39  F00A         	goto	u4651
  7095   00146E  EF3B  F00A         	goto	u4650
  7096   001472                     u4651:
  7097   001472  EF3C  F00A         	goto	l4817
  7098   001476                     u4650:
  7099   001476  8E14               	bsf	___fladd@grs^0,7,c
  7100   001478                     l4817:
  7101   001478  3408               	rlcf	(___fladd@b+3)^0,w,c
  7102   00147A  3208               	rrcf	(___fladd@b+3)^0,f,c
  7103   00147C  3207               	rrcf	(___fladd@b+2)^0,f,c
  7104   00147E  3206               	rrcf	(___fladd@b+1)^0,f,c
  7105   001480  3205               	rrcf	___fladd@b^0,f,c
  7106   001482  2A13               	incf	___fladd@bexp^0,f,c
  7107   001484  EFD1  F00A         	goto	l4857
  7108   001488                     l4821:
  7109   001488  5009               	movf	___fladd@a^0,w,c
  7110   00148A  5C05               	subwf	___fladd@b^0,w,c
  7111   00148C  500A               	movf	(___fladd@a+1)^0,w,c
  7112   00148E  5806               	subwfb	(___fladd@b+1)^0,w,c
  7113   001490  500B               	movf	(___fladd@a+2)^0,w,c
  7114   001492  5807               	subwfb	(___fladd@b+2)^0,w,c
  7115   001494  5008               	movf	(___fladd@b+3)^0,w,c
  7116   001496  0A80               	xorlw	128
  7117   001498  6E0D               	movwf	??___fladd^0,c
  7118   00149A  500C               	movf	(___fladd@a+3)^0,w,c
  7119   00149C  0A80               	xorlw	128
  7120   00149E  580D               	subwfb	??___fladd^0,w,c
  7121   0014A0  B0D8               	btfsc	status,0,c
  7122   0014A2  EF55  F00A         	goto	u4661
  7123   0014A6  EF57  F00A         	goto	u4660
  7124   0014AA                     u4661:
  7125   0014AA  EF82  F00A         	goto	l4831
  7126   0014AE                     u4660:
  7127   0014AE  5005               	movf	___fladd@b^0,w,c
  7128   0014B0  5C09               	subwf	___fladd@a^0,w,c
  7129   0014B2  6E0D               	movwf	??___fladd^0,c
  7130   0014B4  5006               	movf	(___fladd@b+1)^0,w,c
  7131   0014B6  580A               	subwfb	(___fladd@a+1)^0,w,c
  7132   0014B8  6E0E               	movwf	(??___fladd+1)^0,c
  7133   0014BA  5007               	movf	(___fladd@b+2)^0,w,c
  7134   0014BC  580B               	subwfb	(___fladd@a+2)^0,w,c
  7135   0014BE  6E0F               	movwf	(??___fladd+2)^0,c
  7136   0014C0  5008               	movf	(___fladd@b+3)^0,w,c
  7137   0014C2  580C               	subwfb	(___fladd@a+3)^0,w,c
  7138   0014C4  6E10               	movwf	(??___fladd+3)^0,c
  7139   0014C6  0EFF               	movlw	255
  7140   0014C8  240D               	addwf	??___fladd^0,w,c
  7141   0014CA  6E05               	movwf	___fladd@b^0,c
  7142   0014CC  0EFF               	movlw	255
  7143   0014CE  200E               	addwfc	(??___fladd+1)^0,w,c
  7144   0014D0  6E06               	movwf	(___fladd@b+1)^0,c
  7145   0014D2  0EFF               	movlw	255
  7146   0014D4  200F               	addwfc	(??___fladd+2)^0,w,c
  7147   0014D6  6E07               	movwf	(___fladd@b+2)^0,c
  7148   0014D8  0EFF               	movlw	255
  7149   0014DA  2010               	addwfc	(??___fladd+3)^0,w,c
  7150   0014DC  6E08               	movwf	(___fladd@b+3)^0,c
  7151   0014DE  0E80               	movlw	128
  7152   0014E0  1A11               	xorwf	___fladd@signs^0,f,c
  7153   0014E2  6C14               	negf	___fladd@grs^0,c
  7154   0014E4  5014               	movf	___fladd@grs^0,w,c
  7155   0014E6  A4D8               	btfss	status,2,c
  7156   0014E8  EF78  F00A         	goto	u4671
  7157   0014EC  EF7A  F00A         	goto	u4670
  7158   0014F0                     u4671:
  7159   0014F0  EF8A  F00A         	goto	l1065
  7160   0014F4                     u4670:
  7161   0014F4  0E01               	movlw	1
  7162   0014F6  2605               	addwf	___fladd@b^0,f,c
  7163   0014F8  0E00               	movlw	0
  7164   0014FA  2206               	addwfc	(___fladd@b+1)^0,f,c
  7165   0014FC  2207               	addwfc	(___fladd@b+2)^0,f,c
  7166   0014FE  2208               	addwfc	(___fladd@b+3)^0,f,c
  7167   001500  EF8A  F00A         	goto	l1065
  7168   001504                     l4831:
  7169   001504  5009               	movf	___fladd@a^0,w,c
  7170   001506  5E05               	subwf	___fladd@b^0,f,c
  7171   001508  500A               	movf	(___fladd@a+1)^0,w,c
  7172   00150A  5A06               	subwfb	(___fladd@b+1)^0,f,c
  7173   00150C  500B               	movf	(___fladd@a+2)^0,w,c
  7174   00150E  5A07               	subwfb	(___fladd@b+2)^0,f,c
  7175   001510  500C               	movf	(___fladd@a+3)^0,w,c
  7176   001512  5A08               	subwfb	(___fladd@b+3)^0,f,c
  7177   001514                     l1065:
  7178   001514  5005               	movf	___fladd@b^0,w,c
  7179   001516  1006               	iorwf	(___fladd@b+1)^0,w,c
  7180   001518  1007               	iorwf	(___fladd@b+2)^0,w,c
  7181   00151A  1008               	iorwf	(___fladd@b+3)^0,w,c
  7182   00151C  A4D8               	btfss	status,2,c
  7183   00151E  EF93  F00A         	goto	u4681
  7184   001522  EF95  F00A         	goto	u4680
  7185   001526                     u4681:
  7186   001526  EFCA  F00A         	goto	l4855
  7187   00152A                     u4680:
  7188   00152A  5014               	movf	___fladd@grs^0,w,c
  7189   00152C  A4D8               	btfss	status,2,c
  7190   00152E  EF9B  F00A         	goto	u4691
  7191   001532  EF9D  F00A         	goto	u4690
  7192   001536                     u4691:
  7193   001536  EFCA  F00A         	goto	l4855
  7194   00153A                     u4690:
  7195   00153A  0E00               	movlw	0
  7196   00153C  6E05               	movwf	?___fladd^0,c
  7197   00153E  0E00               	movlw	0
  7198   001540  6E06               	movwf	(?___fladd+1)^0,c
  7199   001542  0E00               	movlw	0
  7200   001544  6E07               	movwf	(?___fladd+2)^0,c
  7201   001546  0E00               	movlw	0
  7202   001548  6E08               	movwf	(?___fladd+3)^0,c
  7203   00154A  EF65  F00B         	goto	l1057
  7204   00154E                     l4839:
  7205   00154E  90D8               	bcf	status,0,c
  7206   001550  3605               	rlcf	___fladd@b^0,f,c
  7207   001552  3606               	rlcf	(___fladd@b+1)^0,f,c
  7208   001554  3607               	rlcf	(___fladd@b+2)^0,f,c
  7209   001556  3608               	rlcf	(___fladd@b+3)^0,f,c
  7210   001558  AE14               	btfss	___fladd@grs^0,7,c
  7211   00155A  EFB1  F00A         	goto	u4701
  7212   00155E  EFB3  F00A         	goto	u4700
  7213   001562                     u4701:
  7214   001562  EFB4  F00A         	goto	l4845
  7215   001566                     u4700:
  7216   001566  8005               	bsf	___fladd@b^0,0,c
  7217   001568                     l4845:
  7218   001568  A014               	btfss	___fladd@grs^0,0,c
  7219   00156A  EFB9  F00A         	goto	u4711
  7220   00156E  EFBB  F00A         	goto	u4710
  7221   001572                     u4711:
  7222   001572  EFBF  F00A         	goto	l4849
  7223   001576                     u4710:
  7224   001576  80D8               	bsf	status,0,c
  7225   001578  3614               	rlcf	___fladd@grs^0,f,c
  7226   00157A  EFC1  F00A         	goto	l4851
  7227   00157E                     l4849:
  7228   00157E  90D8               	bcf	status,0,c
  7229   001580  3614               	rlcf	___fladd@grs^0,f,c
  7230   001582                     l4851:
  7231   001582  5013               	movf	___fladd@bexp^0,w,c
  7232   001584  B4D8               	btfsc	status,2,c
  7233   001586  EFC7  F00A         	goto	u4721
  7234   00158A  EFC9  F00A         	goto	u4720
  7235   00158E                     u4721:
  7236   00158E  EFCA  F00A         	goto	l4855
  7237   001592                     u4720:
  7238   001592  0613               	decf	___fladd@bexp^0,f,c
  7239   001594                     l4855:
  7240   001594  AE07               	btfss	(___fladd@b+2)^0,7,c
  7241   001596  EFCF  F00A         	goto	u4731
  7242   00159A  EFD1  F00A         	goto	u4730
  7243   00159E                     u4731:
  7244   00159E  EFA7  F00A         	goto	l4839
  7245   0015A2                     u4730:
  7246   0015A2                     l4857:
  7247   0015A2  0E00               	movlw	0
  7248   0015A4  6E12               	movwf	___fladd@aexp^0,c
  7249   0015A6  AE14               	btfss	___fladd@grs^0,7,c
  7250   0015A8  EFD8  F00A         	goto	u4741
  7251   0015AC  EFDA  F00A         	goto	u4740
  7252   0015B0                     u4741:
  7253   0015B0  EFF2  F00A         	goto	l1074
  7254   0015B4                     u4740:
  7255   0015B4  C014  F00D         	movff	___fladd@grs,??___fladd
  7256   0015B8  0E7F               	movlw	127
  7257   0015BA  160D               	andwf	??___fladd^0,f,c
  7258   0015BC  B4D8               	btfsc	status,2,c
  7259   0015BE  EFE3  F00A         	goto	u4751
  7260   0015C2  EFE5  F00A         	goto	u4750
  7261   0015C6                     u4751:
  7262   0015C6  EFE9  F00A         	goto	l1075
  7263   0015CA                     u4750:
  7264   0015CA                     l4863:
  7265   0015CA  0E01               	movlw	1
  7266   0015CC  6E12               	movwf	___fladd@aexp^0,c
  7267   0015CE  EFF2  F00A         	goto	l1074
  7268   0015D2                     l1075:
  7269   0015D2  A005               	btfss	___fladd@b^0,0,c
  7270   0015D4  EFEE  F00A         	goto	u4761
  7271   0015D8  EFF0  F00A         	goto	u4760
  7272   0015DC                     u4761:
  7273   0015DC  EFF2  F00A         	goto	l1074
  7274   0015E0                     u4760:
  7275   0015E0  EFE5  F00A         	goto	l4863
  7276   0015E4                     l1074:
  7277   0015E4  5012               	movf	___fladd@aexp^0,w,c
  7278   0015E6  B4D8               	btfsc	status,2,c
  7279   0015E8  EFF8  F00A         	goto	u4771
  7280   0015EC  EFFA  F00A         	goto	u4770
  7281   0015F0                     u4771:
  7282   0015F0  EF25  F00B         	goto	l4875
  7283   0015F4                     u4770:
  7284   0015F4  0E01               	movlw	1
  7285   0015F6  2605               	addwf	___fladd@b^0,f,c
  7286   0015F8  0E00               	movlw	0
  7287   0015FA  2206               	addwfc	(___fladd@b+1)^0,f,c
  7288   0015FC  2207               	addwfc	(___fladd@b+2)^0,f,c
  7289   0015FE  2208               	addwfc	(___fladd@b+3)^0,f,c
  7290   001600  A008               	btfss	(___fladd@b+3)^0,0,c
  7291   001602  EF05  F00B         	goto	u4781
  7292   001606  EF07  F00B         	goto	u4780
  7293   00160A                     u4781:
  7294   00160A  EF25  F00B         	goto	l4875
  7295   00160E                     u4780:
  7296   00160E  C005  F00D         	movff	___fladd@b,??___fladd
  7297   001612  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  7298   001616  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  7299   00161A  C008  F010         	movff	___fladd@b+3,??___fladd+3
  7300   00161E  3410               	rlcf	(??___fladd+3)^0,w,c
  7301   001620  3210               	rrcf	(??___fladd+3)^0,f,c
  7302   001622  320F               	rrcf	(??___fladd+2)^0,f,c
  7303   001624  320E               	rrcf	(??___fladd+1)^0,f,c
  7304   001626  320D               	rrcf	??___fladd^0,f,c
  7305   001628  C00D  F005         	movff	??___fladd,___fladd@b
  7306   00162C  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  7307   001630  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  7308   001634  C010  F008         	movff	??___fladd+3,___fladd@b+3
  7309   001638  2813               	incf	___fladd@bexp^0,w,c
  7310   00163A  B4D8               	btfsc	status,2,c
  7311   00163C  EF22  F00B         	goto	u4791
  7312   001640  EF24  F00B         	goto	u4790
  7313   001644                     u4791:
  7314   001644  EF25  F00B         	goto	l4875
  7315   001648                     u4790:
  7316   001648  2A13               	incf	___fladd@bexp^0,f,c
  7317   00164A                     l4875:
  7318   00164A  2813               	incf	___fladd@bexp^0,w,c
  7319   00164C  B4D8               	btfsc	status,2,c
  7320   00164E  EF2B  F00B         	goto	u4801
  7321   001652  EF2D  F00B         	goto	u4800
  7322   001656                     u4801:
  7323   001656  EF35  F00B         	goto	l4879
  7324   00165A                     u4800:
  7325   00165A  5013               	movf	___fladd@bexp^0,w,c
  7326   00165C  A4D8               	btfss	status,2,c
  7327   00165E  EF33  F00B         	goto	u4811
  7328   001662  EF35  F00B         	goto	u4810
  7329   001666                     u4811:
  7330   001666  EF47  F00B         	goto	l4883
  7331   00166A                     u4810:
  7332   00166A                     l4879:
  7333   00166A  0E00               	movlw	0
  7334   00166C  6E05               	movwf	___fladd@b^0,c
  7335   00166E  0E00               	movlw	0
  7336   001670  6E06               	movwf	(___fladd@b+1)^0,c
  7337   001672  0E00               	movlw	0
  7338   001674  6E07               	movwf	(___fladd@b+2)^0,c
  7339   001676  0E00               	movlw	0
  7340   001678  6E08               	movwf	(___fladd@b+3)^0,c
  7341   00167A  5013               	movf	___fladd@bexp^0,w,c
  7342   00167C  A4D8               	btfss	status,2,c
  7343   00167E  EF43  F00B         	goto	u4821
  7344   001682  EF45  F00B         	goto	u4820
  7345   001686                     u4821:
  7346   001686  EF47  F00B         	goto	l4883
  7347   00168A                     u4820:
  7348   00168A  0E00               	movlw	0
  7349   00168C  6E11               	movwf	___fladd@signs^0,c
  7350   00168E                     l4883:
  7351   00168E  A013               	btfss	___fladd@bexp^0,0,c
  7352   001690  EF4C  F00B         	goto	u4831
  7353   001694  EF4E  F00B         	goto	u4830
  7354   001698                     u4831:
  7355   001698  EF51  F00B         	goto	l4887
  7356   00169C                     u4830:
  7357   00169C  8E07               	bsf	(___fladd@b+2)^0,7,c
  7358   00169E  EF52  F00B         	goto	l4889
  7359   0016A2                     l4887:
  7360   0016A2  9E07               	bcf	(___fladd@b+2)^0,7,c
  7361   0016A4                     l4889:
  7362   0016A4  90D8               	bcf	status,0,c
  7363   0016A6  3013               	rrcf	___fladd@bexp^0,w,c
  7364   0016A8  6E08               	movwf	(___fladd@b+3)^0,c
  7365   0016AA  AE11               	btfss	___fladd@signs^0,7,c
  7366   0016AC  EF5A  F00B         	goto	u4841
  7367   0016B0  EF5C  F00B         	goto	u4840
  7368   0016B4                     u4841:
  7369   0016B4  EF5D  F00B         	goto	l4895
  7370   0016B8                     u4840:
  7371   0016B8  8E08               	bsf	(___fladd@b+3)^0,7,c
  7372   0016BA                     l4895:
  7373   0016BA  C005  F005         	movff	___fladd@b,?___fladd
  7374   0016BE  C006  F006         	movff	___fladd@b+1,?___fladd+1
  7375   0016C2  C007  F007         	movff	___fladd@b+2,?___fladd+2
  7376   0016C6  C008  F008         	movff	___fladd@b+3,?___fladd+3
  7377   0016CA                     l1057:
  7378   0016CA  0012               	return		;funcret
  7379   0016CC                     __end_of___fladd:
  7380                           	callstack 0
  7381                           
  7382 ;; *************** function ___flmul *****************
  7383 ;; Defined at:
  7384 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  b               4   18[COMRAM] unsigned char 
  7387 ;;  a               4   22[COMRAM] unsigned char 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;  prod            4   37[COMRAM] struct .
  7390 ;;  grs             4   32[COMRAM] unsigned long 
  7391 ;;  temp            2   41[COMRAM] struct .
  7392 ;;  bexp            1   36[COMRAM] unsigned char 
  7393 ;;  aexp            1   31[COMRAM] unsigned char 
  7394 ;;  sign            1   30[COMRAM] unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  4   18[COMRAM] unsigned char 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2, status,0, prodl, prodh
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7404 ;;      Params:         8       0       0       0       0       0       0       0       0
  7405 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7406 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7407 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7408 ;;Total ram usage:       25 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 4
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_get_corriente_AC
  7415 ;;		_efgtoa
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419                           	psect	text37
  7420   0016CC                     __ptext37:
  7421                           	callstack 0
  7422   0016CC                     ___flmul:
  7423                           	callstack 22
  7424   0016CC  5016               	movf	(___flmul@b+3)^0,w,c
  7425   0016CE  0B80               	andlw	128
  7426   0016D0  6E1F               	movwf	___flmul@sign^0,c
  7427   0016D2  5016               	movf	(___flmul@b+3)^0,w,c
  7428   0016D4  2416               	addwf	(___flmul@b+3)^0,w,c
  7429   0016D6  6E25               	movwf	___flmul@bexp^0,c
  7430   0016D8  AE15               	btfss	(___flmul@b+2)^0,7,c
  7431   0016DA  EF71  F00B         	goto	u5131
  7432   0016DE  EF73  F00B         	goto	u5130
  7433   0016E2                     u5131:
  7434   0016E2  EF74  F00B         	goto	l5107
  7435   0016E6                     u5130:
  7436   0016E6  8025               	bsf	___flmul@bexp^0,0,c
  7437   0016E8                     l5107:
  7438   0016E8  5025               	movf	___flmul@bexp^0,w,c
  7439   0016EA  B4D8               	btfsc	status,2,c
  7440   0016EC  EF7A  F00B         	goto	u5141
  7441   0016F0  EF7C  F00B         	goto	u5140
  7442   0016F4                     u5141:
  7443   0016F4  EF8F  F00B         	goto	l5115
  7444   0016F8                     u5140:
  7445   0016F8  2825               	incf	___flmul@bexp^0,w,c
  7446   0016FA  A4D8               	btfss	status,2,c
  7447   0016FC  EF82  F00B         	goto	u5151
  7448   001700  EF84  F00B         	goto	u5150
  7449   001704                     u5151:
  7450   001704  EF8C  F00B         	goto	l5113
  7451   001708                     u5150:
  7452   001708  0E00               	movlw	0
  7453   00170A  6E13               	movwf	___flmul@b^0,c
  7454   00170C  0E00               	movlw	0
  7455   00170E  6E14               	movwf	(___flmul@b+1)^0,c
  7456   001710  0E00               	movlw	0
  7457   001712  6E15               	movwf	(___flmul@b+2)^0,c
  7458   001714  0E00               	movlw	0
  7459   001716  6E16               	movwf	(___flmul@b+3)^0,c
  7460   001718                     l5113:
  7461   001718  8E15               	bsf	(___flmul@b+2)^0,7,c
  7462   00171A  EF97  F00B         	goto	l5117
  7463   00171E                     l5115:
  7464   00171E  0E00               	movlw	0
  7465   001720  6E13               	movwf	___flmul@b^0,c
  7466   001722  0E00               	movlw	0
  7467   001724  6E14               	movwf	(___flmul@b+1)^0,c
  7468   001726  0E00               	movlw	0
  7469   001728  6E15               	movwf	(___flmul@b+2)^0,c
  7470   00172A  0E00               	movlw	0
  7471   00172C  6E16               	movwf	(___flmul@b+3)^0,c
  7472   00172E                     l5117:
  7473   00172E  501A               	movf	(___flmul@a+3)^0,w,c
  7474   001730  0B80               	andlw	128
  7475   001732  1A1F               	xorwf	___flmul@sign^0,f,c
  7476   001734  501A               	movf	(___flmul@a+3)^0,w,c
  7477   001736  241A               	addwf	(___flmul@a+3)^0,w,c
  7478   001738  6E20               	movwf	___flmul@aexp^0,c
  7479   00173A  AE19               	btfss	(___flmul@a+2)^0,7,c
  7480   00173C  EFA2  F00B         	goto	u5161
  7481   001740  EFA4  F00B         	goto	u5160
  7482   001744                     u5161:
  7483   001744  EFA5  F00B         	goto	l5125
  7484   001748                     u5160:
  7485   001748  8020               	bsf	___flmul@aexp^0,0,c
  7486   00174A                     l5125:
  7487   00174A  5020               	movf	___flmul@aexp^0,w,c
  7488   00174C  B4D8               	btfsc	status,2,c
  7489   00174E  EFAB  F00B         	goto	u5171
  7490   001752  EFAD  F00B         	goto	u5170
  7491   001756                     u5171:
  7492   001756  EFC0  F00B         	goto	l5133
  7493   00175A                     u5170:
  7494   00175A  2820               	incf	___flmul@aexp^0,w,c
  7495   00175C  A4D8               	btfss	status,2,c
  7496   00175E  EFB3  F00B         	goto	u5181
  7497   001762  EFB5  F00B         	goto	u5180
  7498   001766                     u5181:
  7499   001766  EFBD  F00B         	goto	l5131
  7500   00176A                     u5180:
  7501   00176A  0E00               	movlw	0
  7502   00176C  6E17               	movwf	___flmul@a^0,c
  7503   00176E  0E00               	movlw	0
  7504   001770  6E18               	movwf	(___flmul@a+1)^0,c
  7505   001772  0E00               	movlw	0
  7506   001774  6E19               	movwf	(___flmul@a+2)^0,c
  7507   001776  0E00               	movlw	0
  7508   001778  6E1A               	movwf	(___flmul@a+3)^0,c
  7509   00177A                     l5131:
  7510   00177A  8E19               	bsf	(___flmul@a+2)^0,7,c
  7511   00177C  EFC8  F00B         	goto	l1134
  7512   001780                     l5133:
  7513   001780  0E00               	movlw	0
  7514   001782  6E17               	movwf	___flmul@a^0,c
  7515   001784  0E00               	movlw	0
  7516   001786  6E18               	movwf	(___flmul@a+1)^0,c
  7517   001788  0E00               	movlw	0
  7518   00178A  6E19               	movwf	(___flmul@a+2)^0,c
  7519   00178C  0E00               	movlw	0
  7520   00178E  6E1A               	movwf	(___flmul@a+3)^0,c
  7521   001790                     l1134:
  7522   001790  5020               	movf	___flmul@aexp^0,w,c
  7523   001792  B4D8               	btfsc	status,2,c
  7524   001794  EFCE  F00B         	goto	u5191
  7525   001798  EFD0  F00B         	goto	u5190
  7526   00179C                     u5191:
  7527   00179C  EFD8  F00B         	goto	l5137
  7528   0017A0                     u5190:
  7529   0017A0  5025               	movf	___flmul@bexp^0,w,c
  7530   0017A2  A4D8               	btfss	status,2,c
  7531   0017A4  EFD6  F00B         	goto	u5201
  7532   0017A8  EFD8  F00B         	goto	u5200
  7533   0017AC                     u5201:
  7534   0017AC  EFE2  F00B         	goto	l5141
  7535   0017B0                     u5200:
  7536   0017B0                     l5137:
  7537   0017B0  0E00               	movlw	0
  7538   0017B2  6E13               	movwf	?___flmul^0,c
  7539   0017B4  0E00               	movlw	0
  7540   0017B6  6E14               	movwf	(?___flmul+1)^0,c
  7541   0017B8  0E00               	movlw	0
  7542   0017BA  6E15               	movwf	(?___flmul+2)^0,c
  7543   0017BC  0E00               	movlw	0
  7544   0017BE  6E16               	movwf	(?___flmul+3)^0,c
  7545   0017C0  EF7A  F00D         	goto	l1138
  7546   0017C4                     l5141:
  7547   0017C4  5019               	movf	(___flmul@a+2)^0,w,c
  7548   0017C6  0213               	mulwf	___flmul@b^0,c
  7549   0017C8  CFF3 F02A          	movff	prodl,___flmul@temp
  7550   0017CC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7551   0017D0  502A               	movf	___flmul@temp^0,w,c
  7552   0017D2  6E21               	movwf	___flmul@grs^0,c
  7553   0017D4  6A22               	clrf	(___flmul@grs+1)^0,c
  7554   0017D6  6A23               	clrf	(___flmul@grs+2)^0,c
  7555   0017D8  6A24               	clrf	(___flmul@grs+3)^0,c
  7556   0017DA  502B               	movf	(___flmul@temp+1)^0,w,c
  7557   0017DC  6E26               	movwf	___flmul@prod^0,c
  7558   0017DE  6A27               	clrf	(___flmul@prod+1)^0,c
  7559   0017E0  6A28               	clrf	(___flmul@prod+2)^0,c
  7560   0017E2  6A29               	clrf	(___flmul@prod+3)^0,c
  7561   0017E4  5018               	movf	(___flmul@a+1)^0,w,c
  7562   0017E6  0214               	mulwf	(___flmul@b+1)^0,c
  7563   0017E8  CFF3 F02A          	movff	prodl,___flmul@temp
  7564   0017EC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7565   0017F0  502A               	movf	___flmul@temp^0,w,c
  7566   0017F2  2621               	addwf	___flmul@grs^0,f,c
  7567   0017F4  0E00               	movlw	0
  7568   0017F6  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7569   0017F8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7570   0017FA  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7571   0017FC  502B               	movf	(___flmul@temp+1)^0,w,c
  7572   0017FE  2626               	addwf	___flmul@prod^0,f,c
  7573   001800  0E00               	movlw	0
  7574   001802  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7575   001804  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7576   001806  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7577   001808  5017               	movf	___flmul@a^0,w,c
  7578   00180A  0215               	mulwf	(___flmul@b+2)^0,c
  7579   00180C  CFF3 F02A          	movff	prodl,___flmul@temp
  7580   001810  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7581   001814  502A               	movf	___flmul@temp^0,w,c
  7582   001816  2621               	addwf	___flmul@grs^0,f,c
  7583   001818  0E00               	movlw	0
  7584   00181A  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7585   00181C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7586   00181E  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7587   001820  502B               	movf	(___flmul@temp+1)^0,w,c
  7588   001822  2626               	addwf	___flmul@prod^0,f,c
  7589   001824  0E00               	movlw	0
  7590   001826  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7591   001828  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7592   00182A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7593   00182C  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7594   001830  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7595   001834  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7596   001838  6A21               	clrf	___flmul@grs^0,c
  7597   00183A  5017               	movf	___flmul@a^0,w,c
  7598   00183C  0214               	mulwf	(___flmul@b+1)^0,c
  7599   00183E  CFF3 F02A          	movff	prodl,___flmul@temp
  7600   001842  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7601   001846  502A               	movf	___flmul@temp^0,w,c
  7602   001848  2621               	addwf	___flmul@grs^0,f,c
  7603   00184A  502B               	movf	(___flmul@temp+1)^0,w,c
  7604   00184C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7605   00184E  0E00               	movlw	0
  7606   001850  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7607   001852  0E00               	movlw	0
  7608   001854  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7609   001856  5018               	movf	(___flmul@a+1)^0,w,c
  7610   001858  0213               	mulwf	___flmul@b^0,c
  7611   00185A  CFF3 F02A          	movff	prodl,___flmul@temp
  7612   00185E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7613   001862  502A               	movf	___flmul@temp^0,w,c
  7614   001864  2621               	addwf	___flmul@grs^0,f,c
  7615   001866  502B               	movf	(___flmul@temp+1)^0,w,c
  7616   001868  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7617   00186A  0E00               	movlw	0
  7618   00186C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7619   00186E  0E00               	movlw	0
  7620   001870  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7621   001872  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7622   001876  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7623   00187A  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7624   00187E  6A21               	clrf	___flmul@grs^0,c
  7625   001880  5017               	movf	___flmul@a^0,w,c
  7626   001882  0213               	mulwf	___flmul@b^0,c
  7627   001884  CFF3 F02A          	movff	prodl,___flmul@temp
  7628   001888  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7629   00188C  502A               	movf	___flmul@temp^0,w,c
  7630   00188E  2621               	addwf	___flmul@grs^0,f,c
  7631   001890  502B               	movf	(___flmul@temp+1)^0,w,c
  7632   001892  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7633   001894  0E00               	movlw	0
  7634   001896  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7635   001898  0E00               	movlw	0
  7636   00189A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7637   00189C  5019               	movf	(___flmul@a+2)^0,w,c
  7638   00189E  0214               	mulwf	(___flmul@b+1)^0,c
  7639   0018A0  CFF3 F02A          	movff	prodl,___flmul@temp
  7640   0018A4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7641   0018A8  502A               	movf	___flmul@temp^0,w,c
  7642   0018AA  2626               	addwf	___flmul@prod^0,f,c
  7643   0018AC  502B               	movf	(___flmul@temp+1)^0,w,c
  7644   0018AE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7645   0018B0  0E00               	movlw	0
  7646   0018B2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7647   0018B4  0E00               	movlw	0
  7648   0018B6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7649   0018B8  5018               	movf	(___flmul@a+1)^0,w,c
  7650   0018BA  0215               	mulwf	(___flmul@b+2)^0,c
  7651   0018BC  CFF3 F02A          	movff	prodl,___flmul@temp
  7652   0018C0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7653   0018C4  502A               	movf	___flmul@temp^0,w,c
  7654   0018C6  2626               	addwf	___flmul@prod^0,f,c
  7655   0018C8  502B               	movf	(___flmul@temp+1)^0,w,c
  7656   0018CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7657   0018CC  0E00               	movlw	0
  7658   0018CE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7659   0018D0  0E00               	movlw	0
  7660   0018D2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7661   0018D4  5019               	movf	(___flmul@a+2)^0,w,c
  7662   0018D6  0215               	mulwf	(___flmul@b+2)^0,c
  7663   0018D8  CFF3 F02A          	movff	prodl,___flmul@temp
  7664   0018DC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7665   0018E0  502A               	movf	___flmul@temp^0,w,c
  7666   0018E2  6E1B               	movwf	??___flmul^0,c
  7667   0018E4  502B               	movf	(___flmul@temp+1)^0,w,c
  7668   0018E6  6E1C               	movwf	(??___flmul+1)^0,c
  7669   0018E8  6A1D               	clrf	(??___flmul+2)^0,c
  7670   0018EA  6A1E               	clrf	(??___flmul+3)^0,c
  7671   0018EC  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  7672   0018F0  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  7673   0018F4  C01B  F01C         	movff	??___flmul,??___flmul+1
  7674   0018F8  6A1B               	clrf	??___flmul^0,c
  7675   0018FA  501B               	movf	??___flmul^0,w,c
  7676   0018FC  2626               	addwf	___flmul@prod^0,f,c
  7677   0018FE  501C               	movf	(??___flmul+1)^0,w,c
  7678   001900  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7679   001902  501D               	movf	(??___flmul+2)^0,w,c
  7680   001904  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7681   001906  501E               	movf	(??___flmul+3)^0,w,c
  7682   001908  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7683   00190A  C021  F01B         	movff	___flmul@grs,??___flmul
  7684   00190E  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  7685   001912  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  7686   001916  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  7687   00191A  0E19               	movlw	25
  7688   00191C  EF95  F00C         	goto	u5210
  7689   001920                     u5215:
  7690   001920  90D8               	bcf	status,0,c
  7691   001922  321E               	rrcf	(??___flmul+3)^0,f,c
  7692   001924  321D               	rrcf	(??___flmul+2)^0,f,c
  7693   001926  321C               	rrcf	(??___flmul+1)^0,f,c
  7694   001928  321B               	rrcf	??___flmul^0,f,c
  7695   00192A                     u5210:
  7696   00192A  2EE8               	decfsz	wreg,f,c
  7697   00192C  EF90  F00C         	goto	u5215
  7698   001930  501B               	movf	??___flmul^0,w,c
  7699   001932  2626               	addwf	___flmul@prod^0,f,c
  7700   001934  501C               	movf	(??___flmul+1)^0,w,c
  7701   001936  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7702   001938  501D               	movf	(??___flmul+2)^0,w,c
  7703   00193A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7704   00193C  501E               	movf	(??___flmul+3)^0,w,c
  7705   00193E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7706   001940  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7707   001944  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7708   001948  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7709   00194C  6A21               	clrf	___flmul@grs^0,c
  7710   00194E  5020               	movf	___flmul@aexp^0,w,c
  7711   001950  C025  F01B         	movff	___flmul@bexp,??___flmul
  7712   001954  6A1C               	clrf	(??___flmul+1)^0,c
  7713   001956  261B               	addwf	??___flmul^0,f,c
  7714   001958  0E00               	movlw	0
  7715   00195A  221C               	addwfc	(??___flmul+1)^0,f,c
  7716   00195C  0E82               	movlw	130
  7717   00195E  241B               	addwf	??___flmul^0,w,c
  7718   001960  6E2A               	movwf	___flmul@temp^0,c
  7719   001962  0EFF               	movlw	255
  7720   001964  201C               	addwfc	(??___flmul+1)^0,w,c
  7721   001966  6E2B               	movwf	(___flmul@temp+1)^0,c
  7722   001968  EFCB  F00C         	goto	l5189
  7723   00196C                     l5183:
  7724   00196C  90D8               	bcf	status,0,c
  7725   00196E  3626               	rlcf	___flmul@prod^0,f,c
  7726   001970  3627               	rlcf	(___flmul@prod+1)^0,f,c
  7727   001972  3628               	rlcf	(___flmul@prod+2)^0,f,c
  7728   001974  3629               	rlcf	(___flmul@prod+3)^0,f,c
  7729   001976  AE24               	btfss	(___flmul@grs+3)^0,7,c
  7730   001978  EFC0  F00C         	goto	u5221
  7731   00197C  EFC2  F00C         	goto	u5220
  7732   001980                     u5221:
  7733   001980  EFC3  F00C         	goto	l1141
  7734   001984                     u5220:
  7735   001984  8026               	bsf	___flmul@prod^0,0,c
  7736   001986                     l1141:
  7737   001986  90D8               	bcf	status,0,c
  7738   001988  3621               	rlcf	___flmul@grs^0,f,c
  7739   00198A  3622               	rlcf	(___flmul@grs+1)^0,f,c
  7740   00198C  3623               	rlcf	(___flmul@grs+2)^0,f,c
  7741   00198E  3624               	rlcf	(___flmul@grs+3)^0,f,c
  7742   001990  062A               	decf	___flmul@temp^0,f,c
  7743   001992  A0D8               	btfss	status,0,c
  7744   001994  062B               	decf	(___flmul@temp+1)^0,f,c
  7745   001996                     l5189:
  7746   001996  AE28               	btfss	(___flmul@prod+2)^0,7,c
  7747   001998  EFD0  F00C         	goto	u5231
  7748   00199C  EFD2  F00C         	goto	u5230
  7749   0019A0                     u5231:
  7750   0019A0  EFB6  F00C         	goto	l5183
  7751   0019A4                     u5230:
  7752   0019A4  0E00               	movlw	0
  7753   0019A6  6E20               	movwf	___flmul@aexp^0,c
  7754   0019A8  AE24               	btfss	(___flmul@grs+3)^0,7,c
  7755   0019AA  EFD9  F00C         	goto	u5241
  7756   0019AE  EFDB  F00C         	goto	u5240
  7757   0019B2                     u5241:
  7758   0019B2  EFFF  F00C         	goto	l1143
  7759   0019B6                     u5240:
  7760   0019B6  0EFF               	movlw	255
  7761   0019B8  1421               	andwf	___flmul@grs^0,w,c
  7762   0019BA  6E1B               	movwf	??___flmul^0,c
  7763   0019BC  0EFF               	movlw	255
  7764   0019BE  1422               	andwf	(___flmul@grs+1)^0,w,c
  7765   0019C0  6E1C               	movwf	(??___flmul+1)^0,c
  7766   0019C2  0EFF               	movlw	255
  7767   0019C4  1423               	andwf	(___flmul@grs+2)^0,w,c
  7768   0019C6  6E1D               	movwf	(??___flmul+2)^0,c
  7769   0019C8  0E7F               	movlw	127
  7770   0019CA  1424               	andwf	(___flmul@grs+3)^0,w,c
  7771   0019CC  6E1E               	movwf	(??___flmul+3)^0,c
  7772   0019CE  501B               	movf	??___flmul^0,w,c
  7773   0019D0  101C               	iorwf	(??___flmul+1)^0,w,c
  7774   0019D2  101D               	iorwf	(??___flmul+2)^0,w,c
  7775   0019D4  101E               	iorwf	(??___flmul+3)^0,w,c
  7776   0019D6  B4D8               	btfsc	status,2,c
  7777   0019D8  EFF0  F00C         	goto	u5251
  7778   0019DC  EFF2  F00C         	goto	u5250
  7779   0019E0                     u5251:
  7780   0019E0  EFF6  F00C         	goto	l1144
  7781   0019E4                     u5250:
  7782   0019E4                     l5197:
  7783   0019E4  0E01               	movlw	1
  7784   0019E6  6E20               	movwf	___flmul@aexp^0,c
  7785   0019E8  EFFF  F00C         	goto	l1143
  7786   0019EC                     l1144:
  7787   0019EC  A026               	btfss	___flmul@prod^0,0,c
  7788   0019EE  EFFB  F00C         	goto	u5261
  7789   0019F2  EFFD  F00C         	goto	u5260
  7790   0019F6                     u5261:
  7791   0019F6  EFFF  F00C         	goto	l1143
  7792   0019FA                     u5260:
  7793   0019FA  EFF2  F00C         	goto	l5197
  7794   0019FE                     l1143:
  7795   0019FE  5020               	movf	___flmul@aexp^0,w,c
  7796   001A00  B4D8               	btfsc	status,2,c
  7797   001A02  EF05  F00D         	goto	u5271
  7798   001A06  EF07  F00D         	goto	u5270
  7799   001A0A                     u5271:
  7800   001A0A  EF2B  F00D         	goto	l5209
  7801   001A0E                     u5270:
  7802   001A0E  0E01               	movlw	1
  7803   001A10  2626               	addwf	___flmul@prod^0,f,c
  7804   001A12  0E00               	movlw	0
  7805   001A14  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7806   001A16  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7807   001A18  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7808   001A1A  A029               	btfss	(___flmul@prod+3)^0,0,c
  7809   001A1C  EF12  F00D         	goto	u5281
  7810   001A20  EF14  F00D         	goto	u5280
  7811   001A24                     u5281:
  7812   001A24  EF2B  F00D         	goto	l5209
  7813   001A28                     u5280:
  7814   001A28  C026  F01B         	movff	___flmul@prod,??___flmul
  7815   001A2C  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  7816   001A30  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  7817   001A34  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  7818   001A38  341E               	rlcf	(??___flmul+3)^0,w,c
  7819   001A3A  321E               	rrcf	(??___flmul+3)^0,f,c
  7820   001A3C  321D               	rrcf	(??___flmul+2)^0,f,c
  7821   001A3E  321C               	rrcf	(??___flmul+1)^0,f,c
  7822   001A40  321B               	rrcf	??___flmul^0,f,c
  7823   001A42  C01B  F026         	movff	??___flmul,___flmul@prod
  7824   001A46  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  7825   001A4A  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  7826   001A4E  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  7827   001A52  4A2A               	infsnz	___flmul@temp^0,f,c
  7828   001A54  2A2B               	incf	(___flmul@temp+1)^0,f,c
  7829   001A56                     l5209:
  7830   001A56  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  7831   001A58  EF36  F00D         	goto	u5291
  7832   001A5C  502B               	movf	(___flmul@temp+1)^0,w,c
  7833   001A5E  E108               	bnz	u5290
  7834   001A60  282A               	incf	___flmul@temp^0,w,c
  7835   001A62  A0D8               	btfss	status,0,c
  7836   001A64  EF36  F00D         	goto	u5291
  7837   001A68  EF38  F00D         	goto	u5290
  7838   001A6C                     u5291:
  7839   001A6C  EF42  F00D         	goto	l5213
  7840   001A70                     u5290:
  7841   001A70  0E00               	movlw	0
  7842   001A72  6E26               	movwf	___flmul@prod^0,c
  7843   001A74  0E00               	movlw	0
  7844   001A76  6E27               	movwf	(___flmul@prod+1)^0,c
  7845   001A78  0E80               	movlw	128
  7846   001A7A  6E28               	movwf	(___flmul@prod+2)^0,c
  7847   001A7C  0E7F               	movlw	127
  7848   001A7E  6E29               	movwf	(___flmul@prod+3)^0,c
  7849   001A80  EF70  F00D         	goto	l5225
  7850   001A84                     l5213:
  7851   001A84  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  7852   001A86  EF4F  F00D         	goto	u5300
  7853   001A8A  502B               	movf	(___flmul@temp+1)^0,w,c
  7854   001A8C  E106               	bnz	u5301
  7855   001A8E  042A               	decf	___flmul@temp^0,w,c
  7856   001A90  B0D8               	btfsc	status,0,c
  7857   001A92  EF4D  F00D         	goto	u5301
  7858   001A96  EF4F  F00D         	goto	u5300
  7859   001A9A                     u5301:
  7860   001A9A  EF5B  F00D         	goto	l1151
  7861   001A9E                     u5300:
  7862   001A9E  0E00               	movlw	0
  7863   001AA0  6E26               	movwf	___flmul@prod^0,c
  7864   001AA2  0E00               	movlw	0
  7865   001AA4  6E27               	movwf	(___flmul@prod+1)^0,c
  7866   001AA6  0E00               	movlw	0
  7867   001AA8  6E28               	movwf	(___flmul@prod+2)^0,c
  7868   001AAA  0E00               	movlw	0
  7869   001AAC  6E29               	movwf	(___flmul@prod+3)^0,c
  7870   001AAE  0E00               	movlw	0
  7871   001AB0  6E1F               	movwf	___flmul@sign^0,c
  7872   001AB2  EF70  F00D         	goto	l5225
  7873   001AB6                     l1151:
  7874   001AB6  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  7875   001ABA  0EFF               	movlw	255
  7876   001ABC  1626               	andwf	___flmul@prod^0,f,c
  7877   001ABE  0EFF               	movlw	255
  7878   001AC0  1627               	andwf	(___flmul@prod+1)^0,f,c
  7879   001AC2  0E7F               	movlw	127
  7880   001AC4  1628               	andwf	(___flmul@prod+2)^0,f,c
  7881   001AC6  0E00               	movlw	0
  7882   001AC8  1629               	andwf	(___flmul@prod+3)^0,f,c
  7883   001ACA  A025               	btfss	___flmul@bexp^0,0,c
  7884   001ACC  EF6A  F00D         	goto	u5311
  7885   001AD0  EF6C  F00D         	goto	u5310
  7886   001AD4                     u5311:
  7887   001AD4  EF6D  F00D         	goto	l5223
  7888   001AD8                     u5310:
  7889   001AD8  8E28               	bsf	(___flmul@prod+2)^0,7,c
  7890   001ADA                     l5223:
  7891   001ADA  90D8               	bcf	status,0,c
  7892   001ADC  3025               	rrcf	___flmul@bexp^0,w,c
  7893   001ADE  6E29               	movwf	(___flmul@prod+3)^0,c
  7894   001AE0                     l5225:
  7895   001AE0  501F               	movf	___flmul@sign^0,w,c
  7896   001AE2  1229               	iorwf	(___flmul@prod+3)^0,f,c
  7897   001AE4  C026  F013         	movff	___flmul@prod,?___flmul
  7898   001AE8  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  7899   001AEC  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  7900   001AF0  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  7901   001AF4                     l1138:
  7902   001AF4  0012               	return		;funcret
  7903   001AF6                     __end_of___flmul:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function ___flge *****************
  7907 ;; Defined at:
  7908 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  ff1             4   43[COMRAM] unsigned char 
  7911 ;;  ff2             4   47[COMRAM] unsigned char 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;		None
  7914 ;; Return value:  Size  Location     Type
  7915 ;;		None               void
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7923 ;;      Params:         8       0       0       0       0       0       0       0       0
  7924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7925 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7926 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7927 ;;Total ram usage:       12 bytes
  7928 ;; Hardware stack levels used: 1
  7929 ;; Hardware stack levels required when called: 4
  7930 ;; This function calls:
  7931 ;;		Nothing
  7932 ;; This function is called by:
  7933 ;;		_get_corriente_AC
  7934 ;;		_trip_protec_current
  7935 ;;		_efgtoa
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text38
  7940   002BFE                     __ptext38:
  7941                           	callstack 0
  7942   002BFE                     ___flge:
  7943                           	callstack 25
  7944   002BFE  0E00               	movlw	0
  7945   002C00  142C               	andwf	___flge@ff1^0,w,c
  7946   002C02  6E34               	movwf	??___flge^0,c
  7947   002C04  0E00               	movlw	0
  7948   002C06  142D               	andwf	(___flge@ff1+1)^0,w,c
  7949   002C08  6E35               	movwf	(??___flge+1)^0,c
  7950   002C0A  0E80               	movlw	128
  7951   002C0C  142E               	andwf	(___flge@ff1+2)^0,w,c
  7952   002C0E  6E36               	movwf	(??___flge+2)^0,c
  7953   002C10  0E7F               	movlw	127
  7954   002C12  142F               	andwf	(___flge@ff1+3)^0,w,c
  7955   002C14  6E37               	movwf	(??___flge+3)^0,c
  7956   002C16  5034               	movf	??___flge^0,w,c
  7957   002C18  1035               	iorwf	(??___flge+1)^0,w,c
  7958   002C1A  1036               	iorwf	(??___flge+2)^0,w,c
  7959   002C1C  1037               	iorwf	(??___flge+3)^0,w,c
  7960   002C1E  A4D8               	btfss	status,2,c
  7961   002C20  EF14  F016         	goto	u5351
  7962   002C24  EF16  F016         	goto	u5350
  7963   002C28                     u5351:
  7964   002C28  EF1E  F016         	goto	l5257
  7965   002C2C                     u5350:
  7966   002C2C  0E00               	movlw	0
  7967   002C2E  6E2C               	movwf	___flge@ff1^0,c
  7968   002C30  0E00               	movlw	0
  7969   002C32  6E2D               	movwf	(___flge@ff1+1)^0,c
  7970   002C34  0E00               	movlw	0
  7971   002C36  6E2E               	movwf	(___flge@ff1+2)^0,c
  7972   002C38  0E00               	movlw	0
  7973   002C3A  6E2F               	movwf	(___flge@ff1+3)^0,c
  7974   002C3C                     l5257:
  7975   002C3C  0E00               	movlw	0
  7976   002C3E  1430               	andwf	___flge@ff2^0,w,c
  7977   002C40  6E34               	movwf	??___flge^0,c
  7978   002C42  0E00               	movlw	0
  7979   002C44  1431               	andwf	(___flge@ff2+1)^0,w,c
  7980   002C46  6E35               	movwf	(??___flge+1)^0,c
  7981   002C48  0E80               	movlw	128
  7982   002C4A  1432               	andwf	(___flge@ff2+2)^0,w,c
  7983   002C4C  6E36               	movwf	(??___flge+2)^0,c
  7984   002C4E  0E7F               	movlw	127
  7985   002C50  1433               	andwf	(___flge@ff2+3)^0,w,c
  7986   002C52  6E37               	movwf	(??___flge+3)^0,c
  7987   002C54  5034               	movf	??___flge^0,w,c
  7988   002C56  1035               	iorwf	(??___flge+1)^0,w,c
  7989   002C58  1036               	iorwf	(??___flge+2)^0,w,c
  7990   002C5A  1037               	iorwf	(??___flge+3)^0,w,c
  7991   002C5C  A4D8               	btfss	status,2,c
  7992   002C5E  EF33  F016         	goto	u5361
  7993   002C62  EF35  F016         	goto	u5360
  7994   002C66                     u5361:
  7995   002C66  EF3D  F016         	goto	l5261
  7996   002C6A                     u5360:
  7997   002C6A  0E00               	movlw	0
  7998   002C6C  6E30               	movwf	___flge@ff2^0,c
  7999   002C6E  0E00               	movlw	0
  8000   002C70  6E31               	movwf	(___flge@ff2+1)^0,c
  8001   002C72  0E00               	movlw	0
  8002   002C74  6E32               	movwf	(___flge@ff2+2)^0,c
  8003   002C76  0E00               	movlw	0
  8004   002C78  6E33               	movwf	(___flge@ff2+3)^0,c
  8005   002C7A                     l5261:
  8006   002C7A  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  8007   002C7C  EF42  F016         	goto	u5371
  8008   002C80  EF44  F016         	goto	u5370
  8009   002C84                     u5371:
  8010   002C84  EF4D  F016         	goto	l5265
  8011   002C88                     u5370:
  8012   002C88  6C2C               	negf	___flge@ff1^0,c
  8013   002C8A  1E2D               	comf	(___flge@ff1+1)^0,f,c
  8014   002C8C  B0D8               	btfsc	status,0,c
  8015   002C8E  2A2D               	incf	(___flge@ff1+1)^0,f,c
  8016   002C90  1E2E               	comf	(___flge@ff1+2)^0,f,c
  8017   002C92  B0D8               	btfsc	status,0,c
  8018   002C94  2A2E               	incf	(___flge@ff1+2)^0,f,c
  8019   002C96  0E80               	movlw	128
  8020   002C98  562F               	subfwb	(___flge@ff1+3)^0,f,c
  8021   002C9A                     l5265:
  8022   002C9A  AE33               	btfss	(___flge@ff2+3)^0,7,c
  8023   002C9C  EF52  F016         	goto	u5381
  8024   002CA0  EF54  F016         	goto	u5380
  8025   002CA4                     u5381:
  8026   002CA4  EF5D  F016         	goto	l785
  8027   002CA8                     u5380:
  8028   002CA8  6C30               	negf	___flge@ff2^0,c
  8029   002CAA  1E31               	comf	(___flge@ff2+1)^0,f,c
  8030   002CAC  B0D8               	btfsc	status,0,c
  8031   002CAE  2A31               	incf	(___flge@ff2+1)^0,f,c
  8032   002CB0  1E32               	comf	(___flge@ff2+2)^0,f,c
  8033   002CB2  B0D8               	btfsc	status,0,c
  8034   002CB4  2A32               	incf	(___flge@ff2+2)^0,f,c
  8035   002CB6  0E80               	movlw	128
  8036   002CB8  5633               	subfwb	(___flge@ff2+3)^0,f,c
  8037   002CBA                     l785:
  8038   002CBA  0E00               	movlw	0
  8039   002CBC  1A2C               	xorwf	___flge@ff1^0,f,c
  8040   002CBE  0E00               	movlw	0
  8041   002CC0  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  8042   002CC2  0E00               	movlw	0
  8043   002CC4  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  8044   002CC6  0E80               	movlw	128
  8045   002CC8  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  8046   002CCA  0E00               	movlw	0
  8047   002CCC  1A30               	xorwf	___flge@ff2^0,f,c
  8048   002CCE  0E00               	movlw	0
  8049   002CD0  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  8050   002CD2  0E00               	movlw	0
  8051   002CD4  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  8052   002CD6  0E80               	movlw	128
  8053   002CD8  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  8054   002CDA  5030               	movf	___flge@ff2^0,w,c
  8055   002CDC  5C2C               	subwf	___flge@ff1^0,w,c
  8056   002CDE  5031               	movf	(___flge@ff2+1)^0,w,c
  8057   002CE0  582D               	subwfb	(___flge@ff1+1)^0,w,c
  8058   002CE2  5032               	movf	(___flge@ff2+2)^0,w,c
  8059   002CE4  582E               	subwfb	(___flge@ff1+2)^0,w,c
  8060   002CE6  5033               	movf	(___flge@ff2+3)^0,w,c
  8061   002CE8  582F               	subwfb	(___flge@ff1+3)^0,w,c
  8062   002CEA  B0D8               	btfsc	status,0,c
  8063   002CEC  EF7A  F016         	goto	u5391
  8064   002CF0  EF7C  F016         	goto	u5390
  8065   002CF4                     u5391:
  8066   002CF4  EF7F  F016         	goto	l5271
  8067   002CF8                     u5390:
  8068   002CF8  90D8               	bcf	status,0,c
  8069   002CFA  EF80  F016         	goto	l790
  8070   002CFE                     l5271:
  8071   002CFE  80D8               	bsf	status,0,c
  8072   002D00                     l790:
  8073   002D00  0012               	return		;funcret
  8074   002D02                     __end_of___flge:
  8075                           	callstack 0
  8076                           
  8077 ;; *************** function ___fldiv *****************
  8078 ;; Defined at:
  8079 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  b               4   51[COMRAM] unsigned char 
  8082 ;;  a               4   55[COMRAM] unsigned char 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  grs             4   70[COMRAM] unsigned long 
  8085 ;;  rem             4   63[COMRAM] unsigned long 
  8086 ;;  new_exp         2   68[COMRAM] short 
  8087 ;;  aexp            1   75[COMRAM] unsigned char 
  8088 ;;  bexp            1   74[COMRAM] unsigned char 
  8089 ;;  sign            1   67[COMRAM] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  4   51[COMRAM] unsigned char 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8099 ;;      Params:         8       0       0       0       0       0       0       0       0
  8100 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8101 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8102 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8103 ;;Total ram usage:       25 bytes
  8104 ;; Hardware stack levels used: 1
  8105 ;; Hardware stack levels required when called: 4
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		_get_corriente_AC
  8110 ;;		_main
  8111 ;;		_efgtoa
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text39
  8116   001AF6                     __ptext39:
  8117                           	callstack 0
  8118   001AF6                     ___fldiv:
  8119                           	callstack 22
  8120   001AF6  5037               	movf	(___fldiv@b+3)^0,w,c
  8121   001AF8  0B80               	andlw	128
  8122   001AFA  6E44               	movwf	___fldiv@sign^0,c
  8123   001AFC  5037               	movf	(___fldiv@b+3)^0,w,c
  8124   001AFE  2437               	addwf	(___fldiv@b+3)^0,w,c
  8125   001B00  6E4B               	movwf	___fldiv@bexp^0,c
  8126   001B02  AE36               	btfss	(___fldiv@b+2)^0,7,c
  8127   001B04  EF86  F00D         	goto	u4901
  8128   001B08  EF88  F00D         	goto	u4900
  8129   001B0C                     u4901:
  8130   001B0C  EF89  F00D         	goto	l4969
  8131   001B10                     u4900:
  8132   001B10  804B               	bsf	___fldiv@bexp^0,0,c
  8133   001B12                     l4969:
  8134   001B12  504B               	movf	___fldiv@bexp^0,w,c
  8135   001B14  B4D8               	btfsc	status,2,c
  8136   001B16  EF8F  F00D         	goto	u4911
  8137   001B1A  EF91  F00D         	goto	u4910
  8138   001B1E                     u4911:
  8139   001B1E  EFA6  F00D         	goto	l4979
  8140   001B22                     u4910:
  8141   001B22  284B               	incf	___fldiv@bexp^0,w,c
  8142   001B24  A4D8               	btfss	status,2,c
  8143   001B26  EF97  F00D         	goto	u4921
  8144   001B2A  EF99  F00D         	goto	u4920
  8145   001B2E                     u4921:
  8146   001B2E  EFA1  F00D         	goto	l4975
  8147   001B32                     u4920:
  8148   001B32  0E00               	movlw	0
  8149   001B34  6E34               	movwf	___fldiv@b^0,c
  8150   001B36  0E00               	movlw	0
  8151   001B38  6E35               	movwf	(___fldiv@b+1)^0,c
  8152   001B3A  0E00               	movlw	0
  8153   001B3C  6E36               	movwf	(___fldiv@b+2)^0,c
  8154   001B3E  0E00               	movlw	0
  8155   001B40  6E37               	movwf	(___fldiv@b+3)^0,c
  8156   001B42                     l4975:
  8157   001B42  8E36               	bsf	(___fldiv@b+2)^0,7,c
  8158   001B44  0E00               	movlw	0
  8159   001B46  6E37               	movwf	(___fldiv@b+3)^0,c
  8160   001B48  EFAE  F00D         	goto	l4981
  8161   001B4C                     l4979:
  8162   001B4C  0E00               	movlw	0
  8163   001B4E  6E34               	movwf	___fldiv@b^0,c
  8164   001B50  0E00               	movlw	0
  8165   001B52  6E35               	movwf	(___fldiv@b+1)^0,c
  8166   001B54  0E00               	movlw	0
  8167   001B56  6E36               	movwf	(___fldiv@b+2)^0,c
  8168   001B58  0E00               	movlw	0
  8169   001B5A  6E37               	movwf	(___fldiv@b+3)^0,c
  8170   001B5C                     l4981:
  8171   001B5C  503B               	movf	(___fldiv@a+3)^0,w,c
  8172   001B5E  0B80               	andlw	128
  8173   001B60  1A44               	xorwf	___fldiv@sign^0,f,c
  8174   001B62  503B               	movf	(___fldiv@a+3)^0,w,c
  8175   001B64  243B               	addwf	(___fldiv@a+3)^0,w,c
  8176   001B66  6E4C               	movwf	___fldiv@aexp^0,c
  8177   001B68  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  8178   001B6A  EFB9  F00D         	goto	u4931
  8179   001B6E  EFBB  F00D         	goto	u4930
  8180   001B72                     u4931:
  8181   001B72  EFBC  F00D         	goto	l4989
  8182   001B76                     u4930:
  8183   001B76  804C               	bsf	___fldiv@aexp^0,0,c
  8184   001B78                     l4989:
  8185   001B78  504C               	movf	___fldiv@aexp^0,w,c
  8186   001B7A  B4D8               	btfsc	status,2,c
  8187   001B7C  EFC2  F00D         	goto	u4941
  8188   001B80  EFC4  F00D         	goto	u4940
  8189   001B84                     u4941:
  8190   001B84  EFD9  F00D         	goto	l4999
  8191   001B88                     u4940:
  8192   001B88  284C               	incf	___fldiv@aexp^0,w,c
  8193   001B8A  A4D8               	btfss	status,2,c
  8194   001B8C  EFCA  F00D         	goto	u4951
  8195   001B90  EFCC  F00D         	goto	u4950
  8196   001B94                     u4951:
  8197   001B94  EFD4  F00D         	goto	l4995
  8198   001B98                     u4950:
  8199   001B98  0E00               	movlw	0
  8200   001B9A  6E38               	movwf	___fldiv@a^0,c
  8201   001B9C  0E00               	movlw	0
  8202   001B9E  6E39               	movwf	(___fldiv@a+1)^0,c
  8203   001BA0  0E00               	movlw	0
  8204   001BA2  6E3A               	movwf	(___fldiv@a+2)^0,c
  8205   001BA4  0E00               	movlw	0
  8206   001BA6  6E3B               	movwf	(___fldiv@a+3)^0,c
  8207   001BA8                     l4995:
  8208   001BA8  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  8209   001BAA  0E00               	movlw	0
  8210   001BAC  6E3B               	movwf	(___fldiv@a+3)^0,c
  8211   001BAE  EFE1  F00D         	goto	l5001
  8212   001BB2                     l4999:
  8213   001BB2  0E00               	movlw	0
  8214   001BB4  6E38               	movwf	___fldiv@a^0,c
  8215   001BB6  0E00               	movlw	0
  8216   001BB8  6E39               	movwf	(___fldiv@a+1)^0,c
  8217   001BBA  0E00               	movlw	0
  8218   001BBC  6E3A               	movwf	(___fldiv@a+2)^0,c
  8219   001BBE  0E00               	movlw	0
  8220   001BC0  6E3B               	movwf	(___fldiv@a+3)^0,c
  8221   001BC2                     l5001:
  8222   001BC2  5038               	movf	___fldiv@a^0,w,c
  8223   001BC4  1039               	iorwf	(___fldiv@a+1)^0,w,c
  8224   001BC6  103A               	iorwf	(___fldiv@a+2)^0,w,c
  8225   001BC8  103B               	iorwf	(___fldiv@a+3)^0,w,c
  8226   001BCA  A4D8               	btfss	status,2,c
  8227   001BCC  EFEA  F00D         	goto	u4961
  8228   001BD0  EFEC  F00D         	goto	u4960
  8229   001BD4                     u4961:
  8230   001BD4  EF04  F00E         	goto	l5013
  8231   001BD8                     u4960:
  8232   001BD8  0E00               	movlw	0
  8233   001BDA  6E34               	movwf	___fldiv@b^0,c
  8234   001BDC  0E00               	movlw	0
  8235   001BDE  6E35               	movwf	(___fldiv@b+1)^0,c
  8236   001BE0  0E00               	movlw	0
  8237   001BE2  6E36               	movwf	(___fldiv@b+2)^0,c
  8238   001BE4  0E00               	movlw	0
  8239   001BE6  6E37               	movwf	(___fldiv@b+3)^0,c
  8240   001BE8  0E80               	movlw	128
  8241   001BEA  1236               	iorwf	(___fldiv@b+2)^0,f,c
  8242   001BEC  0E7F               	movlw	127
  8243   001BEE  1237               	iorwf	(___fldiv@b+3)^0,f,c
  8244   001BF0                     l5007:
  8245   001BF0  5044               	movf	___fldiv@sign^0,w,c
  8246   001BF2  1237               	iorwf	(___fldiv@b+3)^0,f,c
  8247   001BF4  C034  F034         	movff	___fldiv@b,?___fldiv
  8248   001BF8  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  8249   001BFC  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  8250   001C00  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  8251   001C04  EF47  F00F         	goto	l1102
  8252   001C08                     l5013:
  8253   001C08  504B               	movf	___fldiv@bexp^0,w,c
  8254   001C0A  A4D8               	btfss	status,2,c
  8255   001C0C  EF0A  F00E         	goto	u4971
  8256   001C10  EF0C  F00E         	goto	u4970
  8257   001C14                     u4971:
  8258   001C14  EF16  F00E         	goto	l5021
  8259   001C18                     u4970:
  8260   001C18  0E00               	movlw	0
  8261   001C1A  6E34               	movwf	?___fldiv^0,c
  8262   001C1C  0E00               	movlw	0
  8263   001C1E  6E35               	movwf	(?___fldiv+1)^0,c
  8264   001C20  0E00               	movlw	0
  8265   001C22  6E36               	movwf	(?___fldiv+2)^0,c
  8266   001C24  0E00               	movlw	0
  8267   001C26  6E37               	movwf	(?___fldiv+3)^0,c
  8268   001C28  EF47  F00F         	goto	l1102
  8269   001C2C                     l5021:
  8270   001C2C  504C               	movf	___fldiv@aexp^0,w,c
  8271   001C2E  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  8272   001C32  6A3D               	clrf	(??___fldiv+1)^0,c
  8273   001C34  5E3C               	subwf	??___fldiv^0,f,c
  8274   001C36  0E00               	movlw	0
  8275   001C38  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  8276   001C3A  0E7F               	movlw	127
  8277   001C3C  243C               	addwf	??___fldiv^0,w,c
  8278   001C3E  6E45               	movwf	___fldiv@new_exp^0,c
  8279   001C40  0E00               	movlw	0
  8280   001C42  203D               	addwfc	(??___fldiv+1)^0,w,c
  8281   001C44  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8282   001C46  C034  F040         	movff	___fldiv@b,___fldiv@rem
  8283   001C4A  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  8284   001C4E  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  8285   001C52  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  8286   001C56  0E00               	movlw	0
  8287   001C58  6E34               	movwf	___fldiv@b^0,c
  8288   001C5A  0E00               	movlw	0
  8289   001C5C  6E35               	movwf	(___fldiv@b+1)^0,c
  8290   001C5E  0E00               	movlw	0
  8291   001C60  6E36               	movwf	(___fldiv@b+2)^0,c
  8292   001C62  0E00               	movlw	0
  8293   001C64  6E37               	movwf	(___fldiv@b+3)^0,c
  8294   001C66  0E00               	movlw	0
  8295   001C68  6E47               	movwf	___fldiv@grs^0,c
  8296   001C6A  0E00               	movlw	0
  8297   001C6C  6E48               	movwf	(___fldiv@grs+1)^0,c
  8298   001C6E  0E00               	movlw	0
  8299   001C70  6E49               	movwf	(___fldiv@grs+2)^0,c
  8300   001C72  0E00               	movlw	0
  8301   001C74  6E4A               	movwf	(___fldiv@grs+3)^0,c
  8302   001C76  0E00               	movlw	0
  8303   001C78  6E4C               	movwf	___fldiv@aexp^0,c
  8304   001C7A  EF77  F00E         	goto	l1104
  8305   001C7E                     l5031:
  8306   001C7E  504C               	movf	___fldiv@aexp^0,w,c
  8307   001C80  B4D8               	btfsc	status,2,c
  8308   001C82  EF45  F00E         	goto	u4981
  8309   001C86  EF47  F00E         	goto	u4980
  8310   001C8A                     u4981:
  8311   001C8A  EF5E  F00E         	goto	l5039
  8312   001C8E                     u4980:
  8313   001C8E  90D8               	bcf	status,0,c
  8314   001C90  3640               	rlcf	___fldiv@rem^0,f,c
  8315   001C92  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  8316   001C94  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  8317   001C96  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  8318   001C98  90D8               	bcf	status,0,c
  8319   001C9A  3634               	rlcf	___fldiv@b^0,f,c
  8320   001C9C  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8321   001C9E  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8322   001CA0  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8323   001CA2  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8324   001CA4  EF56  F00E         	goto	u4991
  8325   001CA8  EF58  F00E         	goto	u4990
  8326   001CAC                     u4991:
  8327   001CAC  EF59  F00E         	goto	l1107
  8328   001CB0                     u4990:
  8329   001CB0  8034               	bsf	___fldiv@b^0,0,c
  8330   001CB2                     l1107:
  8331   001CB2  90D8               	bcf	status,0,c
  8332   001CB4  3647               	rlcf	___fldiv@grs^0,f,c
  8333   001CB6  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8334   001CB8  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8335   001CBA  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8336   001CBC                     l5039:
  8337   001CBC  5038               	movf	___fldiv@a^0,w,c
  8338   001CBE  5C40               	subwf	___fldiv@rem^0,w,c
  8339   001CC0  5039               	movf	(___fldiv@a+1)^0,w,c
  8340   001CC2  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  8341   001CC4  503A               	movf	(___fldiv@a+2)^0,w,c
  8342   001CC6  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  8343   001CC8  503B               	movf	(___fldiv@a+3)^0,w,c
  8344   001CCA  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  8345   001CCC  A0D8               	btfss	status,0,c
  8346   001CCE  EF6B  F00E         	goto	u5001
  8347   001CD2  EF6D  F00E         	goto	u5000
  8348   001CD6                     u5001:
  8349   001CD6  EF76  F00E         	goto	l5045
  8350   001CDA                     u5000:
  8351   001CDA  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  8352   001CDC  5038               	movf	___fldiv@a^0,w,c
  8353   001CDE  5E40               	subwf	___fldiv@rem^0,f,c
  8354   001CE0  5039               	movf	(___fldiv@a+1)^0,w,c
  8355   001CE2  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  8356   001CE4  503A               	movf	(___fldiv@a+2)^0,w,c
  8357   001CE6  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  8358   001CE8  503B               	movf	(___fldiv@a+3)^0,w,c
  8359   001CEA  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  8360   001CEC                     l5045:
  8361   001CEC  2A4C               	incf	___fldiv@aexp^0,f,c
  8362   001CEE                     l1104:
  8363   001CEE  0E19               	movlw	25
  8364   001CF0  644C               	cpfsgt	___fldiv@aexp^0,c
  8365   001CF2  EF7D  F00E         	goto	u5011
  8366   001CF6  EF7F  F00E         	goto	u5010
  8367   001CFA                     u5011:
  8368   001CFA  EF3F  F00E         	goto	l5031
  8369   001CFE                     u5010:
  8370   001CFE  5040               	movf	___fldiv@rem^0,w,c
  8371   001D00  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  8372   001D02  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  8373   001D04  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  8374   001D06  B4D8               	btfsc	status,2,c
  8375   001D08  EF88  F00E         	goto	u5021
  8376   001D0C  EF8A  F00E         	goto	u5020
  8377   001D10                     u5021:
  8378   001D10  EFA2  F00E         	goto	l5057
  8379   001D14                     u5020:
  8380   001D14  8047               	bsf	___fldiv@grs^0,0,c
  8381   001D16  EFA2  F00E         	goto	l5057
  8382   001D1A                     l5051:
  8383   001D1A  90D8               	bcf	status,0,c
  8384   001D1C  3634               	rlcf	___fldiv@b^0,f,c
  8385   001D1E  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8386   001D20  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8387   001D22  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8388   001D24  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8389   001D26  EF97  F00E         	goto	u5031
  8390   001D2A  EF99  F00E         	goto	u5030
  8391   001D2E                     u5031:
  8392   001D2E  EF9A  F00E         	goto	l1113
  8393   001D32                     u5030:
  8394   001D32  8034               	bsf	___fldiv@b^0,0,c
  8395   001D34                     l1113:
  8396   001D34  90D8               	bcf	status,0,c
  8397   001D36  3647               	rlcf	___fldiv@grs^0,f,c
  8398   001D38  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8399   001D3A  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8400   001D3C  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8401   001D3E  0645               	decf	___fldiv@new_exp^0,f,c
  8402   001D40  A0D8               	btfss	status,0,c
  8403   001D42  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  8404   001D44                     l5057:
  8405   001D44  AE36               	btfss	(___fldiv@b+2)^0,7,c
  8406   001D46  EFA7  F00E         	goto	u5041
  8407   001D4A  EFA9  F00E         	goto	u5040
  8408   001D4E                     u5041:
  8409   001D4E  EF8D  F00E         	goto	l5051
  8410   001D52                     u5040:
  8411   001D52  0E00               	movlw	0
  8412   001D54  6E4C               	movwf	___fldiv@aexp^0,c
  8413   001D56  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8414   001D58  EFB0  F00E         	goto	u5051
  8415   001D5C  EFB2  F00E         	goto	u5050
  8416   001D60                     u5051:
  8417   001D60  EFD6  F00E         	goto	l1115
  8418   001D64                     u5050:
  8419   001D64  0EFF               	movlw	255
  8420   001D66  1447               	andwf	___fldiv@grs^0,w,c
  8421   001D68  6E3C               	movwf	??___fldiv^0,c
  8422   001D6A  0EFF               	movlw	255
  8423   001D6C  1448               	andwf	(___fldiv@grs+1)^0,w,c
  8424   001D6E  6E3D               	movwf	(??___fldiv+1)^0,c
  8425   001D70  0EFF               	movlw	255
  8426   001D72  1449               	andwf	(___fldiv@grs+2)^0,w,c
  8427   001D74  6E3E               	movwf	(??___fldiv+2)^0,c
  8428   001D76  0E7F               	movlw	127
  8429   001D78  144A               	andwf	(___fldiv@grs+3)^0,w,c
  8430   001D7A  6E3F               	movwf	(??___fldiv+3)^0,c
  8431   001D7C  503C               	movf	??___fldiv^0,w,c
  8432   001D7E  103D               	iorwf	(??___fldiv+1)^0,w,c
  8433   001D80  103E               	iorwf	(??___fldiv+2)^0,w,c
  8434   001D82  103F               	iorwf	(??___fldiv+3)^0,w,c
  8435   001D84  B4D8               	btfsc	status,2,c
  8436   001D86  EFC7  F00E         	goto	u5061
  8437   001D8A  EFC9  F00E         	goto	u5060
  8438   001D8E                     u5061:
  8439   001D8E  EFCD  F00E         	goto	l1116
  8440   001D92                     u5060:
  8441   001D92                     l5065:
  8442   001D92  0E01               	movlw	1
  8443   001D94  6E4C               	movwf	___fldiv@aexp^0,c
  8444   001D96  EFD6  F00E         	goto	l1115
  8445   001D9A                     l1116:
  8446   001D9A  A034               	btfss	___fldiv@b^0,0,c
  8447   001D9C  EFD2  F00E         	goto	u5071
  8448   001DA0  EFD4  F00E         	goto	u5070
  8449   001DA4                     u5071:
  8450   001DA4  EFD6  F00E         	goto	l1115
  8451   001DA8                     u5070:
  8452   001DA8  EFC9  F00E         	goto	l5065
  8453   001DAC                     l1115:
  8454   001DAC  504C               	movf	___fldiv@aexp^0,w,c
  8455   001DAE  B4D8               	btfsc	status,2,c
  8456   001DB0  EFDC  F00E         	goto	u5081
  8457   001DB4  EFDE  F00E         	goto	u5080
  8458   001DB8                     u5081:
  8459   001DB8  EF02  F00F         	goto	l5077
  8460   001DBC                     u5080:
  8461   001DBC  0E01               	movlw	1
  8462   001DBE  2634               	addwf	___fldiv@b^0,f,c
  8463   001DC0  0E00               	movlw	0
  8464   001DC2  2235               	addwfc	(___fldiv@b+1)^0,f,c
  8465   001DC4  2236               	addwfc	(___fldiv@b+2)^0,f,c
  8466   001DC6  2237               	addwfc	(___fldiv@b+3)^0,f,c
  8467   001DC8  A037               	btfss	(___fldiv@b+3)^0,0,c
  8468   001DCA  EFE9  F00E         	goto	u5091
  8469   001DCE  EFEB  F00E         	goto	u5090
  8470   001DD2                     u5091:
  8471   001DD2  EF02  F00F         	goto	l5077
  8472   001DD6                     u5090:
  8473   001DD6  C034  F03C         	movff	___fldiv@b,??___fldiv
  8474   001DDA  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  8475   001DDE  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  8476   001DE2  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  8477   001DE6  343F               	rlcf	(??___fldiv+3)^0,w,c
  8478   001DE8  323F               	rrcf	(??___fldiv+3)^0,f,c
  8479   001DEA  323E               	rrcf	(??___fldiv+2)^0,f,c
  8480   001DEC  323D               	rrcf	(??___fldiv+1)^0,f,c
  8481   001DEE  323C               	rrcf	??___fldiv^0,f,c
  8482   001DF0  C03C  F034         	movff	??___fldiv,___fldiv@b
  8483   001DF4  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  8484   001DF8  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  8485   001DFC  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  8486   001E00  4A45               	infsnz	___fldiv@new_exp^0,f,c
  8487   001E02  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  8488   001E04                     l5077:
  8489   001E04  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8490   001E06  EF0D  F00F         	goto	u5101
  8491   001E0A  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8492   001E0C  E108               	bnz	u5100
  8493   001E0E  2845               	incf	___fldiv@new_exp^0,w,c
  8494   001E10  A0D8               	btfss	status,0,c
  8495   001E12  EF0D  F00F         	goto	u5101
  8496   001E16  EF0F  F00F         	goto	u5100
  8497   001E1A                     u5101:
  8498   001E1A  EF1A  F00F         	goto	l5081
  8499   001E1E                     u5100:
  8500   001E1E  0E00               	movlw	0
  8501   001E20  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8502   001E22  6845               	setf	___fldiv@new_exp^0,c
  8503   001E24  0E00               	movlw	0
  8504   001E26  6E34               	movwf	___fldiv@b^0,c
  8505   001E28  0E00               	movlw	0
  8506   001E2A  6E35               	movwf	(___fldiv@b+1)^0,c
  8507   001E2C  0E00               	movlw	0
  8508   001E2E  6E36               	movwf	(___fldiv@b+2)^0,c
  8509   001E30  0E00               	movlw	0
  8510   001E32  6E37               	movwf	(___fldiv@b+3)^0,c
  8511   001E34                     l5081:
  8512   001E34  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8513   001E36  EF27  F00F         	goto	u5110
  8514   001E3A  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8515   001E3C  E106               	bnz	u5111
  8516   001E3E  0445               	decf	___fldiv@new_exp^0,w,c
  8517   001E40  B0D8               	btfsc	status,0,c
  8518   001E42  EF25  F00F         	goto	u5111
  8519   001E46  EF27  F00F         	goto	u5110
  8520   001E4A                     u5111:
  8521   001E4A  EF35  F00F         	goto	l5085
  8522   001E4E                     u5110:
  8523   001E4E  0E00               	movlw	0
  8524   001E50  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8525   001E52  0E00               	movlw	0
  8526   001E54  6E45               	movwf	___fldiv@new_exp^0,c
  8527   001E56  0E00               	movlw	0
  8528   001E58  6E34               	movwf	___fldiv@b^0,c
  8529   001E5A  0E00               	movlw	0
  8530   001E5C  6E35               	movwf	(___fldiv@b+1)^0,c
  8531   001E5E  0E00               	movlw	0
  8532   001E60  6E36               	movwf	(___fldiv@b+2)^0,c
  8533   001E62  0E00               	movlw	0
  8534   001E64  6E37               	movwf	(___fldiv@b+3)^0,c
  8535   001E66  0E00               	movlw	0
  8536   001E68  6E44               	movwf	___fldiv@sign^0,c
  8537   001E6A                     l5085:
  8538   001E6A  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  8539   001E6E  A04B               	btfss	___fldiv@bexp^0,0,c
  8540   001E70  EF3C  F00F         	goto	u5121
  8541   001E74  EF3E  F00F         	goto	u5120
  8542   001E78                     u5121:
  8543   001E78  EF41  F00F         	goto	l5091
  8544   001E7C                     u5120:
  8545   001E7C  8E36               	bsf	(___fldiv@b+2)^0,7,c
  8546   001E7E  EF42  F00F         	goto	l5093
  8547   001E82                     l5091:
  8548   001E82  9E36               	bcf	(___fldiv@b+2)^0,7,c
  8549   001E84                     l5093:
  8550   001E84  90D8               	bcf	status,0,c
  8551   001E86  304B               	rrcf	___fldiv@bexp^0,w,c
  8552   001E88  6E37               	movwf	(___fldiv@b+3)^0,c
  8553   001E8A  EFF8  F00D         	goto	l5007
  8554   001E8E                     l1102:
  8555   001E8E  0012               	return		;funcret
  8556   001E90                     __end_of___fldiv:
  8557                           	callstack 0
  8558                           
  8559 ;; *************** function _ADC_GetConversion *****************
  8560 ;; Defined at:
  8561 ;;		line 110 in file "mcc_generated_files/adc.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  channel         1    wreg     enum E4620
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  channel         1    8[COMRAM] enum E4620
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  2    4[COMRAM] unsigned short 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8575 ;;      Params:         2       0       0       0       0       0       0       0       0
  8576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8577 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8578 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8579 ;;Total ram usage:        5 bytes
  8580 ;; Hardware stack levels used: 1
  8581 ;; Hardware stack levels required when called: 4
  8582 ;; This function calls:
  8583 ;;		Nothing
  8584 ;; This function is called by:
  8585 ;;		_get_corriente_AC
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text40
  8590   0034DA                     __ptext40:
  8591                           	callstack 0
  8592   0034DA                     _ADC_GetConversion:
  8593                           	callstack 25
  8594                           
  8595                           ;incstack = 0
  8596                           ;ADC_GetConversion@channel stored from wreg
  8597   0034DA  6E09               	movwf	ADC_GetConversion@channel^0,c
  8598   0034DC                     
  8599                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  8600   0034DC  C009  F007         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8601   0034E0  4607               	rlncf	??_ADC_GetConversion^0,f,c
  8602   0034E2  4607               	rlncf	??_ADC_GetConversion^0,f,c
  8603   0034E4  50C2               	movf	194,w,c	;volatile
  8604   0034E6  1807               	xorwf	??_ADC_GetConversion^0,w,c
  8605   0034E8  0B83               	andlw	-125
  8606   0034EA  1807               	xorwf	??_ADC_GetConversion^0,w,c
  8607   0034EC  6EC2               	movwf	194,c	;volatile
  8608   0034EE                     
  8609                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  8610   0034EE  80C2               	bsf	194,0,c	;volatile
  8611   0034F0                     
  8612                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  8613   0034F0  82C2               	bsf	194,1,c	;volatile
  8614   0034F2                     l206:
  8615                           
  8616                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  8617   0034F2  B2C2               	btfsc	194,1,c	;volatile
  8618   0034F4  EF7E  F01A         	goto	u6081
  8619   0034F8  EF80  F01A         	goto	u6080
  8620   0034FC                     u6081:
  8621   0034FC  EF79  F01A         	goto	l206
  8622   003500                     u6080:
  8623   003500                     
  8624                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8625   003500  50C4               	movf	196,w,c	;volatile
  8626   003502  6E08               	movwf	(??_ADC_GetConversion+1)^0,c
  8627   003504  6A07               	clrf	??_ADC_GetConversion^0,c
  8628   003506  50C3               	movf	195,w,c	;volatile
  8629   003508  2407               	addwf	??_ADC_GetConversion^0,w,c
  8630   00350A  6E05               	movwf	?_ADC_GetConversion^0,c
  8631   00350C  0E00               	movlw	0
  8632   00350E  2008               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  8633   003510  6E06               	movwf	(?_ADC_GetConversion+1)^0,c
  8634   003512  0012               	return		;funcret
  8635   003514                     __end_of_ADC_GetConversion:
  8636                           	callstack 0
  8637                           
  8638 ;; *************** function _SYSTEM_Initialize *****************
  8639 ;; Defined at:
  8640 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8657 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8658 ;;Total ram usage:        0 bytes
  8659 ;; Hardware stack levels used: 1
  8660 ;; Hardware stack levels required when called: 6
  8661 ;; This function calls:
  8662 ;;		_ADC_Initialize
  8663 ;;		_CCP2_Initialize
  8664 ;;		_EUSART1_Initialize
  8665 ;;		_INTERRUPT_Initialize
  8666 ;;		_OSCILLATOR_Initialize
  8667 ;;		_PIN_MANAGER_Initialize
  8668 ;;		_TMR1_Initialize
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text41
  8675   0036C2                     __ptext41:
  8676                           	callstack 0
  8677   0036C2                     _SYSTEM_Initialize:
  8678                           	callstack 24
  8679   0036C2                     
  8680                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  8681   0036C2  ECFD  F01B         	call	_INTERRUPT_Initialize	;wreg free
  8682   0036C6                     
  8683                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8684   0036C6  ECDB  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  8685   0036CA                     
  8686                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8687   0036CA  EC42  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  8688   0036CE                     
  8689                           ;mcc_generated_files/mcc.c: 56:     CCP2_Initialize();
  8690   0036CE  ECD0  F01B         	call	_CCP2_Initialize	;wreg free
  8691   0036D2                     
  8692                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8693   0036D2  ECF2  F01A         	call	_TMR1_Initialize	;wreg free
  8694   0036D6                     
  8695                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8696   0036D6  ECB0  F01B         	call	_ADC_Initialize	;wreg free
  8697   0036DA                     
  8698                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  8699   0036DA  EC30  F01A         	call	_EUSART1_Initialize	;wreg free
  8700   0036DE  0012               	return		;funcret
  8701   0036E0                     __end_of_SYSTEM_Initialize:
  8702                           	callstack 0
  8703                           
  8704 ;; *************** function _TMR1_Initialize *****************
  8705 ;; Defined at:
  8706 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;		None
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      void 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8720 ;;      Params:         0       0       0       0       0       0       0       0       0
  8721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8724 ;;Total ram usage:        0 bytes
  8725 ;; Hardware stack levels used: 1
  8726 ;; Hardware stack levels required when called: 5
  8727 ;; This function calls:
  8728 ;;		_TMR1_SetInterruptHandler
  8729 ;; This function is called by:
  8730 ;;		_SYSTEM_Initialize
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text42
  8735   0035E4                     __ptext42:
  8736                           	callstack 0
  8737   0035E4                     _TMR1_Initialize:
  8738                           	callstack 24
  8739   0035E4                     
  8740                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
  8741   0035E4  0E00               	movlw	0
  8742   0035E6  6ECC               	movwf	204,c	;volatile
  8743                           
  8744                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xD1;
  8745   0035E8  0ED1               	movlw	209
  8746   0035EA  6ECF               	movwf	207,c	;volatile
  8747                           
  8748                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x20;
  8749   0035EC  0E20               	movlw	32
  8750   0035EE  6ECE               	movwf	206,c	;volatile
  8751   0035F0                     
  8752                           ;mcc_generated_files/tmr1.c: 79:     timer1ReloadVal=TMR1;
  8753   0035F0  CFCE F0ED          	movff	4046,_timer1ReloadVal	;volatile
  8754   0035F4  CFCF F0EE          	movff	4047,_timer1ReloadVal+1	;volatile
  8755   0035F8                     
  8756                           ;mcc_generated_files/tmr1.c: 82:     PIR1bits.TMR1IF = 0;
  8757   0035F8  909E               	bcf	158,0,c	;volatile
  8758   0035FA                     
  8759                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
  8760   0035FA  809D               	bsf	157,0,c	;volatile
  8761   0035FC                     
  8762                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8763   0035FC  0EFE               	movlw	low _TMR1_DefaultInterruptHandler
  8764   0035FE  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  8765   003600  0E37               	movlw	high _TMR1_DefaultInterruptHandler
  8766   003602  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  8767   003604  ECE2  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  8768   003608                     
  8769                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x01;
  8770   003608  0E01               	movlw	1
  8771   00360A  6ECD               	movwf	205,c	;volatile
  8772   00360C  0012               	return		;funcret
  8773   00360E                     __end_of_TMR1_Initialize:
  8774                           	callstack 0
  8775                           
  8776 ;; *************** function _TMR1_SetInterruptHandler *****************
  8777 ;; Defined at:
  8778 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  8781 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, status,2, status,0
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8793 ;;      Params:         2       0       0       0       0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8796 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8797 ;;Total ram usage:        2 bytes
  8798 ;; Hardware stack levels used: 1
  8799 ;; Hardware stack levels required when called: 4
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_TMR1_Initialize
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text43
  8808   0037C4                     __ptext43:
  8809                           	callstack 0
  8810   0037C4                     _TMR1_SetInterruptHandler:
  8811                           	callstack 24
  8812   0037C4                     
  8813                           ;mcc_generated_files/tmr1.c: 190:     TMR1_InterruptHandler = InterruptHandler;
  8814   0037C4  C005  F0EB         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  8815   0037C8  C006  F0EC         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  8816   0037CC  0012               	return		;funcret
  8817   0037CE                     __end_of_TMR1_SetInterruptHandler:
  8818                           	callstack 0
  8819                           
  8820 ;; *************** function _PIN_MANAGER_Initialize *****************
  8821 ;; Defined at:
  8822 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;		None
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8836 ;;      Params:         0       0       0       0       0       0       0       0       0
  8837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8839 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8840 ;;Total ram usage:        0 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 4
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_SYSTEM_Initialize
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text44
  8851   0035B6                     __ptext44:
  8852                           	callstack 0
  8853   0035B6                     _PIN_MANAGER_Initialize:
  8854                           	callstack 25
  8855   0035B6                     
  8856                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8857   0035B6  0E00               	movlw	0
  8858   0035B8  6E89               	movwf	137,c	;volatile
  8859                           
  8860                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8861   0035BA  0E00               	movlw	0
  8862   0035BC  6E8A               	movwf	138,c	;volatile
  8863                           
  8864                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8865   0035BE  0E00               	movlw	0
  8866   0035C0  6E8B               	movwf	139,c	;volatile
  8867                           
  8868                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
  8869   0035C2  0EC7               	movlw	199
  8870   0035C4  6E92               	movwf	146,c	;volatile
  8871                           
  8872                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
  8873   0035C6  0EFE               	movlw	254
  8874   0035C8  6E93               	movwf	147,c	;volatile
  8875                           
  8876                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
  8877   0035CA  0E87               	movlw	135
  8878   0035CC  6E94               	movwf	148,c	;volatile
  8879                           
  8880                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  8881   0035CE  0E04               	movlw	4
  8882   0035D0  010F               	movlb	15	; () banked
  8883   0035D2  6F5D               	movwf	93,b	;volatile
  8884                           
  8885                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  8886   0035D4  0E3E               	movlw	62
  8887   0035D6  6F5C               	movwf	92,b	;volatile
  8888                           
  8889                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  8890   0035D8  0E07               	movlw	7
  8891   0035DA  6F5B               	movwf	91,b	;volatile
  8892                           
  8893                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8894   0035DC  0E00               	movlw	0
  8895   0035DE  6E85               	movwf	133,c	;volatile
  8896   0035E0                     
  8897                           ; BSR set to: 15
  8898                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8899   0035E0  8EF1               	bsf	241,7,c	;volatile
  8900   0035E2                     
  8901                           ; BSR set to: 15
  8902   0035E2  0012               	return		;funcret
  8903   0035E4                     __end_of_PIN_MANAGER_Initialize:
  8904                           	callstack 0
  8905                           
  8906 ;; *************** function _OSCILLATOR_Initialize *****************
  8907 ;; Defined at:
  8908 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;		None
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;		None
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      void 
  8915 ;; Registers used:
  8916 ;;		wreg, status,2
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8922 ;;      Params:         0       0       0       0       0       0       0       0       0
  8923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8925 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8926 ;;Total ram usage:        0 bytes
  8927 ;; Hardware stack levels used: 1
  8928 ;; Hardware stack levels required when called: 4
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_SYSTEM_Initialize
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text45
  8937   003684                     __ptext45:
  8938                           	callstack 0
  8939   003684                     _OSCILLATOR_Initialize:
  8940                           	callstack 25
  8941   003684                     
  8942                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  8943   003684  0E70               	movlw	112
  8944   003686  6ED3               	movwf	211,c	;volatile
  8945                           
  8946                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
  8947   003688  0E00               	movlw	0
  8948   00368A  6ED2               	movwf	210,c	;volatile
  8949                           
  8950                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x80;
  8951   00368C  0E80               	movlw	128
  8952   00368E  6E9B               	movwf	155,c	;volatile
  8953                           
  8954                           ;mcc_generated_files/mcc.c: 71:     ACTCON = 0x00;
  8955   003690  0E00               	movlw	0
  8956   003692  6EB5               	movwf	181,c	;volatile
  8957   003694                     l130:
  8958                           
  8959                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  8960   003694  AED2               	btfss	4050,7,c	;volatile
  8961   003696  EF4F  F01B         	goto	u6071
  8962   00369A  EF51  F01B         	goto	u6070
  8963   00369E                     u6071:
  8964   00369E  EF4A  F01B         	goto	l130
  8965   0036A2                     u6070:
  8966   0036A2  0012               	return		;funcret
  8967   0036A4                     __end_of_OSCILLATOR_Initialize:
  8968                           	callstack 0
  8969                           
  8970 ;; *************** function _INTERRUPT_Initialize *****************
  8971 ;; Defined at:
  8972 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		None
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8986 ;;      Params:         0       0       0       0       0       0       0       0       0
  8987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8989 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8990 ;;Total ram usage:        0 bytes
  8991 ;; Hardware stack levels used: 1
  8992 ;; Hardware stack levels required when called: 4
  8993 ;; This function calls:
  8994 ;;		Nothing
  8995 ;; This function is called by:
  8996 ;;		_SYSTEM_Initialize
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text46
  9001   0037FA                     __ptext46:
  9002                           	callstack 0
  9003   0037FA                     _INTERRUPT_Initialize:
  9004                           	callstack 25
  9005   0037FA                     
  9006                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  9007   0037FA  9ED0               	bcf	208,7,c	;volatile
  9008   0037FC  0012               	return		;funcret
  9009   0037FE                     __end_of_INTERRUPT_Initialize:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _EUSART1_Initialize *****************
  9013 ;; Defined at:
  9014 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;		None
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  1    wreg      void 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0, cstack
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9028 ;;      Params:         0       0       0       0       0       0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9032 ;;Total ram usage:        0 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 5
  9035 ;; This function calls:
  9036 ;;		_EUSART1_SetErrorHandler
  9037 ;;		_EUSART1_SetFramingErrorHandler
  9038 ;;		_EUSART1_SetOverrunErrorHandler
  9039 ;; This function is called by:
  9040 ;;		_SYSTEM_Initialize
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text47
  9045   003460                     __ptext47:
  9046                           	callstack 0
  9047   003460                     _EUSART1_Initialize:
  9048                           	callstack 24
  9049   003460                     
  9050                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  9051   003460  0E08               	movlw	8
  9052   003462  6EB8               	movwf	184,c	;volatile
  9053                           
  9054                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  9055   003464  0E90               	movlw	144
  9056   003466  6EAB               	movwf	171,c	;volatile
  9057                           
  9058                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  9059   003468  0E24               	movlw	36
  9060   00346A  6EAC               	movwf	172,c	;volatile
  9061                           
  9062                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xE1;
  9063   00346C  0EE1               	movlw	225
  9064   00346E  6EAF               	movwf	175,c	;volatile
  9065                           
  9066                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x04;
  9067   003470  0E04               	movlw	4
  9068   003472  6EB0               	movwf	176,c	;volatile
  9069   003474                     
  9070                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  9071   003474  0E00               	movlw	0
  9072   003476  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  9073   003478  0E00               	movlw	0
  9074   00347A  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9075   00347C  ECEC  F01B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  9076   003480                     
  9077                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  9078   003480  0E00               	movlw	0
  9079   003482  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  9080   003484  0E00               	movlw	0
  9081   003486  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9082   003488  ECE7  F01B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  9083   00348C                     
  9084                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  9085   00348C  0E00               	movlw	0
  9086   00348E  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  9087   003490  0E00               	movlw	0
  9088   003492  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  9089   003494  ECF1  F01B         	call	_EUSART1_SetErrorHandler	;wreg free
  9090   003498                     
  9091                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  9092   003498  0E00               	movlw	0
  9093   00349A  0100               	movlb	0	; () banked
  9094   00349C  6FFA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9095   00349E                     
  9096                           ; BSR set to: 0
  9097   00349E  0012               	return		;funcret
  9098   0034A0                     __end_of_EUSART1_Initialize:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9102 ;; Defined at:
  9103 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9106 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9118 ;;      Params:         2       0       0       0       0       0       0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9121 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9122 ;;Total ram usage:        2 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; Hardware stack levels required when called: 4
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_EUSART1_Initialize
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text48
  9133   0037CE                     __ptext48:
  9134                           	callstack 0
  9135   0037CE                     _EUSART1_SetOverrunErrorHandler:
  9136                           	callstack 24
  9137   0037CE                     
  9138                           ;mcc_generated_files/eusart1.c: 179:     EUSART1_OverrunErrorHandler = interruptHandler;
  9139   0037CE  C005  F0F3         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  9140   0037D2  C006  F0F4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  9141   0037D6  0012               	return		;funcret
  9142   0037D8                     __end_of_EUSART1_SetOverrunErrorHandler:
  9143                           	callstack 0
  9144                           
  9145 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9146 ;; Defined at:
  9147 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9150 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;		None
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9162 ;;      Params:         2       0       0       0       0       0       0       0       0
  9163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9165 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9166 ;;Total ram usage:        2 bytes
  9167 ;; Hardware stack levels used: 1
  9168 ;; Hardware stack levels required when called: 4
  9169 ;; This function calls:
  9170 ;;		Nothing
  9171 ;; This function is called by:
  9172 ;;		_EUSART1_Initialize
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text49
  9177   0037D8                     __ptext49:
  9178                           	callstack 0
  9179   0037D8                     _EUSART1_SetFramingErrorHandler:
  9180                           	callstack 24
  9181   0037D8                     
  9182                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_FramingErrorHandler = interruptHandler;
  9183   0037D8  C005  F0F5         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  9184   0037DC  C006  F0F6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  9185   0037E0  0012               	return		;funcret
  9186   0037E2                     __end_of_EUSART1_SetFramingErrorHandler:
  9187                           	callstack 0
  9188                           
  9189 ;; *************** function _EUSART1_SetErrorHandler *****************
  9190 ;; Defined at:
  9191 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9194 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      void 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9206 ;;      Params:         2       0       0       0       0       0       0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9209 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9210 ;;Total ram usage:        2 bytes
  9211 ;; Hardware stack levels used: 1
  9212 ;; Hardware stack levels required when called: 4
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		_EUSART1_Initialize
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text50
  9221   0037E2                     __ptext50:
  9222                           	callstack 0
  9223   0037E2                     _EUSART1_SetErrorHandler:
  9224                           	callstack 24
  9225   0037E2                     
  9226                           ;mcc_generated_files/eusart1.c: 183:     EUSART1_ErrorHandler = interruptHandler;
  9227   0037E2  C005  F0F1         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  9228   0037E6  C006  F0F2         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  9229   0037EA  0012               	return		;funcret
  9230   0037EC                     __end_of_EUSART1_SetErrorHandler:
  9231                           	callstack 0
  9232                           
  9233 ;; *************** function _CCP2_Initialize *****************
  9234 ;; Defined at:
  9235 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;		None
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;		None
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9249 ;;      Params:         0       0       0       0       0       0       0       0       0
  9250 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9252 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9253 ;;Total ram usage:        0 bytes
  9254 ;; Hardware stack levels used: 1
  9255 ;; Hardware stack levels required when called: 4
  9256 ;; This function calls:
  9257 ;;		Nothing
  9258 ;; This function is called by:
  9259 ;;		_SYSTEM_Initialize
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text51
  9264   0037A0                     __ptext51:
  9265                           	callstack 0
  9266   0037A0                     _CCP2_Initialize:
  9267                           	callstack 25
  9268   0037A0                     
  9269                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  9270   0037A0  0E00               	movlw	0
  9271   0037A2  6E97               	movwf	151,c	;volatile
  9272                           
  9273                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  9274   0037A4  0E00               	movlw	0
  9275   0037A6  6E90               	movwf	144,c	;volatile
  9276                           
  9277                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  9278   0037A8  0E00               	movlw	0
  9279   0037AA  6E91               	movwf	145,c	;volatile
  9280   0037AC  0012               	return		;funcret
  9281   0037AE                     __end_of_CCP2_Initialize:
  9282                           	callstack 0
  9283                           
  9284 ;; *************** function _ADC_Initialize *****************
  9285 ;; Defined at:
  9286 ;;		line 62 in file "mcc_generated_files/adc.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;		None
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;		None
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  1    wreg      void 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9300 ;;      Params:         0       0       0       0       0       0       0       0       0
  9301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9303 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9304 ;;Total ram usage:        0 bytes
  9305 ;; Hardware stack levels used: 1
  9306 ;; Hardware stack levels required when called: 4
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_SYSTEM_Initialize
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text52
  9315   003760                     __ptext52:
  9316                           	callstack 0
  9317   003760                     _ADC_Initialize:
  9318                           	callstack 25
  9319   003760                     
  9320                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  9321   003760  0E00               	movlw	0
  9322   003762  6EC1               	movwf	193,c	;volatile
  9323                           
  9324                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
  9325   003764  0E87               	movlw	135
  9326   003766  6EC0               	movwf	192,c	;volatile
  9327                           
  9328                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  9329   003768  0E00               	movlw	0
  9330   00376A  6EC3               	movwf	195,c	;volatile
  9331                           
  9332                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  9333   00376C  0E00               	movlw	0
  9334   00376E  6EC4               	movwf	196,c	;volatile
  9335                           
  9336                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  9337   003770  0E01               	movlw	1
  9338   003772  6EC2               	movwf	194,c	;volatile
  9339   003774  0012               	return		;funcret
  9340   003776                     __end_of_ADC_Initialize:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _EUSART1_is_tx_ready *****************
  9344 ;; Defined at:
  9345 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      _Bool 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0
  9360 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9362 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9363 ;;Total ram usage:        1 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; Hardware stack levels required when called: 4
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_main
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text53
  9374   00360E                     __ptext53:
  9375                           	callstack 0
  9376   00360E                     _EUSART1_is_tx_ready:
  9377                           	callstack 26
  9378   00360E                     
  9379                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  9380   00360E  0E00               	movlw	0
  9381   003610  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
  9382   003612  A89E               	btfss	158,4,c	;volatile
  9383   003614  EF0E  F01B         	goto	u6221
  9384   003618  EF10  F01B         	goto	u6220
  9385   00361C                     u6221:
  9386   00361C  EF19  F01B         	goto	l47
  9387   003620                     u6220:
  9388   003620  AAAC               	btfss	172,5,c	;volatile
  9389   003622  EF15  F01B         	goto	u6231
  9390   003626  EF17  F01B         	goto	u6230
  9391   00362A                     u6231:
  9392   00362A  EF19  F01B         	goto	l47
  9393   00362E                     u6230:
  9394   00362E  0E01               	movlw	1
  9395   003630  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
  9396   003632                     l47:
  9397   003632  5005               	movf	_EUSART1_is_tx_ready$282^0,w,c
  9398   003634  0012               	return		;funcret
  9399   003636                     __end_of_EUSART1_is_tx_ready:
  9400                           	callstack 0
  9401                           
  9402 ;; *************** function _EUSART1_Write_string *****************
  9403 ;; Defined at:
  9404 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  data            2    5[COMRAM] PTR const unsigned char 
  9407 ;;		 -> valor_string(14), 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      void 
  9412 ;; Registers used:
  9413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9419 ;;      Params:         2       0       0       0       0       0       0       0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9422 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9423 ;;Total ram usage:        2 bytes
  9424 ;; Hardware stack levels used: 1
  9425 ;; Hardware stack levels required when called: 5
  9426 ;; This function calls:
  9427 ;;		_EUSART1_Write
  9428 ;; This function is called by:
  9429 ;;		_main
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text54
  9434   003586                     __ptext54:
  9435                           	callstack 0
  9436   003586                     _EUSART1_Write_string:
  9437                           	callstack 25
  9438   003586                     
  9439                           ;mcc_generated_files/eusart1.c: 141: void EUSART1_Write_string(const char* data);mcc_gen
      +                          erated_files/eusart1.c: 142: {;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
  9440   003586  EFCE  F01A         	goto	l5923
  9441   00358A                     l5919:
  9442                           
  9443                           ;mcc_generated_files/eusart1.c: 144:     {;mcc_generated_files/eusart1.c: 145:         E
      +                          USART1_Write(*data++);
  9444   00358A  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
  9445   00358E  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
  9446   003592  50DF               	movf	indf2,w,c
  9447   003594  ECBB  F01B         	call	_EUSART1_Write
  9448   003598  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  9449   00359A  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  9450   00359C                     l5923:
  9451                           
  9452                           ;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
  9453   00359C  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
  9454   0035A0  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
  9455   0035A4  50DF               	movf	indf2,w,c
  9456   0035A6  A4D8               	btfss	status,2,c
  9457   0035A8  EFD8  F01A         	goto	u6241
  9458   0035AC  EFDA  F01A         	goto	u6240
  9459   0035B0                     u6241:
  9460   0035B0  EFC5  F01A         	goto	l5919
  9461   0035B4                     u6240:
  9462   0035B4  0012               	return		;funcret
  9463   0035B6                     __end_of_EUSART1_Write_string:
  9464                           	callstack 0
  9465                           
  9466 ;; *************** function _EUSART1_Write *****************
  9467 ;; Defined at:
  9468 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;  txData          1    wreg     unsigned char 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;  txData          1    4[COMRAM] unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9482 ;;      Params:         0       0       0       0       0       0       0       0       0
  9483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9485 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9486 ;;Total ram usage:        1 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 4
  9489 ;; This function calls:
  9490 ;;		Nothing
  9491 ;; This function is called by:
  9492 ;;		_EUSART1_Write_string
  9493 ;;		_putch
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text55
  9498   003776                     __ptext55:
  9499                           	callstack 0
  9500   003776                     _EUSART1_Write:
  9501                           	callstack 21
  9502                           
  9503                           ;incstack = 0
  9504                           ;EUSART1_Write@txData stored from wreg
  9505   003776  6E05               	movwf	EUSART1_Write@txData^0,c
  9506   003778                     l67:
  9507                           
  9508                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9509   003778  A89E               	btfss	158,4,c	;volatile
  9510   00377A  EFC1  F01B         	goto	u4411
  9511   00377E  EFC3  F01B         	goto	u4410
  9512   003782                     u4411:
  9513   003782  EFBC  F01B         	goto	l67
  9514   003786                     u4410:
  9515   003786                     
  9516                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9517   003786  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9518   00378A  0012               	return		;funcret
  9519   00378C                     __end_of_EUSART1_Write:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function _INTERRUPT_InterruptManager *****************
  9523 ;; Defined at:
  9524 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      void 
  9531 ;; Registers used:
  9532 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9538 ;;      Params:         0       0       0       0       0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9540 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9541 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9542 ;;Total ram usage:        2 bytes
  9543 ;; Hardware stack levels used: 1
  9544 ;; Hardware stack levels required when called: 3
  9545 ;; This function calls:
  9546 ;;		_TMR1_ISR
  9547 ;; This function is called by:
  9548 ;;		Interrupt level 2
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	intcode
  9553   000008                     __pintcode:
  9554                           	callstack 0
  9555   000008                     _INTERRUPT_InterruptManager:
  9556                           	callstack 18
  9557                           
  9558                           ;incstack = 0
  9559   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9560   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  9561   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9562   000012                     
  9563                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9564   000012  ACF2               	btfss	242,6,c	;volatile
  9565   000014  EF0E  F000         	goto	i2u432_41
  9566   000018  EF10  F000         	goto	i2u432_40
  9567   00001C                     i2u432_41:
  9568   00001C  EF20  F000         	goto	i2l232
  9569   000020                     i2u432_40:
  9570   000020                     
  9571                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9572   000020  A09D               	btfss	157,0,c	;volatile
  9573   000022  EF15  F000         	goto	i2u433_41
  9574   000026  EF17  F000         	goto	i2u433_40
  9575   00002A                     i2u433_41:
  9576   00002A  EF20  F000         	goto	i2l232
  9577   00002E                     i2u433_40:
  9578   00002E  A09E               	btfss	158,0,c	;volatile
  9579   000030  EF1C  F000         	goto	i2u434_41
  9580   000034  EF1E  F000         	goto	i2u434_40
  9581   000038                     i2u434_41:
  9582   000038  EF20  F000         	goto	i2l232
  9583   00003C                     i2u434_40:
  9584   00003C                     
  9585                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  9586   00003C  EC8A  F01A         	call	_TMR1_ISR	;wreg free
  9587   000040                     i2l232:
  9588   000040  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9589   000044  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9590   000048  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9591   00004A  0011               	retfie		f
  9592   00004C                     __end_of_INTERRUPT_InterruptManager:
  9593                           	callstack 0
  9594                           
  9595 ;; *************** function _TMR1_ISR *****************
  9596 ;; Defined at:
  9597 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;		None
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;		None
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      void 
  9604 ;; Registers used:
  9605 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9611 ;;      Params:         0       0       0       0       0       0       0       0       0
  9612 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9614 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9615 ;;Total ram usage:        0 bytes
  9616 ;; Hardware stack levels used: 1
  9617 ;; Hardware stack levels required when called: 2
  9618 ;; This function calls:
  9619 ;;		_TMR1_CallBack
  9620 ;;		_TMR1_WriteTimer
  9621 ;; This function is called by:
  9622 ;;		_INTERRUPT_InterruptManager
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text57
  9627   003514                     __ptext57:
  9628                           	callstack 0
  9629   003514                     _TMR1_ISR:
  9630                           	callstack 18
  9631   003514                     
  9632                           ;mcc_generated_files/tmr1.c: 162:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 165:     PIR1bits.TMR1IF = 0;
  9633   003514  909E               	bcf	158,0,c	;volatile
  9634   003516                     
  9635                           ;mcc_generated_files/tmr1.c: 166:     TMR1_WriteTimer(timer1ReloadVal);
  9636   003516  C0ED  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  9637   00351A  C0EE  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  9638   00351E  EC1B  F01B         	call	_TMR1_WriteTimer	;wreg free
  9639   003522                     
  9640                           ;mcc_generated_files/tmr1.c: 169:     if (++CountCallBack >= 1000)
  9641   003522  0100               	movlb	0	; () banked
  9642   003524  4BE9               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
  9643   003526  2BEA               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9644   003528  0EE8               	movlw	232
  9645   00352A  5DE9               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
  9646   00352C  0E03               	movlw	3
  9647   00352E  59EA               	subwfb	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9648   003530  A0D8               	btfss	status,0,c
  9649   003532  EF9D  F01A         	goto	i2u410_41
  9650   003536  EF9F  F01A         	goto	i2u410_40
  9651   00353A                     i2u410_41:
  9652   00353A  EFA6  F01A         	goto	i2l294
  9653   00353E                     i2u410_40:
  9654   00353E                     
  9655                           ; BSR set to: 0
  9656                           ;mcc_generated_files/tmr1.c: 170:     {;mcc_generated_files/tmr1.c: 172:         TMR1_Ca
      +                          llBack();
  9657   00353E  EC45  F019         	call	_TMR1_CallBack	;wreg free
  9658   003542                     
  9659                           ;mcc_generated_files/tmr1.c: 175:         CountCallBack = 0;
  9660   003542  0E00               	movlw	0
  9661   003544  0100               	movlb	0	; () banked
  9662   003546  6FEA               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
  9663   003548  0E00               	movlw	0
  9664   00354A  6FE9               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
  9665   00354C                     i2l294:
  9666                           
  9667                           ; BSR set to: 0
  9668   00354C  0012               	return		;funcret
  9669   00354E                     __end_of_TMR1_ISR:
  9670                           	callstack 0
  9671                           
  9672 ;; *************** function _TMR1_WriteTimer *****************
  9673 ;; Defined at:
  9674 ;;		line 123 in file "mcc_generated_files/tmr1.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;  timerVal        2    0[COMRAM] unsigned short 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;		None
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  1    wreg      void 
  9681 ;; Registers used:
  9682 ;;		wreg, status,2
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9688 ;;      Params:         2       0       0       0       0       0       0       0       0
  9689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9691 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9692 ;;Total ram usage:        2 bytes
  9693 ;; Hardware stack levels used: 1
  9694 ;; This function calls:
  9695 ;;		Nothing
  9696 ;; This function is called by:
  9697 ;;		_TMR1_ISR
  9698 ;;		_TMR1_Reload
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text58
  9703   003636                     __ptext58:
  9704                           	callstack 0
  9705   003636                     _TMR1_WriteTimer:
  9706                           	callstack 19
  9707   003636                     
  9708                           ;mcc_generated_files/tmr1.c: 123: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 124: {;mcc_generated_files/tmr1.c: 125:     if (T1CONbits.T1SYNC == 1)
  9709   003636  A4CD               	btfss	205,2,c	;volatile
  9710   003638  EF20  F01B         	goto	i2u389_41
  9711   00363C  EF22  F01B         	goto	i2u389_40
  9712   003640                     i2u389_41:
  9713   003640  EF2A  F01B         	goto	i2l4189
  9714   003644                     i2u389_40:
  9715   003644                     
  9716                           ;mcc_generated_files/tmr1.c: 126:     {;mcc_generated_files/tmr1.c: 128:         T1CONbi
      +                          ts.TMR1ON = 0;
  9717   003644  90CD               	bcf	205,0,c	;volatile
  9718   003646                     
  9719                           ;mcc_generated_files/tmr1.c: 131:         TMR1H = (uint8_t)(timerVal >> 8);
  9720   003646  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  9721   003648  6ECF               	movwf	207,c	;volatile
  9722   00364A                     
  9723                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
  9724   00364A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  9725   00364E                     
  9726                           ;mcc_generated_files/tmr1.c: 135:         T1CONbits.TMR1ON =1;
  9727   00364E  80CD               	bsf	205,0,c	;volatile
  9728                           
  9729                           ;mcc_generated_files/tmr1.c: 136:     }
  9730   003650  EF2E  F01B         	goto	i2l279
  9731   003654                     i2l4189:
  9732                           
  9733                           ;mcc_generated_files/tmr1.c: 138:     {;mcc_generated_files/tmr1.c: 140:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9734   003654  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  9735   003656  6ECF               	movwf	207,c	;volatile
  9736   003658                     
  9737                           ;mcc_generated_files/tmr1.c: 141:         TMR1L = (uint8_t)timerVal;
  9738   003658  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  9739   00365C                     i2l279:
  9740   00365C  0012               	return		;funcret
  9741   00365E                     __end_of_TMR1_WriteTimer:
  9742                           	callstack 0
  9743                           
  9744 ;; *************** function _TMR1_CallBack *****************
  9745 ;; Defined at:
  9746 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;		None
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;		None
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      void 
  9753 ;; Registers used:
  9754 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9760 ;;      Params:         0       0       0       0       0       0       0       0       0
  9761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9763 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9764 ;;Total ram usage:        0 bytes
  9765 ;; Hardware stack levels used: 1
  9766 ;; Hardware stack levels required when called: 1
  9767 ;; This function calls:
  9768 ;;		NULL
  9769 ;;		_TMR1_DefaultInterruptHandler
  9770 ;; This function is called by:
  9771 ;;		_TMR1_ISR
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text59
  9776   00328A                     __ptext59:
  9777                           	callstack 0
  9778   00328A                     _TMR1_CallBack:
  9779                           	callstack 18
  9780   00328A                     
  9781                           ;mcc_generated_files/tmr1.c: 182:     conteo = conteo + 1;
  9782   00328A  0E01               	movlw	1
  9783   00328C  0100               	movlb	0	; () banked
  9784   00328E  25D7               	addwf	_conteo& (0+255),w,b
  9785   003290  6FD7               	movwf	_conteo& (0+255),b
  9786   003292  0E00               	movlw	0
  9787   003294  21D8               	addwfc	(_conteo+1)& (0+255),w,b
  9788   003296  6FD8               	movwf	(_conteo+1)& (0+255),b
  9789   003298  0E00               	movlw	0
  9790   00329A  21D9               	addwfc	(_conteo+2)& (0+255),w,b
  9791   00329C  6FD9               	movwf	(_conteo+2)& (0+255),b
  9792   00329E  0E00               	movlw	0
  9793   0032A0  21DA               	addwfc	(_conteo+3)& (0+255),w,b
  9794   0032A2  6FDA               	movwf	(_conteo+3)& (0+255),b
  9795                           
  9796                           ;mcc_generated_files/tmr1.c: 183:     if(TMR1_InterruptHandler)
  9797   0032A4  51EB               	movf	_TMR1_InterruptHandler& (0+255),w,b
  9798   0032A6  11EC               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  9799   0032A8  B4D8               	btfsc	status,2,c
  9800   0032AA  EF59  F019         	goto	i2u390_41
  9801   0032AE  EF5B  F019         	goto	i2u390_40
  9802   0032B2                     i2u390_41:
  9803   0032B2  EF68  F019         	goto	i2l298
  9804   0032B6                     i2u390_40:
  9805   0032B6                     
  9806                           ; BSR set to: 0
  9807                           ;mcc_generated_files/tmr1.c: 184:     {;mcc_generated_files/tmr1.c: 185:         TMR1_In
      +                          terruptHandler();
  9808   0032B6  D802               	call	i2u391_48
  9809   0032B8  EF68  F019         	goto	i2u391_49
  9810   0032BC                     i2u391_48:
  9811   0032BC  0005               	push	
  9812   0032BE  6EFA               	movwf	pclath,c
  9813   0032C0  51EB               	movf	_TMR1_InterruptHandler& (0+255),w,b
  9814   0032C2  6EFD               	movwf	tosl,c
  9815   0032C4  51EC               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  9816   0032C6  6EFE               	movwf	tosh,c
  9817   0032C8  50F8               	movf	tblptru,w,c
  9818   0032CA  6EFF               	movwf	tosu,c
  9819   0032CC  50FA               	movf	pclath,w,c
  9820   0032CE  0012               	return		;indir
  9821   0032D0                     i2u391_49:
  9822   0032D0                     i2l298:
  9823   0032D0  0012               	return		;funcret
  9824   0032D2                     __end_of_TMR1_CallBack:
  9825                           	callstack 0
  9826                           
  9827 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9828 ;; Defined at:
  9829 ;;		line 193 in file "mcc_generated_files/tmr1.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		None
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used: 1
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_TMR1_Initialize
  9853 ;;		_TMR1_CallBack
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text60
  9858   0037FE                     __ptext60:
  9859                           	callstack 0
  9860   0037FE                     _TMR1_DefaultInterruptHandler:
  9861                           	callstack 18
  9862   0037FE  0012               	return		;funcret
  9863   003800                     __end_of_TMR1_DefaultInterruptHandler:
  9864                           	callstack 0
  9865                           
  9866                           	psect	text61
  9867   000000                     __ptext61:
  9868                           	callstack 0
  9869   000000                     
  9870                           	psect	rparam
  9871   000000                     
  9872                           	psect	temp
  9873   00005B                     btemp:
  9874                           	callstack 0
  9875   00005B                     	ds	1
  9876   000000                     int$flags	set	btemp
  9877   000000                     wtemp8	set	btemp+1
  9878   000000                     ttemp5	set	btemp+1
  9879   000000                     ttemp6	set	btemp+4
  9880   000000                     ttemp7	set	btemp+8
  9881                           
  9882                           	psect	idloc
  9883                           
  9884                           ;Config register IDLOC0 @ 0x200000
  9885                           ;	unspecified, using default values
  9886   200000                     	org	2097152
  9887   200000  FF                 	db	255
  9888                           
  9889                           ;Config register IDLOC1 @ 0x200001
  9890                           ;	unspecified, using default values
  9891   200001                     	org	2097153
  9892   200001  FF                 	db	255
  9893                           
  9894                           ;Config register IDLOC2 @ 0x200002
  9895                           ;	unspecified, using default values
  9896   200002                     	org	2097154
  9897   200002  FF                 	db	255
  9898                           
  9899                           ;Config register IDLOC3 @ 0x200003
  9900                           ;	unspecified, using default values
  9901   200003                     	org	2097155
  9902   200003  FF                 	db	255
  9903                           
  9904                           ;Config register IDLOC4 @ 0x200004
  9905                           ;	unspecified, using default values
  9906   200004                     	org	2097156
  9907   200004  FF                 	db	255
  9908                           
  9909                           ;Config register IDLOC5 @ 0x200005
  9910                           ;	unspecified, using default values
  9911   200005                     	org	2097157
  9912   200005  FF                 	db	255
  9913                           
  9914                           ;Config register IDLOC6 @ 0x200006
  9915                           ;	unspecified, using default values
  9916   200006                     	org	2097158
  9917   200006  FF                 	db	255
  9918                           
  9919                           ;Config register IDLOC7 @ 0x200007
  9920                           ;	unspecified, using default values
  9921   200007                     	org	2097159
  9922   200007  FF                 	db	255
  9923                           
  9924                           	psect	config
  9925                           
  9926                           ;Config register CONFIG1L @ 0x300000
  9927                           ;	PLL Selection
  9928                           ;	PLLSEL = PLL3X, 3x clock multiplier
  9929                           ;	PLL Enable Configuration bit
  9930                           ;	CFGPLLEN = ON, PLL Enabled
  9931                           ;	CPU System Clock Postscaler
  9932                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  9933                           ;	Low Speed USB mode with 48 MHz system clock
  9934                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  9935   300000                     	org	3145728
  9936   300000  23                 	db	35
  9937                           
  9938                           ;Config register CONFIG1H @ 0x300001
  9939                           ;	Oscillator Selection
  9940                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
  9941                           ;	Primary Oscillator Shutdown
  9942                           ;	PCLKEN = ON, Primary oscillator enabled
  9943                           ;	Fail-Safe Clock Monitor
  9944                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9945                           ;	Internal/External Oscillator Switchover
  9946                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9947   300001                     	org	3145729
  9948   300001  22                 	db	34
  9949                           
  9950                           ;Config register CONFIG2L @ 0x300002
  9951                           ;	Power-up Timer Enable
  9952                           ;	nPWRTEN = ON, Power up timer enabled
  9953                           ;	Brown-out Reset Enable
  9954                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  9955                           ;	Brown-out Reset Voltage
  9956                           ;	BORV = 190, BOR set to 1.9V nominal
  9957                           ;	Low-Power Brown-out Reset
  9958                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  9959   300002                     	org	3145730
  9960   300002  5E                 	db	94
  9961                           
  9962                           ;Config register CONFIG2H @ 0x300003
  9963                           ;	Watchdog Timer Enable bits
  9964                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  9965                           ;	Watchdog Timer Postscaler
  9966                           ;	WDTPS = 32768, 1:32768
  9967   300003                     	org	3145731
  9968   300003  3C                 	db	60
  9969                           
  9970                           ; Padding undefined space
  9971   300004                     	org	3145732
  9972   300004  FF                 	db	255
  9973                           
  9974                           ;Config register CONFIG3H @ 0x300005
  9975                           ;	CCP2 MUX bit
  9976                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  9977                           ;	PORTB A/D Enable bit
  9978                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  9979                           ;	Timer3 Clock Input MUX bit
  9980                           ;	T3CMX = RC0, T3CKI function is on RC0
  9981                           ;	SDO Output MUX bit
  9982                           ;	SDOMX = RB3, SDO function is on RB3
  9983                           ;	Master Clear Reset Pin Enable
  9984                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  9985   300005                     	org	3145733
  9986   300005  D1                 	db	209
  9987                           
  9988                           ;Config register CONFIG4L @ 0x300006
  9989                           ;	Stack Full/Underflow Reset
  9990                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9991                           ;	Single-Supply ICSP Enable bit
  9992                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  9993                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  9994                           ;	ICPRT = OFF, ICPORT disabled
  9995                           ;	Extended Instruction Set Enable bit
  9996                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  9997                           ;	Background Debugger Enable bit
  9998                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  9999   300006                     	org	3145734
 10000   300006  85                 	db	133
 10001                           
 10002                           ; Padding undefined space
 10003   300007                     	org	3145735
 10004   300007  FF                 	db	255
 10005                           
 10006                           ;Config register CONFIG5L @ 0x300008
 10007                           ;	Block 0 Code Protect
 10008                           ;	CP0 = OFF, Block 0 is not code-protected
 10009                           ;	Block 1 Code Protect
 10010                           ;	CP1 = OFF, Block 1 is not code-protected
 10011                           ;	Block 2 Code Protect
 10012                           ;	CP2 = OFF, Block 2 is not code-protected
 10013                           ;	Block 3 Code Protect
 10014                           ;	CP3 = OFF, Block 3 is not code-protected
 10015   300008                     	org	3145736
 10016   300008  0F                 	db	15
 10017                           
 10018                           ;Config register CONFIG5H @ 0x300009
 10019                           ;	Boot Block Code Protect
 10020                           ;	CPB = OFF, Boot block is not code-protected
 10021                           ;	Data EEPROM Code Protect
 10022                           ;	CPD = OFF, Data EEPROM is not code-protected
 10023   300009                     	org	3145737
 10024   300009  C0                 	db	192
 10025                           
 10026                           ;Config register CONFIG6L @ 0x30000A
 10027                           ;	Block 0 Write Protect
 10028                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 10029                           ;	Block 1 Write Protect
 10030                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 10031                           ;	Block 2 Write Protect
 10032                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 10033                           ;	Block 3 Write Protect
 10034                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 10035   30000A                     	org	3145738
 10036   30000A  0F                 	db	15
 10037                           
 10038                           ;Config register CONFIG6H @ 0x30000B
 10039                           ;	Configuration Registers Write Protect
 10040                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10041                           ;	Boot Block Write Protect
 10042                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 10043                           ;	Data EEPROM Write Protect
 10044                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10045   30000B                     	org	3145739
 10046   30000B  E0                 	db	224
 10047                           
 10048                           ;Config register CONFIG7L @ 0x30000C
 10049                           ;	Block 0 Table Read Protect
 10050                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 10051                           ;	Block 1 Table Read Protect
 10052                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 10053                           ;	Block 2 Table Read Protect
 10054                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 10055                           ;	Block 3 Table Read Protect
 10056                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 10057   30000C                     	org	3145740
 10058   30000C  0F                 	db	15
 10059                           
 10060                           ;Config register CONFIG7H @ 0x30000D
 10061                           ;	Boot Block Table Read Protect
 10062                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 10063   30000D                     	org	3145741
 10064   30000D  40                 	db	64
 10065                           tosu	equ	0xFFF
 10066                           tosh	equ	0xFFE
 10067                           tosl	equ	0xFFD
 10068                           stkptr	equ	0xFFC
 10069                           pclatu	equ	0xFFB
 10070                           pclath	equ	0xFFA
 10071                           pcl	equ	0xFF9
 10072                           tblptru	equ	0xFF8
 10073                           tblptrh	equ	0xFF7
 10074                           tblptrl	equ	0xFF6
 10075                           tablat	equ	0xFF5
 10076                           prodh	equ	0xFF4
 10077                           prodl	equ	0xFF3
 10078                           indf0	equ	0xFEF
 10079                           postinc0	equ	0xFEE
 10080                           postdec0	equ	0xFED
 10081                           preinc0	equ	0xFEC
 10082                           plusw0	equ	0xFEB
 10083                           fsr0h	equ	0xFEA
 10084                           fsr0l	equ	0xFE9
 10085                           wreg	equ	0xFE8
 10086                           indf1	equ	0xFE7
 10087                           postinc1	equ	0xFE6
 10088                           postdec1	equ	0xFE5
 10089                           preinc1	equ	0xFE4
 10090                           plusw1	equ	0xFE3
 10091                           fsr1h	equ	0xFE2
 10092                           fsr1l	equ	0xFE1
 10093                           bsr	equ	0xFE0
 10094                           indf2	equ	0xFDF
 10095                           postinc2	equ	0xFDE
 10096                           postdec2	equ	0xFDD
 10097                           preinc2	equ	0xFDC
 10098                           plusw2	equ	0xFDB
 10099                           fsr2h	equ	0xFDA
 10100                           fsr2l	equ	0xFD9
 10101                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    14
    Data        17
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     99     160
    BANK1           256      4     122
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(1) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1850$buffer	PTR unsigned char  size(2) Largest target is 0

    S1850$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _trip_protec_current->___flge
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _floorf->___fldiv
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write
    _get_corriente_AC->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flsub
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   67842
                                             97 BANK0      2     2      0
                                              0 BANK1      4     4      0
               _EUSART1_Write_string
                _EUSART1_is_tx_ready
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                   _get_corriente_AC
                    _nrF2401_init_RX
                         _recibido_1
                         _spi_s_init
                            _sprintf
                _trip_protec_current
 ---------------------------------------------------------------------------------
 (1) _trip_protec_current                                  4     4      0    3146
                                             55 COMRAM     4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   32527
                                             77 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   32029
                                             73 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   31541
                                             62 BANK0     11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     852
                                             10 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   28766
                                             10 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3163
                                             20 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1239
                                             14 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     919
                                              6 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             76 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibido_1                                           0     0      0     534
                   _nrf2401_haydatos
                     _nrf2401_recibe
 ---------------------------------------------------------------------------------
 (2) _nrf2401_recibe                                       1     1      0     250
                                              6 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_haydatos                                     0     0      0     284
                         _get_Status
 ---------------------------------------------------------------------------------
 (3) _get_Status                                           0     0      0     284
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (4) _nrf2401_read                                         2     2      0     284
                                              6 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _spi_s_read                                           2     2      0     111
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrF2401_init_RX                                      1     1      0    4907
                                             10 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_direccion_TX_RX                              4     2      2     986
                                              6 COMRAM     4     2      2
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _flush_TX_RX                                          0     0      0    2013
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_write                                        2     1      1    1877
                                              6 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _nrf2401_comando                                      1     1      0     136
                                              6 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _spi_s_write                                          2     2      0     105
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_corriente_AC                                    11     7      4   19084
                                             76 COMRAM     5     1      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4547
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3650
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3146
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                             51 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                     _ADC_Initialize
                    _CCP2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_tx_ready                                  1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     186
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     240
                                              2 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _EUSART1_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   ___fladd
   ___fldiv
     ___fladd (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
   _get_corriente_AC
     _ADC_GetConversion
     ___fladd
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _recibido_1
     _nrf2401_haydatos
       _get_Status
         _nrf2401_read
           _spi_s_read
           _spi_s_write
     _nrf2401_recibe
       _spi_s_read
       _spi_s_write
   _spi_s_init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
   _trip_protec_current
     ___flge

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      7A       7       47.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     63      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllllh     23      0       0      34        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      35        0.0%
BITBIGSFRhlhhll      7      0       0      23        0.0%
BITBIGSFRhll         7      0       0      24        0.0%
BITBIGSFRllllhl      4      0       0      31        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      33        0.0%
BITBIGSFRllllhh      3      0       0      29        0.0%
BITBIGSFRlllllh      3      0       0      32        0.0%
BITBIGSFRllllhh      2      0       0      30        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRhlhhh       1      0       0      22        0.0%
BITBIGSFRlllh        1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174      36        0.0%
DATA                 0      0     174       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec 25 22:37:36 2023

                                             _I 0057                                    ___fldiv@aexp 004C  
                                  ___fldiv@bexp 004B                                               _i 00E5  
                                             _j 00E3                                               _k 00E1  
                                             _l 00DF                                    ___fldiv@sign 0044  
                                            l43 349E                                              l70 378A  
                                            l47 3632                                              l48 3634  
                                            l82 37C2                                              l67 3778  
                                            l76 35B4                                              l94 37E0  
                                            l97 37D6                             ___wmul@multiplicand 0007  
                                           l100 37EA                                             l130 3694  
                                           l133 36A2                                             l301 37CC  
                                           l206 34F2                                             l127 36DE  
                                           l160 35E2                                             l225 37FC  
                                           l209 3512                                             l411 36C0  
                                           l172 37AC                                             l191 3774  
                                           l360 3288                                             l520 3682  
                                           l265 360C                                             l353 3316  
                                           l506 2AD4                                             l363 3716  
                                           l347 375E                                             l356 324C  
                                           l373 3456                                             l517 3240  
                                           l358 3260                                             l366 379E  
                                           l374 345E                                             l383 3748  
                                           l392 307C                                             l473 27F4  
                                           l369 36FA                                             l481 2040  
                                           l482 2040                                             l491 2180  
                                           l492 2180                                             l389 3730  
                                           l398 37F2                                             l486 20E0  
                                           l487 20E0                                             l496 21EE  
                                           l817 2BFC                                             l497 21EE  
                                           l499 21F2                                             l790 2D00  
                                           l785 2CBA                                             l794 3584  
                                           l779 2F62                                 _timer1ReloadVal 00ED  
                                           _pad 30EC                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                                  ___flmul@aexp 0020                                    ___flmul@bexp 0025  
                                  ___flmul@sign 001F                                    ___flmul@temp 002A  
                                  ___flmul@prod 0026                                    ___fltol@exp1 000E  
                               _nrF2401_init_RX 300A                                            l1102 1E8E  
                                          l1104 1CEE                                            l1113 1D34  
                                          l1050 13AE                                            l1115 1DAC  
                                          l1107 1CB2                                            l1116 1D9A  
                                          l1141 1986                                            l1134 1790  
                                          l1151 1AB6                                            l1143 19FE  
                                          l1144 19EC                                            l1048 13FA  
                                          l1240 120A                                            l1065 1514  
                                          l1057 16CA                                            l1049 13E8  
                                          l1225 3102                                            l1138 1AF4  
                                          l1074 15E4                                            l1090 335C  
                                          l1075 15D2                                            l1243 0BAA  
                                          l1316 339E                                            l1333 2408  
                                          l1229 3150                                            l1245 09F0  
                                          l1309 2618                                            l1182 28E4  
                                          l1326 2DFE                                            l1175 284C  
                                          l1336 234C                                            l1353 31F6  
                                          l1273 0FF2                                            l1178 29A8  
                                          l1347 31A6                                            l1189 2940  
                                          l1365 2EB8                                            l1373 341E  
                                          l1285 3000                                            l1198 33DE  
                                          l5001 1BC2                                            l1289 3008  
                                          l5003 1BD8                                            l1379 34D8  
                                          l5021 1C2C                                            l5005 1BE8  
                                          l5013 1C08                                            l5101 16CC  
                                          l5031 1C7E                                            l5023 1C46  
                                          l5015 1C18                                            l5007 1BF0  
                                          l5111 1708                                            l5103 16D8  
                                          l5041 1CDA                                            l5033 1C8E  
                                          l5025 1C56                                            l5017 1C18  
                                          l5009 1BF4                                            l5201 1A0E  
                                          l5121 173A                                            l5113 1718  
                                          l5105 16E6                                            l6001 1EC2  
                                          l5051 1D1A                                            l5043 1CDC  
                                          l5035 1CA2                                            l5027 1C66  
                                          l5211 1A70                                            l5203 1A1A  
                                          l5131 177A                                            l5123 1748  
                                          l5115 171E                                            l5107 16E8  
                                          l6011 1F34                                            l6003 1EF4  
                                          l5061 1D56                                            l5053 1D24  
                                          l5045 1CEC                                            l5037 1CB0  
                                          l5029 1C76                                            l5221 1AD8  
                                          l5213 1A84                                            l5205 1A28  
                                          l5141 17C4                                            l5133 1780  
                                          l5125 174A                                            l5117 172E  
                                          l5109 16F8                                            l6021 1F8E  
                                          l6013 1F44                                            l6005 1EFA  
                                          l5071 1DC8                                            l5063 1D64  
                                          l5055 1D32                                            l5047 1CFE  
                                          l5039 1CBC                                            l5223 1ADA  
                                          l5215 1A9E                                            l5207 1A52  
                                          l5151 1814                                            l5143 17D0  
                                          l5135 17A0                                            l5127 175A  
                                          l5119 1734                                            l5231 3318  
                                          l6031 201A                                            l6015 1F78  
                                          l6007 1F2C                                            l6023 1FA4  
                                          l5081 1E34                                            l5073 1DD6  
                                          l5065 1D92                                            l5049 1D14  
                                          l5057 1D44                                            l5217 1ABA  
                                          l5225 1AE0                                            l5209 1A56  
                                          l5161 1856                                            l5153 1820  
                                          l5145 17DA                                            l5137 17B0  
                                          l5129 176A                                            l5233 3328  
                                          l5241 2EF8                                            l5321 2BDC  
                                          l5305 2B88                                            l5401 31A8  
                                          l6041 20A8                                            l6033 2036  
                                          l6025 1FD6                                            l6017 1F7C  
                                          l6009 1F32                                            l5091 1E82  
                                          l5083 1E4E                                            l5075 1E00  
                                          l5059 1D52                                            l5227 1AE4  
                                          l5219 1ACA                                            l5171 18B8  
                                          l5163 1862                                            l5155 182C  
                                          l5147 17F0                                            l5243 2F26  
                                          l5323 2BEC                                            l5315 2BB0  
                                          l5307 2B92                                            l5403 31BC  
                                          l5411 31DC                                            l5331 310E  
                                          l6043 20AE                                            l6051 20E4  
                                          l6035 203E                                            l6027 2008  
                                          l6019 1F8C                                            l5093 1E84  
                                          l5085 1E6A                                            l5069 1DBC  
                                          l5077 1E04                                            l5261 2C7A  
                                          l5253 2BFE                                            l5181 194E  
                                          l5173 18C4                                            l5165 1872  
                                          l5157 183A                                            l5149 17FC  
                                          l4701 1226                                            l5421 36F0  
                                          l5413 36E2                                            l5245 2F36  
                                          l5237 2EBA                                            l5317 2BBC  
                                          l5309 2B9C                                            l5341 2D22  
                                          l5405 31C8                                            l5333 311E  
                                          l5501 0AAA                                            l6061 2176  
                                          l6053 2116                                            l6045 20BA  
                                          l6029 200E                                            l6037 2044  
                                          ?_pad 0015                                            l5087 1E6E  
                                          l5079 1E1E                                            l5271 2CFE  
                                          l5263 2C88                                            l5255 2C2C  
                                          l5191 19A4                                            l5183 196C  
                                          l5175 18E0                                            l5167 188C  
                                          l5159 1846                                            l4711 125A  
                                          l4703 1228                                            l5423 36F2  
                                          l5415 36E2                                            l5247 2F5A  
                                          l5239 2EE8                                            l5319 2BCC  
                                          l5343 2D60                                            l5351 2DA0  
                                          l5407 31CC                                            l5335 3122  
                                          l5327 30EC                                            l5503 0AE8  
                                          l5431 083A                                            l6071 21C8  
                                          l6063 217E                                            l6055 2148  
                                          l6047 20D6                                            l6039 2076  
                                          l6151 29AE                                            l5089 1E7C  
                                          l5265 2C9A                                            l5257 2C3C  
                                          l5193 19A8                                            l5185 1976  
                                          l5177 190A                                            l5169 189C  
                                          l4721 128C                                            l4705 1238  
                                          l4713 1262                                            l5417 36E4  
                                          l5249 2F60                                            l5353 2DB2  
                                          l5345 2D88                                            l5409 31D8  
                                          l5337 3140                                            l5329 30FA  
                                          l5361 34A0                                            l5601 1034  
                                          l5521 0BD6                                            l5505 0AFC  
                                          l5513 0B78                                            l5441 0882  
                                          l5433 0848                                            l6081 33B6  
                                          l6073 21E4                                            l6057 214E  
                                          l6065 2184                                            l6049 20DE  
                                          l6161 29C0                                            l6153 29B0  
                                          l5267 2CA8                                            l5259 2C6A  
                                          l5195 19B6                                            l5187 1984  
                                          l5179 1940                                            l4811 1464  
                                          l4803 142C                                            l4731 12C2  
                                          l4723 1292                                            l4715 1272  
                                          l4707 1248                                            l5419 36EA  
                                          l6091 320C                                            l5275 354E  
                                          l5291 2B4C                                            l5283 2AF8  
                                          l5347 2D94                                            l5339 2D02  
                                          l5363 34A8                                            l5611 1066  
                                          l5603 1044                                            l5531 0C1A  
                                          l5523 0BDE                                            l5515 0BB2  
                                          l5507 0B30                                            l5443 0892  
                                          l5451 08BA                                            l5435 084C  
                                          l5427 0824                                            l6251 256E  
                                          l6083 33BE                                            l6075 21EC  
                                          l6067 21B6                                            l6059 215A  
                                          l6171 2A00                                            l6163 29C4  
                                          l6155 29B2                                            l5269 2CF8  
                                          l5197 19E4                                            l5189 1996  
                                          l4813 1468                                            l4805 143C  
                                          l4821 1488                                            l4741 12FE  
                                          l4733 12D2                                            l4725 12A0  
                                          l4717 1278                                            l4709 1258  
                                          l6093 3214                                            l5277 3564  
                                          l5293 2B4E                                            l5285 2B0E  
                                          l5357 2DF6                                            l5381 228E  
                                          l5373 21F4                                            l5365 3152  
                                          l4901 33EC                                            l5621 110E  
                                          l5613 1078                                            l5605 1048  
                                          l5541 0C60                                            l5533 0C2C  
                                          l5525 0BE2                                            l5517 0BC2  
                                          l5509 0B38                                            l5461 0904  
                                          l5453 08E0                                            l5445 08A2  
                                          l5437 0870                                            l5429 082A  
                                          l6253 25DA                                            l5701 2468  
                                          l6085 33CE                                            l6077 33A0  
                                          l6069 21BC                                            l6181 2AB6  
                                          l6173 2A1C                                            l6165 29CA  
                                          l6157 29B8                                            l6149 29AA  
                                          l4823 14AE                                            l4831 1504  
                                          l4815 1476                                            l4807 144A  
                                          l4751 131C                                            l4743 130C  
                                          l4735 12D4                                            l4727 12A2  
                                          l4719 128A                                            l6095 3226  
                                          l5279 3574                                            l5295 2B5E  
                                          l5391 23AC                                            l5375 2214  
                                          l5367 3160                                            l4903 33FA  
                                          l5631 115C                                            l5623 1116  
                                          l5615 107C                                            l5607 104E  
                                          l5551 0D74                                            l5543 0CC4  
                                          l5527 0BF4                                            l5535 0C34  
                                          l5519 0BCE                                            l5471 0964  
                                          l5463 0918                                            l5455 08F2  
                                          l5447 08AE                                            l5439 087A  
                                          l5711 24A8                                            l5703 2470  
                                          l6079 33AE                                            l6183 2ABA  
                                          l6175 2A74                                            l6167 29E4  
                                          l6159 29BC                                            l5801 3500  
                                          l4841 1558                                            l4833 152A  
                                          l4825 14E2                                            l4817 1478  
                                          l4809 1458                                            l4761 1330  
                                          l4753 1320                                            l4745 1310  
                                          l4729 12B2                                            l4737 12DC  
                                          l4921 32F8                                            l4913 32DE  
                                          l6097 322C                                            l6089 31F8  
                                          l5297 2B62                                            l5289 2B22  
                                          l5393 23C0                                            l5385 2300  
                                          l5377 226C                                            l5369 3174  
                                          l4681 37BC                                            l4905 33FE  
                                          l5641 11D0                                            l5633 116A  
                                          l5617 1082                                            l5609 1054  
                                          l5625 111A                                            l5561 0E32  
                                          l5553 0DA8                                            l5545 0D1C  
                                          l5537 0C3C                                            l5529 0C02  
                                          l5473 0976                                            l5465 0922  
                                          l5457 08F6                                            l5449 08B6  
                                          l5721 250A                                            l6249 24CC  
                                          l5713 24B0                                            l5705 2484  
                                          l6185 2ACC                                            l6177 2A96  
                                          l6169 29E6                                            l4851 1582  
                                          l4843 1566                                            l4835 153A  
                                          l4827 14E4                                            l4819 1482  
                                          l4771 1344                                            l4763 1334  
                                          l4755 1324                                            l4747 1314  
                                          l4739 12EC                                            l4931 3314  
                                          l4923 32FA                                            l4915 32E2  
                                          l4907 32D2                                            l6099 323E  
                                          l5299 2B70                                            l5395 23E8  
                                          l5387 233C                                            l5379 2280  
                                          l4691 2E46                                            l4683 2E00  
                                          l5643 11E6                                            l5635 119A  
                                          l5627 1138                                            l5619 10DA  
                                          l5571 0F06                                            l5563 0E42  
                                          l5555 0DDA                                            l5547 0D50  
                                          l5539 0C4C                                            l5475 097A  
                                          l5459 08FC                                            l5651 2F6C  
                                          l5731 2592                                            l5723 2532  
                                          l5707 2490                                            l6187 2AD6  
                                          l6179 2AAA                                            l4677 3778  
                                          l4861 15B4                                            l4853 1592  
                                          l4845 1568                                            l4829 14F4  
                                          l4781 1396                                            l4773 1348  
                                          l4765 1338                                            l4757 1328  
                                          l4749 1318                                            l4941 325A  
                                          l5821 3458                                            l5805 3420  
                                          l4925 32FC                                            l4917 32E4  
                                          l5397 23F8                                            l5389 2370  
                                          l4693 2E78                                            l4685 2E10  
                                          l5645 11EE                                            l5637 11A8  
                                          l5629 1154                                            l5581 0F3C  
                                          l5573 0F1A                                            l5565 0E76  
                                          l5557 0DF0                                            l5549 0D56  
                                          l5493 0A00                                            l5477 0980  
                                          l5469 093E                                            l5653 2F8E  
                                          l5661 2FDA                                            l5709 24A2  
                                          l5717 24B8                                            l5901 3378  
                                          l4679 3786                                            l5911 3620  
                                          l5663 37D8                                            l4871 160E  
                                          l4863 15CA                                            l4847 1576  
                                          l4839 154E                                            l4855 1594  
                                          l4791 13DA                                            l4783 13A6  
                                          l4767 133C                                            l4759 132C  
                                          l4775 134C                                            l4951 3270  
                                          l4943 3262                                            l4935 3244  
                                          l5671 36FE                                            l5815 342E  
                                          l5807 3422                                            l4927 3302  
                                          l4919 32EA                                            l5831 3726  
                                          l4687 2E20                                            l5639 11C0  
                                          l5591 1004                                            l5583 0F44  
                                          l5567 0ECC                                            l5575 0F1E  
                                          l5559 0E22                                            l5495 0A06  
                                          l5479 0988                                            l5487 09A0  
                                          l5655 2F96                                            l5727 255A  
                                          l5719 24EA                                            l5743 25F6  
                                          l5903 3394                                            l5921 3598  
                                          l5913 362E                                            l5665 37CE  
                                          l5761 3460                                            l4881 168A  
                                          l4873 1648                                            l4849 157E  
                                          l4857 15A2                                            l4793 13DC  
                                          l4785 13BC                                            l4777 1350  
                                          l4769 1340                                            l4697 120C  
                                          l4953 3276                                            l4945 3266  
                                          l5681 3790                                            l5673 3700  
                                          l5825 3732                                            l5817 3444  
                                          l5809 342A                                            l4929 3304  
                                          l5841 36B8                                            l5833 3728  
                                          l4689 2E2A                                            l5593 1012  
                                          l5585 0F50                                            l5577 0F2E  
                                          l5569 0ED2                                            l5497 0A3A  
                                          l5489 09BA                                            l5657 2FB2  
                                          l5649 2F64                                            l5737 25BC  
                                          l5729 2584                                            l5923 359C  
                                          l5907 360E                                            l5667 37E2  
                                          l5763 3474                                            l5771 37FA  
                                          l5931 36CE                                            l4971 1B22  
                                          l4963 1AF6                                            l4891 16AA  
                                          l4883 168E                                            l4867 15F4  
                                          l4875 164A                                            l4859 15A6  
                                          l4795 13E6                                            l4787 13C8  
                                          l4779 137A                                            l4699 1218  
                                          l5851 27F8                                            l4955 3278  
                                          l4947 3268                                            l5683 3796  
                                          l5675 370E                                            l5819 3446  
                                          l5835 372E                                            l5827 3718  
                                          l5595 1022                                            l5587 0FC8  
                                          l5579 0F36                                            l5499 0A78  
                                          l5659 2FD2                                            l5739 25E8  
                                          l5691 240A                                            l5917 3586  
                                          l5909 3612                                            l5765 3480  
                                          l5773 35B6                                            l5669 37C4  
                                          l5781 35E4                                            l5933 36D2  
                                          l5925 36C2                                            l4981 1B5C  
                                          l4973 1B32                                            l4965 1B02  
                                          l4893 16B8                                            l4885 169C  
                                          l4877 165A                                            l4869 1600  
                                          l4797 1408                                            l4789 13CC  
                                          l5853 2808                                            l4949 326E  
                                          l5685 3798                                            l5677 3710  
                                          l5829 371A                                            l5597 1026  
                                          l5589 0FE8                                            l4957 365E  
                                          l5693 242E                                            l5919 358A  
                                          l5767 348C                                            l5775 35E0  
                                          l5791 3608                                            l5783 35F0  
                                          l5935 36D6                                            l5927 36C6  
                                          l4991 1B88                                            l4983 1B62  
                                          l4975 1B42                                            l4967 1B10  
                                          l4895 16BA                                            l4887 16A2  
                                          l4879 166A                                            l4799 1418  
                                          l5871 28CE                                            l5863 2886  
                                          l5855 2816                                            l5679 378E  
                                          l5687 37EC                                            l5847 36BE  
                                          l5839 36A4                                            l5599 102C  
                                          l4959 367A                                            l5695 2436  
                                          l5793 3760                                            l5769 3498  
                                          l5777 3684                                            l5785 35F8  
                                          l5937 36DA                                            l5929 36CA  
                                          l4993 1B98                                            l4985 1B68  
                                          l4977 1B44                                            l4969 1B12  
                                          l4889 16A4                                            l5881 294E  
                                          l5873 28DA                                            l5865 288E  
                                          l5857 285C                                            l5697 2442  
                                          l5779 37A0                                            l5787 35FA  
                                          l5795 34DC                                            l4995 1BA8  
                                          l4987 1B76                                            l4979 1B4C  
                                          l5891 2996                                            l5883 2950  
                                          l5875 2916                                            l5867 289A  
                                          l5859 2872                                            l5971 306A  
                                          l5939 374A                                            l4899 33E0  
                                          l5699 2446                                            l5789 35FC  
                                          l5797 34EE                                            l4997 1BAA  
                                          l4989 1B78                                            l5893 2998  
                                          l5885 2954                                            l5877 2922  
                                          l5869 28CC                                            l5981 269C  
                                          l5973 307A                                            l5965 300C  
                                          l5799 34F0                                            l4999 1BB2  
                                          l5887 2978                                            l5879 2930  
                                          l5991 2778                                            l5983 26F4  
                                          l5975 261A                                            l5967 300E  
                                          l5889 2988                                            l5985 2726  
                                          l5977 2648                                            l5993 277E  
                                          l5969 305E                                            l5897 335E  
                                          l5995 279C                                            l5987 2736  
                                          l5979 2656                                            l5899 3366  
                                          l5989 2768                                            l5999 1E90  
                                          STR_1 080F                                            STR_2 081B  
                                          STR_5 081F                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                          u5000 1CDA                                            u5001 1CD6  
                                          u5010 1CFE                                            u5011 1CFA  
                                          u5100 1E1E                                            u5020 1D14  
                                          u5101 1E1A                                            u5021 1D10  
                                          u5110 1E4E                                            u5030 1D32  
                                          u5111 1E4A                                            u5031 1D2E  
                                          u5120 1E7C                                            u5040 1D52  
                                          u5200 17B0                                            u6000 11BC  
                                          u5121 1E78                                            u5041 1D4E  
                                          u5201 17AC                                            u4410 3786  
                                          u5050 1D64                                            u5210 192A  
                                          u5130 16E6                                            u6010 11D0  
                                          u4411 3782                                            u5051 1D60  
                                          u5131 16E2                                            u6011 11CC  
                                          u5060 1D92                                            u5300 1A9E  
                                          u5220 1984                                            u5140 16F8  
                                          u4500 12A0                                            u6100 36B8  
                                          u4420 2E10                                            u6020 2F8E  
                                          u5061 1D8E                                            u5301 1A9A  
                                          u5221 1980                                            u5141 16F4  
                                          u4501 129C                                            u6101 36B4  
                                          u4421 2E0C                                            u6021 2F8A  
                                          u5070 1DA8                                            u5310 1AD8  
                                          u5230 19A4                                            u5150 1708  
                                          u4510 12B2                                            u6110 2808  
                                          u4430 2E20                                            u6030 3000  
                                          u5071 1DA4                                            u5311 1AD4  
                                          u5231 19A0                                            u5215 1920  
                                          u5151 1704                                            u4511 12AE  
                                          u6111 2804                                            u4431 2E1C  
                                          u6031 2FFC                                            u5080 1DBC  
                                          u5240 19B6                                            u5160 1748  
                                          u4600 13FA                                            u4520 12C2  
                                          u6200 2996                                            u6120 2816  
                                          u5320 2EE8                                            u5400 3564  
                                          u4440 2E46                                            u6040 242E  
                                          u5081 1DB8                                            u5241 19B2  
                                          u5161 1744                                            u4601 13F6  
                                          u4521 12BE                                            u6201 2992  
                                          u6121 2812                                            u5321 2EE4  
                                          u5401 3560                                            u4441 2E42  
                                          u6041 242A                                            u5090 1DD6  
                                          u5250 19E4                                            u5170 175A  
                                          u4610 1408                                            u4530 12FE  
                                          u6130 2872                                            u5330 2F26  
                                          u5410 2B0E                                            u4450 2E78  
                                          u6050 2468                                            u6210 3394  
                                          u5091 1DD2                                            u5251 19E0  
                                          u5171 1756                                            u4611 1404  
                                          u4531 12FA                                            u6131 286E  
                                          u5331 2F22                                            u5411 2B0A  
                                          u4451 2E74                                            u6051 2464  
                                          u6211 3390                                            u6220 3620  
                                          u5260 19FA                                            u5180 176A  
                                          u4700 1566                                            u4620 1418  
                                          u4540 130C                                            u4460 1226  
                                          u6140 28C8                                            u5340 2F5A  
                                          u5420 2B42                                            u5500 2D42  
                                          u6060 2506                                            u6300 1F2C  
                                          u6221 361C                                            u5261 19F6  
                                          u5181 1766                                            u4701 1562  
                                          u4621 1414                                            u4541 1308  
                                          u4461 1222                                            u6141 28C4  
                                          u5341 2F56                                            u6061 2502  
                                          u6301 1F28                                            u6230 362E  
                                          u6070 36A2                                            u5350 2C2C  
                                          u5270 1A0E                                            u5190 17A0  
                                          u4710 1576                                            u4630 144A  
                                          u4550 137A                                            u4470 1238  
                                          u6150 2912                                            u5430 2B70  
                                          u5510 2D60                                            u6310 1F78  
                                          u6231 362A                                            u6071 369E  
                                          u5351 2C28                                            u5271 1A0A  
                                          u5191 179C                                            u4711 1572  
                                          u4631 1446                                            u4551 1376  
                                          u4471 1234                                            u6151 290E  
                                          u5431 2B6C                                            u5511 2D5C  
                                          u6311 1F74                                            u6240 35B4  
                                          u6080 3500                                            u5360 2C6A  
                                          u5280 1A28                                            u4800 165A  
                                          u4720 1592                                            u4640 1458  
                                          u4560 1392                                            u4480 1248  
                                          u6160 2930                                            u5440 2B84  
                                          u5520 2D88                                            u5600 226C  
                                          u6400 2176                                            u6320 1FD6  
                                          u6241 35B0                                            u6081 34FC  
                                          u5361 2C66                                            u5281 1A24  
                                          u4801 1656                                            u4721 158E  
                                          u4641 1454                                            u4561 138C  
                                          u4481 1244                                            u6161 292C  
                                          u5441 2B80                                            u5425 2B38  
                                          u5521 2D84                                            u5505 2D38  
                                          u5601 2268                                            u6401 2172  
                                          u6321 1FD2                                            u5370 2C88  
                                          u5290 1A70                                            u4810 166A  
                                          u4730 15A2                                            u4650 1476  
                                          u4570 1394                                            u4490 128A  
                                          u6170 2940                                            u6250 2726  
                                          u6090 3456                                            u5450 2BAC  
                                          u5530 2DB2                                            u5610 228E  
                                          u6410 21B6                                            u6330 2008  
                                          u5371 2C84                                            u5291 1A6C  
                                          u4811 1666                                            u4731 159E  
                                          u4651 1472                                            u4491 1286  
                                          u6171 293C                                            u6251 2722  
                                          u6091 3452                                            u5451 2BA8  
                                          u5531 2DAE                                            u5611 228A  
                                          u6411 21B2                                            u6331 2004  
                                          u4900 1B10                                            u5380 2CA8  
                                          u4820 168A                                            u4740 15B4  
                                          u4660 14AE                                            u4580 13BC  
                                          u6180 294E                                            u6260 2768  
                                          u5460 2BCC                                            u5700 0848  
                                          u6420 21E4                                            u6340 2036  
                                          u6500 2AAA                                            u4901 1B0C  
                                          u5381 2CA4                                            u4821 1686  
                                          u4741 15B0                                            u4661 14AA  
                                          u4581 13B8                                            u6181 294A  
                                          u6261 2764                                            u5461 2BC8  
                                          u5701 0844                                            u6421 21E0  
                                          u6341 2032                                            u6501 2AA6  
                                          u4910 1B22                                            u5390 2CF8  
                                          u4830 169C                                            u4750 15CA  
                                          u4670 14F4                                            u4590 13DA  
                                          u6190 2988                                            u6270 279C  
                                          u6430 320C                                            u5470 2BDC  
                                          u5550 2DEC                                            u5630 22FC  
                                          u5710 0892                                            u6350 2076  
                                          u6510 2ACC                                            u4911 1B1E  
                                          u5391 2CF4                                            u4831 1698  
                                          u4751 15C6                                            u4671 14F0  
                                          u4591 13D6                                            u6191 2984  
                                          u6271 2798                                            u6431 3208  
                                          u5471 2BD8                                            u5551 2DE6  
                                          u5631 22F8                                            u5711 088E  
                                          u6351 2072                                            u6511 2AC8  
                                          u4920 1B32                                            u4840 16B8  
                                          u4760 15E0                                            u4680 152A  
                                          u6440 3226                                            u5560 2DEE  
                                          u5640 2320                                            u5480 30FA  
                                          u5800 0AE8                                            u5720 08A2  
                                          u6360 20A8                                            u6280 1EC2  
                                          u4921 1B2E                                            u4841 16B4  
                                          u4761 15DC                                            u4681 1526  
                                          u6441 3222                                            u5545 2DC4  
                                          u5625 22A2                                            u5481 30F6  
                                          u5801 0AE4                                            u5721 089E  
                                          u6361 20A4                                            u6281 1EBE  
                                          u4930 1B76                                            u4770 15F4  
                                          u4690 153A                                            u6450 323E  
                                          u5650 233C                                            u5626 22AC  
                                          u4850 341E                                            u5490 3140  
                                          u5570 34D8                                            u5810 0B74  
                                          u5730 08E0                                            u6370 20D6  
                                          u6290 1EF4                                            u4931 1B72  
                                          u4771 15F0                                            u4691 1536  
                                          u6451 323A                                            u5651 2338  
                                          u5627 22BC                                            u4851 341A  
                                          u5491 313C                                            u5571 34D4  
                                          u5811 0B70                                            u5731 08DC  
                                          u6371 20D2                                            u6291 1EF0  
                                          u4940 1B88                                            u4780 160E  
                                          u4860 32F8                                            u5660 2390  
                                          u5580 3160                                            u5900 0E32  
                                          u5820 0BAA                                            u5740 08F2  
                                          u6380 2116                                            u4941 1B84  
                                          u4781 160A                                            u4861 32F4  
                                          u5645 2316                                            u5581 315C  
                                          u5901 0E2E                                            u5821 0BA6  
                                          u5741 08EE                                            u6381 2112  
                                          u4950 1B98                                            u4790 1648  
                                          u4870 3314                                            u5670 23AC  
                                          u5590 223C                                            u5910 0ECC  
                                          u5830 0BC2                                            u5750 0964  
                                          u6390 2148                                            u4951 1B94  
                                          u4791 1644                                            u6607 345A  
                                          u4871 3310                                            u5671 23A8  
                                          u5911 0EC8                                            u5831 0BBE  
                                          u5751 0960                                            u6391 2144  
                                          u6527 29D6                                            u4960 1BD8  
                                          u4880 325A                                            u5680 23E8  
                                          u5920 0F1A                                            u5840 0BF4  
                                          u5760 0976                                            u4961 1BD4  
                                          u4881 3256                                            u6617 3712  
                                          u5681 23E4                                            u5665 2386  
                                          u5921 0F16                                            u5841 0BF0  
                                          u5761 0972                                            u6537 29F2  
                                          u4970 1C18                                            u4890 3288  
                                          u5690 31F6                                            u5930 0FC8  
                                          u5850 0C02                                            u5770 09EC  
                                          u4971 1C14                                            u4891 3284  
                                          u6627 379A                                            u5595 2232  
                                          u5691 31F2                                            u5931 0FC4  
                                          u5851 0BFE                                            u5771 09E8  
                                          u6547 2AE2                                            u4980 1C8E  
                                          u5940 1004                                            u5860 0C2C  
                                          u5780 0A78                                            u4981 1C8A  
                                          u6637 326A                                            u5941 1000  
                                          u5861 0C28                                            u5781 0A74  
                                          u6557 1F98                                            u4990 1CB0  
                                          u5950 1012                                            u5870 0D74  
                                          u5790 0AAA                                            u4991 1CAC  
                                          u6647 3272                                            u6567 372A  
                                          u5951 100E                                            u5871 0D70  
                                          u5791 0AA6                                            u5960 1066  
                                          u5880 0DDA                                            u6577 36F4  
                                          u5961 1062                                            u5881 0DD6  
                                          u5970 1138                                            u5890 0E22  
                                          u6587 32E6                                            u5971 1134  
                                          u5891 0E1E                                            u5980 1154  
                                          u6597 32FE                                            u5981 1150  
                                          u5990 11BA                                            u5991 11B4  
                                          _TMR1 0FCE                                            _WPUB 0F85  
                                 _EUSART1_Write 3776                                            _dbuf 010C  
                       __end_of_CCP2_Initialize 37AE                                            _labs 3152  
                                          _main 29AA                                            _prec 00DD  
                                          pad@i 001B                                            pad@p 0018  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            btemp 005B  
                                 ___fpclassifyf 2D02                                            prodh 0FF4  
                                          prodl 0FF3                                            start 004C  
                               ___fldiv@new_exp 0045                                nrf2401_write@reg 0008  
                    ??_TMR1_SetInterruptHandler 0007                                    ?_flush_TX_RX 0001  
                                  ___param_bank 0000                                           ??_pad 001A  
               __end_of_nrf2401_direccion_TX_RX 3460                       get_corriente_AC@corriente 0062  
                 __end_of_OSCILLATOR_Initialize 36A4                                   ___fltol@sign1 000D  
                                         ?_labs 0005                                 __end_of___fladd 16CC  
                                         ?_main 0001                                 __end_of___fldiv 1E90  
                               __end_of___flneg 3586                                 __end_of___flmul 1AF6  
                               __end_of___flsub 335E                                 __end_of___fltol 2BFE  
                          nrf2401_recibe@valor_ 0007                    __end_of_EUSART1_Write_string 35B6  
                                         _T1CON 0FCD                                           _LATA5 7C4D  
                                         i2l304 37FE                                           i2l232 0040  
                                         i2l294 354C                                           i2l279 365C  
                                         i2l298 32D0                                    vfpfcnvrt@fmt 009F  
                                         _TMR1H 0FCF                                           _TMR1L 0FCE  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                                           _I_max 00CF  
                                         _I_min 00CB                                           _I_rms 0108  
                              __end_of_TMR1_ISR 354E                                           _flags 00F7  
                           read_prec_or_width@c 000D                             read_prec_or_width@n 000E  
                                         _fputc 2E00                                           _fputs 33E0  
                                         _valor 00E7                                           labs@a 0005  
                                         pad@fp 0015                                           _width 00DB  
                                         _texto 00F9                                           _putch 37BA  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 360E  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         status 0FD8                                           wtemp8 005C  
                               __end_of_sprintf 33E0                                  ?___fpclassifyf 0005  
            _EUSART1_DefaultFramingErrorHandler 0000                                 _TMR1_WriteTimer 3636  
                               __initialization 307E                                    __end_of_labs 31A8  
                    __end_of_EUSART1_Initialize 34A0                                    __end_of_main 2AF8  
                              spi_s_read@cont_s 0006                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_labs 0009                                          ??_main 00C1  
                                 __activetblptr 0002                         __end_of_nrF2401_init_RX 307E  
                    __end_of_read_prec_or_width 300A                            __end_of_nrf2401_read 36FC  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0007  
                                        _ACTCON 0FB5                                          ?_fputs 000F  
                                        _ADRESH 0FC4                                          _ADRESL 0FC3  
                                        _CCPR2H 0F91                                          _CCPR2L 0F90  
                                        _ANSELA 0F5B                                          ?_putch 0001  
                                        _ANSELB 0F5C                                          _ANSELC 0F5D  
                                        _T1GCON 0FCC                         TMR1_WriteTimer@timerVal 0001  
                          __end_of_direccion_rx 0806                            __end_of_direccion_tx 080F  
                                        i2l4181 3644                                          i2l4191 3658  
                                        i2l4183 3646                                          i2l4351 3542  
                                        i2l4343 3514                                          i2l4193 328A  
                                        i2l4185 364A                                          i2l4345 3516  
                                        i2l4521 0020                                          i2l4195 32B6  
                                        i2l4187 364E                                          i2l4179 3636  
                                        i2l4347 3522                                          i2l4523 002E  
                                        i2l4189 3654                                          i2l4349 353E  
                                        i2l4525 003C                                          i2l4519 0012  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                          _PLLRDY 7E97  
                                        _SPBRG1 0FAF                                ?_CCP2_Initialize 0001  
                                        _TXREG1 0FAD                                __end_of___xxtofl 29AA  
                                        _TXSTA1 0FAC            __end_of_TMR1_DefaultInterruptHandler 3800  
                  _TMR1_DefaultInterruptHandler 37FE                                    vfprintf@cfmt 00AC  
                                        ___flge 2BFE                                          ___fleq 2EBA  
                               _nrf2401_comando 378C                                       ??___fladd 000D  
                                        ___wmul 365E                                       ??___fldiv 003C  
                                     ??___flneg 0009                                       ??___flmul 001B  
                                     ??___flsub 0034                                       ??___fltol 0009  
                                        _efgtoa 0824                                          _conteo 00D7  
                      ?_EUSART1_SetErrorHandler 0005                                          _floorf 21F4  
                                        _letra1 00FD                                          _estado 00F8  
                                        _letra2 00FB                                          _memcpy 31A8  
                          read_prec_or_width@ap 000C                                          _offset 016A  
                                        clear_0 30C4                                          clear_1 30D0  
                                        isa$std 0001                                          pad@buf 0016  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strcpy 34A0                                          fputc@c 0007  
                                        fputs@c 0012                                          fputs@i 0013  
                                        fputs@s 000F                                 ___fpclassifyf@e 000D  
                               ___fpclassifyf@u 000F                                 ___fpclassifyf@x 0005  
                                  __mediumconst 0000                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                      ADC_GetConversion@channel 0009                                __end_of_vfprintf 33A0  
                               ??_EUSART1_Write 0005        TMR1_SetInterruptHandler@InterruptHandler 0005  
                                     ??_sprintf 0057                         __end_of_TMR1_WriteTimer 365E  
                         __end_of_TMR1_CallBack 32D2                                      ___flge@ff1 002C  
                                    ___flge@ff2 0030                                 ??___fpclassifyf 0009  
                              ?_TMR1_Initialize 0001                                    ___xxtofl@arg 000F  
                                  ___xxtofl@exp 000E                               _SYSTEM_Initialize 36C2  
                                  ___xxtofl@val 0005                                      ___fleq@ff1 0005  
                                    ___fleq@ff2 0009                            nrF2401_init_RX@canal 000B  
                                    __accesstop 0060                         __end_of__initialization 30DE  
                                    ___flneg@f1 0005                                    ?_spi_s_write 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 0001  
                                    ___fltol@f1 0005                            _EUSART1_Write_string 3586  
                            nrf2401_write@valor 0007                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 37F4                                    __pidataBANK1 37AE  
                           ??_SYSTEM_Initialize 0007                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 2EBA                                   __end_of_fputs 3420  
                                 __end_of_putch 37C4                                ?_nrF2401_init_RX 0001  
                                       ??_fputc 000A                       __end_of_SYSTEM_Initialize 36E0  
                                       ??_fputs 0012                                         ??_putch 0006  
                                    __pbssBANK0 00C3                                      __pbssBANK1 0100  
                       __end_of_nrf2401_comando 37A0                           ?_EUSART1_Write_string 0006  
                              _get_corriente_AC 261A                 __end_of_EUSART1_SetErrorHandler 37EC  
                        nrf2401_comando@comando 0007                           __end_of_nrf2401_write 3718  
                                       ?___flge 002C                                         ?___fleq 0005  
                                       ?___wmul 0005                                      ??_TMR1_ISR 0003  
                                       ?_efgtoa 006A                                         _CCP2CON 0F97  
                                       ?_floorf 004D                                         ?_memcpy 0005  
                                       ?_strcpy 0005          __end_of_EUSART1_SetFramingErrorHandler 37E2  
                _EUSART1_SetFramingErrorHandler 37D8                                      _get_Status 37EC  
                                     ?___xxtofl 0005                                         _OSCCON2 0FD2  
                      ?_nrf2401_direccion_TX_RX 0007                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0FB0                   nrf2401_direccion_TX_RX@cont_s 000A  
                              ?_TMR1_WriteTimer 0001                            _ADC_InterruptHandler 00EF  
                                       __Hparam 0000                                         __Lparam 0000  
                                  _nrf2401_read 36E0                                         ___fladd 120C  
                                       ___fldiv 1AF6                                         ___flneg 354E  
                                       ___flmul 16CC                                         ___flsub 3318  
                                       ___fltol 2AF8                                _nrf2401_haydatos 36A4  
                                     ?_vfprintf 00A9                                    __psmallconst 0800  
                                    _currentSeg 00C7                                    _direccion_rx 0801  
                                  _direccion_tx 080A                                         __pcinit 307E  
                                       __ramtop 0800                             _EUSART1_is_tx_ready 360E  
                                       __ptext0 29AA                                         __ptext1 1E90  
                                       __ptext2 33A0                                         __ptext3 335E  
                                       __ptext4 240A                                         __ptext5 2F64  
                                       __ptext6 365E                                         __ptext7 0824  
                                       __ptext8 34A0                                         __ptext9 30EC  
                ??_TMR1_DefaultInterruptHandler 0001                                       _T1CONbits 0FCD  
                              spi_s_write@dato_ 0005                           _OSCILLATOR_Initialize 3684  
                                    _recibido_1 31F8                           read_prec_or_width@fmt 000B  
                                    ??___xxtofl 0009                              _EUSART1_Initialize 3460  
                      ??_PIN_MANAGER_Initialize 0005                       ?_TMR1_SetInterruptHandler 0005  
                                       efgtoa@c 006F                                         efgtoa@d 007D  
                                       efgtoa@e 0081                                         efgtoa@f 006B  
                                       efgtoa@g 0094                                         efgtoa@h 008B  
                                       efgtoa@i 0089                                         efgtoa@l 008F  
                                       efgtoa@m 007F                                         efgtoa@n 0098  
                                       efgtoa@p 0074                                         efgtoa@t 0076  
                                       efgtoa@u 009A                                         efgtoa@w 0083  
                      EUSART1_Write_string@data 0006                               __end_of_intervalo 080A  
                                       _sprintf 33A0                                         _voltaje 00D3  
             nrf2401_direccion_TX_RX@direccion_ 0007                            end_of_initialization 30DE  
                                       floorf@e 0064                                         floorf@m 0060  
                                       floorf@u 0066                                         floorf@x 004D  
                           ?_EUSART1_Initialize 0001                            ?_EUSART1_is_tx_ready 0001  
                                       memcpy@d 000C                                         memcpy@n 0009  
                                       memcpy@s 000E                                         fputc@fp 0009  
                        ??_EUSART1_Write_string 0008                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 00F3                                         fputs@fp 0011  
                              ?_nrf2401_comando 0001                              _read_prec_or_width 2F64  
                             __end_of_vfpfcnvrt 261A                                      efgtoa@mode 007B  
                                    efgtoa@sign 0093                                         postdec1 0FE5  
                                       postdec2 0FDD                             ?_read_prec_or_width 000B  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 00A3  
                                    ??_vfprintf 0057                            ??_EUSART1_Initialize 0007  
                                       strcpy@d 0009                                       _PORTBbits 0F81  
                                   ?_get_Status 0001                                      _spi_s_init 374A  
                                    _spi_s_read 32D2                                     ___fladd@grs 0014  
                                 ___xxtofl@sign 000D                                 nrf2401_read@reg 0007  
                                     _TRISBbits 0F93                                       _TRISCbits 0F94  
                          ??_read_prec_or_width 000D                                     ___fldiv@grs 0047  
                                   ___fldiv@rem 0040                             _trip_protec_current 1E90  
                           EUSART1_Write@txData 0005                           ??_EUSART1_is_tx_ready 0005  
                                   ___flmul@grs 0021                            ?_trip_protec_current 0001  
                  __end_of_INTERRUPT_Initialize 37FE                                  __end_of___flge 2D02  
                                __end_of___fleq 2F64                                     vfpfcnvrt@ap 00A0  
                                   vfpfcnvrt@cp 00A8                                     vfpfcnvrt@fp 009E  
                                __end_of___wmul 3684                                  __end_of_efgtoa 120C  
                                _ADC_Initialize 3760                                  __end_of_floorf 240A  
                                __end_of_memcpy 31F8                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F521 0100                                     ?_recibido_1 0001  
                                __end_of_strcpy 34DA                             start_initialization 307E  
                      __end_of_get_corriente_AC 27F6                                     __end_of_pad 3152  
                               spi_s_read@dato_ 0005                                     putch@txData 0006  
                         __end_of_EUSART1_Write 378C                           __end_of___fpclassifyf 2E00  
                                 ??_flush_TX_RX 0009                                     vfprintf@fmt 00AA  
                         ??_trip_protec_current 0038                                        ??___flge 0034  
                                      ??___fleq 000D                                  _nrf2401_recibe 3718  
                                      ??___wmul 0009                                        ??_efgtoa 0070  
                        __end_of_ADC_Initialize 3776                                     __pdataBANK0 00FB  
                                   __pdataBANK1 016A                                        ??_floorf 0051  
                                      ??_memcpy 000B                                        ??_strcpy 0008  
                                     ___fladd@a 0009                                       ___fladd@b 0005  
                                   ?_spi_s_init 0001                                     ?_spi_s_read 0001  
                                     ___fldiv@a 0038                                       ___fldiv@b 0034  
                         TMR1_ISR@CountCallBack 00E9                                       ___flmul@a 0017  
                                     ___flmul@b 0013                                     __pbssCOMRAM 0057  
                                     ___flsub@a 0030                                       ___flsub@b 002C  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0176  
                             get_corriente_AC@i 0060                        __end_of_nrf2401_haydatos 36C2  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                                   _efgtoa$1975 0078                                       _main$2377 0176  
                        __end_of_nrf2401_recibe 3732                          _PIN_MANAGER_Initialize 35B6  
                       _EUSART1_is_tx_ready$282 0005                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 37CE                                     _dato_serial 00FF  
                                      ?___fladd 0005                                        ?___fldiv 0034  
                                      ?___flneg 0005                                        ?___flmul 0013  
                                      ?___flsub 002C                                        ?___fltol 0005  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 0003  
                           __end_of_flush_TX_RX 374A                                     __smallconst 0800  
                             ??_CCP2_Initialize 0005                 nrf2401_direccion_TX_RX@registro 0008  
                                      _BAUDCON1 0FB8              _EUSART1_DefaultOverrunErrorHandler 0000  
                          _EUSART1_ErrorHandler 00F1                         _EUSART1_SetErrorHandler 37E2  
                                      ?_sprintf 00AD                            _INTERRUPT_Initialize 37FA  
                                 _TMR1_CallBack 328A                                       _intervalo 0806  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _LATBbits 0F8A                                        _LATCbits 0F8B  
                                      _PIE1bits 0F9D                                        i2u410_40 353E  
                                      i2u410_41 353A                                 ?_nrf2401_recibe 0001  
                                      i2u432_40 0020                                        i2u432_41 001C  
                                      i2u433_40 002E                                        i2u433_41 002A  
                                      _PIR1bits 0F9E                                        i2u434_40 003C  
                                      i2u434_41 0038                                        i2u390_40 32B6  
                                      i2u390_41 32B2                                        i2u391_48 32BC  
                                      i2u391_49 32D0                                        i2u389_40 3644  
                                      i2u389_41 3640                                        _RCONbits 0FD0  
                                      _TMR1_ISR 3514                                       _vfpfcnvrt 240A  
                             ??_TMR1_Initialize 0007                                      _ADCON0bits 0FC2  
                             ___wmul@multiplier 0005                                    ??_get_Status 0009  
                                    vfpfcnvrt@c 00A7                                     _INTCON2bits 0FF1  
                                     copy_data0 3092                                       copy_data1 30B2  
                    get_corriente_AC@n_muestras 004D                           ?_INTERRUPT_Initialize 0001  
                                ?_TMR1_CallBack 0001                                   ??_spi_s_write 0005  
                                      __Hrparam 0000                              __end_of_get_Status 37F4  
                             ??_nrF2401_init_RX 000B                                       memcpy@tmp 000B  
                                    vfprintf@ap 00AB                                        __Lrparam 0000  
                                    vfprintf@fp 00A9                               _ADC_GetConversion 34DA  
                                   _flush_TX_RX 3732                                   _nrf2401_write 36FC  
                       ??_OSCILLATOR_Initialize 0005                              ?_ADC_GetConversion 0005  
                                    ?_vfpfcnvrt 009E                        _TMR1_SetInterruptHandler 37C4  
                            ___fpclassifyf@F465 0104                           _TMR1_InterruptHandler 00EB  
                     ??_EUSART1_SetErrorHandler 0007                                    ??_recibido_1 0009  
                   _EUSART1_DefaultErrorHandler 0000                             ??_ADC_GetConversion 0007  
                                    sprintf@fmt 00AF                                        ___xxtofl 27F6  
                   __end_of_EUSART1_is_tx_ready 3636                               ?_get_corriente_AC 004D  
                                      __ptext10 33E0                                        __ptext11 2E00  
                                      __ptext20 374A                                        __ptext12 37BA  
                                      __ptext21 31F8                                        __ptext13 31A8  
                                    _T1GCONbits 0FCC                                        __ptext30 36FC  
                                      __ptext22 3718                                        __ptext14 3152  
                                      __ptext31 378C                                        __ptext23 36A4  
                                      __ptext15 21F4                                        __ptext40 34DA  
                                      __ptext32 3242                                        __ptext24 37EC  
                                      __ptext16 2D02                                        __ptext41 36C2  
                                      __ptext33 261A                                        __ptext25 36E0  
                                      __ptext17 2AF8                                        __ptext50 37E2  
                                      __ptext42 35E4                                        __ptext34 27F6  
                                      __ptext26 32D2                                        __ptext18 354E  
                                      __ptext51 37A0                                        __ptext43 37C4  
                                      __ptext35 3318                                        __ptext27 300A  
                                      __ptext19 2EBA                                        __ptext60 37FE  
                                      __ptext52 3760                                        __ptext44 35B6  
                                      __ptext36 120C                                        __ptext28 3420  
                                      __ptext61 0000                                        __ptext53 360E  
                                      __ptext45 3684                                        __ptext37 16CC  
                                      __ptext29 3732                                        __ptext54 3586  
                                      __ptext46 37FA                                        __ptext38 2BFE  
                                      __ptext55 3776                                        __ptext47 3460  
                                      __ptext39 1AF6                                        __ptext48 37CE  
                                      __ptext57 3514                                        __ptext49 37D8  
                                      __ptext58 3636                                        __ptext59 328A  
                            ??_get_corriente_AC 0051                                      strcpy@dest 0005  
                             spi_s_write@cont_s 0006                         _nrf2401_direccion_TX_RX 3420  
                                _previousMillis 00C3                       __end_of_ADC_GetConversion 3514  
                                      _relacion 016E                                        efgtoa@fp 006A  
                                      efgtoa@ne 0072                                        efgtoa@pp 007A  
                                      efgtoa@ou 0085                              __end_of_recibido_1 3242  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 0000  
                                ?_nrf2401_write 0007                             __end_of_spi_s_write 328A  
                                      int$flags 005B                                        _vfprintf 335E  
            __end_of_INTERRUPT_InterruptManager 004C                      _INTERRUPT_InterruptManager 0008  
                             ??_TMR1_WriteTimer 0003                     _EUSART1_FramingErrorHandler 00F5  
                                  _sensibilidad 0172                                    ??_spi_s_init 0005  
                                  ??_spi_s_read 0005                                      _INTCONbits 0FF2  
                                      memcpy@d1 0005                                        memcpy@s1 0007  
                        ??_INTERRUPT_Initialize 0005                                 ??_TMR1_CallBack 0001  
                                      intlevel2 0000                                       sprintf@ap 00B4  
                             ?_nrf2401_haydatos 0001                                    _valor_string 015C  
                       ?_PIN_MANAGER_Initialize 0001                     __end_of_trip_protec_current 21F4  
                            ??_nrf2401_haydatos 0009          __end_of_EUSART1_SetOverrunErrorHandler 37D8  
                _EUSART1_SetOverrunErrorHandler 37CE                                       strcpy@src 0007  
                                    _RCSTA1bits 0FAB                                ??_ADC_Initialize 0005  
                                 ?_nrf2401_read 0001                              __end_of_spi_s_init 3760  
                            __end_of_spi_s_read 3318                                 _CCP2_Initialize 37A0  
                                   efgtoa@nmode 007C  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                                   ??_vfpfcnvrt 00A1                              _eusart1RxLastError 00FA  
                                      sprintf@f 00B5                                        sprintf@s 00AD  
                             ??_nrf2401_comando 0007                                   ___fladd@signs 0011  
                     ??_nrf2401_direccion_TX_RX 0009                  __end_of_PIN_MANAGER_Initialize 35E4  
                              ??_nrf2401_recibe 0007                                    ___fladd@aexp 0012  
                                  ___fladd@bexp 0013                               nrf2401_read@dato_ 0008  
                                   _spi_s_write 3242                                 _TMR1_Initialize 35E4  
                               ??_nrf2401_write 0008                                  ??_nrf2401_read 0007  
