

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Sep 25 13:37:02 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 21/07/2023 GMT
    89                           ; 
    90                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F25K50 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   000000                     
   123 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   124   000000                     
   125 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   126   000000                     
   127 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   128   000000                     
   129                           	psect	idataBANK1
   130   003836                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for _offset
   134                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;;main.c: 85: double re
      +                          lacion = 0.100;;main.c: 86: double I = 0.0;;main.c: 87: double I_max = 0.0;;main.c: 88: 
      +                          double I_min = 0.0;;main.c: 89: double I_rms = 0.0;;main.c: 90: double offset = 0.100;
   135   003836  CCCD               	dw	52429
   136   003838  3DCC               	dw	15820
   137                           
   138                           ;initializer for _relacion
   139                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;;main.c: 85: double re
      +                          lacion = 0.100;
   140   00383A  CCCD               	dw	52429
   141   00383C  3DCC               	dw	15820
   142                           
   143                           ;initializer for _sensibilidad
   144                           ;main.c: 74: unsigned char dato_serial = 0;;main.c: 82: unsigned int valor = 0;;main.c: 
      +                          83: double voltaje = 0.0;;main.c: 84: double sensibilidad = 0.282;
   145   00383E  624E               	dw	25166
   146   003840  3E90               	dw	16016
   147                           
   148                           	psect	smallconst
   149   000800                     __psmallconst:
   150                           	callstack 0
   151   000800  00                 	db	0
   152   000801                     _direccion_rx:
   153                           	callstack 0
   154   000801  11                 	db	17
   155   000802  11                 	db	17
   156   000803  11                 	db	17
   157   000804  11                 	db	17
   158   000805  11                 	db	17
   159   000806                     __end_of_direccion_rx:
   160                           	callstack 0
   161   000806  3840               	dw	14400
   162   000808  0000               	dw	0
   163   00080A                     __end_of_intervalo:
   164                           	callstack 0
   165   00080A                     _direccion_tx:
   166                           	callstack 0
   167   00080A  11                 	db	17
   168   00080B  11                 	db	17
   169   00080C  11                 	db	17
   170   00080D  11                 	db	17
   171   00080E  11                 	db	17
   172   00080F                     __end_of_direccion_tx:
   173                           	callstack 0
   174   000000                     _T1CON	set	4045
   175   000000                     _TMR1L	set	4046
   176   000000                     _TMR1H	set	4047
   177   000000                     _ADCON0	set	4034
   178   000000                     _ADRESL	set	4035
   179   000000                     _CCPR2H	set	3985
   180   000000                     _TXREG1	set	4013
   181   000000                     _RCREG1	set	4014
   182   000000                     _SPBRG1	set	4015
   183   000000                     _TXSTA1	set	4012
   184   000000                     _TMR1	set	4046
   185   000000                     _LATCbits	set	3979
   186   000000                     _LATBbits	set	3978
   187   000000                     _TRISBbits	set	3987
   188   000000                     _TRISCbits	set	3988
   189   000000                     _T1GCONbits	set	4044
   190   000000                     _T1CONbits	set	4045
   191   000000                     _ADCON0bits	set	4034
   192   000000                     _RCSTA1bits	set	4011
   193   000000                     _TXSTA1bits	set	4012
   194   000000                     _LATA5	set	31821
   195   000000                     _PLLRDY	set	32407
   196   000000                     _ANSELA	set	3931
   197   000000                     _ANSELB	set	3932
   198   000000                     _ANSELC	set	3933
   199   000000                     _LATA	set	3977
   200   000000                     _OSCTUNE	set	3995
   201   000000                     _PIR1bits	set	3998
   202   000000                     _RCSTA1	set	4011
   203   000000                     _BAUDCON1	set	4024
   204   000000                     _ADCON2	set	4032
   205   000000                     _ADCON1	set	4033
   206   000000                     _OSCCON2	set	4050
   207   000000                     _OSCCON	set	4051
   208   000000                     _ACTCON	set	4021
   209   000000                     _SPBRGH1	set	4016
   210   000000                     _INTCON2bits	set	4081
   211   000000                     _PIE1bits	set	3997
   212   000000                     _CCPR2L	set	3984
   213   000000                     _TRISA	set	3986
   214   000000                     _LATC	set	3979
   215   000000                     _LATB	set	3978
   216   000000                     _CCP2CON	set	3991
   217   000000                     _TRISC	set	3988
   218   000000                     _TRISB	set	3987
   219   000000                     _PORTBbits	set	3969
   220   000000                     _WPUB	set	3973
   221   000000                     _INTCONbits	set	4082
   222   000000                     _T1GCON	set	4044
   223   000000                     _RCONbits	set	4048
   224   000000                     _ADRESH	set	4036
   225   00080F                     STR_1:
   226   00080F  25                 	db	37
   227   000810  2E                 	db	46
   228   000811  33                 	db	51	;'3'
   229   000812  66                 	db	102	;'f'
   230   000813  20                 	db	32
   231   000814  41                 	db	65	;'A'
   232   000815  6D                 	db	109	;'m'
   233   000816  70                 	db	112	;'p'
   234   000817  2E                 	db	46
   235   000818  0A                 	db	10
   236   000819  0D                 	db	13
   237   00081A  00                 	db	0
   238   00081B                     STR_2:
   239   00081B  69                 	db	105	;'i'
   240   00081C  6E                 	db	110	;'n'
   241   00081D  66                 	db	102	;'f'
   242   00081E  00                 	db	0
   243   00081F                     STR_5:
   244   00081F  6E                 	db	110	;'n'
   245   000820  61                 	db	97	;'a'
   246   000821  6E                 	db	110	;'n'
   247   000822  00                 	db	0
   248   000823  00                 	db	0	; dummy byte at the end
   249   000000                     
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253   003200                     __pcinit:
   254                           	callstack 0
   255   003200                     start_initialization:
   256                           	callstack 0
   257   003200                     __initialization:
   258                           	callstack 0
   259                           
   260                           ; Initialize objects allocated to BANK1 (12 bytes)
   261                           ; load TBLPTR registers with __pidataBANK1
   262   003200  0E36               	movlw	low __pidataBANK1
   263   003202  6EF6               	movwf	tblptrl,c
   264   003204  0E38               	movlw	high __pidataBANK1
   265   003206  6EF7               	movwf	tblptrh,c
   266   003208  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   267   00320A  6EF8               	movwf	tblptru,c
   268   00320C  EE01  F062         	lfsr	0,__pdataBANK1
   269   003210  EE10 F00C          	lfsr	1,12
   270   003214                     copy_data0:
   271   003214  0009               	tblrd		*+
   272   003216  CFF5 FFEE          	movff	tablat,postinc0
   273   00321A  50E5               	movf	postdec1,w,c
   274   00321C  50E1               	movf	fsr1l,w,c
   275   00321E  E1FA               	bnz	copy_data0
   276                           
   277                           ; Clear objects allocated to BANK1 (98 bytes)
   278   003220  EE01  F000         	lfsr	0,__pbssBANK1
   279   003224  0E62               	movlw	98
   280   003226                     clear_0:
   281   003226  6AEE               	clrf	postinc0,c
   282   003228  06E8               	decf	wreg,f,c
   283   00322A  E1FD               	bnz	clear_0
   284                           
   285                           ; Clear objects allocated to BANK0 (63 bytes)
   286   00322C  EE00  F0C1         	lfsr	0,__pbssBANK0
   287   003230  0E3F               	movlw	63
   288   003232                     clear_1:
   289   003232  6AEE               	clrf	postinc0,c
   290   003234  06E8               	decf	wreg,f,c
   291   003236  E1FD               	bnz	clear_1
   292                           
   293                           ; Clear objects allocated to COMRAM (4 bytes)
   294   003238  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   295   00323A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   296   00323C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   297   00323E  6A57               	clrf	__pbssCOMRAM& (0+255),c
   298   003240                     end_of_initialization:
   299                           	callstack 0
   300   003240                     __end_of__initialization:
   301                           	callstack 0
   302   003240  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   303   003242  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   304   003244  0E00               	movlw	low (__Lmediumconst shr (0+16))
   305   003246  6EF8               	movwf	tblptru,c
   306   003248  0100               	movlb	0
   307   00324A  EF94  F014         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMRAM
   310   000057                     __pbssCOMRAM:
   311                           	callstack 0
   312   000057                     _I:
   313                           	callstack 0
   314   000057                     	ds	4
   315                           
   316                           	psect	bssBANK0
   317   0000C1                     __pbssBANK0:
   318                           	callstack 0
   319   0000C1                     floorf@F521:
   320                           	callstack 0
   321   0000C1                     	ds	4
   322   0000C5                     ___fpclassifyf@F465:
   323                           	callstack 0
   324   0000C5                     	ds	4
   325   0000C9                     _previousMillis:
   326                           	callstack 0
   327   0000C9                     	ds	4
   328   0000CD                     _currentSeg:
   329                           	callstack 0
   330   0000CD                     	ds	4
   331   0000D1                     _I_min:
   332                           	callstack 0
   333   0000D1                     	ds	4
   334   0000D5                     _I_max:
   335                           	callstack 0
   336   0000D5                     	ds	4
   337   0000D9                     _voltaje:
   338                           	callstack 0
   339   0000D9                     	ds	4
   340   0000DD                     _conteo:
   341                           	callstack 0
   342   0000DD                     	ds	4
   343   0000E1                     _width:
   344                           	callstack 0
   345   0000E1                     	ds	2
   346   0000E3                     _prec:
   347                           	callstack 0
   348   0000E3                     	ds	2
   349   0000E5                     _l:
   350                           	callstack 0
   351   0000E5                     	ds	2
   352   0000E7                     _k:
   353                           	callstack 0
   354   0000E7                     	ds	2
   355   0000E9                     _j:
   356                           	callstack 0
   357   0000E9                     	ds	2
   358   0000EB                     _i:
   359                           	callstack 0
   360   0000EB                     	ds	2
   361   0000ED                     _valor:
   362                           	callstack 0
   363   0000ED                     	ds	2
   364   0000EF                     TMR1_ISR@CountCallBack:
   365                           	callstack 0
   366   0000EF                     	ds	2
   367   0000F1                     _TMR1_InterruptHandler:
   368                           	callstack 0
   369   0000F1                     	ds	2
   370   0000F3                     _timer1ReloadVal:
   371                           	callstack 0
   372   0000F3                     	ds	2
   373   0000F5                     _ADC_InterruptHandler:
   374                           	callstack 0
   375   0000F5                     	ds	2
   376   0000F7                     _EUSART1_ErrorHandler:
   377                           	callstack 0
   378   0000F7                     	ds	2
   379   0000F9                     _EUSART1_OverrunErrorHandler:
   380                           	callstack 0
   381   0000F9                     	ds	2
   382   0000FB                     _EUSART1_FramingErrorHandler:
   383                           	callstack 0
   384   0000FB                     	ds	2
   385   0000FD                     _flags:
   386                           	callstack 0
   387   0000FD                     	ds	1
   388   0000FE                     _dato_serial:
   389                           	callstack 0
   390   0000FE                     	ds	1
   391   0000FF                     _eusart1RxLastError:
   392                           	callstack 0
   393   0000FF                     	ds	1
   394                           
   395                           	psect	bssBANK1
   396   000100                     __pbssBANK1:
   397                           	callstack 0
   398   000100                     _I_rms:
   399                           	callstack 0
   400   000100                     	ds	4
   401   000104                     _dbuf:
   402                           	callstack 0
   403   000104                     	ds	80
   404   000154                     _valor_string:
   405                           	callstack 0
   406   000154                     	ds	14
   407                           
   408                           	psect	dataBANK1
   409   000162                     __pdataBANK1:
   410                           	callstack 0
   411   000162                     _offset:
   412                           	callstack 0
   413   000162                     	ds	4
   414   000166                     _relacion:
   415                           	callstack 0
   416   000166                     	ds	4
   417   00016A                     _sensibilidad:
   418                           	callstack 0
   419   00016A                     	ds	4
   420                           
   421                           	psect	cstackBANK1
   422   00016E                     __pcstackBANK1:
   423                           	callstack 0
   424   00016E                     ??_main:
   425                           
   426                           ; 1 bytes @ 0x0
   427   00016E                     	ds	2
   428   000170                     _main$2383:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x2
   432   000170                     	ds	4
   433                           
   434                           	psect	cstackBANK0
   435   000060                     __pcstackBANK0:
   436                           	callstack 0
   437   000060                     get_corriente_AC@i:
   438                           	callstack 0
   439   000060                     floorf@m:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x0
   443   000060                     	ds	2
   444   000062                     get_corriente_AC@corriente:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x2
   448   000062                     	ds	2
   449   000064                     floorf@e:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x4
   453   000064                     	ds	2
   454   000066                     floorf@u:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x6
   458   000066                     	ds	4
   459   00006A                     efgtoa@fp:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0xA
   463   00006A                     	ds	1
   464   00006B                     efgtoa@f:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0xB
   468   00006B                     	ds	4
   469   00006F                     efgtoa@c:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0xF
   473   00006F                     	ds	1
   474   000070                     ??_efgtoa:
   475                           
   476                           ; 1 bytes @ 0x10
   477   000070                     	ds	2
   478   000072                     efgtoa@ne:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x12
   482   000072                     	ds	2
   483   000074                     efgtoa@p:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x14
   487   000074                     	ds	2
   488   000076                     efgtoa@t:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x16
   492   000076                     	ds	2
   493   000078                     _efgtoa$1982:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x18
   497   000078                     	ds	2
   498   00007A                     efgtoa@pp:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x1A
   502   00007A                     	ds	1
   503   00007B                     efgtoa@mode:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x1B
   507   00007B                     	ds	1
   508   00007C                     efgtoa@nmode:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x1C
   512   00007C                     	ds	1
   513   00007D                     efgtoa@d:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x1D
   517   00007D                     	ds	2
   518   00007F                     efgtoa@m:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x1F
   522   00007F                     	ds	2
   523   000081                     efgtoa@e:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x21
   527   000081                     	ds	2
   528   000083                     efgtoa@w:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x23
   532   000083                     	ds	2
   533   000085                     efgtoa@ou:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x25
   537   000085                     	ds	4
   538   000089                     efgtoa@i:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x29
   542   000089                     	ds	2
   543   00008B                     efgtoa@h:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x2B
   547   00008B                     	ds	4
   548   00008F                     efgtoa@l:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x2F
   552   00008F                     	ds	4
   553   000093                     efgtoa@sign:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x33
   557   000093                     	ds	1
   558   000094                     efgtoa@g:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x34
   562   000094                     	ds	4
   563   000098                     efgtoa@n:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x38
   567   000098                     	ds	2
   568   00009A                     efgtoa@u:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x3A
   572   00009A                     	ds	4
   573   00009E                     vfpfcnvrt@fp:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x3E
   577   00009E                     	ds	1
   578   00009F                     vfpfcnvrt@fmt:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x3F
   582   00009F                     	ds	1
   583   0000A0                     vfpfcnvrt@ap:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x40
   587   0000A0                     	ds	1
   588   0000A1                     ??_vfpfcnvrt:
   589                           
   590                           ; 1 bytes @ 0x41
   591   0000A1                     	ds	2
   592   0000A3                     vfpfcnvrt@convarg:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x43
   596   0000A3                     	ds	4
   597   0000A7                     vfpfcnvrt@c:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x47
   601   0000A7                     	ds	1
   602   0000A8                     vfpfcnvrt@cp:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x48
   606   0000A8                     	ds	1
   607   0000A9                     ?_vfprintf:
   608                           	callstack 0
   609   0000A9                     vfprintf@fp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x49
   613   0000A9                     	ds	1
   614   0000AA                     vfprintf@fmt:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x4A
   618   0000AA                     	ds	1
   619   0000AB                     vfprintf@ap:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x4B
   623   0000AB                     	ds	1
   624   0000AC                     vfprintf@cfmt:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x4C
   628   0000AC                     	ds	1
   629   0000AD                     ?_sprintf:
   630                           	callstack 0
   631   0000AD                     sprintf@s:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x4D
   635   0000AD                     	ds	2
   636   0000AF                     sprintf@fmt:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x4F
   640   0000AF                     	ds	5
   641   0000B4                     sprintf@ap:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x54
   645   0000B4                     	ds	1
   646   0000B5                     sprintf@f:
   647                           	callstack 0
   648                           
   649                           ; 12 bytes @ 0x55
   650   0000B5                     	ds	12
   651                           
   652                           	psect	cstackCOMRAM
   653   000001                     __pcstackCOMRAM:
   654                           	callstack 0
   655   000001                     TMR1_WriteTimer@timerVal:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x0
   659   000001                     	ds	2
   660   000003                     ??_INTERRUPT_InterruptManager:
   661   000003                     
   662                           ; 1 bytes @ 0x2
   663   000003                     	ds	2
   664   000005                     ?___fpclassifyf:
   665                           	callstack 0
   666   000005                     ?_ADC_GetConversion:
   667                           	callstack 0
   668   000005                     ?___wmul:
   669                           	callstack 0
   670   000005                     ?___fladd:
   671                           	callstack 0
   672   000005                     ?_labs:
   673                           	callstack 0
   674   000005                     ?___flneg:
   675                           	callstack 0
   676   000005                     ?___fltol:
   677                           	callstack 0
   678   000005                     ?___xxtofl:
   679                           	callstack 0
   680   000005                     _EUSART1_is_tx_ready$282:
   681                           	callstack 0
   682   000005                     EUSART1_Write@txData:
   683                           	callstack 0
   684   000005                     spi_s_read@dato_:
   685                           	callstack 0
   686   000005                     spi_s_write@dato_:
   687                           	callstack 0
   688   000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   689                           	callstack 0
   690   000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   691                           	callstack 0
   692   000005                     EUSART1_SetErrorHandler@interruptHandler:
   693                           	callstack 0
   694   000005                     TMR1_SetInterruptHandler@InterruptHandler:
   695                           	callstack 0
   696   000005                     ___wmul@multiplier:
   697                           	callstack 0
   698   000005                     memcpy@d1:
   699                           	callstack 0
   700   000005                     strcpy@dest:
   701                           	callstack 0
   702   000005                     ___fleq@ff1:
   703                           	callstack 0
   704   000005                     ___flneg@f1:
   705                           	callstack 0
   706   000005                     ___fltol@f1:
   707                           	callstack 0
   708   000005                     ___fladd@b:
   709                           	callstack 0
   710   000005                     ___xxtofl@val:
   711                           	callstack 0
   712   000005                     ___fpclassifyf@x:
   713                           	callstack 0
   714   000005                     labs@a:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x4
   718   000005                     	ds	1
   719   000006                     putch@txData:
   720                           	callstack 0
   721   000006                     spi_s_read@cont_s:
   722                           	callstack 0
   723   000006                     spi_s_write@cont_s:
   724                           	callstack 0
   725   000006                     EUSART1_Write_string@data:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x5
   729   000006                     	ds	1
   730   000007                     ??_ADC_GetConversion:
   731   000007                     nrf2401_write@valor:
   732                           	callstack 0
   733   000007                     nrf2401_comando@comando:
   734                           	callstack 0
   735   000007                     nrf2401_read@reg:
   736                           	callstack 0
   737   000007                     nrf2401_direccion_TX_RX@direccion_:
   738                           	callstack 0
   739   000007                     nrf2401_recibe@valor_:
   740                           	callstack 0
   741   000007                     strcpy@src:
   742                           	callstack 0
   743   000007                     ___wmul@multiplicand:
   744                           	callstack 0
   745   000007                     memcpy@s1:
   746                           	callstack 0
   747   000007                     fputc@c:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x6
   751   000007                     	ds	1
   752   000008                     ??_strcpy:
   753   000008                     nrf2401_write@reg:
   754                           	callstack 0
   755   000008                     nrf2401_read@dato_:
   756                           	callstack 0
   757   000008                     nrf2401_direccion_TX_RX@registro:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x7
   761   000008                     	ds	1
   762   000009                     ??___fpclassifyf:
   763   000009                     ??_labs:
   764   000009                     ??_nrf2401_direccion_TX_RX:
   765   000009                     ??___fltol:
   766   000009                     ??___xxtofl:
   767   000009                     ADC_GetConversion@channel:
   768                           	callstack 0
   769   000009                     nrf2401_envia@dato_tx:
   770                           	callstack 0
   771   000009                     fputc@fp:
   772                           	callstack 0
   773   000009                     ___wmul@product:
   774                           	callstack 0
   775   000009                     memcpy@n:
   776                           	callstack 0
   777   000009                     strcpy@d:
   778                           	callstack 0
   779   000009                     ___fleq@ff2:
   780                           	callstack 0
   781   000009                     ___fladd@a:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x8
   785   000009                     	ds	1
   786   00000A                     ??_fputc:
   787   00000A                     nrf2401_direccion_TX_RX@cont_s:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x9
   791   00000A                     	ds	1
   792   00000B                     ?_read_prec_or_width:
   793                           	callstack 0
   794   00000B                     nrF2401_init_RX@canal:
   795                           	callstack 0
   796   00000B                     nrF2401_init_TX@canal:
   797                           	callstack 0
   798   00000B                     read_prec_or_width@fmt:
   799                           	callstack 0
   800   00000B                     memcpy@tmp:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0xA
   804   00000B                     	ds	1
   805   00000C                     ??_envio_ya_recibido:
   806   00000C                     read_prec_or_width@ap:
   807                           	callstack 0
   808   00000C                     memcpy@d:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0xB
   812   00000C                     	ds	1
   813   00000D                     ??___fladd:
   814   00000D                     ??___fleq:
   815   00000D                     ___fltol@sign1:
   816                           	callstack 0
   817   00000D                     ___xxtofl@sign:
   818                           	callstack 0
   819   00000D                     read_prec_or_width@c:
   820                           	callstack 0
   821   00000D                     ___fpclassifyf@e:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0xC
   825   00000D                     	ds	1
   826   00000E                     ___fltol@exp1:
   827                           	callstack 0
   828   00000E                     ___xxtofl@exp:
   829                           	callstack 0
   830   00000E                     envio_ya_recibido@i:
   831                           	callstack 0
   832   00000E                     read_prec_or_width@n:
   833                           	callstack 0
   834   00000E                     memcpy@s:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0xD
   838   00000E                     	ds	1
   839   00000F                     fputs@s:
   840                           	callstack 0
   841   00000F                     ___xxtofl@arg:
   842                           	callstack 0
   843   00000F                     ___fpclassifyf@u:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0xE
   847   00000F                     	ds	1
   848   000010                     ??_confirmacion:
   849                           
   850                           ; 1 bytes @ 0xF
   851   000010                     	ds	1
   852   000011                     ___fladd@signs:
   853                           	callstack 0
   854   000011                     fputs@fp:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x10
   858   000011                     	ds	1
   859   000012                     ___fladd@aexp:
   860                           	callstack 0
   861   000012                     fputs@c:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x11
   865   000012                     	ds	1
   866   000013                     ?___flmul:
   867                           	callstack 0
   868   000013                     ___fladd@bexp:
   869                           	callstack 0
   870   000013                     fputs@i:
   871                           	callstack 0
   872   000013                     ___flmul@b:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x12
   876   000013                     	ds	1
   877   000014                     ___fladd@grs:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x13
   881   000014                     	ds	1
   882   000015                     pad@fp:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x14
   886   000015                     	ds	1
   887   000016                     pad@buf:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x15
   891   000016                     	ds	1
   892   000017                     ___flmul@a:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x16
   896   000017                     	ds	1
   897   000018                     pad@p:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x17
   901   000018                     	ds	2
   902   00001A                     ??_pad:
   903                           
   904                           ; 1 bytes @ 0x19
   905   00001A                     	ds	1
   906   00001B                     ??___flmul:
   907   00001B                     pad@i:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x1A
   911   00001B                     	ds	4
   912   00001F                     ___flmul@sign:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x1E
   916   00001F                     	ds	1
   917   000020                     ___flmul@aexp:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x1F
   921   000020                     	ds	1
   922   000021                     ___flmul@grs:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x20
   926   000021                     	ds	4
   927   000025                     ___flmul@bexp:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x24
   931   000025                     	ds	1
   932   000026                     ___flmul@prod:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x25
   936   000026                     	ds	4
   937   00002A                     ___flmul@temp:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x29
   941   00002A                     	ds	2
   942   00002C                     ?___flsub:
   943                           	callstack 0
   944   00002C                     ___flge@ff1:
   945                           	callstack 0
   946   00002C                     ___flsub@b:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x2B
   950   00002C                     	ds	4
   951   000030                     ___flge@ff2:
   952                           	callstack 0
   953   000030                     ___flsub@a:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x2F
   957   000030                     	ds	4
   958   000034                     ??___flge:
   959   000034                     ?___fldiv:
   960                           	callstack 0
   961   000034                     ___fldiv@b:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x33
   965   000034                     	ds	4
   966   000038                     ??_trip_protec_current:
   967   000038                     ___fldiv@a:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x37
   971   000038                     	ds	4
   972   00003C                     ??___fldiv:
   973                           
   974                           ; 1 bytes @ 0x3B
   975   00003C                     	ds	4
   976   000040                     ___fldiv@rem:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x3F
   980   000040                     	ds	4
   981   000044                     ___fldiv@sign:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x43
   985   000044                     	ds	1
   986   000045                     ___fldiv@new_exp:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x44
   990   000045                     	ds	2
   991   000047                     ___fldiv@grs:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x46
   995   000047                     	ds	4
   996   00004B                     ___fldiv@bexp:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x4A
  1000   00004B                     	ds	1
  1001   00004C                     ___fldiv@aexp:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x4B
  1005   00004C                     	ds	1
  1006   00004D                     ?_floorf:
  1007                           	callstack 0
  1008   00004D                     ?_get_corriente_AC:
  1009                           	callstack 0
  1010   00004D                     get_corriente_AC@n_muestras:
  1011                           	callstack 0
  1012   00004D                     floorf@x:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x4C
  1016   00004D                     	ds	4
  1017   000051                     ??_floorf:
  1018   000051                     ??_get_corriente_AC:
  1019                           
  1020                           ; 1 bytes @ 0x50
  1021   000051                     	ds	6
  1022   000057                     
  1023                           ; 1 bytes @ 0x56
  1024 ;;
  1025 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1026 ;;
  1027 ;; *************** function _main *****************
  1028 ;; Defined at:
  1029 ;;		line 255 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1046 ;;      Totals:         0       0       6       0       0       0       0       0       0
  1047 ;;Total ram usage:        6 bytes
  1048 ;; Hardware stack levels required when called: 13
  1049 ;; This function calls:
  1050 ;;		_EUSART1_Write_string
  1051 ;;		_EUSART1_is_tx_ready
  1052 ;;		_SYSTEM_Initialize
  1053 ;;		___fladd
  1054 ;;		___fldiv
  1055 ;;		_get_corriente_AC
  1056 ;;		_nrF2401_init_RX
  1057 ;;		_recibido_1
  1058 ;;		_spi_s_init
  1059 ;;		_sprintf
  1060 ;;		_trip_protec_current
  1061 ;; This function is called by:
  1062 ;;		Startup code after reset
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text0
  1067   002928                     __ptext0:
  1068                           	callstack 0
  1069   002928                     _main:
  1070                           	callstack 18
  1071   002928                     
  1072                           ;main.c: 258:     SYSTEM_Initialize();
  1073   002928  EC9C  F01B         	call	_SYSTEM_Initialize	;wreg free
  1074   00292C                     
  1075                           ;main.c: 266:     (INTCONbits.GIE = 1);
  1076   00292C  8EF2               	bsf	242,7,c	;volatile
  1077   00292E                     
  1078                           ;main.c: 272:     (INTCONbits.PEIE = 1);
  1079   00292E  8CF2               	bsf	242,6,c	;volatile
  1080   002930                     
  1081                           ;main.c: 277:     ANSELA = 0b00000111;
  1082   002930  0E07               	movlw	7
  1083   002932  010F               	movlb	15	; () banked
  1084   002934  6F5B               	movwf	91,b	;volatile
  1085   002936                     
  1086                           ; BSR set to: 15
  1087                           ;main.c: 278:     ANSELB = 0b00000000;
  1088   002936  0E00               	movlw	0
  1089   002938  6F5C               	movwf	92,b	;volatile
  1090   00293A                     
  1091                           ; BSR set to: 15
  1092                           ;main.c: 279:     ANSELC = 0x00;
  1093   00293A  0E00               	movlw	0
  1094   00293C  6F5D               	movwf	93,b	;volatile
  1095   00293E                     
  1096                           ; BSR set to: 15
  1097                           ;main.c: 287:     spi_s_init();
  1098   00293E  ECE0  F01B         	call	_spi_s_init	;wreg free
  1099   002942                     
  1100                           ;main.c: 289:     nrF2401_init_RX(17);
  1101   002942  0E11               	movlw	17
  1102   002944  ECB8  F017         	call	_nrF2401_init_RX
  1103   002948                     
  1104                           ;main.c: 293:     _delay((unsigned long)((2000)*(48000000/4000.0)));
  1105   002948  0E7A               	movlw	122
  1106   00294A  0101               	movlb	1	; () banked
  1107   00294C  6F6F               	movwf	(??_main+1)& (0+255),b
  1108   00294E  0EC1               	movlw	193
  1109   002950  6F6E               	movwf	??_main& (0+255),b
  1110   002952  0E81               	movlw	129
  1111   002954                     u6437:
  1112   002954  2EE8               	decfsz	wreg,f,c
  1113   002956  D7FE               	bra	u6437
  1114   002958  2F6E               	decfsz	??_main& (0+255),f,b
  1115   00295A  D7FC               	bra	u6437
  1116   00295C  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1117   00295E  D7FA               	bra	u6437
  1118   002960  D000               	nop2	
  1119   002962                     
  1120                           ;main.c: 294:     LATA5 = 1;
  1121   002962  8A89               	bsf	3977,5,c	;volatile
  1122   002964                     
  1123                           ;main.c: 295:     _delay((unsigned long)((3000)*(48000000/4000.0)));
  1124   002964  0EB7               	movlw	183
  1125   002966  0101               	movlb	1	; () banked
  1126   002968  6F6F               	movwf	(??_main+1)& (0+255),b
  1127   00296A  0EA1               	movlw	161
  1128   00296C  6F6E               	movwf	??_main& (0+255),b
  1129   00296E  0EC3               	movlw	195
  1130   002970                     u6447:
  1131   002970  2EE8               	decfsz	wreg,f,c
  1132   002972  D7FE               	bra	u6447
  1133   002974  2F6E               	decfsz	??_main& (0+255),f,b
  1134   002976  D7FC               	bra	u6447
  1135   002978  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1136   00297A  D7FA               	bra	u6447
  1137   00297C  D000               	nop2	
  1138   00297E                     l6144:
  1139                           
  1140                           ;main.c: 298:     {;main.c: 302:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1141   00297E  0E07               	movlw	7
  1142   002980  6E4E               	movwf	(get_corriente_AC@n_muestras+1)^0,c
  1143   002982  0ED0               	movlw	208
  1144   002984  6E4D               	movwf	get_corriente_AC@n_muestras^0,c
  1145   002986  ECCC  F012         	call	_get_corriente_AC	;wreg free
  1146   00298A  C04D  F170         	movff	?_get_corriente_AC,_main$2383
  1147   00298E  C04E  F171         	movff	?_get_corriente_AC+1,_main$2383+1
  1148   002992  C04F  F172         	movff	?_get_corriente_AC+2,_main$2383+2
  1149   002996  C050  F173         	movff	?_get_corriente_AC+3,_main$2383+3
  1150   00299A                     
  1151                           ;main.c: 298:     {;main.c: 302:         I = ((get_corriente_AC(2000) - offset) / relaci
      +                          on);
  1152   00299A  0ECD               	movlw	205
  1153   00299C  6E09               	movwf	___fladd@a^0,c
  1154   00299E  0ECC               	movlw	204
  1155   0029A0  6E0A               	movwf	(___fladd@a+1)^0,c
  1156   0029A2  0ECC               	movlw	204
  1157   0029A4  6E0B               	movwf	(___fladd@a+2)^0,c
  1158   0029A6  0EBD               	movlw	189
  1159   0029A8  6E0C               	movwf	(___fladd@a+3)^0,c
  1160   0029AA  C170  F005         	movff	_main$2383,___fladd@b
  1161   0029AE  C171  F006         	movff	_main$2383+1,___fladd@b+1
  1162   0029B2  C172  F007         	movff	_main$2383+2,___fladd@b+2
  1163   0029B6  C173  F008         	movff	_main$2383+3,___fladd@b+3
  1164   0029BA  EC06  F009         	call	___fladd	;wreg free
  1165   0029BE  C005  F034         	movff	?___fladd,___fldiv@b
  1166   0029C2  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  1167   0029C6  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  1168   0029CA  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  1169   0029CE  0ECD               	movlw	205
  1170   0029D0  6E38               	movwf	___fldiv@a^0,c
  1171   0029D2  0ECC               	movlw	204
  1172   0029D4  6E39               	movwf	(___fldiv@a+1)^0,c
  1173   0029D6  0ECC               	movlw	204
  1174   0029D8  6E3A               	movwf	(___fldiv@a+2)^0,c
  1175   0029DA  0E3D               	movlw	61
  1176   0029DC  6E3B               	movwf	(___fldiv@a+3)^0,c
  1177   0029DE  EC7B  F00D         	call	___fldiv	;wreg free
  1178   0029E2  C034  F057         	movff	?___fldiv,_I
  1179   0029E6  C035  F058         	movff	?___fldiv+1,_I+1
  1180   0029EA  C036  F059         	movff	?___fldiv+2,_I+2
  1181   0029EE  C037  F05A         	movff	?___fldiv+3,_I+3
  1182   0029F2                     
  1183                           ;main.c: 303:         sprintf(valor_string, "%.3f Amp.\n\r", I);
  1184   0029F2  0E54               	movlw	low _valor_string
  1185   0029F4  0100               	movlb	0	; () banked
  1186   0029F6  6FAD               	movwf	sprintf@s& (0+255),b
  1187   0029F8  0E01               	movlw	high _valor_string
  1188   0029FA  6FAE               	movwf	(sprintf@s+1)& (0+255),b
  1189   0029FC  0E0F               	movlw	low STR_1
  1190   0029FE  6FAF               	movwf	sprintf@fmt& (0+255),b
  1191   002A00  C057  F0B0         	movff	_I,?_sprintf+3
  1192   002A04  C058  F0B1         	movff	_I+1,?_sprintf+4
  1193   002A08  C059  F0B2         	movff	_I+2,?_sprintf+5
  1194   002A0C  C05A  F0B3         	movff	_I+3,?_sprintf+6
  1195   002A10  ECD6  F019         	call	_sprintf	;wreg free
  1196   002A14                     
  1197                           ;main.c: 304:         if (EUSART1_is_tx_ready()) EUSART1_Write_string(valor_string);
  1198   002A14  EC42  F01B         	call	_EUSART1_is_tx_ready	;wreg free
  1199   002A18  0900               	iorlw	0
  1200   002A1A  B4D8               	btfsc	status,2,c
  1201   002A1C  EF12  F015         	goto	u6421
  1202   002A20  EF14  F015         	goto	u6420
  1203   002A24                     u6421:
  1204   002A24  EF1A  F015         	goto	l6154
  1205   002A28                     u6420:
  1206   002A28  0E54               	movlw	low _valor_string
  1207   002A2A  6E06               	movwf	EUSART1_Write_string@data^0,c
  1208   002A2C  0E01               	movlw	high _valor_string
  1209   002A2E  6E07               	movwf	(EUSART1_Write_string@data+1)^0,c
  1210   002A30  ECFE  F01A         	call	_EUSART1_Write_string	;wreg free
  1211   002A34                     l6154:
  1212                           
  1213                           ;main.c: 306:         trip_protec_current();
  1214   002A34  EC48  F00F         	call	_trip_protec_current	;wreg free
  1215   002A38                     
  1216                           ;main.c: 309:         recibido_1();
  1217   002A38  EC55  F018         	call	_recibido_1	;wreg free
  1218   002A3C                     
  1219                           ;main.c: 312:         _delay((unsigned long)((50)*(48000000/4000.0)));
  1220   002A3C  0E04               	movlw	4
  1221   002A3E  0101               	movlb	1	; () banked
  1222   002A40  6F6F               	movwf	(??_main+1)& (0+255),b
  1223   002A42  0E0C               	movlw	12
  1224   002A44  6F6E               	movwf	??_main& (0+255),b
  1225   002A46  0E33               	movlw	51
  1226   002A48                     u6457:
  1227   002A48  2EE8               	decfsz	wreg,f,c
  1228   002A4A  D7FE               	bra	u6457
  1229   002A4C  2F6E               	decfsz	??_main& (0+255),f,b
  1230   002A4E  D7FC               	bra	u6457
  1231   002A50  2F6F               	decfsz	(??_main+1)& (0+255),f,b
  1232   002A52  D7FA               	bra	u6457
  1233   002A54  D000               	nop2	
  1234   002A56  EFBF  F014         	goto	l6144
  1235   002A5A  EF26  F000         	goto	start
  1236   002A5E                     __end_of_main:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _trip_protec_current *****************
  1240 ;; Defined at:
  1241 ;;		line 196 in file "main.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1257 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1258 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1259 ;;Total ram usage:        4 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 5
  1262 ;; This function calls:
  1263 ;;		___flge
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text1
  1270   001E90                     __ptext1:
  1271                           	callstack 0
  1272   001E90                     _trip_protec_current:
  1273                           	callstack 25
  1274   001E90                     
  1275                           ;main.c: 198:     if (I <= 9)
  1276   001E90  0E00               	movlw	0
  1277   001E92  6E2C               	movwf	___flge@ff1^0,c
  1278   001E94  0E00               	movlw	0
  1279   001E96  6E2D               	movwf	(___flge@ff1+1)^0,c
  1280   001E98  0E10               	movlw	16
  1281   001E9A  6E2E               	movwf	(___flge@ff1+2)^0,c
  1282   001E9C  0E41               	movlw	65
  1283   001E9E  6E2F               	movwf	(___flge@ff1+3)^0,c
  1284   001EA0  C057  F030         	movff	_I,___flge@ff2
  1285   001EA4  C058  F031         	movff	_I+1,___flge@ff2+1
  1286   001EA8  C059  F032         	movff	_I+2,___flge@ff2+2
  1287   001EAC  C05A  F033         	movff	_I+3,___flge@ff2+3
  1288   001EB0  ECB2  F015         	call	___flge	;wreg free
  1289   001EB4  A0D8               	btfss	status,0,c
  1290   001EB6  EF5F  F00F         	goto	u6231
  1291   001EBA  EF61  F00F         	goto	u6230
  1292   001EBE                     u6231:
  1293   001EBE  EF99  F00F         	goto	l6028
  1294   001EC2                     u6230:
  1295   001EC2                     
  1296                           ;main.c: 199:     {;main.c: 200:         LATA5 = 0;
  1297   001EC2  9A89               	bcf	3977,5,c	;volatile
  1298                           
  1299                           ;main.c: 201:         currentSeg = conteo;
  1300   001EC4  C0DD  F0CD         	movff	_conteo,_currentSeg
  1301   001EC8  C0DE  F0CE         	movff	_conteo+1,_currentSeg+1
  1302   001ECC  C0DF  F0CF         	movff	_conteo+2,_currentSeg+2
  1303   001ED0  C0E0  F0D0         	movff	_conteo+3,_currentSeg+3
  1304   001ED4                     
  1305                           ;main.c: 202:         if (currentSeg - previousMillis >= intervalo)
  1306   001ED4  0100               	movlb	0	; () banked
  1307   001ED6  51C9               	movf	_previousMillis& (0+255),w,b
  1308   001ED8  5DCD               	subwf	_currentSeg& (0+255),w,b
  1309   001EDA  6E38               	movwf	??_trip_protec_current^0,c
  1310   001EDC  51CA               	movf	(_previousMillis+1)& (0+255),w,b
  1311   001EDE  59CE               	subwfb	(_currentSeg+1)& (0+255),w,b
  1312   001EE0  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1313   001EE2  51CB               	movf	(_previousMillis+2)& (0+255),w,b
  1314   001EE4  59CF               	subwfb	(_currentSeg+2)& (0+255),w,b
  1315   001EE6  6E3A               	movwf	(??_trip_protec_current+2)^0,c
  1316   001EE8  51CC               	movf	(_previousMillis+3)& (0+255),w,b
  1317   001EEA  59D0               	subwfb	(_currentSeg+3)& (0+255),w,b
  1318   001EEC  6E3B               	movwf	(??_trip_protec_current+3)^0,c
  1319   001EEE  503B               	movf	(??_trip_protec_current+3)^0,w,c
  1320   001EF0  103A               	iorwf	(??_trip_protec_current+2)^0,w,c
  1321   001EF2  E10B               	bnz	u6240
  1322   001EF4  0E40               	movlw	64
  1323   001EF6  5C38               	subwf	??_trip_protec_current^0,w,c
  1324   001EF8  0E38               	movlw	56
  1325   001EFA  5839               	subwfb	(??_trip_protec_current+1)^0,w,c
  1326   001EFC  A0D8               	btfss	status,0,c
  1327   001EFE  EF83  F00F         	goto	u6241
  1328   001F02  EF85  F00F         	goto	u6240
  1329   001F06                     u6241:
  1330   001F06  EF99  F00F         	goto	l6028
  1331   001F0A                     u6240:
  1332   001F0A                     
  1333                           ; BSR set to: 0
  1334                           ;main.c: 203:         {;main.c: 204:             previousMillis = currentSeg;
  1335   001F0A  C0CD  F0C9         	movff	_currentSeg,_previousMillis
  1336   001F0E  C0CE  F0CA         	movff	_currentSeg+1,_previousMillis+1
  1337   001F12  C0CF  F0CB         	movff	_currentSeg+2,_previousMillis+2
  1338   001F16  C0D0  F0CC         	movff	_currentSeg+3,_previousMillis+3
  1339                           
  1340                           ;main.c: 205:             LATA5 = 1;
  1341   001F1A  8A89               	bsf	3977,5,c	;volatile
  1342   001F1C                     
  1343                           ; BSR set to: 0
  1344                           ;main.c: 206:             _delay((unsigned long)((3000)*(48000000/4000.0)));
  1345   001F1C  0EB7               	movlw	183
  1346   001F1E  6E39               	movwf	(??_trip_protec_current+1)^0,c
  1347   001F20  0EA1               	movlw	161
  1348   001F22  6E38               	movwf	??_trip_protec_current^0,c
  1349   001F24  0EC4               	movlw	196
  1350   001F26                     u6467:
  1351   001F26  2EE8               	decfsz	wreg,f,c
  1352   001F28  D7FE               	bra	u6467
  1353   001F2A  2E38               	decfsz	??_trip_protec_current^0,f,c
  1354   001F2C  D7FC               	bra	u6467
  1355   001F2E  2E39               	decfsz	(??_trip_protec_current+1)^0,f,c
  1356   001F30  D7FA               	bra	u6467
  1357   001F32                     l6028:
  1358                           
  1359                           ;main.c: 209:     if (I >= 16 && I < 17)
  1360   001F32  C057  F02C         	movff	_I,___flge@ff1
  1361   001F36  C058  F02D         	movff	_I+1,___flge@ff1+1
  1362   001F3A  C059  F02E         	movff	_I+2,___flge@ff1+2
  1363   001F3E  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1364   001F42  0E00               	movlw	0
  1365   001F44  6E30               	movwf	___flge@ff2^0,c
  1366   001F46  0E00               	movlw	0
  1367   001F48  6E31               	movwf	(___flge@ff2+1)^0,c
  1368   001F4A  0E80               	movlw	128
  1369   001F4C  6E32               	movwf	(___flge@ff2+2)^0,c
  1370   001F4E  0E41               	movlw	65
  1371   001F50  6E33               	movwf	(___flge@ff2+3)^0,c
  1372   001F52  ECB2  F015         	call	___flge	;wreg free
  1373   001F56  A0D8               	btfss	status,0,c
  1374   001F58  EFB0  F00F         	goto	u6251
  1375   001F5C  EFB2  F00F         	goto	u6250
  1376   001F60                     u6251:
  1377   001F60  EFE7  F00F         	goto	l6038
  1378   001F64                     u6250:
  1379   001F64  C057  F02C         	movff	_I,___flge@ff1
  1380   001F68  C058  F02D         	movff	_I+1,___flge@ff1+1
  1381   001F6C  C059  F02E         	movff	_I+2,___flge@ff1+2
  1382   001F70  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1383   001F74  0E00               	movlw	0
  1384   001F76  6E30               	movwf	___flge@ff2^0,c
  1385   001F78  0E00               	movlw	0
  1386   001F7A  6E31               	movwf	(___flge@ff2+1)^0,c
  1387   001F7C  0E88               	movlw	136
  1388   001F7E  6E32               	movwf	(___flge@ff2+2)^0,c
  1389   001F80  0E41               	movlw	65
  1390   001F82  6E33               	movwf	(___flge@ff2+3)^0,c
  1391   001F84  ECB2  F015         	call	___flge	;wreg free
  1392   001F88  B0D8               	btfsc	status,0,c
  1393   001F8A  EFC9  F00F         	goto	u6261
  1394   001F8E  EFCB  F00F         	goto	u6260
  1395   001F92                     u6261:
  1396   001F92  EFE7  F00F         	goto	l6038
  1397   001F96                     u6260:
  1398   001F96                     
  1399                           ;main.c: 210:     {;main.c: 211:         i = i + 1;
  1400   001F96  0E01               	movlw	1
  1401   001F98  0100               	movlb	0	; () banked
  1402   001F9A  25EB               	addwf	_i& (0+255),w,b
  1403   001F9C  6FEB               	movwf	_i& (0+255),b
  1404   001F9E  0E00               	movlw	0
  1405   001FA0  21EC               	addwfc	(_i+1)& (0+255),w,b
  1406   001FA2  6FEC               	movwf	(_i+1)& (0+255),b
  1407                           
  1408                           ;main.c: 212:         if (i > 600)
  1409   001FA4  BFEC               	btfsc	(_i+1)& (0+255),7,b
  1410   001FA6  EFDE  F00F         	goto	u6271
  1411   001FAA  0E59               	movlw	89
  1412   001FAC  5DEB               	subwf	_i& (0+255),w,b
  1413   001FAE  0E02               	movlw	2
  1414   001FB0  59EC               	subwfb	(_i+1)& (0+255),w,b
  1415   001FB2  A0D8               	btfss	status,0,c
  1416   001FB4  EFDE  F00F         	goto	u6271
  1417   001FB8  EFE0  F00F         	goto	u6270
  1418   001FBC                     u6271:
  1419   001FBC  EFE7  F00F         	goto	l6038
  1420   001FC0                     u6270:
  1421   001FC0                     
  1422                           ; BSR set to: 0
  1423                           ;main.c: 213:         {;main.c: 214:             i = 0;
  1424   001FC0  0E00               	movlw	0
  1425   001FC2  6FEC               	movwf	(_i+1)& (0+255),b
  1426   001FC4  0E00               	movlw	0
  1427   001FC6  6FEB               	movwf	_i& (0+255),b
  1428   001FC8                     
  1429                           ; BSR set to: 0
  1430                           ;main.c: 215:             LATA5 = 0;
  1431   001FC8  9A89               	bcf	3977,5,c	;volatile
  1432   001FCA                     l476:
  1433   001FCA  EFE5  F00F         	goto	l476
  1434   001FCE                     l6038:
  1435                           
  1436                           ;main.c: 219:     if (I >= 17 && I < 18)
  1437   001FCE  C057  F02C         	movff	_I,___flge@ff1
  1438   001FD2  C058  F02D         	movff	_I+1,___flge@ff1+1
  1439   001FD6  C059  F02E         	movff	_I+2,___flge@ff1+2
  1440   001FDA  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1441   001FDE  0E00               	movlw	0
  1442   001FE0  6E30               	movwf	___flge@ff2^0,c
  1443   001FE2  0E00               	movlw	0
  1444   001FE4  6E31               	movwf	(___flge@ff2+1)^0,c
  1445   001FE6  0E88               	movlw	136
  1446   001FE8  6E32               	movwf	(___flge@ff2+2)^0,c
  1447   001FEA  0E41               	movlw	65
  1448   001FEC  6E33               	movwf	(___flge@ff2+3)^0,c
  1449   001FEE  ECB2  F015         	call	___flge	;wreg free
  1450   001FF2  A0D8               	btfss	status,0,c
  1451   001FF4  EFFE  F00F         	goto	u6281
  1452   001FF8  EF00  F010         	goto	u6280
  1453   001FFC                     u6281:
  1454   001FFC  EF35  F010         	goto	l6048
  1455   002000                     u6280:
  1456   002000  C057  F02C         	movff	_I,___flge@ff1
  1457   002004  C058  F02D         	movff	_I+1,___flge@ff1+1
  1458   002008  C059  F02E         	movff	_I+2,___flge@ff1+2
  1459   00200C  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1460   002010  0E00               	movlw	0
  1461   002012  6E30               	movwf	___flge@ff2^0,c
  1462   002014  0E00               	movlw	0
  1463   002016  6E31               	movwf	(___flge@ff2+1)^0,c
  1464   002018  0E90               	movlw	144
  1465   00201A  6E32               	movwf	(___flge@ff2+2)^0,c
  1466   00201C  0E41               	movlw	65
  1467   00201E  6E33               	movwf	(___flge@ff2+3)^0,c
  1468   002020  ECB2  F015         	call	___flge	;wreg free
  1469   002024  B0D8               	btfsc	status,0,c
  1470   002026  EF17  F010         	goto	u6291
  1471   00202A  EF19  F010         	goto	u6290
  1472   00202E                     u6291:
  1473   00202E  EF35  F010         	goto	l6048
  1474   002032                     u6290:
  1475   002032                     
  1476                           ;main.c: 220:     {;main.c: 221:         j = j + 1;
  1477   002032  0E01               	movlw	1
  1478   002034  0100               	movlb	0	; () banked
  1479   002036  25E9               	addwf	_j& (0+255),w,b
  1480   002038  6FE9               	movwf	_j& (0+255),b
  1481   00203A  0E00               	movlw	0
  1482   00203C  21EA               	addwfc	(_j+1)& (0+255),w,b
  1483   00203E  6FEA               	movwf	(_j+1)& (0+255),b
  1484                           
  1485                           ;main.c: 222:         if ( j > 300)
  1486   002040  BFEA               	btfsc	(_j+1)& (0+255),7,b
  1487   002042  EF2C  F010         	goto	u6301
  1488   002046  0E2D               	movlw	45
  1489   002048  5DE9               	subwf	_j& (0+255),w,b
  1490   00204A  0E01               	movlw	1
  1491   00204C  59EA               	subwfb	(_j+1)& (0+255),w,b
  1492   00204E  A0D8               	btfss	status,0,c
  1493   002050  EF2C  F010         	goto	u6301
  1494   002054  EF2E  F010         	goto	u6300
  1495   002058                     u6301:
  1496   002058  EF35  F010         	goto	l6048
  1497   00205C                     u6300:
  1498   00205C                     
  1499                           ; BSR set to: 0
  1500                           ;main.c: 223:         {;main.c: 224:             j = 0;
  1501   00205C  0E00               	movlw	0
  1502   00205E  6FEA               	movwf	(_j+1)& (0+255),b
  1503   002060  0E00               	movlw	0
  1504   002062  6FE9               	movwf	_j& (0+255),b
  1505   002064                     
  1506                           ; BSR set to: 0
  1507                           ;main.c: 225:             LATA5 = 0;
  1508   002064  9A89               	bcf	3977,5,c	;volatile
  1509   002066                     l481:
  1510   002066  EF33  F010         	goto	l481
  1511   00206A                     l6048:
  1512                           
  1513                           ;main.c: 229:     if (I >= 18 && I < 19)
  1514   00206A  C057  F02C         	movff	_I,___flge@ff1
  1515   00206E  C058  F02D         	movff	_I+1,___flge@ff1+1
  1516   002072  C059  F02E         	movff	_I+2,___flge@ff1+2
  1517   002076  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1518   00207A  0E00               	movlw	0
  1519   00207C  6E30               	movwf	___flge@ff2^0,c
  1520   00207E  0E00               	movlw	0
  1521   002080  6E31               	movwf	(___flge@ff2+1)^0,c
  1522   002082  0E90               	movlw	144
  1523   002084  6E32               	movwf	(___flge@ff2+2)^0,c
  1524   002086  0E41               	movlw	65
  1525   002088  6E33               	movwf	(___flge@ff2+3)^0,c
  1526   00208A  ECB2  F015         	call	___flge	;wreg free
  1527   00208E  A0D8               	btfss	status,0,c
  1528   002090  EF4C  F010         	goto	u6311
  1529   002094  EF4E  F010         	goto	u6310
  1530   002098                     u6311:
  1531   002098  EF83  F010         	goto	l6058
  1532   00209C                     u6310:
  1533   00209C  C057  F02C         	movff	_I,___flge@ff1
  1534   0020A0  C058  F02D         	movff	_I+1,___flge@ff1+1
  1535   0020A4  C059  F02E         	movff	_I+2,___flge@ff1+2
  1536   0020A8  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1537   0020AC  0E00               	movlw	0
  1538   0020AE  6E30               	movwf	___flge@ff2^0,c
  1539   0020B0  0E00               	movlw	0
  1540   0020B2  6E31               	movwf	(___flge@ff2+1)^0,c
  1541   0020B4  0E98               	movlw	152
  1542   0020B6  6E32               	movwf	(___flge@ff2+2)^0,c
  1543   0020B8  0E41               	movlw	65
  1544   0020BA  6E33               	movwf	(___flge@ff2+3)^0,c
  1545   0020BC  ECB2  F015         	call	___flge	;wreg free
  1546   0020C0  B0D8               	btfsc	status,0,c
  1547   0020C2  EF65  F010         	goto	u6321
  1548   0020C6  EF67  F010         	goto	u6320
  1549   0020CA                     u6321:
  1550   0020CA  EF83  F010         	goto	l6058
  1551   0020CE                     u6320:
  1552   0020CE                     
  1553                           ;main.c: 230:     {;main.c: 231:         k = k + 1;
  1554   0020CE  0E01               	movlw	1
  1555   0020D0  0100               	movlb	0	; () banked
  1556   0020D2  25E7               	addwf	_k& (0+255),w,b
  1557   0020D4  6FE7               	movwf	_k& (0+255),b
  1558   0020D6  0E00               	movlw	0
  1559   0020D8  21E8               	addwfc	(_k+1)& (0+255),w,b
  1560   0020DA  6FE8               	movwf	(_k+1)& (0+255),b
  1561                           
  1562                           ;main.c: 232:         if (k > 120)
  1563   0020DC  BFE8               	btfsc	(_k+1)& (0+255),7,b
  1564   0020DE  EF7A  F010         	goto	u6331
  1565   0020E2  51E8               	movf	(_k+1)& (0+255),w,b
  1566   0020E4  E109               	bnz	u6330
  1567   0020E6  0E79               	movlw	121
  1568   0020E8  5DE7               	subwf	_k& (0+255),w,b
  1569   0020EA  A0D8               	btfss	status,0,c
  1570   0020EC  EF7A  F010         	goto	u6331
  1571   0020F0  EF7C  F010         	goto	u6330
  1572   0020F4                     u6331:
  1573   0020F4  EF83  F010         	goto	l6058
  1574   0020F8                     u6330:
  1575   0020F8                     
  1576                           ; BSR set to: 0
  1577                           ;main.c: 233:         {;main.c: 234:             k = 0;
  1578   0020F8  0E00               	movlw	0
  1579   0020FA  6FE8               	movwf	(_k+1)& (0+255),b
  1580   0020FC  0E00               	movlw	0
  1581   0020FE  6FE7               	movwf	_k& (0+255),b
  1582   002100                     
  1583                           ; BSR set to: 0
  1584                           ;main.c: 235:             LATA5 = 0;
  1585   002100  9A89               	bcf	3977,5,c	;volatile
  1586   002102                     l486:
  1587   002102  EF81  F010         	goto	l486
  1588   002106                     l6058:
  1589                           
  1590                           ;main.c: 239:     if (I >= 19)
  1591   002106  C057  F02C         	movff	_I,___flge@ff1
  1592   00210A  C058  F02D         	movff	_I+1,___flge@ff1+1
  1593   00210E  C059  F02E         	movff	_I+2,___flge@ff1+2
  1594   002112  C05A  F02F         	movff	_I+3,___flge@ff1+3
  1595   002116  0E00               	movlw	0
  1596   002118  6E30               	movwf	___flge@ff2^0,c
  1597   00211A  0E00               	movlw	0
  1598   00211C  6E31               	movwf	(___flge@ff2+1)^0,c
  1599   00211E  0E98               	movlw	152
  1600   002120  6E32               	movwf	(___flge@ff2+2)^0,c
  1601   002122  0E41               	movlw	65
  1602   002124  6E33               	movwf	(___flge@ff2+3)^0,c
  1603   002126  ECB2  F015         	call	___flge	;wreg free
  1604   00212A  A0D8               	btfss	status,0,c
  1605   00212C  EF9A  F010         	goto	u6341
  1606   002130  EF9C  F010         	goto	u6340
  1607   002134                     u6341:
  1608   002134  EFB8  F010         	goto	l494
  1609   002138                     u6340:
  1610   002138                     
  1611                           ;main.c: 240:     {;main.c: 241:         l = l + 1;
  1612   002138  0E01               	movlw	1
  1613   00213A  0100               	movlb	0	; () banked
  1614   00213C  25E5               	addwf	_l& (0+255),w,b
  1615   00213E  6FE5               	movwf	_l& (0+255),b
  1616   002140  0E00               	movlw	0
  1617   002142  21E6               	addwfc	(_l+1)& (0+255),w,b
  1618   002144  6FE6               	movwf	(_l+1)& (0+255),b
  1619                           
  1620                           ;main.c: 242:         if (l > 15)
  1621   002146  BFE6               	btfsc	(_l+1)& (0+255),7,b
  1622   002148  EFAF  F010         	goto	u6351
  1623   00214C  51E6               	movf	(_l+1)& (0+255),w,b
  1624   00214E  E109               	bnz	u6350
  1625   002150  0E10               	movlw	16
  1626   002152  5DE5               	subwf	_l& (0+255),w,b
  1627   002154  A0D8               	btfss	status,0,c
  1628   002156  EFAF  F010         	goto	u6351
  1629   00215A  EFB1  F010         	goto	u6350
  1630   00215E                     u6351:
  1631   00215E  EFB8  F010         	goto	l494
  1632   002162                     u6350:
  1633   002162                     
  1634                           ; BSR set to: 0
  1635                           ;main.c: 243:         {;main.c: 244:             l = 0;
  1636   002162  0E00               	movlw	0
  1637   002164  6FE6               	movwf	(_l+1)& (0+255),b
  1638   002166  0E00               	movlw	0
  1639   002168  6FE5               	movwf	_l& (0+255),b
  1640   00216A                     
  1641                           ; BSR set to: 0
  1642                           ;main.c: 245:             LATA5 = 0;
  1643   00216A  9A89               	bcf	3977,5,c	;volatile
  1644   00216C                     l491:
  1645   00216C  EFB6  F010         	goto	l491
  1646   002170                     l494:
  1647   002170  0012               	return		;funcret
  1648   002172                     __end_of_trip_protec_current:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _sprintf *****************
  1652 ;; Defined at:
  1653 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  s               2   77[BANK0 ] PTR unsigned char 
  1656 ;;		 -> valor_string(14), 
  1657 ;;  fmt             1   79[BANK0 ] PTR const unsigned char 
  1658 ;;		 -> STR_1(12), 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  f              12   85[BANK0 ] struct _IO_FILE
  1661 ;;  ret             2    0        int 
  1662 ;;  ap              1   84[BANK0 ] PTR void [1]
  1663 ;;		 -> ?_sprintf(2), 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  2   77[BANK0 ] int 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1673 ;;      Params:         0       7       0       0       0       0       0       0       0
  1674 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1676 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1677 ;;Total ram usage:       20 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 12
  1680 ;; This function calls:
  1681 ;;		_vfprintf
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text2
  1688   0033AC                     __ptext2:
  1689                           	callstack 0
  1690   0033AC                     _sprintf:
  1691                           	callstack 18
  1692   0033AC  0EB0               	movlw	low (?_sprintf+3)
  1693   0033AE  0100               	movlb	0	; () banked
  1694   0033B0  6FB4               	movwf	sprintf@ap& (0+255),b
  1695   0033B2  C0AD  F0B5         	movff	sprintf@s,sprintf@f
  1696   0033B6  C0AE  F0B6         	movff	sprintf@s+1,sprintf@f+1
  1697   0033BA                     
  1698                           ; BSR set to: 0
  1699   0033BA  0E00               	movlw	0
  1700   0033BC  6FB9               	movwf	(sprintf@f+4)& (0+255),b
  1701   0033BE  0E00               	movlw	0
  1702   0033C0  6FB8               	movwf	(sprintf@f+3)& (0+255),b
  1703   0033C2                     
  1704                           ; BSR set to: 0
  1705   0033C2  0E00               	movlw	0
  1706   0033C4  6FC0               	movwf	(sprintf@f+11)& (0+255),b
  1707   0033C6  0E00               	movlw	0
  1708   0033C8  6FBF               	movwf	(sprintf@f+10)& (0+255),b
  1709   0033CA                     
  1710                           ; BSR set to: 0
  1711   0033CA  0EB5               	movlw	low sprintf@f
  1712   0033CC  6FA9               	movwf	vfprintf@fp& (0+255),b
  1713   0033CE  C0AF  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  1714   0033D2  0EB4               	movlw	low sprintf@ap
  1715   0033D4  6FAB               	movwf	vfprintf@ap& (0+255),b
  1716   0033D6  ECB5  F019         	call	_vfprintf	;wreg free
  1717   0033DA  0100               	movlb	0	; () banked
  1718   0033DC  51B8               	movf	(sprintf@f+3)& (0+255),w,b
  1719   0033DE  25AD               	addwf	sprintf@s& (0+255),w,b
  1720   0033E0  6ED9               	movwf	fsr2l,c
  1721   0033E2  51B9               	movf	(sprintf@f+4)& (0+255),w,b
  1722   0033E4  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1723   0033E6  6EDA               	movwf	fsr2h,c
  1724   0033E8  6ADF               	clrf	indf2,c
  1725   0033EA                     
  1726                           ; BSR set to: 0
  1727   0033EA  0012               	return		;funcret
  1728   0033EC                     __end_of_sprintf:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _vfprintf *****************
  1732 ;; Defined at:
  1733 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  1736 ;;		 -> sprintf@f(12), 
  1737 ;;  fmt             1   74[BANK0 ] PTR const unsigned char 
  1738 ;;		 -> STR_1(12), 
  1739 ;;  ap              1   75[BANK0 ] PTR PTR void 
  1740 ;;		 -> sprintf@ap(1), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  cfmt            1   76[BANK0 ] PTR unsigned char 
  1743 ;;		 -> STR_1(12), 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2   73[BANK0 ] int 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1753 ;;      Params:         0       3       0       0       0       0       0       0       0
  1754 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1756 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1757 ;;Total ram usage:        4 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 11
  1760 ;; This function calls:
  1761 ;;		_vfpfcnvrt
  1762 ;; This function is called by:
  1763 ;;		_sprintf
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text3
  1768   00336A                     __ptext3:
  1769                           	callstack 0
  1770   00336A                     _vfprintf:
  1771                           	callstack 18
  1772   00336A                     
  1773                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1774   00336A  C0AA  F0AC         	movff	vfprintf@fmt,vfprintf@cfmt
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1777   00336E  EFC2  F019         	goto	l5952
  1778   003372                     l5950:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1781   003372  C0A9  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1782   003376  0EAC               	movlw	low vfprintf@cfmt
  1783   003378  0100               	movlb	0	; () banked
  1784   00337A  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1785   00337C  C0AB  F0A0         	movff	vfprintf@ap,vfpfcnvrt@ap
  1786   003380  ECC4  F011         	call	_vfpfcnvrt	;wreg free
  1787   003384                     l5952:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1790   003384  C0AC  FFF6         	movff	vfprintf@cfmt,tblptrl
  1791   003388                     	if	1	;There is more than 1 active tblptr byte
  1792   003388  0E08               	movlw	high __smallconst
  1793   00338A  6EF7               	movwf	tblptrh,c
  1794   00338C                     	endif
  1795   00338C                     	if	0	;tblptru may be non-zero
  1796   00338C                     	endif
  1797   00338C                     	if	0	;tblptru may be non-zero
  1798   00338C                     	endif
  1799   00338C  0008               	tblrd		*
  1800   00338E  50F5               	movf	tablat,w,c
  1801   003390  0900               	iorlw	0
  1802   003392  A4D8               	btfss	status,2,c
  1803   003394  EFCE  F019         	goto	u6161
  1804   003398  EFD0  F019         	goto	u6160
  1805   00339C                     u6161:
  1806   00339C  EFB9  F019         	goto	l5950
  1807   0033A0                     u6160:
  1808   0033A0                     
  1809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1810   0033A0  0E00               	movlw	0
  1811   0033A2  0100               	movlb	0	; () banked
  1812   0033A4  6FAA               	movwf	(?_vfprintf+1)& (0+255),b
  1813   0033A6  0E00               	movlw	0
  1814   0033A8  6FA9               	movwf	?_vfprintf& (0+255),b
  1815   0033AA                     
  1816                           ; BSR set to: 0
  1817   0033AA  0012               	return		;funcret
  1818   0033AC                     __end_of_vfprintf:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _vfpfcnvrt *****************
  1822 ;; Defined at:
  1823 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  1826 ;;		 -> sprintf@f(12), 
  1827 ;;  fmt             1   63[BANK0 ] PTR PTR unsigned char 
  1828 ;;		 -> vfprintf@cfmt(1), 
  1829 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1830 ;;		 -> sprintf@ap(1), 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  convarg         4   67[BANK0 ] struct .
  1833 ;;  cp              1   72[BANK0 ] PTR unsigned char 
  1834 ;;		 -> STR_1(12), 
  1835 ;;  c               1   71[BANK0 ] unsigned char 
  1836 ;;  done            1    0        _Bool 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1846 ;;      Params:         0       3       0       0       0       0       0       0       0
  1847 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1848 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1849 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1850 ;;Total ram usage:       11 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 10
  1853 ;; This function calls:
  1854 ;;		_efgtoa
  1855 ;;		_fputc
  1856 ;;		_read_prec_or_width
  1857 ;; This function is called by:
  1858 ;;		_vfprintf
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text4
  1863   002388                     __ptext4:
  1864                           	callstack 0
  1865   002388                     _vfpfcnvrt:
  1866                           	callstack 18
  1867   002388                     
  1868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1869   002388  0100               	movlb	0	; () banked
  1870   00238A  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1871   00238C  6ED9               	movwf	fsr2l,c
  1872   00238E  6ADA               	clrf	fsr2h,c
  1873   002390  CFDF FFF6          	movff	indf2,tblptrl
  1874   002394                     	if	1	;There is more than 1 active tblptr byte
  1875   002394  0E08               	movlw	high __smallconst
  1876   002396  6EF7               	movwf	tblptrh,c
  1877   002398                     	endif
  1878   002398                     	if	0	;tblptru may be non-zero
  1879   002398                     	endif
  1880   002398                     	if	0	;tblptru may be non-zero
  1881   002398                     	endif
  1882   002398  0008               	tblrd		*
  1883   00239A  50F5               	movf	tablat,w,c
  1884   00239C  0A25               	xorlw	37
  1885   00239E  A4D8               	btfss	status,2,c
  1886   0023A0  EFD4  F011         	goto	u6001
  1887   0023A4  EFD6  F011         	goto	u6000
  1888   0023A8                     u6001:
  1889   0023A8  EFBA  F012         	goto	l5808
  1890   0023AC                     u6000:
  1891   0023AC                     
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1894   0023AC  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1895   0023AE  6ED9               	movwf	fsr2l,c
  1896   0023B0  6ADA               	clrf	fsr2h,c
  1897   0023B2  2ADF               	incf	indf2,f,c
  1898   0023B4                     
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1901   0023B4  0E00               	movlw	0
  1902   0023B6  6FE2               	movwf	(_width+1)& (0+255),b
  1903   0023B8  0E00               	movlw	0
  1904   0023BA  6FE1               	movwf	_width& (0+255),b
  1905   0023BC  C0E1  F0FD         	movff	_width,_flags
  1906   0023C0                     
  1907                           ; BSR set to: 0
  1908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1909   0023C0  69E3               	setf	_prec& (0+255),b
  1910   0023C2  69E4               	setf	(_prec+1)& (0+255),b
  1911   0023C4                     
  1912                           ; BSR set to: 0
  1913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1914   0023C4  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1915   0023C6  6ED9               	movwf	fsr2l,c
  1916   0023C8  6ADA               	clrf	fsr2h,c
  1917   0023CA  CFDF FFF6          	movff	indf2,tblptrl
  1918   0023CE                     	if	1	;There is more than 1 active tblptr byte
  1919   0023CE  0E08               	movlw	high __smallconst
  1920   0023D0  6EF7               	movwf	tblptrh,c
  1921   0023D2                     	endif
  1922   0023D2                     	if	0	;tblptru may be non-zero
  1923   0023D2                     	endif
  1924   0023D2                     	if	0	;tblptru may be non-zero
  1925   0023D2                     	endif
  1926   0023D2  0008               	tblrd		*
  1927   0023D4  50F5               	movf	tablat,w,c
  1928   0023D6  0A2E               	xorlw	46
  1929   0023D8  A4D8               	btfss	status,2,c
  1930   0023DA  EFF1  F011         	goto	u6011
  1931   0023DE  EFF3  F011         	goto	u6010
  1932   0023E2                     u6011:
  1933   0023E2  EF01  F012         	goto	l5770
  1934   0023E6                     u6010:
  1935   0023E6                     
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1938   0023E6  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1939   0023E8  6ED9               	movwf	fsr2l,c
  1940   0023EA  6ADA               	clrf	fsr2h,c
  1941   0023EC  2ADF               	incf	indf2,f,c
  1942   0023EE                     
  1943                           ; BSR set to: 0
  1944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1945   0023EE  C09F  F00B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1946   0023F2  C0A0  F00C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1947   0023F6  EC65  F017         	call	_read_prec_or_width	;wreg free
  1948   0023FA  C00B  F0E3         	movff	?_read_prec_or_width,_prec
  1949   0023FE  C00C  F0E4         	movff	?_read_prec_or_width+1,_prec+1
  1950   002402                     l5770:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1953   002402  0100               	movlb	0	; () banked
  1954   002404  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1955   002406  6ED9               	movwf	fsr2l,c
  1956   002408  6ADA               	clrf	fsr2h,c
  1957   00240A  50DF               	movf	indf2,w,c
  1958   00240C  6FA8               	movwf	vfpfcnvrt@cp& (0+255),b
  1959   00240E                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1962   00240E  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1963   002412                     	if	1	;There is more than 1 active tblptr byte
  1964   002412  0E08               	movlw	high __smallconst
  1965   002414  6EF7               	movwf	tblptrh,c
  1966   002416                     	endif
  1967   002416                     	if	0	;tblptru may be non-zero
  1968   002416                     	endif
  1969   002416                     	if	0	;tblptru may be non-zero
  1970   002416                     	endif
  1971   002416  0008               	tblrd		*
  1972   002418  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1975   00241C  EF1B  F012         	goto	l5782
  1976   002420                     l5774:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1980   002420  2BA8               	incf	vfpfcnvrt@cp& (0+255),f,b
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  1983   002422  EF34  F012         	goto	l5784
  1984   002426                     l5776:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1988   002426  0E6C               	movlw	108
  1989   002428  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  1992   00242A  EF34  F012         	goto	l5784
  1993   00242E                     l5778:
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1997   00242E  0E00               	movlw	0
  1998   002430  6FA7               	movwf	vfpfcnvrt@c& (0+255),b
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2001   002432  EF34  F012         	goto	l5784
  2002   002436                     l5782:
  2003                           
  2004                           ; BSR set to: 0
  2005   002436  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  2006   002438  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2007   00243A  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2008                           
  2009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2010                           ; Switch size 1, requested type "simple"
  2011                           ; Number of cases is 1, Range of values is 0 to 0
  2012                           ; switch strategies available:
  2013                           ; Name         Instructions Cycles
  2014                           ; simple_byte            4     3 (average)
  2015                           ;	Chosen strategy is simple_byte
  2016   00243C  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2017   00243E  0A00               	xorlw	0	; case 0
  2018   002440  B4D8               	btfsc	status,2,c
  2019   002442  EF25  F012         	goto	l6220
  2020   002446  EF17  F012         	goto	l5778
  2021   00244A                     l6220:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 3, Range of values is 76 to 108
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte           10     6 (average)
  2029                           ;	Chosen strategy is simple_byte
  2030   00244A  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2031   00244C  0A4C               	xorlw	76	; case 76
  2032   00244E  B4D8               	btfsc	status,2,c
  2033   002450  EF10  F012         	goto	l5774
  2034   002454  0A2A               	xorlw	42	; case 102
  2035   002456  B4D8               	btfsc	status,2,c
  2036   002458  EF13  F012         	goto	l5776
  2037   00245C  0A0A               	xorlw	10	; case 108
  2038   00245E  B4D8               	btfsc	status,2,c
  2039   002460  EF10  F012         	goto	l5774
  2040   002464  EF17  F012         	goto	l5778
  2041   002468                     l5784:
  2042                           
  2043                           ; BSR set to: 0
  2044   002468  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2045   00246C                     	if	1	;There is more than 1 active tblptr byte
  2046   00246C  0E08               	movlw	high __smallconst
  2047   00246E  6EF7               	movwf	tblptrh,c
  2048   002470                     	endif
  2049   002470                     	if	0	;tblptru may be non-zero
  2050   002470                     	endif
  2051   002470                     	if	0	;tblptru may be non-zero
  2052   002470                     	endif
  2053   002470  0008               	tblrd		*
  2054   002472  50F5               	movf	tablat,w,c
  2055   002474  0A66               	xorlw	102
  2056   002476  A4D8               	btfss	status,2,c
  2057   002478  EF40  F012         	goto	u6021
  2058   00247C  EF42  F012         	goto	u6020
  2059   002480                     u6021:
  2060   002480  EFB3  F012         	goto	l5804
  2061   002484                     u6020:
  2062   002484  EF6C  F012         	goto	l5792
  2063   002488                     l5786:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2067   002488  51A0               	movf	vfpfcnvrt@ap& (0+255),w,b
  2068   00248A  6ED9               	movwf	fsr2l,c
  2069   00248C  6ADA               	clrf	fsr2h,c
  2070   00248E  CFDF F0A1          	movff	indf2,??_vfpfcnvrt
  2071   002492  0E04               	movlw	4
  2072   002494  26DF               	addwf	indf2,f,c
  2073   002496  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2074   002498  6ED9               	movwf	fsr2l,c
  2075   00249A  6ADA               	clrf	fsr2h,c
  2076   00249C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  2077   0024A0  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  2078   0024A4  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  2079   0024A8  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2082   0024AC  EF81  F012         	goto	l5794
  2083   0024B0                     l5788:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2087   0024B0  51A0               	movf	vfpfcnvrt@ap& (0+255),w,b
  2088   0024B2  6ED9               	movwf	fsr2l,c
  2089   0024B4  6ADA               	clrf	fsr2h,c
  2090   0024B6  CFDF F0A1          	movff	indf2,??_vfpfcnvrt
  2091   0024BA  0E04               	movlw	4
  2092   0024BC  26DF               	addwf	indf2,f,c
  2093   0024BE  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2094   0024C0  6ED9               	movwf	fsr2l,c
  2095   0024C2  6ADA               	clrf	fsr2h,c
  2096   0024C4  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg
  2097   0024C8  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+1
  2098   0024CC  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg+2
  2099   0024D0  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+3
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2102   0024D4  EF81  F012         	goto	l5794
  2103   0024D8                     l5792:
  2104                           
  2105                           ; BSR set to: 0
  2106   0024D8  51A7               	movf	vfpfcnvrt@c& (0+255),w,b
  2107   0024DA  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2108   0024DC  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2109                           
  2110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2111                           ; Switch size 1, requested type "simple"
  2112                           ; Number of cases is 1, Range of values is 0 to 0
  2113                           ; switch strategies available:
  2114                           ; Name         Instructions Cycles
  2115                           ; simple_byte            4     3 (average)
  2116                           ;	Chosen strategy is simple_byte
  2117   0024DE  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2118   0024E0  0A00               	xorlw	0	; case 0
  2119   0024E2  B4D8               	btfsc	status,2,c
  2120   0024E4  EF76  F012         	goto	l6222
  2121   0024E8  EF81  F012         	goto	l5794
  2122   0024EC                     l6222:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ; Switch size 1, requested type "simple"
  2126                           ; Number of cases is 2, Range of values is 76 to 108
  2127                           ; switch strategies available:
  2128                           ; Name         Instructions Cycles
  2129                           ; simple_byte            7     4 (average)
  2130                           ;	Chosen strategy is simple_byte
  2131   0024EC  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2132   0024EE  0A4C               	xorlw	76	; case 76
  2133   0024F0  B4D8               	btfsc	status,2,c
  2134   0024F2  EF58  F012         	goto	l5788
  2135   0024F6  0A20               	xorlw	32	; case 108
  2136   0024F8  B4D8               	btfsc	status,2,c
  2137   0024FA  EF44  F012         	goto	l5786
  2138   0024FE  EF81  F012         	goto	l5794
  2139   002502                     l5794:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2143   002502  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2144   002504  6ED9               	movwf	fsr2l,c
  2145   002506  6ADA               	clrf	fsr2h,c
  2146   002508  29A8               	incf	vfpfcnvrt@cp& (0+255),w,b
  2147   00250A  6EDF               	movwf	indf2,c
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2150   00250C  EF9D  F012         	goto	l5802
  2151   002510                     l5796:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2155   002510  C09E  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2156   002514  C0A3  F06B         	movff	vfpfcnvrt@convarg,efgtoa@f
  2157   002518  C0A4  F06C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2158   00251C  C0A5  F06D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2159   002520  C0A6  F06E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2160   002524  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2161   002528                     	if	1	;There is more than 1 active tblptr byte
  2162   002528  0E08               	movlw	high __smallconst
  2163   00252A  6EF7               	movwf	tblptrh,c
  2164   00252C                     	endif
  2165   00252C                     	if	0	;tblptru may be non-zero
  2166   00252C                     	endif
  2167   00252C                     	if	0	;tblptru may be non-zero
  2168   00252C                     	endif
  2169   00252C  0008               	tblrd		*
  2170   00252E  CFF5 F06F          	movff	tablat,efgtoa@c
  2171   002532  EC12  F004         	call	_efgtoa	;wreg free
  2172   002536  EFCB  F012         	goto	l1310
  2173   00253A                     l5802:
  2174                           
  2175                           ; BSR set to: 0
  2176   00253A  C0A8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2177   00253E                     	if	1	;There is more than 1 active tblptr byte
  2178   00253E  0E08               	movlw	high __smallconst
  2179   002540  6EF7               	movwf	tblptrh,c
  2180   002542                     	endif
  2181   002542                     	if	0	;tblptru may be non-zero
  2182   002542                     	endif
  2183   002542                     	if	0	;tblptru may be non-zero
  2184   002542                     	endif
  2185   002542  0008               	tblrd		*
  2186   002544  50F5               	movf	tablat,w,c
  2187   002546  6FA1               	movwf	??_vfpfcnvrt& (0+255),b
  2188   002548  6BA2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2189                           
  2190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2191                           ; Switch size 1, requested type "simple"
  2192                           ; Number of cases is 1, Range of values is 0 to 0
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte            4     3 (average)
  2196                           ;	Chosen strategy is simple_byte
  2197   00254A  51A2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2198   00254C  0A00               	xorlw	0	; case 0
  2199   00254E  B4D8               	btfsc	status,2,c
  2200   002550  EFAC  F012         	goto	l6224
  2201   002554  EFB3  F012         	goto	l5804
  2202   002558                     l6224:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ; Switch size 1, requested type "simple"
  2206                           ; Number of cases is 1, Range of values is 102 to 102
  2207                           ; switch strategies available:
  2208                           ; Name         Instructions Cycles
  2209                           ; simple_byte            4     3 (average)
  2210                           ;	Chosen strategy is simple_byte
  2211   002558  51A1               	movf	??_vfpfcnvrt& (0+255),w,b
  2212   00255A  0A66               	xorlw	102	; case 102
  2213   00255C  B4D8               	btfsc	status,2,c
  2214   00255E  EF88  F012         	goto	l5796
  2215   002562  EFB3  F012         	goto	l5804
  2216   002566                     l5804:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2219   002566  0100               	movlb	0	; () banked
  2220   002568  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2221   00256A  6ED9               	movwf	fsr2l,c
  2222   00256C  6ADA               	clrf	fsr2h,c
  2223   00256E  2ADF               	incf	indf2,f,c
  2224   002570  EFCB  F012         	goto	l1310
  2225   002574                     l5808:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2229   002574  519F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2230   002576  6ED9               	movwf	fsr2l,c
  2231   002578  6ADA               	clrf	fsr2h,c
  2232   00257A  CFDF FFF6          	movff	indf2,tblptrl
  2233   00257E                     	if	1	;There is more than 1 active tblptr byte
  2234   00257E  0E08               	movlw	high __smallconst
  2235   002580  6EF7               	movwf	tblptrh,c
  2236   002582                     	endif
  2237   002582                     	if	0	;tblptru may be non-zero
  2238   002582                     	endif
  2239   002582                     	if	0	;tblptru may be non-zero
  2240   002582                     	endif
  2241   002582  0008               	tblrd		*
  2242   002584  50F5               	movf	tablat,w,c
  2243   002586  6E07               	movwf	fputc@c^0,c
  2244   002588  6A08               	clrf	(fputc@c+1)^0,c
  2245   00258A  C09E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2246   00258E  ECB3  F016         	call	_fputc	;wreg free
  2247   002592  EFB3  F012         	goto	l5804
  2248   002596                     l1310:
  2249   002596  0012               	return		;funcret
  2250   002598                     __end_of_vfpfcnvrt:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _read_prec_or_width *****************
  2254 ;; Defined at:
  2255 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  fmt             1   10[COMRAM] PTR PTR const unsigned c
  2258 ;;		 -> vfprintf@cfmt(1), 
  2259 ;;  ap              1   11[COMRAM] PTR PTR void [1]
  2260 ;;		 -> sprintf@ap(1), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  c               1   12[COMRAM] unsigned char 
  2263 ;;  n               2   13[COMRAM] int 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2   10[COMRAM] int 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        5 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 5
  2280 ;; This function calls:
  2281 ;;		___wmul
  2282 ;; This function is called by:
  2283 ;;		_vfpfcnvrt
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text5
  2288   002ECA                     __ptext5:
  2289                           	callstack 0
  2290   002ECA                     _read_prec_or_width:
  2291                           	callstack 22
  2292   002ECA                     
  2293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2294   002ECA  0E00               	movlw	0
  2295   002ECC  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2296   002ECE  0E00               	movlw	0
  2297   002ED0  6E0E               	movwf	read_prec_or_width@n^0,c
  2298   002ED2                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2300   002ED2  500B               	movf	read_prec_or_width@fmt^0,w,c
  2301   002ED4  6ED9               	movwf	fsr2l,c
  2302   002ED6  6ADA               	clrf	fsr2h,c
  2303   002ED8  CFDF FFF6          	movff	indf2,tblptrl
  2304   002EDC                     	if	1	;There is more than 1 active tblptr byte
  2305   002EDC  0E08               	movlw	high __smallconst
  2306   002EDE  6EF7               	movwf	tblptrh,c
  2307   002EE0                     	endif
  2308   002EE0                     	if	0	;tblptru may be non-zero
  2309   002EE0                     	endif
  2310   002EE0                     	if	0	;tblptru may be non-zero
  2311   002EE0                     	endif
  2312   002EE0  0008               	tblrd		*
  2313   002EE2  50F5               	movf	tablat,w,c
  2314   002EE4  0A2A               	xorlw	42
  2315   002EE6  A4D8               	btfss	status,2,c
  2316   002EE8  EF78  F017         	goto	u5971
  2317   002EEC  EF7A  F017         	goto	u5970
  2318   002EF0                     u5971:
  2319   002EF0  EFA0  F017         	goto	l5722
  2320   002EF4                     u5970:
  2321   002EF4                     
  2322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2323   002EF4  500B               	movf	read_prec_or_width@fmt^0,w,c
  2324   002EF6  6ED9               	movwf	fsr2l,c
  2325   002EF8  6ADA               	clrf	fsr2h,c
  2326   002EFA  2ADF               	incf	indf2,f,c
  2327   002EFC                     
  2328                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2329   002EFC  500C               	movf	read_prec_or_width@ap^0,w,c
  2330   002EFE  6ED9               	movwf	fsr2l,c
  2331   002F00  6ADA               	clrf	fsr2h,c
  2332   002F02  0E02               	movlw	2
  2333   002F04  26DF               	addwf	indf2,f,c
  2334   002F06  5CDF               	subwf	indf2,w,c
  2335   002F08  6ED9               	movwf	fsr2l,c
  2336   002F0A  6ADA               	clrf	fsr2h,c
  2337   002F0C  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  2338   002F10  CFDE F00F          	movff	postinc2,read_prec_or_width@n+1
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2341   002F14  EFB3  F017         	goto	l1286
  2342   002F18                     l5718:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2345   002F18  C00E  F005         	movff	read_prec_or_width@n,___wmul@multiplier
  2346   002F1C  C00F  F006         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2347   002F20  0E00               	movlw	0
  2348   002F22  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2349   002F24  0E0A               	movlw	10
  2350   002F26  6E07               	movwf	___wmul@multiplicand^0,c
  2351   002F28  EC6A  F01B         	call	___wmul	;wreg free
  2352   002F2C  500D               	movf	read_prec_or_width@c^0,w,c
  2353   002F2E  2405               	addwf	?___wmul^0,w,c
  2354   002F30  6E0E               	movwf	read_prec_or_width@n^0,c
  2355   002F32  0E00               	movlw	0
  2356   002F34  2006               	addwfc	(?___wmul+1)^0,w,c
  2357   002F36  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2358   002F38                     
  2359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2360   002F38  500B               	movf	read_prec_or_width@fmt^0,w,c
  2361   002F3A  6ED9               	movwf	fsr2l,c
  2362   002F3C  6ADA               	clrf	fsr2h,c
  2363   002F3E  2ADF               	incf	indf2,f,c
  2364   002F40                     l5722:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2367   002F40  500B               	movf	read_prec_or_width@fmt^0,w,c
  2368   002F42  6ED9               	movwf	fsr2l,c
  2369   002F44  6ADA               	clrf	fsr2h,c
  2370   002F46  CFDF FFF6          	movff	indf2,tblptrl
  2371   002F4A                     	if	1	;There is more than 1 active tblptr byte
  2372   002F4A  0E08               	movlw	high __smallconst
  2373   002F4C  6EF7               	movwf	tblptrh,c
  2374   002F4E                     	endif
  2375   002F4E                     	if	0	;tblptru may be non-zero
  2376   002F4E                     	endif
  2377   002F4E                     	if	0	;tblptru may be non-zero
  2378   002F4E                     	endif
  2379   002F4E  0008               	tblrd		*
  2380   002F50  50F5               	movf	tablat,w,c
  2381   002F52  0FD0               	addlw	208
  2382   002F54  6E0D               	movwf	read_prec_or_width@c^0,c
  2383   002F56  0E09               	movlw	9
  2384   002F58  640D               	cpfsgt	read_prec_or_width@c^0,c
  2385   002F5A  EFB1  F017         	goto	u5981
  2386   002F5E  EFB3  F017         	goto	u5980
  2387   002F62                     u5981:
  2388   002F62  EF8C  F017         	goto	l5718
  2389   002F66                     u5980:
  2390   002F66                     l1286:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2393   002F66  C00E  F00B         	movff	read_prec_or_width@n,?_read_prec_or_width
  2394   002F6A  C00F  F00C         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2395   002F6E  0012               	return		;funcret
  2396   002F70                     __end_of_read_prec_or_width:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function ___wmul *****************
  2400 ;; Defined at:
  2401 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  multiplier      2    4[COMRAM] unsigned int 
  2404 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  product         2    8[COMRAM] unsigned int 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  2    4[COMRAM] unsigned int 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, prodl, prodh
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2416 ;;      Params:         4       0       0       0       0       0       0       0       0
  2417 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2419 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2420 ;;Total ram usage:        6 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 4
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_read_prec_or_width
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text6
  2431   0036D4                     __ptext6:
  2432                           	callstack 0
  2433   0036D4                     ___wmul:
  2434                           	callstack 22
  2435   0036D4  5005               	movf	___wmul@multiplier^0,w,c
  2436   0036D6  0207               	mulwf	___wmul@multiplicand^0,c
  2437   0036D8  CFF3 F009          	movff	prodl,___wmul@product
  2438   0036DC  CFF4 F00A          	movff	prodh,___wmul@product+1
  2439   0036E0  5005               	movf	___wmul@multiplier^0,w,c
  2440   0036E2  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2441   0036E4  50F3               	movf	243,w,c
  2442   0036E6  260A               	addwf	(___wmul@product+1)^0,f,c
  2443   0036E8  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2444   0036EA  0207               	mulwf	___wmul@multiplicand^0,c
  2445   0036EC  50F3               	movf	243,w,c
  2446   0036EE  260A               	addwf	(___wmul@product+1)^0,f,c
  2447   0036F0  C009  F005         	movff	___wmul@product,?___wmul
  2448   0036F4  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2449   0036F8  0012               	return		;funcret
  2450   0036FA                     __end_of___wmul:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _efgtoa *****************
  2454 ;; Defined at:
  2455 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2458 ;;		 -> sprintf@f(12), 
  2459 ;;  f               4   11[BANK0 ] PTR struct _IO_FILE
  2460 ;;  c               1   15[BANK0 ] unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  u               4   58[BANK0 ] struct flui
  2463 ;;  g               4   52[BANK0 ] struct flui
  2464 ;;  l               4   47[BANK0 ] struct flui
  2465 ;;  h               4   43[BANK0 ] struct flui
  2466 ;;  ou              4   37[BANK0 ] struct flui
  2467 ;;  n               2   56[BANK0 ] int 
  2468 ;;  i               2   41[BANK0 ] int 
  2469 ;;  w               2   35[BANK0 ] int 
  2470 ;;  e               2   33[BANK0 ] int 
  2471 ;;  m               2   31[BANK0 ] int 
  2472 ;;  d               2   29[BANK0 ] int 
  2473 ;;  t               2   22[BANK0 ] int 
  2474 ;;  p               2   20[BANK0 ] int 
  2475 ;;  ne              2   18[BANK0 ] int 
  2476 ;;  sign            1   51[BANK0 ] unsigned char 
  2477 ;;  nmode           1   28[BANK0 ] unsigned char 
  2478 ;;  mode            1   27[BANK0 ] unsigned char 
  2479 ;;  pp              1   26[BANK0 ] unsigned char 
  2480 ;;  esign           1    0        unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2490 ;;      Params:         0       6       0       0       0       0       0       0       0
  2491 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2492 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2493 ;;      Totals:         0      52       0       0       0       0       0       0       0
  2494 ;;Total ram usage:       52 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 9
  2497 ;; This function calls:
  2498 ;;		___fladd
  2499 ;;		___fldiv
  2500 ;;		___fleq
  2501 ;;		___flge
  2502 ;;		___flmul
  2503 ;;		___flneg
  2504 ;;		___flsub
  2505 ;;		___fltol
  2506 ;;		___fpclassifyf
  2507 ;;		_floorf
  2508 ;;		_labs
  2509 ;;		_memcpy
  2510 ;;		_pad
  2511 ;;		_strcpy
  2512 ;; This function is called by:
  2513 ;;		_vfpfcnvrt
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text7
  2518   000824                     __ptext7:
  2519                           	callstack 0
  2520   000824                     _efgtoa:
  2521                           	callstack 18
  2522   000824                     
  2523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2524   000824  0E00               	movlw	0
  2525   000826  0100               	movlb	0	; () banked
  2526   000828  6F93               	movwf	efgtoa@sign& (0+255),b
  2527   00082A                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2530   00082A  C06B  F094         	movff	efgtoa@f,efgtoa@g
  2531   00082E  C06C  F095         	movff	efgtoa@f+1,efgtoa@g+1
  2532   000832  C06D  F096         	movff	efgtoa@f+2,efgtoa@g+2
  2533   000836  C06E  F097         	movff	efgtoa@f+3,efgtoa@g+3
  2534   00083A                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2537   00083A  BF97               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2538   00083C  EF24  F004         	goto	u5650
  2539   000840  EF22  F004         	goto	u5651
  2540   000844                     u5651:
  2541   000844  EF38  F004         	goto	l5498
  2542   000848                     u5650:
  2543   000848                     
  2544                           ; BSR set to: 0
  2545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2546   000848  0E01               	movlw	1
  2547   00084A  6F93               	movwf	efgtoa@sign& (0+255),b
  2548   00084C                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2551   00084C  C094  F005         	movff	efgtoa@g,___flneg@f1
  2552   000850  C095  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2553   000854  C096  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2554   000858  C097  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2555   00085C  ECAD  F01A         	call	___flneg	;wreg free
  2556   000860  C005  F094         	movff	?___flneg,efgtoa@g
  2557   000864  C006  F095         	movff	?___flneg+1,efgtoa@g+1
  2558   000868  C007  F096         	movff	?___flneg+2,efgtoa@g+2
  2559   00086C  C008  F097         	movff	?___flneg+3,efgtoa@g+3
  2560   000870                     l5498:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2563   000870  0E00               	movlw	0
  2564   000872  0100               	movlb	0	; () banked
  2565   000874  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2566   000876  0E00               	movlw	0
  2567   000878  6F98               	movwf	efgtoa@n& (0+255),b
  2568   00087A                     
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2571   00087A  C0E1  F083         	movff	_width,efgtoa@w
  2572   00087E  C0E2  F084         	movff	_width+1,efgtoa@w+1
  2573   000882                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2576   000882  5193               	movf	efgtoa@sign& (0+255),w,b
  2577   000884  B4D8               	btfsc	status,2,c
  2578   000886  EF47  F004         	goto	u5661
  2579   00088A  EF49  F004         	goto	u5660
  2580   00088E                     u5661:
  2581   00088E  EF5D  F004         	goto	l5512
  2582   000892                     u5660:
  2583   000892                     
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2586   000892  5193               	movf	efgtoa@sign& (0+255),w,b
  2587   000894  A4D8               	btfss	status,2,c
  2588   000896  EF4F  F004         	goto	u5671
  2589   00089A  EF51  F004         	goto	u5670
  2590   00089E                     u5671:
  2591   00089E  EF57  F004         	goto	l5508
  2592   0008A2                     u5670:
  2593   0008A2                     
  2594                           ; BSR set to: 0
  2595   0008A2  0E00               	movlw	0
  2596   0008A4  6F79               	movwf	(_efgtoa$1982+1)& (0+255),b
  2597   0008A6  0E2B               	movlw	43
  2598   0008A8  6F78               	movwf	_efgtoa$1982& (0+255),b
  2599   0008AA  EF5B  F004         	goto	l5510
  2600   0008AE                     l5508:
  2601                           
  2602                           ; BSR set to: 0
  2603   0008AE  0E00               	movlw	0
  2604   0008B0  6F79               	movwf	(_efgtoa$1982+1)& (0+255),b
  2605   0008B2  0E2D               	movlw	45
  2606   0008B4  6F78               	movwf	_efgtoa$1982& (0+255),b
  2607   0008B6                     l5510:
  2608                           
  2609                           ; BSR set to: 0
  2610   0008B6  C078  F093         	movff	_efgtoa$1982,efgtoa@sign
  2611   0008BA                     l5512:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2615   0008BA  C094  F005         	movff	efgtoa@g,___fpclassifyf@x
  2616   0008BE  C095  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2617   0008C2  C096  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2618   0008C6  C097  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2619   0008CA  EC34  F016         	call	___fpclassifyf	;wreg free
  2620   0008CE  0405               	decf	?___fpclassifyf^0,w,c
  2621   0008D0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2622   0008D2  A4D8               	btfss	status,2,c
  2623   0008D4  EF6E  F004         	goto	u5681
  2624   0008D8  EF70  F004         	goto	u5680
  2625   0008DC                     u5681:
  2626   0008DC  EF9F  F004         	goto	l5530
  2627   0008E0                     u5680:
  2628   0008E0                     
  2629                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2630   0008E0  0100               	movlb	0	; () banked
  2631   0008E2  5193               	movf	efgtoa@sign& (0+255),w,b
  2632   0008E4  B4D8               	btfsc	status,2,c
  2633   0008E6  EF77  F004         	goto	u5691
  2634   0008EA  EF79  F004         	goto	u5690
  2635   0008EE                     u5691:
  2636   0008EE  EF82  F004         	goto	l5522
  2637   0008F2                     u5690:
  2638   0008F2                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2641   0008F2  C093  F104         	movff	efgtoa@sign,_dbuf
  2642   0008F6                     
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2645   0008F6  0783               	decf	efgtoa@w& (0+255),f,b
  2646   0008F8  A0D8               	btfss	status,0,c
  2647   0008FA  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  2648   0008FC                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2651   0008FC  0E00               	movlw	0
  2652   0008FE  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2653   000900  0E01               	movlw	1
  2654   000902  6F98               	movwf	efgtoa@n& (0+255),b
  2655   000904                     l5522:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2659   000904  0E04               	movlw	low _dbuf
  2660   000906  2598               	addwf	efgtoa@n& (0+255),w,b
  2661   000908  6E05               	movwf	strcpy@dest^0,c
  2662   00090A  0E01               	movlw	high _dbuf
  2663   00090C  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2664   00090E  6E06               	movwf	(strcpy@dest+1)^0,c
  2665   000910  0E1B               	movlw	low STR_2
  2666   000912  6E07               	movwf	strcpy@src^0,c
  2667   000914  EC56  F01A         	call	_strcpy	;wreg free
  2668   000918                     l5524:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2671   000918  0100               	movlb	0	; () banked
  2672   00091A  0EFD               	movlw	253
  2673   00091C  2783               	addwf	efgtoa@w& (0+255),f,b
  2674   00091E  0EFF               	movlw	255
  2675   000920  2384               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2676   000922                     
  2677                           ; BSR set to: 0
  2678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2679   000922  C06A  F015         	movff	efgtoa@fp,pad@fp
  2680   000926  0E04               	movlw	low _dbuf
  2681   000928  6E16               	movwf	pad@buf^0,c
  2682   00092A  0E01               	movlw	high _dbuf
  2683   00092C  6E17               	movwf	(pad@buf+1)^0,c
  2684   00092E  C083  F018         	movff	efgtoa@w,pad@p
  2685   000932  C084  F019         	movff	efgtoa@w+1,pad@p+1
  2686   000936  ECF2  F017         	call	_pad	;wreg free
  2687   00093A  EF05  F009         	goto	l1241
  2688   00093E                     l5530:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2691   00093E  C094  F005         	movff	efgtoa@g,___fpclassifyf@x
  2692   000942  C095  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2693   000946  C096  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2694   00094A  C097  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2695   00094E  EC34  F016         	call	___fpclassifyf	;wreg free
  2696   000952  5005               	movf	?___fpclassifyf^0,w,c
  2697   000954  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2698   000956  A4D8               	btfss	status,2,c
  2699   000958  EFB0  F004         	goto	u5701
  2700   00095C  EFB2  F004         	goto	u5700
  2701   000960                     u5701:
  2702   000960  EFD0  F004         	goto	l5548
  2703   000964                     u5700:
  2704   000964                     
  2705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2706   000964  0100               	movlb	0	; () banked
  2707   000966  5193               	movf	efgtoa@sign& (0+255),w,b
  2708   000968  B4D8               	btfsc	status,2,c
  2709   00096A  EFB9  F004         	goto	u5711
  2710   00096E  EFBB  F004         	goto	u5710
  2711   000972                     u5711:
  2712   000972  EFC4  F004         	goto	l5540
  2713   000976                     u5710:
  2714   000976                     
  2715                           ; BSR set to: 0
  2716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2717   000976  C093  F104         	movff	efgtoa@sign,_dbuf
  2718   00097A                     
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2721   00097A  0783               	decf	efgtoa@w& (0+255),f,b
  2722   00097C  A0D8               	btfss	status,0,c
  2723   00097E  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  2724   000980                     
  2725                           ; BSR set to: 0
  2726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2727   000980  0E00               	movlw	0
  2728   000982  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2729   000984  0E01               	movlw	1
  2730   000986  6F98               	movwf	efgtoa@n& (0+255),b
  2731   000988                     l5540:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2735   000988  0E04               	movlw	low _dbuf
  2736   00098A  2598               	addwf	efgtoa@n& (0+255),w,b
  2737   00098C  6E05               	movwf	strcpy@dest^0,c
  2738   00098E  0E01               	movlw	high _dbuf
  2739   000990  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2740   000992  6E06               	movwf	(strcpy@dest+1)^0,c
  2741   000994  0E1F               	movlw	low STR_5
  2742   000996  6E07               	movwf	strcpy@src^0,c
  2743   000998  EC56  F01A         	call	_strcpy	;wreg free
  2744   00099C  EF8C  F004         	goto	l5524
  2745   0009A0                     l5548:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2748   0009A0  0E00               	movlw	0
  2749   0009A2  0100               	movlb	0	; () banked
  2750   0009A4  6F9A               	movwf	efgtoa@u& (0+255),b
  2751   0009A6  0E00               	movlw	0
  2752   0009A8  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  2753   0009AA  0E80               	movlw	128
  2754   0009AC  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  2755   0009AE  0E3F               	movlw	63
  2756   0009B0  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2759   0009B2  0E00               	movlw	0
  2760   0009B4  6F82               	movwf	(efgtoa@e+1)& (0+255),b
  2761   0009B6  0E00               	movlw	0
  2762   0009B8  6F81               	movwf	efgtoa@e& (0+255),b
  2763   0009BA                     
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2766   0009BA  C094  F005         	movff	efgtoa@g,___fleq@ff1
  2767   0009BE  C095  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2768   0009C2  C096  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2769   0009C6  C097  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2770   0009CA  0E00               	movlw	0
  2771   0009CC  6E09               	movwf	___fleq@ff2^0,c
  2772   0009CE  0E00               	movlw	0
  2773   0009D0  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2774   0009D2  0E00               	movlw	0
  2775   0009D4  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2776   0009D6  0E00               	movlw	0
  2777   0009D8  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2778   0009DA  EC10  F017         	call	___fleq	;wreg free
  2779   0009DE  B0D8               	btfsc	status,0,c
  2780   0009E0  EFF4  F004         	goto	u5721
  2781   0009E4  EFF6  F004         	goto	u5720
  2782   0009E8                     u5721:
  2783   0009E8  EFD5  F005         	goto	l1244
  2784   0009EC                     u5720:
  2785   0009EC  EF03  F005         	goto	l5556
  2786   0009F0                     l1246:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2789   0009F0  C085  F09A         	movff	efgtoa@ou,efgtoa@u
  2790   0009F4  C086  F09B         	movff	efgtoa@ou+1,efgtoa@u+1
  2791   0009F8  C087  F09C         	movff	efgtoa@ou+2,efgtoa@u+2
  2792   0009FC  C088  F09D         	movff	efgtoa@ou+3,efgtoa@u+3
  2793   000A00                     
  2794                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2795   000A00  0100               	movlb	0	; () banked
  2796   000A02  4B81               	infsnz	efgtoa@e& (0+255),f,b
  2797   000A04  2B82               	incf	(efgtoa@e+1)& (0+255),f,b
  2798   000A06                     l5556:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2801   000A06  C09A  F013         	movff	efgtoa@u,___flmul@b
  2802   000A0A  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  2803   000A0E  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  2804   000A12  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  2805   000A16  0E00               	movlw	0
  2806   000A18  6E17               	movwf	___flmul@a^0,c
  2807   000A1A  0E00               	movlw	0
  2808   000A1C  6E18               	movwf	(___flmul@a+1)^0,c
  2809   000A1E  0E20               	movlw	32
  2810   000A20  6E19               	movwf	(___flmul@a+2)^0,c
  2811   000A22  0E41               	movlw	65
  2812   000A24  6E1A               	movwf	(___flmul@a+3)^0,c
  2813   000A26  EC66  F00B         	call	___flmul	;wreg free
  2814   000A2A  C013  F085         	movff	?___flmul,efgtoa@ou
  2815   000A2E  C014  F086         	movff	?___flmul+1,efgtoa@ou+1
  2816   000A32  C015  F087         	movff	?___flmul+2,efgtoa@ou+2
  2817   000A36  C016  F088         	movff	?___flmul+3,efgtoa@ou+3
  2818   000A3A  0100               	movlb	0	; () banked
  2819   000A3C  5185               	movf	efgtoa@ou& (0+255),w,b
  2820   000A3E  5D94               	subwf	efgtoa@g& (0+255),w,b
  2821   000A40  6E05               	movwf	labs@a^0,c
  2822   000A42  5186               	movf	(efgtoa@ou+1)& (0+255),w,b
  2823   000A44  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2824   000A46  6E06               	movwf	(labs@a+1)^0,c
  2825   000A48  5187               	movf	(efgtoa@ou+2)& (0+255),w,b
  2826   000A4A  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2827   000A4C  6E07               	movwf	(labs@a+2)^0,c
  2828   000A4E  5188               	movf	(efgtoa@ou+3)& (0+255),w,b
  2829   000A50  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2830   000A52  6E08               	movwf	(labs@a+3)^0,c
  2831   000A54  EC83  F018         	call	_labs	;wreg free
  2832   000A58  BE08               	btfsc	(?_labs+3)^0,7,c
  2833   000A5A  EF3A  F005         	goto	u5731
  2834   000A5E  5008               	movf	(?_labs+3)^0,w,c
  2835   000A60  1007               	iorwf	(?_labs+2)^0,w,c
  2836   000A62  1006               	iorwf	(?_labs+1)^0,w,c
  2837   000A64  E109               	bnz	u5730
  2838   000A66  0E02               	movlw	2
  2839   000A68  5C05               	subwf	?_labs^0,w,c
  2840   000A6A  A0D8               	btfss	status,0,c
  2841   000A6C  EF3A  F005         	goto	u5731
  2842   000A70  EF3C  F005         	goto	u5730
  2843   000A74                     u5731:
  2844   000A74  EFF8  F004         	goto	l1246
  2845   000A78                     u5730:
  2846   000A78  C085  F02C         	movff	efgtoa@ou,___flge@ff1
  2847   000A7C  C086  F02D         	movff	efgtoa@ou+1,___flge@ff1+1
  2848   000A80  C087  F02E         	movff	efgtoa@ou+2,___flge@ff1+2
  2849   000A84  C088  F02F         	movff	efgtoa@ou+3,___flge@ff1+3
  2850   000A88  C094  F030         	movff	efgtoa@g,___flge@ff2
  2851   000A8C  C095  F031         	movff	efgtoa@g+1,___flge@ff2+1
  2852   000A90  C096  F032         	movff	efgtoa@g+2,___flge@ff2+2
  2853   000A94  C097  F033         	movff	efgtoa@g+3,___flge@ff2+3
  2854   000A98  ECB2  F015         	call	___flge	;wreg free
  2855   000A9C  A0D8               	btfss	status,0,c
  2856   000A9E  EF53  F005         	goto	u5741
  2857   000AA2  EF55  F005         	goto	u5740
  2858   000AA6                     u5741:
  2859   000AA6  EFF8  F004         	goto	l1246
  2860   000AAA                     u5740:
  2861   000AAA                     
  2862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2863   000AAA  0100               	movlb	0	; () banked
  2864   000AAC  519A               	movf	efgtoa@u& (0+255),w,b
  2865   000AAE  5D94               	subwf	efgtoa@g& (0+255),w,b
  2866   000AB0  6E05               	movwf	labs@a^0,c
  2867   000AB2  519B               	movf	(efgtoa@u+1)& (0+255),w,b
  2868   000AB4  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2869   000AB6  6E06               	movwf	(labs@a+1)^0,c
  2870   000AB8  519C               	movf	(efgtoa@u+2)& (0+255),w,b
  2871   000ABA  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2872   000ABC  6E07               	movwf	(labs@a+2)^0,c
  2873   000ABE  519D               	movf	(efgtoa@u+3)& (0+255),w,b
  2874   000AC0  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2875   000AC2  6E08               	movwf	(labs@a+3)^0,c
  2876   000AC4  EC83  F018         	call	_labs	;wreg free
  2877   000AC8  BE08               	btfsc	(?_labs+3)^0,7,c
  2878   000ACA  EF74  F005         	goto	u5750
  2879   000ACE  5008               	movf	(?_labs+3)^0,w,c
  2880   000AD0  1007               	iorwf	(?_labs+2)^0,w,c
  2881   000AD2  1006               	iorwf	(?_labs+1)^0,w,c
  2882   000AD4  E107               	bnz	u5751
  2883   000AD6  0E02               	movlw	2
  2884   000AD8  5C05               	subwf	?_labs^0,w,c
  2885   000ADA  B0D8               	btfsc	status,0,c
  2886   000ADC  EF72  F005         	goto	u5751
  2887   000AE0  EF74  F005         	goto	u5750
  2888   000AE4                     u5751:
  2889   000AE4  EFBC  F005         	goto	l5574
  2890   000AE8                     u5750:
  2891   000AE8                     l5564:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2894   000AE8  C09A  F094         	movff	efgtoa@u,efgtoa@g
  2895   000AEC  C09B  F095         	movff	efgtoa@u+1,efgtoa@g+1
  2896   000AF0  C09C  F096         	movff	efgtoa@u+2,efgtoa@g+2
  2897   000AF4  C09D  F097         	movff	efgtoa@u+3,efgtoa@g+3
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  2900   000AF8  EFD5  F005         	goto	l1244
  2901   000AFC                     l5566:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2904   000AFC  C09A  F034         	movff	efgtoa@u,___fldiv@b
  2905   000B00  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  2906   000B04  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  2907   000B08  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  2908   000B0C  0E00               	movlw	0
  2909   000B0E  6E38               	movwf	___fldiv@a^0,c
  2910   000B10  0E00               	movlw	0
  2911   000B12  6E39               	movwf	(___fldiv@a+1)^0,c
  2912   000B14  0E20               	movlw	32
  2913   000B16  6E3A               	movwf	(___fldiv@a+2)^0,c
  2914   000B18  0E41               	movlw	65
  2915   000B1A  6E3B               	movwf	(___fldiv@a+3)^0,c
  2916   000B1C  EC7B  F00D         	call	___fldiv	;wreg free
  2917   000B20  C034  F09A         	movff	?___fldiv,efgtoa@u
  2918   000B24  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  2919   000B28  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  2920   000B2C  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  2921   000B30                     
  2922                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  2923   000B30  0100               	movlb	0	; () banked
  2924   000B32  0781               	decf	efgtoa@e& (0+255),f,b
  2925   000B34  A0D8               	btfss	status,0,c
  2926   000B36  0782               	decf	(efgtoa@e+1)& (0+255),f,b
  2927   000B38                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2930   000B38  519A               	movf	efgtoa@u& (0+255),w,b
  2931   000B3A  5D94               	subwf	efgtoa@g& (0+255),w,b
  2932   000B3C  6E05               	movwf	labs@a^0,c
  2933   000B3E  519B               	movf	(efgtoa@u+1)& (0+255),w,b
  2934   000B40  5995               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2935   000B42  6E06               	movwf	(labs@a+1)^0,c
  2936   000B44  519C               	movf	(efgtoa@u+2)& (0+255),w,b
  2937   000B46  5996               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2938   000B48  6E07               	movwf	(labs@a+2)^0,c
  2939   000B4A  519D               	movf	(efgtoa@u+3)& (0+255),w,b
  2940   000B4C  5997               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2941   000B4E  6E08               	movwf	(labs@a+3)^0,c
  2942   000B50  EC83  F018         	call	_labs	;wreg free
  2943   000B54  BE08               	btfsc	(?_labs+3)^0,7,c
  2944   000B56  EFBA  F005         	goto	u5760
  2945   000B5A  5008               	movf	(?_labs+3)^0,w,c
  2946   000B5C  1007               	iorwf	(?_labs+2)^0,w,c
  2947   000B5E  1006               	iorwf	(?_labs+1)^0,w,c
  2948   000B60  E107               	bnz	u5761
  2949   000B62  0E02               	movlw	2
  2950   000B64  5C05               	subwf	?_labs^0,w,c
  2951   000B66  B0D8               	btfsc	status,0,c
  2952   000B68  EFB8  F005         	goto	u5761
  2953   000B6C  EFBA  F005         	goto	u5760
  2954   000B70                     u5761:
  2955   000B70  EFBC  F005         	goto	l5574
  2956   000B74                     u5760:
  2957   000B74  EF74  F005         	goto	l5564
  2958   000B78                     l5574:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2961   000B78  C094  F02C         	movff	efgtoa@g,___flge@ff1
  2962   000B7C  C095  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2963   000B80  C096  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2964   000B84  C097  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2965   000B88  C09A  F030         	movff	efgtoa@u,___flge@ff2
  2966   000B8C  C09B  F031         	movff	efgtoa@u+1,___flge@ff2+1
  2967   000B90  C09C  F032         	movff	efgtoa@u+2,___flge@ff2+2
  2968   000B94  C09D  F033         	movff	efgtoa@u+3,___flge@ff2+3
  2969   000B98  ECB2  F015         	call	___flge	;wreg free
  2970   000B9C  A0D8               	btfss	status,0,c
  2971   000B9E  EFD3  F005         	goto	u5771
  2972   000BA2  EFD5  F005         	goto	u5770
  2973   000BA6                     u5771:
  2974   000BA6  EF7E  F005         	goto	l5566
  2975   000BAA                     u5770:
  2976   000BAA                     l1244:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2979   000BAA  C06F  F07B         	movff	efgtoa@c,efgtoa@mode
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2982   000BAE  C07B  F07C         	movff	efgtoa@mode,efgtoa@nmode
  2983   000BB2                     
  2984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2985   000BB2  0100               	movlb	0	; () banked
  2986   000BB4  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  2987   000BB6  EFDF  F005         	goto	u5781
  2988   000BBA  EFE1  F005         	goto	u5780
  2989   000BBE                     u5781:
  2990   000BBE  EFE7  F005         	goto	l5580
  2991   000BC2                     u5780:
  2992   000BC2                     
  2993                           ; BSR set to: 0
  2994   000BC2  C0E3  F074         	movff	_prec,efgtoa@p
  2995   000BC6  C0E4  F075         	movff	_prec+1,efgtoa@p+1
  2996   000BCA  EFEB  F005         	goto	l5582
  2997   000BCE                     l5580:
  2998                           
  2999                           ; BSR set to: 0
  3000   000BCE  0E00               	movlw	0
  3001   000BD0  6F75               	movwf	(efgtoa@p+1)& (0+255),b
  3002   000BD2  0E06               	movlw	6
  3003   000BD4  6F74               	movwf	efgtoa@p& (0+255),b
  3004   000BD6                     l5582:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3008   000BD6  C074  F07F         	movff	efgtoa@p,efgtoa@m
  3009   000BDA  C075  F080         	movff	efgtoa@p+1,efgtoa@m+1
  3010   000BDE                     
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3013   000BDE  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  3014   000BE0  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  3015   000BE2                     
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3018   000BE2  0E66               	movlw	102
  3019   000BE4  197C               	xorwf	efgtoa@nmode& (0+255),w,b
  3020   000BE6  A4D8               	btfss	status,2,c
  3021   000BE8  EFF8  F005         	goto	u5791
  3022   000BEC  EFFA  F005         	goto	u5790
  3023   000BF0                     u5791:
  3024   000BF0  EF1A  F006         	goto	l5596
  3025   000BF4                     u5790:
  3026   000BF4                     
  3027                           ; BSR set to: 0
  3028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3029   000BF4  BF82               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3030   000BF6  EF01  F006         	goto	u5800
  3031   000BFA  EFFF  F005         	goto	u5801
  3032   000BFE                     u5801:
  3033   000BFE  EF0D  F006         	goto	l5592
  3034   000C02                     u5800:
  3035   000C02                     
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3038   000C02  0E00               	movlw	0
  3039   000C04  6F9A               	movwf	efgtoa@u& (0+255),b
  3040   000C06  0E00               	movlw	0
  3041   000C08  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  3042   000C0A  0E80               	movlw	128
  3043   000C0C  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  3044   000C0E  0E3F               	movlw	63
  3045   000C10  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3048   000C12  0E00               	movlw	0
  3049   000C14  6F82               	movwf	(efgtoa@e+1)& (0+255),b
  3050   000C16  0E00               	movlw	0
  3051   000C18  6F81               	movwf	efgtoa@e& (0+255),b
  3052   000C1A                     l5592:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3056   000C1A  0E67               	movlw	103
  3057   000C1C  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3058   000C1E  B4D8               	btfsc	status,2,c
  3059   000C20  EF14  F006         	goto	u5811
  3060   000C24  EF16  F006         	goto	u5810
  3061   000C28                     u5811:
  3062   000C28  EF1A  F006         	goto	l5596
  3063   000C2C                     u5810:
  3064   000C2C                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3067   000C2C  5181               	movf	efgtoa@e& (0+255),w,b
  3068   000C2E  277F               	addwf	efgtoa@m& (0+255),f,b
  3069   000C30  5182               	movf	(efgtoa@e+1)& (0+255),w,b
  3070   000C32  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3071   000C34                     l5596:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3075   000C34  0E00               	movlw	0
  3076   000C36  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3077   000C38  0E00               	movlw	0
  3078   000C3A  6F89               	movwf	efgtoa@i& (0+255),b
  3079   000C3C                     
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3082   000C3C  C094  F08B         	movff	efgtoa@g,efgtoa@h
  3083   000C40  C095  F08C         	movff	efgtoa@g+1,efgtoa@h+1
  3084   000C44  C096  F08D         	movff	efgtoa@g+2,efgtoa@h+2
  3085   000C48  C097  F08E         	movff	efgtoa@g+3,efgtoa@h+3
  3086   000C4C                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3089   000C4C  C09A  F085         	movff	efgtoa@u,efgtoa@ou
  3090   000C50  C09B  F086         	movff	efgtoa@u+1,efgtoa@ou+1
  3091   000C54  C09C  F087         	movff	efgtoa@u+2,efgtoa@ou+2
  3092   000C58  C09D  F088         	movff	efgtoa@u+3,efgtoa@ou+3
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3095   000C5C  EFAB  F006         	goto	l5610
  3096   000C60                     l5602:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3100   000C60  C08B  F034         	movff	efgtoa@h,___fldiv@b
  3101   000C64  C08C  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3102   000C68  C08D  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3103   000C6C  C08E  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3104   000C70  C09A  F038         	movff	efgtoa@u,___fldiv@a
  3105   000C74  C09B  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3106   000C78  C09C  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3107   000C7C  C09D  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3108   000C80  EC7B  F00D         	call	___fldiv	;wreg free
  3109   000C84  C034  F04D         	movff	?___fldiv,floorf@x
  3110   000C88  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3111   000C8C  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3112   000C90  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3113   000C94  ECB9  F010         	call	_floorf	;wreg free
  3114   000C98  C04D  F08F         	movff	?_floorf,efgtoa@l
  3115   000C9C  C04E  F090         	movff	?_floorf+1,efgtoa@l+1
  3116   000CA0  C04F  F091         	movff	?_floorf+2,efgtoa@l+2
  3117   000CA4  C050  F092         	movff	?_floorf+3,efgtoa@l+3
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3120   000CA8  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3121   000CAC  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3122   000CB0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3123   000CB4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3124   000CB8  EC2F  F015         	call	___fltol	;wreg free
  3125   000CBC  C005  F07D         	movff	?___fltol,efgtoa@d
  3126   000CC0  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3127   000CC4                     
  3128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3129   000CC4  C08B  F02C         	movff	efgtoa@h,___flsub@b
  3130   000CC8  C08C  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3131   000CCC  C08D  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3132   000CD0  C08E  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3133   000CD4  C08F  F017         	movff	efgtoa@l,___flmul@a
  3134   000CD8  C090  F018         	movff	efgtoa@l+1,___flmul@a+1
  3135   000CDC  C091  F019         	movff	efgtoa@l+2,___flmul@a+2
  3136   000CE0  C092  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3137   000CE4  C09A  F013         	movff	efgtoa@u,___flmul@b
  3138   000CE8  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3139   000CEC  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3140   000CF0  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3141   000CF4  EC66  F00B         	call	___flmul	;wreg free
  3142   000CF8  C013  F030         	movff	?___flmul,___flsub@a
  3143   000CFC  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3144   000D00  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3145   000D04  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3146   000D08  EC92  F019         	call	___flsub	;wreg free
  3147   000D0C  C02C  F08B         	movff	?___flsub,efgtoa@h
  3148   000D10  C02D  F08C         	movff	?___flsub+1,efgtoa@h+1
  3149   000D14  C02E  F08D         	movff	?___flsub+2,efgtoa@h+2
  3150   000D18  C02F  F08E         	movff	?___flsub+3,efgtoa@h+3
  3151   000D1C                     
  3152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3153   000D1C  C09A  F034         	movff	efgtoa@u,___fldiv@b
  3154   000D20  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3155   000D24  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3156   000D28  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3157   000D2C  0E00               	movlw	0
  3158   000D2E  6E38               	movwf	___fldiv@a^0,c
  3159   000D30  0E00               	movlw	0
  3160   000D32  6E39               	movwf	(___fldiv@a+1)^0,c
  3161   000D34  0E20               	movlw	32
  3162   000D36  6E3A               	movwf	(___fldiv@a+2)^0,c
  3163   000D38  0E41               	movlw	65
  3164   000D3A  6E3B               	movwf	(___fldiv@a+3)^0,c
  3165   000D3C  EC7B  F00D         	call	___fldiv	;wreg free
  3166   000D40  C034  F09A         	movff	?___fldiv,efgtoa@u
  3167   000D44  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3168   000D48  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3169   000D4C  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3170   000D50                     
  3171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3172   000D50  0100               	movlb	0	; () banked
  3173   000D52  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3174   000D54  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3175   000D56                     l5610:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3179   000D56  517F               	movf	efgtoa@m& (0+255),w,b
  3180   000D58  5D89               	subwf	efgtoa@i& (0+255),w,b
  3181   000D5A  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3182   000D5C  0A80               	xorlw	128
  3183   000D5E  6F70               	movwf	??_efgtoa& (0+255),b
  3184   000D60  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  3185   000D62  0A80               	xorlw	128
  3186   000D64  5970               	subwfb	??_efgtoa& (0+255),w,b
  3187   000D66  A0D8               	btfss	status,0,c
  3188   000D68  EFB8  F006         	goto	u5821
  3189   000D6C  EFBA  F006         	goto	u5820
  3190   000D70                     u5821:
  3191   000D70  EF30  F006         	goto	l5602
  3192   000D74                     u5820:
  3193   000D74                     
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3196   000D74  C09A  F013         	movff	efgtoa@u,___flmul@b
  3197   000D78  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3198   000D7C  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3199   000D80  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3200   000D84  0E00               	movlw	0
  3201   000D86  6E17               	movwf	___flmul@a^0,c
  3202   000D88  0E00               	movlw	0
  3203   000D8A  6E18               	movwf	(___flmul@a+1)^0,c
  3204   000D8C  0EA0               	movlw	160
  3205   000D8E  6E19               	movwf	(___flmul@a+2)^0,c
  3206   000D90  0E40               	movlw	64
  3207   000D92  6E1A               	movwf	(___flmul@a+3)^0,c
  3208   000D94  EC66  F00B         	call	___flmul	;wreg free
  3209   000D98  C013  F08F         	movff	?___flmul,efgtoa@l
  3210   000D9C  C014  F090         	movff	?___flmul+1,efgtoa@l+1
  3211   000DA0  C015  F091         	movff	?___flmul+2,efgtoa@l+2
  3212   000DA4  C016  F092         	movff	?___flmul+3,efgtoa@l+3
  3213   000DA8                     
  3214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3215   000DA8  C08B  F02C         	movff	efgtoa@h,___flge@ff1
  3216   000DAC  C08C  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3217   000DB0  C08D  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3218   000DB4  C08E  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3219   000DB8  C08F  F030         	movff	efgtoa@l,___flge@ff2
  3220   000DBC  C090  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3221   000DC0  C091  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3222   000DC4  C092  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3223   000DC8  ECB2  F015         	call	___flge	;wreg free
  3224   000DCC  B0D8               	btfsc	status,0,c
  3225   000DCE  EFEB  F006         	goto	u5831
  3226   000DD2  EFED  F006         	goto	u5830
  3227   000DD6                     u5831:
  3228   000DD6  EFF8  F006         	goto	l5618
  3229   000DDA                     u5830:
  3230   000DDA                     
  3231                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3232   000DDA  0E00               	movlw	0
  3233   000DDC  0100               	movlb	0	; () banked
  3234   000DDE  6F8F               	movwf	efgtoa@l& (0+255),b
  3235   000DE0  0E00               	movlw	0
  3236   000DE2  6F90               	movwf	(efgtoa@l+1)& (0+255),b
  3237   000DE4  0E00               	movlw	0
  3238   000DE6  6F91               	movwf	(efgtoa@l+2)& (0+255),b
  3239   000DE8  0E00               	movlw	0
  3240   000DEA  6F92               	movwf	(efgtoa@l+3)& (0+255),b
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3243   000DEC  EF21  F007         	goto	l5624
  3244   000DF0                     l5618:
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3247   000DF0  C08B  F005         	movff	efgtoa@h,___fleq@ff1
  3248   000DF4  C08C  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3249   000DF8  C08D  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3250   000DFC  C08E  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3251   000E00  C08F  F009         	movff	efgtoa@l,___fleq@ff2
  3252   000E04  C090  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3253   000E08  C091  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3254   000E0C  C092  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3255   000E10  EC10  F017         	call	___fleq	;wreg free
  3256   000E14  A0D8               	btfss	status,0,c
  3257   000E16  EF0F  F007         	goto	u5841
  3258   000E1A  EF11  F007         	goto	u5840
  3259   000E1E                     u5841:
  3260   000E1E  EF21  F007         	goto	l5624
  3261   000E22                     u5840:
  3262   000E22  0100               	movlb	0	; () banked
  3263   000E24  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3264   000E26  EF17  F007         	goto	u5851
  3265   000E2A  EF19  F007         	goto	u5850
  3266   000E2E                     u5851:
  3267   000E2E  EF21  F007         	goto	l5624
  3268   000E32                     u5850:
  3269   000E32                     
  3270                           ; BSR set to: 0
  3271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3272   000E32  0E00               	movlw	0
  3273   000E34  6F8F               	movwf	efgtoa@l& (0+255),b
  3274   000E36  0E00               	movlw	0
  3275   000E38  6F90               	movwf	(efgtoa@l+1)& (0+255),b
  3276   000E3A  0E00               	movlw	0
  3277   000E3C  6F91               	movwf	(efgtoa@l+2)& (0+255),b
  3278   000E3E  0E00               	movlw	0
  3279   000E40  6F92               	movwf	(efgtoa@l+3)& (0+255),b
  3280   000E42                     l5624:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3283   000E42  C094  F005         	movff	efgtoa@g,___fladd@b
  3284   000E46  C095  F006         	movff	efgtoa@g+1,___fladd@b+1
  3285   000E4A  C096  F007         	movff	efgtoa@g+2,___fladd@b+2
  3286   000E4E  C097  F008         	movff	efgtoa@g+3,___fladd@b+3
  3287   000E52  C08F  F009         	movff	efgtoa@l,___fladd@a
  3288   000E56  C090  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3289   000E5A  C091  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3290   000E5E  C092  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3291   000E62  EC06  F009         	call	___fladd	;wreg free
  3292   000E66  C005  F08B         	movff	?___fladd,efgtoa@h
  3293   000E6A  C006  F08C         	movff	?___fladd+1,efgtoa@h+1
  3294   000E6E  C007  F08D         	movff	?___fladd+2,efgtoa@h+2
  3295   000E72  C008  F08E         	movff	?___fladd+3,efgtoa@h+3
  3296   000E76                     
  3297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3298   000E76  C08B  F02C         	movff	efgtoa@h,___flge@ff1
  3299   000E7A  C08C  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3300   000E7E  C08D  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3301   000E82  C08E  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3302   000E86  0E00               	movlw	0
  3303   000E88  6E17               	movwf	___flmul@a^0,c
  3304   000E8A  0E00               	movlw	0
  3305   000E8C  6E18               	movwf	(___flmul@a+1)^0,c
  3306   000E8E  0E20               	movlw	32
  3307   000E90  6E19               	movwf	(___flmul@a+2)^0,c
  3308   000E92  0E41               	movlw	65
  3309   000E94  6E1A               	movwf	(___flmul@a+3)^0,c
  3310   000E96  C085  F013         	movff	efgtoa@ou,___flmul@b
  3311   000E9A  C086  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3312   000E9E  C087  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3313   000EA2  C088  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3314   000EA6  EC66  F00B         	call	___flmul	;wreg free
  3315   000EAA  C013  F030         	movff	?___flmul,___flge@ff2
  3316   000EAE  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3317   000EB2  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3318   000EB6  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3319   000EBA  ECB2  F015         	call	___flge	;wreg free
  3320   000EBE  A0D8               	btfss	status,0,c
  3321   000EC0  EF64  F007         	goto	u5861
  3322   000EC4  EF66  F007         	goto	u5860
  3323   000EC8                     u5861:
  3324   000EC8  EF8F  F007         	goto	l5636
  3325   000ECC                     u5860:
  3326   000ECC                     
  3327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3328   000ECC  0100               	movlb	0	; () banked
  3329   000ECE  4B81               	infsnz	efgtoa@e& (0+255),f,b
  3330   000ED0  2B82               	incf	(efgtoa@e+1)& (0+255),f,b
  3331   000ED2                     
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3334   000ED2  C085  F013         	movff	efgtoa@ou,___flmul@b
  3335   000ED6  C086  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3336   000EDA  C087  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3337   000EDE  C088  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3338   000EE2  0E00               	movlw	0
  3339   000EE4  6E17               	movwf	___flmul@a^0,c
  3340   000EE6  0E00               	movlw	0
  3341   000EE8  6E18               	movwf	(___flmul@a+1)^0,c
  3342   000EEA  0E20               	movlw	32
  3343   000EEC  6E19               	movwf	(___flmul@a+2)^0,c
  3344   000EEE  0E41               	movlw	65
  3345   000EF0  6E1A               	movwf	(___flmul@a+3)^0,c
  3346   000EF2  EC66  F00B         	call	___flmul	;wreg free
  3347   000EF6  C013  F085         	movff	?___flmul,efgtoa@ou
  3348   000EFA  C014  F086         	movff	?___flmul+1,efgtoa@ou+1
  3349   000EFE  C015  F087         	movff	?___flmul+2,efgtoa@ou+2
  3350   000F02  C016  F088         	movff	?___flmul+3,efgtoa@ou+3
  3351   000F06                     
  3352                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3353   000F06  0E66               	movlw	102
  3354   000F08  0100               	movlb	0	; () banked
  3355   000F0A  197C               	xorwf	efgtoa@nmode& (0+255),w,b
  3356   000F0C  A4D8               	btfss	status,2,c
  3357   000F0E  EF8B  F007         	goto	u5871
  3358   000F12  EF8D  F007         	goto	u5870
  3359   000F16                     u5871:
  3360   000F16  EF8F  F007         	goto	l5636
  3361   000F1A                     u5870:
  3362   000F1A                     
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3365   000F1A  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  3366   000F1C  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  3367   000F1E                     l5636:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3370   000F1E  C085  F09A         	movff	efgtoa@ou,efgtoa@u
  3371   000F22  C086  F09B         	movff	efgtoa@ou+1,efgtoa@u+1
  3372   000F26  C087  F09C         	movff	efgtoa@ou+2,efgtoa@u+2
  3373   000F2A  C088  F09D         	movff	efgtoa@ou+3,efgtoa@u+3
  3374   000F2E                     
  3375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3376   000F2E  C081  F072         	movff	efgtoa@e,efgtoa@ne
  3377   000F32  C082  F073         	movff	efgtoa@e+1,efgtoa@ne+1
  3378   000F36                     
  3379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3380   000F36  0E00               	movlw	0
  3381   000F38  0100               	movlb	0	; () banked
  3382   000F3A  6F7A               	movwf	efgtoa@pp& (0+255),b
  3383   000F3C                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3386   000F3C  0E00               	movlw	0
  3387   000F3E  6F77               	movwf	(efgtoa@t+1)& (0+255),b
  3388   000F40  0E00               	movlw	0
  3389   000F42  6F76               	movwf	efgtoa@t& (0+255),b
  3390   000F44                     
  3391                           ; BSR set to: 0
  3392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3393   000F44  0E00               	movlw	0
  3394   000F46  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3395   000F48  0E00               	movlw	0
  3396   000F4A  6F89               	movwf	efgtoa@i& (0+255),b
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3399   000F4C  EF8D  F008         	goto	l5686
  3400   000F50                     l5646:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3404   000F50  C08B  F034         	movff	efgtoa@h,___fldiv@b
  3405   000F54  C08C  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3406   000F58  C08D  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3407   000F5C  C08E  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3408   000F60  C09A  F038         	movff	efgtoa@u,___fldiv@a
  3409   000F64  C09B  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3410   000F68  C09C  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3411   000F6C  C09D  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3412   000F70  EC7B  F00D         	call	___fldiv	;wreg free
  3413   000F74  C034  F04D         	movff	?___fldiv,floorf@x
  3414   000F78  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3415   000F7C  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3416   000F80  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3417   000F84  ECB9  F010         	call	_floorf	;wreg free
  3418   000F88  C04D  F08F         	movff	?_floorf,efgtoa@l
  3419   000F8C  C04E  F090         	movff	?_floorf+1,efgtoa@l+1
  3420   000F90  C04F  F091         	movff	?_floorf+2,efgtoa@l+2
  3421   000F94  C050  F092         	movff	?_floorf+3,efgtoa@l+3
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3424   000F98  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3425   000F9C  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3426   000FA0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3427   000FA4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3428   000FA8  EC2F  F015         	call	___fltol	;wreg free
  3429   000FAC  BE06               	btfsc	(?___fltol+1)^0,7,c
  3430   000FAE  EFE4  F007         	goto	u5880
  3431   000FB2  5006               	movf	(?___fltol+1)^0,w,c
  3432   000FB4  E107               	bnz	u5881
  3433   000FB6  0E0A               	movlw	10
  3434   000FB8  5C05               	subwf	?___fltol^0,w,c
  3435   000FBA  B0D8               	btfsc	status,0,c
  3436   000FBC  EFE2  F007         	goto	u5881
  3437   000FC0  EFE4  F007         	goto	u5880
  3438   000FC4                     u5881:
  3439   000FC4  EFF4  F007         	goto	l5650
  3440   000FC8                     u5880:
  3441   000FC8  C08F  F005         	movff	efgtoa@l,___fltol@f1
  3442   000FCC  C090  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3443   000FD0  C091  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3444   000FD4  C092  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3445   000FD8  EC2F  F015         	call	___fltol	;wreg free
  3446   000FDC  C005  F07D         	movff	?___fltol,efgtoa@d
  3447   000FE0  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3448   000FE4  EFF9  F007         	goto	l1274
  3449   000FE8                     l5650:
  3450   000FE8  0E00               	movlw	0
  3451   000FEA  0100               	movlb	0	; () banked
  3452   000FEC  6F7E               	movwf	(efgtoa@d+1)& (0+255),b
  3453   000FEE  0E09               	movlw	9
  3454   000FF0  6F7D               	movwf	efgtoa@d& (0+255),b
  3455   000FF2                     l1274:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3458   000FF2  0100               	movlb	0	; () banked
  3459   000FF4  517A               	movf	efgtoa@pp& (0+255),w,b
  3460   000FF6  A4D8               	btfss	status,2,c
  3461   000FF8  EF00  F008         	goto	u5891
  3462   000FFC  EF02  F008         	goto	u5890
  3463   001000                     u5891:
  3464   001000  EF2A  F008         	goto	l5670
  3465   001004                     u5890:
  3466   001004                     
  3467                           ; BSR set to: 0
  3468   001004  BF73               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3469   001006  EF09  F008         	goto	u5900
  3470   00100A  EF07  F008         	goto	u5901
  3471   00100E                     u5901:
  3472   00100E  EF2A  F008         	goto	l5670
  3473   001012                     u5900:
  3474   001012                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3477   001012  0E04               	movlw	low _dbuf
  3478   001014  2598               	addwf	efgtoa@n& (0+255),w,b
  3479   001016  6ED9               	movwf	fsr2l,c
  3480   001018  0E01               	movlw	high _dbuf
  3481   00101A  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3482   00101C  6EDA               	movwf	fsr2h,c
  3483   00101E  0E2E               	movlw	46
  3484   001020  6EDF               	movwf	indf2,c
  3485   001022                     
  3486                           ; BSR set to: 0
  3487   001022  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3488   001024  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3489   001026                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3492   001026  0783               	decf	efgtoa@w& (0+255),f,b
  3493   001028  A0D8               	btfss	status,0,c
  3494   00102A  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3495   00102C                     
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3498   00102C  0E01               	movlw	1
  3499   00102E  6F7A               	movwf	efgtoa@pp& (0+255),b
  3500   001030  EF2A  F008         	goto	l5670
  3501   001034                     l5662:
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3505   001034  0E04               	movlw	low _dbuf
  3506   001036  2598               	addwf	efgtoa@n& (0+255),w,b
  3507   001038  6ED9               	movwf	fsr2l,c
  3508   00103A  0E01               	movlw	high _dbuf
  3509   00103C  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3510   00103E  6EDA               	movwf	fsr2h,c
  3511   001040  0E30               	movlw	48
  3512   001042  6EDF               	movwf	indf2,c
  3513   001044                     
  3514                           ; BSR set to: 0
  3515   001044  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3516   001046  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3517   001048                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3520   001048  0783               	decf	efgtoa@w& (0+255),f,b
  3521   00104A  A0D8               	btfss	status,0,c
  3522   00104C  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3523   00104E                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3526   00104E  0776               	decf	efgtoa@t& (0+255),f,b
  3527   001050  A0D8               	btfss	status,0,c
  3528   001052  0777               	decf	(efgtoa@t+1)& (0+255),f,b
  3529   001054                     l5670:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3533   001054  5176               	movf	efgtoa@t& (0+255),w,b
  3534   001056  1177               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3535   001058  A4D8               	btfss	status,2,c
  3536   00105A  EF31  F008         	goto	u5911
  3537   00105E  EF33  F008         	goto	u5910
  3538   001062                     u5911:
  3539   001062  EF1A  F008         	goto	l5662
  3540   001066                     u5910:
  3541   001066                     
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3544   001066  0E04               	movlw	low _dbuf
  3545   001068  2598               	addwf	efgtoa@n& (0+255),w,b
  3546   00106A  6ED9               	movwf	fsr2l,c
  3547   00106C  0E01               	movlw	high _dbuf
  3548   00106E  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3549   001070  6EDA               	movwf	fsr2h,c
  3550   001072  517D               	movf	efgtoa@d& (0+255),w,b
  3551   001074  0F30               	addlw	48
  3552   001076  6EDF               	movwf	indf2,c
  3553   001078                     
  3554                           ; BSR set to: 0
  3555   001078  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3556   00107A  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3557   00107C                     
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3560   00107C  0783               	decf	efgtoa@w& (0+255),f,b
  3561   00107E  A0D8               	btfss	status,0,c
  3562   001080  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3563   001082                     
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3566   001082  C08B  F02C         	movff	efgtoa@h,___flsub@b
  3567   001086  C08C  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3568   00108A  C08D  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3569   00108E  C08E  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3570   001092  C08F  F017         	movff	efgtoa@l,___flmul@a
  3571   001096  C090  F018         	movff	efgtoa@l+1,___flmul@a+1
  3572   00109A  C091  F019         	movff	efgtoa@l+2,___flmul@a+2
  3573   00109E  C092  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3574   0010A2  C09A  F013         	movff	efgtoa@u,___flmul@b
  3575   0010A6  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3576   0010AA  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3577   0010AE  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3578   0010B2  EC66  F00B         	call	___flmul	;wreg free
  3579   0010B6  C013  F030         	movff	?___flmul,___flsub@a
  3580   0010BA  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3581   0010BE  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3582   0010C2  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3583   0010C6  EC92  F019         	call	___flsub	;wreg free
  3584   0010CA  C02C  F08B         	movff	?___flsub,efgtoa@h
  3585   0010CE  C02D  F08C         	movff	?___flsub+1,efgtoa@h+1
  3586   0010D2  C02E  F08D         	movff	?___flsub+2,efgtoa@h+2
  3587   0010D6  C02F  F08E         	movff	?___flsub+3,efgtoa@h+3
  3588   0010DA                     
  3589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3590   0010DA  C09A  F034         	movff	efgtoa@u,___fldiv@b
  3591   0010DE  C09B  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3592   0010E2  C09C  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3593   0010E6  C09D  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3594   0010EA  0E00               	movlw	0
  3595   0010EC  6E38               	movwf	___fldiv@a^0,c
  3596   0010EE  0E00               	movlw	0
  3597   0010F0  6E39               	movwf	(___fldiv@a+1)^0,c
  3598   0010F2  0E20               	movlw	32
  3599   0010F4  6E3A               	movwf	(___fldiv@a+2)^0,c
  3600   0010F6  0E41               	movlw	65
  3601   0010F8  6E3B               	movwf	(___fldiv@a+3)^0,c
  3602   0010FA  EC7B  F00D         	call	___fldiv	;wreg free
  3603   0010FE  C034  F09A         	movff	?___fldiv,efgtoa@u
  3604   001102  C035  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3605   001106  C036  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3606   00110A  C037  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3607   00110E                     
  3608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3609   00110E  0100               	movlb	0	; () banked
  3610   001110  0772               	decf	efgtoa@ne& (0+255),f,b
  3611   001112  A0D8               	btfss	status,0,c
  3612   001114  0773               	decf	(efgtoa@ne+1)& (0+255),f,b
  3613   001116                     
  3614                           ; BSR set to: 0
  3615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3616   001116  4B89               	infsnz	efgtoa@i& (0+255),f,b
  3617   001118  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  3618   00111A                     l5686:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3622   00111A  517F               	movf	efgtoa@m& (0+255),w,b
  3623   00111C  5D89               	subwf	efgtoa@i& (0+255),w,b
  3624   00111E  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3625   001120  0A80               	xorlw	128
  3626   001122  6F70               	movwf	??_efgtoa& (0+255),b
  3627   001124  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  3628   001126  0A80               	xorlw	128
  3629   001128  5970               	subwfb	??_efgtoa& (0+255),w,b
  3630   00112A  B0D8               	btfsc	status,0,c
  3631   00112C  EF9A  F008         	goto	u5921
  3632   001130  EF9C  F008         	goto	u5920
  3633   001134                     u5921:
  3634   001134  EFAA  F008         	goto	l5690
  3635   001138                     u5920:
  3636   001138                     
  3637                           ; BSR set to: 0
  3638   001138  BF99               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3639   00113A  EFA8  F008         	goto	u5931
  3640   00113E  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3641   001140  E109               	bnz	u5930
  3642   001142  0E4B               	movlw	75
  3643   001144  5D98               	subwf	efgtoa@n& (0+255),w,b
  3644   001146  A0D8               	btfss	status,0,c
  3645   001148  EFA8  F008         	goto	u5931
  3646   00114C  EFAA  F008         	goto	u5930
  3647   001150                     u5931:
  3648   001150  EFA8  F007         	goto	l5646
  3649   001154                     u5930:
  3650   001154                     l5690:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3654   001154  0E00               	movlw	0
  3655   001156  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  3656   001158  0E4F               	movlw	79
  3657   00115A  6F89               	movwf	efgtoa@i& (0+255),b
  3658   00115C                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3661   00115C  0E04               	movlw	low _dbuf
  3662   00115E  2589               	addwf	efgtoa@i& (0+255),w,b
  3663   001160  6ED9               	movwf	fsr2l,c
  3664   001162  0E01               	movlw	high _dbuf
  3665   001164  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3666   001166  6EDA               	movwf	fsr2h,c
  3667   001168  6ADF               	clrf	indf2,c
  3668   00116A                     
  3669                           ; BSR set to: 0
  3670                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3671   00116A  0E04               	movlw	low _dbuf
  3672   00116C  6F70               	movwf	??_efgtoa& (0+255),b
  3673   00116E  0E01               	movlw	high _dbuf
  3674   001170  6F71               	movwf	(??_efgtoa+1)& (0+255),b
  3675   001172  5198               	movf	efgtoa@n& (0+255),w,b
  3676   001174  5F70               	subwf	??_efgtoa& (0+255),f,b
  3677   001176  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3678   001178  5B71               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3679   00117A  5189               	movf	efgtoa@i& (0+255),w,b
  3680   00117C  2570               	addwf	??_efgtoa& (0+255),w,b
  3681   00117E  6E05               	movwf	memcpy@d1^0,c
  3682   001180  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3683   001182  2171               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3684   001184  6E06               	movwf	(memcpy@d1+1)^0,c
  3685   001186  0E04               	movlw	low _dbuf
  3686   001188  6E07               	movwf	memcpy@s1^0,c
  3687   00118A  0E01               	movlw	high _dbuf
  3688   00118C  6E08               	movwf	(memcpy@s1+1)^0,c
  3689   00118E  C098  F009         	movff	efgtoa@n,memcpy@n
  3690   001192  C099  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3691   001196  ECD8  F018         	call	_memcpy	;wreg free
  3692   00119A                     
  3693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3694   00119A  0100               	movlb	0	; () banked
  3695   00119C  5198               	movf	efgtoa@n& (0+255),w,b
  3696   00119E  5D89               	subwf	efgtoa@i& (0+255),w,b
  3697   0011A0  6F98               	movwf	efgtoa@n& (0+255),b
  3698   0011A2  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3699   0011A4  598A               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3700   0011A6  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  3701   0011A8                     
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3704   0011A8  5193               	movf	efgtoa@sign& (0+255),w,b
  3705   0011AA  A4D8               	btfss	status,2,c
  3706   0011AC  EFDA  F008         	goto	u5941
  3707   0011B0  EFDD  F008         	goto	u5940
  3708   0011B4                     u5941:
  3709   0011B4  0E01               	movlw	1
  3710   0011B6  EFDE  F008         	goto	u5950
  3711   0011BA                     u5940:
  3712   0011BA  0E00               	movlw	0
  3713   0011BC                     u5950:
  3714   0011BC  6F89               	movwf	efgtoa@i& (0+255),b
  3715   0011BE  6B8A               	clrf	(efgtoa@i+1)& (0+255),b
  3716   0011C0                     
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3719   0011C0  5193               	movf	efgtoa@sign& (0+255),w,b
  3720   0011C2  B4D8               	btfsc	status,2,c
  3721   0011C4  EFE6  F008         	goto	u5961
  3722   0011C8  EFE8  F008         	goto	u5960
  3723   0011CC                     u5961:
  3724   0011CC  EFF3  F008         	goto	l5704
  3725   0011D0                     u5960:
  3726   0011D0                     
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3729   0011D0  0798               	decf	efgtoa@n& (0+255),f,b
  3730   0011D2  A0D8               	btfss	status,0,c
  3731   0011D4  0799               	decf	(efgtoa@n+1)& (0+255),f,b
  3732   0011D6  0E04               	movlw	low _dbuf
  3733   0011D8  2598               	addwf	efgtoa@n& (0+255),w,b
  3734   0011DA  6ED9               	movwf	fsr2l,c
  3735   0011DC  0E01               	movlw	high _dbuf
  3736   0011DE  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3737   0011E0  6EDA               	movwf	fsr2h,c
  3738   0011E2  C093  FFDF         	movff	efgtoa@sign,indf2
  3739   0011E6                     l5704:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3743   0011E6  5189               	movf	efgtoa@i& (0+255),w,b
  3744   0011E8  5F83               	subwf	efgtoa@w& (0+255),f,b
  3745   0011EA  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  3746   0011EC  5B84               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3747   0011EE                     
  3748                           ; BSR set to: 0
  3749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3750   0011EE  C06A  F015         	movff	efgtoa@fp,pad@fp
  3751   0011F2  0E04               	movlw	low _dbuf
  3752   0011F4  2598               	addwf	efgtoa@n& (0+255),w,b
  3753   0011F6  6E16               	movwf	pad@buf^0,c
  3754   0011F8  0E01               	movlw	high _dbuf
  3755   0011FA  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3756   0011FC  6E17               	movwf	(pad@buf+1)^0,c
  3757   0011FE  C083  F018         	movff	efgtoa@w,pad@p
  3758   001202  C084  F019         	movff	efgtoa@w+1,pad@p+1
  3759   001206  ECF2  F017         	call	_pad	;wreg free
  3760   00120A                     l1241:
  3761   00120A  0012               	return		;funcret
  3762   00120C                     __end_of_efgtoa:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _strcpy *****************
  3766 ;; Defined at:
  3767 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3770 ;;		 -> dbuf(80), 
  3771 ;;  src             1    6[COMRAM] PTR const unsigned char 
  3772 ;;		 -> STR_5(4), STR_2(4), 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  d               2    8[COMRAM] PTR unsigned char 
  3775 ;;		 -> dbuf(80), 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  2    4[COMRAM] PTR unsigned char 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         3       0       0       0       0       0       0       0       0
  3786 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3787 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3788 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3789 ;;Total ram usage:        6 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 4
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_efgtoa
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text8
  3800   0034AC                     __ptext8:
  3801                           	callstack 0
  3802   0034AC                     _strcpy:
  3803                           	callstack 22
  3804   0034AC  C005  F009         	movff	strcpy@dest,strcpy@d
  3805   0034B0  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3806   0034B4                     l5382:
  3807   0034B4  2A07               	incf	strcpy@src^0,f,c
  3808   0034B6  0407               	decf	strcpy@src^0,w,c
  3809   0034B8  6E08               	movwf	??_strcpy^0,c
  3810   0034BA  C008  FFF6         	movff	??_strcpy,tblptrl
  3811   0034BE                     	if	1	;There is more than 1 active tblptr byte
  3812   0034BE  0E08               	movlw	high __smallconst
  3813   0034C0  6EF7               	movwf	tblptrh,c
  3814   0034C2                     	endif
  3815   0034C2                     	if	0	;tblptru may be non-zero
  3816   0034C2                     	endif
  3817   0034C2                     	if	0	;tblptru may be non-zero
  3818   0034C2                     	endif
  3819   0034C2  C009  FFD9         	movff	strcpy@d,fsr2l
  3820   0034C6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3821   0034CA  4A09               	infsnz	strcpy@d^0,f,c
  3822   0034CC  2A0A               	incf	(strcpy@d+1)^0,f,c
  3823   0034CE  0008               	tblrd		*
  3824   0034D0  CFF5 FFDF          	movff	tablat,indf2
  3825   0034D4  50DF               	movf	indf2,w,c
  3826   0034D6  A4D8               	btfss	status,2,c
  3827   0034D8  EF70  F01A         	goto	u5521
  3828   0034DC  EF72  F01A         	goto	u5520
  3829   0034E0                     u5521:
  3830   0034E0  EF5A  F01A         	goto	l5382
  3831   0034E4                     u5520:
  3832   0034E4  0012               	return		;funcret
  3833   0034E6                     __end_of_strcpy:
  3834                           	callstack 0
  3835                           
  3836 ;; *************** function _pad *****************
  3837 ;; Defined at:
  3838 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  3841 ;;		 -> sprintf@f(12), 
  3842 ;;  buf             2   21[COMRAM] PTR unsigned char 
  3843 ;;		 -> dbuf(80), 
  3844 ;;  p               2   23[COMRAM] int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  i               2   26[COMRAM] int 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3856 ;;      Params:         5       0       0       0       0       0       0       0       0
  3857 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3858 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3859 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3860 ;;Total ram usage:        8 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 8
  3863 ;; This function calls:
  3864 ;;		_fputc
  3865 ;;		_fputs
  3866 ;; This function is called by:
  3867 ;;		_efgtoa
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text9
  3872   002FE4                     __ptext9:
  3873                           	callstack 0
  3874   002FE4                     _pad:
  3875                           	callstack 18
  3876   002FE4                     
  3877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3878   002FE4  BE19               	btfsc	(pad@p+1)^0,7,c
  3879   002FE6  EFF9  F017         	goto	u5430
  3880   002FEA  EFF7  F017         	goto	u5431
  3881   002FEE                     u5431:
  3882   002FEE  EFFD  F017         	goto	l1226
  3883   002FF2                     u5430:
  3884   002FF2                     
  3885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3886   002FF2  0E00               	movlw	0
  3887   002FF4  6E19               	movwf	(pad@p+1)^0,c
  3888   002FF6  0E00               	movlw	0
  3889   002FF8  6E18               	movwf	pad@p^0,c
  3890   002FFA                     l1226:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3893   002FFA  0E00               	movlw	0
  3894   002FFC  6E1C               	movwf	(pad@i+1)^0,c
  3895   002FFE  0E00               	movlw	0
  3896   003000  6E1B               	movwf	pad@i^0,c
  3897                           
  3898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3899   003002  EF0D  F018         	goto	l5354
  3900   003006                     l5350:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3903   003006  0E00               	movlw	0
  3904   003008  6E08               	movwf	(fputc@c+1)^0,c
  3905   00300A  0E20               	movlw	32
  3906   00300C  6E07               	movwf	fputc@c^0,c
  3907   00300E  C015  F009         	movff	pad@fp,fputc@fp
  3908   003012  ECB3  F016         	call	_fputc	;wreg free
  3909   003016                     
  3910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3911   003016  4A1B               	infsnz	pad@i^0,f,c
  3912   003018  2A1C               	incf	(pad@i+1)^0,f,c
  3913   00301A                     l5354:
  3914                           
  3915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3916   00301A  5018               	movf	pad@p^0,w,c
  3917   00301C  5C1B               	subwf	pad@i^0,w,c
  3918   00301E  501C               	movf	(pad@i+1)^0,w,c
  3919   003020  0A80               	xorlw	128
  3920   003022  6E1A               	movwf	??_pad^0,c
  3921   003024  5019               	movf	(pad@p+1)^0,w,c
  3922   003026  0A80               	xorlw	128
  3923   003028  581A               	subwfb	??_pad^0,w,c
  3924   00302A  A0D8               	btfss	status,0,c
  3925   00302C  EF1A  F018         	goto	u5441
  3926   003030  EF1C  F018         	goto	u5440
  3927   003034                     u5441:
  3928   003034  EF03  F018         	goto	l5350
  3929   003038                     u5440:
  3930   003038                     
  3931                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3932   003038  C016  F00F         	movff	pad@buf,fputs@s
  3933   00303C  C017  F010         	movff	pad@buf+1,fputs@s+1
  3934   003040  C015  F011         	movff	pad@fp,fputs@fp
  3935   003044  ECF6  F019         	call	_fputs	;wreg free
  3936   003048  0012               	return		;funcret
  3937   00304A                     __end_of_pad:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _fputs *****************
  3941 ;; Defined at:
  3942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3945 ;;		 -> dbuf(80), 
  3946 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  3947 ;;		 -> sprintf@f(12), 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  i               2   18[COMRAM] int 
  3950 ;;  c               1   17[COMRAM] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2   14[COMRAM] int 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3960 ;;      Params:         3       0       0       0       0       0       0       0       0
  3961 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3963 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3964 ;;Total ram usage:        6 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 7
  3967 ;; This function calls:
  3968 ;;		_fputc
  3969 ;; This function is called by:
  3970 ;;		_pad
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text10
  3975   0033EC                     __ptext10:
  3976                           	callstack 0
  3977   0033EC                     _fputs:
  3978                           	callstack 18
  3979   0033EC  0E00               	movlw	0
  3980   0033EE  6E14               	movwf	(fputs@i+1)^0,c
  3981   0033F0  0E00               	movlw	0
  3982   0033F2  6E13               	movwf	fputs@i^0,c
  3983   0033F4  EF05  F01A         	goto	l4924
  3984   0033F8                     l4920:
  3985   0033F8  C012  F007         	movff	fputs@c,fputc@c
  3986   0033FC  6A08               	clrf	(fputc@c+1)^0,c
  3987   0033FE  C011  F009         	movff	fputs@fp,fputc@fp
  3988   003402  ECB3  F016         	call	_fputc	;wreg free
  3989   003406  4A13               	infsnz	fputs@i^0,f,c
  3990   003408  2A14               	incf	(fputs@i+1)^0,f,c
  3991   00340A                     l4924:
  3992   00340A  5013               	movf	fputs@i^0,w,c
  3993   00340C  240F               	addwf	fputs@s^0,w,c
  3994   00340E  6ED9               	movwf	fsr2l,c
  3995   003410  5014               	movf	(fputs@i+1)^0,w,c
  3996   003412  2010               	addwfc	(fputs@s+1)^0,w,c
  3997   003414  6EDA               	movwf	fsr2h,c
  3998   003416  50DF               	movf	indf2,w,c
  3999   003418  6E12               	movwf	fputs@c^0,c
  4000   00341A  5012               	movf	fputs@c^0,w,c
  4001   00341C  A4D8               	btfss	status,2,c
  4002   00341E  EF13  F01A         	goto	u4811
  4003   003422  EF15  F01A         	goto	u4810
  4004   003426                     u4811:
  4005   003426  EFFC  F019         	goto	l4920
  4006   00342A                     u4810:
  4007   00342A  0012               	return		;funcret
  4008   00342C                     __end_of_fputs:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function _fputc *****************
  4012 ;; Defined at:
  4013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  c               2    6[COMRAM] int 
  4016 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  4017 ;;		 -> sprintf@f(12), 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  2    6[COMRAM] int 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4029 ;;      Params:         3       0       0       0       0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4031 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4032 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4033 ;;Total ram usage:        8 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; Hardware stack levels required when called: 6
  4036 ;; This function calls:
  4037 ;;		_putch
  4038 ;; This function is called by:
  4039 ;;		_pad
  4040 ;;		_vfpfcnvrt
  4041 ;;		_fputs
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text11
  4046   002D66                     __ptext11:
  4047                           	callstack 0
  4048   002D66                     _fputc:
  4049                           	callstack 21
  4050   002D66  5009               	movf	fputc@fp^0,w,c
  4051   002D68  B4D8               	btfsc	status,2,c
  4052   002D6A  EFB9  F016         	goto	u4381
  4053   002D6E  EFBB  F016         	goto	u4380
  4054   002D72                     u4381:
  4055   002D72  EFC3  F016         	goto	l4690
  4056   002D76                     u4380:
  4057   002D76  5009               	movf	fputc@fp^0,w,c
  4058   002D78  A4D8               	btfss	status,2,c
  4059   002D7A  EFC1  F016         	goto	u4391
  4060   002D7E  EFC3  F016         	goto	u4390
  4061   002D82                     u4391:
  4062   002D82  EFC8  F016         	goto	l4692
  4063   002D86                     u4390:
  4064   002D86                     l4690:
  4065   002D86  5007               	movf	fputc@c^0,w,c
  4066   002D88  EC21  F01C         	call	_putch
  4067   002D8C  EF0F  F017         	goto	l1366
  4068   002D90                     l4692:
  4069   002D90  5009               	movf	fputc@fp^0,w,c
  4070   002D92  6ED9               	movwf	fsr2l,c
  4071   002D94  6ADA               	clrf	fsr2h,c
  4072   002D96  0E0A               	movlw	10
  4073   002D98  26D9               	addwf	fsr2l,f,c
  4074   002D9A  50DE               	movf	postinc2,w,c
  4075   002D9C  10DE               	iorwf	postinc2,w,c
  4076   002D9E  B4D8               	btfsc	status,2,c
  4077   002DA0  EFD4  F016         	goto	u4401
  4078   002DA4  EFD6  F016         	goto	u4400
  4079   002DA8                     u4401:
  4080   002DA8  EFEF  F016         	goto	l4696
  4081   002DAC                     u4400:
  4082   002DAC  5009               	movf	fputc@fp^0,w,c
  4083   002DAE  6ED9               	movwf	fsr2l,c
  4084   002DB0  6ADA               	clrf	fsr2h,c
  4085   002DB2  0E0A               	movlw	10
  4086   002DB4  26D9               	addwf	fsr2l,f,c
  4087   002DB6  5009               	movf	fputc@fp^0,w,c
  4088   002DB8  6EE1               	movwf	fsr1l,c
  4089   002DBA  6AE2               	clrf	fsr1h,c
  4090   002DBC  0E03               	movlw	3
  4091   002DBE  26E1               	addwf	fsr1l,f,c
  4092   002DC0  50DE               	movf	postinc2,w,c
  4093   002DC2  5CE6               	subwf	postinc1,w,c
  4094   002DC4  50E6               	movf	postinc1,w,c
  4095   002DC6  0A80               	xorlw	128
  4096   002DC8  6E0E               	movwf	(??_fputc+4)^0,c
  4097   002DCA  50DE               	movf	postinc2,w,c
  4098   002DCC  0A80               	xorlw	128
  4099   002DCE  580E               	subwfb	(??_fputc+4)^0,w,c
  4100   002DD0  B0D8               	btfsc	status,0,c
  4101   002DD2  EFED  F016         	goto	u4411
  4102   002DD6  EFEF  F016         	goto	u4410
  4103   002DDA                     u4411:
  4104   002DDA  EF0F  F017         	goto	l1366
  4105   002DDE                     u4410:
  4106   002DDE                     l4696:
  4107   002DDE  5009               	movf	fputc@fp^0,w,c
  4108   002DE0  6ED9               	movwf	fsr2l,c
  4109   002DE2  6ADA               	clrf	fsr2h,c
  4110   002DE4  0E03               	movlw	3
  4111   002DE6  26D9               	addwf	fsr2l,f,c
  4112   002DE8  CFDE F00A          	movff	postinc2,??_fputc
  4113   002DEC  CFDD F00B          	movff	postdec2,??_fputc+1
  4114   002DF0  5009               	movf	fputc@fp^0,w,c
  4115   002DF2  6ED9               	movwf	fsr2l,c
  4116   002DF4  6ADA               	clrf	fsr2h,c
  4117   002DF6  CFDE F00C          	movff	postinc2,??_fputc+2
  4118   002DFA  CFDD F00D          	movff	postdec2,??_fputc+3
  4119   002DFE  500A               	movf	??_fputc^0,w,c
  4120   002E00  240C               	addwf	(??_fputc+2)^0,w,c
  4121   002E02  6ED9               	movwf	fsr2l,c
  4122   002E04  500B               	movf	(??_fputc+1)^0,w,c
  4123   002E06  200D               	addwfc	(??_fputc+3)^0,w,c
  4124   002E08  6EDA               	movwf	fsr2h,c
  4125   002E0A  C007  FFDF         	movff	fputc@c,indf2
  4126   002E0E  5009               	movf	fputc@fp^0,w,c
  4127   002E10  6ED9               	movwf	fsr2l,c
  4128   002E12  6ADA               	clrf	fsr2h,c
  4129   002E14  0E03               	movlw	3
  4130   002E16  26D9               	addwf	fsr2l,f,c
  4131   002E18  2ADE               	incf	postinc2,f,c
  4132   002E1A  0E00               	movlw	0
  4133   002E1C  22DD               	addwfc	postdec2,f,c
  4134   002E1E                     l1366:
  4135   002E1E  0012               	return		;funcret
  4136   002E20                     __end_of_fputc:
  4137                           	callstack 0
  4138                           
  4139 ;; *************** function _putch *****************
  4140 ;; Defined at:
  4141 ;;		line 154 in file "mcc_generated_files/eusart1.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  txData          1    wreg     unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  txData          1    5[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0
  4156 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4158 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4159 ;;Total ram usage:        1 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 5
  4162 ;; This function calls:
  4163 ;;		_EUSART1_Write
  4164 ;; This function is called by:
  4165 ;;		_fputc
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text12
  4170   003842                     __ptext12:
  4171                           	callstack 0
  4172   003842                     _putch:
  4173                           	callstack 21
  4174                           
  4175                           ;incstack = 0
  4176                           ;putch@txData stored from wreg
  4177   003842  6E06               	movwf	putch@txData^0,c
  4178   003844                     
  4179                           ;mcc_generated_files/eusart1.c: 154: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 155: {;mcc_generated_files/eusart1.c: 156:     EUSART1_Write(txData);
  4180   003844  5006               	movf	putch@txData^0,w,c
  4181   003846  ECF6  F01B         	call	_EUSART1_Write
  4182   00384A  0012               	return		;funcret
  4183   00384C                     __end_of_putch:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _memcpy *****************
  4187 ;; Defined at:
  4188 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  d1              2    4[COMRAM] PTR void 
  4191 ;;		 -> dbuf(80), 
  4192 ;;  s1              2    6[COMRAM] PTR const void 
  4193 ;;		 -> dbuf(80), 
  4194 ;;  n               2    8[COMRAM] unsigned int 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4197 ;;		 -> dbuf(80), 
  4198 ;;  d               2   11[COMRAM] PTR unsigned char 
  4199 ;;		 -> dbuf(80), 
  4200 ;;  tmp             1   10[COMRAM] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2    4[COMRAM] PTR void 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4210 ;;      Params:         6       0       0       0       0       0       0       0       0
  4211 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4213 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4214 ;;Total ram usage:       11 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 4
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_efgtoa
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text13
  4225   0031B0                     __ptext13:
  4226                           	callstack 0
  4227   0031B0                     _memcpy:
  4228                           	callstack 22
  4229   0031B0  C007  F00E         	movff	memcpy@s1,memcpy@s
  4230   0031B4  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  4231   0031B8  C005  F00C         	movff	memcpy@d1,memcpy@d
  4232   0031BC  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  4233   0031C0  EFF2  F018         	goto	l5430
  4234   0031C4                     l5422:
  4235   0031C4  C00E  FFD9         	movff	memcpy@s,fsr2l
  4236   0031C8  C00F  FFDA         	movff	memcpy@s+1,fsr2h
  4237   0031CC  50DF               	movf	indf2,w,c
  4238   0031CE  6E0B               	movwf	memcpy@tmp^0,c
  4239   0031D0  4A0E               	infsnz	memcpy@s^0,f,c
  4240   0031D2  2A0F               	incf	(memcpy@s+1)^0,f,c
  4241   0031D4  C00C  FFD9         	movff	memcpy@d,fsr2l
  4242   0031D8  C00D  FFDA         	movff	memcpy@d+1,fsr2h
  4243   0031DC  C00B  FFDF         	movff	memcpy@tmp,indf2
  4244   0031E0  4A0C               	infsnz	memcpy@d^0,f,c
  4245   0031E2  2A0D               	incf	(memcpy@d+1)^0,f,c
  4246   0031E4                     l5430:
  4247   0031E4  0609               	decf	memcpy@n^0,f,c
  4248   0031E6  A0D8               	btfss	status,0,c
  4249   0031E8  060A               	decf	(memcpy@n+1)^0,f,c
  4250   0031EA  2809               	incf	memcpy@n^0,w,c
  4251   0031EC  E106               	bnz	u5641
  4252   0031EE  280A               	incf	(memcpy@n+1)^0,w,c
  4253   0031F0  A4D8               	btfss	status,2,c
  4254   0031F2  EFFD  F018         	goto	u5641
  4255   0031F6  EFFF  F018         	goto	u5640
  4256   0031FA                     u5641:
  4257   0031FA  EFE2  F018         	goto	l5422
  4258   0031FE                     u5640:
  4259   0031FE  0012               	return		;funcret
  4260   003200                     __end_of_memcpy:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _labs *****************
  4264 ;; Defined at:
  4265 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  a               4    4[COMRAM] long 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  4    4[COMRAM] long 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4279 ;;      Params:         4       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4282 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        8 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 4
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_efgtoa
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text14
  4294   003106                     __ptext14:
  4295                           	callstack 0
  4296   003106                     _labs:
  4297                           	callstack 22
  4298   003106  BE08               	btfsc	(labs@a+3)^0,7,c
  4299   003108  EF88  F018         	goto	u5531
  4300   00310C  EF8A  F018         	goto	u5530
  4301   003110                     u5531:
  4302   003110  EF94  F018         	goto	l5388
  4303   003114                     u5530:
  4304   003114  C005  F005         	movff	labs@a,?_labs
  4305   003118  C006  F006         	movff	labs@a+1,?_labs+1
  4306   00311C  C007  F007         	movff	labs@a+2,?_labs+2
  4307   003120  C008  F008         	movff	labs@a+3,?_labs+3
  4308   003124  EFAD  F018         	goto	l1348
  4309   003128                     l5388:
  4310   003128  C005  F009         	movff	labs@a,??_labs
  4311   00312C  C006  F00A         	movff	labs@a+1,??_labs+1
  4312   003130  C007  F00B         	movff	labs@a+2,??_labs+2
  4313   003134  C008  F00C         	movff	labs@a+3,??_labs+3
  4314   003138  1E09               	comf	??_labs^0,f,c
  4315   00313A  1E0A               	comf	(??_labs+1)^0,f,c
  4316   00313C  1E0B               	comf	(??_labs+2)^0,f,c
  4317   00313E  1E0C               	comf	(??_labs+3)^0,f,c
  4318   003140  2A09               	incf	??_labs^0,f,c
  4319   003142  0E00               	movlw	0
  4320   003144  220A               	addwfc	(??_labs+1)^0,f,c
  4321   003146  220B               	addwfc	(??_labs+2)^0,f,c
  4322   003148  220C               	addwfc	(??_labs+3)^0,f,c
  4323   00314A  C009  F005         	movff	??_labs,?_labs
  4324   00314E  C00A  F006         	movff	??_labs+1,?_labs+1
  4325   003152  C00B  F007         	movff	??_labs+2,?_labs+2
  4326   003156  C00C  F008         	movff	??_labs+3,?_labs+3
  4327   00315A                     l1348:
  4328   00315A  0012               	return		;funcret
  4329   00315C                     __end_of_labs:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _floorf *****************
  4333 ;; Defined at:
  4334 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  x               4   76[COMRAM] float 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  u               4    6[BANK0 ] struct .
  4339 ;;  m               4    0[BANK0 ] unsigned long 
  4340 ;;  e               2    4[BANK0 ] int 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  4   76[COMRAM] float 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4350 ;;      Params:         4       0       0       0       0       0       0       0       0
  4351 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4352 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4353 ;;      Totals:        10      10       0       0       0       0       0       0       0
  4354 ;;Total ram usage:       20 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 4
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_efgtoa
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text15
  4365   002172                     __ptext15:
  4366                           	callstack 0
  4367   002172                     _floorf:
  4368                           	callstack 22
  4369   002172  C0C1  F066         	movff	floorf@F521,floorf@u
  4370   002176  C0C2  F067         	movff	floorf@F521+1,floorf@u+1
  4371   00217A  C0C3  F068         	movff	floorf@F521+2,floorf@u+2
  4372   00217E  C0C4  F069         	movff	floorf@F521+3,floorf@u+3
  4373   002182  C04D  F066         	movff	floorf@x,floorf@u
  4374   002186  C04E  F067         	movff	floorf@x+1,floorf@u+1
  4375   00218A  C04F  F068         	movff	floorf@x+2,floorf@u+2
  4376   00218E  C050  F069         	movff	floorf@x+3,floorf@u+3
  4377   002192  0E81               	movlw	129
  4378   002194  6E51               	movwf	??_floorf^0,c
  4379   002196  0EFF               	movlw	255
  4380   002198  6E52               	movwf	(??_floorf+1)^0,c
  4381   00219A  C066  F053         	movff	floorf@u,??_floorf+2
  4382   00219E  C067  F054         	movff	floorf@u+1,??_floorf+3
  4383   0021A2  C068  F055         	movff	floorf@u+2,??_floorf+4
  4384   0021A6  C069  F056         	movff	floorf@u+3,??_floorf+5
  4385   0021AA  0E18               	movlw	24
  4386   0021AC  EFDD  F010         	goto	u5540
  4387   0021B0                     u5545:
  4388   0021B0  90D8               	bcf	status,0,c
  4389   0021B2  3256               	rrcf	(??_floorf+5)^0,f,c
  4390   0021B4  3255               	rrcf	(??_floorf+4)^0,f,c
  4391   0021B6  3254               	rrcf	(??_floorf+3)^0,f,c
  4392   0021B8  3253               	rrcf	(??_floorf+2)^0,f,c
  4393   0021BA                     u5540:
  4394   0021BA  2EE8               	decfsz	wreg,f,c
  4395   0021BC  EFD8  F010         	goto	u5545
  4396   0021C0  5053               	movf	(??_floorf+2)^0,w,c
  4397   0021C2  2451               	addwf	??_floorf^0,w,c
  4398   0021C4  0100               	movlb	0	; () banked
  4399   0021C6  6F64               	movwf	floorf@e& (0+255),b
  4400   0021C8  0E00               	movlw	0
  4401   0021CA  2052               	addwfc	(??_floorf+1)^0,w,c
  4402   0021CC  6F65               	movwf	(floorf@e+1)& (0+255),b
  4403   0021CE  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4404   0021D0  EFF3  F010         	goto	u5551
  4405   0021D4  5165               	movf	(floorf@e+1)& (0+255),w,b
  4406   0021D6  E109               	bnz	u5550
  4407   0021D8  0E17               	movlw	23
  4408   0021DA  5D64               	subwf	floorf@e& (0+255),w,b
  4409   0021DC  A0D8               	btfss	status,0,c
  4410   0021DE  EFF3  F010         	goto	u5551
  4411   0021E2  EFF5  F010         	goto	u5550
  4412   0021E6                     u5551:
  4413   0021E6  EFFF  F010         	goto	l5398
  4414   0021EA                     u5550:
  4415   0021EA                     l5396:
  4416                           
  4417                           ; BSR set to: 0
  4418   0021EA  C04D  F04D         	movff	floorf@x,?_floorf
  4419   0021EE  C04E  F04E         	movff	floorf@x+1,?_floorf+1
  4420   0021F2  C04F  F04F         	movff	floorf@x+2,?_floorf+2
  4421   0021F6  C050  F050         	movff	floorf@x+3,?_floorf+3
  4422   0021FA  EFC3  F011         	goto	l1334
  4423   0021FE                     l5398:
  4424                           
  4425                           ; BSR set to: 0
  4426   0021FE  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4427   002200  EF04  F011         	goto	u5561
  4428   002204  EF06  F011         	goto	u5560
  4429   002208                     u5561:
  4430   002208  EF77  F011         	goto	l5408
  4431   00220C                     u5560:
  4432   00220C                     
  4433                           ; BSR set to: 0
  4434   00220C  C064  F051         	movff	floorf@e,??_floorf
  4435   002210  0EFF               	movlw	255
  4436   002212  6E52               	movwf	(??_floorf+1)^0,c
  4437   002214  0EFF               	movlw	255
  4438   002216  6E53               	movwf	(??_floorf+2)^0,c
  4439   002218  0E7F               	movlw	127
  4440   00221A  6E54               	movwf	(??_floorf+3)^0,c
  4441   00221C  0E00               	movlw	0
  4442   00221E  6E55               	movwf	(??_floorf+4)^0,c
  4443   002220                     u5575:
  4444   002220  6651               	tstfsz	??_floorf^0,c
  4445   002222  EF15  F011         	goto	u5576
  4446   002226  EF1D  F011         	goto	u5577
  4447   00222A                     u5576:
  4448   00222A  3455               	rlcf	(??_floorf+4)^0,w,c
  4449   00222C  3255               	rrcf	(??_floorf+4)^0,f,c
  4450   00222E  3254               	rrcf	(??_floorf+3)^0,f,c
  4451   002230  3253               	rrcf	(??_floorf+2)^0,f,c
  4452   002232  3252               	rrcf	(??_floorf+1)^0,f,c
  4453   002234  2E51               	decfsz	??_floorf^0,f,c
  4454   002236  EF10  F011         	goto	u5575
  4455   00223A                     u5577:
  4456   00223A  C052  F060         	movff	??_floorf+1,floorf@m
  4457   00223E  C053  F061         	movff	??_floorf+2,floorf@m+1
  4458   002242  C054  F062         	movff	??_floorf+3,floorf@m+2
  4459   002246  C055  F063         	movff	??_floorf+4,floorf@m+3
  4460   00224A  0100               	movlb	0	; () banked
  4461   00224C  5160               	movf	floorf@m& (0+255),w,b
  4462   00224E  1566               	andwf	floorf@u& (0+255),w,b
  4463   002250  6E51               	movwf	??_floorf^0,c
  4464   002252  5161               	movf	(floorf@m+1)& (0+255),w,b
  4465   002254  1567               	andwf	(floorf@u+1)& (0+255),w,b
  4466   002256  6E52               	movwf	(??_floorf+1)^0,c
  4467   002258  5162               	movf	(floorf@m+2)& (0+255),w,b
  4468   00225A  1568               	andwf	(floorf@u+2)& (0+255),w,b
  4469   00225C  6E53               	movwf	(??_floorf+2)^0,c
  4470   00225E  5163               	movf	(floorf@m+3)& (0+255),w,b
  4471   002260  1569               	andwf	(floorf@u+3)& (0+255),w,b
  4472   002262  6E54               	movwf	(??_floorf+3)^0,c
  4473   002264  5051               	movf	??_floorf^0,w,c
  4474   002266  1052               	iorwf	(??_floorf+1)^0,w,c
  4475   002268  1053               	iorwf	(??_floorf+2)^0,w,c
  4476   00226A  1054               	iorwf	(??_floorf+3)^0,w,c
  4477   00226C  A4D8               	btfss	status,2,c
  4478   00226E  EF3B  F011         	goto	u5581
  4479   002272  EF3D  F011         	goto	u5580
  4480   002276                     u5581:
  4481   002276  EF3F  F011         	goto	l5404
  4482   00227A                     u5580:
  4483   00227A  EFF5  F010         	goto	l5396
  4484   00227E                     l5404:
  4485                           
  4486                           ; BSR set to: 0
  4487   00227E  C066  F051         	movff	floorf@u,??_floorf
  4488   002282  C067  F052         	movff	floorf@u+1,??_floorf+1
  4489   002286  C068  F053         	movff	floorf@u+2,??_floorf+2
  4490   00228A  C069  F054         	movff	floorf@u+3,??_floorf+3
  4491   00228E  0E20               	movlw	32
  4492   002290  EF4F  F011         	goto	u5590
  4493   002294                     u5595:
  4494   002294  90D8               	bcf	status,0,c
  4495   002296  3254               	rrcf	(??_floorf+3)^0,f,c
  4496   002298  3253               	rrcf	(??_floorf+2)^0,f,c
  4497   00229A  3252               	rrcf	(??_floorf+1)^0,f,c
  4498   00229C  3251               	rrcf	??_floorf^0,f,c
  4499   00229E                     u5590:
  4500   00229E  2EE8               	decfsz	wreg,f,c
  4501   0022A0  EF4A  F011         	goto	u5595
  4502   0022A4  5051               	movf	??_floorf^0,w,c
  4503   0022A6  1052               	iorwf	(??_floorf+1)^0,w,c
  4504   0022A8  1053               	iorwf	(??_floorf+2)^0,w,c
  4505   0022AA  1054               	iorwf	(??_floorf+3)^0,w,c
  4506   0022AC  B4D8               	btfsc	status,2,c
  4507   0022AE  EF5B  F011         	goto	u5601
  4508   0022B2  EF5D  F011         	goto	u5600
  4509   0022B6                     u5601:
  4510   0022B6  EF65  F011         	goto	l1337
  4511   0022BA                     u5600:
  4512   0022BA                     
  4513                           ; BSR set to: 0
  4514   0022BA  5160               	movf	floorf@m& (0+255),w,b
  4515   0022BC  2766               	addwf	floorf@u& (0+255),f,b
  4516   0022BE  5161               	movf	(floorf@m+1)& (0+255),w,b
  4517   0022C0  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  4518   0022C2  5162               	movf	(floorf@m+2)& (0+255),w,b
  4519   0022C4  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  4520   0022C6  5163               	movf	(floorf@m+3)& (0+255),w,b
  4521   0022C8  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  4522   0022CA                     l1337:
  4523                           
  4524                           ; BSR set to: 0
  4525   0022CA  1D60               	comf	floorf@m& (0+255),w,b
  4526   0022CC  6E51               	movwf	??_floorf^0,c
  4527   0022CE  1D61               	comf	(floorf@m+1)& (0+255),w,b
  4528   0022D0  6E52               	movwf	(??_floorf+1)^0,c
  4529   0022D2  1D62               	comf	(floorf@m+2)& (0+255),w,b
  4530   0022D4  6E53               	movwf	(??_floorf+2)^0,c
  4531   0022D6  1D63               	comf	(floorf@m+3)& (0+255),w,b
  4532   0022D8  6E54               	movwf	(??_floorf+3)^0,c
  4533   0022DA  5051               	movf	??_floorf^0,w,c
  4534   0022DC  1766               	andwf	floorf@u& (0+255),f,b
  4535   0022DE  5052               	movf	(??_floorf+1)^0,w,c
  4536   0022E0  1767               	andwf	(floorf@u+1)& (0+255),f,b
  4537   0022E2  5053               	movf	(??_floorf+2)^0,w,c
  4538   0022E4  1768               	andwf	(floorf@u+2)& (0+255),f,b
  4539   0022E6  5054               	movf	(??_floorf+3)^0,w,c
  4540   0022E8  1769               	andwf	(floorf@u+3)& (0+255),f,b
  4541   0022EA  EFBB  F011         	goto	l5416
  4542   0022EE                     l5408:
  4543                           
  4544                           ; BSR set to: 0
  4545   0022EE  C066  F051         	movff	floorf@u,??_floorf
  4546   0022F2  C067  F052         	movff	floorf@u+1,??_floorf+1
  4547   0022F6  C068  F053         	movff	floorf@u+2,??_floorf+2
  4548   0022FA  C069  F054         	movff	floorf@u+3,??_floorf+3
  4549   0022FE  0E20               	movlw	32
  4550   002300  EF87  F011         	goto	u5610
  4551   002304                     u5615:
  4552   002304  90D8               	bcf	status,0,c
  4553   002306  3254               	rrcf	(??_floorf+3)^0,f,c
  4554   002308  3253               	rrcf	(??_floorf+2)^0,f,c
  4555   00230A  3252               	rrcf	(??_floorf+1)^0,f,c
  4556   00230C  3251               	rrcf	??_floorf^0,f,c
  4557   00230E                     u5610:
  4558   00230E  2EE8               	decfsz	wreg,f,c
  4559   002310  EF82  F011         	goto	u5615
  4560   002314  5051               	movf	??_floorf^0,w,c
  4561   002316  1052               	iorwf	(??_floorf+1)^0,w,c
  4562   002318  1053               	iorwf	(??_floorf+2)^0,w,c
  4563   00231A  1054               	iorwf	(??_floorf+3)^0,w,c
  4564   00231C  A4D8               	btfss	status,2,c
  4565   00231E  EF93  F011         	goto	u5621
  4566   002322  EF95  F011         	goto	u5620
  4567   002326                     u5621:
  4568   002326  EF9F  F011         	goto	l5412
  4569   00232A                     u5620:
  4570   00232A                     
  4571                           ; BSR set to: 0
  4572   00232A  0E00               	movlw	0
  4573   00232C  6F66               	movwf	floorf@u& (0+255),b
  4574   00232E  0E00               	movlw	0
  4575   002330  6F67               	movwf	(floorf@u+1)& (0+255),b
  4576   002332  0E00               	movlw	0
  4577   002334  6F68               	movwf	(floorf@u+2)& (0+255),b
  4578   002336  0E00               	movlw	0
  4579   002338  6F69               	movwf	(floorf@u+3)& (0+255),b
  4580   00233A  EFBB  F011         	goto	l5416
  4581   00233E                     l5412:
  4582                           
  4583                           ; BSR set to: 0
  4584   00233E  90D8               	bcf	status,0,c
  4585   002340  3566               	rlcf	floorf@u& (0+255),w,b
  4586   002342  6E51               	movwf	??_floorf^0,c
  4587   002344  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  4588   002346  6E52               	movwf	(??_floorf+1)^0,c
  4589   002348  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  4590   00234A  6E53               	movwf	(??_floorf+2)^0,c
  4591   00234C  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  4592   00234E  6E54               	movwf	(??_floorf+3)^0,c
  4593   002350  5051               	movf	??_floorf^0,w,c
  4594   002352  1052               	iorwf	(??_floorf+1)^0,w,c
  4595   002354  1053               	iorwf	(??_floorf+2)^0,w,c
  4596   002356  1054               	iorwf	(??_floorf+3)^0,w,c
  4597   002358  B4D8               	btfsc	status,2,c
  4598   00235A  EFB1  F011         	goto	u5631
  4599   00235E  EFB3  F011         	goto	u5630
  4600   002362                     u5631:
  4601   002362  EFBB  F011         	goto	l5416
  4602   002366                     u5630:
  4603   002366                     
  4604                           ; BSR set to: 0
  4605   002366  0E00               	movlw	0
  4606   002368  6F66               	movwf	floorf@u& (0+255),b
  4607   00236A  0E00               	movlw	0
  4608   00236C  6F67               	movwf	(floorf@u+1)& (0+255),b
  4609   00236E  0E80               	movlw	128
  4610   002370  6F68               	movwf	(floorf@u+2)& (0+255),b
  4611   002372  0EBF               	movlw	191
  4612   002374  6F69               	movwf	(floorf@u+3)& (0+255),b
  4613   002376                     l5416:
  4614                           
  4615                           ; BSR set to: 0
  4616   002376  C066  F04D         	movff	floorf@u,?_floorf
  4617   00237A  C067  F04E         	movff	floorf@u+1,?_floorf+1
  4618   00237E  C068  F04F         	movff	floorf@u+2,?_floorf+2
  4619   002382  C069  F050         	movff	floorf@u+3,?_floorf+3
  4620   002386                     l1334:
  4621                           
  4622                           ; BSR set to: 0
  4623   002386  0012               	return		;funcret
  4624   002388                     __end_of_floorf:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function ___fpclassifyf *****************
  4628 ;; Defined at:
  4629 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  x               4    4[COMRAM] float 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  u               4   14[COMRAM] struct .
  4634 ;;  e               2   12[COMRAM] int 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  2    4[COMRAM] int 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4644 ;;      Params:         4       0       0       0       0       0       0       0       0
  4645 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4646 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4647 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4648 ;;Total ram usage:       14 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 4
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_efgtoa
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text16
  4659   002C68                     __ptext16:
  4660                           	callstack 0
  4661   002C68                     ___fpclassifyf:
  4662                           	callstack 22
  4663   002C68  C0C5  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4664   002C6C  C0C6  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4665   002C70  C0C7  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4666   002C74  C0C8  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4667   002C78  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4668   002C7C  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4669   002C80  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4670   002C84  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4671   002C88  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4672   002C8C  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4673   002C90  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4674   002C94  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4675   002C98  0E18               	movlw	24
  4676   002C9A  EF54  F016         	goto	u5450
  4677   002C9E                     u5455:
  4678   002C9E  90D8               	bcf	status,0,c
  4679   002CA0  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4680   002CA2  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4681   002CA4  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4682   002CA6  3209               	rrcf	??___fpclassifyf^0,f,c
  4683   002CA8                     u5450:
  4684   002CA8  2EE8               	decfsz	wreg,f,c
  4685   002CAA  EF4F  F016         	goto	u5455
  4686   002CAE  5009               	movf	??___fpclassifyf^0,w,c
  4687   002CB0  6E0D               	movwf	___fpclassifyf@e^0,c
  4688   002CB2  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4689   002CB4  500D               	movf	___fpclassifyf@e^0,w,c
  4690   002CB6  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4691   002CB8  A4D8               	btfss	status,2,c
  4692   002CBA  EF61  F016         	goto	u5461
  4693   002CBE  EF63  F016         	goto	u5460
  4694   002CC2                     u5461:
  4695   002CC2  EF83  F016         	goto	l5370
  4696   002CC6                     u5460:
  4697   002CC6  90D8               	bcf	status,0,c
  4698   002CC8  340F               	rlcf	___fpclassifyf@u^0,w,c
  4699   002CCA  6E09               	movwf	??___fpclassifyf^0,c
  4700   002CCC  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4701   002CCE  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4702   002CD0  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4703   002CD2  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4704   002CD4  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4705   002CD6  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4706   002CD8  5009               	movf	??___fpclassifyf^0,w,c
  4707   002CDA  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4708   002CDC  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4709   002CDE  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4710   002CE0  A4D8               	btfss	status,2,c
  4711   002CE2  EF75  F016         	goto	u5471
  4712   002CE6  EF77  F016         	goto	u5470
  4713   002CEA                     u5471:
  4714   002CEA  EF7D  F016         	goto	l5366
  4715   002CEE                     u5470:
  4716   002CEE  0E00               	movlw	0
  4717   002CF0  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4718   002CF2  0E02               	movlw	2
  4719   002CF4  6E05               	movwf	?___fpclassifyf^0,c
  4720   002CF6  EFB2  F016         	goto	l1327
  4721   002CFA                     l5366:
  4722   002CFA  0E00               	movlw	0
  4723   002CFC  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4724   002CFE  0E03               	movlw	3
  4725   002D00  6E05               	movwf	?___fpclassifyf^0,c
  4726   002D02  EFB2  F016         	goto	l1327
  4727   002D06                     l5370:
  4728   002D06  280D               	incf	___fpclassifyf@e^0,w,c
  4729   002D08  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4730   002D0A  A4D8               	btfss	status,2,c
  4731   002D0C  EF8A  F016         	goto	u5481
  4732   002D10  EF8C  F016         	goto	u5480
  4733   002D14                     u5481:
  4734   002D14  EFAE  F016         	goto	l5376
  4735   002D18                     u5480:
  4736   002D18  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4737   002D1C  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4738   002D20  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4739   002D24  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4740   002D28  0E09               	movlw	9
  4741   002D2A                     u5495:
  4742   002D2A  90D8               	bcf	status,0,c
  4743   002D2C  3609               	rlcf	??___fpclassifyf^0,f,c
  4744   002D2E  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4745   002D30  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4746   002D32  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4747   002D34  2EE8               	decfsz	wreg,f,c
  4748   002D36  EF95  F016         	goto	u5495
  4749   002D3A  5009               	movf	??___fpclassifyf^0,w,c
  4750   002D3C  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4751   002D3E  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4752   002D40  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4753   002D42  B4D8               	btfsc	status,2,c
  4754   002D44  EFA6  F016         	goto	u5501
  4755   002D48  EFA9  F016         	goto	u5500
  4756   002D4C                     u5501:
  4757   002D4C  0E01               	movlw	1
  4758   002D4E  EFAA  F016         	goto	u5510
  4759   002D52                     u5500:
  4760   002D52  0E00               	movlw	0
  4761   002D54                     u5510:
  4762   002D54  6E05               	movwf	?___fpclassifyf^0,c
  4763   002D56  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4764   002D58  EFB2  F016         	goto	l1327
  4765   002D5C                     l5376:
  4766   002D5C  0E00               	movlw	0
  4767   002D5E  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4768   002D60  0E04               	movlw	4
  4769   002D62  6E05               	movwf	?___fpclassifyf^0,c
  4770   002D64                     l1327:
  4771   002D64  0012               	return		;funcret
  4772   002D66                     __end_of___fpclassifyf:
  4773                           	callstack 0
  4774                           
  4775 ;; *************** function ___fltol *****************
  4776 ;; Defined at:
  4777 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  f1              4    4[COMRAM] int 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  exp1            1   13[COMRAM] unsigned char 
  4782 ;;  sign1           1   12[COMRAM] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  4    4[COMRAM] long 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4792 ;;      Params:         4       0       0       0       0       0       0       0       0
  4793 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4794 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4795 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4796 ;;Total ram usage:       10 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 4
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_efgtoa
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text17
  4807   002A5E                     __ptext17:
  4808                           	callstack 0
  4809   002A5E                     ___fltol:
  4810                           	callstack 22
  4811   002A5E  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4812   002A60  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4813   002A62  6E0E               	movwf	___fltol@exp1^0,c
  4814   002A64  500E               	movf	___fltol@exp1^0,w,c
  4815   002A66  A4D8               	btfss	status,2,c
  4816   002A68  EF38  F015         	goto	u5361
  4817   002A6C  EF3A  F015         	goto	u5360
  4818   002A70                     u5361:
  4819   002A70  EF44  F015         	goto	l5308
  4820   002A74                     u5360:
  4821   002A74                     l5304:
  4822   002A74  0E00               	movlw	0
  4823   002A76  6E05               	movwf	?___fltol^0,c
  4824   002A78  0E00               	movlw	0
  4825   002A7A  6E06               	movwf	(?___fltol+1)^0,c
  4826   002A7C  0E00               	movlw	0
  4827   002A7E  6E07               	movwf	(?___fltol+2)^0,c
  4828   002A80  0E00               	movlw	0
  4829   002A82  6E08               	movwf	(?___fltol+3)^0,c
  4830   002A84  EFB1  F015         	goto	l818
  4831   002A88                     l5308:
  4832   002A88  C005  F009         	movff	___fltol@f1,??___fltol
  4833   002A8C  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4834   002A90  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4835   002A94  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4836   002A98  0E20               	movlw	32
  4837   002A9A  EF54  F015         	goto	u5370
  4838   002A9E                     u5375:
  4839   002A9E  90D8               	bcf	status,0,c
  4840   002AA0  320C               	rrcf	(??___fltol+3)^0,f,c
  4841   002AA2  320B               	rrcf	(??___fltol+2)^0,f,c
  4842   002AA4  320A               	rrcf	(??___fltol+1)^0,f,c
  4843   002AA6  3209               	rrcf	??___fltol^0,f,c
  4844   002AA8                     u5370:
  4845   002AA8  2EE8               	decfsz	wreg,f,c
  4846   002AAA  EF4F  F015         	goto	u5375
  4847   002AAE  5009               	movf	??___fltol^0,w,c
  4848   002AB0  6E0D               	movwf	___fltol@sign1^0,c
  4849   002AB2  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4850   002AB4  0EFF               	movlw	255
  4851   002AB6  1605               	andwf	___fltol@f1^0,f,c
  4852   002AB8  0EFF               	movlw	255
  4853   002ABA  1606               	andwf	(___fltol@f1+1)^0,f,c
  4854   002ABC  0EFF               	movlw	255
  4855   002ABE  1607               	andwf	(___fltol@f1+2)^0,f,c
  4856   002AC0  0E00               	movlw	0
  4857   002AC2  1608               	andwf	(___fltol@f1+3)^0,f,c
  4858   002AC4  0E96               	movlw	150
  4859   002AC6  5E0E               	subwf	___fltol@exp1^0,f,c
  4860   002AC8  BE0E               	btfsc	___fltol@exp1^0,7,c
  4861   002ACA  EF6B  F015         	goto	u5380
  4862   002ACE  EF69  F015         	goto	u5381
  4863   002AD2                     u5381:
  4864   002AD2  EF81  F015         	goto	l5328
  4865   002AD6                     u5380:
  4866   002AD6  500E               	movf	___fltol@exp1^0,w,c
  4867   002AD8  0A80               	xorlw	128
  4868   002ADA  0F97               	addlw	151
  4869   002ADC  B0D8               	btfsc	status,0,c
  4870   002ADE  EF73  F015         	goto	u5391
  4871   002AE2  EF75  F015         	goto	u5390
  4872   002AE6                     u5391:
  4873   002AE6  EF77  F015         	goto	l5324
  4874   002AEA                     u5390:
  4875   002AEA  EF3A  F015         	goto	l5304
  4876   002AEE                     l5324:
  4877   002AEE  90D8               	bcf	status,0,c
  4878   002AF0  3208               	rrcf	(___fltol@f1+3)^0,f,c
  4879   002AF2  3207               	rrcf	(___fltol@f1+2)^0,f,c
  4880   002AF4  3206               	rrcf	(___fltol@f1+1)^0,f,c
  4881   002AF6  3205               	rrcf	___fltol@f1^0,f,c
  4882   002AF8  3E0E               	incfsz	___fltol@exp1^0,f,c
  4883   002AFA  EF77  F015         	goto	l5324
  4884   002AFE  EF99  F015         	goto	l5338
  4885   002B02                     l5328:
  4886   002B02  0E1F               	movlw	31
  4887   002B04  640E               	cpfsgt	___fltol@exp1^0,c
  4888   002B06  EF87  F015         	goto	u5401
  4889   002B0A  EF89  F015         	goto	u5400
  4890   002B0E                     u5401:
  4891   002B0E  EF91  F015         	goto	l5336
  4892   002B12                     u5400:
  4893   002B12  EF3A  F015         	goto	l5304
  4894   002B16                     l5334:
  4895   002B16  90D8               	bcf	status,0,c
  4896   002B18  3605               	rlcf	___fltol@f1^0,f,c
  4897   002B1A  3606               	rlcf	(___fltol@f1+1)^0,f,c
  4898   002B1C  3607               	rlcf	(___fltol@f1+2)^0,f,c
  4899   002B1E  3608               	rlcf	(___fltol@f1+3)^0,f,c
  4900   002B20  060E               	decf	___fltol@exp1^0,f,c
  4901   002B22                     l5336:
  4902   002B22  500E               	movf	___fltol@exp1^0,w,c
  4903   002B24  A4D8               	btfss	status,2,c
  4904   002B26  EF97  F015         	goto	u5411
  4905   002B2A  EF99  F015         	goto	u5410
  4906   002B2E                     u5411:
  4907   002B2E  EF8B  F015         	goto	l5334
  4908   002B32                     u5410:
  4909   002B32                     l5338:
  4910   002B32  500D               	movf	___fltol@sign1^0,w,c
  4911   002B34  B4D8               	btfsc	status,2,c
  4912   002B36  EF9F  F015         	goto	u5421
  4913   002B3A  EFA1  F015         	goto	u5420
  4914   002B3E                     u5421:
  4915   002B3E  EFA9  F015         	goto	l5342
  4916   002B42                     u5420:
  4917   002B42  1E08               	comf	(___fltol@f1+3)^0,f,c
  4918   002B44  1E07               	comf	(___fltol@f1+2)^0,f,c
  4919   002B46  1E06               	comf	(___fltol@f1+1)^0,f,c
  4920   002B48  6C05               	negf	___fltol@f1^0,c
  4921   002B4A  0E00               	movlw	0
  4922   002B4C  2206               	addwfc	(___fltol@f1+1)^0,f,c
  4923   002B4E  2207               	addwfc	(___fltol@f1+2)^0,f,c
  4924   002B50  2208               	addwfc	(___fltol@f1+3)^0,f,c
  4925   002B52                     l5342:
  4926   002B52  C005  F005         	movff	___fltol@f1,?___fltol
  4927   002B56  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  4928   002B5A  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  4929   002B5E  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  4930   002B62                     l818:
  4931   002B62  0012               	return		;funcret
  4932   002B64                     __end_of___fltol:
  4933                           	callstack 0
  4934                           
  4935 ;; *************** function ___flneg *****************
  4936 ;; Defined at:
  4937 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  f1              4    4[COMRAM] long 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  4    4[COMRAM] long 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4951 ;;      Params:         4       0       0       0       0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4954 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4955 ;;Total ram usage:        4 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 4
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_efgtoa
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text18
  4966   00355A                     __ptext18:
  4967                           	callstack 0
  4968   00355A                     ___flneg:
  4969                           	callstack 22
  4970   00355A  5005               	movf	___flneg@f1^0,w,c
  4971   00355C  1006               	iorwf	(___flneg@f1+1)^0,w,c
  4972   00355E  1007               	iorwf	(___flneg@f1+2)^0,w,c
  4973   003560  1008               	iorwf	(___flneg@f1+3)^0,w,c
  4974   003562  B4D8               	btfsc	status,2,c
  4975   003564  EFB6  F01A         	goto	u5351
  4976   003568  EFB8  F01A         	goto	u5350
  4977   00356C                     u5351:
  4978   00356C  EFC0  F01A         	goto	l5298
  4979   003570                     u5350:
  4980   003570  0E00               	movlw	0
  4981   003572  1A05               	xorwf	___flneg@f1^0,f,c
  4982   003574  0E00               	movlw	0
  4983   003576  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  4984   003578  0E00               	movlw	0
  4985   00357A  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  4986   00357C  0E80               	movlw	128
  4987   00357E  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  4988   003580                     l5298:
  4989   003580  C005  F005         	movff	___flneg@f1,?___flneg
  4990   003584  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  4991   003588  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  4992   00358C  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  4993   003590  0012               	return		;funcret
  4994   003592                     __end_of___flneg:
  4995                           	callstack 0
  4996                           
  4997 ;; *************** function ___fleq *****************
  4998 ;; Defined at:
  4999 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  ff1             4    4[COMRAM] long 
  5002 ;;  ff2             4    8[COMRAM] long 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;		None               void
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5014 ;;      Params:         8       0       0       0       0       0       0       0       0
  5015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5016 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5017 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5018 ;;Total ram usage:       12 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; Hardware stack levels required when called: 4
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_efgtoa
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text19
  5029   002E20                     __ptext19:
  5030                           	callstack 0
  5031   002E20                     ___fleq:
  5032                           	callstack 22
  5033   002E20  0E00               	movlw	0
  5034   002E22  1405               	andwf	___fleq@ff1^0,w,c
  5035   002E24  6E0D               	movwf	??___fleq^0,c
  5036   002E26  0E00               	movlw	0
  5037   002E28  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5038   002E2A  6E0E               	movwf	(??___fleq+1)^0,c
  5039   002E2C  0E80               	movlw	128
  5040   002E2E  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5041   002E30  6E0F               	movwf	(??___fleq+2)^0,c
  5042   002E32  0E7F               	movlw	127
  5043   002E34  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5044   002E36  6E10               	movwf	(??___fleq+3)^0,c
  5045   002E38  500D               	movf	??___fleq^0,w,c
  5046   002E3A  100E               	iorwf	(??___fleq+1)^0,w,c
  5047   002E3C  100F               	iorwf	(??___fleq+2)^0,w,c
  5048   002E3E  1010               	iorwf	(??___fleq+3)^0,w,c
  5049   002E40  A4D8               	btfss	status,2,c
  5050   002E42  EF25  F017         	goto	u5271
  5051   002E46  EF27  F017         	goto	u5270
  5052   002E4A                     u5271:
  5053   002E4A  EF2F  F017         	goto	l5260
  5054   002E4E                     u5270:
  5055   002E4E  0E00               	movlw	0
  5056   002E50  6E05               	movwf	___fleq@ff1^0,c
  5057   002E52  0E00               	movlw	0
  5058   002E54  6E06               	movwf	(___fleq@ff1+1)^0,c
  5059   002E56  0E00               	movlw	0
  5060   002E58  6E07               	movwf	(___fleq@ff1+2)^0,c
  5061   002E5A  0E00               	movlw	0
  5062   002E5C  6E08               	movwf	(___fleq@ff1+3)^0,c
  5063   002E5E                     l5260:
  5064   002E5E  0E00               	movlw	0
  5065   002E60  1409               	andwf	___fleq@ff2^0,w,c
  5066   002E62  6E0D               	movwf	??___fleq^0,c
  5067   002E64  0E00               	movlw	0
  5068   002E66  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5069   002E68  6E0E               	movwf	(??___fleq+1)^0,c
  5070   002E6A  0E80               	movlw	128
  5071   002E6C  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5072   002E6E  6E0F               	movwf	(??___fleq+2)^0,c
  5073   002E70  0E7F               	movlw	127
  5074   002E72  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5075   002E74  6E10               	movwf	(??___fleq+3)^0,c
  5076   002E76  500D               	movf	??___fleq^0,w,c
  5077   002E78  100E               	iorwf	(??___fleq+1)^0,w,c
  5078   002E7A  100F               	iorwf	(??___fleq+2)^0,w,c
  5079   002E7C  1010               	iorwf	(??___fleq+3)^0,w,c
  5080   002E7E  A4D8               	btfss	status,2,c
  5081   002E80  EF44  F017         	goto	u5281
  5082   002E84  EF46  F017         	goto	u5280
  5083   002E88                     u5281:
  5084   002E88  EF4E  F017         	goto	l5264
  5085   002E8C                     u5280:
  5086   002E8C  0E00               	movlw	0
  5087   002E8E  6E09               	movwf	___fleq@ff2^0,c
  5088   002E90  0E00               	movlw	0
  5089   002E92  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5090   002E94  0E00               	movlw	0
  5091   002E96  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5092   002E98  0E00               	movlw	0
  5093   002E9A  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5094   002E9C                     l5264:
  5095   002E9C  5009               	movf	___fleq@ff2^0,w,c
  5096   002E9E  1805               	xorwf	___fleq@ff1^0,w,c
  5097   002EA0  E10F               	bnz	u5290
  5098   002EA2  500A               	movf	(___fleq@ff2+1)^0,w,c
  5099   002EA4  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5100   002EA6  E10C               	bnz	u5290
  5101   002EA8  500B               	movf	(___fleq@ff2+2)^0,w,c
  5102   002EAA  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5103   002EAC  E109               	bnz	u5290
  5104   002EAE  500C               	movf	(___fleq@ff2+3)^0,w,c
  5105   002EB0  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5106   002EB2  B4D8               	btfsc	status,2,c
  5107   002EB4  EF5E  F017         	goto	u5291
  5108   002EB8  EF60  F017         	goto	u5290
  5109   002EBC                     u5291:
  5110   002EBC  EF63  F017         	goto	l5268
  5111   002EC0                     u5290:
  5112   002EC0  90D8               	bcf	status,0,c
  5113   002EC2  EF64  F017         	goto	l780
  5114   002EC6                     l5268:
  5115   002EC6  80D8               	bsf	status,0,c
  5116   002EC8                     l780:
  5117   002EC8  0012               	return		;funcret
  5118   002ECA                     __end_of___fleq:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function _spi_s_init *****************
  5122 ;; Defined at:
  5123 ;;		line 23 in file "./Librerias/nRF24L01_2.h"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		None
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5137 ;;      Params:         0       0       0       0       0       0       0       0       0
  5138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 4
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_main
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text20
  5152   0037C0                     __ptext20:
  5153                           	callstack 0
  5154   0037C0                     _spi_s_init:
  5155                           	callstack 26
  5156   0037C0                     
  5157                           ;./Librerias/nRF24L01_2.h: 26:     TRISCbits.TRISC1 = 0;
  5158   0037C0  9294               	bcf	148,1,c	;volatile
  5159                           
  5160                           ;./Librerias/nRF24L01_2.h: 27:     TRISBbits.TRISB2 = 0;
  5161   0037C2  9493               	bcf	147,2,c	;volatile
  5162                           
  5163                           ;./Librerias/nRF24L01_2.h: 28:     TRISCbits.TRISC2 = 0;
  5164   0037C4  9494               	bcf	148,2,c	;volatile
  5165                           
  5166                           ;./Librerias/nRF24L01_2.h: 29:     TRISBbits.TRISB3 = 1;
  5167   0037C6  8693               	bsf	147,3,c	;volatile
  5168                           
  5169                           ;./Librerias/nRF24L01_2.h: 30:     TRISBbits.TRISB1 = 0;
  5170   0037C8  9293               	bcf	147,1,c	;volatile
  5171                           
  5172                           ;./Librerias/nRF24L01_2.h: 31:     TRISCbits.TRISC0 = 1;
  5173   0037CA  8094               	bsf	148,0,c	;volatile
  5174                           
  5175                           ;./Librerias/nRF24L01_2.h: 33:     LATBbits.LATB2 = 0;
  5176   0037CC  948A               	bcf	138,2,c	;volatile
  5177                           
  5178                           ;./Librerias/nRF24L01_2.h: 34:     LATCbits.LATC2 = 0;
  5179   0037CE  948B               	bcf	139,2,c	;volatile
  5180                           
  5181                           ;./Librerias/nRF24L01_2.h: 35:     LATCbits.LATC1 = 0;
  5182   0037D0  928B               	bcf	139,1,c	;volatile
  5183                           
  5184                           ;./Librerias/nRF24L01_2.h: 36:     LATBbits.LATB1 = 0;
  5185   0037D2  928A               	bcf	138,1,c	;volatile
  5186   0037D4  0012               	return		;funcret
  5187   0037D6                     __end_of_spi_s_init:
  5188                           	callstack 0
  5189                           
  5190 ;; *************** function _recibido_1 *****************
  5191 ;; Defined at:
  5192 ;;		line 318 in file "main.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 10
  5213 ;; This function calls:
  5214 ;;		_confirmacion
  5215 ;;		_envio_ya_recibido
  5216 ;;		_nrf2401_haydatos
  5217 ;;		_nrf2401_recibe
  5218 ;; This function is called by:
  5219 ;;		_main
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text21
  5224   0030AA                     __ptext21:
  5225                           	callstack 0
  5226   0030AA                     _recibido_1:
  5227                           	callstack 20
  5228   0030AA                     
  5229                           ;main.c: 320:     if(nrf2401_haydatos() == 1)
  5230   0030AA  EC8D  F01B         	call	_nrf2401_haydatos	;wreg free
  5231   0030AE  06E8               	decf	wreg,f,c
  5232   0030B0  A4D8               	btfss	status,2,c
  5233   0030B2  EF5D  F018         	goto	u6361
  5234   0030B6  EF5F  F018         	goto	u6360
  5235   0030BA                     u6361:
  5236   0030BA  EF82  F018         	goto	l510
  5237   0030BE                     u6360:
  5238   0030BE                     
  5239                           ;main.c: 321:     {;main.c: 322:         dato_serial = nrf2401_recibe();
  5240   0030BE  ECC7  F01B         	call	_nrf2401_recibe	;wreg free
  5241   0030C2  0100               	movlb	0	; () banked
  5242   0030C4  6FFE               	movwf	_dato_serial& (0+255),b
  5243   0030C6                     
  5244                           ; BSR set to: 0
  5245                           ;main.c: 323:         if (dato_serial == 1)
  5246   0030C6  05FE               	decf	_dato_serial& (0+255),w,b
  5247   0030C8  A4D8               	btfss	status,2,c
  5248   0030CA  EF69  F018         	goto	u6371
  5249   0030CE  EF6B  F018         	goto	u6370
  5250   0030D2                     u6371:
  5251   0030D2  EF74  F018         	goto	l6088
  5252   0030D6                     u6370:
  5253   0030D6                     
  5254                           ; BSR set to: 0
  5255                           ;main.c: 324:         {;main.c: 325:             envio_ya_recibido();
  5256   0030D6  ECAE  F018         	call	_envio_ya_recibido	;wreg free
  5257                           
  5258                           ;main.c: 326:             confirmacion();
  5259   0030DA  ECE4  F01A         	call	_confirmacion	;wreg free
  5260   0030DE                     l6086:
  5261                           
  5262                           ;main.c: 327:             dato_serial = 0;
  5263   0030DE  0E00               	movlw	0
  5264   0030E0  0100               	movlb	0	; () banked
  5265   0030E2  6FFE               	movwf	_dato_serial& (0+255),b
  5266                           
  5267                           ;main.c: 328:         }
  5268   0030E4  EF82  F018         	goto	l510
  5269   0030E8                     l6088:
  5270                           
  5271                           ; BSR set to: 0
  5272   0030E8  0E02               	movlw	2
  5273   0030EA  19FE               	xorwf	_dato_serial& (0+255),w,b
  5274   0030EC  A4D8               	btfss	status,2,c
  5275   0030EE  EF7B  F018         	goto	u6381
  5276   0030F2  EF7D  F018         	goto	u6380
  5277   0030F6                     u6381:
  5278   0030F6  EF82  F018         	goto	l510
  5279   0030FA                     u6380:
  5280   0030FA                     
  5281                           ; BSR set to: 0
  5282                           ;main.c: 330:         {;main.c: 331:             envio_ya_recibido();
  5283   0030FA  ECAE  F018         	call	_envio_ya_recibido	;wreg free
  5284   0030FE                     
  5285                           ;main.c: 332:             LATA5 = 0;
  5286   0030FE  9A89               	bcf	3977,5,c	;volatile
  5287   003100  EF6F  F018         	goto	l6086
  5288   003104                     l510:
  5289   003104  0012               	return		;funcret
  5290   003106                     __end_of_recibido_1:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _nrf2401_recibe *****************
  5294 ;; Defined at:
  5295 ;;		line 172 in file "./Librerias/nRF24L01_2.h"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  valor_          1    6[COMRAM] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      unsigned char 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0
  5310 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5312 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5313 ;;Total ram usage:        1 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; Hardware stack levels required when called: 5
  5316 ;; This function calls:
  5317 ;;		_spi_s_read
  5318 ;;		_spi_s_write
  5319 ;; This function is called by:
  5320 ;;		_recibido_1
  5321 ;;		_nrf2401_recibe_Text
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text22
  5326   00378E                     __ptext22:
  5327                           	callstack 0
  5328   00378E                     _nrf2401_recibe:
  5329                           	callstack 24
  5330   00378E                     
  5331                           ;./Librerias/nRF24L01_2.h: 174:     char valor_;;./Librerias/nRF24L01_2.h: 175:     LATC
      +                          bits.LATC2 = 0;
  5332   00378E  948B               	bcf	139,2,c	;volatile
  5333   003790                     
  5334                           ;./Librerias/nRF24L01_2.h: 176:     spi_s_write(0x61);
  5335   003790  0E61               	movlw	97
  5336   003792  EC27  F019         	call	_spi_s_write
  5337                           
  5338                           ;./Librerias/nRF24L01_2.h: 177:     valor_ = spi_s_read();
  5339   003796  EC6F  F019         	call	_spi_s_read	;wreg free
  5340   00379A  6E07               	movwf	nrf2401_recibe@valor_^0,c
  5341   00379C                     
  5342                           ;./Librerias/nRF24L01_2.h: 178:     LATCbits.LATC2 = 1;
  5343   00379C  848B               	bsf	139,2,c	;volatile
  5344   00379E                     
  5345                           ;./Librerias/nRF24L01_2.h: 179:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5346   00379E  0E14               	movlw	20
  5347   0037A0                     u6477:
  5348   0037A0  2EE8               	decfsz	wreg,f,c
  5349   0037A2  D7FE               	bra	u6477
  5350   0037A4                     
  5351                           ;./Librerias/nRF24L01_2.h: 180:     return (valor_);
  5352   0037A4  5007               	movf	nrf2401_recibe@valor_^0,w,c
  5353   0037A6  0012               	return		;funcret
  5354   0037A8                     __end_of_nrf2401_recibe:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _nrf2401_haydatos *****************
  5358 ;; Defined at:
  5359 ;;		line 240 in file "./Librerias/nRF24L01_2.h"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      unsigned char 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5373 ;;      Params:         0       0       0       0       0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5376 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used: 1
  5379 ;; Hardware stack levels required when called: 7
  5380 ;; This function calls:
  5381 ;;		_get_Status
  5382 ;; This function is called by:
  5383 ;;		_recibido_1
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text23
  5388   00371A                     __ptext23:
  5389                           	callstack 0
  5390   00371A                     _nrf2401_haydatos:
  5391                           	callstack 22
  5392   00371A                     
  5393                           ;./Librerias/nRF24L01_2.h: 242:     if(get_Status() == 0x40) return(1);
  5394   00371A  EC3A  F01C         	call	_get_Status	;wreg free
  5395   00371E  0A40               	xorlw	64
  5396   003720  A4D8               	btfss	status,2,c
  5397   003722  EF95  F01B         	goto	u6051
  5398   003726  EF97  F01B         	goto	u6050
  5399   00372A                     u6051:
  5400   00372A  EF9A  F01B         	goto	l5890
  5401   00372E                     u6050:
  5402   00372E  0E01               	movlw	1
  5403   003730  EF9B  F01B         	goto	l415
  5404   003734                     l5890:
  5405   003734  0E00               	movlw	0
  5406   003736                     l415:
  5407   003736  0012               	return		;funcret
  5408   003738                     __end_of_nrf2401_haydatos:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _get_Status *****************
  5412 ;; Defined at:
  5413 ;;		line 218 in file "./Librerias/nRF24L01_2.h"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      unsigned char 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5430 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 6
  5434 ;; This function calls:
  5435 ;;		_nrf2401_read
  5436 ;; This function is called by:
  5437 ;;		_nrf2401_haydatos
  5438 ;;		_nrf2401_recibe_Text
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text24
  5443   003874                     __ptext24:
  5444                           	callstack 0
  5445   003874                     _get_Status:
  5446                           	callstack 22
  5447   003874                     
  5448                           ;./Librerias/nRF24L01_2.h: 220:     return nrf2401_read (0x07);
  5449   003874  0E07               	movlw	7
  5450   003876  ECAB  F01B         	call	_nrf2401_read
  5451   00387A  0012               	return		;funcret
  5452   00387C                     __end_of_get_Status:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _nrf2401_read *****************
  5456 ;; Defined at:
  5457 ;;		line 99 in file "./Librerias/nRF24L01_2.h"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  reg             1    wreg     unsigned char 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  reg             1    6[COMRAM] unsigned char 
  5462 ;;  dato_           1    7[COMRAM] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      unsigned char 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5472 ;;      Params:         0       0       0       0       0       0       0       0       0
  5473 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5475 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5476 ;;Total ram usage:        2 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 5
  5479 ;; This function calls:
  5480 ;;		_spi_s_read
  5481 ;;		_spi_s_write
  5482 ;; This function is called by:
  5483 ;;		_get_Status
  5484 ;;		_get_fifo_status
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text25
  5489   003756                     __ptext25:
  5490                           	callstack 0
  5491   003756                     _nrf2401_read:
  5492                           	callstack 22
  5493                           
  5494                           ;incstack = 0
  5495                           ;nrf2401_read@reg stored from wreg
  5496   003756  6E07               	movwf	nrf2401_read@reg^0,c
  5497   003758                     
  5498                           ;./Librerias/nRF24L01_2.h: 102:     LATCbits.LATC2 = 0;
  5499   003758  948B               	bcf	139,2,c	;volatile
  5500   00375A                     
  5501                           ;./Librerias/nRF24L01_2.h: 103:     spi_s_write((reg | 0x00));
  5502   00375A  5007               	movf	nrf2401_read@reg^0,w,c
  5503   00375C  EC27  F019         	call	_spi_s_write
  5504   003760                     
  5505                           ;./Librerias/nRF24L01_2.h: 104:     dato_ = spi_s_read();
  5506   003760  EC6F  F019         	call	_spi_s_read	;wreg free
  5507   003764  6E08               	movwf	nrf2401_read@dato_^0,c
  5508   003766                     
  5509                           ;./Librerias/nRF24L01_2.h: 105:     LATCbits.LATC2 = 1;
  5510   003766  848B               	bsf	139,2,c	;volatile
  5511   003768                     
  5512                           ;./Librerias/nRF24L01_2.h: 106:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  5513   003768  0E14               	movlw	20
  5514   00376A                     u6487:
  5515   00376A  2EE8               	decfsz	wreg,f,c
  5516   00376C  D7FE               	bra	u6487
  5517                           
  5518                           ;./Librerias/nRF24L01_2.h: 107:     return dato_;
  5519   00376E  5008               	movf	nrf2401_read@dato_^0,w,c
  5520   003770  0012               	return		;funcret
  5521   003772                     __end_of_nrf2401_read:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function _spi_s_read *****************
  5525 ;; Defined at:
  5526 ;;		line 40 in file "./Librerias/nRF24L01_2.h"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  cont_s          1    5[COMRAM] unsigned char 
  5531 ;;  dato_           1    4[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0
  5542 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5544 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5545 ;;Total ram usage:        2 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 4
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_nrf2401_read
  5552 ;;		_nrf2401_recibe
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text26
  5557   0032DE                     __ptext26:
  5558                           	callstack 0
  5559   0032DE                     _spi_s_read:
  5560                           	callstack 24
  5561   0032DE                     
  5562                           ;./Librerias/nRF24L01_2.h: 42:     unsigned char cont_s = 0;
  5563   0032DE  0E00               	movlw	0
  5564   0032E0  6E06               	movwf	spi_s_read@cont_s^0,c
  5565                           
  5566                           ;./Librerias/nRF24L01_2.h: 43:     unsigned char dato_ = 0;
  5567   0032E2  0E00               	movlw	0
  5568   0032E4  6E05               	movwf	spi_s_read@dato_^0,c
  5569                           
  5570                           ;./Librerias/nRF24L01_2.h: 45:     for(cont_s = 0; cont_s < 8; cont_s++)
  5571   0032E6  0E00               	movlw	0
  5572   0032E8  6E06               	movwf	spi_s_read@cont_s^0,c
  5573   0032EA                     l4932:
  5574                           
  5575                           ;./Librerias/nRF24L01_2.h: 46:     {;./Librerias/nRF24L01_2.h: 47:         dato_ <<= 1;
  5576   0032EA  90D8               	bcf	status,0,c
  5577   0032EC  3605               	rlcf	spi_s_read@dato_^0,f,c
  5578   0032EE                     
  5579                           ;./Librerias/nRF24L01_2.h: 48:         LATBbits.LATB2 = 1;
  5580   0032EE  848A               	bsf	138,2,c	;volatile
  5581   0032F0                     
  5582                           ;./Librerias/nRF24L01_2.h: 49:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  5583   0032F0  0E04               	movlw	4
  5584   0032F2                     u6497:
  5585   0032F2  2EE8               	decfsz	wreg,f,c
  5586   0032F4  D7FE               	bra	u6497
  5587   0032F6                     
  5588                           ;./Librerias/nRF24L01_2.h: 51:         if(PORTBbits.RB3 != 0)
  5589   0032F6  A681               	btfss	129,3,c	;volatile
  5590   0032F8  EF80  F019         	goto	u4821
  5591   0032FC  EF82  F019         	goto	u4820
  5592   003300                     u4821:
  5593   003300  EF83  F019         	goto	l4942
  5594   003304                     u4820:
  5595   003304                     
  5596                           ;./Librerias/nRF24L01_2.h: 52:         {;./Librerias/nRF24L01_2.h: 53:             dato_
      +                           |= 1;
  5597   003304  8005               	bsf	spi_s_read@dato_^0,0,c
  5598   003306                     l4942:
  5599                           
  5600                           ;./Librerias/nRF24L01_2.h: 55:         LATBbits.LATB2 = 0;
  5601   003306  948A               	bcf	138,2,c	;volatile
  5602   003308                     
  5603                           ;./Librerias/nRF24L01_2.h: 56:         _delay((unsigned long)((1)*(48000000/4000000.0)))
      +                          ;
  5604   003308  0E04               	movlw	4
  5605   00330A                     u6507:
  5606   00330A  2EE8               	decfsz	wreg,f,c
  5607   00330C  D7FE               	bra	u6507
  5608   00330E                     
  5609                           ;./Librerias/nRF24L01_2.h: 57:     }
  5610   00330E  2A06               	incf	spi_s_read@cont_s^0,f,c
  5611   003310  0E07               	movlw	7
  5612   003312  6406               	cpfsgt	spi_s_read@cont_s^0,c
  5613   003314  EF8E  F019         	goto	u4831
  5614   003318  EF90  F019         	goto	u4830
  5615   00331C                     u4831:
  5616   00331C  EF75  F019         	goto	l4932
  5617   003320                     u4830:
  5618   003320                     
  5619                           ;./Librerias/nRF24L01_2.h: 58:     return dato_;
  5620   003320  5005               	movf	spi_s_read@dato_^0,w,c
  5621   003322  0012               	return		;funcret
  5622   003324                     __end_of_spi_s_read:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _confirmacion *****************
  5626 ;; Defined at:
  5627 ;;		line 348 in file "main.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5641 ;;      Params:         0       0       0       0       0       0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5643 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5644 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5645 ;;Total ram usage:        2 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 9
  5648 ;; This function calls:
  5649 ;;		_envio_ya_recibido
  5650 ;; This function is called by:
  5651 ;;		_recibido_1
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text27
  5656   0035C8                     __ptext27:
  5657                           	callstack 0
  5658   0035C8                     _confirmacion:
  5659                           	callstack 20
  5660   0035C8                     
  5661                           ;main.c: 350:     envio_ya_recibido();
  5662   0035C8  ECAE  F018         	call	_envio_ya_recibido	;wreg free
  5663   0035CC                     
  5664                           ;main.c: 351:     LATA5 = 1;
  5665   0035CC  8A89               	bsf	3977,5,c	;volatile
  5666   0035CE                     
  5667                           ;main.c: 352:     _delay((unsigned long)((3000)*(48000000/4000.0)));
  5668   0035CE  0EB7               	movlw	183
  5669   0035D0  6E11               	movwf	(??_confirmacion+1)^0,c
  5670   0035D2  0EA1               	movlw	161
  5671   0035D4  6E10               	movwf	??_confirmacion^0,c
  5672   0035D6  0EC4               	movlw	196
  5673   0035D8                     u6517:
  5674   0035D8  2EE8               	decfsz	wreg,f,c
  5675   0035DA  D7FE               	bra	u6517
  5676   0035DC  2E10               	decfsz	??_confirmacion^0,f,c
  5677   0035DE  D7FC               	bra	u6517
  5678   0035E0  2E11               	decfsz	(??_confirmacion+1)^0,f,c
  5679   0035E2  D7FA               	bra	u6517
  5680   0035E4                     
  5681                           ;main.c: 353:     _delay((unsigned long)((3000)*(48000000/4000.0)));
  5682   0035E4  0EB7               	movlw	183
  5683   0035E6  6E11               	movwf	(??_confirmacion+1)^0,c
  5684   0035E8  0EA1               	movlw	161
  5685   0035EA  6E10               	movwf	??_confirmacion^0,c
  5686   0035EC  0EC4               	movlw	196
  5687   0035EE                     u6527:
  5688   0035EE  2EE8               	decfsz	wreg,f,c
  5689   0035F0  D7FE               	bra	u6527
  5690   0035F2  2E10               	decfsz	??_confirmacion^0,f,c
  5691   0035F4  D7FC               	bra	u6527
  5692   0035F6  2E11               	decfsz	(??_confirmacion+1)^0,f,c
  5693   0035F8  D7FA               	bra	u6527
  5694   0035FA  0012               	return		;funcret
  5695   0035FC                     __end_of_confirmacion:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function _envio_ya_recibido *****************
  5699 ;; Defined at:
  5700 ;;		line 337 in file "main.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  i               2   13[COMRAM] int 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0
  5715 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5716 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5717 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:        4 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 8
  5721 ;; This function calls:
  5722 ;;		_nrF2401_init_RX
  5723 ;;		_nrF2401_init_TX
  5724 ;;		_nrf2401_envia
  5725 ;; This function is called by:
  5726 ;;		_recibido_1
  5727 ;;		_confirmacion
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text28
  5732   00315C                     __ptext28:
  5733                           	callstack 0
  5734   00315C                     _envio_ya_recibido:
  5735                           	callstack 21
  5736   00315C                     
  5737                           ;main.c: 339:     nrF2401_init_TX(17);
  5738   00315C  0E11               	movlw	17
  5739   00315E  EC25  F018         	call	_nrF2401_init_TX
  5740   003162                     
  5741                           ;main.c: 342:     for (i = 0; i < 60; i++) {
  5742   003162  0E00               	movlw	0
  5743   003164  6E0F               	movwf	(envio_ya_recibido@i+1)^0,c
  5744   003166  0E00               	movlw	0
  5745   003168  6E0E               	movwf	envio_ya_recibido@i^0,c
  5746   00316A                     l5746:
  5747                           
  5748                           ;main.c: 343:         nrf2401_envia(dato_serial);
  5749   00316A  0100               	movlb	0	; () banked
  5750   00316C  51FE               	movf	_dato_serial& (0+255),w,b
  5751   00316E  ECC9  F01A         	call	_nrf2401_envia
  5752   003172                     
  5753                           ;main.c: 344:         _delay((unsigned long)((50)*(48000000/4000.0)));
  5754   003172  0E04               	movlw	4
  5755   003174  6E0D               	movwf	(??_envio_ya_recibido+1)^0,c
  5756   003176  0E0C               	movlw	12
  5757   003178  6E0C               	movwf	??_envio_ya_recibido^0,c
  5758   00317A  0E34               	movlw	52
  5759   00317C                     u6537:
  5760   00317C  2EE8               	decfsz	wreg,f,c
  5761   00317E  D7FE               	bra	u6537
  5762   003180  2E0C               	decfsz	??_envio_ya_recibido^0,f,c
  5763   003182  D7FC               	bra	u6537
  5764   003184  2E0D               	decfsz	(??_envio_ya_recibido+1)^0,f,c
  5765   003186  D7FA               	bra	u6537
  5766   003188                     
  5767                           ;main.c: 345:     }
  5768   003188  4A0E               	infsnz	envio_ya_recibido@i^0,f,c
  5769   00318A  2A0F               	incf	(envio_ya_recibido@i+1)^0,f,c
  5770   00318C  BE0F               	btfsc	(envio_ya_recibido@i+1)^0,7,c
  5771   00318E  EFD2  F018         	goto	u5991
  5772   003192  500F               	movf	(envio_ya_recibido@i+1)^0,w,c
  5773   003194  E109               	bnz	u5990
  5774   003196  0E3C               	movlw	60
  5775   003198  5C0E               	subwf	envio_ya_recibido@i^0,w,c
  5776   00319A  A0D8               	btfss	status,0,c
  5777   00319C  EFD2  F018         	goto	u5991
  5778   0031A0  EFD4  F018         	goto	u5990
  5779   0031A4                     u5991:
  5780   0031A4  EFB5  F018         	goto	l5746
  5781   0031A8                     u5990:
  5782   0031A8                     
  5783                           ;main.c: 346:     nrF2401_init_RX(17);
  5784   0031A8  0E11               	movlw	17
  5785   0031AA  ECB8  F017         	call	_nrF2401_init_RX
  5786   0031AE  0012               	return		;funcret
  5787   0031B0                     __end_of_envio_ya_recibido:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function _nrf2401_envia *****************
  5791 ;; Defined at:
  5792 ;;		line 151 in file "./Librerias/nRF24L01_2.h"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  dato_tx         1    wreg     unsigned char 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  dato_tx         1    8[COMRAM] unsigned char 
  5797 ;;  cont_           1    0        unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5807 ;;      Params:         0       0       0       0       0       0       0       0       0
  5808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5810 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5811 ;;Total ram usage:        1 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; Hardware stack levels required when called: 7
  5814 ;; This function calls:
  5815 ;;		_flush_TX
  5816 ;;		_nrf2401_write
  5817 ;;		_spi_s_write
  5818 ;; This function is called by:
  5819 ;;		_envio_ya_recibido
  5820 ;;		_nrf2401_envia_Text
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text29
  5825   003592                     __ptext29:
  5826                           	callstack 0
  5827   003592                     _nrf2401_envia:
  5828                           	callstack 21
  5829                           
  5830                           ;incstack = 0
  5831                           ;nrf2401_envia@dato_tx stored from wreg
  5832   003592  6E09               	movwf	nrf2401_envia@dato_tx^0,c
  5833   003594                     
  5834                           ;./Librerias/nRF24L01_2.h: 155:     flush_TX();
  5835   003594  EC0B  F01C         	call	_flush_TX	;wreg free
  5836   003598                     
  5837                           ;./Librerias/nRF24L01_2.h: 156:     nrf2401_write(0x00, 0x02 +0x04 + 0x08);
  5838   003598  0E0E               	movlw	14
  5839   00359A  6E07               	movwf	nrf2401_write@valor^0,c
  5840   00359C  0E00               	movlw	0
  5841   00359E  ECB9  F01B         	call	_nrf2401_write
  5842   0035A2                     
  5843                           ;./Librerias/nRF24L01_2.h: 159:     LATCbits.LATC2 = 0;
  5844   0035A2  948B               	bcf	139,2,c	;volatile
  5845   0035A4                     
  5846                           ;./Librerias/nRF24L01_2.h: 160:     spi_s_write(0xA0);
  5847   0035A4  0EA0               	movlw	160
  5848   0035A6  EC27  F019         	call	_spi_s_write
  5849   0035AA                     
  5850                           ;./Librerias/nRF24L01_2.h: 161:     spi_s_write(dato_tx);
  5851   0035AA  5009               	movf	nrf2401_envia@dato_tx^0,w,c
  5852   0035AC  EC27  F019         	call	_spi_s_write
  5853   0035B0                     
  5854                           ;./Librerias/nRF24L01_2.h: 162:     LATCbits.LATC2 = 1;
  5855   0035B0  848B               	bsf	139,2,c	;volatile
  5856   0035B2                     
  5857                           ;./Librerias/nRF24L01_2.h: 163:     LATBbits.LATB1 = 1;
  5858   0035B2  828A               	bsf	138,1,c	;volatile
  5859   0035B4                     
  5860                           ;./Librerias/nRF24L01_2.h: 164:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  5861   0035B4  0E3C               	movlw	60
  5862   0035B6                     u6547:
  5863   0035B6  2EE8               	decfsz	wreg,f,c
  5864   0035B8  D7FE               	bra	u6547
  5865   0035BA                     
  5866                           ;./Librerias/nRF24L01_2.h: 165:     LATBbits.LATB1 = 0;
  5867   0035BA  928A               	bcf	138,1,c	;volatile
  5868   0035BC                     
  5869                           ;./Librerias/nRF24L01_2.h: 166:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
  5870   0035BC  0E0F               	movlw	15
  5871   0035BE  6E07               	movwf	nrf2401_write@valor^0,c
  5872   0035C0  0E00               	movlw	0
  5873   0035C2  ECB9  F01B         	call	_nrf2401_write
  5874   0035C6  0012               	return		;funcret
  5875   0035C8                     __end_of_nrf2401_envia:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function _flush_TX *****************
  5879 ;; Defined at:
  5880 ;;		line 135 in file "./Librerias/nRF24L01_2.h"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 6
  5901 ;; This function calls:
  5902 ;;		_nrf2401_comando
  5903 ;;		_nrf2401_write
  5904 ;; This function is called by:
  5905 ;;		_nrf2401_envia
  5906 ;;		_nrf2401_envia_Text
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text30
  5911   003816                     __ptext30:
  5912                           	callstack 0
  5913   003816                     _flush_TX:
  5914                           	callstack 21
  5915   003816                     
  5916                           ;./Librerias/nRF24L01_2.h: 137:     nrf2401_write(0x07, 0x70);
  5917   003816  0E70               	movlw	112
  5918   003818  6E07               	movwf	nrf2401_write@valor^0,c
  5919   00381A  0E07               	movlw	7
  5920   00381C  ECB9  F01B         	call	_nrf2401_write
  5921                           
  5922                           ;./Librerias/nRF24L01_2.h: 138:     nrf2401_comando(0xE1);
  5923   003820  0EE1               	movlw	225
  5924   003822  EC01  F01C         	call	_nrf2401_comando
  5925   003826  0012               	return		;funcret
  5926   003828                     __end_of_flush_TX:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _nrF2401_init_TX *****************
  5930 ;; Defined at:
  5931 ;;		line 201 in file "./Librerias/nRF24L01_2.h"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  canal           1    wreg     unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  canal           1   10[COMRAM] unsigned char 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5945 ;;      Params:         0       0       0       0       0       0       0       0       0
  5946 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5948 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5949 ;;Total ram usage:        1 bytes
  5950 ;; Hardware stack levels used: 1
  5951 ;; Hardware stack levels required when called: 7
  5952 ;; This function calls:
  5953 ;;		_flush_TX_RX
  5954 ;;		_nrf2401_direccion_TX_RX
  5955 ;;		_nrf2401_write
  5956 ;; This function is called by:
  5957 ;;		_envio_ya_recibido
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text31
  5962   00304A                     __ptext31:
  5963                           	callstack 0
  5964   00304A                     _nrF2401_init_TX:
  5965                           	callstack 21
  5966                           
  5967                           ;incstack = 0
  5968                           ;nrF2401_init_TX@canal stored from wreg
  5969   00304A  6E0B               	movwf	nrF2401_init_TX@canal^0,c
  5970   00304C                     
  5971                           ;./Librerias/nRF24L01_2.h: 201: void nrF2401_init_TX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 202: {;./Librerias/nRF24L01_2.h: 203:     LATBbits.LATB1 = 0;
  5972   00304C  928A               	bcf	138,1,c	;volatile
  5973   00304E                     
  5974                           ;./Librerias/nRF24L01_2.h: 204:     nrf2401_write(0x04, 0x00);
  5975   00304E  0E00               	movlw	0
  5976   003050  6E07               	movwf	nrf2401_write@valor^0,c
  5977   003052  0E04               	movlw	4
  5978   003054  ECB9  F01B         	call	_nrf2401_write
  5979                           
  5980                           ;./Librerias/nRF24L01_2.h: 206:     nrf2401_write(0x03, 0x03);
  5981   003058  0E03               	movlw	3
  5982   00305A  6E07               	movwf	nrf2401_write@valor^0,c
  5983   00305C  0E03               	movlw	3
  5984   00305E  ECB9  F01B         	call	_nrf2401_write
  5985                           
  5986                           ;./Librerias/nRF24L01_2.h: 207:     nrf2401_write(0x06, 0x10 + 0x06);
  5987   003062  0E16               	movlw	22
  5988   003064  6E07               	movwf	nrf2401_write@valor^0,c
  5989   003066  0E06               	movlw	6
  5990   003068  ECB9  F01B         	call	_nrf2401_write
  5991                           
  5992                           ;./Librerias/nRF24L01_2.h: 208:     nrf2401_write(0x05, canal);
  5993   00306C  C00B  F007         	movff	nrF2401_init_TX@canal,nrf2401_write@valor
  5994   003070  0E05               	movlw	5
  5995   003072  ECB9  F01B         	call	_nrf2401_write
  5996                           
  5997                           ;./Librerias/nRF24L01_2.h: 209:     nrf2401_write(0x01, 0);
  5998   003076  0E00               	movlw	0
  5999   003078  6E07               	movwf	nrf2401_write@valor^0,c
  6000   00307A  0E01               	movlw	1
  6001   00307C  ECB9  F01B         	call	_nrf2401_write
  6002                           
  6003                           ;./Librerias/nRF24L01_2.h: 210:     nrf2401_write(0x00, 0x02 +0x04 + 0x08);
  6004   003080  0E0E               	movlw	14
  6005   003082  6E07               	movwf	nrf2401_write@valor^0,c
  6006   003084  0E00               	movlw	0
  6007   003086  ECB9  F01B         	call	_nrf2401_write
  6008   00308A                     
  6009                           ;./Librerias/nRF24L01_2.h: 211:     nrf2401_direccion_TX_RX(direccion_tx, 0x10);
  6010   00308A  0E0A               	movlw	low _direccion_tx
  6011   00308C  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  6012   00308E  0E10               	movlw	16
  6013   003090  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  6014   003092  EC16  F01A         	call	_nrf2401_direccion_TX_RX	;wreg free
  6015   003096                     
  6016                           ;./Librerias/nRF24L01_2.h: 212:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
  6017   003096  0E0A               	movlw	low _direccion_tx
  6018   003098  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  6019   00309A  0E0A               	movlw	10
  6020   00309C  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  6021   00309E  EC16  F01A         	call	_nrf2401_direccion_TX_RX	;wreg free
  6022                           
  6023                           ;./Librerias/nRF24L01_2.h: 213:     flush_TX_RX();
  6024   0030A2  ECD4  F01B         	call	_flush_TX_RX	;wreg free
  6025   0030A6                     
  6026                           ;./Librerias/nRF24L01_2.h: 214:     LATBbits.LATB1 = 1;
  6027   0030A6  828A               	bsf	138,1,c	;volatile
  6028   0030A8  0012               	return		;funcret
  6029   0030AA                     __end_of_nrF2401_init_TX:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _nrF2401_init_RX *****************
  6033 ;; Defined at:
  6034 ;;		line 184 in file "./Librerias/nRF24L01_2.h"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  canal           1    wreg     unsigned char 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  canal           1   10[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0
  6049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6051 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6052 ;;Total ram usage:        1 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 7
  6055 ;; This function calls:
  6056 ;;		_flush_TX_RX
  6057 ;;		_nrf2401_direccion_TX_RX
  6058 ;;		_nrf2401_write
  6059 ;; This function is called by:
  6060 ;;		_main
  6061 ;;		_envio_ya_recibido
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text32
  6066   002F70                     __ptext32:
  6067                           	callstack 0
  6068   002F70                     _nrF2401_init_RX:
  6069                           	callstack 21
  6070                           
  6071                           ;incstack = 0
  6072                           ;nrF2401_init_RX@canal stored from wreg
  6073   002F70  6E0B               	movwf	nrF2401_init_RX@canal^0,c
  6074   002F72                     
  6075                           ;./Librerias/nRF24L01_2.h: 184: void nrF2401_init_RX(unsigned char canal);./Librerias/nR
      +                          F24L01_2.h: 185: {;./Librerias/nRF24L01_2.h: 186:     LATBbits.LATB1 = 0;
  6076   002F72  928A               	bcf	138,1,c	;volatile
  6077   002F74                     
  6078                           ;./Librerias/nRF24L01_2.h: 187:     nrf2401_write(0x00, 0x04 + 0x08);
  6079   002F74  0E0C               	movlw	12
  6080   002F76  6E07               	movwf	nrf2401_write@valor^0,c
  6081   002F78  0E00               	movlw	0
  6082   002F7A  ECB9  F01B         	call	_nrf2401_write
  6083                           
  6084                           ;./Librerias/nRF24L01_2.h: 188:     nrf2401_write(0x04, 0x00);
  6085   002F7E  0E00               	movlw	0
  6086   002F80  6E07               	movwf	nrf2401_write@valor^0,c
  6087   002F82  0E04               	movlw	4
  6088   002F84  ECB9  F01B         	call	_nrf2401_write
  6089                           
  6090                           ;./Librerias/nRF24L01_2.h: 189:     nrf2401_write(0x03, 0x03);
  6091   002F88  0E03               	movlw	3
  6092   002F8A  6E07               	movwf	nrf2401_write@valor^0,c
  6093   002F8C  0E03               	movlw	3
  6094   002F8E  ECB9  F01B         	call	_nrf2401_write
  6095                           
  6096                           ;./Librerias/nRF24L01_2.h: 190:     nrf2401_write(0x06, 0x10 + 0x06);
  6097   002F92  0E16               	movlw	22
  6098   002F94  6E07               	movwf	nrf2401_write@valor^0,c
  6099   002F96  0E06               	movlw	6
  6100   002F98  ECB9  F01B         	call	_nrf2401_write
  6101                           
  6102                           ;./Librerias/nRF24L01_2.h: 191:     nrf2401_write(0x05, canal);
  6103   002F9C  C00B  F007         	movff	nrF2401_init_RX@canal,nrf2401_write@valor
  6104   002FA0  0E05               	movlw	5
  6105   002FA2  ECB9  F01B         	call	_nrf2401_write
  6106                           
  6107                           ;./Librerias/nRF24L01_2.h: 192:     nrf2401_write(0x01, 0x00);
  6108   002FA6  0E00               	movlw	0
  6109   002FA8  6E07               	movwf	nrf2401_write@valor^0,c
  6110   002FAA  0E01               	movlw	1
  6111   002FAC  ECB9  F01B         	call	_nrf2401_write
  6112                           
  6113                           ;./Librerias/nRF24L01_2.h: 193:     nrf2401_write(0x11, 1);
  6114   002FB0  0E01               	movlw	1
  6115   002FB2  6E07               	movwf	nrf2401_write@valor^0,c
  6116   002FB4  0E11               	movlw	17
  6117   002FB6  ECB9  F01B         	call	_nrf2401_write
  6118                           
  6119                           ;./Librerias/nRF24L01_2.h: 194:     nrf2401_write(0x00, 0x01 + 0x02 +0x04 + 0x08);
  6120   002FBA  0E0F               	movlw	15
  6121   002FBC  6E07               	movwf	nrf2401_write@valor^0,c
  6122   002FBE  0E00               	movlw	0
  6123   002FC0  ECB9  F01B         	call	_nrf2401_write
  6124   002FC4                     
  6125                           ;./Librerias/nRF24L01_2.h: 195:     nrf2401_direccion_TX_RX(direccion_tx , 0x10);
  6126   002FC4  0E0A               	movlw	low _direccion_tx
  6127   002FC6  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  6128   002FC8  0E10               	movlw	16
  6129   002FCA  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  6130   002FCC  EC16  F01A         	call	_nrf2401_direccion_TX_RX	;wreg free
  6131   002FD0                     
  6132                           ;./Librerias/nRF24L01_2.h: 196:     nrf2401_direccion_TX_RX(direccion_tx, 0x0A);
  6133   002FD0  0E0A               	movlw	low _direccion_tx
  6134   002FD2  6E07               	movwf	nrf2401_direccion_TX_RX@direccion_^0,c
  6135   002FD4  0E0A               	movlw	10
  6136   002FD6  6E08               	movwf	nrf2401_direccion_TX_RX@registro^0,c
  6137   002FD8  EC16  F01A         	call	_nrf2401_direccion_TX_RX	;wreg free
  6138                           
  6139                           ;./Librerias/nRF24L01_2.h: 197:     flush_TX_RX();
  6140   002FDC  ECD4  F01B         	call	_flush_TX_RX	;wreg free
  6141   002FE0                     
  6142                           ;./Librerias/nRF24L01_2.h: 198:     LATBbits.LATB1 = 1;
  6143   002FE0  828A               	bsf	138,1,c	;volatile
  6144   002FE2  0012               	return		;funcret
  6145   002FE4                     __end_of_nrF2401_init_RX:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function _nrf2401_direccion_TX_RX *****************
  6149 ;; Defined at:
  6150 ;;		line 111 in file "./Librerias/nRF24L01_2.h"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  direccion_      1    6[COMRAM] PTR const unsigned char 
  6153 ;;		 -> direccion_tx(5), 
  6154 ;;  registro        1    7[COMRAM] unsigned char 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;  cont_s          1    9[COMRAM] unsigned char 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6166 ;;      Params:         2       0       0       0       0       0       0       0       0
  6167 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6168 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6169 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6170 ;;Total ram usage:        4 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; Hardware stack levels required when called: 5
  6173 ;; This function calls:
  6174 ;;		_spi_s_write
  6175 ;; This function is called by:
  6176 ;;		_nrF2401_init_RX
  6177 ;;		_nrF2401_init_TX
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text33
  6182   00342C                     __ptext33:
  6183                           	callstack 0
  6184   00342C                     _nrf2401_direccion_TX_RX:
  6185                           	callstack 22
  6186   00342C                     
  6187                           ;./Librerias/nRF24L01_2.h: 111: void nrf2401_direccion_TX_RX(const unsigned char *direcc
      +                          ion_, unsigned char registro);./Librerias/nRF24L01_2.h: 112: {;./Librerias/nRF24L01_2.h:
      +                           113:     unsigned char cont_s;;./Librerias/nRF24L01_2.h: 115:     LATCbits.LATC2 = 0;
  6188   00342C  948B               	bcf	139,2,c	;volatile
  6189   00342E                     
  6190                           ;./Librerias/nRF24L01_2.h: 116:     spi_s_write(registro | 0x20);
  6191   00342E  5008               	movf	nrf2401_direccion_TX_RX@registro^0,w,c
  6192   003430  0920               	iorlw	32
  6193   003432  EC27  F019         	call	_spi_s_write
  6194   003436                     
  6195                           ;./Librerias/nRF24L01_2.h: 117:     for(cont_s = 0; cont_s < 5; cont_s++)
  6196   003436  0E00               	movlw	0
  6197   003438  6E0A               	movwf	nrf2401_direccion_TX_RX@cont_s^0,c
  6198   00343A                     l4964:
  6199                           
  6200                           ;./Librerias/nRF24L01_2.h: 118:     {;./Librerias/nRF24L01_2.h: 119:         spi_s_write
      +                          (direccion_[cont_s]);
  6201   00343A  5007               	movf	nrf2401_direccion_TX_RX@direccion_^0,w,c
  6202   00343C  240A               	addwf	nrf2401_direccion_TX_RX@cont_s^0,w,c
  6203   00343E  6E09               	movwf	??_nrf2401_direccion_TX_RX^0,c
  6204   003440  C009  FFF6         	movff	??_nrf2401_direccion_TX_RX,tblptrl
  6205   003444                     	if	1	;There is more than 1 active tblptr byte
  6206   003444  0E08               	movlw	high __smallconst
  6207   003446  6EF7               	movwf	tblptrh,c
  6208   003448                     	endif
  6209   003448                     	if	0	;tblptru may be non-zero
  6210   003448                     	endif
  6211   003448                     	if	0	;tblptru may be non-zero
  6212   003448                     	endif
  6213   003448  0008               	tblrd		*
  6214   00344A  50F5               	movf	tablat,w,c
  6215   00344C  EC27  F019         	call	_spi_s_write
  6216   003450                     
  6217                           ;./Librerias/nRF24L01_2.h: 120:     }
  6218   003450  2A0A               	incf	nrf2401_direccion_TX_RX@cont_s^0,f,c
  6219   003452  0E04               	movlw	4
  6220   003454  640A               	cpfsgt	nrf2401_direccion_TX_RX@cont_s^0,c
  6221   003456  EF2F  F01A         	goto	u4841
  6222   00345A  EF31  F01A         	goto	u4840
  6223   00345E                     u4841:
  6224   00345E  EF1D  F01A         	goto	l4964
  6225   003462                     u4840:
  6226   003462                     
  6227                           ;./Librerias/nRF24L01_2.h: 121:     LATCbits.LATC2 = 1;
  6228   003462  848B               	bsf	139,2,c	;volatile
  6229   003464                     
  6230                           ;./Librerias/nRF24L01_2.h: 122:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  6231   003464  0E14               	movlw	20
  6232   003466                     u6557:
  6233   003466  2EE8               	decfsz	wreg,f,c
  6234   003468  D7FE               	bra	u6557
  6235   00346A  0012               	return		;funcret
  6236   00346C                     __end_of_nrf2401_direccion_TX_RX:
  6237                           	callstack 0
  6238                           
  6239 ;; *************** function _flush_TX_RX *****************
  6240 ;; Defined at:
  6241 ;;		line 142 in file "./Librerias/nRF24L01_2.h"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;		None
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6255 ;;      Params:         0       0       0       0       0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6258 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used: 1
  6261 ;; Hardware stack levels required when called: 6
  6262 ;; This function calls:
  6263 ;;		_nrf2401_comando
  6264 ;;		_nrf2401_write
  6265 ;; This function is called by:
  6266 ;;		_nrF2401_init_RX
  6267 ;;		_nrF2401_init_TX
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text34
  6272   0037A8                     __ptext34:
  6273                           	callstack 0
  6274   0037A8                     _flush_TX_RX:
  6275                           	callstack 21
  6276   0037A8                     
  6277                           ;./Librerias/nRF24L01_2.h: 144:     nrf2401_write(0x07, 0x70);
  6278   0037A8  0E70               	movlw	112
  6279   0037AA  6E07               	movwf	nrf2401_write@valor^0,c
  6280   0037AC  0E07               	movlw	7
  6281   0037AE  ECB9  F01B         	call	_nrf2401_write
  6282                           
  6283                           ;./Librerias/nRF24L01_2.h: 145:     nrf2401_comando(0xE1);
  6284   0037B2  0EE1               	movlw	225
  6285   0037B4  EC01  F01C         	call	_nrf2401_comando
  6286                           
  6287                           ;./Librerias/nRF24L01_2.h: 146:     nrf2401_comando(0xE2);
  6288   0037B8  0EE2               	movlw	226
  6289   0037BA  EC01  F01C         	call	_nrf2401_comando
  6290   0037BE  0012               	return		;funcret
  6291   0037C0                     __end_of_flush_TX_RX:
  6292                           	callstack 0
  6293                           
  6294 ;; *************** function _nrf2401_write *****************
  6295 ;; Defined at:
  6296 ;;		line 81 in file "./Librerias/nRF24L01_2.h"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  reg             1    wreg     unsigned char 
  6299 ;;  valor           1    6[COMRAM] unsigned char 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  reg             1    7[COMRAM] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6311 ;;      Params:         1       0       0       0       0       0       0       0       0
  6312 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6314 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6315 ;;Total ram usage:        2 bytes
  6316 ;; Hardware stack levels used: 1
  6317 ;; Hardware stack levels required when called: 5
  6318 ;; This function calls:
  6319 ;;		_spi_s_write
  6320 ;; This function is called by:
  6321 ;;		_flush_TX
  6322 ;;		_flush_TX_RX
  6323 ;;		_nrf2401_envia
  6324 ;;		_nrF2401_init_RX
  6325 ;;		_nrF2401_init_TX
  6326 ;;		_flush_RX
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text35
  6331   003772                     __ptext35:
  6332                           	callstack 0
  6333   003772                     _nrf2401_write:
  6334                           	callstack 22
  6335                           
  6336                           ;incstack = 0
  6337                           ;nrf2401_write@reg stored from wreg
  6338   003772  6E08               	movwf	nrf2401_write@reg^0,c
  6339   003774                     
  6340                           ;./Librerias/nRF24L01_2.h: 81: void nrf2401_write(unsigned char reg, unsigned char valor
      +                          );./Librerias/nRF24L01_2.h: 82: {;./Librerias/nRF24L01_2.h: 83:     LATCbits.LATC2 = 0;
  6341   003774  948B               	bcf	139,2,c	;volatile
  6342   003776                     
  6343                           ;./Librerias/nRF24L01_2.h: 84:     spi_s_write((reg | 0x20));
  6344   003776  5008               	movf	nrf2401_write@reg^0,w,c
  6345   003778  0920               	iorlw	32
  6346   00377A  EC27  F019         	call	_spi_s_write
  6347                           
  6348                           ;./Librerias/nRF24L01_2.h: 85:     spi_s_write(valor);
  6349   00377E  5007               	movf	nrf2401_write@valor^0,w,c
  6350   003780  EC27  F019         	call	_spi_s_write
  6351   003784                     
  6352                           ;./Librerias/nRF24L01_2.h: 86:     LATCbits.LATC2 = 1;
  6353   003784  848B               	bsf	139,2,c	;volatile
  6354   003786                     
  6355                           ;./Librerias/nRF24L01_2.h: 87:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  6356   003786  0E14               	movlw	20
  6357   003788                     u6567:
  6358   003788  2EE8               	decfsz	wreg,f,c
  6359   00378A  D7FE               	bra	u6567
  6360   00378C  0012               	return		;funcret
  6361   00378E                     __end_of_nrf2401_write:
  6362                           	callstack 0
  6363                           
  6364 ;; *************** function _nrf2401_comando *****************
  6365 ;; Defined at:
  6366 ;;		line 91 in file "./Librerias/nRF24L01_2.h"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  comando         1    wreg     unsigned char 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  comando         1    6[COMRAM] unsigned char 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2, status,0, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6380 ;;      Params:         0       0       0       0       0       0       0       0       0
  6381 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6383 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6384 ;;Total ram usage:        1 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; Hardware stack levels required when called: 5
  6387 ;; This function calls:
  6388 ;;		_spi_s_write
  6389 ;; This function is called by:
  6390 ;;		_flush_TX
  6391 ;;		_flush_TX_RX
  6392 ;;		_flush_RX
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text36
  6397   003802                     __ptext36:
  6398                           	callstack 0
  6399   003802                     _nrf2401_comando:
  6400                           	callstack 21
  6401                           
  6402                           ;incstack = 0
  6403                           ;nrf2401_comando@comando stored from wreg
  6404   003802  6E07               	movwf	nrf2401_comando@comando^0,c
  6405   003804                     
  6406                           ;./Librerias/nRF24L01_2.h: 91: void nrf2401_comando(unsigned char comando);./Librerias/n
      +                          RF24L01_2.h: 92: {;./Librerias/nRF24L01_2.h: 93:     LATCbits.LATC2 = 0;
  6407   003804  948B               	bcf	139,2,c	;volatile
  6408   003806                     
  6409                           ;./Librerias/nRF24L01_2.h: 94:     spi_s_write(comando);
  6410   003806  5007               	movf	nrf2401_comando@comando^0,w,c
  6411   003808  EC27  F019         	call	_spi_s_write
  6412   00380C                     
  6413                           ;./Librerias/nRF24L01_2.h: 95:     LATCbits.LATC2 = 1;
  6414   00380C  848B               	bsf	139,2,c	;volatile
  6415   00380E                     
  6416                           ;./Librerias/nRF24L01_2.h: 96:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  6417   00380E  0E14               	movlw	20
  6418   003810                     u6577:
  6419   003810  2EE8               	decfsz	wreg,f,c
  6420   003812  D7FE               	bra	u6577
  6421   003814  0012               	return		;funcret
  6422   003816                     __end_of_nrf2401_comando:
  6423                           	callstack 0
  6424                           
  6425 ;; *************** function _spi_s_write *****************
  6426 ;; Defined at:
  6427 ;;		line 61 in file "./Librerias/nRF24L01_2.h"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  dato_           1    wreg     unsigned char 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  dato_           1    4[COMRAM] unsigned char 
  6432 ;;  cont_s          1    5[COMRAM] unsigned char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6442 ;;      Params:         0       0       0       0       0       0       0       0       0
  6443 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6445 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6446 ;;Total ram usage:        2 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; Hardware stack levels required when called: 4
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_nrf2401_write
  6453 ;;		_nrf2401_comando
  6454 ;;		_nrf2401_read
  6455 ;;		_nrf2401_direccion_TX_RX
  6456 ;;		_nrf2401_envia
  6457 ;;		_nrf2401_recibe
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text37
  6462   00324E                     __ptext37:
  6463                           	callstack 0
  6464   00324E                     _spi_s_write:
  6465                           	callstack 24
  6466                           
  6467                           ;incstack = 0
  6468                           ;spi_s_write@dato_ stored from wreg
  6469   00324E  6E05               	movwf	spi_s_write@dato_^0,c
  6470   003250                     
  6471                           ;./Librerias/nRF24L01_2.h: 61: void spi_s_write(unsigned char dato_);./Librerias/nRF24L0
      +                          1_2.h: 62: {;./Librerias/nRF24L01_2.h: 63:     unsigned char cont_s = 0;
  6472   003250  0E00               	movlw	0
  6473   003252  6E06               	movwf	spi_s_write@cont_s^0,c
  6474                           
  6475                           ;./Librerias/nRF24L01_2.h: 65:     for(cont_s = 0; cont_s < 8; cont_s++)
  6476   003254  0E00               	movlw	0
  6477   003256  6E06               	movwf	spi_s_write@cont_s^0,c
  6478   003258                     l360:
  6479                           
  6480                           ;./Librerias/nRF24L01_2.h: 66:     {;./Librerias/nRF24L01_2.h: 68:         if((dato_ & 0
      +                          x80) != 0) LATCbits.LATC1 = 1;
  6481   003258  AE05               	btfss	spi_s_write@dato_^0,7,c
  6482   00325A  EF31  F019         	goto	u4361
  6483   00325E  EF33  F019         	goto	u4360
  6484   003262                     u4361:
  6485   003262  EF36  F019         	goto	l362
  6486   003266                     u4360:
  6487   003266  828B               	bsf	139,1,c	;volatile
  6488   003268  EF37  F019         	goto	l4672
  6489   00326C                     l362:
  6490   00326C  928B               	bcf	139,1,c	;volatile
  6491   00326E                     l4672:
  6492                           
  6493                           ;./Librerias/nRF24L01_2.h: 70:         dato_ <<= 1;
  6494   00326E  90D8               	bcf	status,0,c
  6495   003270  3605               	rlcf	spi_s_write@dato_^0,f,c
  6496   003272                     
  6497                           ;./Librerias/nRF24L01_2.h: 72:         LATBbits.LATB2 = 1;
  6498   003272  848A               	bsf	138,2,c	;volatile
  6499   003274                     
  6500                           ;./Librerias/nRF24L01_2.h: 73:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  6501   003274  0E14               	movlw	20
  6502   003276                     u6587:
  6503   003276  2EE8               	decfsz	wreg,f,c
  6504   003278  D7FE               	bra	u6587
  6505   00327A                     
  6506                           ;./Librerias/nRF24L01_2.h: 74:         LATBbits.LATB2 = 0;
  6507   00327A  948A               	bcf	138,2,c	;volatile
  6508   00327C                     
  6509                           ;./Librerias/nRF24L01_2.h: 75:         _delay((unsigned long)((5)*(48000000/4000000.0)))
      +                          ;
  6510   00327C  0E14               	movlw	20
  6511   00327E                     u6597:
  6512   00327E  2EE8               	decfsz	wreg,f,c
  6513   003280  D7FE               	bra	u6597
  6514   003282                     
  6515                           ;./Librerias/nRF24L01_2.h: 76:     }
  6516   003282  2A06               	incf	spi_s_write@cont_s^0,f,c
  6517   003284  0E07               	movlw	7
  6518   003286  6406               	cpfsgt	spi_s_write@cont_s^0,c
  6519   003288  EF48  F019         	goto	u4371
  6520   00328C  EF4A  F019         	goto	u4370
  6521   003290                     u4371:
  6522   003290  EF2C  F019         	goto	l360
  6523   003294                     u4370:
  6524   003294  0012               	return		;funcret
  6525   003296                     __end_of_spi_s_write:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function _get_corriente_AC *****************
  6529 ;; Defined at:
  6530 ;;		line 135 in file "main.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  n_muestras      2   76[COMRAM] int 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  i               2    0[BANK0 ] int 
  6535 ;;  corriente       4    2[BANK0 ] int 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  4   76[COMRAM] int 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6545 ;;      Params:         4       0       0       0       0       0       0       0       0
  6546 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6547 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6548 ;;      Totals:         5       6       0       0       0       0       0       0       0
  6549 ;;Total ram usage:       11 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 6
  6552 ;; This function calls:
  6553 ;;		_ADC_GetConversion
  6554 ;;		___fladd
  6555 ;;		___fldiv
  6556 ;;		___flge
  6557 ;;		___flmul
  6558 ;;		___flsub
  6559 ;;		___xxtofl
  6560 ;; This function is called by:
  6561 ;;		_main
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text38
  6566   002598                     __ptext38:
  6567                           	callstack 0
  6568   002598                     _get_corriente_AC:
  6569                           	callstack 24
  6570   002598                     
  6571                           ;main.c: 138:   I_max = 0.0;
  6572   002598  0E00               	movlw	0
  6573   00259A  0100               	movlb	0	; () banked
  6574   00259C  6FD5               	movwf	_I_max& (0+255),b
  6575   00259E  0E00               	movlw	0
  6576   0025A0  6FD6               	movwf	(_I_max+1)& (0+255),b
  6577   0025A2  0E00               	movlw	0
  6578   0025A4  6FD7               	movwf	(_I_max+2)& (0+255),b
  6579   0025A6  0E00               	movlw	0
  6580   0025A8  6FD8               	movwf	(_I_max+3)& (0+255),b
  6581                           
  6582                           ;main.c: 139:   I_min = 0.0;
  6583   0025AA  0E00               	movlw	0
  6584   0025AC  6FD1               	movwf	_I_min& (0+255),b
  6585   0025AE  0E00               	movlw	0
  6586   0025B0  6FD2               	movwf	(_I_min+1)& (0+255),b
  6587   0025B2  0E00               	movlw	0
  6588   0025B4  6FD3               	movwf	(_I_min+2)& (0+255),b
  6589   0025B6  0E00               	movlw	0
  6590   0025B8  6FD4               	movwf	(_I_min+3)& (0+255),b
  6591                           
  6592                           ;main.c: 140:   for(int i = 0; i < n_muestras; i++)
  6593   0025BA  0E00               	movlw	0
  6594   0025BC  6F61               	movwf	(get_corriente_AC@i+1)& (0+255),b
  6595   0025BE  0E00               	movlw	0
  6596   0025C0  6F60               	movwf	get_corriente_AC@i& (0+255),b
  6597   0025C2  EF7E  F013         	goto	l6012
  6598   0025C6                     l5996:
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;main.c: 141:   {;main.c: 142:       valor = ADC_GetConversion(0);
  6602   0025C6  0E00               	movlw	0
  6603   0025C8  EC73  F01A         	call	_ADC_GetConversion
  6604   0025CC  C005  F0ED         	movff	?_ADC_GetConversion,_valor
  6605   0025D0  C006  F0EE         	movff	?_ADC_GetConversion+1,_valor+1
  6606   0025D4                     
  6607                           ;main.c: 143:       voltaje = valor * (5.0 / 1023.0);
  6608   0025D4  C0ED  F005         	movff	_valor,___xxtofl@val
  6609   0025D8  C0EE  F006         	movff	_valor+1,___xxtofl@val+1
  6610   0025DC  6A07               	clrf	(___xxtofl@val+2)^0,c
  6611   0025DE  6A08               	clrf	(___xxtofl@val+3)^0,c
  6612   0025E0  0E00               	movlw	0
  6613   0025E2  ECBA  F013         	call	___xxtofl
  6614   0025E6  C005  F013         	movff	?___xxtofl,___flmul@b
  6615   0025EA  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  6616   0025EE  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  6617   0025F2  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  6618   0025F6  0E0A               	movlw	10
  6619   0025F8  6E17               	movwf	___flmul@a^0,c
  6620   0025FA  0E28               	movlw	40
  6621   0025FC  6E18               	movwf	(___flmul@a+1)^0,c
  6622   0025FE  0EA0               	movlw	160
  6623   002600  6E19               	movwf	(___flmul@a+2)^0,c
  6624   002602  0E3B               	movlw	59
  6625   002604  6E1A               	movwf	(___flmul@a+3)^0,c
  6626   002606  EC66  F00B         	call	___flmul	;wreg free
  6627   00260A  C013  F0D9         	movff	?___flmul,_voltaje
  6628   00260E  C014  F0DA         	movff	?___flmul+1,_voltaje+1
  6629   002612  C015  F0DB         	movff	?___flmul+2,_voltaje+2
  6630   002616  C016  F0DC         	movff	?___flmul+3,_voltaje+3
  6631   00261A                     
  6632                           ;main.c: 144:       corriente = ((voltaje - 2.527) / sensibilidad);
  6633   00261A  0E5E               	movlw	94
  6634   00261C  6E09               	movwf	___fladd@a^0,c
  6635   00261E  0EBA               	movlw	186
  6636   002620  6E0A               	movwf	(___fladd@a+1)^0,c
  6637   002622  0E21               	movlw	33
  6638   002624  6E0B               	movwf	(___fladd@a+2)^0,c
  6639   002626  0EC0               	movlw	192
  6640   002628  6E0C               	movwf	(___fladd@a+3)^0,c
  6641   00262A  C0D9  F005         	movff	_voltaje,___fladd@b
  6642   00262E  C0DA  F006         	movff	_voltaje+1,___fladd@b+1
  6643   002632  C0DB  F007         	movff	_voltaje+2,___fladd@b+2
  6644   002636  C0DC  F008         	movff	_voltaje+3,___fladd@b+3
  6645   00263A  EC06  F009         	call	___fladd	;wreg free
  6646   00263E  C005  F034         	movff	?___fladd,___fldiv@b
  6647   002642  C006  F035         	movff	?___fladd+1,___fldiv@b+1
  6648   002646  C007  F036         	movff	?___fladd+2,___fldiv@b+2
  6649   00264A  C008  F037         	movff	?___fladd+3,___fldiv@b+3
  6650   00264E  0E4E               	movlw	78
  6651   002650  6E38               	movwf	___fldiv@a^0,c
  6652   002652  0E62               	movlw	98
  6653   002654  6E39               	movwf	(___fldiv@a+1)^0,c
  6654   002656  0E90               	movlw	144
  6655   002658  6E3A               	movwf	(___fldiv@a+2)^0,c
  6656   00265A  0E3E               	movlw	62
  6657   00265C  6E3B               	movwf	(___fldiv@a+3)^0,c
  6658   00265E  EC7B  F00D         	call	___fldiv	;wreg free
  6659   002662  C034  F062         	movff	?___fldiv,get_corriente_AC@corriente
  6660   002666  C035  F063         	movff	?___fldiv+1,get_corriente_AC@corriente+1
  6661   00266A  C036  F064         	movff	?___fldiv+2,get_corriente_AC@corriente+2
  6662   00266E  C037  F065         	movff	?___fldiv+3,get_corriente_AC@corriente+3
  6663   002672                     
  6664                           ;main.c: 145:       if (corriente > I_max) I_max = corriente;
  6665   002672  C0D5  F02C         	movff	_I_max,___flge@ff1
  6666   002676  C0D6  F02D         	movff	_I_max+1,___flge@ff1+1
  6667   00267A  C0D7  F02E         	movff	_I_max+2,___flge@ff1+2
  6668   00267E  C0D8  F02F         	movff	_I_max+3,___flge@ff1+3
  6669   002682  C062  F030         	movff	get_corriente_AC@corriente,___flge@ff2
  6670   002686  C063  F031         	movff	get_corriente_AC@corriente+1,___flge@ff2+1
  6671   00268A  C064  F032         	movff	get_corriente_AC@corriente+2,___flge@ff2+2
  6672   00268E  C065  F033         	movff	get_corriente_AC@corriente+3,___flge@ff2+3
  6673   002692  ECB2  F015         	call	___flge	;wreg free
  6674   002696  B0D8               	btfsc	status,0,c
  6675   002698  EF50  F013         	goto	u6201
  6676   00269C  EF52  F013         	goto	u6200
  6677   0026A0                     u6201:
  6678   0026A0  EF5A  F013         	goto	l6006
  6679   0026A4                     u6200:
  6680   0026A4  C062  F0D5         	movff	get_corriente_AC@corriente,_I_max
  6681   0026A8  C063  F0D6         	movff	get_corriente_AC@corriente+1,_I_max+1
  6682   0026AC  C064  F0D7         	movff	get_corriente_AC@corriente+2,_I_max+2
  6683   0026B0  C065  F0D8         	movff	get_corriente_AC@corriente+3,_I_max+3
  6684   0026B4                     l6006:
  6685                           
  6686                           ;main.c: 146:       if (corriente < I_min) I_min = corriente;
  6687   0026B4  C062  F02C         	movff	get_corriente_AC@corriente,___flge@ff1
  6688   0026B8  C063  F02D         	movff	get_corriente_AC@corriente+1,___flge@ff1+1
  6689   0026BC  C064  F02E         	movff	get_corriente_AC@corriente+2,___flge@ff1+2
  6690   0026C0  C065  F02F         	movff	get_corriente_AC@corriente+3,___flge@ff1+3
  6691   0026C4  C0D1  F030         	movff	_I_min,___flge@ff2
  6692   0026C8  C0D2  F031         	movff	_I_min+1,___flge@ff2+1
  6693   0026CC  C0D3  F032         	movff	_I_min+2,___flge@ff2+2
  6694   0026D0  C0D4  F033         	movff	_I_min+3,___flge@ff2+3
  6695   0026D4  ECB2  F015         	call	___flge	;wreg free
  6696   0026D8  B0D8               	btfsc	status,0,c
  6697   0026DA  EF71  F013         	goto	u6211
  6698   0026DE  EF73  F013         	goto	u6210
  6699   0026E2                     u6211:
  6700   0026E2  EF7B  F013         	goto	l6010
  6701   0026E6                     u6210:
  6702   0026E6  C062  F0D1         	movff	get_corriente_AC@corriente,_I_min
  6703   0026EA  C063  F0D2         	movff	get_corriente_AC@corriente+1,_I_min+1
  6704   0026EE  C064  F0D3         	movff	get_corriente_AC@corriente+2,_I_min+2
  6705   0026F2  C065  F0D4         	movff	get_corriente_AC@corriente+3,_I_min+3
  6706   0026F6                     l6010:
  6707                           
  6708                           ;main.c: 147:   }
  6709   0026F6  0100               	movlb	0	; () banked
  6710   0026F8  4B60               	infsnz	get_corriente_AC@i& (0+255),f,b
  6711   0026FA  2B61               	incf	(get_corriente_AC@i+1)& (0+255),f,b
  6712   0026FC                     l6012:
  6713                           
  6714                           ; BSR set to: 0
  6715   0026FC  504D               	movf	get_corriente_AC@n_muestras^0,w,c
  6716   0026FE  5D60               	subwf	get_corriente_AC@i& (0+255),w,b
  6717   002700  5161               	movf	(get_corriente_AC@i+1)& (0+255),w,b
  6718   002702  0A80               	xorlw	128
  6719   002704  6E51               	movwf	??_get_corriente_AC^0,c
  6720   002706  504E               	movf	(get_corriente_AC@n_muestras+1)^0,w,c
  6721   002708  0A80               	xorlw	128
  6722   00270A  5851               	subwfb	??_get_corriente_AC^0,w,c
  6723   00270C  A0D8               	btfss	status,0,c
  6724   00270E  EF8B  F013         	goto	u6221
  6725   002712  EF8D  F013         	goto	u6220
  6726   002716                     u6221:
  6727   002716  EFE3  F012         	goto	l5996
  6728   00271A                     u6220:
  6729   00271A                     
  6730                           ; BSR set to: 0
  6731                           ;main.c: 150:   return(((I_max - I_min) / 2));
  6732   00271A  C0D1  F030         	movff	_I_min,___flsub@a
  6733   00271E  C0D2  F031         	movff	_I_min+1,___flsub@a+1
  6734   002722  C0D3  F032         	movff	_I_min+2,___flsub@a+2
  6735   002726  C0D4  F033         	movff	_I_min+3,___flsub@a+3
  6736   00272A  C0D5  F02C         	movff	_I_max,___flsub@b
  6737   00272E  C0D6  F02D         	movff	_I_max+1,___flsub@b+1
  6738   002732  C0D7  F02E         	movff	_I_max+2,___flsub@b+2
  6739   002736  C0D8  F02F         	movff	_I_max+3,___flsub@b+3
  6740   00273A  EC92  F019         	call	___flsub	;wreg free
  6741   00273E  C02C  F034         	movff	?___flsub,___fldiv@b
  6742   002742  C02D  F035         	movff	?___flsub+1,___fldiv@b+1
  6743   002746  C02E  F036         	movff	?___flsub+2,___fldiv@b+2
  6744   00274A  C02F  F037         	movff	?___flsub+3,___fldiv@b+3
  6745   00274E  0E00               	movlw	0
  6746   002750  6E38               	movwf	___fldiv@a^0,c
  6747   002752  0E00               	movlw	0
  6748   002754  6E39               	movwf	(___fldiv@a+1)^0,c
  6749   002756  0E00               	movlw	0
  6750   002758  6E3A               	movwf	(___fldiv@a+2)^0,c
  6751   00275A  0E40               	movlw	64
  6752   00275C  6E3B               	movwf	(___fldiv@a+3)^0,c
  6753   00275E  EC7B  F00D         	call	___fldiv	;wreg free
  6754   002762  C034  F04D         	movff	?___fldiv,?_get_corriente_AC
  6755   002766  C035  F04E         	movff	?___fldiv+1,?_get_corriente_AC+1
  6756   00276A  C036  F04F         	movff	?___fldiv+2,?_get_corriente_AC+2
  6757   00276E  C037  F050         	movff	?___fldiv+3,?_get_corriente_AC+3
  6758   002772  0012               	return		;funcret
  6759   002774                     __end_of_get_corriente_AC:
  6760                           	callstack 0
  6761                           
  6762 ;; *************** function ___xxtofl *****************
  6763 ;; Defined at:
  6764 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  sign            1    wreg     unsigned char 
  6767 ;;  val             4    4[COMRAM] long 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  sign            1   12[COMRAM] unsigned char 
  6770 ;;  arg             4   14[COMRAM] unsigned long 
  6771 ;;  exp             1   13[COMRAM] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  4    4[COMRAM] unsigned char 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         4       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6784 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:       14 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 4
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_get_corriente_AC
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text39
  6796   002774                     __ptext39:
  6797                           	callstack 0
  6798   002774                     ___xxtofl:
  6799                           	callstack 25
  6800                           
  6801                           ;incstack = 0
  6802                           ;___xxtofl@sign stored from wreg
  6803   002774  6E0D               	movwf	___xxtofl@sign^0,c
  6804   002776  500D               	movf	___xxtofl@sign^0,w,c
  6805   002778  B4D8               	btfsc	status,2,c
  6806   00277A  EFC1  F013         	goto	u6061
  6807   00277E  EFC3  F013         	goto	u6060
  6808   002782                     u6061:
  6809   002782  EFE5  F013         	goto	l1176
  6810   002786                     u6060:
  6811   002786  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6812   002788  EFCA  F013         	goto	u6070
  6813   00278C  EFC8  F013         	goto	u6071
  6814   002790                     u6071:
  6815   002790  EFE5  F013         	goto	l1176
  6816   002794                     u6070:
  6817   002794  C005  F009         	movff	___xxtofl@val,??___xxtofl
  6818   002798  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  6819   00279C  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  6820   0027A0  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  6821   0027A4  1E09               	comf	??___xxtofl^0,f,c
  6822   0027A6  1E0A               	comf	(??___xxtofl+1)^0,f,c
  6823   0027A8  1E0B               	comf	(??___xxtofl+2)^0,f,c
  6824   0027AA  1E0C               	comf	(??___xxtofl+3)^0,f,c
  6825   0027AC  2A09               	incf	??___xxtofl^0,f,c
  6826   0027AE  0E00               	movlw	0
  6827   0027B0  220A               	addwfc	(??___xxtofl+1)^0,f,c
  6828   0027B2  220B               	addwfc	(??___xxtofl+2)^0,f,c
  6829   0027B4  220C               	addwfc	(??___xxtofl+3)^0,f,c
  6830   0027B6  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  6831   0027BA  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  6832   0027BE  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  6833   0027C2  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  6834   0027C6  EFED  F013         	goto	l5908
  6835   0027CA                     l1176:
  6836   0027CA  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  6837   0027CE  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6838   0027D2  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6839   0027D6  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6840   0027DA                     l5908:
  6841   0027DA  5005               	movf	___xxtofl@val^0,w,c
  6842   0027DC  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  6843   0027DE  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  6844   0027E0  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  6845   0027E2  A4D8               	btfss	status,2,c
  6846   0027E4  EFF6  F013         	goto	u6081
  6847   0027E8  EFF8  F013         	goto	u6080
  6848   0027EC                     u6081:
  6849   0027EC  EF02  F014         	goto	l5914
  6850   0027F0                     u6080:
  6851   0027F0  0E00               	movlw	0
  6852   0027F2  6E05               	movwf	?___xxtofl^0,c
  6853   0027F4  0E00               	movlw	0
  6854   0027F6  6E06               	movwf	(?___xxtofl+1)^0,c
  6855   0027F8  0E00               	movlw	0
  6856   0027FA  6E07               	movwf	(?___xxtofl+2)^0,c
  6857   0027FC  0E00               	movlw	0
  6858   0027FE  6E08               	movwf	(?___xxtofl+3)^0,c
  6859   002800  EF93  F014         	goto	l1179
  6860   002804                     l5914:
  6861   002804  0E96               	movlw	150
  6862   002806  6E0E               	movwf	___xxtofl@exp^0,c
  6863   002808  EF0C  F014         	goto	l5918
  6864   00280C                     l5916:
  6865   00280C  2A0E               	incf	___xxtofl@exp^0,f,c
  6866   00280E  90D8               	bcf	status,0,c
  6867   002810  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6868   002812  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6869   002814  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6870   002816  320F               	rrcf	___xxtofl@arg^0,f,c
  6871   002818                     l5918:
  6872   002818  0E00               	movlw	0
  6873   00281A  140F               	andwf	___xxtofl@arg^0,w,c
  6874   00281C  6E09               	movwf	??___xxtofl^0,c
  6875   00281E  0E00               	movlw	0
  6876   002820  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6877   002822  6E0A               	movwf	(??___xxtofl+1)^0,c
  6878   002824  0E00               	movlw	0
  6879   002826  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6880   002828  6E0B               	movwf	(??___xxtofl+2)^0,c
  6881   00282A  0EFE               	movlw	254
  6882   00282C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6883   00282E  6E0C               	movwf	(??___xxtofl+3)^0,c
  6884   002830  5009               	movf	??___xxtofl^0,w,c
  6885   002832  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6886   002834  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6887   002836  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6888   002838  A4D8               	btfss	status,2,c
  6889   00283A  EF21  F014         	goto	u6091
  6890   00283E  EF23  F014         	goto	u6090
  6891   002842                     u6091:
  6892   002842  EF06  F014         	goto	l5916
  6893   002846                     u6090:
  6894   002846  EF31  F014         	goto	l1183
  6895   00284A                     l5920:
  6896   00284A  2A0E               	incf	___xxtofl@exp^0,f,c
  6897   00284C  0E01               	movlw	1
  6898   00284E  260F               	addwf	___xxtofl@arg^0,f,c
  6899   002850  0E00               	movlw	0
  6900   002852  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  6901   002854  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  6902   002856  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  6903   002858  90D8               	bcf	status,0,c
  6904   00285A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6905   00285C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6906   00285E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6907   002860  320F               	rrcf	___xxtofl@arg^0,f,c
  6908   002862                     l1183:
  6909   002862  0E00               	movlw	0
  6910   002864  140F               	andwf	___xxtofl@arg^0,w,c
  6911   002866  6E09               	movwf	??___xxtofl^0,c
  6912   002868  0E00               	movlw	0
  6913   00286A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6914   00286C  6E0A               	movwf	(??___xxtofl+1)^0,c
  6915   00286E  0E00               	movlw	0
  6916   002870  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6917   002872  6E0B               	movwf	(??___xxtofl+2)^0,c
  6918   002874  0EFF               	movlw	255
  6919   002876  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6920   002878  6E0C               	movwf	(??___xxtofl+3)^0,c
  6921   00287A  5009               	movf	??___xxtofl^0,w,c
  6922   00287C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6923   00287E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6924   002880  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6925   002882  A4D8               	btfss	status,2,c
  6926   002884  EF46  F014         	goto	u6101
  6927   002888  EF48  F014         	goto	u6100
  6928   00288C                     u6101:
  6929   00288C  EF25  F014         	goto	l5920
  6930   002890                     u6100:
  6931   002890  EF50  F014         	goto	l5928
  6932   002894                     l5926:
  6933   002894  060E               	decf	___xxtofl@exp^0,f,c
  6934   002896  90D8               	bcf	status,0,c
  6935   002898  360F               	rlcf	___xxtofl@arg^0,f,c
  6936   00289A  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  6937   00289C  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  6938   00289E  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  6939   0028A0                     l5928:
  6940   0028A0  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  6941   0028A2  EF55  F014         	goto	u6111
  6942   0028A6  EF57  F014         	goto	u6110
  6943   0028AA                     u6111:
  6944   0028AA  EF5F  F014         	goto	l1190
  6945   0028AE                     u6110:
  6946   0028AE  0E02               	movlw	2
  6947   0028B0  600E               	cpfslt	___xxtofl@exp^0,c
  6948   0028B2  EF5D  F014         	goto	u6121
  6949   0028B6  EF5F  F014         	goto	u6120
  6950   0028BA                     u6121:
  6951   0028BA  EF4A  F014         	goto	l5926
  6952   0028BE                     u6120:
  6953   0028BE                     l1190:
  6954   0028BE  B00E               	btfsc	___xxtofl@exp^0,0,c
  6955   0028C0  EF64  F014         	goto	u6131
  6956   0028C4  EF66  F014         	goto	u6130
  6957   0028C8                     u6131:
  6958   0028C8  EF67  F014         	goto	l5934
  6959   0028CC                     u6130:
  6960   0028CC  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  6961   0028CE                     l5934:
  6962   0028CE  90D8               	bcf	status,0,c
  6963   0028D0  320E               	rrcf	___xxtofl@exp^0,f,c
  6964   0028D2  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  6965   0028D6  6A0A               	clrf	(??___xxtofl+1)^0,c
  6966   0028D8  6A0B               	clrf	(??___xxtofl+2)^0,c
  6967   0028DA  6A0C               	clrf	(??___xxtofl+3)^0,c
  6968   0028DC  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  6969   0028E0  6A0B               	clrf	(??___xxtofl+2)^0,c
  6970   0028E2  6A0A               	clrf	(??___xxtofl+1)^0,c
  6971   0028E4  6A09               	clrf	??___xxtofl^0,c
  6972   0028E6  5009               	movf	??___xxtofl^0,w,c
  6973   0028E8  120F               	iorwf	___xxtofl@arg^0,f,c
  6974   0028EA  500A               	movf	(??___xxtofl+1)^0,w,c
  6975   0028EC  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  6976   0028EE  500B               	movf	(??___xxtofl+2)^0,w,c
  6977   0028F0  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  6978   0028F2  500C               	movf	(??___xxtofl+3)^0,w,c
  6979   0028F4  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  6980   0028F6  500D               	movf	___xxtofl@sign^0,w,c
  6981   0028F8  B4D8               	btfsc	status,2,c
  6982   0028FA  EF81  F014         	goto	u6141
  6983   0028FE  EF83  F014         	goto	u6140
  6984   002902                     u6141:
  6985   002902  EF8B  F014         	goto	l5944
  6986   002906                     u6140:
  6987   002906  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6988   002908  EF8A  F014         	goto	u6150
  6989   00290C  EF88  F014         	goto	u6151
  6990   002910                     u6151:
  6991   002910  EF8B  F014         	goto	l5944
  6992   002914                     u6150:
  6993   002914  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  6994   002916                     l5944:
  6995   002916  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  6996   00291A  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  6997   00291E  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  6998   002922  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  6999   002926                     l1179:
  7000   002926  0012               	return		;funcret
  7001   002928                     __end_of___xxtofl:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function ___flsub *****************
  7005 ;; Defined at:
  7006 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  b               4   43[COMRAM] unsigned char 
  7009 ;;  a               4   47[COMRAM] unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  4   43[COMRAM] unsigned char 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7021 ;;      Params:         8       0       0       0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7024 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7025 ;;Total ram usage:        8 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 5
  7028 ;; This function calls:
  7029 ;;		___fladd
  7030 ;; This function is called by:
  7031 ;;		_get_corriente_AC
  7032 ;;		_main
  7033 ;;		_efgtoa
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text40
  7038   003324                     __ptext40:
  7039                           	callstack 0
  7040   003324                     ___flsub:
  7041                           	callstack 21
  7042   003324  0E00               	movlw	0
  7043   003326  1A30               	xorwf	___flsub@a^0,f,c
  7044   003328  0E00               	movlw	0
  7045   00332A  1A31               	xorwf	(___flsub@a+1)^0,f,c
  7046   00332C  0E00               	movlw	0
  7047   00332E  1A32               	xorwf	(___flsub@a+2)^0,f,c
  7048   003330  0E80               	movlw	128
  7049   003332  1A33               	xorwf	(___flsub@a+3)^0,f,c
  7050   003334  C02C  F005         	movff	___flsub@b,___fladd@b
  7051   003338  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  7052   00333C  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  7053   003340  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  7054   003344  C030  F009         	movff	___flsub@a,___fladd@a
  7055   003348  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  7056   00334C  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  7057   003350  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  7058   003354  EC06  F009         	call	___fladd	;wreg free
  7059   003358  C005  F02C         	movff	?___fladd,?___flsub
  7060   00335C  C006  F02D         	movff	?___fladd+1,?___flsub+1
  7061   003360  C007  F02E         	movff	?___fladd+2,?___flsub+2
  7062   003364  C008  F02F         	movff	?___fladd+3,?___flsub+3
  7063   003368  0012               	return		;funcret
  7064   00336A                     __end_of___flsub:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function ___fladd *****************
  7068 ;; Defined at:
  7069 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  b               4    4[COMRAM] unsigned char 
  7072 ;;  a               4    8[COMRAM] unsigned char 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  grs             1   19[COMRAM] unsigned char 
  7075 ;;  bexp            1   18[COMRAM] unsigned char 
  7076 ;;  aexp            1   17[COMRAM] unsigned char 
  7077 ;;  signs           1   16[COMRAM] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  4    4[COMRAM] unsigned char 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7087 ;;      Params:         8       0       0       0       0       0       0       0       0
  7088 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7089 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7090 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7091 ;;Total ram usage:       16 bytes
  7092 ;; Hardware stack levels used: 1
  7093 ;; Hardware stack levels required when called: 4
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_get_corriente_AC
  7098 ;;		___flsub
  7099 ;;		_efgtoa
  7100 ;;		_main
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text41
  7105   00120C                     __ptext41:
  7106                           	callstack 0
  7107   00120C                     ___fladd:
  7108                           	callstack 21
  7109   00120C  5008               	movf	(___fladd@b+3)^0,w,c
  7110   00120E  0B80               	andlw	128
  7111   001210  6E11               	movwf	___fladd@signs^0,c
  7112   001212  5008               	movf	(___fladd@b+3)^0,w,c
  7113   001214  2408               	addwf	(___fladd@b+3)^0,w,c
  7114   001216  6E13               	movwf	___fladd@bexp^0,c
  7115   001218  AE07               	btfss	(___fladd@b+2)^0,7,c
  7116   00121A  EF11  F009         	goto	u4421
  7117   00121E  EF13  F009         	goto	u4420
  7118   001222                     u4421:
  7119   001222  EF14  F009         	goto	l4722
  7120   001226                     u4420:
  7121   001226  8013               	bsf	___fladd@bexp^0,0,c
  7122   001228                     l4722:
  7123   001228  5013               	movf	___fladd@bexp^0,w,c
  7124   00122A  B4D8               	btfsc	status,2,c
  7125   00122C  EF1A  F009         	goto	u4431
  7126   001230  EF1C  F009         	goto	u4430
  7127   001234                     u4431:
  7128   001234  EF31  F009         	goto	l4732
  7129   001238                     u4430:
  7130   001238  2813               	incf	___fladd@bexp^0,w,c
  7131   00123A  A4D8               	btfss	status,2,c
  7132   00123C  EF22  F009         	goto	u4441
  7133   001240  EF24  F009         	goto	u4440
  7134   001244                     u4441:
  7135   001244  EF2C  F009         	goto	l4728
  7136   001248                     u4440:
  7137   001248  0E00               	movlw	0
  7138   00124A  6E05               	movwf	___fladd@b^0,c
  7139   00124C  0E00               	movlw	0
  7140   00124E  6E06               	movwf	(___fladd@b+1)^0,c
  7141   001250  0E00               	movlw	0
  7142   001252  6E07               	movwf	(___fladd@b+2)^0,c
  7143   001254  0E00               	movlw	0
  7144   001256  6E08               	movwf	(___fladd@b+3)^0,c
  7145   001258                     l4728:
  7146   001258  8E07               	bsf	(___fladd@b+2)^0,7,c
  7147   00125A  0E00               	movlw	0
  7148   00125C  6E08               	movwf	(___fladd@b+3)^0,c
  7149   00125E  EF39  F009         	goto	l4734
  7150   001262                     l4732:
  7151   001262  0E00               	movlw	0
  7152   001264  6E05               	movwf	___fladd@b^0,c
  7153   001266  0E00               	movlw	0
  7154   001268  6E06               	movwf	(___fladd@b+1)^0,c
  7155   00126A  0E00               	movlw	0
  7156   00126C  6E07               	movwf	(___fladd@b+2)^0,c
  7157   00126E  0E00               	movlw	0
  7158   001270  6E08               	movwf	(___fladd@b+3)^0,c
  7159   001272                     l4734:
  7160   001272  500C               	movf	(___fladd@a+3)^0,w,c
  7161   001274  0B80               	andlw	128
  7162   001276  6E12               	movwf	___fladd@aexp^0,c
  7163   001278  5011               	movf	___fladd@signs^0,w,c
  7164   00127A  1812               	xorwf	___fladd@aexp^0,w,c
  7165   00127C  B4D8               	btfsc	status,2,c
  7166   00127E  EF43  F009         	goto	u4451
  7167   001282  EF45  F009         	goto	u4450
  7168   001286                     u4451:
  7169   001286  EF46  F009         	goto	l4740
  7170   00128A                     u4450:
  7171   00128A  8C11               	bsf	___fladd@signs^0,6,c
  7172   00128C                     l4740:
  7173   00128C  500C               	movf	(___fladd@a+3)^0,w,c
  7174   00128E  240C               	addwf	(___fladd@a+3)^0,w,c
  7175   001290  6E12               	movwf	___fladd@aexp^0,c
  7176   001292  AE0B               	btfss	(___fladd@a+2)^0,7,c
  7177   001294  EF4E  F009         	goto	u4461
  7178   001298  EF50  F009         	goto	u4460
  7179   00129C                     u4461:
  7180   00129C  EF51  F009         	goto	l4746
  7181   0012A0                     u4460:
  7182   0012A0  8012               	bsf	___fladd@aexp^0,0,c
  7183   0012A2                     l4746:
  7184   0012A2  5012               	movf	___fladd@aexp^0,w,c
  7185   0012A4  B4D8               	btfsc	status,2,c
  7186   0012A6  EF57  F009         	goto	u4471
  7187   0012AA  EF59  F009         	goto	u4470
  7188   0012AE                     u4471:
  7189   0012AE  EF6E  F009         	goto	l4756
  7190   0012B2                     u4470:
  7191   0012B2  2812               	incf	___fladd@aexp^0,w,c
  7192   0012B4  A4D8               	btfss	status,2,c
  7193   0012B6  EF5F  F009         	goto	u4481
  7194   0012BA  EF61  F009         	goto	u4480
  7195   0012BE                     u4481:
  7196   0012BE  EF69  F009         	goto	l4752
  7197   0012C2                     u4480:
  7198   0012C2  0E00               	movlw	0
  7199   0012C4  6E09               	movwf	___fladd@a^0,c
  7200   0012C6  0E00               	movlw	0
  7201   0012C8  6E0A               	movwf	(___fladd@a+1)^0,c
  7202   0012CA  0E00               	movlw	0
  7203   0012CC  6E0B               	movwf	(___fladd@a+2)^0,c
  7204   0012CE  0E00               	movlw	0
  7205   0012D0  6E0C               	movwf	(___fladd@a+3)^0,c
  7206   0012D2                     l4752:
  7207   0012D2  8E0B               	bsf	(___fladd@a+2)^0,7,c
  7208   0012D4  0E00               	movlw	0
  7209   0012D6  6E0C               	movwf	(___fladd@a+3)^0,c
  7210   0012D8  EF76  F009         	goto	l4758
  7211   0012DC                     l4756:
  7212   0012DC  0E00               	movlw	0
  7213   0012DE  6E09               	movwf	___fladd@a^0,c
  7214   0012E0  0E00               	movlw	0
  7215   0012E2  6E0A               	movwf	(___fladd@a+1)^0,c
  7216   0012E4  0E00               	movlw	0
  7217   0012E6  6E0B               	movwf	(___fladd@a+2)^0,c
  7218   0012E8  0E00               	movlw	0
  7219   0012EA  6E0C               	movwf	(___fladd@a+3)^0,c
  7220   0012EC                     l4758:
  7221   0012EC  5013               	movf	___fladd@bexp^0,w,c
  7222   0012EE  5C12               	subwf	___fladd@aexp^0,w,c
  7223   0012F0  B0D8               	btfsc	status,0,c
  7224   0012F2  EF7D  F009         	goto	u4491
  7225   0012F6  EF7F  F009         	goto	u4490
  7226   0012FA                     u4491:
  7227   0012FA  EFA6  F009         	goto	l4794
  7228   0012FE                     u4490:
  7229   0012FE  AC11               	btfss	___fladd@signs^0,6,c
  7230   001300  EF84  F009         	goto	u4501
  7231   001304  EF86  F009         	goto	u4500
  7232   001308                     u4501:
  7233   001308  EF88  F009         	goto	l4764
  7234   00130C                     u4500:
  7235   00130C  0E80               	movlw	128
  7236   00130E  1A11               	xorwf	___fladd@signs^0,f,c
  7237   001310                     l4764:
  7238   001310  C013  F014         	movff	___fladd@bexp,___fladd@grs
  7239   001314  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  7240   001318  C014  F012         	movff	___fladd@grs,___fladd@aexp
  7241   00131C  C005  F014         	movff	___fladd@b,___fladd@grs
  7242   001320  C009  F005         	movff	___fladd@a,___fladd@b
  7243   001324  C014  F009         	movff	___fladd@grs,___fladd@a
  7244   001328  C006  F014         	movff	___fladd@b+1,___fladd@grs
  7245   00132C  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  7246   001330  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  7247   001334  C007  F014         	movff	___fladd@b+2,___fladd@grs
  7248   001338  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  7249   00133C  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  7250   001340  C008  F014         	movff	___fladd@b+3,___fladd@grs
  7251   001344  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  7252   001348  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  7253   00134C                     l4794:
  7254   00134C  0E00               	movlw	0
  7255   00134E  6E14               	movwf	___fladd@grs^0,c
  7256   001350  5013               	movf	___fladd@bexp^0,w,c
  7257   001352  C012  F00D         	movff	___fladd@aexp,??___fladd
  7258   001356  6A0E               	clrf	(??___fladd+1)^0,c
  7259   001358  5E0D               	subwf	??___fladd^0,f,c
  7260   00135A  0E00               	movlw	0
  7261   00135C  5A0E               	subwfb	(??___fladd+1)^0,f,c
  7262   00135E  BE0E               	btfsc	(??___fladd+1)^0,7,c
  7263   001360  EFBB  F009         	goto	u4511
  7264   001364  500E               	movf	(??___fladd+1)^0,w,c
  7265   001366  E109               	bnz	u4510
  7266   001368  0E1A               	movlw	26
  7267   00136A  5C0D               	subwf	??___fladd^0,w,c
  7268   00136C  A0D8               	btfss	status,0,c
  7269   00136E  EFBB  F009         	goto	u4511
  7270   001372  EFBD  F009         	goto	u4510
  7271   001376                     u4511:
  7272   001376  EFF4  F009         	goto	l1050
  7273   00137A                     u4510:
  7274   00137A  5005               	movf	___fladd@b^0,w,c
  7275   00137C  1006               	iorwf	(___fladd@b+1)^0,w,c
  7276   00137E  1007               	iorwf	(___fladd@b+2)^0,w,c
  7277   001380  1008               	iorwf	(___fladd@b+3)^0,w,c
  7278   001382  A4D8               	btfss	status,2,c
  7279   001384  EFC6  F009         	goto	u4521
  7280   001388  EFC9  F009         	goto	u4520
  7281   00138C                     u4521:
  7282   00138C  0E01               	movlw	1
  7283   00138E  EFCA  F009         	goto	u4530
  7284   001392                     u4520:
  7285   001392  0E00               	movlw	0
  7286   001394                     u4530:
  7287   001394  6E14               	movwf	___fladd@grs^0,c
  7288   001396  0E00               	movlw	0
  7289   001398  6E05               	movwf	___fladd@b^0,c
  7290   00139A  0E00               	movlw	0
  7291   00139C  6E06               	movwf	(___fladd@b+1)^0,c
  7292   00139E  0E00               	movlw	0
  7293   0013A0  6E07               	movwf	(___fladd@b+2)^0,c
  7294   0013A2  0E00               	movlw	0
  7295   0013A4  6E08               	movwf	(___fladd@b+3)^0,c
  7296   0013A6  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  7297   0013AA  EFFD  F009         	goto	l1049
  7298   0013AE                     l1051:
  7299   0013AE  A014               	btfss	___fladd@grs^0,0,c
  7300   0013B0  EFDC  F009         	goto	u4541
  7301   0013B4  EFDE  F009         	goto	u4540
  7302   0013B8                     u4541:
  7303   0013B8  EFE4  F009         	goto	l4806
  7304   0013BC                     u4540:
  7305   0013BC  90D8               	bcf	status,0,c
  7306   0013BE  3014               	rrcf	___fladd@grs^0,w,c
  7307   0013C0  0901               	iorlw	1
  7308   0013C2  6E14               	movwf	___fladd@grs^0,c
  7309   0013C4  EFE6  F009         	goto	l4808
  7310   0013C8                     l4806:
  7311   0013C8  90D8               	bcf	status,0,c
  7312   0013CA  3214               	rrcf	___fladd@grs^0,f,c
  7313   0013CC                     l4808:
  7314   0013CC  A005               	btfss	___fladd@b^0,0,c
  7315   0013CE  EFEB  F009         	goto	u4551
  7316   0013D2  EFED  F009         	goto	u4550
  7317   0013D6                     u4551:
  7318   0013D6  EFEE  F009         	goto	l4812
  7319   0013DA                     u4550:
  7320   0013DA  8E14               	bsf	___fladd@grs^0,7,c
  7321   0013DC                     l4812:
  7322   0013DC  3408               	rlcf	(___fladd@b+3)^0,w,c
  7323   0013DE  3208               	rrcf	(___fladd@b+3)^0,f,c
  7324   0013E0  3207               	rrcf	(___fladd@b+2)^0,f,c
  7325   0013E2  3206               	rrcf	(___fladd@b+1)^0,f,c
  7326   0013E4  3205               	rrcf	___fladd@b^0,f,c
  7327   0013E6  2A13               	incf	___fladd@bexp^0,f,c
  7328   0013E8                     l1050:
  7329   0013E8  5012               	movf	___fladd@aexp^0,w,c
  7330   0013EA  5C13               	subwf	___fladd@bexp^0,w,c
  7331   0013EC  A0D8               	btfss	status,0,c
  7332   0013EE  EFFB  F009         	goto	u4561
  7333   0013F2  EFFD  F009         	goto	u4560
  7334   0013F6                     u4561:
  7335   0013F6  EFD7  F009         	goto	l1051
  7336   0013FA                     u4560:
  7337   0013FA                     l1049:
  7338   0013FA  BC11               	btfsc	___fladd@signs^0,6,c
  7339   0013FC  EF02  F00A         	goto	u4571
  7340   001400  EF04  F00A         	goto	u4570
  7341   001404                     u4571:
  7342   001404  EF44  F00A         	goto	l4840
  7343   001408                     u4570:
  7344   001408  5013               	movf	___fladd@bexp^0,w,c
  7345   00140A  A4D8               	btfss	status,2,c
  7346   00140C  EF0A  F00A         	goto	u4581
  7347   001410  EF0C  F00A         	goto	u4580
  7348   001414                     u4581:
  7349   001414  EF16  F00A         	goto	l4822
  7350   001418                     u4580:
  7351   001418  0E00               	movlw	0
  7352   00141A  6E05               	movwf	?___fladd^0,c
  7353   00141C  0E00               	movlw	0
  7354   00141E  6E06               	movwf	(?___fladd+1)^0,c
  7355   001420  0E00               	movlw	0
  7356   001422  6E07               	movwf	(?___fladd+2)^0,c
  7357   001424  0E00               	movlw	0
  7358   001426  6E08               	movwf	(?___fladd+3)^0,c
  7359   001428  EF65  F00B         	goto	l1058
  7360   00142C                     l4822:
  7361   00142C  5009               	movf	___fladd@a^0,w,c
  7362   00142E  2605               	addwf	___fladd@b^0,f,c
  7363   001430  500A               	movf	(___fladd@a+1)^0,w,c
  7364   001432  2206               	addwfc	(___fladd@b+1)^0,f,c
  7365   001434  500B               	movf	(___fladd@a+2)^0,w,c
  7366   001436  2207               	addwfc	(___fladd@b+2)^0,f,c
  7367   001438  500C               	movf	(___fladd@a+3)^0,w,c
  7368   00143A  2208               	addwfc	(___fladd@b+3)^0,f,c
  7369   00143C  A008               	btfss	(___fladd@b+3)^0,0,c
  7370   00143E  EF23  F00A         	goto	u4591
  7371   001442  EF25  F00A         	goto	u4590
  7372   001446                     u4591:
  7373   001446  EFD1  F00A         	goto	l4876
  7374   00144A                     u4590:
  7375   00144A  A014               	btfss	___fladd@grs^0,0,c
  7376   00144C  EF2A  F00A         	goto	u4601
  7377   001450  EF2C  F00A         	goto	u4600
  7378   001454                     u4601:
  7379   001454  EF32  F00A         	goto	l4830
  7380   001458                     u4600:
  7381   001458  90D8               	bcf	status,0,c
  7382   00145A  3014               	rrcf	___fladd@grs^0,w,c
  7383   00145C  0901               	iorlw	1
  7384   00145E  6E14               	movwf	___fladd@grs^0,c
  7385   001460  EF34  F00A         	goto	l4832
  7386   001464                     l4830:
  7387   001464  90D8               	bcf	status,0,c
  7388   001466  3214               	rrcf	___fladd@grs^0,f,c
  7389   001468                     l4832:
  7390   001468  A005               	btfss	___fladd@b^0,0,c
  7391   00146A  EF39  F00A         	goto	u4611
  7392   00146E  EF3B  F00A         	goto	u4610
  7393   001472                     u4611:
  7394   001472  EF3C  F00A         	goto	l4836
  7395   001476                     u4610:
  7396   001476  8E14               	bsf	___fladd@grs^0,7,c
  7397   001478                     l4836:
  7398   001478  3408               	rlcf	(___fladd@b+3)^0,w,c
  7399   00147A  3208               	rrcf	(___fladd@b+3)^0,f,c
  7400   00147C  3207               	rrcf	(___fladd@b+2)^0,f,c
  7401   00147E  3206               	rrcf	(___fladd@b+1)^0,f,c
  7402   001480  3205               	rrcf	___fladd@b^0,f,c
  7403   001482  2A13               	incf	___fladd@bexp^0,f,c
  7404   001484  EFD1  F00A         	goto	l4876
  7405   001488                     l4840:
  7406   001488  5009               	movf	___fladd@a^0,w,c
  7407   00148A  5C05               	subwf	___fladd@b^0,w,c
  7408   00148C  500A               	movf	(___fladd@a+1)^0,w,c
  7409   00148E  5806               	subwfb	(___fladd@b+1)^0,w,c
  7410   001490  500B               	movf	(___fladd@a+2)^0,w,c
  7411   001492  5807               	subwfb	(___fladd@b+2)^0,w,c
  7412   001494  5008               	movf	(___fladd@b+3)^0,w,c
  7413   001496  0A80               	xorlw	128
  7414   001498  6E0D               	movwf	??___fladd^0,c
  7415   00149A  500C               	movf	(___fladd@a+3)^0,w,c
  7416   00149C  0A80               	xorlw	128
  7417   00149E  580D               	subwfb	??___fladd^0,w,c
  7418   0014A0  B0D8               	btfsc	status,0,c
  7419   0014A2  EF55  F00A         	goto	u4621
  7420   0014A6  EF57  F00A         	goto	u4620
  7421   0014AA                     u4621:
  7422   0014AA  EF82  F00A         	goto	l4850
  7423   0014AE                     u4620:
  7424   0014AE  5005               	movf	___fladd@b^0,w,c
  7425   0014B0  5C09               	subwf	___fladd@a^0,w,c
  7426   0014B2  6E0D               	movwf	??___fladd^0,c
  7427   0014B4  5006               	movf	(___fladd@b+1)^0,w,c
  7428   0014B6  580A               	subwfb	(___fladd@a+1)^0,w,c
  7429   0014B8  6E0E               	movwf	(??___fladd+1)^0,c
  7430   0014BA  5007               	movf	(___fladd@b+2)^0,w,c
  7431   0014BC  580B               	subwfb	(___fladd@a+2)^0,w,c
  7432   0014BE  6E0F               	movwf	(??___fladd+2)^0,c
  7433   0014C0  5008               	movf	(___fladd@b+3)^0,w,c
  7434   0014C2  580C               	subwfb	(___fladd@a+3)^0,w,c
  7435   0014C4  6E10               	movwf	(??___fladd+3)^0,c
  7436   0014C6  0EFF               	movlw	255
  7437   0014C8  240D               	addwf	??___fladd^0,w,c
  7438   0014CA  6E05               	movwf	___fladd@b^0,c
  7439   0014CC  0EFF               	movlw	255
  7440   0014CE  200E               	addwfc	(??___fladd+1)^0,w,c
  7441   0014D0  6E06               	movwf	(___fladd@b+1)^0,c
  7442   0014D2  0EFF               	movlw	255
  7443   0014D4  200F               	addwfc	(??___fladd+2)^0,w,c
  7444   0014D6  6E07               	movwf	(___fladd@b+2)^0,c
  7445   0014D8  0EFF               	movlw	255
  7446   0014DA  2010               	addwfc	(??___fladd+3)^0,w,c
  7447   0014DC  6E08               	movwf	(___fladd@b+3)^0,c
  7448   0014DE  0E80               	movlw	128
  7449   0014E0  1A11               	xorwf	___fladd@signs^0,f,c
  7450   0014E2  6C14               	negf	___fladd@grs^0,c
  7451   0014E4  5014               	movf	___fladd@grs^0,w,c
  7452   0014E6  A4D8               	btfss	status,2,c
  7453   0014E8  EF78  F00A         	goto	u4631
  7454   0014EC  EF7A  F00A         	goto	u4630
  7455   0014F0                     u4631:
  7456   0014F0  EF8A  F00A         	goto	l1066
  7457   0014F4                     u4630:
  7458   0014F4  0E01               	movlw	1
  7459   0014F6  2605               	addwf	___fladd@b^0,f,c
  7460   0014F8  0E00               	movlw	0
  7461   0014FA  2206               	addwfc	(___fladd@b+1)^0,f,c
  7462   0014FC  2207               	addwfc	(___fladd@b+2)^0,f,c
  7463   0014FE  2208               	addwfc	(___fladd@b+3)^0,f,c
  7464   001500  EF8A  F00A         	goto	l1066
  7465   001504                     l4850:
  7466   001504  5009               	movf	___fladd@a^0,w,c
  7467   001506  5E05               	subwf	___fladd@b^0,f,c
  7468   001508  500A               	movf	(___fladd@a+1)^0,w,c
  7469   00150A  5A06               	subwfb	(___fladd@b+1)^0,f,c
  7470   00150C  500B               	movf	(___fladd@a+2)^0,w,c
  7471   00150E  5A07               	subwfb	(___fladd@b+2)^0,f,c
  7472   001510  500C               	movf	(___fladd@a+3)^0,w,c
  7473   001512  5A08               	subwfb	(___fladd@b+3)^0,f,c
  7474   001514                     l1066:
  7475   001514  5005               	movf	___fladd@b^0,w,c
  7476   001516  1006               	iorwf	(___fladd@b+1)^0,w,c
  7477   001518  1007               	iorwf	(___fladd@b+2)^0,w,c
  7478   00151A  1008               	iorwf	(___fladd@b+3)^0,w,c
  7479   00151C  A4D8               	btfss	status,2,c
  7480   00151E  EF93  F00A         	goto	u4641
  7481   001522  EF95  F00A         	goto	u4640
  7482   001526                     u4641:
  7483   001526  EFCA  F00A         	goto	l4874
  7484   00152A                     u4640:
  7485   00152A  5014               	movf	___fladd@grs^0,w,c
  7486   00152C  A4D8               	btfss	status,2,c
  7487   00152E  EF9B  F00A         	goto	u4651
  7488   001532  EF9D  F00A         	goto	u4650
  7489   001536                     u4651:
  7490   001536  EFCA  F00A         	goto	l4874
  7491   00153A                     u4650:
  7492   00153A  0E00               	movlw	0
  7493   00153C  6E05               	movwf	?___fladd^0,c
  7494   00153E  0E00               	movlw	0
  7495   001540  6E06               	movwf	(?___fladd+1)^0,c
  7496   001542  0E00               	movlw	0
  7497   001544  6E07               	movwf	(?___fladd+2)^0,c
  7498   001546  0E00               	movlw	0
  7499   001548  6E08               	movwf	(?___fladd+3)^0,c
  7500   00154A  EF65  F00B         	goto	l1058
  7501   00154E                     l4858:
  7502   00154E  90D8               	bcf	status,0,c
  7503   001550  3605               	rlcf	___fladd@b^0,f,c
  7504   001552  3606               	rlcf	(___fladd@b+1)^0,f,c
  7505   001554  3607               	rlcf	(___fladd@b+2)^0,f,c
  7506   001556  3608               	rlcf	(___fladd@b+3)^0,f,c
  7507   001558  AE14               	btfss	___fladd@grs^0,7,c
  7508   00155A  EFB1  F00A         	goto	u4661
  7509   00155E  EFB3  F00A         	goto	u4660
  7510   001562                     u4661:
  7511   001562  EFB4  F00A         	goto	l4864
  7512   001566                     u4660:
  7513   001566  8005               	bsf	___fladd@b^0,0,c
  7514   001568                     l4864:
  7515   001568  A014               	btfss	___fladd@grs^0,0,c
  7516   00156A  EFB9  F00A         	goto	u4671
  7517   00156E  EFBB  F00A         	goto	u4670
  7518   001572                     u4671:
  7519   001572  EFBF  F00A         	goto	l4868
  7520   001576                     u4670:
  7521   001576  80D8               	bsf	status,0,c
  7522   001578  3614               	rlcf	___fladd@grs^0,f,c
  7523   00157A  EFC1  F00A         	goto	l4870
  7524   00157E                     l4868:
  7525   00157E  90D8               	bcf	status,0,c
  7526   001580  3614               	rlcf	___fladd@grs^0,f,c
  7527   001582                     l4870:
  7528   001582  5013               	movf	___fladd@bexp^0,w,c
  7529   001584  B4D8               	btfsc	status,2,c
  7530   001586  EFC7  F00A         	goto	u4681
  7531   00158A  EFC9  F00A         	goto	u4680
  7532   00158E                     u4681:
  7533   00158E  EFCA  F00A         	goto	l4874
  7534   001592                     u4680:
  7535   001592  0613               	decf	___fladd@bexp^0,f,c
  7536   001594                     l4874:
  7537   001594  AE07               	btfss	(___fladd@b+2)^0,7,c
  7538   001596  EFCF  F00A         	goto	u4691
  7539   00159A  EFD1  F00A         	goto	u4690
  7540   00159E                     u4691:
  7541   00159E  EFA7  F00A         	goto	l4858
  7542   0015A2                     u4690:
  7543   0015A2                     l4876:
  7544   0015A2  0E00               	movlw	0
  7545   0015A4  6E12               	movwf	___fladd@aexp^0,c
  7546   0015A6  AE14               	btfss	___fladd@grs^0,7,c
  7547   0015A8  EFD8  F00A         	goto	u4701
  7548   0015AC  EFDA  F00A         	goto	u4700
  7549   0015B0                     u4701:
  7550   0015B0  EFF2  F00A         	goto	l1075
  7551   0015B4                     u4700:
  7552   0015B4  C014  F00D         	movff	___fladd@grs,??___fladd
  7553   0015B8  0E7F               	movlw	127
  7554   0015BA  160D               	andwf	??___fladd^0,f,c
  7555   0015BC  B4D8               	btfsc	status,2,c
  7556   0015BE  EFE3  F00A         	goto	u4711
  7557   0015C2  EFE5  F00A         	goto	u4710
  7558   0015C6                     u4711:
  7559   0015C6  EFE9  F00A         	goto	l1076
  7560   0015CA                     u4710:
  7561   0015CA                     l4882:
  7562   0015CA  0E01               	movlw	1
  7563   0015CC  6E12               	movwf	___fladd@aexp^0,c
  7564   0015CE  EFF2  F00A         	goto	l1075
  7565   0015D2                     l1076:
  7566   0015D2  A005               	btfss	___fladd@b^0,0,c
  7567   0015D4  EFEE  F00A         	goto	u4721
  7568   0015D8  EFF0  F00A         	goto	u4720
  7569   0015DC                     u4721:
  7570   0015DC  EFF2  F00A         	goto	l1075
  7571   0015E0                     u4720:
  7572   0015E0  EFE5  F00A         	goto	l4882
  7573   0015E4                     l1075:
  7574   0015E4  5012               	movf	___fladd@aexp^0,w,c
  7575   0015E6  B4D8               	btfsc	status,2,c
  7576   0015E8  EFF8  F00A         	goto	u4731
  7577   0015EC  EFFA  F00A         	goto	u4730
  7578   0015F0                     u4731:
  7579   0015F0  EF25  F00B         	goto	l4894
  7580   0015F4                     u4730:
  7581   0015F4  0E01               	movlw	1
  7582   0015F6  2605               	addwf	___fladd@b^0,f,c
  7583   0015F8  0E00               	movlw	0
  7584   0015FA  2206               	addwfc	(___fladd@b+1)^0,f,c
  7585   0015FC  2207               	addwfc	(___fladd@b+2)^0,f,c
  7586   0015FE  2208               	addwfc	(___fladd@b+3)^0,f,c
  7587   001600  A008               	btfss	(___fladd@b+3)^0,0,c
  7588   001602  EF05  F00B         	goto	u4741
  7589   001606  EF07  F00B         	goto	u4740
  7590   00160A                     u4741:
  7591   00160A  EF25  F00B         	goto	l4894
  7592   00160E                     u4740:
  7593   00160E  C005  F00D         	movff	___fladd@b,??___fladd
  7594   001612  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  7595   001616  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  7596   00161A  C008  F010         	movff	___fladd@b+3,??___fladd+3
  7597   00161E  3410               	rlcf	(??___fladd+3)^0,w,c
  7598   001620  3210               	rrcf	(??___fladd+3)^0,f,c
  7599   001622  320F               	rrcf	(??___fladd+2)^0,f,c
  7600   001624  320E               	rrcf	(??___fladd+1)^0,f,c
  7601   001626  320D               	rrcf	??___fladd^0,f,c
  7602   001628  C00D  F005         	movff	??___fladd,___fladd@b
  7603   00162C  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  7604   001630  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  7605   001634  C010  F008         	movff	??___fladd+3,___fladd@b+3
  7606   001638  2813               	incf	___fladd@bexp^0,w,c
  7607   00163A  B4D8               	btfsc	status,2,c
  7608   00163C  EF22  F00B         	goto	u4751
  7609   001640  EF24  F00B         	goto	u4750
  7610   001644                     u4751:
  7611   001644  EF25  F00B         	goto	l4894
  7612   001648                     u4750:
  7613   001648  2A13               	incf	___fladd@bexp^0,f,c
  7614   00164A                     l4894:
  7615   00164A  2813               	incf	___fladd@bexp^0,w,c
  7616   00164C  B4D8               	btfsc	status,2,c
  7617   00164E  EF2B  F00B         	goto	u4761
  7618   001652  EF2D  F00B         	goto	u4760
  7619   001656                     u4761:
  7620   001656  EF35  F00B         	goto	l4898
  7621   00165A                     u4760:
  7622   00165A  5013               	movf	___fladd@bexp^0,w,c
  7623   00165C  A4D8               	btfss	status,2,c
  7624   00165E  EF33  F00B         	goto	u4771
  7625   001662  EF35  F00B         	goto	u4770
  7626   001666                     u4771:
  7627   001666  EF47  F00B         	goto	l4902
  7628   00166A                     u4770:
  7629   00166A                     l4898:
  7630   00166A  0E00               	movlw	0
  7631   00166C  6E05               	movwf	___fladd@b^0,c
  7632   00166E  0E00               	movlw	0
  7633   001670  6E06               	movwf	(___fladd@b+1)^0,c
  7634   001672  0E00               	movlw	0
  7635   001674  6E07               	movwf	(___fladd@b+2)^0,c
  7636   001676  0E00               	movlw	0
  7637   001678  6E08               	movwf	(___fladd@b+3)^0,c
  7638   00167A  5013               	movf	___fladd@bexp^0,w,c
  7639   00167C  A4D8               	btfss	status,2,c
  7640   00167E  EF43  F00B         	goto	u4781
  7641   001682  EF45  F00B         	goto	u4780
  7642   001686                     u4781:
  7643   001686  EF47  F00B         	goto	l4902
  7644   00168A                     u4780:
  7645   00168A  0E00               	movlw	0
  7646   00168C  6E11               	movwf	___fladd@signs^0,c
  7647   00168E                     l4902:
  7648   00168E  A013               	btfss	___fladd@bexp^0,0,c
  7649   001690  EF4C  F00B         	goto	u4791
  7650   001694  EF4E  F00B         	goto	u4790
  7651   001698                     u4791:
  7652   001698  EF51  F00B         	goto	l4906
  7653   00169C                     u4790:
  7654   00169C  8E07               	bsf	(___fladd@b+2)^0,7,c
  7655   00169E  EF52  F00B         	goto	l4908
  7656   0016A2                     l4906:
  7657   0016A2  9E07               	bcf	(___fladd@b+2)^0,7,c
  7658   0016A4                     l4908:
  7659   0016A4  90D8               	bcf	status,0,c
  7660   0016A6  3013               	rrcf	___fladd@bexp^0,w,c
  7661   0016A8  6E08               	movwf	(___fladd@b+3)^0,c
  7662   0016AA  AE11               	btfss	___fladd@signs^0,7,c
  7663   0016AC  EF5A  F00B         	goto	u4801
  7664   0016B0  EF5C  F00B         	goto	u4800
  7665   0016B4                     u4801:
  7666   0016B4  EF5D  F00B         	goto	l4914
  7667   0016B8                     u4800:
  7668   0016B8  8E08               	bsf	(___fladd@b+3)^0,7,c
  7669   0016BA                     l4914:
  7670   0016BA  C005  F005         	movff	___fladd@b,?___fladd
  7671   0016BE  C006  F006         	movff	___fladd@b+1,?___fladd+1
  7672   0016C2  C007  F007         	movff	___fladd@b+2,?___fladd+2
  7673   0016C6  C008  F008         	movff	___fladd@b+3,?___fladd+3
  7674   0016CA                     l1058:
  7675   0016CA  0012               	return		;funcret
  7676   0016CC                     __end_of___fladd:
  7677                           	callstack 0
  7678                           
  7679 ;; *************** function ___flmul *****************
  7680 ;; Defined at:
  7681 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  b               4   18[COMRAM] unsigned char 
  7684 ;;  a               4   22[COMRAM] unsigned char 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  prod            4   37[COMRAM] struct .
  7687 ;;  grs             4   32[COMRAM] unsigned long 
  7688 ;;  temp            2   41[COMRAM] struct .
  7689 ;;  bexp            1   36[COMRAM] unsigned char 
  7690 ;;  aexp            1   31[COMRAM] unsigned char 
  7691 ;;  sign            1   30[COMRAM] unsigned char 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  4   18[COMRAM] unsigned char 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, prodl, prodh
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7701 ;;      Params:         8       0       0       0       0       0       0       0       0
  7702 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7704 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:       25 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 4
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_get_corriente_AC
  7712 ;;		_efgtoa
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text42
  7717   0016CC                     __ptext42:
  7718                           	callstack 0
  7719   0016CC                     ___flmul:
  7720                           	callstack 22
  7721   0016CC  5016               	movf	(___flmul@b+3)^0,w,c
  7722   0016CE  0B80               	andlw	128
  7723   0016D0  6E1F               	movwf	___flmul@sign^0,c
  7724   0016D2  5016               	movf	(___flmul@b+3)^0,w,c
  7725   0016D4  2416               	addwf	(___flmul@b+3)^0,w,c
  7726   0016D6  6E25               	movwf	___flmul@bexp^0,c
  7727   0016D8  AE15               	btfss	(___flmul@b+2)^0,7,c
  7728   0016DA  EF71  F00B         	goto	u5081
  7729   0016DE  EF73  F00B         	goto	u5080
  7730   0016E2                     u5081:
  7731   0016E2  EF74  F00B         	goto	l5126
  7732   0016E6                     u5080:
  7733   0016E6  8025               	bsf	___flmul@bexp^0,0,c
  7734   0016E8                     l5126:
  7735   0016E8  5025               	movf	___flmul@bexp^0,w,c
  7736   0016EA  B4D8               	btfsc	status,2,c
  7737   0016EC  EF7A  F00B         	goto	u5091
  7738   0016F0  EF7C  F00B         	goto	u5090
  7739   0016F4                     u5091:
  7740   0016F4  EF8F  F00B         	goto	l5134
  7741   0016F8                     u5090:
  7742   0016F8  2825               	incf	___flmul@bexp^0,w,c
  7743   0016FA  A4D8               	btfss	status,2,c
  7744   0016FC  EF82  F00B         	goto	u5101
  7745   001700  EF84  F00B         	goto	u5100
  7746   001704                     u5101:
  7747   001704  EF8C  F00B         	goto	l5132
  7748   001708                     u5100:
  7749   001708  0E00               	movlw	0
  7750   00170A  6E13               	movwf	___flmul@b^0,c
  7751   00170C  0E00               	movlw	0
  7752   00170E  6E14               	movwf	(___flmul@b+1)^0,c
  7753   001710  0E00               	movlw	0
  7754   001712  6E15               	movwf	(___flmul@b+2)^0,c
  7755   001714  0E00               	movlw	0
  7756   001716  6E16               	movwf	(___flmul@b+3)^0,c
  7757   001718                     l5132:
  7758   001718  8E15               	bsf	(___flmul@b+2)^0,7,c
  7759   00171A  EF97  F00B         	goto	l5136
  7760   00171E                     l5134:
  7761   00171E  0E00               	movlw	0
  7762   001720  6E13               	movwf	___flmul@b^0,c
  7763   001722  0E00               	movlw	0
  7764   001724  6E14               	movwf	(___flmul@b+1)^0,c
  7765   001726  0E00               	movlw	0
  7766   001728  6E15               	movwf	(___flmul@b+2)^0,c
  7767   00172A  0E00               	movlw	0
  7768   00172C  6E16               	movwf	(___flmul@b+3)^0,c
  7769   00172E                     l5136:
  7770   00172E  501A               	movf	(___flmul@a+3)^0,w,c
  7771   001730  0B80               	andlw	128
  7772   001732  1A1F               	xorwf	___flmul@sign^0,f,c
  7773   001734  501A               	movf	(___flmul@a+3)^0,w,c
  7774   001736  241A               	addwf	(___flmul@a+3)^0,w,c
  7775   001738  6E20               	movwf	___flmul@aexp^0,c
  7776   00173A  AE19               	btfss	(___flmul@a+2)^0,7,c
  7777   00173C  EFA2  F00B         	goto	u5111
  7778   001740  EFA4  F00B         	goto	u5110
  7779   001744                     u5111:
  7780   001744  EFA5  F00B         	goto	l5144
  7781   001748                     u5110:
  7782   001748  8020               	bsf	___flmul@aexp^0,0,c
  7783   00174A                     l5144:
  7784   00174A  5020               	movf	___flmul@aexp^0,w,c
  7785   00174C  B4D8               	btfsc	status,2,c
  7786   00174E  EFAB  F00B         	goto	u5121
  7787   001752  EFAD  F00B         	goto	u5120
  7788   001756                     u5121:
  7789   001756  EFC0  F00B         	goto	l5152
  7790   00175A                     u5120:
  7791   00175A  2820               	incf	___flmul@aexp^0,w,c
  7792   00175C  A4D8               	btfss	status,2,c
  7793   00175E  EFB3  F00B         	goto	u5131
  7794   001762  EFB5  F00B         	goto	u5130
  7795   001766                     u5131:
  7796   001766  EFBD  F00B         	goto	l5150
  7797   00176A                     u5130:
  7798   00176A  0E00               	movlw	0
  7799   00176C  6E17               	movwf	___flmul@a^0,c
  7800   00176E  0E00               	movlw	0
  7801   001770  6E18               	movwf	(___flmul@a+1)^0,c
  7802   001772  0E00               	movlw	0
  7803   001774  6E19               	movwf	(___flmul@a+2)^0,c
  7804   001776  0E00               	movlw	0
  7805   001778  6E1A               	movwf	(___flmul@a+3)^0,c
  7806   00177A                     l5150:
  7807   00177A  8E19               	bsf	(___flmul@a+2)^0,7,c
  7808   00177C  EFC8  F00B         	goto	l1135
  7809   001780                     l5152:
  7810   001780  0E00               	movlw	0
  7811   001782  6E17               	movwf	___flmul@a^0,c
  7812   001784  0E00               	movlw	0
  7813   001786  6E18               	movwf	(___flmul@a+1)^0,c
  7814   001788  0E00               	movlw	0
  7815   00178A  6E19               	movwf	(___flmul@a+2)^0,c
  7816   00178C  0E00               	movlw	0
  7817   00178E  6E1A               	movwf	(___flmul@a+3)^0,c
  7818   001790                     l1135:
  7819   001790  5020               	movf	___flmul@aexp^0,w,c
  7820   001792  B4D8               	btfsc	status,2,c
  7821   001794  EFCE  F00B         	goto	u5141
  7822   001798  EFD0  F00B         	goto	u5140
  7823   00179C                     u5141:
  7824   00179C  EFD8  F00B         	goto	l5156
  7825   0017A0                     u5140:
  7826   0017A0  5025               	movf	___flmul@bexp^0,w,c
  7827   0017A2  A4D8               	btfss	status,2,c
  7828   0017A4  EFD6  F00B         	goto	u5151
  7829   0017A8  EFD8  F00B         	goto	u5150
  7830   0017AC                     u5151:
  7831   0017AC  EFE2  F00B         	goto	l5160
  7832   0017B0                     u5150:
  7833   0017B0                     l5156:
  7834   0017B0  0E00               	movlw	0
  7835   0017B2  6E13               	movwf	?___flmul^0,c
  7836   0017B4  0E00               	movlw	0
  7837   0017B6  6E14               	movwf	(?___flmul+1)^0,c
  7838   0017B8  0E00               	movlw	0
  7839   0017BA  6E15               	movwf	(?___flmul+2)^0,c
  7840   0017BC  0E00               	movlw	0
  7841   0017BE  6E16               	movwf	(?___flmul+3)^0,c
  7842   0017C0  EF7A  F00D         	goto	l1139
  7843   0017C4                     l5160:
  7844   0017C4  5019               	movf	(___flmul@a+2)^0,w,c
  7845   0017C6  0213               	mulwf	___flmul@b^0,c
  7846   0017C8  CFF3 F02A          	movff	prodl,___flmul@temp
  7847   0017CC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7848   0017D0  502A               	movf	___flmul@temp^0,w,c
  7849   0017D2  6E21               	movwf	___flmul@grs^0,c
  7850   0017D4  6A22               	clrf	(___flmul@grs+1)^0,c
  7851   0017D6  6A23               	clrf	(___flmul@grs+2)^0,c
  7852   0017D8  6A24               	clrf	(___flmul@grs+3)^0,c
  7853   0017DA  502B               	movf	(___flmul@temp+1)^0,w,c
  7854   0017DC  6E26               	movwf	___flmul@prod^0,c
  7855   0017DE  6A27               	clrf	(___flmul@prod+1)^0,c
  7856   0017E0  6A28               	clrf	(___flmul@prod+2)^0,c
  7857   0017E2  6A29               	clrf	(___flmul@prod+3)^0,c
  7858   0017E4  5018               	movf	(___flmul@a+1)^0,w,c
  7859   0017E6  0214               	mulwf	(___flmul@b+1)^0,c
  7860   0017E8  CFF3 F02A          	movff	prodl,___flmul@temp
  7861   0017EC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7862   0017F0  502A               	movf	___flmul@temp^0,w,c
  7863   0017F2  2621               	addwf	___flmul@grs^0,f,c
  7864   0017F4  0E00               	movlw	0
  7865   0017F6  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7866   0017F8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7867   0017FA  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7868   0017FC  502B               	movf	(___flmul@temp+1)^0,w,c
  7869   0017FE  2626               	addwf	___flmul@prod^0,f,c
  7870   001800  0E00               	movlw	0
  7871   001802  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7872   001804  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7873   001806  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7874   001808  5017               	movf	___flmul@a^0,w,c
  7875   00180A  0215               	mulwf	(___flmul@b+2)^0,c
  7876   00180C  CFF3 F02A          	movff	prodl,___flmul@temp
  7877   001810  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7878   001814  502A               	movf	___flmul@temp^0,w,c
  7879   001816  2621               	addwf	___flmul@grs^0,f,c
  7880   001818  0E00               	movlw	0
  7881   00181A  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7882   00181C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7883   00181E  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7884   001820  502B               	movf	(___flmul@temp+1)^0,w,c
  7885   001822  2626               	addwf	___flmul@prod^0,f,c
  7886   001824  0E00               	movlw	0
  7887   001826  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7888   001828  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7889   00182A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7890   00182C  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7891   001830  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7892   001834  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7893   001838  6A21               	clrf	___flmul@grs^0,c
  7894   00183A  5017               	movf	___flmul@a^0,w,c
  7895   00183C  0214               	mulwf	(___flmul@b+1)^0,c
  7896   00183E  CFF3 F02A          	movff	prodl,___flmul@temp
  7897   001842  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7898   001846  502A               	movf	___flmul@temp^0,w,c
  7899   001848  2621               	addwf	___flmul@grs^0,f,c
  7900   00184A  502B               	movf	(___flmul@temp+1)^0,w,c
  7901   00184C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7902   00184E  0E00               	movlw	0
  7903   001850  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7904   001852  0E00               	movlw	0
  7905   001854  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7906   001856  5018               	movf	(___flmul@a+1)^0,w,c
  7907   001858  0213               	mulwf	___flmul@b^0,c
  7908   00185A  CFF3 F02A          	movff	prodl,___flmul@temp
  7909   00185E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7910   001862  502A               	movf	___flmul@temp^0,w,c
  7911   001864  2621               	addwf	___flmul@grs^0,f,c
  7912   001866  502B               	movf	(___flmul@temp+1)^0,w,c
  7913   001868  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7914   00186A  0E00               	movlw	0
  7915   00186C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7916   00186E  0E00               	movlw	0
  7917   001870  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7918   001872  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7919   001876  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7920   00187A  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7921   00187E  6A21               	clrf	___flmul@grs^0,c
  7922   001880  5017               	movf	___flmul@a^0,w,c
  7923   001882  0213               	mulwf	___flmul@b^0,c
  7924   001884  CFF3 F02A          	movff	prodl,___flmul@temp
  7925   001888  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7926   00188C  502A               	movf	___flmul@temp^0,w,c
  7927   00188E  2621               	addwf	___flmul@grs^0,f,c
  7928   001890  502B               	movf	(___flmul@temp+1)^0,w,c
  7929   001892  2222               	addwfc	(___flmul@grs+1)^0,f,c
  7930   001894  0E00               	movlw	0
  7931   001896  2223               	addwfc	(___flmul@grs+2)^0,f,c
  7932   001898  0E00               	movlw	0
  7933   00189A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  7934   00189C  5019               	movf	(___flmul@a+2)^0,w,c
  7935   00189E  0214               	mulwf	(___flmul@b+1)^0,c
  7936   0018A0  CFF3 F02A          	movff	prodl,___flmul@temp
  7937   0018A4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7938   0018A8  502A               	movf	___flmul@temp^0,w,c
  7939   0018AA  2626               	addwf	___flmul@prod^0,f,c
  7940   0018AC  502B               	movf	(___flmul@temp+1)^0,w,c
  7941   0018AE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7942   0018B0  0E00               	movlw	0
  7943   0018B2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7944   0018B4  0E00               	movlw	0
  7945   0018B6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7946   0018B8  5018               	movf	(___flmul@a+1)^0,w,c
  7947   0018BA  0215               	mulwf	(___flmul@b+2)^0,c
  7948   0018BC  CFF3 F02A          	movff	prodl,___flmul@temp
  7949   0018C0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7950   0018C4  502A               	movf	___flmul@temp^0,w,c
  7951   0018C6  2626               	addwf	___flmul@prod^0,f,c
  7952   0018C8  502B               	movf	(___flmul@temp+1)^0,w,c
  7953   0018CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7954   0018CC  0E00               	movlw	0
  7955   0018CE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7956   0018D0  0E00               	movlw	0
  7957   0018D2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7958   0018D4  5019               	movf	(___flmul@a+2)^0,w,c
  7959   0018D6  0215               	mulwf	(___flmul@b+2)^0,c
  7960   0018D8  CFF3 F02A          	movff	prodl,___flmul@temp
  7961   0018DC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7962   0018E0  502A               	movf	___flmul@temp^0,w,c
  7963   0018E2  6E1B               	movwf	??___flmul^0,c
  7964   0018E4  502B               	movf	(___flmul@temp+1)^0,w,c
  7965   0018E6  6E1C               	movwf	(??___flmul+1)^0,c
  7966   0018E8  6A1D               	clrf	(??___flmul+2)^0,c
  7967   0018EA  6A1E               	clrf	(??___flmul+3)^0,c
  7968   0018EC  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  7969   0018F0  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  7970   0018F4  C01B  F01C         	movff	??___flmul,??___flmul+1
  7971   0018F8  6A1B               	clrf	??___flmul^0,c
  7972   0018FA  501B               	movf	??___flmul^0,w,c
  7973   0018FC  2626               	addwf	___flmul@prod^0,f,c
  7974   0018FE  501C               	movf	(??___flmul+1)^0,w,c
  7975   001900  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7976   001902  501D               	movf	(??___flmul+2)^0,w,c
  7977   001904  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7978   001906  501E               	movf	(??___flmul+3)^0,w,c
  7979   001908  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7980   00190A  C021  F01B         	movff	___flmul@grs,??___flmul
  7981   00190E  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  7982   001912  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  7983   001916  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  7984   00191A  0E19               	movlw	25
  7985   00191C  EF95  F00C         	goto	u5160
  7986   001920                     u5165:
  7987   001920  90D8               	bcf	status,0,c
  7988   001922  321E               	rrcf	(??___flmul+3)^0,f,c
  7989   001924  321D               	rrcf	(??___flmul+2)^0,f,c
  7990   001926  321C               	rrcf	(??___flmul+1)^0,f,c
  7991   001928  321B               	rrcf	??___flmul^0,f,c
  7992   00192A                     u5160:
  7993   00192A  2EE8               	decfsz	wreg,f,c
  7994   00192C  EF90  F00C         	goto	u5165
  7995   001930  501B               	movf	??___flmul^0,w,c
  7996   001932  2626               	addwf	___flmul@prod^0,f,c
  7997   001934  501C               	movf	(??___flmul+1)^0,w,c
  7998   001936  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7999   001938  501D               	movf	(??___flmul+2)^0,w,c
  8000   00193A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8001   00193C  501E               	movf	(??___flmul+3)^0,w,c
  8002   00193E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8003   001940  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8004   001944  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8005   001948  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8006   00194C  6A21               	clrf	___flmul@grs^0,c
  8007   00194E  5020               	movf	___flmul@aexp^0,w,c
  8008   001950  C025  F01B         	movff	___flmul@bexp,??___flmul
  8009   001954  6A1C               	clrf	(??___flmul+1)^0,c
  8010   001956  261B               	addwf	??___flmul^0,f,c
  8011   001958  0E00               	movlw	0
  8012   00195A  221C               	addwfc	(??___flmul+1)^0,f,c
  8013   00195C  0E82               	movlw	130
  8014   00195E  241B               	addwf	??___flmul^0,w,c
  8015   001960  6E2A               	movwf	___flmul@temp^0,c
  8016   001962  0EFF               	movlw	255
  8017   001964  201C               	addwfc	(??___flmul+1)^0,w,c
  8018   001966  6E2B               	movwf	(___flmul@temp+1)^0,c
  8019   001968  EFCB  F00C         	goto	l5208
  8020   00196C                     l5202:
  8021   00196C  90D8               	bcf	status,0,c
  8022   00196E  3626               	rlcf	___flmul@prod^0,f,c
  8023   001970  3627               	rlcf	(___flmul@prod+1)^0,f,c
  8024   001972  3628               	rlcf	(___flmul@prod+2)^0,f,c
  8025   001974  3629               	rlcf	(___flmul@prod+3)^0,f,c
  8026   001976  AE24               	btfss	(___flmul@grs+3)^0,7,c
  8027   001978  EFC0  F00C         	goto	u5171
  8028   00197C  EFC2  F00C         	goto	u5170
  8029   001980                     u5171:
  8030   001980  EFC3  F00C         	goto	l1142
  8031   001984                     u5170:
  8032   001984  8026               	bsf	___flmul@prod^0,0,c
  8033   001986                     l1142:
  8034   001986  90D8               	bcf	status,0,c
  8035   001988  3621               	rlcf	___flmul@grs^0,f,c
  8036   00198A  3622               	rlcf	(___flmul@grs+1)^0,f,c
  8037   00198C  3623               	rlcf	(___flmul@grs+2)^0,f,c
  8038   00198E  3624               	rlcf	(___flmul@grs+3)^0,f,c
  8039   001990  062A               	decf	___flmul@temp^0,f,c
  8040   001992  A0D8               	btfss	status,0,c
  8041   001994  062B               	decf	(___flmul@temp+1)^0,f,c
  8042   001996                     l5208:
  8043   001996  AE28               	btfss	(___flmul@prod+2)^0,7,c
  8044   001998  EFD0  F00C         	goto	u5181
  8045   00199C  EFD2  F00C         	goto	u5180
  8046   0019A0                     u5181:
  8047   0019A0  EFB6  F00C         	goto	l5202
  8048   0019A4                     u5180:
  8049   0019A4  0E00               	movlw	0
  8050   0019A6  6E20               	movwf	___flmul@aexp^0,c
  8051   0019A8  AE24               	btfss	(___flmul@grs+3)^0,7,c
  8052   0019AA  EFD9  F00C         	goto	u5191
  8053   0019AE  EFDB  F00C         	goto	u5190
  8054   0019B2                     u5191:
  8055   0019B2  EFFF  F00C         	goto	l1144
  8056   0019B6                     u5190:
  8057   0019B6  0EFF               	movlw	255
  8058   0019B8  1421               	andwf	___flmul@grs^0,w,c
  8059   0019BA  6E1B               	movwf	??___flmul^0,c
  8060   0019BC  0EFF               	movlw	255
  8061   0019BE  1422               	andwf	(___flmul@grs+1)^0,w,c
  8062   0019C0  6E1C               	movwf	(??___flmul+1)^0,c
  8063   0019C2  0EFF               	movlw	255
  8064   0019C4  1423               	andwf	(___flmul@grs+2)^0,w,c
  8065   0019C6  6E1D               	movwf	(??___flmul+2)^0,c
  8066   0019C8  0E7F               	movlw	127
  8067   0019CA  1424               	andwf	(___flmul@grs+3)^0,w,c
  8068   0019CC  6E1E               	movwf	(??___flmul+3)^0,c
  8069   0019CE  501B               	movf	??___flmul^0,w,c
  8070   0019D0  101C               	iorwf	(??___flmul+1)^0,w,c
  8071   0019D2  101D               	iorwf	(??___flmul+2)^0,w,c
  8072   0019D4  101E               	iorwf	(??___flmul+3)^0,w,c
  8073   0019D6  B4D8               	btfsc	status,2,c
  8074   0019D8  EFF0  F00C         	goto	u5201
  8075   0019DC  EFF2  F00C         	goto	u5200
  8076   0019E0                     u5201:
  8077   0019E0  EFF6  F00C         	goto	l1145
  8078   0019E4                     u5200:
  8079   0019E4                     l5216:
  8080   0019E4  0E01               	movlw	1
  8081   0019E6  6E20               	movwf	___flmul@aexp^0,c
  8082   0019E8  EFFF  F00C         	goto	l1144
  8083   0019EC                     l1145:
  8084   0019EC  A026               	btfss	___flmul@prod^0,0,c
  8085   0019EE  EFFB  F00C         	goto	u5211
  8086   0019F2  EFFD  F00C         	goto	u5210
  8087   0019F6                     u5211:
  8088   0019F6  EFFF  F00C         	goto	l1144
  8089   0019FA                     u5210:
  8090   0019FA  EFF2  F00C         	goto	l5216
  8091   0019FE                     l1144:
  8092   0019FE  5020               	movf	___flmul@aexp^0,w,c
  8093   001A00  B4D8               	btfsc	status,2,c
  8094   001A02  EF05  F00D         	goto	u5221
  8095   001A06  EF07  F00D         	goto	u5220
  8096   001A0A                     u5221:
  8097   001A0A  EF2B  F00D         	goto	l5228
  8098   001A0E                     u5220:
  8099   001A0E  0E01               	movlw	1
  8100   001A10  2626               	addwf	___flmul@prod^0,f,c
  8101   001A12  0E00               	movlw	0
  8102   001A14  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8103   001A16  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8104   001A18  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8105   001A1A  A029               	btfss	(___flmul@prod+3)^0,0,c
  8106   001A1C  EF12  F00D         	goto	u5231
  8107   001A20  EF14  F00D         	goto	u5230
  8108   001A24                     u5231:
  8109   001A24  EF2B  F00D         	goto	l5228
  8110   001A28                     u5230:
  8111   001A28  C026  F01B         	movff	___flmul@prod,??___flmul
  8112   001A2C  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  8113   001A30  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  8114   001A34  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  8115   001A38  341E               	rlcf	(??___flmul+3)^0,w,c
  8116   001A3A  321E               	rrcf	(??___flmul+3)^0,f,c
  8117   001A3C  321D               	rrcf	(??___flmul+2)^0,f,c
  8118   001A3E  321C               	rrcf	(??___flmul+1)^0,f,c
  8119   001A40  321B               	rrcf	??___flmul^0,f,c
  8120   001A42  C01B  F026         	movff	??___flmul,___flmul@prod
  8121   001A46  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  8122   001A4A  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  8123   001A4E  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  8124   001A52  4A2A               	infsnz	___flmul@temp^0,f,c
  8125   001A54  2A2B               	incf	(___flmul@temp+1)^0,f,c
  8126   001A56                     l5228:
  8127   001A56  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  8128   001A58  EF36  F00D         	goto	u5241
  8129   001A5C  502B               	movf	(___flmul@temp+1)^0,w,c
  8130   001A5E  E108               	bnz	u5240
  8131   001A60  282A               	incf	___flmul@temp^0,w,c
  8132   001A62  A0D8               	btfss	status,0,c
  8133   001A64  EF36  F00D         	goto	u5241
  8134   001A68  EF38  F00D         	goto	u5240
  8135   001A6C                     u5241:
  8136   001A6C  EF42  F00D         	goto	l5232
  8137   001A70                     u5240:
  8138   001A70  0E00               	movlw	0
  8139   001A72  6E26               	movwf	___flmul@prod^0,c
  8140   001A74  0E00               	movlw	0
  8141   001A76  6E27               	movwf	(___flmul@prod+1)^0,c
  8142   001A78  0E80               	movlw	128
  8143   001A7A  6E28               	movwf	(___flmul@prod+2)^0,c
  8144   001A7C  0E7F               	movlw	127
  8145   001A7E  6E29               	movwf	(___flmul@prod+3)^0,c
  8146   001A80  EF70  F00D         	goto	l5244
  8147   001A84                     l5232:
  8148   001A84  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  8149   001A86  EF4F  F00D         	goto	u5250
  8150   001A8A  502B               	movf	(___flmul@temp+1)^0,w,c
  8151   001A8C  E106               	bnz	u5251
  8152   001A8E  042A               	decf	___flmul@temp^0,w,c
  8153   001A90  B0D8               	btfsc	status,0,c
  8154   001A92  EF4D  F00D         	goto	u5251
  8155   001A96  EF4F  F00D         	goto	u5250
  8156   001A9A                     u5251:
  8157   001A9A  EF5B  F00D         	goto	l1152
  8158   001A9E                     u5250:
  8159   001A9E  0E00               	movlw	0
  8160   001AA0  6E26               	movwf	___flmul@prod^0,c
  8161   001AA2  0E00               	movlw	0
  8162   001AA4  6E27               	movwf	(___flmul@prod+1)^0,c
  8163   001AA6  0E00               	movlw	0
  8164   001AA8  6E28               	movwf	(___flmul@prod+2)^0,c
  8165   001AAA  0E00               	movlw	0
  8166   001AAC  6E29               	movwf	(___flmul@prod+3)^0,c
  8167   001AAE  0E00               	movlw	0
  8168   001AB0  6E1F               	movwf	___flmul@sign^0,c
  8169   001AB2  EF70  F00D         	goto	l5244
  8170   001AB6                     l1152:
  8171   001AB6  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  8172   001ABA  0EFF               	movlw	255
  8173   001ABC  1626               	andwf	___flmul@prod^0,f,c
  8174   001ABE  0EFF               	movlw	255
  8175   001AC0  1627               	andwf	(___flmul@prod+1)^0,f,c
  8176   001AC2  0E7F               	movlw	127
  8177   001AC4  1628               	andwf	(___flmul@prod+2)^0,f,c
  8178   001AC6  0E00               	movlw	0
  8179   001AC8  1629               	andwf	(___flmul@prod+3)^0,f,c
  8180   001ACA  A025               	btfss	___flmul@bexp^0,0,c
  8181   001ACC  EF6A  F00D         	goto	u5261
  8182   001AD0  EF6C  F00D         	goto	u5260
  8183   001AD4                     u5261:
  8184   001AD4  EF6D  F00D         	goto	l5242
  8185   001AD8                     u5260:
  8186   001AD8  8E28               	bsf	(___flmul@prod+2)^0,7,c
  8187   001ADA                     l5242:
  8188   001ADA  90D8               	bcf	status,0,c
  8189   001ADC  3025               	rrcf	___flmul@bexp^0,w,c
  8190   001ADE  6E29               	movwf	(___flmul@prod+3)^0,c
  8191   001AE0                     l5244:
  8192   001AE0  501F               	movf	___flmul@sign^0,w,c
  8193   001AE2  1229               	iorwf	(___flmul@prod+3)^0,f,c
  8194   001AE4  C026  F013         	movff	___flmul@prod,?___flmul
  8195   001AE8  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  8196   001AEC  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  8197   001AF0  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  8198   001AF4                     l1139:
  8199   001AF4  0012               	return		;funcret
  8200   001AF6                     __end_of___flmul:
  8201                           	callstack 0
  8202                           
  8203 ;; *************** function ___flge *****************
  8204 ;; Defined at:
  8205 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  ff1             4   43[COMRAM] unsigned char 
  8208 ;;  ff2             4   47[COMRAM] unsigned char 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;		None               void
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8220 ;;      Params:         8       0       0       0       0       0       0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8222 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8223 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8224 ;;Total ram usage:       12 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; Hardware stack levels required when called: 4
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		_get_corriente_AC
  8231 ;;		_trip_protec_current
  8232 ;;		_efgtoa
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text43
  8237   002B64                     __ptext43:
  8238                           	callstack 0
  8239   002B64                     ___flge:
  8240                           	callstack 25
  8241   002B64  0E00               	movlw	0
  8242   002B66  142C               	andwf	___flge@ff1^0,w,c
  8243   002B68  6E34               	movwf	??___flge^0,c
  8244   002B6A  0E00               	movlw	0
  8245   002B6C  142D               	andwf	(___flge@ff1+1)^0,w,c
  8246   002B6E  6E35               	movwf	(??___flge+1)^0,c
  8247   002B70  0E80               	movlw	128
  8248   002B72  142E               	andwf	(___flge@ff1+2)^0,w,c
  8249   002B74  6E36               	movwf	(??___flge+2)^0,c
  8250   002B76  0E7F               	movlw	127
  8251   002B78  142F               	andwf	(___flge@ff1+3)^0,w,c
  8252   002B7A  6E37               	movwf	(??___flge+3)^0,c
  8253   002B7C  5034               	movf	??___flge^0,w,c
  8254   002B7E  1035               	iorwf	(??___flge+1)^0,w,c
  8255   002B80  1036               	iorwf	(??___flge+2)^0,w,c
  8256   002B82  1037               	iorwf	(??___flge+3)^0,w,c
  8257   002B84  A4D8               	btfss	status,2,c
  8258   002B86  EFC7  F015         	goto	u5301
  8259   002B8A  EFC9  F015         	goto	u5300
  8260   002B8E                     u5301:
  8261   002B8E  EFD1  F015         	goto	l5276
  8262   002B92                     u5300:
  8263   002B92  0E00               	movlw	0
  8264   002B94  6E2C               	movwf	___flge@ff1^0,c
  8265   002B96  0E00               	movlw	0
  8266   002B98  6E2D               	movwf	(___flge@ff1+1)^0,c
  8267   002B9A  0E00               	movlw	0
  8268   002B9C  6E2E               	movwf	(___flge@ff1+2)^0,c
  8269   002B9E  0E00               	movlw	0
  8270   002BA0  6E2F               	movwf	(___flge@ff1+3)^0,c
  8271   002BA2                     l5276:
  8272   002BA2  0E00               	movlw	0
  8273   002BA4  1430               	andwf	___flge@ff2^0,w,c
  8274   002BA6  6E34               	movwf	??___flge^0,c
  8275   002BA8  0E00               	movlw	0
  8276   002BAA  1431               	andwf	(___flge@ff2+1)^0,w,c
  8277   002BAC  6E35               	movwf	(??___flge+1)^0,c
  8278   002BAE  0E80               	movlw	128
  8279   002BB0  1432               	andwf	(___flge@ff2+2)^0,w,c
  8280   002BB2  6E36               	movwf	(??___flge+2)^0,c
  8281   002BB4  0E7F               	movlw	127
  8282   002BB6  1433               	andwf	(___flge@ff2+3)^0,w,c
  8283   002BB8  6E37               	movwf	(??___flge+3)^0,c
  8284   002BBA  5034               	movf	??___flge^0,w,c
  8285   002BBC  1035               	iorwf	(??___flge+1)^0,w,c
  8286   002BBE  1036               	iorwf	(??___flge+2)^0,w,c
  8287   002BC0  1037               	iorwf	(??___flge+3)^0,w,c
  8288   002BC2  A4D8               	btfss	status,2,c
  8289   002BC4  EFE6  F015         	goto	u5311
  8290   002BC8  EFE8  F015         	goto	u5310
  8291   002BCC                     u5311:
  8292   002BCC  EFF0  F015         	goto	l5280
  8293   002BD0                     u5310:
  8294   002BD0  0E00               	movlw	0
  8295   002BD2  6E30               	movwf	___flge@ff2^0,c
  8296   002BD4  0E00               	movlw	0
  8297   002BD6  6E31               	movwf	(___flge@ff2+1)^0,c
  8298   002BD8  0E00               	movlw	0
  8299   002BDA  6E32               	movwf	(___flge@ff2+2)^0,c
  8300   002BDC  0E00               	movlw	0
  8301   002BDE  6E33               	movwf	(___flge@ff2+3)^0,c
  8302   002BE0                     l5280:
  8303   002BE0  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  8304   002BE2  EFF5  F015         	goto	u5321
  8305   002BE6  EFF7  F015         	goto	u5320
  8306   002BEA                     u5321:
  8307   002BEA  EF00  F016         	goto	l5284
  8308   002BEE                     u5320:
  8309   002BEE  6C2C               	negf	___flge@ff1^0,c
  8310   002BF0  1E2D               	comf	(___flge@ff1+1)^0,f,c
  8311   002BF2  B0D8               	btfsc	status,0,c
  8312   002BF4  2A2D               	incf	(___flge@ff1+1)^0,f,c
  8313   002BF6  1E2E               	comf	(___flge@ff1+2)^0,f,c
  8314   002BF8  B0D8               	btfsc	status,0,c
  8315   002BFA  2A2E               	incf	(___flge@ff1+2)^0,f,c
  8316   002BFC  0E80               	movlw	128
  8317   002BFE  562F               	subfwb	(___flge@ff1+3)^0,f,c
  8318   002C00                     l5284:
  8319   002C00  AE33               	btfss	(___flge@ff2+3)^0,7,c
  8320   002C02  EF05  F016         	goto	u5331
  8321   002C06  EF07  F016         	goto	u5330
  8322   002C0A                     u5331:
  8323   002C0A  EF10  F016         	goto	l786
  8324   002C0E                     u5330:
  8325   002C0E  6C30               	negf	___flge@ff2^0,c
  8326   002C10  1E31               	comf	(___flge@ff2+1)^0,f,c
  8327   002C12  B0D8               	btfsc	status,0,c
  8328   002C14  2A31               	incf	(___flge@ff2+1)^0,f,c
  8329   002C16  1E32               	comf	(___flge@ff2+2)^0,f,c
  8330   002C18  B0D8               	btfsc	status,0,c
  8331   002C1A  2A32               	incf	(___flge@ff2+2)^0,f,c
  8332   002C1C  0E80               	movlw	128
  8333   002C1E  5633               	subfwb	(___flge@ff2+3)^0,f,c
  8334   002C20                     l786:
  8335   002C20  0E00               	movlw	0
  8336   002C22  1A2C               	xorwf	___flge@ff1^0,f,c
  8337   002C24  0E00               	movlw	0
  8338   002C26  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  8339   002C28  0E00               	movlw	0
  8340   002C2A  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  8341   002C2C  0E80               	movlw	128
  8342   002C2E  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  8343   002C30  0E00               	movlw	0
  8344   002C32  1A30               	xorwf	___flge@ff2^0,f,c
  8345   002C34  0E00               	movlw	0
  8346   002C36  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  8347   002C38  0E00               	movlw	0
  8348   002C3A  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  8349   002C3C  0E80               	movlw	128
  8350   002C3E  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  8351   002C40  5030               	movf	___flge@ff2^0,w,c
  8352   002C42  5C2C               	subwf	___flge@ff1^0,w,c
  8353   002C44  5031               	movf	(___flge@ff2+1)^0,w,c
  8354   002C46  582D               	subwfb	(___flge@ff1+1)^0,w,c
  8355   002C48  5032               	movf	(___flge@ff2+2)^0,w,c
  8356   002C4A  582E               	subwfb	(___flge@ff1+2)^0,w,c
  8357   002C4C  5033               	movf	(___flge@ff2+3)^0,w,c
  8358   002C4E  582F               	subwfb	(___flge@ff1+3)^0,w,c
  8359   002C50  B0D8               	btfsc	status,0,c
  8360   002C52  EF2D  F016         	goto	u5341
  8361   002C56  EF2F  F016         	goto	u5340
  8362   002C5A                     u5341:
  8363   002C5A  EF32  F016         	goto	l5290
  8364   002C5E                     u5340:
  8365   002C5E  90D8               	bcf	status,0,c
  8366   002C60  EF33  F016         	goto	l791
  8367   002C64                     l5290:
  8368   002C64  80D8               	bsf	status,0,c
  8369   002C66                     l791:
  8370   002C66  0012               	return		;funcret
  8371   002C68                     __end_of___flge:
  8372                           	callstack 0
  8373                           
  8374 ;; *************** function ___fldiv *****************
  8375 ;; Defined at:
  8376 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;  b               4   51[COMRAM] unsigned char 
  8379 ;;  a               4   55[COMRAM] unsigned char 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  grs             4   70[COMRAM] unsigned long 
  8382 ;;  rem             4   63[COMRAM] unsigned long 
  8383 ;;  new_exp         2   68[COMRAM] short 
  8384 ;;  aexp            1   75[COMRAM] unsigned char 
  8385 ;;  bexp            1   74[COMRAM] unsigned char 
  8386 ;;  sign            1   67[COMRAM] unsigned char 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  4   51[COMRAM] unsigned char 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2, status,0
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8396 ;;      Params:         8       0       0       0       0       0       0       0       0
  8397 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8398 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8399 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8400 ;;Total ram usage:       25 bytes
  8401 ;; Hardware stack levels used: 1
  8402 ;; Hardware stack levels required when called: 4
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_get_corriente_AC
  8407 ;;		_main
  8408 ;;		_efgtoa
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text44
  8413   001AF6                     __ptext44:
  8414                           	callstack 0
  8415   001AF6                     ___fldiv:
  8416                           	callstack 22
  8417   001AF6  5037               	movf	(___fldiv@b+3)^0,w,c
  8418   001AF8  0B80               	andlw	128
  8419   001AFA  6E44               	movwf	___fldiv@sign^0,c
  8420   001AFC  5037               	movf	(___fldiv@b+3)^0,w,c
  8421   001AFE  2437               	addwf	(___fldiv@b+3)^0,w,c
  8422   001B00  6E4B               	movwf	___fldiv@bexp^0,c
  8423   001B02  AE36               	btfss	(___fldiv@b+2)^0,7,c
  8424   001B04  EF86  F00D         	goto	u4851
  8425   001B08  EF88  F00D         	goto	u4850
  8426   001B0C                     u4851:
  8427   001B0C  EF89  F00D         	goto	l4988
  8428   001B10                     u4850:
  8429   001B10  804B               	bsf	___fldiv@bexp^0,0,c
  8430   001B12                     l4988:
  8431   001B12  504B               	movf	___fldiv@bexp^0,w,c
  8432   001B14  B4D8               	btfsc	status,2,c
  8433   001B16  EF8F  F00D         	goto	u4861
  8434   001B1A  EF91  F00D         	goto	u4860
  8435   001B1E                     u4861:
  8436   001B1E  EFA6  F00D         	goto	l4998
  8437   001B22                     u4860:
  8438   001B22  284B               	incf	___fldiv@bexp^0,w,c
  8439   001B24  A4D8               	btfss	status,2,c
  8440   001B26  EF97  F00D         	goto	u4871
  8441   001B2A  EF99  F00D         	goto	u4870
  8442   001B2E                     u4871:
  8443   001B2E  EFA1  F00D         	goto	l4994
  8444   001B32                     u4870:
  8445   001B32  0E00               	movlw	0
  8446   001B34  6E34               	movwf	___fldiv@b^0,c
  8447   001B36  0E00               	movlw	0
  8448   001B38  6E35               	movwf	(___fldiv@b+1)^0,c
  8449   001B3A  0E00               	movlw	0
  8450   001B3C  6E36               	movwf	(___fldiv@b+2)^0,c
  8451   001B3E  0E00               	movlw	0
  8452   001B40  6E37               	movwf	(___fldiv@b+3)^0,c
  8453   001B42                     l4994:
  8454   001B42  8E36               	bsf	(___fldiv@b+2)^0,7,c
  8455   001B44  0E00               	movlw	0
  8456   001B46  6E37               	movwf	(___fldiv@b+3)^0,c
  8457   001B48  EFAE  F00D         	goto	l5000
  8458   001B4C                     l4998:
  8459   001B4C  0E00               	movlw	0
  8460   001B4E  6E34               	movwf	___fldiv@b^0,c
  8461   001B50  0E00               	movlw	0
  8462   001B52  6E35               	movwf	(___fldiv@b+1)^0,c
  8463   001B54  0E00               	movlw	0
  8464   001B56  6E36               	movwf	(___fldiv@b+2)^0,c
  8465   001B58  0E00               	movlw	0
  8466   001B5A  6E37               	movwf	(___fldiv@b+3)^0,c
  8467   001B5C                     l5000:
  8468   001B5C  503B               	movf	(___fldiv@a+3)^0,w,c
  8469   001B5E  0B80               	andlw	128
  8470   001B60  1A44               	xorwf	___fldiv@sign^0,f,c
  8471   001B62  503B               	movf	(___fldiv@a+3)^0,w,c
  8472   001B64  243B               	addwf	(___fldiv@a+3)^0,w,c
  8473   001B66  6E4C               	movwf	___fldiv@aexp^0,c
  8474   001B68  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  8475   001B6A  EFB9  F00D         	goto	u4881
  8476   001B6E  EFBB  F00D         	goto	u4880
  8477   001B72                     u4881:
  8478   001B72  EFBC  F00D         	goto	l5008
  8479   001B76                     u4880:
  8480   001B76  804C               	bsf	___fldiv@aexp^0,0,c
  8481   001B78                     l5008:
  8482   001B78  504C               	movf	___fldiv@aexp^0,w,c
  8483   001B7A  B4D8               	btfsc	status,2,c
  8484   001B7C  EFC2  F00D         	goto	u4891
  8485   001B80  EFC4  F00D         	goto	u4890
  8486   001B84                     u4891:
  8487   001B84  EFD9  F00D         	goto	l5018
  8488   001B88                     u4890:
  8489   001B88  284C               	incf	___fldiv@aexp^0,w,c
  8490   001B8A  A4D8               	btfss	status,2,c
  8491   001B8C  EFCA  F00D         	goto	u4901
  8492   001B90  EFCC  F00D         	goto	u4900
  8493   001B94                     u4901:
  8494   001B94  EFD4  F00D         	goto	l5014
  8495   001B98                     u4900:
  8496   001B98  0E00               	movlw	0
  8497   001B9A  6E38               	movwf	___fldiv@a^0,c
  8498   001B9C  0E00               	movlw	0
  8499   001B9E  6E39               	movwf	(___fldiv@a+1)^0,c
  8500   001BA0  0E00               	movlw	0
  8501   001BA2  6E3A               	movwf	(___fldiv@a+2)^0,c
  8502   001BA4  0E00               	movlw	0
  8503   001BA6  6E3B               	movwf	(___fldiv@a+3)^0,c
  8504   001BA8                     l5014:
  8505   001BA8  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  8506   001BAA  0E00               	movlw	0
  8507   001BAC  6E3B               	movwf	(___fldiv@a+3)^0,c
  8508   001BAE  EFE1  F00D         	goto	l5020
  8509   001BB2                     l5018:
  8510   001BB2  0E00               	movlw	0
  8511   001BB4  6E38               	movwf	___fldiv@a^0,c
  8512   001BB6  0E00               	movlw	0
  8513   001BB8  6E39               	movwf	(___fldiv@a+1)^0,c
  8514   001BBA  0E00               	movlw	0
  8515   001BBC  6E3A               	movwf	(___fldiv@a+2)^0,c
  8516   001BBE  0E00               	movlw	0
  8517   001BC0  6E3B               	movwf	(___fldiv@a+3)^0,c
  8518   001BC2                     l5020:
  8519   001BC2  5038               	movf	___fldiv@a^0,w,c
  8520   001BC4  1039               	iorwf	(___fldiv@a+1)^0,w,c
  8521   001BC6  103A               	iorwf	(___fldiv@a+2)^0,w,c
  8522   001BC8  103B               	iorwf	(___fldiv@a+3)^0,w,c
  8523   001BCA  A4D8               	btfss	status,2,c
  8524   001BCC  EFEA  F00D         	goto	u4911
  8525   001BD0  EFEC  F00D         	goto	u4910
  8526   001BD4                     u4911:
  8527   001BD4  EF04  F00E         	goto	l5032
  8528   001BD8                     u4910:
  8529   001BD8  0E00               	movlw	0
  8530   001BDA  6E34               	movwf	___fldiv@b^0,c
  8531   001BDC  0E00               	movlw	0
  8532   001BDE  6E35               	movwf	(___fldiv@b+1)^0,c
  8533   001BE0  0E00               	movlw	0
  8534   001BE2  6E36               	movwf	(___fldiv@b+2)^0,c
  8535   001BE4  0E00               	movlw	0
  8536   001BE6  6E37               	movwf	(___fldiv@b+3)^0,c
  8537   001BE8  0E80               	movlw	128
  8538   001BEA  1236               	iorwf	(___fldiv@b+2)^0,f,c
  8539   001BEC  0E7F               	movlw	127
  8540   001BEE  1237               	iorwf	(___fldiv@b+3)^0,f,c
  8541   001BF0                     l5026:
  8542   001BF0  5044               	movf	___fldiv@sign^0,w,c
  8543   001BF2  1237               	iorwf	(___fldiv@b+3)^0,f,c
  8544   001BF4  C034  F034         	movff	___fldiv@b,?___fldiv
  8545   001BF8  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  8546   001BFC  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  8547   001C00  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  8548   001C04  EF47  F00F         	goto	l1103
  8549   001C08                     l5032:
  8550   001C08  504B               	movf	___fldiv@bexp^0,w,c
  8551   001C0A  A4D8               	btfss	status,2,c
  8552   001C0C  EF0A  F00E         	goto	u4921
  8553   001C10  EF0C  F00E         	goto	u4920
  8554   001C14                     u4921:
  8555   001C14  EF16  F00E         	goto	l5040
  8556   001C18                     u4920:
  8557   001C18  0E00               	movlw	0
  8558   001C1A  6E34               	movwf	?___fldiv^0,c
  8559   001C1C  0E00               	movlw	0
  8560   001C1E  6E35               	movwf	(?___fldiv+1)^0,c
  8561   001C20  0E00               	movlw	0
  8562   001C22  6E36               	movwf	(?___fldiv+2)^0,c
  8563   001C24  0E00               	movlw	0
  8564   001C26  6E37               	movwf	(?___fldiv+3)^0,c
  8565   001C28  EF47  F00F         	goto	l1103
  8566   001C2C                     l5040:
  8567   001C2C  504C               	movf	___fldiv@aexp^0,w,c
  8568   001C2E  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  8569   001C32  6A3D               	clrf	(??___fldiv+1)^0,c
  8570   001C34  5E3C               	subwf	??___fldiv^0,f,c
  8571   001C36  0E00               	movlw	0
  8572   001C38  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  8573   001C3A  0E7F               	movlw	127
  8574   001C3C  243C               	addwf	??___fldiv^0,w,c
  8575   001C3E  6E45               	movwf	___fldiv@new_exp^0,c
  8576   001C40  0E00               	movlw	0
  8577   001C42  203D               	addwfc	(??___fldiv+1)^0,w,c
  8578   001C44  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8579   001C46  C034  F040         	movff	___fldiv@b,___fldiv@rem
  8580   001C4A  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  8581   001C4E  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  8582   001C52  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  8583   001C56  0E00               	movlw	0
  8584   001C58  6E34               	movwf	___fldiv@b^0,c
  8585   001C5A  0E00               	movlw	0
  8586   001C5C  6E35               	movwf	(___fldiv@b+1)^0,c
  8587   001C5E  0E00               	movlw	0
  8588   001C60  6E36               	movwf	(___fldiv@b+2)^0,c
  8589   001C62  0E00               	movlw	0
  8590   001C64  6E37               	movwf	(___fldiv@b+3)^0,c
  8591   001C66  0E00               	movlw	0
  8592   001C68  6E47               	movwf	___fldiv@grs^0,c
  8593   001C6A  0E00               	movlw	0
  8594   001C6C  6E48               	movwf	(___fldiv@grs+1)^0,c
  8595   001C6E  0E00               	movlw	0
  8596   001C70  6E49               	movwf	(___fldiv@grs+2)^0,c
  8597   001C72  0E00               	movlw	0
  8598   001C74  6E4A               	movwf	(___fldiv@grs+3)^0,c
  8599   001C76  0E00               	movlw	0
  8600   001C78  6E4C               	movwf	___fldiv@aexp^0,c
  8601   001C7A  EF77  F00E         	goto	l1105
  8602   001C7E                     l5050:
  8603   001C7E  504C               	movf	___fldiv@aexp^0,w,c
  8604   001C80  B4D8               	btfsc	status,2,c
  8605   001C82  EF45  F00E         	goto	u4931
  8606   001C86  EF47  F00E         	goto	u4930
  8607   001C8A                     u4931:
  8608   001C8A  EF5E  F00E         	goto	l5058
  8609   001C8E                     u4930:
  8610   001C8E  90D8               	bcf	status,0,c
  8611   001C90  3640               	rlcf	___fldiv@rem^0,f,c
  8612   001C92  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  8613   001C94  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  8614   001C96  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  8615   001C98  90D8               	bcf	status,0,c
  8616   001C9A  3634               	rlcf	___fldiv@b^0,f,c
  8617   001C9C  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8618   001C9E  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8619   001CA0  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8620   001CA2  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8621   001CA4  EF56  F00E         	goto	u4941
  8622   001CA8  EF58  F00E         	goto	u4940
  8623   001CAC                     u4941:
  8624   001CAC  EF59  F00E         	goto	l1108
  8625   001CB0                     u4940:
  8626   001CB0  8034               	bsf	___fldiv@b^0,0,c
  8627   001CB2                     l1108:
  8628   001CB2  90D8               	bcf	status,0,c
  8629   001CB4  3647               	rlcf	___fldiv@grs^0,f,c
  8630   001CB6  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8631   001CB8  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8632   001CBA  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8633   001CBC                     l5058:
  8634   001CBC  5038               	movf	___fldiv@a^0,w,c
  8635   001CBE  5C40               	subwf	___fldiv@rem^0,w,c
  8636   001CC0  5039               	movf	(___fldiv@a+1)^0,w,c
  8637   001CC2  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  8638   001CC4  503A               	movf	(___fldiv@a+2)^0,w,c
  8639   001CC6  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  8640   001CC8  503B               	movf	(___fldiv@a+3)^0,w,c
  8641   001CCA  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  8642   001CCC  A0D8               	btfss	status,0,c
  8643   001CCE  EF6B  F00E         	goto	u4951
  8644   001CD2  EF6D  F00E         	goto	u4950
  8645   001CD6                     u4951:
  8646   001CD6  EF76  F00E         	goto	l5064
  8647   001CDA                     u4950:
  8648   001CDA  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  8649   001CDC  5038               	movf	___fldiv@a^0,w,c
  8650   001CDE  5E40               	subwf	___fldiv@rem^0,f,c
  8651   001CE0  5039               	movf	(___fldiv@a+1)^0,w,c
  8652   001CE2  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  8653   001CE4  503A               	movf	(___fldiv@a+2)^0,w,c
  8654   001CE6  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  8655   001CE8  503B               	movf	(___fldiv@a+3)^0,w,c
  8656   001CEA  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  8657   001CEC                     l5064:
  8658   001CEC  2A4C               	incf	___fldiv@aexp^0,f,c
  8659   001CEE                     l1105:
  8660   001CEE  0E19               	movlw	25
  8661   001CF0  644C               	cpfsgt	___fldiv@aexp^0,c
  8662   001CF2  EF7D  F00E         	goto	u4961
  8663   001CF6  EF7F  F00E         	goto	u4960
  8664   001CFA                     u4961:
  8665   001CFA  EF3F  F00E         	goto	l5050
  8666   001CFE                     u4960:
  8667   001CFE  5040               	movf	___fldiv@rem^0,w,c
  8668   001D00  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  8669   001D02  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  8670   001D04  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  8671   001D06  B4D8               	btfsc	status,2,c
  8672   001D08  EF88  F00E         	goto	u4971
  8673   001D0C  EF8A  F00E         	goto	u4970
  8674   001D10                     u4971:
  8675   001D10  EFA2  F00E         	goto	l5076
  8676   001D14                     u4970:
  8677   001D14  8047               	bsf	___fldiv@grs^0,0,c
  8678   001D16  EFA2  F00E         	goto	l5076
  8679   001D1A                     l5070:
  8680   001D1A  90D8               	bcf	status,0,c
  8681   001D1C  3634               	rlcf	___fldiv@b^0,f,c
  8682   001D1E  3635               	rlcf	(___fldiv@b+1)^0,f,c
  8683   001D20  3636               	rlcf	(___fldiv@b+2)^0,f,c
  8684   001D22  3637               	rlcf	(___fldiv@b+3)^0,f,c
  8685   001D24  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8686   001D26  EF97  F00E         	goto	u4981
  8687   001D2A  EF99  F00E         	goto	u4980
  8688   001D2E                     u4981:
  8689   001D2E  EF9A  F00E         	goto	l1114
  8690   001D32                     u4980:
  8691   001D32  8034               	bsf	___fldiv@b^0,0,c
  8692   001D34                     l1114:
  8693   001D34  90D8               	bcf	status,0,c
  8694   001D36  3647               	rlcf	___fldiv@grs^0,f,c
  8695   001D38  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  8696   001D3A  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  8697   001D3C  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  8698   001D3E  0645               	decf	___fldiv@new_exp^0,f,c
  8699   001D40  A0D8               	btfss	status,0,c
  8700   001D42  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  8701   001D44                     l5076:
  8702   001D44  AE36               	btfss	(___fldiv@b+2)^0,7,c
  8703   001D46  EFA7  F00E         	goto	u4991
  8704   001D4A  EFA9  F00E         	goto	u4990
  8705   001D4E                     u4991:
  8706   001D4E  EF8D  F00E         	goto	l5070
  8707   001D52                     u4990:
  8708   001D52  0E00               	movlw	0
  8709   001D54  6E4C               	movwf	___fldiv@aexp^0,c
  8710   001D56  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  8711   001D58  EFB0  F00E         	goto	u5001
  8712   001D5C  EFB2  F00E         	goto	u5000
  8713   001D60                     u5001:
  8714   001D60  EFD6  F00E         	goto	l1116
  8715   001D64                     u5000:
  8716   001D64  0EFF               	movlw	255
  8717   001D66  1447               	andwf	___fldiv@grs^0,w,c
  8718   001D68  6E3C               	movwf	??___fldiv^0,c
  8719   001D6A  0EFF               	movlw	255
  8720   001D6C  1448               	andwf	(___fldiv@grs+1)^0,w,c
  8721   001D6E  6E3D               	movwf	(??___fldiv+1)^0,c
  8722   001D70  0EFF               	movlw	255
  8723   001D72  1449               	andwf	(___fldiv@grs+2)^0,w,c
  8724   001D74  6E3E               	movwf	(??___fldiv+2)^0,c
  8725   001D76  0E7F               	movlw	127
  8726   001D78  144A               	andwf	(___fldiv@grs+3)^0,w,c
  8727   001D7A  6E3F               	movwf	(??___fldiv+3)^0,c
  8728   001D7C  503C               	movf	??___fldiv^0,w,c
  8729   001D7E  103D               	iorwf	(??___fldiv+1)^0,w,c
  8730   001D80  103E               	iorwf	(??___fldiv+2)^0,w,c
  8731   001D82  103F               	iorwf	(??___fldiv+3)^0,w,c
  8732   001D84  B4D8               	btfsc	status,2,c
  8733   001D86  EFC7  F00E         	goto	u5011
  8734   001D8A  EFC9  F00E         	goto	u5010
  8735   001D8E                     u5011:
  8736   001D8E  EFCD  F00E         	goto	l1117
  8737   001D92                     u5010:
  8738   001D92                     l5084:
  8739   001D92  0E01               	movlw	1
  8740   001D94  6E4C               	movwf	___fldiv@aexp^0,c
  8741   001D96  EFD6  F00E         	goto	l1116
  8742   001D9A                     l1117:
  8743   001D9A  A034               	btfss	___fldiv@b^0,0,c
  8744   001D9C  EFD2  F00E         	goto	u5021
  8745   001DA0  EFD4  F00E         	goto	u5020
  8746   001DA4                     u5021:
  8747   001DA4  EFD6  F00E         	goto	l1116
  8748   001DA8                     u5020:
  8749   001DA8  EFC9  F00E         	goto	l5084
  8750   001DAC                     l1116:
  8751   001DAC  504C               	movf	___fldiv@aexp^0,w,c
  8752   001DAE  B4D8               	btfsc	status,2,c
  8753   001DB0  EFDC  F00E         	goto	u5031
  8754   001DB4  EFDE  F00E         	goto	u5030
  8755   001DB8                     u5031:
  8756   001DB8  EF02  F00F         	goto	l5096
  8757   001DBC                     u5030:
  8758   001DBC  0E01               	movlw	1
  8759   001DBE  2634               	addwf	___fldiv@b^0,f,c
  8760   001DC0  0E00               	movlw	0
  8761   001DC2  2235               	addwfc	(___fldiv@b+1)^0,f,c
  8762   001DC4  2236               	addwfc	(___fldiv@b+2)^0,f,c
  8763   001DC6  2237               	addwfc	(___fldiv@b+3)^0,f,c
  8764   001DC8  A037               	btfss	(___fldiv@b+3)^0,0,c
  8765   001DCA  EFE9  F00E         	goto	u5041
  8766   001DCE  EFEB  F00E         	goto	u5040
  8767   001DD2                     u5041:
  8768   001DD2  EF02  F00F         	goto	l5096
  8769   001DD6                     u5040:
  8770   001DD6  C034  F03C         	movff	___fldiv@b,??___fldiv
  8771   001DDA  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  8772   001DDE  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  8773   001DE2  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  8774   001DE6  343F               	rlcf	(??___fldiv+3)^0,w,c
  8775   001DE8  323F               	rrcf	(??___fldiv+3)^0,f,c
  8776   001DEA  323E               	rrcf	(??___fldiv+2)^0,f,c
  8777   001DEC  323D               	rrcf	(??___fldiv+1)^0,f,c
  8778   001DEE  323C               	rrcf	??___fldiv^0,f,c
  8779   001DF0  C03C  F034         	movff	??___fldiv,___fldiv@b
  8780   001DF4  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  8781   001DF8  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  8782   001DFC  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  8783   001E00  4A45               	infsnz	___fldiv@new_exp^0,f,c
  8784   001E02  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  8785   001E04                     l5096:
  8786   001E04  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8787   001E06  EF0D  F00F         	goto	u5051
  8788   001E0A  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8789   001E0C  E108               	bnz	u5050
  8790   001E0E  2845               	incf	___fldiv@new_exp^0,w,c
  8791   001E10  A0D8               	btfss	status,0,c
  8792   001E12  EF0D  F00F         	goto	u5051
  8793   001E16  EF0F  F00F         	goto	u5050
  8794   001E1A                     u5051:
  8795   001E1A  EF1A  F00F         	goto	l5100
  8796   001E1E                     u5050:
  8797   001E1E  0E00               	movlw	0
  8798   001E20  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8799   001E22  6845               	setf	___fldiv@new_exp^0,c
  8800   001E24  0E00               	movlw	0
  8801   001E26  6E34               	movwf	___fldiv@b^0,c
  8802   001E28  0E00               	movlw	0
  8803   001E2A  6E35               	movwf	(___fldiv@b+1)^0,c
  8804   001E2C  0E00               	movlw	0
  8805   001E2E  6E36               	movwf	(___fldiv@b+2)^0,c
  8806   001E30  0E00               	movlw	0
  8807   001E32  6E37               	movwf	(___fldiv@b+3)^0,c
  8808   001E34                     l5100:
  8809   001E34  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8810   001E36  EF27  F00F         	goto	u5060
  8811   001E3A  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  8812   001E3C  E106               	bnz	u5061
  8813   001E3E  0445               	decf	___fldiv@new_exp^0,w,c
  8814   001E40  B0D8               	btfsc	status,0,c
  8815   001E42  EF25  F00F         	goto	u5061
  8816   001E46  EF27  F00F         	goto	u5060
  8817   001E4A                     u5061:
  8818   001E4A  EF35  F00F         	goto	l5104
  8819   001E4E                     u5060:
  8820   001E4E  0E00               	movlw	0
  8821   001E50  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  8822   001E52  0E00               	movlw	0
  8823   001E54  6E45               	movwf	___fldiv@new_exp^0,c
  8824   001E56  0E00               	movlw	0
  8825   001E58  6E34               	movwf	___fldiv@b^0,c
  8826   001E5A  0E00               	movlw	0
  8827   001E5C  6E35               	movwf	(___fldiv@b+1)^0,c
  8828   001E5E  0E00               	movlw	0
  8829   001E60  6E36               	movwf	(___fldiv@b+2)^0,c
  8830   001E62  0E00               	movlw	0
  8831   001E64  6E37               	movwf	(___fldiv@b+3)^0,c
  8832   001E66  0E00               	movlw	0
  8833   001E68  6E44               	movwf	___fldiv@sign^0,c
  8834   001E6A                     l5104:
  8835   001E6A  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  8836   001E6E  A04B               	btfss	___fldiv@bexp^0,0,c
  8837   001E70  EF3C  F00F         	goto	u5071
  8838   001E74  EF3E  F00F         	goto	u5070
  8839   001E78                     u5071:
  8840   001E78  EF41  F00F         	goto	l5110
  8841   001E7C                     u5070:
  8842   001E7C  8E36               	bsf	(___fldiv@b+2)^0,7,c
  8843   001E7E  EF42  F00F         	goto	l5112
  8844   001E82                     l5110:
  8845   001E82  9E36               	bcf	(___fldiv@b+2)^0,7,c
  8846   001E84                     l5112:
  8847   001E84  90D8               	bcf	status,0,c
  8848   001E86  304B               	rrcf	___fldiv@bexp^0,w,c
  8849   001E88  6E37               	movwf	(___fldiv@b+3)^0,c
  8850   001E8A  EFF8  F00D         	goto	l5026
  8851   001E8E                     l1103:
  8852   001E8E  0012               	return		;funcret
  8853   001E90                     __end_of___fldiv:
  8854                           	callstack 0
  8855                           
  8856 ;; *************** function _ADC_GetConversion *****************
  8857 ;; Defined at:
  8858 ;;		line 110 in file "mcc_generated_files/adc.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  channel         1    wreg     enum E4620
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;  channel         1    8[COMRAM] enum E4620
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  2    4[COMRAM] unsigned short 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8872 ;;      Params:         2       0       0       0       0       0       0       0       0
  8873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8874 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8875 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8876 ;;Total ram usage:        5 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 4
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_get_corriente_AC
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text45
  8887   0034E6                     __ptext45:
  8888                           	callstack 0
  8889   0034E6                     _ADC_GetConversion:
  8890                           	callstack 25
  8891                           
  8892                           ;incstack = 0
  8893                           ;ADC_GetConversion@channel stored from wreg
  8894   0034E6  6E09               	movwf	ADC_GetConversion@channel^0,c
  8895   0034E8                     
  8896                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  8897   0034E8  C009  F007         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8898   0034EC  4607               	rlncf	??_ADC_GetConversion^0,f,c
  8899   0034EE  4607               	rlncf	??_ADC_GetConversion^0,f,c
  8900   0034F0  50C2               	movf	194,w,c	;volatile
  8901   0034F2  1807               	xorwf	??_ADC_GetConversion^0,w,c
  8902   0034F4  0B83               	andlw	-125
  8903   0034F6  1807               	xorwf	??_ADC_GetConversion^0,w,c
  8904   0034F8  6EC2               	movwf	194,c	;volatile
  8905   0034FA                     
  8906                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  8907   0034FA  80C2               	bsf	194,0,c	;volatile
  8908   0034FC                     
  8909                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  8910   0034FC  82C2               	bsf	194,1,c	;volatile
  8911   0034FE                     l206:
  8912                           
  8913                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  8914   0034FE  B2C2               	btfsc	194,1,c	;volatile
  8915   003500  EF84  F01A         	goto	u6041
  8916   003504  EF86  F01A         	goto	u6040
  8917   003508                     u6041:
  8918   003508  EF7F  F01A         	goto	l206
  8919   00350C                     u6040:
  8920   00350C                     
  8921                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8922   00350C  50C4               	movf	196,w,c	;volatile
  8923   00350E  6E08               	movwf	(??_ADC_GetConversion+1)^0,c
  8924   003510  6A07               	clrf	??_ADC_GetConversion^0,c
  8925   003512  50C3               	movf	195,w,c	;volatile
  8926   003514  2407               	addwf	??_ADC_GetConversion^0,w,c
  8927   003516  6E05               	movwf	?_ADC_GetConversion^0,c
  8928   003518  0E00               	movlw	0
  8929   00351A  2008               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  8930   00351C  6E06               	movwf	(?_ADC_GetConversion+1)^0,c
  8931   00351E  0012               	return		;funcret
  8932   003520                     __end_of_ADC_GetConversion:
  8933                           	callstack 0
  8934                           
  8935 ;; *************** function _SYSTEM_Initialize *****************
  8936 ;; Defined at:
  8937 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1    wreg      void 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2, status,0, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8951 ;;      Params:         0       0       0       0       0       0       0       0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8954 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8955 ;;Total ram usage:        0 bytes
  8956 ;; Hardware stack levels used: 1
  8957 ;; Hardware stack levels required when called: 6
  8958 ;; This function calls:
  8959 ;;		_ADC_Initialize
  8960 ;;		_CCP2_Initialize
  8961 ;;		_EUSART1_Initialize
  8962 ;;		_INTERRUPT_Initialize
  8963 ;;		_OSCILLATOR_Initialize
  8964 ;;		_PIN_MANAGER_Initialize
  8965 ;;		_TMR1_Initialize
  8966 ;; This function is called by:
  8967 ;;		_main
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	text46
  8972   003738                     __ptext46:
  8973                           	callstack 0
  8974   003738                     _SYSTEM_Initialize:
  8975                           	callstack 24
  8976   003738                     
  8977                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  8978   003738  EC3E  F01C         	call	_INTERRUPT_Initialize	;wreg free
  8979   00373C                     
  8980                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8981   00373C  EC16  F01B         	call	_PIN_MANAGER_Initialize	;wreg free
  8982   003740                     
  8983                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8984   003740  EC7D  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  8985   003744                     
  8986                           ;mcc_generated_files/mcc.c: 56:     CCP2_Initialize();
  8987   003744  EC14  F01C         	call	_CCP2_Initialize	;wreg free
  8988   003748                     
  8989                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8990   003748  EC2D  F01B         	call	_TMR1_Initialize	;wreg free
  8991   00374C                     
  8992                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8993   00374C  ECEB  F01B         	call	_ADC_Initialize	;wreg free
  8994   003750                     
  8995                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  8996   003750  EC36  F01A         	call	_EUSART1_Initialize	;wreg free
  8997   003754  0012               	return		;funcret
  8998   003756                     __end_of_SYSTEM_Initialize:
  8999                           	callstack 0
  9000                           
  9001 ;; *************** function _TMR1_Initialize *****************
  9002 ;; Defined at:
  9003 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used: 1
  9023 ;; Hardware stack levels required when called: 5
  9024 ;; This function calls:
  9025 ;;		_TMR1_SetInterruptHandler
  9026 ;; This function is called by:
  9027 ;;		_SYSTEM_Initialize
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text47
  9032   00365A                     __ptext47:
  9033                           	callstack 0
  9034   00365A                     _TMR1_Initialize:
  9035                           	callstack 24
  9036   00365A                     
  9037                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
  9038   00365A  0E00               	movlw	0
  9039   00365C  6ECC               	movwf	204,c	;volatile
  9040                           
  9041                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xD1;
  9042   00365E  0ED1               	movlw	209
  9043   003660  6ECF               	movwf	207,c	;volatile
  9044                           
  9045                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x20;
  9046   003662  0E20               	movlw	32
  9047   003664  6ECE               	movwf	206,c	;volatile
  9048   003666                     
  9049                           ;mcc_generated_files/tmr1.c: 79:     timer1ReloadVal=TMR1;
  9050   003666  CFCE F0F3          	movff	4046,_timer1ReloadVal	;volatile
  9051   00366A  CFCF F0F4          	movff	4047,_timer1ReloadVal+1	;volatile
  9052   00366E                     
  9053                           ;mcc_generated_files/tmr1.c: 82:     PIR1bits.TMR1IF = 0;
  9054   00366E  909E               	bcf	158,0,c	;volatile
  9055   003670                     
  9056                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
  9057   003670  809D               	bsf	157,0,c	;volatile
  9058   003672                     
  9059                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  9060   003672  0E80               	movlw	low _TMR1_DefaultInterruptHandler
  9061   003674  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  9062   003676  0E38               	movlw	high _TMR1_DefaultInterruptHandler
  9063   003678  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  9064   00367A  EC26  F01C         	call	_TMR1_SetInterruptHandler	;wreg free
  9065   00367E                     
  9066                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x01;
  9067   00367E  0E01               	movlw	1
  9068   003680  6ECD               	movwf	205,c	;volatile
  9069   003682  0012               	return		;funcret
  9070   003684                     __end_of_TMR1_Initialize:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function _TMR1_SetInterruptHandler *****************
  9074 ;; Defined at:
  9075 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  9078 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;		None
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, status,2, status,0
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9090 ;;      Params:         2       0       0       0       0       0       0       0       0
  9091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9093 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9094 ;;Total ram usage:        2 bytes
  9095 ;; Hardware stack levels used: 1
  9096 ;; Hardware stack levels required when called: 4
  9097 ;; This function calls:
  9098 ;;		Nothing
  9099 ;; This function is called by:
  9100 ;;		_TMR1_Initialize
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text48
  9105   00384C                     __ptext48:
  9106                           	callstack 0
  9107   00384C                     _TMR1_SetInterruptHandler:
  9108                           	callstack 24
  9109   00384C                     
  9110                           ;mcc_generated_files/tmr1.c: 190:     TMR1_InterruptHandler = InterruptHandler;
  9111   00384C  C005  F0F1         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  9112   003850  C006  F0F2         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  9113   003854  0012               	return		;funcret
  9114   003856                     __end_of_TMR1_SetInterruptHandler:
  9115                           	callstack 0
  9116                           
  9117 ;; *************** function _PIN_MANAGER_Initialize *****************
  9118 ;; Defined at:
  9119 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;		None
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;		None
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, status,2
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0
  9134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9136 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9137 ;;Total ram usage:        0 bytes
  9138 ;; Hardware stack levels used: 1
  9139 ;; Hardware stack levels required when called: 4
  9140 ;; This function calls:
  9141 ;;		Nothing
  9142 ;; This function is called by:
  9143 ;;		_SYSTEM_Initialize
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text49
  9148   00362C                     __ptext49:
  9149                           	callstack 0
  9150   00362C                     _PIN_MANAGER_Initialize:
  9151                           	callstack 25
  9152   00362C                     
  9153                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9154   00362C  0E00               	movlw	0
  9155   00362E  6E89               	movwf	137,c	;volatile
  9156                           
  9157                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9158   003630  0E00               	movlw	0
  9159   003632  6E8A               	movwf	138,c	;volatile
  9160                           
  9161                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  9162   003634  0E00               	movlw	0
  9163   003636  6E8B               	movwf	139,c	;volatile
  9164                           
  9165                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC7;
  9166   003638  0EC7               	movlw	199
  9167   00363A  6E92               	movwf	146,c	;volatile
  9168                           
  9169                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
  9170   00363C  0EFE               	movlw	254
  9171   00363E  6E93               	movwf	147,c	;volatile
  9172                           
  9173                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x87;
  9174   003640  0E87               	movlw	135
  9175   003642  6E94               	movwf	148,c	;volatile
  9176                           
  9177                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x04;
  9178   003644  0E04               	movlw	4
  9179   003646  010F               	movlb	15	; () banked
  9180   003648  6F5D               	movwf	93,b	;volatile
  9181                           
  9182                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  9183   00364A  0E3E               	movlw	62
  9184   00364C  6F5C               	movwf	92,b	;volatile
  9185                           
  9186                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  9187   00364E  0E07               	movlw	7
  9188   003650  6F5B               	movwf	91,b	;volatile
  9189                           
  9190                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  9191   003652  0E00               	movlw	0
  9192   003654  6E85               	movwf	133,c	;volatile
  9193   003656                     
  9194                           ; BSR set to: 15
  9195                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  9196   003656  8EF1               	bsf	241,7,c	;volatile
  9197   003658                     
  9198                           ; BSR set to: 15
  9199   003658  0012               	return		;funcret
  9200   00365A                     __end_of_PIN_MANAGER_Initialize:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function _OSCILLATOR_Initialize *****************
  9204 ;; Defined at:
  9205 ;;		line 62 in file "mcc_generated_files/mcc.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;		None
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;		None
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      void 
  9212 ;; Registers used:
  9213 ;;		wreg, status,2
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9219 ;;      Params:         0       0       0       0       0       0       0       0       0
  9220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9223 ;;Total ram usage:        0 bytes
  9224 ;; Hardware stack levels used: 1
  9225 ;; Hardware stack levels required when called: 4
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_SYSTEM_Initialize
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text50
  9234   0036FA                     __ptext50:
  9235                           	callstack 0
  9236   0036FA                     _OSCILLATOR_Initialize:
  9237                           	callstack 25
  9238   0036FA                     
  9239                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  9240   0036FA  0E70               	movlw	112
  9241   0036FC  6ED3               	movwf	211,c	;volatile
  9242                           
  9243                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
  9244   0036FE  0E00               	movlw	0
  9245   003700  6ED2               	movwf	210,c	;volatile
  9246                           
  9247                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x80;
  9248   003702  0E80               	movlw	128
  9249   003704  6E9B               	movwf	155,c	;volatile
  9250                           
  9251                           ;mcc_generated_files/mcc.c: 71:     ACTCON = 0x00;
  9252   003706  0E00               	movlw	0
  9253   003708  6EB5               	movwf	181,c	;volatile
  9254   00370A                     l130:
  9255                           
  9256                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  9257   00370A  AED2               	btfss	4050,7,c	;volatile
  9258   00370C  EF8A  F01B         	goto	u6031
  9259   003710  EF8C  F01B         	goto	u6030
  9260   003714                     u6031:
  9261   003714  EF85  F01B         	goto	l130
  9262   003718                     u6030:
  9263   003718  0012               	return		;funcret
  9264   00371A                     __end_of_OSCILLATOR_Initialize:
  9265                           	callstack 0
  9266                           
  9267 ;; *************** function _INTERRUPT_Initialize *****************
  9268 ;; Defined at:
  9269 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;		None
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      void 
  9276 ;; Registers used:
  9277 ;;		None
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9283 ;;      Params:         0       0       0       0       0       0       0       0       0
  9284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9286 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9287 ;;Total ram usage:        0 bytes
  9288 ;; Hardware stack levels used: 1
  9289 ;; Hardware stack levels required when called: 4
  9290 ;; This function calls:
  9291 ;;		Nothing
  9292 ;; This function is called by:
  9293 ;;		_SYSTEM_Initialize
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297                           	psect	text51
  9298   00387C                     __ptext51:
  9299                           	callstack 0
  9300   00387C                     _INTERRUPT_Initialize:
  9301                           	callstack 25
  9302   00387C                     
  9303                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  9304   00387C  9ED0               	bcf	208,7,c	;volatile
  9305   00387E  0012               	return		;funcret
  9306   003880                     __end_of_INTERRUPT_Initialize:
  9307                           	callstack 0
  9308                           
  9309 ;; *************** function _EUSART1_Initialize *****************
  9310 ;; Defined at:
  9311 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, status,2, status,0, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9329 ;;Total ram usage:        0 bytes
  9330 ;; Hardware stack levels used: 1
  9331 ;; Hardware stack levels required when called: 5
  9332 ;; This function calls:
  9333 ;;		_EUSART1_SetErrorHandler
  9334 ;;		_EUSART1_SetFramingErrorHandler
  9335 ;;		_EUSART1_SetOverrunErrorHandler
  9336 ;; This function is called by:
  9337 ;;		_SYSTEM_Initialize
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           	psect	text52
  9342   00346C                     __ptext52:
  9343                           	callstack 0
  9344   00346C                     _EUSART1_Initialize:
  9345                           	callstack 24
  9346   00346C                     
  9347                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  9348   00346C  0E08               	movlw	8
  9349   00346E  6EB8               	movwf	184,c	;volatile
  9350                           
  9351                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  9352   003470  0E90               	movlw	144
  9353   003472  6EAB               	movwf	171,c	;volatile
  9354                           
  9355                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  9356   003474  0E24               	movlw	36
  9357   003476  6EAC               	movwf	172,c	;volatile
  9358                           
  9359                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xE1;
  9360   003478  0EE1               	movlw	225
  9361   00347A  6EAF               	movwf	175,c	;volatile
  9362                           
  9363                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x04;
  9364   00347C  0E04               	movlw	4
  9365   00347E  6EB0               	movwf	176,c	;volatile
  9366   003480                     
  9367                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  9368   003480  0E00               	movlw	0
  9369   003482  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  9370   003484  0E00               	movlw	0
  9371   003486  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9372   003488  EC30  F01C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  9373   00348C                     
  9374                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  9375   00348C  0E00               	movlw	0
  9376   00348E  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  9377   003490  0E00               	movlw	0
  9378   003492  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9379   003494  EC2B  F01C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  9380   003498                     
  9381                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  9382   003498  0E00               	movlw	0
  9383   00349A  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  9384   00349C  0E00               	movlw	0
  9385   00349E  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  9386   0034A0  EC35  F01C         	call	_EUSART1_SetErrorHandler	;wreg free
  9387   0034A4                     
  9388                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  9389   0034A4  0E00               	movlw	0
  9390   0034A6  0100               	movlb	0	; () banked
  9391   0034A8  6FFF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9392   0034AA                     
  9393                           ; BSR set to: 0
  9394   0034AA  0012               	return		;funcret
  9395   0034AC                     __end_of_EUSART1_Initialize:
  9396                           	callstack 0
  9397                           
  9398 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9399 ;; Defined at:
  9400 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9403 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9415 ;;      Params:         2       0       0       0       0       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9418 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9419 ;;Total ram usage:        2 bytes
  9420 ;; Hardware stack levels used: 1
  9421 ;; Hardware stack levels required when called: 4
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_EUSART1_Initialize
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text53
  9430   003856                     __ptext53:
  9431                           	callstack 0
  9432   003856                     _EUSART1_SetOverrunErrorHandler:
  9433                           	callstack 24
  9434   003856                     
  9435                           ;mcc_generated_files/eusart1.c: 179:     EUSART1_OverrunErrorHandler = interruptHandler;
  9436   003856  C005  F0F9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  9437   00385A  C006  F0FA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  9438   00385E  0012               	return		;funcret
  9439   003860                     __end_of_EUSART1_SetOverrunErrorHandler:
  9440                           	callstack 0
  9441                           
  9442 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9443 ;; Defined at:
  9444 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9447 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2, status,0
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9459 ;;      Params:         2       0       0       0       0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9462 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9463 ;;Total ram usage:        2 bytes
  9464 ;; Hardware stack levels used: 1
  9465 ;; Hardware stack levels required when called: 4
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_EUSART1_Initialize
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text54
  9474   003860                     __ptext54:
  9475                           	callstack 0
  9476   003860                     _EUSART1_SetFramingErrorHandler:
  9477                           	callstack 24
  9478   003860                     
  9479                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_FramingErrorHandler = interruptHandler;
  9480   003860  C005  F0FB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  9481   003864  C006  F0FC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  9482   003868  0012               	return		;funcret
  9483   00386A                     __end_of_EUSART1_SetFramingErrorHandler:
  9484                           	callstack 0
  9485                           
  9486 ;; *************** function _EUSART1_SetErrorHandler *****************
  9487 ;; Defined at:
  9488 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9491 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9503 ;;      Params:         2       0       0       0       0       0       0       0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9506 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9507 ;;Total ram usage:        2 bytes
  9508 ;; Hardware stack levels used: 1
  9509 ;; Hardware stack levels required when called: 4
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_EUSART1_Initialize
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           	psect	text55
  9518   00386A                     __ptext55:
  9519                           	callstack 0
  9520   00386A                     _EUSART1_SetErrorHandler:
  9521                           	callstack 24
  9522   00386A                     
  9523                           ;mcc_generated_files/eusart1.c: 183:     EUSART1_ErrorHandler = interruptHandler;
  9524   00386A  C005  F0F7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  9525   00386E  C006  F0F8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  9526   003872  0012               	return		;funcret
  9527   003874                     __end_of_EUSART1_SetErrorHandler:
  9528                           	callstack 0
  9529                           
  9530 ;; *************** function _CCP2_Initialize *****************
  9531 ;; Defined at:
  9532 ;;		line 49 in file "mcc_generated_files/ccp2.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      void 
  9539 ;; Registers used:
  9540 ;;		wreg, status,2
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9550 ;;Total ram usage:        0 bytes
  9551 ;; Hardware stack levels used: 1
  9552 ;; Hardware stack levels required when called: 4
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		_SYSTEM_Initialize
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text56
  9561   003828                     __ptext56:
  9562                           	callstack 0
  9563   003828                     _CCP2_Initialize:
  9564                           	callstack 25
  9565   003828                     
  9566                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
  9567   003828  0E00               	movlw	0
  9568   00382A  6E97               	movwf	151,c	;volatile
  9569                           
  9570                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
  9571   00382C  0E00               	movlw	0
  9572   00382E  6E90               	movwf	144,c	;volatile
  9573                           
  9574                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
  9575   003830  0E00               	movlw	0
  9576   003832  6E91               	movwf	145,c	;volatile
  9577   003834  0012               	return		;funcret
  9578   003836                     __end_of_CCP2_Initialize:
  9579                           	callstack 0
  9580                           
  9581 ;; *************** function _ADC_Initialize *****************
  9582 ;; Defined at:
  9583 ;;		line 62 in file "mcc_generated_files/adc.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9601 ;;Total ram usage:        0 bytes
  9602 ;; Hardware stack levels used: 1
  9603 ;; Hardware stack levels required when called: 4
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_SYSTEM_Initialize
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text57
  9612   0037D6                     __ptext57:
  9613                           	callstack 0
  9614   0037D6                     _ADC_Initialize:
  9615                           	callstack 25
  9616   0037D6                     
  9617                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  9618   0037D6  0E00               	movlw	0
  9619   0037D8  6EC1               	movwf	193,c	;volatile
  9620                           
  9621                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x87;
  9622   0037DA  0E87               	movlw	135
  9623   0037DC  6EC0               	movwf	192,c	;volatile
  9624                           
  9625                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  9626   0037DE  0E00               	movlw	0
  9627   0037E0  6EC3               	movwf	195,c	;volatile
  9628                           
  9629                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  9630   0037E2  0E00               	movlw	0
  9631   0037E4  6EC4               	movwf	196,c	;volatile
  9632                           
  9633                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  9634   0037E6  0E01               	movlw	1
  9635   0037E8  6EC2               	movwf	194,c	;volatile
  9636   0037EA  0012               	return		;funcret
  9637   0037EC                     __end_of_ADC_Initialize:
  9638                           	callstack 0
  9639                           
  9640 ;; *************** function _EUSART1_is_tx_ready *****************
  9641 ;; Defined at:
  9642 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      _Bool 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0
  9657 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9659 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9660 ;;Total ram usage:        1 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; Hardware stack levels required when called: 4
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_main
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text58
  9671   003684                     __ptext58:
  9672                           	callstack 0
  9673   003684                     _EUSART1_is_tx_ready:
  9674                           	callstack 26
  9675   003684                     
  9676                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  9677   003684  0E00               	movlw	0
  9678   003686  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
  9679   003688  A89E               	btfss	158,4,c	;volatile
  9680   00368A  EF49  F01B         	goto	u6171
  9681   00368E  EF4B  F01B         	goto	u6170
  9682   003692                     u6171:
  9683   003692  EF54  F01B         	goto	l47
  9684   003696                     u6170:
  9685   003696  AAAC               	btfss	172,5,c	;volatile
  9686   003698  EF50  F01B         	goto	u6181
  9687   00369C  EF52  F01B         	goto	u6180
  9688   0036A0                     u6181:
  9689   0036A0  EF54  F01B         	goto	l47
  9690   0036A4                     u6180:
  9691   0036A4  0E01               	movlw	1
  9692   0036A6  6E05               	movwf	_EUSART1_is_tx_ready$282^0,c
  9693   0036A8                     l47:
  9694   0036A8  5005               	movf	_EUSART1_is_tx_ready$282^0,w,c
  9695   0036AA  0012               	return		;funcret
  9696   0036AC                     __end_of_EUSART1_is_tx_ready:
  9697                           	callstack 0
  9698                           
  9699 ;; *************** function _EUSART1_Write_string *****************
  9700 ;; Defined at:
  9701 ;;		line 141 in file "mcc_generated_files/eusart1.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  data            2    5[COMRAM] PTR const unsigned char 
  9704 ;;		 -> valor_string(14), 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9716 ;;      Params:         2       0       0       0       0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9719 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9720 ;;Total ram usage:        2 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; Hardware stack levels required when called: 5
  9723 ;; This function calls:
  9724 ;;		_EUSART1_Write
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text59
  9731   0035FC                     __ptext59:
  9732                           	callstack 0
  9733   0035FC                     _EUSART1_Write_string:
  9734                           	callstack 25
  9735   0035FC                     
  9736                           ;mcc_generated_files/eusart1.c: 141: void EUSART1_Write_string(const char* data);mcc_gen
      +                          erated_files/eusart1.c: 142: {;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
  9737   0035FC  EF09  F01B         	goto	l5974
  9738   003600                     l5970:
  9739                           
  9740                           ;mcc_generated_files/eusart1.c: 144:     {;mcc_generated_files/eusart1.c: 145:         E
      +                          USART1_Write(*data++);
  9741   003600  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
  9742   003604  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
  9743   003608  50DF               	movf	indf2,w,c
  9744   00360A  ECF6  F01B         	call	_EUSART1_Write
  9745   00360E  4A06               	infsnz	EUSART1_Write_string@data^0,f,c
  9746   003610  2A07               	incf	(EUSART1_Write_string@data+1)^0,f,c
  9747   003612                     l5974:
  9748                           
  9749                           ;mcc_generated_files/eusart1.c: 143:     while(*data != 0)
  9750   003612  C006  FFD9         	movff	EUSART1_Write_string@data,fsr2l
  9751   003616  C007  FFDA         	movff	EUSART1_Write_string@data+1,fsr2h
  9752   00361A  50DF               	movf	indf2,w,c
  9753   00361C  A4D8               	btfss	status,2,c
  9754   00361E  EF13  F01B         	goto	u6191
  9755   003622  EF15  F01B         	goto	u6190
  9756   003626                     u6191:
  9757   003626  EF00  F01B         	goto	l5970
  9758   00362A                     u6190:
  9759   00362A  0012               	return		;funcret
  9760   00362C                     __end_of_EUSART1_Write_string:
  9761                           	callstack 0
  9762                           
  9763 ;; *************** function _EUSART1_Write *****************
  9764 ;; Defined at:
  9765 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  txData          1    wreg     unsigned char 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;  txData          1    4[COMRAM] unsigned char 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0
  9780 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9782 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9783 ;;Total ram usage:        1 bytes
  9784 ;; Hardware stack levels used: 1
  9785 ;; Hardware stack levels required when called: 4
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		_EUSART1_Write_string
  9790 ;;		_putch
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text60
  9795   0037EC                     __ptext60:
  9796                           	callstack 0
  9797   0037EC                     _EUSART1_Write:
  9798                           	callstack 21
  9799                           
  9800                           ;incstack = 0
  9801                           ;EUSART1_Write@txData stored from wreg
  9802   0037EC  6E05               	movwf	EUSART1_Write@txData^0,c
  9803   0037EE                     l67:
  9804                           
  9805                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9806   0037EE  A89E               	btfss	158,4,c	;volatile
  9807   0037F0  EFFC  F01B         	goto	u4351
  9808   0037F4  EFFE  F01B         	goto	u4350
  9809   0037F8                     u4351:
  9810   0037F8  EFF7  F01B         	goto	l67
  9811   0037FC                     u4350:
  9812   0037FC                     
  9813                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9814   0037FC  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9815   003800  0012               	return		;funcret
  9816   003802                     __end_of_EUSART1_Write:
  9817                           	callstack 0
  9818                           
  9819 ;; *************** function _INTERRUPT_InterruptManager *****************
  9820 ;; Defined at:
  9821 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1    wreg      void 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9837 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9838 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9839 ;;Total ram usage:        2 bytes
  9840 ;; Hardware stack levels used: 1
  9841 ;; Hardware stack levels required when called: 3
  9842 ;; This function calls:
  9843 ;;		_TMR1_ISR
  9844 ;; This function is called by:
  9845 ;;		Interrupt level 2
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	intcode
  9850   000008                     __pintcode:
  9851                           	callstack 0
  9852   000008                     _INTERRUPT_InterruptManager:
  9853                           	callstack 18
  9854                           
  9855                           ;incstack = 0
  9856   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9857   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  9858   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9859   000012                     
  9860                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9861   000012  ACF2               	btfss	242,6,c	;volatile
  9862   000014  EF0E  F000         	goto	i2u428_41
  9863   000018  EF10  F000         	goto	i2u428_40
  9864   00001C                     i2u428_41:
  9865   00001C  EF20  F000         	goto	i2l232
  9866   000020                     i2u428_40:
  9867   000020                     
  9868                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9869   000020  A09D               	btfss	157,0,c	;volatile
  9870   000022  EF15  F000         	goto	i2u429_41
  9871   000026  EF17  F000         	goto	i2u429_40
  9872   00002A                     i2u429_41:
  9873   00002A  EF20  F000         	goto	i2l232
  9874   00002E                     i2u429_40:
  9875   00002E  A09E               	btfss	158,0,c	;volatile
  9876   000030  EF1C  F000         	goto	i2u430_41
  9877   000034  EF1E  F000         	goto	i2u430_40
  9878   000038                     i2u430_41:
  9879   000038  EF20  F000         	goto	i2l232
  9880   00003C                     i2u430_40:
  9881   00003C                     
  9882                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  9883   00003C  EC90  F01A         	call	_TMR1_ISR	;wreg free
  9884   000040                     i2l232:
  9885   000040  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9886   000044  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9887   000048  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9888   00004A  0011               	retfie		f
  9889   00004C                     __end_of_INTERRUPT_InterruptManager:
  9890                           	callstack 0
  9891                           
  9892 ;; *************** function _TMR1_ISR *****************
  9893 ;; Defined at:
  9894 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9908 ;;      Params:         0       0       0       0       0       0       0       0       0
  9909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9911 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used: 1
  9914 ;; Hardware stack levels required when called: 2
  9915 ;; This function calls:
  9916 ;;		_TMR1_CallBack
  9917 ;;		_TMR1_WriteTimer
  9918 ;; This function is called by:
  9919 ;;		_INTERRUPT_InterruptManager
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           	psect	text62
  9924   003520                     __ptext62:
  9925                           	callstack 0
  9926   003520                     _TMR1_ISR:
  9927                           	callstack 18
  9928   003520                     
  9929                           ;mcc_generated_files/tmr1.c: 162:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 165:     PIR1bits.TMR1IF = 0;
  9930   003520  909E               	bcf	158,0,c	;volatile
  9931   003522                     
  9932                           ;mcc_generated_files/tmr1.c: 166:     TMR1_WriteTimer(timer1ReloadVal);
  9933   003522  C0F3  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  9934   003526  C0F4  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  9935   00352A  EC56  F01B         	call	_TMR1_WriteTimer	;wreg free
  9936   00352E                     
  9937                           ;mcc_generated_files/tmr1.c: 169:     if (++CountCallBack >= 1000)
  9938   00352E  0100               	movlb	0	; () banked
  9939   003530  4BEF               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
  9940   003532  2BF0               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9941   003534  0EE8               	movlw	232
  9942   003536  5DEF               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
  9943   003538  0E03               	movlw	3
  9944   00353A  59F0               	subwfb	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9945   00353C  A0D8               	btfss	status,0,c
  9946   00353E  EFA3  F01A         	goto	i2u408_41
  9947   003542  EFA5  F01A         	goto	i2u408_40
  9948   003546                     i2u408_41:
  9949   003546  EFAC  F01A         	goto	i2l294
  9950   00354A                     i2u408_40:
  9951   00354A                     
  9952                           ; BSR set to: 0
  9953                           ;mcc_generated_files/tmr1.c: 170:     {;mcc_generated_files/tmr1.c: 172:         TMR1_Ca
      +                          llBack();
  9954   00354A  EC4B  F019         	call	_TMR1_CallBack	;wreg free
  9955   00354E                     
  9956                           ;mcc_generated_files/tmr1.c: 175:         CountCallBack = 0;
  9957   00354E  0E00               	movlw	0
  9958   003550  0100               	movlb	0	; () banked
  9959   003552  6FF0               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
  9960   003554  0E00               	movlw	0
  9961   003556  6FEF               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
  9962   003558                     i2l294:
  9963                           
  9964                           ; BSR set to: 0
  9965   003558  0012               	return		;funcret
  9966   00355A                     __end_of_TMR1_ISR:
  9967                           	callstack 0
  9968                           
  9969 ;; *************** function _TMR1_WriteTimer *****************
  9970 ;; Defined at:
  9971 ;;		line 123 in file "mcc_generated_files/tmr1.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  timerVal        2    0[COMRAM] unsigned short 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;		None
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		wreg, status,2
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9985 ;;      Params:         2       0       0       0       0       0       0       0       0
  9986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9988 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9989 ;;Total ram usage:        2 bytes
  9990 ;; Hardware stack levels used: 1
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_TMR1_ISR
  9995 ;;		_TMR1_Reload
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text63
 10000   0036AC                     __ptext63:
 10001                           	callstack 0
 10002   0036AC                     _TMR1_WriteTimer:
 10003                           	callstack 19
 10004   0036AC                     
 10005                           ;mcc_generated_files/tmr1.c: 123: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 124: {;mcc_generated_files/tmr1.c: 125:     if (T1CONbits.T1SYNC == 1)
 10006   0036AC  A4CD               	btfss	205,2,c	;volatile
 10007   0036AE  EF5B  F01B         	goto	i2u388_41
 10008   0036B2  EF5D  F01B         	goto	i2u388_40
 10009   0036B6                     i2u388_41:
 10010   0036B6  EF65  F01B         	goto	i2l4264
 10011   0036BA                     i2u388_40:
 10012   0036BA                     
 10013                           ;mcc_generated_files/tmr1.c: 126:     {;mcc_generated_files/tmr1.c: 128:         T1CONbi
      +                          ts.TMR1ON = 0;
 10014   0036BA  90CD               	bcf	205,0,c	;volatile
 10015   0036BC                     
 10016                           ;mcc_generated_files/tmr1.c: 131:         TMR1H = (uint8_t)(timerVal >> 8);
 10017   0036BC  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 10018   0036BE  6ECF               	movwf	207,c	;volatile
 10019   0036C0                     
 10020                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
 10021   0036C0  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 10022   0036C4                     
 10023                           ;mcc_generated_files/tmr1.c: 135:         T1CONbits.TMR1ON =1;
 10024   0036C4  80CD               	bsf	205,0,c	;volatile
 10025                           
 10026                           ;mcc_generated_files/tmr1.c: 136:     }
 10027   0036C6  EF69  F01B         	goto	i2l279
 10028   0036CA                     i2l4264:
 10029                           
 10030                           ;mcc_generated_files/tmr1.c: 138:     {;mcc_generated_files/tmr1.c: 140:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 10031   0036CA  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 10032   0036CC  6ECF               	movwf	207,c	;volatile
 10033   0036CE                     
 10034                           ;mcc_generated_files/tmr1.c: 141:         TMR1L = (uint8_t)timerVal;
 10035   0036CE  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 10036   0036D2                     i2l279:
 10037   0036D2  0012               	return		;funcret
 10038   0036D4                     __end_of_TMR1_WriteTimer:
 10039                           	callstack 0
 10040                           
 10041 ;; *************** function _TMR1_CallBack *****************
 10042 ;; Defined at:
 10043 ;;		line 179 in file "mcc_generated_files/tmr1.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;		None
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0
 10058 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10060 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10061 ;;Total ram usage:        0 bytes
 10062 ;; Hardware stack levels used: 1
 10063 ;; Hardware stack levels required when called: 1
 10064 ;; This function calls:
 10065 ;;		NULL
 10066 ;;		_TMR1_DefaultInterruptHandler
 10067 ;; This function is called by:
 10068 ;;		_TMR1_ISR
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text64
 10073   003296                     __ptext64:
 10074                           	callstack 0
 10075   003296                     _TMR1_CallBack:
 10076                           	callstack 18
 10077   003296                     
 10078                           ;mcc_generated_files/tmr1.c: 182:     conteo = conteo + 1;
 10079   003296  0E01               	movlw	1
 10080   003298  0100               	movlb	0	; () banked
 10081   00329A  25DD               	addwf	_conteo& (0+255),w,b
 10082   00329C  6FDD               	movwf	_conteo& (0+255),b
 10083   00329E  0E00               	movlw	0
 10084   0032A0  21DE               	addwfc	(_conteo+1)& (0+255),w,b
 10085   0032A2  6FDE               	movwf	(_conteo+1)& (0+255),b
 10086   0032A4  0E00               	movlw	0
 10087   0032A6  21DF               	addwfc	(_conteo+2)& (0+255),w,b
 10088   0032A8  6FDF               	movwf	(_conteo+2)& (0+255),b
 10089   0032AA  0E00               	movlw	0
 10090   0032AC  21E0               	addwfc	(_conteo+3)& (0+255),w,b
 10091   0032AE  6FE0               	movwf	(_conteo+3)& (0+255),b
 10092                           
 10093                           ;mcc_generated_files/tmr1.c: 183:     if(TMR1_InterruptHandler)
 10094   0032B0  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 10095   0032B2  11F2               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 10096   0032B4  B4D8               	btfsc	status,2,c
 10097   0032B6  EF5F  F019         	goto	i2u389_41
 10098   0032BA  EF61  F019         	goto	i2u389_40
 10099   0032BE                     i2u389_41:
 10100   0032BE  EF6E  F019         	goto	i2l298
 10101   0032C2                     i2u389_40:
 10102   0032C2                     
 10103                           ; BSR set to: 0
 10104                           ;mcc_generated_files/tmr1.c: 184:     {;mcc_generated_files/tmr1.c: 185:         TMR1_In
      +                          terruptHandler();
 10105   0032C2  D802               	call	i2u390_48
 10106   0032C4  EF6E  F019         	goto	i2u390_49
 10107   0032C8                     i2u390_48:
 10108   0032C8  0005               	push	
 10109   0032CA  6EFA               	movwf	pclath,c
 10110   0032CC  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 10111   0032CE  6EFD               	movwf	tosl,c
 10112   0032D0  51F2               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 10113   0032D2  6EFE               	movwf	tosh,c
 10114   0032D4  50F8               	movf	tblptru,w,c
 10115   0032D6  6EFF               	movwf	tosu,c
 10116   0032D8  50FA               	movf	pclath,w,c
 10117   0032DA  0012               	return		;indir
 10118   0032DC                     i2u390_49:
 10119   0032DC                     i2l298:
 10120   0032DC  0012               	return		;funcret
 10121   0032DE                     __end_of_TMR1_CallBack:
 10122                           	callstack 0
 10123                           
 10124 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10125 ;; Defined at:
 10126 ;;		line 193 in file "mcc_generated_files/tmr1.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;		None
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;		None
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		None
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10140 ;;      Params:         0       0       0       0       0       0       0       0       0
 10141 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10142 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10143 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10144 ;;Total ram usage:        0 bytes
 10145 ;; Hardware stack levels used: 1
 10146 ;; This function calls:
 10147 ;;		Nothing
 10148 ;; This function is called by:
 10149 ;;		_TMR1_Initialize
 10150 ;;		_TMR1_CallBack
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text65
 10155   003880                     __ptext65:
 10156                           	callstack 0
 10157   003880                     _TMR1_DefaultInterruptHandler:
 10158                           	callstack 18
 10159   003880  0012               	return		;funcret
 10160   003882                     __end_of_TMR1_DefaultInterruptHandler:
 10161                           	callstack 0
 10162                           
 10163                           	psect	text66
 10164   000000                     __ptext66:
 10165                           	callstack 0
 10166   000000                     
 10167                           	psect	rparam
 10168   000000                     
 10169                           	psect	temp
 10170   00005B                     btemp:
 10171                           	callstack 0
 10172   00005B                     	ds	1
 10173   000000                     int$flags	set	btemp
 10174   000000                     wtemp8	set	btemp+1
 10175   000000                     ttemp5	set	btemp+1
 10176   000000                     ttemp6	set	btemp+4
 10177   000000                     ttemp7	set	btemp+8
 10178                           
 10179                           	psect	idloc
 10180                           
 10181                           ;Config register IDLOC0 @ 0x200000
 10182                           ;	unspecified, using default values
 10183   200000                     	org	2097152
 10184   200000  FF                 	db	255
 10185                           
 10186                           ;Config register IDLOC1 @ 0x200001
 10187                           ;	unspecified, using default values
 10188   200001                     	org	2097153
 10189   200001  FF                 	db	255
 10190                           
 10191                           ;Config register IDLOC2 @ 0x200002
 10192                           ;	unspecified, using default values
 10193   200002                     	org	2097154
 10194   200002  FF                 	db	255
 10195                           
 10196                           ;Config register IDLOC3 @ 0x200003
 10197                           ;	unspecified, using default values
 10198   200003                     	org	2097155
 10199   200003  FF                 	db	255
 10200                           
 10201                           ;Config register IDLOC4 @ 0x200004
 10202                           ;	unspecified, using default values
 10203   200004                     	org	2097156
 10204   200004  FF                 	db	255
 10205                           
 10206                           ;Config register IDLOC5 @ 0x200005
 10207                           ;	unspecified, using default values
 10208   200005                     	org	2097157
 10209   200005  FF                 	db	255
 10210                           
 10211                           ;Config register IDLOC6 @ 0x200006
 10212                           ;	unspecified, using default values
 10213   200006                     	org	2097158
 10214   200006  FF                 	db	255
 10215                           
 10216                           ;Config register IDLOC7 @ 0x200007
 10217                           ;	unspecified, using default values
 10218   200007                     	org	2097159
 10219   200007  FF                 	db	255
 10220                           
 10221                           	psect	config
 10222                           
 10223                           ;Config register CONFIG1L @ 0x300000
 10224                           ;	PLL Selection
 10225                           ;	PLLSEL = PLL3X, 3x clock multiplier
 10226                           ;	PLL Enable Configuration bit
 10227                           ;	CFGPLLEN = ON, PLL Enabled
 10228                           ;	CPU System Clock Postscaler
 10229                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 10230                           ;	Low Speed USB mode with 48 MHz system clock
 10231                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
 10232   300000                     	org	3145728
 10233   300000  23                 	db	35
 10234                           
 10235                           ;Config register CONFIG1H @ 0x300001
 10236                           ;	Oscillator Selection
 10237                           ;	FOSC = HSH, HS oscillator, high power 16MHz to 25MHz
 10238                           ;	Primary Oscillator Shutdown
 10239                           ;	PCLKEN = ON, Primary oscillator enabled
 10240                           ;	Fail-Safe Clock Monitor
 10241                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10242                           ;	Internal/External Oscillator Switchover
 10243                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10244   300001                     	org	3145729
 10245   300001  22                 	db	34
 10246                           
 10247                           ;Config register CONFIG2L @ 0x300002
 10248                           ;	Power-up Timer Enable
 10249                           ;	nPWRTEN = ON, Power up timer enabled
 10250                           ;	Brown-out Reset Enable
 10251                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 10252                           ;	Brown-out Reset Voltage
 10253                           ;	BORV = 190, BOR set to 1.9V nominal
 10254                           ;	Low-Power Brown-out Reset
 10255                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 10256   300002                     	org	3145730
 10257   300002  5E                 	db	94
 10258                           
 10259                           ;Config register CONFIG2H @ 0x300003
 10260                           ;	Watchdog Timer Enable bits
 10261                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 10262                           ;	Watchdog Timer Postscaler
 10263                           ;	WDTPS = 32768, 1:32768
 10264   300003                     	org	3145731
 10265   300003  3C                 	db	60
 10266                           
 10267                           ; Padding undefined space
 10268   300004                     	org	3145732
 10269   300004  FF                 	db	255
 10270                           
 10271                           ;Config register CONFIG3H @ 0x300005
 10272                           ;	CCP2 MUX bit
 10273                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 10274                           ;	PORTB A/D Enable bit
 10275                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 10276                           ;	Timer3 Clock Input MUX bit
 10277                           ;	T3CMX = RC0, T3CKI function is on RC0
 10278                           ;	SDO Output MUX bit
 10279                           ;	SDOMX = RB3, SDO function is on RB3
 10280                           ;	Master Clear Reset Pin Enable
 10281                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 10282   300005                     	org	3145733
 10283   300005  D1                 	db	209
 10284                           
 10285                           ;Config register CONFIG4L @ 0x300006
 10286                           ;	Stack Full/Underflow Reset
 10287                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10288                           ;	Single-Supply ICSP Enable bit
 10289                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 10290                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 10291                           ;	ICPRT = OFF, ICPORT disabled
 10292                           ;	Extended Instruction Set Enable bit
 10293                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 10294                           ;	Background Debugger Enable bit
 10295                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10296   300006                     	org	3145734
 10297   300006  85                 	db	133
 10298                           
 10299                           ; Padding undefined space
 10300   300007                     	org	3145735
 10301   300007  FF                 	db	255
 10302                           
 10303                           ;Config register CONFIG5L @ 0x300008
 10304                           ;	Block 0 Code Protect
 10305                           ;	CP0 = OFF, Block 0 is not code-protected
 10306                           ;	Block 1 Code Protect
 10307                           ;	CP1 = OFF, Block 1 is not code-protected
 10308                           ;	Block 2 Code Protect
 10309                           ;	CP2 = OFF, Block 2 is not code-protected
 10310                           ;	Block 3 Code Protect
 10311                           ;	CP3 = OFF, Block 3 is not code-protected
 10312   300008                     	org	3145736
 10313   300008  0F                 	db	15
 10314                           
 10315                           ;Config register CONFIG5H @ 0x300009
 10316                           ;	Boot Block Code Protect
 10317                           ;	CPB = OFF, Boot block is not code-protected
 10318                           ;	Data EEPROM Code Protect
 10319                           ;	CPD = OFF, Data EEPROM is not code-protected
 10320   300009                     	org	3145737
 10321   300009  C0                 	db	192
 10322                           
 10323                           ;Config register CONFIG6L @ 0x30000A
 10324                           ;	Block 0 Write Protect
 10325                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 10326                           ;	Block 1 Write Protect
 10327                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 10328                           ;	Block 2 Write Protect
 10329                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 10330                           ;	Block 3 Write Protect
 10331                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 10332   30000A                     	org	3145738
 10333   30000A  0F                 	db	15
 10334                           
 10335                           ;Config register CONFIG6H @ 0x30000B
 10336                           ;	Configuration Registers Write Protect
 10337                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10338                           ;	Boot Block Write Protect
 10339                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 10340                           ;	Data EEPROM Write Protect
 10341                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10342   30000B                     	org	3145739
 10343   30000B  E0                 	db	224
 10344                           
 10345                           ;Config register CONFIG7L @ 0x30000C
 10346                           ;	Block 0 Table Read Protect
 10347                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 10348                           ;	Block 1 Table Read Protect
 10349                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 10350                           ;	Block 2 Table Read Protect
 10351                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 10352                           ;	Block 3 Table Read Protect
 10353                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 10354   30000C                     	org	3145740
 10355   30000C  0F                 	db	15
 10356                           
 10357                           ;Config register CONFIG7H @ 0x30000D
 10358                           ;	Boot Block Table Read Protect
 10359                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 10360   30000D                     	org	3145741
 10361   30000D  40                 	db	64
 10362                           tosu	equ	0xFFF
 10363                           tosh	equ	0xFFE
 10364                           tosl	equ	0xFFD
 10365                           stkptr	equ	0xFFC
 10366                           pclatu	equ	0xFFB
 10367                           pclath	equ	0xFFA
 10368                           pcl	equ	0xFF9
 10369                           tblptru	equ	0xFF8
 10370                           tblptrh	equ	0xFF7
 10371                           tblptrl	equ	0xFF6
 10372                           tablat	equ	0xFF5
 10373                           prodh	equ	0xFF4
 10374                           prodl	equ	0xFF3
 10375                           indf0	equ	0xFEF
 10376                           postinc0	equ	0xFEE
 10377                           postdec0	equ	0xFED
 10378                           preinc0	equ	0xFEC
 10379                           plusw0	equ	0xFEB
 10380                           fsr0h	equ	0xFEA
 10381                           fsr0l	equ	0xFE9
 10382                           wreg	equ	0xFE8
 10383                           indf1	equ	0xFE7
 10384                           postinc1	equ	0xFE6
 10385                           postdec1	equ	0xFE5
 10386                           preinc1	equ	0xFE4
 10387                           plusw1	equ	0xFE3
 10388                           fsr1h	equ	0xFE2
 10389                           fsr1l	equ	0xFE1
 10390                           bsr	equ	0xFE0
 10391                           indf2	equ	0xFDF
 10392                           postinc2	equ	0xFDE
 10393                           postdec2	equ	0xFDD
 10394                           preinc2	equ	0xFDC
 10395                           plusw2	equ	0xFDB
 10396                           fsr2h	equ	0xFDA
 10397                           fsr2l	equ	0xFD9
 10398                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    14
    Data        12
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     97     160
    BANK1           256      6     116
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_Write_string@data	PTR const unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    nrf2401_direccion_TX_RX@direccion_	PTR const unsigned char  size(1) Largest target is 5
		 -> direccion_tx(CODE[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1857$buffer	PTR unsigned char  size(2) Largest target is 0

    S1857$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 14
		 -> valor_string(BANK1[14]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _trip_protec_current->___flge
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _floorf->___fldiv
    _recibido_1->_confirmacion
    _nrf2401_recibe->_spi_s_read
    _nrf2401_recibe->_spi_s_write
    _get_Status->_nrf2401_read
    _nrf2401_read->_spi_s_read
    _nrf2401_read->_spi_s_write
    _confirmacion->_envio_ya_recibido
    _envio_ya_recibido->_nrF2401_init_RX
    _envio_ya_recibido->_nrF2401_init_TX
    _nrf2401_envia->_nrf2401_write
    _flush_TX->_nrf2401_write
    _nrF2401_init_TX->_nrf2401_direccion_TX_RX
    _nrF2401_init_RX->_nrf2401_direccion_TX_RX
    _nrf2401_direccion_TX_RX->_spi_s_write
    _flush_TX_RX->_nrf2401_write
    _nrf2401_write->_spi_s_write
    _nrf2401_comando->_spi_s_write
    _get_corriente_AC->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flsub
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   94590
                                              0 BANK1      6     6      0
               _EUSART1_Write_string
                _EUSART1_is_tx_ready
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                   _get_corriente_AC
                    _nrF2401_init_RX
                         _recibido_1
                         _spi_s_init
                            _sprintf
                _trip_protec_current
 ---------------------------------------------------------------------------------
 (1) _trip_protec_current                                  4     4      0    2786
                                             55 COMRAM     4     4      0
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   32167
                                             77 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   31669
                                             73 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   31181
                                             62 BANK0     11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     852
                                             10 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   28406
                                             10 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3163
                                             20 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1239
                                             14 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     919
                                              6 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             76 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spi_s_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibido_1                                           0     0      0   28362
                       _confirmacion
                  _envio_ya_recibido
                   _nrf2401_haydatos
                     _nrf2401_recibe
 ---------------------------------------------------------------------------------
 (2) _nrf2401_recibe                                       1     1      0     250
                                              6 COMRAM     1     1      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (2) _nrf2401_haydatos                                     0     0      0     284
                         _get_Status
 ---------------------------------------------------------------------------------
 (3) _get_Status                                           0     0      0     284
                       _nrf2401_read
 ---------------------------------------------------------------------------------
 (4) _nrf2401_read                                         2     2      0     284
                                              6 COMRAM     2     2      0
                         _spi_s_read
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _spi_s_read                                           2     2      0     111
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _confirmacion                                         2     2      0   13914
                                             15 COMRAM     2     2      0
                  _envio_ya_recibido
 ---------------------------------------------------------------------------------
 (2) _envio_ya_recibido                                    4     4      0   13914
                                             11 COMRAM     4     4      0
                    _nrF2401_init_RX
                    _nrF2401_init_TX
                      _nrf2401_envia
 ---------------------------------------------------------------------------------
 (3) _nrf2401_envia                                        2     2      0    4029
                                              8 COMRAM     1     1      0
                           _flush_TX
                      _nrf2401_write
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (4) _flush_TX                                             0     0      0    2013
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (3) _nrF2401_init_TX                                      1     1      0    4907
                                             10 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (3) _nrF2401_init_RX                                      1     1      0    4907
                                             10 COMRAM     1     1      0
                        _flush_TX_RX
            _nrf2401_direccion_TX_RX
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (4) _nrf2401_direccion_TX_RX                              4     2      2     986
                                              6 COMRAM     4     2      2
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (4) _flush_TX_RX                                          0     0      0    2013
                    _nrf2401_comando
                      _nrf2401_write
 ---------------------------------------------------------------------------------
 (4) _nrf2401_write                                        2     1      1    1877
                                              6 COMRAM     2     1      1
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (5) _nrf2401_comando                                      1     1      0     136
                                              6 COMRAM     1     1      0
                        _spi_s_write
 ---------------------------------------------------------------------------------
 (3) _spi_s_write                                          2     2      0     105
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_corriente_AC                                    11     7      4   18724
                                             76 COMRAM     5     1      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4547
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3650
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2786
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                             51 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                     _ADC_Initialize
                    _CCP2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_tx_ready                                  1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_string                                 2     0      2     186
                                              5 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     240
                                              2 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write_string
     _EUSART1_Write
   _EUSART1_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   ___fladd
   ___fldiv
     ___fladd (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
   _get_corriente_AC
     _ADC_GetConversion
     ___fladd
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _nrF2401_init_RX
     _flush_TX_RX
       _nrf2401_comando
         _spi_s_write
       _nrf2401_write
         _spi_s_write
     _nrf2401_direccion_TX_RX
       _spi_s_write
     _nrf2401_write
   _recibido_1
     _confirmacion
       _envio_ya_recibido
         _nrF2401_init_RX
         _nrF2401_init_TX
           _flush_TX_RX
           _nrf2401_direccion_TX_RX
           _nrf2401_write
         _nrf2401_envia
           _flush_TX
             _nrf2401_comando
             _nrf2401_write
           _nrf2401_write
           _spi_s_write
     _envio_ya_recibido
     _nrf2401_haydatos
       _get_Status
         _nrf2401_read
           _spi_s_read
           _spi_s_write
     _nrf2401_recibe
       _spi_s_read
       _spi_s_write
   _spi_s_init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
   _trip_protec_current
     ___flge

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      74       7       45.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllllh     23      0       0      34        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      35        0.0%
BITBIGSFRhlhhll      7      0       0      23        0.0%
BITBIGSFRhll         7      0       0      24        0.0%
BITBIGSFRllllhl      4      0       0      31        0.0%
BITBIGSFRlhhl        4      0       0      26        0.0%
BITBIGSFRlllllh      3      0       0      33        0.0%
BITBIGSFRllllhh      3      0       0      29        0.0%
BITBIGSFRlllllh      3      0       0      32        0.0%
BITBIGSFRllllhh      2      0       0      30        0.0%
BITBIGSFRlhhh        2      0       0      25        0.0%
BITBIGSFRhlhhh       1      0       0      22        0.0%
BITBIGSFRlllh        1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16E      36        0.0%
DATA                 0      0     16E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Sep 25 13:37:02 2023

                                             _I 0057                                    ___fldiv@aexp 004C  
                                  ___fldiv@bexp 004B                                               _i 00EB  
                                             _j 00E9                                               _k 00E7  
                                             _l 00E5                                    ___fldiv@sign 0044  
                                 ?_confirmacion 0001                                              l43 34AA  
                                            l70 3800                                              l47 36A8  
                                            l48 36AA                                              l82 384A  
                                            l67 37EE                                              l76 362A  
                                            l94 3868                                              l97 385E  
                           ___wmul@multiplicand 0007                                             l100 3872  
                                           l130 370A                                             l133 3718  
                                           l301 3854                                             l206 34FE  
                                           l127 3754                                             l160 3658  
                                           l225 387E                                             l209 351E  
                                           l402 387A                                             l172 3834  
                                           l510 3104                                             l191 37EA  
                                           l415 3736                                             l351 37D4  
                                           l360 3258                                             l265 3682  
                                           l521 36F8                                             l362 326C  
                                           l370 3814                                             l515 31AE  
                                           l364 3294                                             l357 3322  
                                           l373 3770                                             l390 35C6  
                                           l518 35FA                                             l367 378C  
                                           l384 3826                                             l377 3462  
                                           l393 37A6                                             l481 2066  
                                           l378 346A                                             l482 2066  
                                           l387 37BE                                             l491 216C  
                                           l396 2FE2                                             l492 216C  
                                           l476 1FCA                                             l469 2772  
                                           l477 1FCA                                             l494 2170  
                                           l486 2102                                             l399 30A8  
                                           l487 2102                                             l818 2B62  
                                           l780 2EC8                                             l791 2C66  
                                           l786 2C20                                             l795 3590  
                               _timer1ReloadVal 00F3                                             _pad 2FE4  
                                           tosl 0FFD                                             wreg 0FE8  
                                    _TXSTA1bits 0FAC                                    ___flmul@aexp 0020  
                                  ___flmul@bexp 0025                                    ___flmul@sign 001F  
                                  ___flmul@temp 002A                                    ___flmul@prod 0026  
                                  ___fltol@exp1 000E                                 _nrF2401_init_RX 2F70  
                               _nrF2401_init_TX 304A                                            l1103 1E8E  
                                          l1105 1CEE                                            l1114 1D34  
                                          l1050 13E8                                            l1051 13AE  
                                          l1116 1DAC                                            l1108 1CB2  
                                          l1117 1D9A                                            l1142 1986  
                                          l1230 3048                                            l1310 2596  
                                          l1135 1790                                            l1152 1AB6  
                                          l1144 19FE                                            l1145 19EC  
                                          l1049 13FA                                            l1241 120A  
                                          l1066 1514                                            l1058 16CA  
                                          l1226 2FFA                                            l1139 1AF4  
                                          l1075 15E4                                            l1091 3368  
                                          l1076 15D2                                            l1244 0BAA  
                                          l1317 33AA                                            l1190 28BE  
                                          l1334 2386                                            l1246 09F0  
                                          l1183 2862                                            l1327 2D64  
                                          l1176 27CA                                            l1337 22CA  
                                          l1354 31FE                                            l1274 0FF2  
                                          l1290 2F6E                                            l1179 2926  
                                          l1348 315A                                            l1380 34E4  
                                          l1366 2E1E                                            l1374 342A  
                                          l1286 2F66                                            l1199 33EA  
                                          l5000 1B5C                                            l5010 1B88  
                                          l5002 1B62                                            l5100 1E34  
                                          l5020 1BC2                                            l5012 1B98  
                                          l5004 1B68                                            l5110 1E82  
                                          l5102 1E4E                                            l5022 1BD8  
                                          l5014 1BA8                                            l5006 1B76  
                                          l5112 1E84                                            l5104 1E6A  
                                          l5040 1C2C                                            l5024 1BE8  
                                          l5032 1C08                                            l5016 1BAA  
                                          l5008 1B78                                            l5200 194E  
                                          l5120 16CC                                            l6000 261A  
                                          l5106 1E6E                                            l5050 1C7E  
                                          l5042 1C46                                            l5034 1C18  
                                          l5026 1BF0                                            l5018 1BB2  
                                          l5210 19A4                                            l5202 196C  
                                          l5130 1708                                            l5122 16D8  
                                          l6010 26F6                                            l6002 2672  
                                          l5108 1E7C                                            l5060 1CDA  
                                          l5052 1C8E                                            l5044 1C56  
                                          l5036 1C18                                            l5028 1BF4  
                                          l5220 1A0E                                            l5212 19A8  
                                          l5204 1976                                            l5140 173A  
                                          l5132 1718                                            l5124 16E6  
                                          l6004 26A4                                            l6012 26FC  
                                          l6020 1EC2                                            l5070 1D1A  
                                          l5062 1CDC                                            l5054 1CA2  
                                          l5046 1C66                                            l5230 1A70  
                                          l5222 1A1A                                            l5214 19B6  
                                          l5206 1984                                            l5150 177A  
                                          l5142 1748                                            l5134 171E  
                                          l5126 16E8                                            l6014 271A  
                                          l6006 26B4                                            l5310 2AB2  
                                          l5302 2A5E                                            l6030 1F64  
                                          l6022 1ED4                                            l5080 1D56  
                                          l5072 1D24                                            l5064 1CEC  
                                          l5056 1CB0                                            l5048 1C76  
                                          l5240 1AD8                                            l5232 1A84  
                                          l5224 1A28                                            l5216 19E4  
                                          l5208 1996                                            l5160 17C4  
                                          l5152 1780                                            l5144 174A  
                                          l5136 172E                                            l5128 16F8  
                                          l6008 26E6                                            l5312 2AB4  
                                          l5304 2A74                                            l5400 220C  
                                          l6040 2000                                            l6032 1F96  
                                          l6024 1F0A                                            l5090 1DC8  
                                          l5082 1D64                                            l5074 1D32  
                                          l5066 1CFE                                            l5058 1CBC  
                                          l5242 1ADA                                            l5234 1A9E  
                                          l5226 1A52                                            l5170 1814  
                                          l5162 17D0                                            l5154 17A0  
                                          l5146 175A                                            l5138 1734  
                                          l5250 3324                                            l5314 2AC4  
                                          l5410 232A                                            l6050 209C  
                                          l6042 2032                                            l6034 1FC0  
                                          l6026 1F1C                                            l6018 1E90  
                                          l6130 2936                                            l6122 2928  
                                          l5092 1DD6                                            l5084 1D92  
                                          l5068 1D14                                            l5076 1D44  
                                          l5236 1ABA                                            l5244 1AE0  
                                          l5228 1A56                                            l5180 1856  
                                          l5172 1820                                            l5164 17DA  
                                          l5156 17B0                                            l5148 176A  
                                          l5252 3334                                            l4700 3774  
                                          l5260 2E5E                                            l5340 2B42  
                                          l5324 2AEE                                            l5316 2AC8  
                                          l5308 2A88                                            l5412 233E  
                                          l5404 227E                                            l5420 31B0  
                                          l5500 087A                                            l6220 244A  
                                          l6060 2138                                            l6052 20CE  
                                          l6044 205C                                            l6036 1FC8  
                                          l6028 1F32                                            l6140 2962  
                                          l6132 293A                                            l6124 292C  
                                          l5094 1E00                                            l5078 1D52  
                                          l5246 1AE4                                            l5238 1ACA  
                                          l5190 18B8                                            l5182 1862  
                                          l5174 182C                                            l5166 17F0  
                                          l4710 3806                                            l4702 3776  
                                          l5262 2E8C                                            l5342 2B52  
                                          l5334 2B16                                            l5326 2AF8  
                                          l5318 2AD6                                            l5414 2366  
                                          l5406 22BA                                            l5422 31C4  
                                          l5430 31E4                                            l5350 3006  
                                          l5510 08B6                                            l5502 0882  
                                          l6222 24EC                                            l6070 33C2  
                                          l6062 2162                                            l6054 20F8  
                                          l6046 2064                                            l6038 1FCE  
                                          l6150 2A14                                            l6142 2964  
                                          l6134 293E                                            l6126 292E  
                                          ?_pad 0015                                            l5088 1DBC  
                                          l5096 1E04                                            l5280 2BE0  
                                          l5272 2B64                                            l5192 18C4  
                                          l5184 1872                                            l5176 183A  
                                          l5168 17FC                                            l4800 1396  
                                          l4720 1226                                            l4712 380C  
                                          l4704 3784                                            l5440 3766  
                                          l5432 3758                                            l6080 30BE  
                                          l5264 2E9C                                            l5256 2E20  
                                          l5336 2B22                                            l5328 2B02  
                                          l5360 2C88                                            l5416 2376  
                                          l5408 22EE                                            l5424 31D0  
                                          l5352 3016                                            l5600 0C4C  
                                          l5520 08FC                                            l5504 0892  
                                          l5512 08BA                                            l6224 2558  
                                          l6072 33CA                                            l6064 216A  
                                          l6056 2100                                            l6048 206A  
                                          l6152 2A28                                            l6144 297E  
                                          l6136 2942                                            l6128 2930  
                                          l5098 1E1E                                            l5290 2C64  
                                          l5282 2BEE                                            l5274 2B92  
                                          l5194 18E0                                            l5186 188C  
                                          l5178 1846                                            l4810 13DA  
                                          l4802 13A6                                            l4730 125A  
                                          l4722 1228                                            l4714 380E  
                                          l4706 3786                                            l5450 3598  
                                          l5442 3768                                            l5434 3758  
                                          l6090 30FA                                            l6082 30C6  
                                          l5266 2EC0                                            l5258 2E4E  
                                          l5338 2B32                                            l5362 2CC6  
                                          l5370 2D06                                            l5426 31D4  
                                          l5354 301A                                            l5346 2FE4  
                                          l5602 0C60                                            l5610 0D56  
                                          l5522 0904                                            l5514 08E0  
                                          l5530 093E                                            l5506 08A2  
                                          l6074 33DA                                            l6066 33AC  
                                          l6058 2106                                            l6154 2A34  
                                          l6146 299A                                            l6138 2948  
                                          l4660 37FC                                            l5284 2C00  
                                          l5276 2BA2                                            l5196 190A  
                                          l5188 189C                                            l4900 168A  
                                          l4812 13DC                                            l4804 13BC  
                                          l4740 128C                                            l4724 1238  
                                          l4732 1262                                            l4716 120C  
                                          l4708 3804                                            l5460 35B2  
                                          l5452 35A2                                            l5436 375A  
                                          l6092 30FE                                            l6084 30D6  
                                          l5268 2EC6                                            l5372 2D18  
                                          l5364 2CEE                                            l5428 31E0  
                                          l5356 3038                                            l5348 2FF2  
                                          l5380 34AC                                            l5700 11C0  
                                          l5620 0E22                                            l5612 0D74  
                                          l5604 0CC4                                            l5540 0988  
                                          l5532 0964                                            l5524 0918  
                                          l5516 08F2                                            l5508 08AE  
                                          l6068 33BA                                            l6156 2A38  
                                          l6148 29F2                                            l5286 2C0E  
                                          l5278 2BD0                                            l5198 1940  
                                          l4910 16AA                                            l4902 168E  
                                          l4830 1464                                            l4822 142C  
                                          l4814 13E6                                            l4806 13C8  
                                          l4750 12C2                                            l4742 1292  
                                          l4734 1272                                            l4726 1248  
                                          l4718 1218                                            l4670 3266  
                                          l5470 2F74                                            l5462 35B4  
                                          l5454 35A4                                            l5446 3594  
                                          l5438 3760                                            l6086 30DE  
                                          l6078 30AA                                            l5294 355A  
                                          l5366 2CFA                                            l5358 2C68  
                                          l4662 3844                                            l5382 34B4  
                                          l5702 11D0                                            l5630 0ED2  
                                          l5622 0E32                                            l5614 0DA8  
                                          l5606 0D1C                                            l5550 09BA  
                                          l5534 0976                                            l5526 0922  
                                          l5518 08F6                                            l5710 2ECA  
                                          l6158 2A3C                                            l5288 2C5E  
                                          l4912 16B8                                            l4904 169C  
                                          l4832 1468                                            l4824 143C  
                                          l4816 1408                                            l4840 1488  
                                          l4808 13CC                                            l4760 12FE  
                                          l4752 12D2                                            l4744 12A0  
                                          l4736 1278                                            l4728 1258  
                                          l4680 327C                                            l4672 326E  
                                          l4664 3250                                            l5472 2FC4  
                                          l5480 304E                                            l5464 35BA  
                                          l5456 35AA                                            l5448 3594  
                                          l6088 30E8                                            l5296 3570  
                                          l5376 2D5C                                            l5392 2172  
                                          l5384 3106                                            l4920 33F8  
                                          l5704 11E6                                            l5640 0F36  
                                          l5632 0F06                                            l5624 0E42  
                                          l5616 0DDA                                            l5608 0D50  
                                          l5560 0A78                                            l5536 097A  
                                          l5720 2F38                                            l5712 2ED2  
                                          l4658 37EE                                            l5730 384C  
                                          l4914 16BA                                            l4906 16A2  
                                          l4842 14AE                                            l4850 1504  
                                          l4834 1476                                            l4826 144A  
                                          l4818 1418                                            l4770 131C  
                                          l4762 130C                                            l4754 12D4  
                                          l4746 12A2                                            l4738 128A  
                                          l4682 3282                                            l4674 3272  
                                          l5474 2FD0                                            l5482 308A  
                                          l5466 35BC                                            l5458 35B0  
                                          l5298 3580                                            l5394 2192  
                                          l5386 3114                                            l4690 2D86  
                                          l4922 3406                                            l5706 11EE  
                                          l5650 0FE8                                            l5642 0F3C  
                                          l5634 0F1A                                            l5626 0E76  
                                          l5618 0DF0                                            l5570 0B38  
                                          l5562 0AAA                                            l5554 0A00  
                                          l5538 0980                                            l5490 082A  
                                          l5714 2EF4                                            l5722 2F40  
                                          l5802 253A                                            l5724 3860  
                                          l4908 16A4                                            l4860 1558  
                                          l4852 152A                                            l4844 14E2  
                                          l4836 1478                                            l4828 1458  
                                          l4780 1330                                            l4772 1320  
                                          l4764 1310                                            l4748 12B2  
                                          l4756 12DC                                            l4684 3284  
                                          l4676 3274                                            l5476 2FE0  
                                          l5468 2F72                                            l5484 3096  
                                          l5740 3162                                            l5900 35E4  
                                          l4940 3304                                            l4932 32EA  
                                          l5732 3874                                            l5396 21EA  
                                          l5388 3128                                            l4692 2D90  
                                          l4924 340A                                            l5660 102C  
                                          l5652 1004                                            l5644 0F44  
                                          l5628 0ECC                                            l5636 0F1E  
                                          l5580 0BCE                                            l5564 0AE8  
                                          l5556 0A06                                            l5548 09A0  
                                          l5492 083A                                            l5716 2EFC  
                                          l5804 2566                                            l5726 3856  
                                          l5830 348C                                            l4870 1582  
                                          l4862 1566                                            l4854 153A  
                                          l4846 14E4                                            l4838 1482  
                                          l4790 1344                                            l4782 1334  
                                          l4774 1324                                            l4766 1314  
                                          l4758 12EC                                            l5910 27F0  
                                          l5902 2776                                            l4678 327A  
                                          l5486 30A6                                            l5478 304C  
                                          l5750 3188                                            l4950 3320  
                                          l4942 3306                                            l4934 32EE  
                                          l4926 32DE                                            l5398 21FE  
                                          l4694 2DAC                                            l4686 2D66  
                                          l4918 33EC                                            l5662 1034  
                                          l5654 1012                                            l5670 1054  
                                          l5646 0F50                                            l5638 0F2E  
                                          l5590 0C02                                            l5582 0BD6  
                                          l5566 0AFC                                            l5574 0B78  
                                          l5558 0A3A                                            l5494 0848  
                                          l5718 2F18                                            l5728 386A  
                                          l5832 3498                                            l5840 3656  
                                          l4880 15B4                                            l4872 1592  
                                          l4864 1568                                            l4848 14F4  
                                          l4792 1348                                            l4784 1338  
                                          l4776 1328                                            l4768 1318  
                                          l5920 284A                                            l5904 2786  
                                          l5752 318C                                            l5736 315C  
                                          l4944 3308                                            l4936 32F0  
                                          l4696 2DDE                                            l4688 2D76  
                                          l5680 10DA                                            l5672 1066  
                                          l5664 1044                                            l5656 1022  
                                          l5648 0FC8                                            l5592 0C1A  
                                          l5584 0BDE                                            l5576 0BB2  
                                          l5568 0B30                                            l5496 084C  
                                          l5488 0824                                            l5760 23B4  
                                          l5808 2574                                            l5834 34A4  
                                          l5826 346C                                            l5842 36FA  
                                          l5850 366E                                            l4890 160E  
                                          l4882 15CA                                            l4866 1576  
                                          l4858 154E                                            l4874 1594  
                                          l4786 133C                                            l4778 132C  
                                          l4794 134C                                            l5930 28AE  
                                          l5922 284C                                            l5914 2804  
                                          l5906 2794                                            l4970 3464  
                                          l4954 342C                                            l5754 31A8  
                                          l5746 316A                                            l5738 3162  
                                          l4946 330E                                            l4938 32F6  
                                          l5690 1154                                            l5682 110E  
                                          l5674 1078                                            l5666 1048  
                                          l5658 1026                                            l5594 0C2C  
                                          l5586 0BE2                                            l5578 0BC2  
                                          l5498 0870                                            l5770 2402  
                                          l5762 23C0                                            l5844 3828  
                                          l5828 3480                                            l5836 387C  
                                          l5852 3670                                            l5860 34E8  
                                          l4892 1648                                            l4868 157E  
                                          l4876 15A2                                            l4796 1350  
                                          l4788 1340                                            l5940 2906  
                                          l5932 28CC                                            l5924 2858  
                                          l5916 280C                                            l5908 27DA  
                                          l4964 343A                                            l4956 342E  
                                          l4972 3816                                            l5748 3172  
                                          l4948 3310                                            l5692 115C  
                                          l5684 1116                                            l5676 107C  
                                          l5668 104E                                            l5588 0BF4  
                                          l5596 0C34                                            l5772 240E  
                                          l5764 23C4                                            l5756 2388  
                                          l5838 362C                                            l5854 3672  
                                          l5846 365A                                            l5862 34FA  
                                          l4990 1B22                                            l4982 1AF6  
                                          l4886 15F4                                            l4894 164A  
                                          l4878 15A6                                            l4798 137A  
                                          l5942 2914                                            l5934 28CE  
                                          l5926 2894                                            l5918 2818  
                                          l4974 37A8                                            l4966 3450  
                                          l4958 3436                                            l5870 378E  
                                          l5694 116A                                            l5678 1082  
                                          l5686 111A                                            l5598 0C3C  
                                          l5774 2420                                            l5782 2436  
                                          l5766 23E6                                            l5758 23AC  
                                          l5950 3372                                            l5960 3688  
                                          l5856 367E                                            l5848 3666  
                                          l5864 34FC                                            l4992 1B32  
                                          l4984 1B02                                            l4896 165A  
                                          l4888 1600                                            l5944 2916  
                                          l5936 28D2                                            l5928 28A0  
                                          l4968 3452                                            l5872 3790  
                                          l5696 119A                                            l5688 1138  
                                          l4976 36D4                                            l5792 24D8  
                                          l5776 2426                                            l5784 2468  
                                          l5768 23EE                                            l5952 3384  
                                          l5970 3600                                            l5962 3696  
                                          l5858 37D6                                            l5866 350C  
                                          l4994 1B42                                            l4986 1B10  
                                          l4898 166A                                            l5938 28F6  
                                          l5890 3734                                            l5882 371A  
                                          l5874 379C                                            l5698 11A8  
                                          l4978 36F0                                            l5794 2502  
                                          l5786 2488                                            l5778 242E  
                                          l5954 33A0                                            l5972 360E  
                                          l5964 36A4                                            l5980 3740  
                                          l4996 1B44                                            l4988 1B12  
                                          l5884 372E                                            l5876 379E  
                                          l5796 2510                                            l5788 24B0  
                                          l5948 336A                                            l5974 3612  
                                          l5958 3684                                            l5982 3744  
                                          l4998 1B4C                                            l5894 35C8  
                                          l5878 37A4                                            l5990 37C0  
                                          l5968 35FC                                            l5984 3748  
                                          l5976 3738                                            l5896 35CC  
                                          l5986 374C                                            l5978 373C  
                                          l5994 2598                                            l5898 35CE  
                                          l5988 3750                                            l5996 25C6  
                                          l5998 25D4                                            STR_1 080F  
                                          STR_2 081B                                            STR_5 081F  
                                          _LATA 0F89                                            _LATB 0F8A  
                                          _LATC 0F8B                                            u5000 1D64  
                                          u5001 1D60                                            u5010 1D92  
                                          u5011 1D8E                                            u5020 1DA8  
                                          u5100 1708                                            u5021 1DA4  
                                          u5101 1704                                            u5030 1DBC  
                                          u5110 1748                                            u5031 1DB8  
                                          u5111 1744                                            u5040 1DD6  
                                          u5200 19E4                                            u5120 175A  
                                          u4400 2DAC                                            u6000 23AC  
                                          u5041 1DD2                                            u5201 19E0  
                                          u5121 1756                                            u4401 2DA8  
                                          u6001 23A8                                            u5050 1E1E  
                                          u5210 19FA                                            u5130 176A  
                                          u4410 2DDE                                            u6010 23E6  
                                          u5051 1E1A                                            u5211 19F6  
                                          u5131 1766                                            u4411 2DDA  
                                          u6011 23E2                                            u5060 1E4E  
                                          u5300 2B92                                            u5220 1A0E  
                                          u5140 17A0                                            u4500 130C  
                                          u4420 1226                                            u6100 2890  
                                          u6020 2484                                            u5061 1E4A  
                                          u5301 2B8E                                            u5221 1A0A  
                                          u5141 179C                                            u4501 1308  
                                          u4421 1222                                            u6101 288C  
                                          u6021 2480                                            u4350 37FC  
                                          u6030 3718                                            u5070 1E7C  
                                          u5310 2BD0                                            u5230 1A28  
                                          u5150 17B0                                            u4510 137A  
                                          u4430 1238                                            u6110 28AE  
                                          u4351 37F8                                            u6031 3714  
                                          u5071 1E78                                            u5311 2BCC  
                                          u5231 1A24                                            u5151 17AC  
                                          u4511 1376                                            u4431 1234  
                                          u6111 28AA                                            u6040 350C  
                                          u5320 2BEE                                            u5240 1A70  
                                          u5160 192A                                            u5080 16E6  
                                          u4600 1458                                            u4520 1392  
                                          u4440 1248                                            u6120 28BE  
                                          u6200 26A4                                            u4360 3266  
                                          u5400 2B12                                            u6041 3508  
                                          u5321 2BEA                                            u5241 1A6C  
                                          u5081 16E2                                            u4601 1454  
                                          u4521 138C                                            u4441 1244  
                                          u6121 28BA                                            u6201 26A0  
                                          u4361 3262                                            u5401 2B0E  
                                          u5330 2C0E                                            u5250 1A9E  
                                          u5170 1984                                            u5090 16F8  
                                          u4610 1476                                            u4530 1394  
                                          u4450 128A                                            u6130 28CC  
                                          u6210 26E6                                            u4370 3294  
                                          u6050 372E                                            u5410 2B32  
                                          u5331 2C0A                                            u5251 1A9A  
                                          u5171 1980                                            u5091 16F4  
                                          u4611 1472                                            u4451 1286  
                                          u6131 28C8                                            u6211 26E2  
                                          u4371 3290                                            u6051 372A  
                                          u5411 2B2E                                            u5340 2C5E  
                                          u5260 1AD8                                            u5180 19A4  
                                          u4700 15B4                                            u4620 14AE  
                                          u4540 13BC                                            u4460 12A0  
                                          u6140 2906                                            u6060 2786  
                                          u6220 271A                                            u5420 2B42  
                                          u5500 2D52                                            u4380 2D76  
                                          u6300 205C                                            u5341 2C5A  
                                          u5261 1AD4                                            u5181 19A0  
                                          u5165 1920                                            u4701 15B0  
                                          u4621 14AA                                            u4541 13B8  
                                          u4461 129C                                            u6141 2902  
                                          u6061 2782                                            u6221 2716  
                                          u5421 2B3E                                            u5501 2D4C  
                                          u4381 2D72                                            u6301 2058  
                                          u5190 19B6                                            u4710 15CA  
                                          u4630 14F4                                            u4550 13DA  
                                          u4470 12B2                                            u6150 2914  
                                          u6070 2794                                            u5270 2E4E  
                                          u5350 3570                                            u5510 2D54  
                                          u4390 2D86                                            u5430 2FF2  
                                          u6310 209C                                            u6230 1EC2  
                                          u5191 19B2                                            u4711 15C6  
                                          u4631 14F0                                            u4551 13D6  
                                          u4471 12AE                                            u6151 2910  
                                          u6071 2790                                            u5271 2E4A  
                                          u5351 356C                                            u4391 2D82  
                                          u5431 2FEE                                            u6311 2098  
                                          u6231 1EBE                                            u4800 16B8  
                                          u4720 15E0                                            u4640 152A  
                                          u4560 13FA                                            u4480 12C2  
                                          u6080 27F0                                            u5280 2E8C  
                                          u5360 2A74                                            u5600 22BA  
                                          u5440 3038                                            u5520 34E4  
                                          u6160 33A0                                            u6320 20CE  
                                          u6240 1F0A                                            u4801 16B4  
                                          u4721 15DC                                            u4641 1526  
                                          u4561 13F6                                            u4481 12BE  
                                          u6081 27EC                                            u5281 2E88  
                                          u5361 2A70                                            u5601 22B6  
                                          u5441 3034                                            u5521 34E0  
                                          u6161 339C                                            u6321 20CA  
                                          u6241 1F06                                            u6170 3696  
                                          u4730 15F4                                            u4650 153A  
                                          u4570 1408                                            u4490 12FE  
                                          u6090 2846                                            u5290 2EC0  
                                          u5370 2AA8                                            u5450 2CA8  
                                          u5610 230E                                            u5530 3114  
                                          u4810 342A                                            u6330 20F8  
                                          u6250 1F64                                            u6171 3692  
                                          u4731 15F0                                            u4651 1536  
                                          u4571 1404                                            u4491 12FA  
                                          u6091 2842                                            u5291 2EBC  
                                          u5531 3110                                            u4811 3426  
                                          u6331 20F4                                            u6251 1F60  
                                          u6180 36A4                                            u4900 1B98  
                                          u4740 160E                                            u4660 1566  
                                          u4580 1418                                            u4820 3304  
                                          u5380 2AD6                                            u5460 2CC6  
                                          u5620 232A                                            u5540 21BA  
                                          u5700 0964                                            u6340 2138  
                                          u6260 1F96                                            u6420 2A28  
                                          u6181 36A0                                            u4901 1B94  
                                          u4741 160A                                            u4661 1562  
                                          u4581 1414                                            u4821 3300  
                                          u5381 2AD2                                            u5461 2CC2  
                                          u5621 2326                                            u5701 0960  
                                          u6341 2134                                            u6261 1F92  
                                          u6421 2A24                                            u6190 362A  
                                          u4910 1BD8                                            u4750 1648  
                                          u4670 1576                                            u4590 144A  
                                          u4830 3320                                            u5390 2AEA  
                                          u5470 2CEE                                            u5630 2366  
                                          u5550 21EA                                            u5710 0976  
                                          u6350 2162                                            u6270 1FC0  
                                          u6191 3626                                            u4911 1BD4  
                                          u4751 1644                                            u4671 1572  
                                          u4591 1446                                            u4831 331C  
                                          u5391 2AE6                                            u5375 2A9E  
                                          u5471 2CEA                                            u5455 2C9E  
                                          u5631 2362                                            u5615 2304  
                                          u5551 21E6                                            u5711 0972  
                                          u6351 215E                                            u6271 1FBC  
                                          u4920 1C18                                            u4760 165A  
                                          u4680 1592                                            u4840 3462  
                                          u6360 30BE                                            u5480 2D18  
                                          u5560 220C                                            u5640 31FE  
                                          u5800 0C02                                            u5720 09EC  
                                          u6280 2000                                            u4921 1C14  
                                          u4761 1656                                            u4681 158E  
                                          u4841 345E                                            u6361 30BA  
                                          u5481 2D14                                            u5561 2208  
                                          u5545 21B0                                            u5641 31FA  
                                          u5801 0BFE                                            u5721 09E8  
                                          u6281 1FFC                                            u4930 1C8E  
                                          u4850 1B10                                            u4770 166A  
                                          u4690 15A2                                            u6370 30D6  
                                          u5810 0C2C                                            u5730 0A78  
                                          u5650 0848                                            u6290 2032  
                                          u4931 1C8A                                            u4851 1B0C  
                                          u4771 1666                                            u4691 159E  
                                          u6507 330A                                            u6371 30D2  
                                          u5811 0C28                                            u5731 0A74  
                                          u5651 0844                                            u6291 202E  
                                          u4940 1CB0                                            u4860 1B22  
                                          u4780 168A                                            u6380 30FA  
                                          u5580 227A                                            u5900 1012  
                                          u5820 0D74                                            u5740 0AAA  
                                          u5660 0892                                            u4941 1CAC  
                                          u4861 1B1E                                            u4781 1686  
                                          u6517 35D8                                            u6381 30F6  
                                          u5581 2276                                            u5901 100E  
                                          u5821 0D70                                            u5741 0AA6  
                                          u5661 088E                                            u6437 2954  
                                          u4950 1CDA                                            u4870 1B32  
                                          u4790 169C                                            u5590 229E  
                                          u5910 1066                                            u5830 0DDA  
                                          u5750 0AE8                                            u5670 08A2  
                                          u4951 1CD6                                            u4871 1B2E  
                                          u4791 1698                                            u6527 35EE  
                                          u5495 2D2A                                            u5575 2220  
                                          u5911 1062                                            u5831 0DD6  
                                          u5751 0AE4                                            u5671 089E  
                                          u6447 2970                                            u4960 1CFE  
                                          u4880 1B76                                            u5576 222A  
                                          u5920 1138                                            u5840 0E22  
                                          u5760 0B74                                            u5680 08E0  
                                          u4961 1CFA                                            u4881 1B72  
                                          u6537 317C                                            u5577 223A  
                                          u5921 1134                                            u5841 0E1E  
                                          u5761 0B70                                            u5681 08DC  
                                          u6457 2A48                                            u4970 1D14  
                                          u4890 1B88                                            u5930 1154  
                                          u5850 0E32                                            u5770 0BAA  
                                          u5690 08F2                                            u4971 1D10  
                                          u4891 1B84                                            u6547 35B6  
                                          u5595 2294                                            u5931 1150  
                                          u5851 0E2E                                            u5771 0BA6  
                                          u5691 08EE                                            u6467 1F26  
                                          u4980 1D32                                            u5940 11BA  
                                          u5860 0ECC                                            u5780 0BC2  
                                          u4981 1D2E                                            u6557 3466  
                                          u6477 37A0                                            u5941 11B4  
                                          u5861 0EC8                                            u5781 0BBE  
                                          u4990 1D52                                            u5950 11BC  
                                          u5870 0F1A                                            u5790 0BF4  
                                          u4991 1D4E                                            u6567 3788  
                                          u6487 376A                                            u5871 0F16  
                                          u5791 0BF0                                            u5960 11D0  
                                          u5880 0FC8                                            u6577 3810  
                                          u6497 32F2                                            u5961 11CC  
                                          u5881 0FC4                                            u5890 1004  
                                          u5970 2EF4                                            u6587 3276  
                                          u5891 1000                                            u5971 2EF0  
                                          u5980 2F66                                            u6597 327E  
                                          u5981 2F62                                            u5990 31A8  
                                          u5991 31A4                                            _TMR1 0FCE  
                                          _WPUB 0F85                                   _EUSART1_Write 37EC  
                                          _dbuf 0104                         __end_of_CCP2_Initialize 3836  
                                          _labs 3106                                            _main 2928  
                                          _prec 00E3                                            pad@i 001B  
                                          pad@p 0018                                            fsr1h 0FE2  
                                          fsr2h 0FDA                                            indf2 0FDF  
                                          fsr1l 0FE1                                            fsr2l 0FD9  
                                          btemp 005B                                   ___fpclassifyf 2C68  
                                          prodh 0FF4                                            prodl 0FF3  
                                          start 004C                                 ___fldiv@new_exp 0045  
                              nrf2401_write@reg 0008                      ??_TMR1_SetInterruptHandler 0007  
                                  ?_flush_TX_RX 0001                                    ___param_bank 0000  
                                ??_confirmacion 0010                                           ??_pad 001A  
               __end_of_nrf2401_direccion_TX_RX 346C                       get_corriente_AC@corriente 0062  
                 __end_of_OSCILLATOR_Initialize 371A                                   ___fltol@sign1 000D  
                                         ?_labs 0005                                 __end_of___fladd 16CC  
                                         ?_main 0001                                 __end_of___fldiv 1E90  
                               __end_of___flneg 3592                                 __end_of___flmul 1AF6  
                               __end_of___flsub 336A                                 __end_of___fltol 2B64  
                          nrf2401_recibe@valor_ 0007                    __end_of_EUSART1_Write_string 362C  
                                         _T1CON 0FCD                                           _LATA5 7C4D  
                                         i2l304 3880                                           i2l232 0040  
                                         i2l294 3558                                           i2l279 36D2  
                                         i2l298 32DC                                    vfpfcnvrt@fmt 009F  
                                         _TMR1H 0FCF                                           _TMR1L 0FCE  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                                           _I_max 00D5  
                                         _I_min 00D1                                           _I_rms 0100  
                              __end_of_TMR1_ISR 355A                                           _flags 00FD  
                           read_prec_or_width@c 000D                             read_prec_or_width@n 000E  
                                         _fputc 2D66                                           _fputs 33EC  
                                         _valor 00ED                                           labs@a 0005  
                                         pad@fp 0015                                           _width 00E1  
                                         _putch 3842                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 3684                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 0FD8  
                                         wtemp8 005C                                 __end_of_sprintf 33EC  
                                ?___fpclassifyf 0005              _EUSART1_DefaultFramingErrorHandler 0000  
                               _TMR1_WriteTimer 36AC                                 __initialization 3200  
                                  __end_of_labs 315C                      __end_of_EUSART1_Initialize 34AC  
                                  __end_of_main 2A5E                                spi_s_read@cont_s 0006  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_labs 0009  
                                        ??_main 016E                                   __activetblptr 0002  
                       __end_of_nrF2401_init_RX 2FE4                         __end_of_nrF2401_init_TX 30AA  
                    __end_of_read_prec_or_width 2F70                            __end_of_nrf2401_read 3772  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0007  
                                        _ACTCON 0FB5                                          ?_fputs 000F  
                                        _ADRESH 0FC4                                          _ADRESL 0FC3  
                                        _CCPR2H 0F91                                          _CCPR2L 0F90  
                                        _ANSELA 0F5B                                          ?_putch 0001  
                                        _ANSELB 0F5C                                          _ANSELC 0F5D  
                                        _T1GCON 0FCC                         TMR1_WriteTimer@timerVal 0001  
                          __end_of_direccion_rx 0806                            __end_of_direccion_tx 080F  
                                        i2l4410 354A                                          i2l4260 36C0  
                                        i2l4412 354E                                          i2l4404 3520  
                                        i2l4270 32C2                                          i2l4262 36C4  
                                        i2l4254 36AC                                          i2l4406 3522  
                                        i2l4256 36BA                                          i2l4264 36CA  
                                        i2l4408 352E                                          i2l4266 36CE  
                                        i2l4258 36BC                                          i2l4530 003C  
                                        i2l4268 3296                                          i2l4524 0012  
                                        i2l4526 0020                                          i2l4528 002E  
                                        _RCREG1 0FAE                                          _RCSTA1 0FAB  
                                        _OSCCON 0FD3                                          _PLLRDY 7E97  
                                        _SPBRG1 0FAF                                ?_CCP2_Initialize 0001  
                                        _TXREG1 0FAD                                __end_of___xxtofl 2928  
                                        _TXSTA1 0FAC            __end_of_TMR1_DefaultInterruptHandler 3882  
                  _TMR1_DefaultInterruptHandler 3880                                    vfprintf@cfmt 00AC  
                                        ___flge 2B64                                          ___fleq 2E20  
                               _nrf2401_comando 3802                                       ??___fladd 000D  
                                        ___wmul 36D4                                       ??___fldiv 003C  
                                     ??___flneg 0009                                       ??___flmul 001B  
                                     ??___flsub 0034                                       ??___fltol 0009  
                                        _efgtoa 0824                                __end_of_flush_TX 3828  
                                        _conteo 00DD                        ?_EUSART1_SetErrorHandler 0005  
                                        _floorf 2172                                          _memcpy 31B0  
                          read_prec_or_width@ap 000C                                          _offset 0162  
                                        clear_0 3226                                          clear_1 3232  
                                        isa$std 0001                                          pad@buf 0016  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strcpy 34AC                                          fputc@c 0007  
                                        fputs@c 0012                                          fputs@i 0013  
                                        fputs@s 000F                                 ___fpclassifyf@e 000D  
                               ___fpclassifyf@u 000F                                 ___fpclassifyf@x 0005  
                                  __mediumconst 0000                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                      ADC_GetConversion@channel 0009                                __end_of_vfprintf 33AC  
                               ??_EUSART1_Write 0005        TMR1_SetInterruptHandler@InterruptHandler 0005  
                                     ??_sprintf 0057                         __end_of_TMR1_WriteTimer 36D4  
                          __end_of_confirmacion 35FC                           __end_of_TMR1_CallBack 32DE  
                                    ___flge@ff1 002C                                      ___flge@ff2 0030  
                               ??___fpclassifyf 0009                                ?_TMR1_Initialize 0001  
                                  ___xxtofl@arg 000F                                    ___xxtofl@exp 000E  
                             _SYSTEM_Initialize 3738                                    ___xxtofl@val 0005  
                                    ___fleq@ff1 0005                                      ___fleq@ff2 0009  
                          nrF2401_init_RX@canal 000B                                      __accesstop 0060  
                       __end_of__initialization 3240                                      ___flneg@f1 0005  
                          nrF2401_init_TX@canal 000B                                    ?_spi_s_write 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 0001  
                                    ___fltol@f1 0005                            _EUSART1_Write_string 35FC  
                            nrf2401_write@valor 0007                                  __pcstackCOMRAM 0001  
                                  __pidataBANK1 3836                             ??_SYSTEM_Initialize 0007  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 2E20  
                                 __end_of_fputs 342C                                   __end_of_putch 384C  
                              ?_nrF2401_init_RX 0001                                ?_nrF2401_init_TX 0001  
                                       ??_fputc 000A                       __end_of_SYSTEM_Initialize 3756  
                                       ??_fputs 0012                                         ??_putch 0006  
                                    __pbssBANK0 00C1                                      __pbssBANK1 0100  
                       __end_of_nrf2401_comando 3816                           ?_EUSART1_Write_string 0006  
                              _get_corriente_AC 2598                           __end_of_nrf2401_envia 35C8  
               __end_of_EUSART1_SetErrorHandler 3874                          nrf2401_comando@comando 0007  
                         __end_of_nrf2401_write 378E                                         ?___flge 002C  
                                       ?___fleq 0005                                         ?___wmul 0005  
                                    ??_TMR1_ISR 0003                                         ?_efgtoa 006A  
                                       _CCP2CON 0F97                                         ?_floorf 004D  
                                       ?_memcpy 0005                                         ?_strcpy 0005  
        __end_of_EUSART1_SetFramingErrorHandler 386A                  _EUSART1_SetFramingErrorHandler 3860  
                                    _get_Status 3874                                       ?___xxtofl 0005  
                                       _OSCCON2 0FD2                        ?_nrf2401_direccion_TX_RX 0007  
                                       _OSCTUNE 0F9B                                         _SPBRGH1 0FB0  
                 nrf2401_direccion_TX_RX@cont_s 000A                                ?_TMR1_WriteTimer 0001  
                                     ?_flush_TX 0001                            _ADC_InterruptHandler 00F5  
                                       __Hparam 0000                                         __Lparam 0000  
                                  _nrf2401_read 3756                                         ___fladd 120C  
                                       ___fldiv 1AF6                                         ___flneg 355A  
                                       ___flmul 16CC                                         ___flsub 3324  
                                       ___fltol 2A5E                                _nrf2401_haydatos 371A  
                                     ?_vfprintf 00A9                                    __psmallconst 0800  
                                    _currentSeg 00CD                                    _direccion_rx 0801  
                                  _direccion_tx 080A                                         __pcinit 3200  
                                       __ramtop 0800                             _EUSART1_is_tx_ready 3684  
                                       __ptext0 2928                                         __ptext1 1E90  
                                       __ptext2 33AC                                         __ptext3 336A  
                                       __ptext4 2388                                         __ptext5 2ECA  
                                       __ptext6 36D4                                         __ptext7 0824  
                                       __ptext8 34AC                                         __ptext9 2FE4  
                ??_TMR1_DefaultInterruptHandler 0001                                       _T1CONbits 0FCD  
                              spi_s_write@dato_ 0005                           _OSCILLATOR_Initialize 36FA  
                                    _recibido_1 30AA                           read_prec_or_width@fmt 000B  
                                    ??___xxtofl 0009                              _EUSART1_Initialize 346C  
                      ??_PIN_MANAGER_Initialize 0005                       ?_TMR1_SetInterruptHandler 0005  
                                       efgtoa@c 006F                                         efgtoa@d 007D  
                                       efgtoa@e 0081                                         efgtoa@f 006B  
                                       efgtoa@g 0094                                         efgtoa@h 008B  
                                       efgtoa@i 0089                                         efgtoa@l 008F  
                                       efgtoa@m 007F                                         efgtoa@n 0098  
                                       efgtoa@p 0074                                         efgtoa@t 0076  
                                       efgtoa@u 009A                                         efgtoa@w 0083  
                      EUSART1_Write_string@data 0006                               __end_of_intervalo 080A  
                                       _sprintf 33AC                                         _voltaje 00D9  
             nrf2401_direccion_TX_RX@direccion_ 0007                            end_of_initialization 3240  
                                       floorf@e 0064                                         floorf@m 0060  
                                       floorf@u 0066                                         floorf@x 004D  
                           ?_EUSART1_Initialize 0001                            ?_EUSART1_is_tx_ready 0001  
                                       memcpy@d 000C                                         memcpy@n 0009  
                                       memcpy@s 000E                                      ??_flush_TX 0009  
                                       fputc@fp 0009                          ??_EUSART1_Write_string 0008  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00F9  
                                       fputs@fp 0011                                ?_nrf2401_comando 0001  
                            _read_prec_or_width 2ECA                               __end_of_vfpfcnvrt 2598  
                                    efgtoa@mode 007B                                      efgtoa@sign 0093  
                                       postdec1 0FE5                                         postdec2 0FDD  
                           ?_read_prec_or_width 000B                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 00A3                                      ??_vfprintf 0057  
                          ??_EUSART1_Initialize 0007                                    _confirmacion 35C8  
                                       strcpy@d 0009                               _envio_ya_recibido 315C  
                                     _PORTBbits 0F81                                     ?_get_Status 0001  
                            ?_envio_ya_recibido 0001                                      _spi_s_init 37C0  
                                    _spi_s_read 32DE                                     ___fladd@grs 0014  
                                 ___xxtofl@sign 000D                                 nrf2401_read@reg 0007  
                                     _TRISBbits 0F93                                       _TRISCbits 0F94  
                          ??_read_prec_or_width 000D                                     ___fldiv@grs 0047  
                                   ___fldiv@rem 0040                             ??_envio_ya_recibido 000C  
                           _trip_protec_current 1E90                             EUSART1_Write@txData 0005  
                         ??_EUSART1_is_tx_ready 0005                                     ___flmul@grs 0021  
                          ?_trip_protec_current 0001                       __end_of_envio_ya_recibido 31B0  
                  __end_of_INTERRUPT_Initialize 3880                                  __end_of___flge 2C68  
                                __end_of___fleq 2ECA                                     vfpfcnvrt@ap 00A0  
                                   vfpfcnvrt@cp 00A8                                     vfpfcnvrt@fp 009E  
                                __end_of___wmul 36FA                                  __end_of_efgtoa 120C  
                                _ADC_Initialize 37D6                                  __end_of_floorf 2388  
                                __end_of_memcpy 3200                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F521 00C1                                     ?_recibido_1 0001  
                                __end_of_strcpy 34E6                             start_initialization 3200  
                      __end_of_get_corriente_AC 2774                              envio_ya_recibido@i 000E  
                                   __end_of_pad 304A                                 spi_s_read@dato_ 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 3802  
                         __end_of___fpclassifyf 2D66                                   ??_flush_TX_RX 0009  
                                   vfprintf@fmt 00AA                           ??_trip_protec_current 0038  
                                      ??___flge 0034                                        ??___fleq 000D  
                                _nrf2401_recibe 378E                                        ??___wmul 0009  
                                      ??_efgtoa 0070                          __end_of_ADC_Initialize 37EC  
                                   __pdataBANK1 0162                                        ??_floorf 0051  
                                      ??_memcpy 000B                                        ??_strcpy 0008  
                                     ___fladd@a 0009                                       ___fladd@b 0005  
                                   ?_spi_s_init 0001                                     ?_spi_s_read 0001  
                                     ___fldiv@a 0038                                       ___fldiv@b 0034  
                         TMR1_ISR@CountCallBack 00EF                                       ___flmul@a 0017  
                                     ___flmul@b 0013                                     __pbssCOMRAM 0057  
                                     ___flsub@a 0030                                       ___flsub@b 002C  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 016E  
                             get_corriente_AC@i 0060                        __end_of_nrf2401_haydatos 3738  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                                   _efgtoa$1982 0078                                       _main$2383 0170  
                        __end_of_nrf2401_recibe 37A8                          _PIN_MANAGER_Initialize 362C  
                       _EUSART1_is_tx_ready$282 0005                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 3856                                     _dato_serial 00FE  
                                      ?___fladd 0005                                        ?___fldiv 0034  
                                      ?___flneg 0005                                        ?___flmul 0013  
                                      ?___flsub 002C                                        ?___fltol 0005  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 0003  
                           __end_of_flush_TX_RX 37C0                                     __smallconst 0800  
                             ??_CCP2_Initialize 0005                 nrf2401_direccion_TX_RX@registro 0008  
                                      _BAUDCON1 0FB8              _EUSART1_DefaultOverrunErrorHandler 0000  
                          _EUSART1_ErrorHandler 00F7                         _EUSART1_SetErrorHandler 386A  
                                      ?_sprintf 00AD                            _INTERRUPT_Initialize 387C  
                                 _TMR1_CallBack 3296                                       _intervalo 0806  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _LATBbits 0F8A                                        _LATCbits 0F8B  
                                      _PIE1bits 0F9D                                        i2u430_40 003C  
                                      i2u430_41 0038                                 ?_nrf2401_recibe 0001  
                                      i2u408_40 354A                                        i2u408_41 3546  
                                      _PIR1bits 0F9E                                        i2u428_40 0020  
                                      i2u428_41 001C                                        i2u429_40 002E  
                                      i2u429_41 002A                                        i2u390_48 32C8  
                                      i2u390_49 32DC                                        i2u388_40 36BA  
                                      i2u388_41 36B6                                        i2u389_40 32C2  
                                      i2u389_41 32BE                                        _RCONbits 0FD0  
                                      _TMR1_ISR 3520                                       _vfpfcnvrt 2388  
                             ??_TMR1_Initialize 0007                                      _ADCON0bits 0FC2  
                             ___wmul@multiplier 0005                                    ??_get_Status 0009  
                                    vfpfcnvrt@c 00A7                                     _INTCON2bits 0FF1  
                                     copy_data0 3214                      get_corriente_AC@n_muestras 004D  
                         ?_INTERRUPT_Initialize 0001                                  ?_TMR1_CallBack 0001  
                          nrf2401_envia@dato_tx 0009                                   ??_spi_s_write 0005  
                                      __Hrparam 0000                              __end_of_get_Status 387C  
                             ??_nrF2401_init_RX 000B                               ??_nrF2401_init_TX 000B  
                                     memcpy@tmp 000B                                      vfprintf@ap 00AB  
                                      __Lrparam 0000                                      vfprintf@fp 00A9  
                             _ADC_GetConversion 34E6                                     _flush_TX_RX 37A8  
                                 _nrf2401_envia 3592                                   _nrf2401_write 3772  
                       ??_OSCILLATOR_Initialize 0005                              ?_ADC_GetConversion 0005  
                                    ?_vfpfcnvrt 009E                        _TMR1_SetInterruptHandler 384C  
                            ___fpclassifyf@F465 00C5                           _TMR1_InterruptHandler 00F1  
                     ??_EUSART1_SetErrorHandler 0007                                    ??_recibido_1 0012  
                   _EUSART1_DefaultErrorHandler 0000                             ??_ADC_GetConversion 0007  
                                    sprintf@fmt 00AF                                        ___xxtofl 2774  
                   __end_of_EUSART1_is_tx_ready 36AC                               ?_get_corriente_AC 004D  
                                      __ptext10 33EC                                        __ptext11 2D66  
                                      __ptext20 37C0                                        __ptext12 3842  
                                      __ptext21 30AA                                        __ptext13 31B0  
                                    _T1GCONbits 0FCC                                        __ptext30 3816  
                                      __ptext22 378E                                        __ptext14 3106  
                                      __ptext31 304A                                        __ptext23 371A  
                                      __ptext15 2172                                        __ptext40 3324  
                                      __ptext32 2F70                                        __ptext24 3874  
                                      __ptext16 2C68                                        __ptext41 120C  
                                      __ptext33 342C                                        __ptext25 3756  
                                      __ptext17 2A5E                                        __ptext50 36FA  
                                      __ptext42 16CC                                        __ptext34 37A8  
                                      __ptext26 32DE                                        __ptext18 355A  
                                      __ptext51 387C                                        __ptext43 2B64  
                                      __ptext35 3772                                        __ptext27 35C8  
                                      __ptext19 2E20                                        __ptext60 37EC  
                                      __ptext52 346C                                        __ptext44 1AF6  
                                      __ptext36 3802                                        __ptext28 315C  
                                      __ptext53 3856                                        __ptext45 34E6  
                                      __ptext37 324E                                        __ptext29 3592  
                                      __ptext62 3520                                        __ptext54 3860  
                                      __ptext46 3738                                        __ptext38 2598  
                                      __ptext63 36AC                                        __ptext55 386A  
                                      __ptext47 365A                                        __ptext39 2774  
                                      __ptext64 3296                                        __ptext56 3828  
                                      __ptext48 384C                                        __ptext65 3880  
                                      __ptext57 37D6                                        __ptext49 362C  
                                      __ptext66 0000                                        __ptext58 3684  
                                      __ptext59 35FC                              ??_get_corriente_AC 0051  
                                    strcpy@dest 0005                                        _flush_TX 3816  
                             spi_s_write@cont_s 0006                         _nrf2401_direccion_TX_RX 342C  
                                _previousMillis 00C9                       __end_of_ADC_GetConversion 3520  
                                      _relacion 0166                                  ?_nrf2401_envia 0001  
                                      efgtoa@fp 006A                                        efgtoa@ne 0072  
                                      efgtoa@pp 007A                                        efgtoa@ou 0085  
                            __end_of_recibido_1 3106  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      isa$xinst 0000                                  ?_nrf2401_write 0007  
                           __end_of_spi_s_write 3296                                        int$flags 005B  
                                      _vfprintf 336A              __end_of_INTERRUPT_InterruptManager 004C  
                    _INTERRUPT_InterruptManager 0008                               ??_TMR1_WriteTimer 0003  
                   _EUSART1_FramingErrorHandler 00FB                                    _sensibilidad 016A  
                                  ??_spi_s_init 0005                                    ??_spi_s_read 0005  
                                    _INTCONbits 0FF2                                        memcpy@d1 0005  
                                      memcpy@s1 0007                          ??_INTERRUPT_Initialize 0005  
                               ??_TMR1_CallBack 0001                                        intlevel2 0000  
                                     sprintf@ap 00B4                               ?_nrf2401_haydatos 0001  
                                  _valor_string 0154                         ?_PIN_MANAGER_Initialize 0001  
                   __end_of_trip_protec_current 2172                              ??_nrf2401_haydatos 0009  
        __end_of_EUSART1_SetOverrunErrorHandler 3860                  _EUSART1_SetOverrunErrorHandler 3856  
                                     strcpy@src 0007                                      _RCSTA1bits 0FAB  
                              ??_ADC_Initialize 0005                                   ?_nrf2401_read 0001  
                            __end_of_spi_s_init 37D6                              __end_of_spi_s_read 3324  
                               _CCP2_Initialize 3828                                     efgtoa@nmode 007C  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                                     ??_vfpfcnvrt 00A1  
                            _eusart1RxLastError 00FF                                        sprintf@f 00B5  
                                      sprintf@s 00AD                               ??_nrf2401_comando 0007  
                                 ___fladd@signs 0011                       ??_nrf2401_direccion_TX_RX 0009  
                __end_of_PIN_MANAGER_Initialize 365A                                ??_nrf2401_recibe 0007  
                                  ___fladd@aexp 0012                                    ___fladd@bexp 0013  
                             nrf2401_read@dato_ 0008                                     _spi_s_write 324E  
                               ??_nrf2401_envia 0009                                 _TMR1_Initialize 365A  
                               ??_nrf2401_write 0008                                  ??_nrf2401_read 0007  
